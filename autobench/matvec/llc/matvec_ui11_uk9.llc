; ModuleID = 'codes/matvec_ui11_uk9.cpp'
source_filename = "codes/matvec_ui11_uk9.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui11_uk9.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 88
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 72
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1322, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1322
  %21 = phi i64 [ %1323, %1322 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %1322

68:                                               ; preds = %20
  %69 = zext i32 %66 to i64
  %70 = trunc i64 %21 to i32
  %71 = mul nsw i32 %66, %70
  br label %78

72:                                               ; preds = %78
  br i1 %67, label %73, label %543

73:                                               ; preds = %72
  %74 = trunc i64 %26 to i32
  %75 = mul nsw i32 %66, %74
  %76 = sext i32 %75 to i64
  %77 = zext i32 %66 to i64
  br label %243

78:                                               ; preds = %68, %78
  %79 = phi i64 [ 0, %68 ], [ %235, %78 ]
  %80 = getelementptr inbounds float, float* %5, i64 %79
  %81 = getelementptr inbounds float, float* %80, i64 8
  %82 = bitcast float* %81 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %82, i32 0, i32 1, i32 1)
  %83 = getelementptr inbounds float, float* %3, i64 %79
  %84 = getelementptr inbounds float, float* %83, i64 8
  %85 = bitcast float* %84 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %85, i32 0, i32 1, i32 1)
  %86 = getelementptr inbounds float, float* %80, i64 16
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %83, i64 16
  %89 = bitcast float* %88 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %89, i32 0, i32 1, i32 1)
  %90 = getelementptr inbounds float, float* %80, i64 24
  %91 = bitcast float* %90 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %91, i32 0, i32 1, i32 1)
  %92 = getelementptr inbounds float, float* %83, i64 24
  %93 = bitcast float* %92 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %93, i32 0, i32 1, i32 1)
  %94 = getelementptr inbounds float, float* %80, i64 32
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %83, i64 32
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %80, i64 40
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %83, i64 40
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %80, i64 48
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %83, i64 48
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %80, i64 56
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %83, i64 56
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %80, i64 64
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %83, i64 64
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %80, i64 72
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %83, i64 72
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %80, i64 80
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %83, i64 80
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %80, i64 88
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %83, i64 88
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = bitcast float* %80 to <8 x float>*
  %127 = load <8 x float>, <8 x float>* %126, align 1, !tbaa !12
  %128 = add nuw nsw i64 %79, 8
  %129 = getelementptr inbounds float, float* %5, i64 %128
  %130 = bitcast float* %129 to <8 x float>*
  %131 = load <8 x float>, <8 x float>* %130, align 1, !tbaa !12
  %132 = add nuw nsw i64 %79, 16
  %133 = getelementptr inbounds float, float* %5, i64 %132
  %134 = bitcast float* %133 to <8 x float>*
  %135 = load <8 x float>, <8 x float>* %134, align 1, !tbaa !12
  %136 = add nuw nsw i64 %79, 24
  %137 = getelementptr inbounds float, float* %5, i64 %136
  %138 = bitcast float* %137 to <8 x float>*
  %139 = load <8 x float>, <8 x float>* %138, align 1, !tbaa !12
  %140 = add nuw nsw i64 %79, 32
  %141 = getelementptr inbounds float, float* %5, i64 %140
  %142 = bitcast float* %141 to <8 x float>*
  %143 = load <8 x float>, <8 x float>* %142, align 1, !tbaa !12
  %144 = add nuw nsw i64 %79, 40
  %145 = getelementptr inbounds float, float* %5, i64 %144
  %146 = bitcast float* %145 to <8 x float>*
  %147 = load <8 x float>, <8 x float>* %146, align 1, !tbaa !12
  %148 = add nuw nsw i64 %79, 48
  %149 = getelementptr inbounds float, float* %5, i64 %148
  %150 = bitcast float* %149 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = add nuw nsw i64 %79, 56
  %153 = getelementptr inbounds float, float* %5, i64 %152
  %154 = bitcast float* %153 to <8 x float>*
  %155 = load <8 x float>, <8 x float>* %154, align 1, !tbaa !12
  %156 = add nuw nsw i64 %79, 64
  %157 = getelementptr inbounds float, float* %5, i64 %156
  %158 = bitcast float* %157 to <8 x float>*
  %159 = load <8 x float>, <8 x float>* %158, align 1, !tbaa !12
  %160 = add nuw nsw i64 %79, 72
  %161 = getelementptr inbounds float, float* %5, i64 %160
  %162 = bitcast float* %161 to <8 x float>*
  %163 = load <8 x float>, <8 x float>* %162, align 1, !tbaa !12
  %164 = add nuw nsw i64 %79, 80
  %165 = getelementptr inbounds float, float* %5, i64 %164
  %166 = bitcast float* %165 to <8 x float>*
  %167 = load <8 x float>, <8 x float>* %166, align 1, !tbaa !12
  %168 = trunc i64 %79 to i32
  %169 = add nsw i32 %71, %168
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds float, float* %3, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = add nsw i32 %169, 8
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds float, float* %3, i64 %175
  %177 = bitcast float* %176 to <8 x float>*
  %178 = load <8 x float>, <8 x float>* %177, align 1, !tbaa !12
  %179 = add nsw i32 %169, 16
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds float, float* %3, i64 %180
  %182 = bitcast float* %181 to <8 x float>*
  %183 = load <8 x float>, <8 x float>* %182, align 1, !tbaa !12
  %184 = add nsw i32 %169, 24
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds float, float* %3, i64 %185
  %187 = bitcast float* %186 to <8 x float>*
  %188 = load <8 x float>, <8 x float>* %187, align 1, !tbaa !12
  %189 = add nsw i32 %169, 32
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds float, float* %3, i64 %190
  %192 = bitcast float* %191 to <8 x float>*
  %193 = load <8 x float>, <8 x float>* %192, align 1, !tbaa !12
  %194 = add nsw i32 %169, 40
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds float, float* %3, i64 %195
  %197 = bitcast float* %196 to <8 x float>*
  %198 = load <8 x float>, <8 x float>* %197, align 1, !tbaa !12
  %199 = add nsw i32 %169, 48
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds float, float* %3, i64 %200
  %202 = bitcast float* %201 to <8 x float>*
  %203 = load <8 x float>, <8 x float>* %202, align 1, !tbaa !12
  %204 = add nsw i32 %169, 56
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds float, float* %3, i64 %205
  %207 = bitcast float* %206 to <8 x float>*
  %208 = load <8 x float>, <8 x float>* %207, align 1, !tbaa !12
  %209 = add nsw i32 %169, 64
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds float, float* %3, i64 %210
  %212 = bitcast float* %211 to <8 x float>*
  %213 = load <8 x float>, <8 x float>* %212, align 1, !tbaa !12
  %214 = add nsw i32 %169, 72
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds float, float* %3, i64 %215
  %217 = bitcast float* %216 to <8 x float>*
  %218 = load <8 x float>, <8 x float>* %217, align 1, !tbaa !12
  %219 = add nsw i32 %169, 80
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds float, float* %3, i64 %220
  %222 = bitcast float* %221 to <8 x float>*
  %223 = load <8 x float>, <8 x float>* %222, align 1, !tbaa !12
  %224 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %173, <8 x float> %25, <8 x float> %127) #10
  %225 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %178, <8 x float> %25, <8 x float> %131) #10
  %226 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %183, <8 x float> %25, <8 x float> %135) #10
  %227 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %188, <8 x float> %25, <8 x float> %139) #10
  %228 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %193, <8 x float> %25, <8 x float> %143) #10
  %229 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %198, <8 x float> %25, <8 x float> %147) #10
  %230 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %203, <8 x float> %25, <8 x float> %151) #10
  %231 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %208, <8 x float> %25, <8 x float> %155) #10
  %232 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %213, <8 x float> %25, <8 x float> %159) #10
  %233 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %218, <8 x float> %25, <8 x float> %163) #10
  %234 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %223, <8 x float> %25, <8 x float> %167) #10
  store <8 x float> %224, <8 x float>* %126, align 1, !tbaa !12
  store <8 x float> %225, <8 x float>* %130, align 1, !tbaa !12
  store <8 x float> %226, <8 x float>* %134, align 1, !tbaa !12
  store <8 x float> %227, <8 x float>* %138, align 1, !tbaa !12
  store <8 x float> %228, <8 x float>* %142, align 1, !tbaa !12
  store <8 x float> %229, <8 x float>* %146, align 1, !tbaa !12
  store <8 x float> %230, <8 x float>* %150, align 1, !tbaa !12
  store <8 x float> %231, <8 x float>* %154, align 1, !tbaa !12
  store <8 x float> %232, <8 x float>* %158, align 1, !tbaa !12
  store <8 x float> %233, <8 x float>* %162, align 1, !tbaa !12
  store <8 x float> %234, <8 x float>* %166, align 1, !tbaa !12
  %235 = add nuw nsw i64 %79, 88
  %236 = icmp ult i64 %235, %69
  br i1 %236, label %78, label %72

237:                                              ; preds = %243
  br i1 %67, label %238, label %543

238:                                              ; preds = %237
  %239 = trunc i64 %31 to i32
  %240 = mul nsw i32 %66, %239
  %241 = sext i32 %240 to i64
  %242 = zext i32 %66 to i64
  br label %396

243:                                              ; preds = %73, %243
  %244 = phi i64 [ 0, %73 ], [ %388, %243 ]
  %245 = getelementptr inbounds float, float* %5, i64 %244
  %246 = getelementptr inbounds float, float* %245, i64 8
  %247 = bitcast float* %246 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %247, i32 0, i32 1, i32 1)
  %248 = getelementptr inbounds float, float* %3, i64 %244
  %249 = getelementptr inbounds float, float* %248, i64 8
  %250 = bitcast float* %249 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %250, i32 0, i32 1, i32 1)
  %251 = getelementptr inbounds float, float* %245, i64 16
  %252 = bitcast float* %251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %252, i32 0, i32 1, i32 1)
  %253 = getelementptr inbounds float, float* %248, i64 16
  %254 = bitcast float* %253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %254, i32 0, i32 1, i32 1)
  %255 = getelementptr inbounds float, float* %245, i64 24
  %256 = bitcast float* %255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %256, i32 0, i32 1, i32 1)
  %257 = getelementptr inbounds float, float* %248, i64 24
  %258 = bitcast float* %257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %258, i32 0, i32 1, i32 1)
  %259 = getelementptr inbounds float, float* %245, i64 32
  %260 = bitcast float* %259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %260, i32 0, i32 1, i32 1)
  %261 = getelementptr inbounds float, float* %248, i64 32
  %262 = bitcast float* %261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %262, i32 0, i32 1, i32 1)
  %263 = getelementptr inbounds float, float* %245, i64 40
  %264 = bitcast float* %263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %264, i32 0, i32 1, i32 1)
  %265 = getelementptr inbounds float, float* %248, i64 40
  %266 = bitcast float* %265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %266, i32 0, i32 1, i32 1)
  %267 = getelementptr inbounds float, float* %245, i64 48
  %268 = bitcast float* %267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %268, i32 0, i32 1, i32 1)
  %269 = getelementptr inbounds float, float* %248, i64 48
  %270 = bitcast float* %269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %270, i32 0, i32 1, i32 1)
  %271 = getelementptr inbounds float, float* %245, i64 56
  %272 = bitcast float* %271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %272, i32 0, i32 1, i32 1)
  %273 = getelementptr inbounds float, float* %248, i64 56
  %274 = bitcast float* %273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %274, i32 0, i32 1, i32 1)
  %275 = getelementptr inbounds float, float* %245, i64 64
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %276, i32 0, i32 1, i32 1)
  %277 = getelementptr inbounds float, float* %248, i64 64
  %278 = bitcast float* %277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %278, i32 0, i32 1, i32 1)
  %279 = getelementptr inbounds float, float* %245, i64 72
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %248, i64 72
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %245, i64 80
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %248, i64 80
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %245, i64 88
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %248, i64 88
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = bitcast float* %245 to <8 x float>*
  %292 = load <8 x float>, <8 x float>* %291, align 1, !tbaa !12
  %293 = add nuw nsw i64 %244, 8
  %294 = getelementptr inbounds float, float* %5, i64 %293
  %295 = bitcast float* %294 to <8 x float>*
  %296 = load <8 x float>, <8 x float>* %295, align 1, !tbaa !12
  %297 = add nuw nsw i64 %244, 16
  %298 = getelementptr inbounds float, float* %5, i64 %297
  %299 = bitcast float* %298 to <8 x float>*
  %300 = load <8 x float>, <8 x float>* %299, align 1, !tbaa !12
  %301 = add nuw nsw i64 %244, 24
  %302 = getelementptr inbounds float, float* %5, i64 %301
  %303 = bitcast float* %302 to <8 x float>*
  %304 = load <8 x float>, <8 x float>* %303, align 1, !tbaa !12
  %305 = add nuw nsw i64 %244, 32
  %306 = getelementptr inbounds float, float* %5, i64 %305
  %307 = bitcast float* %306 to <8 x float>*
  %308 = load <8 x float>, <8 x float>* %307, align 1, !tbaa !12
  %309 = add nuw nsw i64 %244, 40
  %310 = getelementptr inbounds float, float* %5, i64 %309
  %311 = bitcast float* %310 to <8 x float>*
  %312 = load <8 x float>, <8 x float>* %311, align 1, !tbaa !12
  %313 = add nuw nsw i64 %244, 48
  %314 = getelementptr inbounds float, float* %5, i64 %313
  %315 = bitcast float* %314 to <8 x float>*
  %316 = load <8 x float>, <8 x float>* %315, align 1, !tbaa !12
  %317 = add nuw nsw i64 %244, 56
  %318 = getelementptr inbounds float, float* %5, i64 %317
  %319 = bitcast float* %318 to <8 x float>*
  %320 = load <8 x float>, <8 x float>* %319, align 1, !tbaa !12
  %321 = add nuw nsw i64 %244, 64
  %322 = getelementptr inbounds float, float* %5, i64 %321
  %323 = bitcast float* %322 to <8 x float>*
  %324 = load <8 x float>, <8 x float>* %323, align 1, !tbaa !12
  %325 = add nuw nsw i64 %244, 72
  %326 = getelementptr inbounds float, float* %5, i64 %325
  %327 = bitcast float* %326 to <8 x float>*
  %328 = load <8 x float>, <8 x float>* %327, align 1, !tbaa !12
  %329 = add nuw nsw i64 %244, 80
  %330 = getelementptr inbounds float, float* %5, i64 %329
  %331 = bitcast float* %330 to <8 x float>*
  %332 = load <8 x float>, <8 x float>* %331, align 1, !tbaa !12
  %333 = add nsw i64 %244, %76
  %334 = getelementptr inbounds float, float* %3, i64 %333
  %335 = bitcast float* %334 to <8 x float>*
  %336 = load <8 x float>, <8 x float>* %335, align 1, !tbaa !12
  %337 = add nsw i64 %333, 8
  %338 = getelementptr inbounds float, float* %3, i64 %337
  %339 = bitcast float* %338 to <8 x float>*
  %340 = load <8 x float>, <8 x float>* %339, align 1, !tbaa !12
  %341 = add nsw i64 %333, 16
  %342 = getelementptr inbounds float, float* %3, i64 %341
  %343 = bitcast float* %342 to <8 x float>*
  %344 = load <8 x float>, <8 x float>* %343, align 1, !tbaa !12
  %345 = add nsw i64 %333, 24
  %346 = getelementptr inbounds float, float* %3, i64 %345
  %347 = bitcast float* %346 to <8 x float>*
  %348 = load <8 x float>, <8 x float>* %347, align 1, !tbaa !12
  %349 = add nsw i64 %333, 32
  %350 = getelementptr inbounds float, float* %3, i64 %349
  %351 = bitcast float* %350 to <8 x float>*
  %352 = load <8 x float>, <8 x float>* %351, align 1, !tbaa !12
  %353 = add nsw i64 %333, 40
  %354 = getelementptr inbounds float, float* %3, i64 %353
  %355 = bitcast float* %354 to <8 x float>*
  %356 = load <8 x float>, <8 x float>* %355, align 1, !tbaa !12
  %357 = add nsw i64 %333, 48
  %358 = getelementptr inbounds float, float* %3, i64 %357
  %359 = bitcast float* %358 to <8 x float>*
  %360 = load <8 x float>, <8 x float>* %359, align 1, !tbaa !12
  %361 = add nsw i64 %333, 56
  %362 = getelementptr inbounds float, float* %3, i64 %361
  %363 = bitcast float* %362 to <8 x float>*
  %364 = load <8 x float>, <8 x float>* %363, align 1, !tbaa !12
  %365 = add nsw i64 %333, 64
  %366 = getelementptr inbounds float, float* %3, i64 %365
  %367 = bitcast float* %366 to <8 x float>*
  %368 = load <8 x float>, <8 x float>* %367, align 1, !tbaa !12
  %369 = add nsw i64 %333, 72
  %370 = getelementptr inbounds float, float* %3, i64 %369
  %371 = bitcast float* %370 to <8 x float>*
  %372 = load <8 x float>, <8 x float>* %371, align 1, !tbaa !12
  %373 = add nsw i64 %333, 80
  %374 = getelementptr inbounds float, float* %3, i64 %373
  %375 = bitcast float* %374 to <8 x float>*
  %376 = load <8 x float>, <8 x float>* %375, align 1, !tbaa !12
  %377 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %336, <8 x float> %30, <8 x float> %292) #10
  %378 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %340, <8 x float> %30, <8 x float> %296) #10
  %379 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %344, <8 x float> %30, <8 x float> %300) #10
  %380 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %348, <8 x float> %30, <8 x float> %304) #10
  %381 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %352, <8 x float> %30, <8 x float> %308) #10
  %382 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %356, <8 x float> %30, <8 x float> %312) #10
  %383 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %360, <8 x float> %30, <8 x float> %316) #10
  %384 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %364, <8 x float> %30, <8 x float> %320) #10
  %385 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %368, <8 x float> %30, <8 x float> %324) #10
  %386 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %372, <8 x float> %30, <8 x float> %328) #10
  %387 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %376, <8 x float> %30, <8 x float> %332) #10
  store <8 x float> %377, <8 x float>* %291, align 1, !tbaa !12
  store <8 x float> %378, <8 x float>* %295, align 1, !tbaa !12
  store <8 x float> %379, <8 x float>* %299, align 1, !tbaa !12
  store <8 x float> %380, <8 x float>* %303, align 1, !tbaa !12
  store <8 x float> %381, <8 x float>* %307, align 1, !tbaa !12
  store <8 x float> %382, <8 x float>* %311, align 1, !tbaa !12
  store <8 x float> %383, <8 x float>* %315, align 1, !tbaa !12
  store <8 x float> %384, <8 x float>* %319, align 1, !tbaa !12
  store <8 x float> %385, <8 x float>* %323, align 1, !tbaa !12
  store <8 x float> %386, <8 x float>* %327, align 1, !tbaa !12
  store <8 x float> %387, <8 x float>* %331, align 1, !tbaa !12
  %388 = add nuw nsw i64 %244, 88
  %389 = icmp ult i64 %388, %77
  br i1 %389, label %243, label %237

390:                                              ; preds = %396
  br i1 %67, label %391, label %543

391:                                              ; preds = %390
  %392 = trunc i64 %36 to i32
  %393 = mul nsw i32 %66, %392
  %394 = sext i32 %393 to i64
  %395 = zext i32 %66 to i64
  br label %550

396:                                              ; preds = %238, %396
  %397 = phi i64 [ 0, %238 ], [ %541, %396 ]
  %398 = getelementptr inbounds float, float* %5, i64 %397
  %399 = getelementptr inbounds float, float* %398, i64 8
  %400 = bitcast float* %399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %400, i32 0, i32 1, i32 1)
  %401 = getelementptr inbounds float, float* %3, i64 %397
  %402 = getelementptr inbounds float, float* %401, i64 8
  %403 = bitcast float* %402 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %403, i32 0, i32 1, i32 1)
  %404 = getelementptr inbounds float, float* %398, i64 16
  %405 = bitcast float* %404 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %405, i32 0, i32 1, i32 1)
  %406 = getelementptr inbounds float, float* %401, i64 16
  %407 = bitcast float* %406 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %407, i32 0, i32 1, i32 1)
  %408 = getelementptr inbounds float, float* %398, i64 24
  %409 = bitcast float* %408 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %409, i32 0, i32 1, i32 1)
  %410 = getelementptr inbounds float, float* %401, i64 24
  %411 = bitcast float* %410 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %411, i32 0, i32 1, i32 1)
  %412 = getelementptr inbounds float, float* %398, i64 32
  %413 = bitcast float* %412 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %413, i32 0, i32 1, i32 1)
  %414 = getelementptr inbounds float, float* %401, i64 32
  %415 = bitcast float* %414 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %415, i32 0, i32 1, i32 1)
  %416 = getelementptr inbounds float, float* %398, i64 40
  %417 = bitcast float* %416 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %417, i32 0, i32 1, i32 1)
  %418 = getelementptr inbounds float, float* %401, i64 40
  %419 = bitcast float* %418 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %419, i32 0, i32 1, i32 1)
  %420 = getelementptr inbounds float, float* %398, i64 48
  %421 = bitcast float* %420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %421, i32 0, i32 1, i32 1)
  %422 = getelementptr inbounds float, float* %401, i64 48
  %423 = bitcast float* %422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %423, i32 0, i32 1, i32 1)
  %424 = getelementptr inbounds float, float* %398, i64 56
  %425 = bitcast float* %424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %425, i32 0, i32 1, i32 1)
  %426 = getelementptr inbounds float, float* %401, i64 56
  %427 = bitcast float* %426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %427, i32 0, i32 1, i32 1)
  %428 = getelementptr inbounds float, float* %398, i64 64
  %429 = bitcast float* %428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %429, i32 0, i32 1, i32 1)
  %430 = getelementptr inbounds float, float* %401, i64 64
  %431 = bitcast float* %430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %431, i32 0, i32 1, i32 1)
  %432 = getelementptr inbounds float, float* %398, i64 72
  %433 = bitcast float* %432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %433, i32 0, i32 1, i32 1)
  %434 = getelementptr inbounds float, float* %401, i64 72
  %435 = bitcast float* %434 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %435, i32 0, i32 1, i32 1)
  %436 = getelementptr inbounds float, float* %398, i64 80
  %437 = bitcast float* %436 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %437, i32 0, i32 1, i32 1)
  %438 = getelementptr inbounds float, float* %401, i64 80
  %439 = bitcast float* %438 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %439, i32 0, i32 1, i32 1)
  %440 = getelementptr inbounds float, float* %398, i64 88
  %441 = bitcast float* %440 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %441, i32 0, i32 1, i32 1)
  %442 = getelementptr inbounds float, float* %401, i64 88
  %443 = bitcast float* %442 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %443, i32 0, i32 1, i32 1)
  %444 = bitcast float* %398 to <8 x float>*
  %445 = load <8 x float>, <8 x float>* %444, align 1, !tbaa !12
  %446 = add nuw nsw i64 %397, 8
  %447 = getelementptr inbounds float, float* %5, i64 %446
  %448 = bitcast float* %447 to <8 x float>*
  %449 = load <8 x float>, <8 x float>* %448, align 1, !tbaa !12
  %450 = add nuw nsw i64 %397, 16
  %451 = getelementptr inbounds float, float* %5, i64 %450
  %452 = bitcast float* %451 to <8 x float>*
  %453 = load <8 x float>, <8 x float>* %452, align 1, !tbaa !12
  %454 = add nuw nsw i64 %397, 24
  %455 = getelementptr inbounds float, float* %5, i64 %454
  %456 = bitcast float* %455 to <8 x float>*
  %457 = load <8 x float>, <8 x float>* %456, align 1, !tbaa !12
  %458 = add nuw nsw i64 %397, 32
  %459 = getelementptr inbounds float, float* %5, i64 %458
  %460 = bitcast float* %459 to <8 x float>*
  %461 = load <8 x float>, <8 x float>* %460, align 1, !tbaa !12
  %462 = add nuw nsw i64 %397, 40
  %463 = getelementptr inbounds float, float* %5, i64 %462
  %464 = bitcast float* %463 to <8 x float>*
  %465 = load <8 x float>, <8 x float>* %464, align 1, !tbaa !12
  %466 = add nuw nsw i64 %397, 48
  %467 = getelementptr inbounds float, float* %5, i64 %466
  %468 = bitcast float* %467 to <8 x float>*
  %469 = load <8 x float>, <8 x float>* %468, align 1, !tbaa !12
  %470 = add nuw nsw i64 %397, 56
  %471 = getelementptr inbounds float, float* %5, i64 %470
  %472 = bitcast float* %471 to <8 x float>*
  %473 = load <8 x float>, <8 x float>* %472, align 1, !tbaa !12
  %474 = add nuw nsw i64 %397, 64
  %475 = getelementptr inbounds float, float* %5, i64 %474
  %476 = bitcast float* %475 to <8 x float>*
  %477 = load <8 x float>, <8 x float>* %476, align 1, !tbaa !12
  %478 = add nuw nsw i64 %397, 72
  %479 = getelementptr inbounds float, float* %5, i64 %478
  %480 = bitcast float* %479 to <8 x float>*
  %481 = load <8 x float>, <8 x float>* %480, align 1, !tbaa !12
  %482 = add nuw nsw i64 %397, 80
  %483 = getelementptr inbounds float, float* %5, i64 %482
  %484 = bitcast float* %483 to <8 x float>*
  %485 = load <8 x float>, <8 x float>* %484, align 1, !tbaa !12
  %486 = add nsw i64 %397, %241
  %487 = getelementptr inbounds float, float* %3, i64 %486
  %488 = bitcast float* %487 to <8 x float>*
  %489 = load <8 x float>, <8 x float>* %488, align 1, !tbaa !12
  %490 = add nsw i64 %486, 8
  %491 = getelementptr inbounds float, float* %3, i64 %490
  %492 = bitcast float* %491 to <8 x float>*
  %493 = load <8 x float>, <8 x float>* %492, align 1, !tbaa !12
  %494 = add nsw i64 %486, 16
  %495 = getelementptr inbounds float, float* %3, i64 %494
  %496 = bitcast float* %495 to <8 x float>*
  %497 = load <8 x float>, <8 x float>* %496, align 1, !tbaa !12
  %498 = add nsw i64 %486, 24
  %499 = getelementptr inbounds float, float* %3, i64 %498
  %500 = bitcast float* %499 to <8 x float>*
  %501 = load <8 x float>, <8 x float>* %500, align 1, !tbaa !12
  %502 = add nsw i64 %486, 32
  %503 = getelementptr inbounds float, float* %3, i64 %502
  %504 = bitcast float* %503 to <8 x float>*
  %505 = load <8 x float>, <8 x float>* %504, align 1, !tbaa !12
  %506 = add nsw i64 %486, 40
  %507 = getelementptr inbounds float, float* %3, i64 %506
  %508 = bitcast float* %507 to <8 x float>*
  %509 = load <8 x float>, <8 x float>* %508, align 1, !tbaa !12
  %510 = add nsw i64 %486, 48
  %511 = getelementptr inbounds float, float* %3, i64 %510
  %512 = bitcast float* %511 to <8 x float>*
  %513 = load <8 x float>, <8 x float>* %512, align 1, !tbaa !12
  %514 = add nsw i64 %486, 56
  %515 = getelementptr inbounds float, float* %3, i64 %514
  %516 = bitcast float* %515 to <8 x float>*
  %517 = load <8 x float>, <8 x float>* %516, align 1, !tbaa !12
  %518 = add nsw i64 %486, 64
  %519 = getelementptr inbounds float, float* %3, i64 %518
  %520 = bitcast float* %519 to <8 x float>*
  %521 = load <8 x float>, <8 x float>* %520, align 1, !tbaa !12
  %522 = add nsw i64 %486, 72
  %523 = getelementptr inbounds float, float* %3, i64 %522
  %524 = bitcast float* %523 to <8 x float>*
  %525 = load <8 x float>, <8 x float>* %524, align 1, !tbaa !12
  %526 = add nsw i64 %486, 80
  %527 = getelementptr inbounds float, float* %3, i64 %526
  %528 = bitcast float* %527 to <8 x float>*
  %529 = load <8 x float>, <8 x float>* %528, align 1, !tbaa !12
  %530 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %489, <8 x float> %35, <8 x float> %445) #10
  %531 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %493, <8 x float> %35, <8 x float> %449) #10
  %532 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %497, <8 x float> %35, <8 x float> %453) #10
  %533 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %501, <8 x float> %35, <8 x float> %457) #10
  %534 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %505, <8 x float> %35, <8 x float> %461) #10
  %535 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %509, <8 x float> %35, <8 x float> %465) #10
  %536 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %513, <8 x float> %35, <8 x float> %469) #10
  %537 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %517, <8 x float> %35, <8 x float> %473) #10
  %538 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %521, <8 x float> %35, <8 x float> %477) #10
  %539 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %525, <8 x float> %35, <8 x float> %481) #10
  %540 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %529, <8 x float> %35, <8 x float> %485) #10
  store <8 x float> %530, <8 x float>* %444, align 1, !tbaa !12
  store <8 x float> %531, <8 x float>* %448, align 1, !tbaa !12
  store <8 x float> %532, <8 x float>* %452, align 1, !tbaa !12
  store <8 x float> %533, <8 x float>* %456, align 1, !tbaa !12
  store <8 x float> %534, <8 x float>* %460, align 1, !tbaa !12
  store <8 x float> %535, <8 x float>* %464, align 1, !tbaa !12
  store <8 x float> %536, <8 x float>* %468, align 1, !tbaa !12
  store <8 x float> %537, <8 x float>* %472, align 1, !tbaa !12
  store <8 x float> %538, <8 x float>* %476, align 1, !tbaa !12
  store <8 x float> %539, <8 x float>* %480, align 1, !tbaa !12
  store <8 x float> %540, <8 x float>* %484, align 1, !tbaa !12
  %541 = add nuw nsw i64 %397, 88
  %542 = icmp ult i64 %541, %242
  br i1 %542, label %396, label %390

543:                                              ; preds = %550, %72, %237, %390
  %544 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %545 = icmp sgt i32 %544, 0
  br i1 %545, label %546, label %1322

546:                                              ; preds = %543
  %547 = zext i32 %544 to i64
  %548 = trunc i64 %41 to i32
  %549 = mul nsw i32 %544, %548
  br label %703

550:                                              ; preds = %391, %550
  %551 = phi i64 [ 0, %391 ], [ %695, %550 ]
  %552 = getelementptr inbounds float, float* %5, i64 %551
  %553 = getelementptr inbounds float, float* %552, i64 8
  %554 = bitcast float* %553 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %554, i32 0, i32 1, i32 1)
  %555 = getelementptr inbounds float, float* %3, i64 %551
  %556 = getelementptr inbounds float, float* %555, i64 8
  %557 = bitcast float* %556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %557, i32 0, i32 1, i32 1)
  %558 = getelementptr inbounds float, float* %552, i64 16
  %559 = bitcast float* %558 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %559, i32 0, i32 1, i32 1)
  %560 = getelementptr inbounds float, float* %555, i64 16
  %561 = bitcast float* %560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %561, i32 0, i32 1, i32 1)
  %562 = getelementptr inbounds float, float* %552, i64 24
  %563 = bitcast float* %562 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %563, i32 0, i32 1, i32 1)
  %564 = getelementptr inbounds float, float* %555, i64 24
  %565 = bitcast float* %564 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %565, i32 0, i32 1, i32 1)
  %566 = getelementptr inbounds float, float* %552, i64 32
  %567 = bitcast float* %566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %567, i32 0, i32 1, i32 1)
  %568 = getelementptr inbounds float, float* %555, i64 32
  %569 = bitcast float* %568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %569, i32 0, i32 1, i32 1)
  %570 = getelementptr inbounds float, float* %552, i64 40
  %571 = bitcast float* %570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %571, i32 0, i32 1, i32 1)
  %572 = getelementptr inbounds float, float* %555, i64 40
  %573 = bitcast float* %572 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %573, i32 0, i32 1, i32 1)
  %574 = getelementptr inbounds float, float* %552, i64 48
  %575 = bitcast float* %574 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %575, i32 0, i32 1, i32 1)
  %576 = getelementptr inbounds float, float* %555, i64 48
  %577 = bitcast float* %576 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %577, i32 0, i32 1, i32 1)
  %578 = getelementptr inbounds float, float* %552, i64 56
  %579 = bitcast float* %578 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %579, i32 0, i32 1, i32 1)
  %580 = getelementptr inbounds float, float* %555, i64 56
  %581 = bitcast float* %580 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %581, i32 0, i32 1, i32 1)
  %582 = getelementptr inbounds float, float* %552, i64 64
  %583 = bitcast float* %582 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %583, i32 0, i32 1, i32 1)
  %584 = getelementptr inbounds float, float* %555, i64 64
  %585 = bitcast float* %584 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %585, i32 0, i32 1, i32 1)
  %586 = getelementptr inbounds float, float* %552, i64 72
  %587 = bitcast float* %586 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %587, i32 0, i32 1, i32 1)
  %588 = getelementptr inbounds float, float* %555, i64 72
  %589 = bitcast float* %588 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %589, i32 0, i32 1, i32 1)
  %590 = getelementptr inbounds float, float* %552, i64 80
  %591 = bitcast float* %590 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %591, i32 0, i32 1, i32 1)
  %592 = getelementptr inbounds float, float* %555, i64 80
  %593 = bitcast float* %592 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %593, i32 0, i32 1, i32 1)
  %594 = getelementptr inbounds float, float* %552, i64 88
  %595 = bitcast float* %594 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %595, i32 0, i32 1, i32 1)
  %596 = getelementptr inbounds float, float* %555, i64 88
  %597 = bitcast float* %596 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %597, i32 0, i32 1, i32 1)
  %598 = bitcast float* %552 to <8 x float>*
  %599 = load <8 x float>, <8 x float>* %598, align 1, !tbaa !12
  %600 = add nuw nsw i64 %551, 8
  %601 = getelementptr inbounds float, float* %5, i64 %600
  %602 = bitcast float* %601 to <8 x float>*
  %603 = load <8 x float>, <8 x float>* %602, align 1, !tbaa !12
  %604 = add nuw nsw i64 %551, 16
  %605 = getelementptr inbounds float, float* %5, i64 %604
  %606 = bitcast float* %605 to <8 x float>*
  %607 = load <8 x float>, <8 x float>* %606, align 1, !tbaa !12
  %608 = add nuw nsw i64 %551, 24
  %609 = getelementptr inbounds float, float* %5, i64 %608
  %610 = bitcast float* %609 to <8 x float>*
  %611 = load <8 x float>, <8 x float>* %610, align 1, !tbaa !12
  %612 = add nuw nsw i64 %551, 32
  %613 = getelementptr inbounds float, float* %5, i64 %612
  %614 = bitcast float* %613 to <8 x float>*
  %615 = load <8 x float>, <8 x float>* %614, align 1, !tbaa !12
  %616 = add nuw nsw i64 %551, 40
  %617 = getelementptr inbounds float, float* %5, i64 %616
  %618 = bitcast float* %617 to <8 x float>*
  %619 = load <8 x float>, <8 x float>* %618, align 1, !tbaa !12
  %620 = add nuw nsw i64 %551, 48
  %621 = getelementptr inbounds float, float* %5, i64 %620
  %622 = bitcast float* %621 to <8 x float>*
  %623 = load <8 x float>, <8 x float>* %622, align 1, !tbaa !12
  %624 = add nuw nsw i64 %551, 56
  %625 = getelementptr inbounds float, float* %5, i64 %624
  %626 = bitcast float* %625 to <8 x float>*
  %627 = load <8 x float>, <8 x float>* %626, align 1, !tbaa !12
  %628 = add nuw nsw i64 %551, 64
  %629 = getelementptr inbounds float, float* %5, i64 %628
  %630 = bitcast float* %629 to <8 x float>*
  %631 = load <8 x float>, <8 x float>* %630, align 1, !tbaa !12
  %632 = add nuw nsw i64 %551, 72
  %633 = getelementptr inbounds float, float* %5, i64 %632
  %634 = bitcast float* %633 to <8 x float>*
  %635 = load <8 x float>, <8 x float>* %634, align 1, !tbaa !12
  %636 = add nuw nsw i64 %551, 80
  %637 = getelementptr inbounds float, float* %5, i64 %636
  %638 = bitcast float* %637 to <8 x float>*
  %639 = load <8 x float>, <8 x float>* %638, align 1, !tbaa !12
  %640 = add nsw i64 %551, %394
  %641 = getelementptr inbounds float, float* %3, i64 %640
  %642 = bitcast float* %641 to <8 x float>*
  %643 = load <8 x float>, <8 x float>* %642, align 1, !tbaa !12
  %644 = add nsw i64 %640, 8
  %645 = getelementptr inbounds float, float* %3, i64 %644
  %646 = bitcast float* %645 to <8 x float>*
  %647 = load <8 x float>, <8 x float>* %646, align 1, !tbaa !12
  %648 = add nsw i64 %640, 16
  %649 = getelementptr inbounds float, float* %3, i64 %648
  %650 = bitcast float* %649 to <8 x float>*
  %651 = load <8 x float>, <8 x float>* %650, align 1, !tbaa !12
  %652 = add nsw i64 %640, 24
  %653 = getelementptr inbounds float, float* %3, i64 %652
  %654 = bitcast float* %653 to <8 x float>*
  %655 = load <8 x float>, <8 x float>* %654, align 1, !tbaa !12
  %656 = add nsw i64 %640, 32
  %657 = getelementptr inbounds float, float* %3, i64 %656
  %658 = bitcast float* %657 to <8 x float>*
  %659 = load <8 x float>, <8 x float>* %658, align 1, !tbaa !12
  %660 = add nsw i64 %640, 40
  %661 = getelementptr inbounds float, float* %3, i64 %660
  %662 = bitcast float* %661 to <8 x float>*
  %663 = load <8 x float>, <8 x float>* %662, align 1, !tbaa !12
  %664 = add nsw i64 %640, 48
  %665 = getelementptr inbounds float, float* %3, i64 %664
  %666 = bitcast float* %665 to <8 x float>*
  %667 = load <8 x float>, <8 x float>* %666, align 1, !tbaa !12
  %668 = add nsw i64 %640, 56
  %669 = getelementptr inbounds float, float* %3, i64 %668
  %670 = bitcast float* %669 to <8 x float>*
  %671 = load <8 x float>, <8 x float>* %670, align 1, !tbaa !12
  %672 = add nsw i64 %640, 64
  %673 = getelementptr inbounds float, float* %3, i64 %672
  %674 = bitcast float* %673 to <8 x float>*
  %675 = load <8 x float>, <8 x float>* %674, align 1, !tbaa !12
  %676 = add nsw i64 %640, 72
  %677 = getelementptr inbounds float, float* %3, i64 %676
  %678 = bitcast float* %677 to <8 x float>*
  %679 = load <8 x float>, <8 x float>* %678, align 1, !tbaa !12
  %680 = add nsw i64 %640, 80
  %681 = getelementptr inbounds float, float* %3, i64 %680
  %682 = bitcast float* %681 to <8 x float>*
  %683 = load <8 x float>, <8 x float>* %682, align 1, !tbaa !12
  %684 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %643, <8 x float> %40, <8 x float> %599) #10
  %685 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %647, <8 x float> %40, <8 x float> %603) #10
  %686 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %651, <8 x float> %40, <8 x float> %607) #10
  %687 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %655, <8 x float> %40, <8 x float> %611) #10
  %688 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %659, <8 x float> %40, <8 x float> %615) #10
  %689 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %663, <8 x float> %40, <8 x float> %619) #10
  %690 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %667, <8 x float> %40, <8 x float> %623) #10
  %691 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %671, <8 x float> %40, <8 x float> %627) #10
  %692 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %675, <8 x float> %40, <8 x float> %631) #10
  %693 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %679, <8 x float> %40, <8 x float> %635) #10
  %694 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %683, <8 x float> %40, <8 x float> %639) #10
  store <8 x float> %684, <8 x float>* %598, align 1, !tbaa !12
  store <8 x float> %685, <8 x float>* %602, align 1, !tbaa !12
  store <8 x float> %686, <8 x float>* %606, align 1, !tbaa !12
  store <8 x float> %687, <8 x float>* %610, align 1, !tbaa !12
  store <8 x float> %688, <8 x float>* %614, align 1, !tbaa !12
  store <8 x float> %689, <8 x float>* %618, align 1, !tbaa !12
  store <8 x float> %690, <8 x float>* %622, align 1, !tbaa !12
  store <8 x float> %691, <8 x float>* %626, align 1, !tbaa !12
  store <8 x float> %692, <8 x float>* %630, align 1, !tbaa !12
  store <8 x float> %693, <8 x float>* %634, align 1, !tbaa !12
  store <8 x float> %694, <8 x float>* %638, align 1, !tbaa !12
  %695 = add nuw nsw i64 %551, 88
  %696 = icmp ult i64 %695, %395
  br i1 %696, label %550, label %543

697:                                              ; preds = %703
  br i1 %545, label %698, label %1168

698:                                              ; preds = %697
  %699 = trunc i64 %46 to i32
  %700 = mul nsw i32 %544, %699
  %701 = sext i32 %700 to i64
  %702 = zext i32 %544 to i64
  br label %868

703:                                              ; preds = %546, %703
  %704 = phi i64 [ 0, %546 ], [ %860, %703 ]
  %705 = getelementptr inbounds float, float* %5, i64 %704
  %706 = getelementptr inbounds float, float* %705, i64 8
  %707 = bitcast float* %706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %707, i32 0, i32 1, i32 1)
  %708 = getelementptr inbounds float, float* %3, i64 %704
  %709 = getelementptr inbounds float, float* %708, i64 8
  %710 = bitcast float* %709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %710, i32 0, i32 1, i32 1)
  %711 = getelementptr inbounds float, float* %705, i64 16
  %712 = bitcast float* %711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %712, i32 0, i32 1, i32 1)
  %713 = getelementptr inbounds float, float* %708, i64 16
  %714 = bitcast float* %713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %714, i32 0, i32 1, i32 1)
  %715 = getelementptr inbounds float, float* %705, i64 24
  %716 = bitcast float* %715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %716, i32 0, i32 1, i32 1)
  %717 = getelementptr inbounds float, float* %708, i64 24
  %718 = bitcast float* %717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %718, i32 0, i32 1, i32 1)
  %719 = getelementptr inbounds float, float* %705, i64 32
  %720 = bitcast float* %719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %720, i32 0, i32 1, i32 1)
  %721 = getelementptr inbounds float, float* %708, i64 32
  %722 = bitcast float* %721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %722, i32 0, i32 1, i32 1)
  %723 = getelementptr inbounds float, float* %705, i64 40
  %724 = bitcast float* %723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %724, i32 0, i32 1, i32 1)
  %725 = getelementptr inbounds float, float* %708, i64 40
  %726 = bitcast float* %725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %726, i32 0, i32 1, i32 1)
  %727 = getelementptr inbounds float, float* %705, i64 48
  %728 = bitcast float* %727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %728, i32 0, i32 1, i32 1)
  %729 = getelementptr inbounds float, float* %708, i64 48
  %730 = bitcast float* %729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %730, i32 0, i32 1, i32 1)
  %731 = getelementptr inbounds float, float* %705, i64 56
  %732 = bitcast float* %731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %732, i32 0, i32 1, i32 1)
  %733 = getelementptr inbounds float, float* %708, i64 56
  %734 = bitcast float* %733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %734, i32 0, i32 1, i32 1)
  %735 = getelementptr inbounds float, float* %705, i64 64
  %736 = bitcast float* %735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %736, i32 0, i32 1, i32 1)
  %737 = getelementptr inbounds float, float* %708, i64 64
  %738 = bitcast float* %737 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %738, i32 0, i32 1, i32 1)
  %739 = getelementptr inbounds float, float* %705, i64 72
  %740 = bitcast float* %739 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %740, i32 0, i32 1, i32 1)
  %741 = getelementptr inbounds float, float* %708, i64 72
  %742 = bitcast float* %741 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %742, i32 0, i32 1, i32 1)
  %743 = getelementptr inbounds float, float* %705, i64 80
  %744 = bitcast float* %743 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %744, i32 0, i32 1, i32 1)
  %745 = getelementptr inbounds float, float* %708, i64 80
  %746 = bitcast float* %745 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %746, i32 0, i32 1, i32 1)
  %747 = getelementptr inbounds float, float* %705, i64 88
  %748 = bitcast float* %747 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %748, i32 0, i32 1, i32 1)
  %749 = getelementptr inbounds float, float* %708, i64 88
  %750 = bitcast float* %749 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %750, i32 0, i32 1, i32 1)
  %751 = bitcast float* %705 to <8 x float>*
  %752 = load <8 x float>, <8 x float>* %751, align 1, !tbaa !12
  %753 = add nuw nsw i64 %704, 8
  %754 = getelementptr inbounds float, float* %5, i64 %753
  %755 = bitcast float* %754 to <8 x float>*
  %756 = load <8 x float>, <8 x float>* %755, align 1, !tbaa !12
  %757 = add nuw nsw i64 %704, 16
  %758 = getelementptr inbounds float, float* %5, i64 %757
  %759 = bitcast float* %758 to <8 x float>*
  %760 = load <8 x float>, <8 x float>* %759, align 1, !tbaa !12
  %761 = add nuw nsw i64 %704, 24
  %762 = getelementptr inbounds float, float* %5, i64 %761
  %763 = bitcast float* %762 to <8 x float>*
  %764 = load <8 x float>, <8 x float>* %763, align 1, !tbaa !12
  %765 = add nuw nsw i64 %704, 32
  %766 = getelementptr inbounds float, float* %5, i64 %765
  %767 = bitcast float* %766 to <8 x float>*
  %768 = load <8 x float>, <8 x float>* %767, align 1, !tbaa !12
  %769 = add nuw nsw i64 %704, 40
  %770 = getelementptr inbounds float, float* %5, i64 %769
  %771 = bitcast float* %770 to <8 x float>*
  %772 = load <8 x float>, <8 x float>* %771, align 1, !tbaa !12
  %773 = add nuw nsw i64 %704, 48
  %774 = getelementptr inbounds float, float* %5, i64 %773
  %775 = bitcast float* %774 to <8 x float>*
  %776 = load <8 x float>, <8 x float>* %775, align 1, !tbaa !12
  %777 = add nuw nsw i64 %704, 56
  %778 = getelementptr inbounds float, float* %5, i64 %777
  %779 = bitcast float* %778 to <8 x float>*
  %780 = load <8 x float>, <8 x float>* %779, align 1, !tbaa !12
  %781 = add nuw nsw i64 %704, 64
  %782 = getelementptr inbounds float, float* %5, i64 %781
  %783 = bitcast float* %782 to <8 x float>*
  %784 = load <8 x float>, <8 x float>* %783, align 1, !tbaa !12
  %785 = add nuw nsw i64 %704, 72
  %786 = getelementptr inbounds float, float* %5, i64 %785
  %787 = bitcast float* %786 to <8 x float>*
  %788 = load <8 x float>, <8 x float>* %787, align 1, !tbaa !12
  %789 = add nuw nsw i64 %704, 80
  %790 = getelementptr inbounds float, float* %5, i64 %789
  %791 = bitcast float* %790 to <8 x float>*
  %792 = load <8 x float>, <8 x float>* %791, align 1, !tbaa !12
  %793 = trunc i64 %704 to i32
  %794 = add nsw i32 %549, %793
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds float, float* %3, i64 %795
  %797 = bitcast float* %796 to <8 x float>*
  %798 = load <8 x float>, <8 x float>* %797, align 1, !tbaa !12
  %799 = add nsw i32 %794, 8
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds float, float* %3, i64 %800
  %802 = bitcast float* %801 to <8 x float>*
  %803 = load <8 x float>, <8 x float>* %802, align 1, !tbaa !12
  %804 = add nsw i32 %794, 16
  %805 = sext i32 %804 to i64
  %806 = getelementptr inbounds float, float* %3, i64 %805
  %807 = bitcast float* %806 to <8 x float>*
  %808 = load <8 x float>, <8 x float>* %807, align 1, !tbaa !12
  %809 = add nsw i32 %794, 24
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds float, float* %3, i64 %810
  %812 = bitcast float* %811 to <8 x float>*
  %813 = load <8 x float>, <8 x float>* %812, align 1, !tbaa !12
  %814 = add nsw i32 %794, 32
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds float, float* %3, i64 %815
  %817 = bitcast float* %816 to <8 x float>*
  %818 = load <8 x float>, <8 x float>* %817, align 1, !tbaa !12
  %819 = add nsw i32 %794, 40
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds float, float* %3, i64 %820
  %822 = bitcast float* %821 to <8 x float>*
  %823 = load <8 x float>, <8 x float>* %822, align 1, !tbaa !12
  %824 = add nsw i32 %794, 48
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds float, float* %3, i64 %825
  %827 = bitcast float* %826 to <8 x float>*
  %828 = load <8 x float>, <8 x float>* %827, align 1, !tbaa !12
  %829 = add nsw i32 %794, 56
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds float, float* %3, i64 %830
  %832 = bitcast float* %831 to <8 x float>*
  %833 = load <8 x float>, <8 x float>* %832, align 1, !tbaa !12
  %834 = add nsw i32 %794, 64
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds float, float* %3, i64 %835
  %837 = bitcast float* %836 to <8 x float>*
  %838 = load <8 x float>, <8 x float>* %837, align 1, !tbaa !12
  %839 = add nsw i32 %794, 72
  %840 = sext i32 %839 to i64
  %841 = getelementptr inbounds float, float* %3, i64 %840
  %842 = bitcast float* %841 to <8 x float>*
  %843 = load <8 x float>, <8 x float>* %842, align 1, !tbaa !12
  %844 = add nsw i32 %794, 80
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds float, float* %3, i64 %845
  %847 = bitcast float* %846 to <8 x float>*
  %848 = load <8 x float>, <8 x float>* %847, align 1, !tbaa !12
  %849 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %798, <8 x float> %45, <8 x float> %752) #10
  %850 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %803, <8 x float> %45, <8 x float> %756) #10
  %851 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %808, <8 x float> %45, <8 x float> %760) #10
  %852 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %813, <8 x float> %45, <8 x float> %764) #10
  %853 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %818, <8 x float> %45, <8 x float> %768) #10
  %854 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %823, <8 x float> %45, <8 x float> %772) #10
  %855 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %828, <8 x float> %45, <8 x float> %776) #10
  %856 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %833, <8 x float> %45, <8 x float> %780) #10
  %857 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %838, <8 x float> %45, <8 x float> %784) #10
  %858 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %843, <8 x float> %45, <8 x float> %788) #10
  %859 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %848, <8 x float> %45, <8 x float> %792) #10
  store <8 x float> %849, <8 x float>* %751, align 1, !tbaa !12
  store <8 x float> %850, <8 x float>* %755, align 1, !tbaa !12
  store <8 x float> %851, <8 x float>* %759, align 1, !tbaa !12
  store <8 x float> %852, <8 x float>* %763, align 1, !tbaa !12
  store <8 x float> %853, <8 x float>* %767, align 1, !tbaa !12
  store <8 x float> %854, <8 x float>* %771, align 1, !tbaa !12
  store <8 x float> %855, <8 x float>* %775, align 1, !tbaa !12
  store <8 x float> %856, <8 x float>* %779, align 1, !tbaa !12
  store <8 x float> %857, <8 x float>* %783, align 1, !tbaa !12
  store <8 x float> %858, <8 x float>* %787, align 1, !tbaa !12
  store <8 x float> %859, <8 x float>* %791, align 1, !tbaa !12
  %860 = add nuw nsw i64 %704, 88
  %861 = icmp ult i64 %860, %547
  br i1 %861, label %703, label %697

862:                                              ; preds = %868
  br i1 %545, label %863, label %1168

863:                                              ; preds = %862
  %864 = trunc i64 %51 to i32
  %865 = mul nsw i32 %544, %864
  %866 = sext i32 %865 to i64
  %867 = zext i32 %544 to i64
  br label %1021

868:                                              ; preds = %698, %868
  %869 = phi i64 [ 0, %698 ], [ %1013, %868 ]
  %870 = getelementptr inbounds float, float* %5, i64 %869
  %871 = getelementptr inbounds float, float* %870, i64 8
  %872 = bitcast float* %871 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %872, i32 0, i32 1, i32 1)
  %873 = getelementptr inbounds float, float* %3, i64 %869
  %874 = getelementptr inbounds float, float* %873, i64 8
  %875 = bitcast float* %874 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %875, i32 0, i32 1, i32 1)
  %876 = getelementptr inbounds float, float* %870, i64 16
  %877 = bitcast float* %876 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %877, i32 0, i32 1, i32 1)
  %878 = getelementptr inbounds float, float* %873, i64 16
  %879 = bitcast float* %878 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %879, i32 0, i32 1, i32 1)
  %880 = getelementptr inbounds float, float* %870, i64 24
  %881 = bitcast float* %880 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %881, i32 0, i32 1, i32 1)
  %882 = getelementptr inbounds float, float* %873, i64 24
  %883 = bitcast float* %882 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %883, i32 0, i32 1, i32 1)
  %884 = getelementptr inbounds float, float* %870, i64 32
  %885 = bitcast float* %884 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %885, i32 0, i32 1, i32 1)
  %886 = getelementptr inbounds float, float* %873, i64 32
  %887 = bitcast float* %886 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %887, i32 0, i32 1, i32 1)
  %888 = getelementptr inbounds float, float* %870, i64 40
  %889 = bitcast float* %888 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %889, i32 0, i32 1, i32 1)
  %890 = getelementptr inbounds float, float* %873, i64 40
  %891 = bitcast float* %890 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %891, i32 0, i32 1, i32 1)
  %892 = getelementptr inbounds float, float* %870, i64 48
  %893 = bitcast float* %892 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %893, i32 0, i32 1, i32 1)
  %894 = getelementptr inbounds float, float* %873, i64 48
  %895 = bitcast float* %894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %895, i32 0, i32 1, i32 1)
  %896 = getelementptr inbounds float, float* %870, i64 56
  %897 = bitcast float* %896 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %897, i32 0, i32 1, i32 1)
  %898 = getelementptr inbounds float, float* %873, i64 56
  %899 = bitcast float* %898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %899, i32 0, i32 1, i32 1)
  %900 = getelementptr inbounds float, float* %870, i64 64
  %901 = bitcast float* %900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %901, i32 0, i32 1, i32 1)
  %902 = getelementptr inbounds float, float* %873, i64 64
  %903 = bitcast float* %902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %903, i32 0, i32 1, i32 1)
  %904 = getelementptr inbounds float, float* %870, i64 72
  %905 = bitcast float* %904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %905, i32 0, i32 1, i32 1)
  %906 = getelementptr inbounds float, float* %873, i64 72
  %907 = bitcast float* %906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %907, i32 0, i32 1, i32 1)
  %908 = getelementptr inbounds float, float* %870, i64 80
  %909 = bitcast float* %908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %909, i32 0, i32 1, i32 1)
  %910 = getelementptr inbounds float, float* %873, i64 80
  %911 = bitcast float* %910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %911, i32 0, i32 1, i32 1)
  %912 = getelementptr inbounds float, float* %870, i64 88
  %913 = bitcast float* %912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %913, i32 0, i32 1, i32 1)
  %914 = getelementptr inbounds float, float* %873, i64 88
  %915 = bitcast float* %914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %915, i32 0, i32 1, i32 1)
  %916 = bitcast float* %870 to <8 x float>*
  %917 = load <8 x float>, <8 x float>* %916, align 1, !tbaa !12
  %918 = add nuw nsw i64 %869, 8
  %919 = getelementptr inbounds float, float* %5, i64 %918
  %920 = bitcast float* %919 to <8 x float>*
  %921 = load <8 x float>, <8 x float>* %920, align 1, !tbaa !12
  %922 = add nuw nsw i64 %869, 16
  %923 = getelementptr inbounds float, float* %5, i64 %922
  %924 = bitcast float* %923 to <8 x float>*
  %925 = load <8 x float>, <8 x float>* %924, align 1, !tbaa !12
  %926 = add nuw nsw i64 %869, 24
  %927 = getelementptr inbounds float, float* %5, i64 %926
  %928 = bitcast float* %927 to <8 x float>*
  %929 = load <8 x float>, <8 x float>* %928, align 1, !tbaa !12
  %930 = add nuw nsw i64 %869, 32
  %931 = getelementptr inbounds float, float* %5, i64 %930
  %932 = bitcast float* %931 to <8 x float>*
  %933 = load <8 x float>, <8 x float>* %932, align 1, !tbaa !12
  %934 = add nuw nsw i64 %869, 40
  %935 = getelementptr inbounds float, float* %5, i64 %934
  %936 = bitcast float* %935 to <8 x float>*
  %937 = load <8 x float>, <8 x float>* %936, align 1, !tbaa !12
  %938 = add nuw nsw i64 %869, 48
  %939 = getelementptr inbounds float, float* %5, i64 %938
  %940 = bitcast float* %939 to <8 x float>*
  %941 = load <8 x float>, <8 x float>* %940, align 1, !tbaa !12
  %942 = add nuw nsw i64 %869, 56
  %943 = getelementptr inbounds float, float* %5, i64 %942
  %944 = bitcast float* %943 to <8 x float>*
  %945 = load <8 x float>, <8 x float>* %944, align 1, !tbaa !12
  %946 = add nuw nsw i64 %869, 64
  %947 = getelementptr inbounds float, float* %5, i64 %946
  %948 = bitcast float* %947 to <8 x float>*
  %949 = load <8 x float>, <8 x float>* %948, align 1, !tbaa !12
  %950 = add nuw nsw i64 %869, 72
  %951 = getelementptr inbounds float, float* %5, i64 %950
  %952 = bitcast float* %951 to <8 x float>*
  %953 = load <8 x float>, <8 x float>* %952, align 1, !tbaa !12
  %954 = add nuw nsw i64 %869, 80
  %955 = getelementptr inbounds float, float* %5, i64 %954
  %956 = bitcast float* %955 to <8 x float>*
  %957 = load <8 x float>, <8 x float>* %956, align 1, !tbaa !12
  %958 = add nsw i64 %869, %701
  %959 = getelementptr inbounds float, float* %3, i64 %958
  %960 = bitcast float* %959 to <8 x float>*
  %961 = load <8 x float>, <8 x float>* %960, align 1, !tbaa !12
  %962 = add nsw i64 %958, 8
  %963 = getelementptr inbounds float, float* %3, i64 %962
  %964 = bitcast float* %963 to <8 x float>*
  %965 = load <8 x float>, <8 x float>* %964, align 1, !tbaa !12
  %966 = add nsw i64 %958, 16
  %967 = getelementptr inbounds float, float* %3, i64 %966
  %968 = bitcast float* %967 to <8 x float>*
  %969 = load <8 x float>, <8 x float>* %968, align 1, !tbaa !12
  %970 = add nsw i64 %958, 24
  %971 = getelementptr inbounds float, float* %3, i64 %970
  %972 = bitcast float* %971 to <8 x float>*
  %973 = load <8 x float>, <8 x float>* %972, align 1, !tbaa !12
  %974 = add nsw i64 %958, 32
  %975 = getelementptr inbounds float, float* %3, i64 %974
  %976 = bitcast float* %975 to <8 x float>*
  %977 = load <8 x float>, <8 x float>* %976, align 1, !tbaa !12
  %978 = add nsw i64 %958, 40
  %979 = getelementptr inbounds float, float* %3, i64 %978
  %980 = bitcast float* %979 to <8 x float>*
  %981 = load <8 x float>, <8 x float>* %980, align 1, !tbaa !12
  %982 = add nsw i64 %958, 48
  %983 = getelementptr inbounds float, float* %3, i64 %982
  %984 = bitcast float* %983 to <8 x float>*
  %985 = load <8 x float>, <8 x float>* %984, align 1, !tbaa !12
  %986 = add nsw i64 %958, 56
  %987 = getelementptr inbounds float, float* %3, i64 %986
  %988 = bitcast float* %987 to <8 x float>*
  %989 = load <8 x float>, <8 x float>* %988, align 1, !tbaa !12
  %990 = add nsw i64 %958, 64
  %991 = getelementptr inbounds float, float* %3, i64 %990
  %992 = bitcast float* %991 to <8 x float>*
  %993 = load <8 x float>, <8 x float>* %992, align 1, !tbaa !12
  %994 = add nsw i64 %958, 72
  %995 = getelementptr inbounds float, float* %3, i64 %994
  %996 = bitcast float* %995 to <8 x float>*
  %997 = load <8 x float>, <8 x float>* %996, align 1, !tbaa !12
  %998 = add nsw i64 %958, 80
  %999 = getelementptr inbounds float, float* %3, i64 %998
  %1000 = bitcast float* %999 to <8 x float>*
  %1001 = load <8 x float>, <8 x float>* %1000, align 1, !tbaa !12
  %1002 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %961, <8 x float> %50, <8 x float> %917) #10
  %1003 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %965, <8 x float> %50, <8 x float> %921) #10
  %1004 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %969, <8 x float> %50, <8 x float> %925) #10
  %1005 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %973, <8 x float> %50, <8 x float> %929) #10
  %1006 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %977, <8 x float> %50, <8 x float> %933) #10
  %1007 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %981, <8 x float> %50, <8 x float> %937) #10
  %1008 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %985, <8 x float> %50, <8 x float> %941) #10
  %1009 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %989, <8 x float> %50, <8 x float> %945) #10
  %1010 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %993, <8 x float> %50, <8 x float> %949) #10
  %1011 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %997, <8 x float> %50, <8 x float> %953) #10
  %1012 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1001, <8 x float> %50, <8 x float> %957) #10
  store <8 x float> %1002, <8 x float>* %916, align 1, !tbaa !12
  store <8 x float> %1003, <8 x float>* %920, align 1, !tbaa !12
  store <8 x float> %1004, <8 x float>* %924, align 1, !tbaa !12
  store <8 x float> %1005, <8 x float>* %928, align 1, !tbaa !12
  store <8 x float> %1006, <8 x float>* %932, align 1, !tbaa !12
  store <8 x float> %1007, <8 x float>* %936, align 1, !tbaa !12
  store <8 x float> %1008, <8 x float>* %940, align 1, !tbaa !12
  store <8 x float> %1009, <8 x float>* %944, align 1, !tbaa !12
  store <8 x float> %1010, <8 x float>* %948, align 1, !tbaa !12
  store <8 x float> %1011, <8 x float>* %952, align 1, !tbaa !12
  store <8 x float> %1012, <8 x float>* %956, align 1, !tbaa !12
  %1013 = add nuw nsw i64 %869, 88
  %1014 = icmp ult i64 %1013, %702
  br i1 %1014, label %868, label %862

1015:                                             ; preds = %1021
  br i1 %545, label %1016, label %1168

1016:                                             ; preds = %1015
  %1017 = trunc i64 %56 to i32
  %1018 = mul nsw i32 %544, %1017
  %1019 = sext i32 %1018 to i64
  %1020 = zext i32 %544 to i64
  br label %1175

1021:                                             ; preds = %863, %1021
  %1022 = phi i64 [ 0, %863 ], [ %1166, %1021 ]
  %1023 = getelementptr inbounds float, float* %5, i64 %1022
  %1024 = getelementptr inbounds float, float* %1023, i64 8
  %1025 = bitcast float* %1024 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1025, i32 0, i32 1, i32 1)
  %1026 = getelementptr inbounds float, float* %3, i64 %1022
  %1027 = getelementptr inbounds float, float* %1026, i64 8
  %1028 = bitcast float* %1027 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1028, i32 0, i32 1, i32 1)
  %1029 = getelementptr inbounds float, float* %1023, i64 16
  %1030 = bitcast float* %1029 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1030, i32 0, i32 1, i32 1)
  %1031 = getelementptr inbounds float, float* %1026, i64 16
  %1032 = bitcast float* %1031 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1032, i32 0, i32 1, i32 1)
  %1033 = getelementptr inbounds float, float* %1023, i64 24
  %1034 = bitcast float* %1033 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1034, i32 0, i32 1, i32 1)
  %1035 = getelementptr inbounds float, float* %1026, i64 24
  %1036 = bitcast float* %1035 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1036, i32 0, i32 1, i32 1)
  %1037 = getelementptr inbounds float, float* %1023, i64 32
  %1038 = bitcast float* %1037 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1038, i32 0, i32 1, i32 1)
  %1039 = getelementptr inbounds float, float* %1026, i64 32
  %1040 = bitcast float* %1039 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1040, i32 0, i32 1, i32 1)
  %1041 = getelementptr inbounds float, float* %1023, i64 40
  %1042 = bitcast float* %1041 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1042, i32 0, i32 1, i32 1)
  %1043 = getelementptr inbounds float, float* %1026, i64 40
  %1044 = bitcast float* %1043 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1044, i32 0, i32 1, i32 1)
  %1045 = getelementptr inbounds float, float* %1023, i64 48
  %1046 = bitcast float* %1045 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1046, i32 0, i32 1, i32 1)
  %1047 = getelementptr inbounds float, float* %1026, i64 48
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = getelementptr inbounds float, float* %1023, i64 56
  %1050 = bitcast float* %1049 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1050, i32 0, i32 1, i32 1)
  %1051 = getelementptr inbounds float, float* %1026, i64 56
  %1052 = bitcast float* %1051 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1052, i32 0, i32 1, i32 1)
  %1053 = getelementptr inbounds float, float* %1023, i64 64
  %1054 = bitcast float* %1053 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1054, i32 0, i32 1, i32 1)
  %1055 = getelementptr inbounds float, float* %1026, i64 64
  %1056 = bitcast float* %1055 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1056, i32 0, i32 1, i32 1)
  %1057 = getelementptr inbounds float, float* %1023, i64 72
  %1058 = bitcast float* %1057 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1058, i32 0, i32 1, i32 1)
  %1059 = getelementptr inbounds float, float* %1026, i64 72
  %1060 = bitcast float* %1059 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1060, i32 0, i32 1, i32 1)
  %1061 = getelementptr inbounds float, float* %1023, i64 80
  %1062 = bitcast float* %1061 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1062, i32 0, i32 1, i32 1)
  %1063 = getelementptr inbounds float, float* %1026, i64 80
  %1064 = bitcast float* %1063 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1064, i32 0, i32 1, i32 1)
  %1065 = getelementptr inbounds float, float* %1023, i64 88
  %1066 = bitcast float* %1065 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1066, i32 0, i32 1, i32 1)
  %1067 = getelementptr inbounds float, float* %1026, i64 88
  %1068 = bitcast float* %1067 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1068, i32 0, i32 1, i32 1)
  %1069 = bitcast float* %1023 to <8 x float>*
  %1070 = load <8 x float>, <8 x float>* %1069, align 1, !tbaa !12
  %1071 = add nuw nsw i64 %1022, 8
  %1072 = getelementptr inbounds float, float* %5, i64 %1071
  %1073 = bitcast float* %1072 to <8 x float>*
  %1074 = load <8 x float>, <8 x float>* %1073, align 1, !tbaa !12
  %1075 = add nuw nsw i64 %1022, 16
  %1076 = getelementptr inbounds float, float* %5, i64 %1075
  %1077 = bitcast float* %1076 to <8 x float>*
  %1078 = load <8 x float>, <8 x float>* %1077, align 1, !tbaa !12
  %1079 = add nuw nsw i64 %1022, 24
  %1080 = getelementptr inbounds float, float* %5, i64 %1079
  %1081 = bitcast float* %1080 to <8 x float>*
  %1082 = load <8 x float>, <8 x float>* %1081, align 1, !tbaa !12
  %1083 = add nuw nsw i64 %1022, 32
  %1084 = getelementptr inbounds float, float* %5, i64 %1083
  %1085 = bitcast float* %1084 to <8 x float>*
  %1086 = load <8 x float>, <8 x float>* %1085, align 1, !tbaa !12
  %1087 = add nuw nsw i64 %1022, 40
  %1088 = getelementptr inbounds float, float* %5, i64 %1087
  %1089 = bitcast float* %1088 to <8 x float>*
  %1090 = load <8 x float>, <8 x float>* %1089, align 1, !tbaa !12
  %1091 = add nuw nsw i64 %1022, 48
  %1092 = getelementptr inbounds float, float* %5, i64 %1091
  %1093 = bitcast float* %1092 to <8 x float>*
  %1094 = load <8 x float>, <8 x float>* %1093, align 1, !tbaa !12
  %1095 = add nuw nsw i64 %1022, 56
  %1096 = getelementptr inbounds float, float* %5, i64 %1095
  %1097 = bitcast float* %1096 to <8 x float>*
  %1098 = load <8 x float>, <8 x float>* %1097, align 1, !tbaa !12
  %1099 = add nuw nsw i64 %1022, 64
  %1100 = getelementptr inbounds float, float* %5, i64 %1099
  %1101 = bitcast float* %1100 to <8 x float>*
  %1102 = load <8 x float>, <8 x float>* %1101, align 1, !tbaa !12
  %1103 = add nuw nsw i64 %1022, 72
  %1104 = getelementptr inbounds float, float* %5, i64 %1103
  %1105 = bitcast float* %1104 to <8 x float>*
  %1106 = load <8 x float>, <8 x float>* %1105, align 1, !tbaa !12
  %1107 = add nuw nsw i64 %1022, 80
  %1108 = getelementptr inbounds float, float* %5, i64 %1107
  %1109 = bitcast float* %1108 to <8 x float>*
  %1110 = load <8 x float>, <8 x float>* %1109, align 1, !tbaa !12
  %1111 = add nsw i64 %1022, %866
  %1112 = getelementptr inbounds float, float* %3, i64 %1111
  %1113 = bitcast float* %1112 to <8 x float>*
  %1114 = load <8 x float>, <8 x float>* %1113, align 1, !tbaa !12
  %1115 = add nsw i64 %1111, 8
  %1116 = getelementptr inbounds float, float* %3, i64 %1115
  %1117 = bitcast float* %1116 to <8 x float>*
  %1118 = load <8 x float>, <8 x float>* %1117, align 1, !tbaa !12
  %1119 = add nsw i64 %1111, 16
  %1120 = getelementptr inbounds float, float* %3, i64 %1119
  %1121 = bitcast float* %1120 to <8 x float>*
  %1122 = load <8 x float>, <8 x float>* %1121, align 1, !tbaa !12
  %1123 = add nsw i64 %1111, 24
  %1124 = getelementptr inbounds float, float* %3, i64 %1123
  %1125 = bitcast float* %1124 to <8 x float>*
  %1126 = load <8 x float>, <8 x float>* %1125, align 1, !tbaa !12
  %1127 = add nsw i64 %1111, 32
  %1128 = getelementptr inbounds float, float* %3, i64 %1127
  %1129 = bitcast float* %1128 to <8 x float>*
  %1130 = load <8 x float>, <8 x float>* %1129, align 1, !tbaa !12
  %1131 = add nsw i64 %1111, 40
  %1132 = getelementptr inbounds float, float* %3, i64 %1131
  %1133 = bitcast float* %1132 to <8 x float>*
  %1134 = load <8 x float>, <8 x float>* %1133, align 1, !tbaa !12
  %1135 = add nsw i64 %1111, 48
  %1136 = getelementptr inbounds float, float* %3, i64 %1135
  %1137 = bitcast float* %1136 to <8 x float>*
  %1138 = load <8 x float>, <8 x float>* %1137, align 1, !tbaa !12
  %1139 = add nsw i64 %1111, 56
  %1140 = getelementptr inbounds float, float* %3, i64 %1139
  %1141 = bitcast float* %1140 to <8 x float>*
  %1142 = load <8 x float>, <8 x float>* %1141, align 1, !tbaa !12
  %1143 = add nsw i64 %1111, 64
  %1144 = getelementptr inbounds float, float* %3, i64 %1143
  %1145 = bitcast float* %1144 to <8 x float>*
  %1146 = load <8 x float>, <8 x float>* %1145, align 1, !tbaa !12
  %1147 = add nsw i64 %1111, 72
  %1148 = getelementptr inbounds float, float* %3, i64 %1147
  %1149 = bitcast float* %1148 to <8 x float>*
  %1150 = load <8 x float>, <8 x float>* %1149, align 1, !tbaa !12
  %1151 = add nsw i64 %1111, 80
  %1152 = getelementptr inbounds float, float* %3, i64 %1151
  %1153 = bitcast float* %1152 to <8 x float>*
  %1154 = load <8 x float>, <8 x float>* %1153, align 1, !tbaa !12
  %1155 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1114, <8 x float> %55, <8 x float> %1070) #10
  %1156 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1118, <8 x float> %55, <8 x float> %1074) #10
  %1157 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1122, <8 x float> %55, <8 x float> %1078) #10
  %1158 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1126, <8 x float> %55, <8 x float> %1082) #10
  %1159 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1130, <8 x float> %55, <8 x float> %1086) #10
  %1160 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1134, <8 x float> %55, <8 x float> %1090) #10
  %1161 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1138, <8 x float> %55, <8 x float> %1094) #10
  %1162 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1142, <8 x float> %55, <8 x float> %1098) #10
  %1163 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1146, <8 x float> %55, <8 x float> %1102) #10
  %1164 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1150, <8 x float> %55, <8 x float> %1106) #10
  %1165 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1154, <8 x float> %55, <8 x float> %1110) #10
  store <8 x float> %1155, <8 x float>* %1069, align 1, !tbaa !12
  store <8 x float> %1156, <8 x float>* %1073, align 1, !tbaa !12
  store <8 x float> %1157, <8 x float>* %1077, align 1, !tbaa !12
  store <8 x float> %1158, <8 x float>* %1081, align 1, !tbaa !12
  store <8 x float> %1159, <8 x float>* %1085, align 1, !tbaa !12
  store <8 x float> %1160, <8 x float>* %1089, align 1, !tbaa !12
  store <8 x float> %1161, <8 x float>* %1093, align 1, !tbaa !12
  store <8 x float> %1162, <8 x float>* %1097, align 1, !tbaa !12
  store <8 x float> %1163, <8 x float>* %1101, align 1, !tbaa !12
  store <8 x float> %1164, <8 x float>* %1105, align 1, !tbaa !12
  store <8 x float> %1165, <8 x float>* %1109, align 1, !tbaa !12
  %1166 = add nuw nsw i64 %1022, 88
  %1167 = icmp ult i64 %1166, %867
  br i1 %1167, label %1021, label %1015

1168:                                             ; preds = %1175, %697, %862, %1015
  %1169 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1170 = icmp sgt i32 %1169, 0
  br i1 %1170, label %1171, label %1322

1171:                                             ; preds = %1168
  %1172 = zext i32 %1169 to i64
  %1173 = trunc i64 %61 to i32
  %1174 = mul nsw i32 %1169, %1173
  br label %1327

1175:                                             ; preds = %1016, %1175
  %1176 = phi i64 [ 0, %1016 ], [ %1320, %1175 ]
  %1177 = getelementptr inbounds float, float* %5, i64 %1176
  %1178 = getelementptr inbounds float, float* %1177, i64 8
  %1179 = bitcast float* %1178 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1179, i32 0, i32 1, i32 1)
  %1180 = getelementptr inbounds float, float* %3, i64 %1176
  %1181 = getelementptr inbounds float, float* %1180, i64 8
  %1182 = bitcast float* %1181 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1182, i32 0, i32 1, i32 1)
  %1183 = getelementptr inbounds float, float* %1177, i64 16
  %1184 = bitcast float* %1183 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1184, i32 0, i32 1, i32 1)
  %1185 = getelementptr inbounds float, float* %1180, i64 16
  %1186 = bitcast float* %1185 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1186, i32 0, i32 1, i32 1)
  %1187 = getelementptr inbounds float, float* %1177, i64 24
  %1188 = bitcast float* %1187 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1188, i32 0, i32 1, i32 1)
  %1189 = getelementptr inbounds float, float* %1180, i64 24
  %1190 = bitcast float* %1189 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1190, i32 0, i32 1, i32 1)
  %1191 = getelementptr inbounds float, float* %1177, i64 32
  %1192 = bitcast float* %1191 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1192, i32 0, i32 1, i32 1)
  %1193 = getelementptr inbounds float, float* %1180, i64 32
  %1194 = bitcast float* %1193 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1194, i32 0, i32 1, i32 1)
  %1195 = getelementptr inbounds float, float* %1177, i64 40
  %1196 = bitcast float* %1195 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1196, i32 0, i32 1, i32 1)
  %1197 = getelementptr inbounds float, float* %1180, i64 40
  %1198 = bitcast float* %1197 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1198, i32 0, i32 1, i32 1)
  %1199 = getelementptr inbounds float, float* %1177, i64 48
  %1200 = bitcast float* %1199 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1200, i32 0, i32 1, i32 1)
  %1201 = getelementptr inbounds float, float* %1180, i64 48
  %1202 = bitcast float* %1201 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1202, i32 0, i32 1, i32 1)
  %1203 = getelementptr inbounds float, float* %1177, i64 56
  %1204 = bitcast float* %1203 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1204, i32 0, i32 1, i32 1)
  %1205 = getelementptr inbounds float, float* %1180, i64 56
  %1206 = bitcast float* %1205 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1206, i32 0, i32 1, i32 1)
  %1207 = getelementptr inbounds float, float* %1177, i64 64
  %1208 = bitcast float* %1207 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1208, i32 0, i32 1, i32 1)
  %1209 = getelementptr inbounds float, float* %1180, i64 64
  %1210 = bitcast float* %1209 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1210, i32 0, i32 1, i32 1)
  %1211 = getelementptr inbounds float, float* %1177, i64 72
  %1212 = bitcast float* %1211 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1212, i32 0, i32 1, i32 1)
  %1213 = getelementptr inbounds float, float* %1180, i64 72
  %1214 = bitcast float* %1213 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1214, i32 0, i32 1, i32 1)
  %1215 = getelementptr inbounds float, float* %1177, i64 80
  %1216 = bitcast float* %1215 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1216, i32 0, i32 1, i32 1)
  %1217 = getelementptr inbounds float, float* %1180, i64 80
  %1218 = bitcast float* %1217 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1218, i32 0, i32 1, i32 1)
  %1219 = getelementptr inbounds float, float* %1177, i64 88
  %1220 = bitcast float* %1219 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1220, i32 0, i32 1, i32 1)
  %1221 = getelementptr inbounds float, float* %1180, i64 88
  %1222 = bitcast float* %1221 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1222, i32 0, i32 1, i32 1)
  %1223 = bitcast float* %1177 to <8 x float>*
  %1224 = load <8 x float>, <8 x float>* %1223, align 1, !tbaa !12
  %1225 = add nuw nsw i64 %1176, 8
  %1226 = getelementptr inbounds float, float* %5, i64 %1225
  %1227 = bitcast float* %1226 to <8 x float>*
  %1228 = load <8 x float>, <8 x float>* %1227, align 1, !tbaa !12
  %1229 = add nuw nsw i64 %1176, 16
  %1230 = getelementptr inbounds float, float* %5, i64 %1229
  %1231 = bitcast float* %1230 to <8 x float>*
  %1232 = load <8 x float>, <8 x float>* %1231, align 1, !tbaa !12
  %1233 = add nuw nsw i64 %1176, 24
  %1234 = getelementptr inbounds float, float* %5, i64 %1233
  %1235 = bitcast float* %1234 to <8 x float>*
  %1236 = load <8 x float>, <8 x float>* %1235, align 1, !tbaa !12
  %1237 = add nuw nsw i64 %1176, 32
  %1238 = getelementptr inbounds float, float* %5, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nuw nsw i64 %1176, 40
  %1242 = getelementptr inbounds float, float* %5, i64 %1241
  %1243 = bitcast float* %1242 to <8 x float>*
  %1244 = load <8 x float>, <8 x float>* %1243, align 1, !tbaa !12
  %1245 = add nuw nsw i64 %1176, 48
  %1246 = getelementptr inbounds float, float* %5, i64 %1245
  %1247 = bitcast float* %1246 to <8 x float>*
  %1248 = load <8 x float>, <8 x float>* %1247, align 1, !tbaa !12
  %1249 = add nuw nsw i64 %1176, 56
  %1250 = getelementptr inbounds float, float* %5, i64 %1249
  %1251 = bitcast float* %1250 to <8 x float>*
  %1252 = load <8 x float>, <8 x float>* %1251, align 1, !tbaa !12
  %1253 = add nuw nsw i64 %1176, 64
  %1254 = getelementptr inbounds float, float* %5, i64 %1253
  %1255 = bitcast float* %1254 to <8 x float>*
  %1256 = load <8 x float>, <8 x float>* %1255, align 1, !tbaa !12
  %1257 = add nuw nsw i64 %1176, 72
  %1258 = getelementptr inbounds float, float* %5, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nuw nsw i64 %1176, 80
  %1262 = getelementptr inbounds float, float* %5, i64 %1261
  %1263 = bitcast float* %1262 to <8 x float>*
  %1264 = load <8 x float>, <8 x float>* %1263, align 1, !tbaa !12
  %1265 = add nsw i64 %1176, %1019
  %1266 = getelementptr inbounds float, float* %3, i64 %1265
  %1267 = bitcast float* %1266 to <8 x float>*
  %1268 = load <8 x float>, <8 x float>* %1267, align 1, !tbaa !12
  %1269 = add nsw i64 %1265, 8
  %1270 = getelementptr inbounds float, float* %3, i64 %1269
  %1271 = bitcast float* %1270 to <8 x float>*
  %1272 = load <8 x float>, <8 x float>* %1271, align 1, !tbaa !12
  %1273 = add nsw i64 %1265, 16
  %1274 = getelementptr inbounds float, float* %3, i64 %1273
  %1275 = bitcast float* %1274 to <8 x float>*
  %1276 = load <8 x float>, <8 x float>* %1275, align 1, !tbaa !12
  %1277 = add nsw i64 %1265, 24
  %1278 = getelementptr inbounds float, float* %3, i64 %1277
  %1279 = bitcast float* %1278 to <8 x float>*
  %1280 = load <8 x float>, <8 x float>* %1279, align 1, !tbaa !12
  %1281 = add nsw i64 %1265, 32
  %1282 = getelementptr inbounds float, float* %3, i64 %1281
  %1283 = bitcast float* %1282 to <8 x float>*
  %1284 = load <8 x float>, <8 x float>* %1283, align 1, !tbaa !12
  %1285 = add nsw i64 %1265, 40
  %1286 = getelementptr inbounds float, float* %3, i64 %1285
  %1287 = bitcast float* %1286 to <8 x float>*
  %1288 = load <8 x float>, <8 x float>* %1287, align 1, !tbaa !12
  %1289 = add nsw i64 %1265, 48
  %1290 = getelementptr inbounds float, float* %3, i64 %1289
  %1291 = bitcast float* %1290 to <8 x float>*
  %1292 = load <8 x float>, <8 x float>* %1291, align 1, !tbaa !12
  %1293 = add nsw i64 %1265, 56
  %1294 = getelementptr inbounds float, float* %3, i64 %1293
  %1295 = bitcast float* %1294 to <8 x float>*
  %1296 = load <8 x float>, <8 x float>* %1295, align 1, !tbaa !12
  %1297 = add nsw i64 %1265, 64
  %1298 = getelementptr inbounds float, float* %3, i64 %1297
  %1299 = bitcast float* %1298 to <8 x float>*
  %1300 = load <8 x float>, <8 x float>* %1299, align 1, !tbaa !12
  %1301 = add nsw i64 %1265, 72
  %1302 = getelementptr inbounds float, float* %3, i64 %1301
  %1303 = bitcast float* %1302 to <8 x float>*
  %1304 = load <8 x float>, <8 x float>* %1303, align 1, !tbaa !12
  %1305 = add nsw i64 %1265, 80
  %1306 = getelementptr inbounds float, float* %3, i64 %1305
  %1307 = bitcast float* %1306 to <8 x float>*
  %1308 = load <8 x float>, <8 x float>* %1307, align 1, !tbaa !12
  %1309 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1268, <8 x float> %60, <8 x float> %1224) #10
  %1310 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1272, <8 x float> %60, <8 x float> %1228) #10
  %1311 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1276, <8 x float> %60, <8 x float> %1232) #10
  %1312 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1280, <8 x float> %60, <8 x float> %1236) #10
  %1313 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1284, <8 x float> %60, <8 x float> %1240) #10
  %1314 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1288, <8 x float> %60, <8 x float> %1244) #10
  %1315 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1292, <8 x float> %60, <8 x float> %1248) #10
  %1316 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1296, <8 x float> %60, <8 x float> %1252) #10
  %1317 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1300, <8 x float> %60, <8 x float> %1256) #10
  %1318 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1304, <8 x float> %60, <8 x float> %1260) #10
  %1319 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1308, <8 x float> %60, <8 x float> %1264) #10
  store <8 x float> %1309, <8 x float>* %1223, align 1, !tbaa !12
  store <8 x float> %1310, <8 x float>* %1227, align 1, !tbaa !12
  store <8 x float> %1311, <8 x float>* %1231, align 1, !tbaa !12
  store <8 x float> %1312, <8 x float>* %1235, align 1, !tbaa !12
  store <8 x float> %1313, <8 x float>* %1239, align 1, !tbaa !12
  store <8 x float> %1314, <8 x float>* %1243, align 1, !tbaa !12
  store <8 x float> %1315, <8 x float>* %1247, align 1, !tbaa !12
  store <8 x float> %1316, <8 x float>* %1251, align 1, !tbaa !12
  store <8 x float> %1317, <8 x float>* %1255, align 1, !tbaa !12
  store <8 x float> %1318, <8 x float>* %1259, align 1, !tbaa !12
  store <8 x float> %1319, <8 x float>* %1263, align 1, !tbaa !12
  %1320 = add nuw nsw i64 %1176, 88
  %1321 = icmp ult i64 %1320, %1020
  br i1 %1321, label %1175, label %1168

1322:                                             ; preds = %1327, %20, %543, %1168
  %1323 = add nuw nsw i64 %21, 9
  %1324 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1325 = sext i32 %1324 to i64
  %1326 = icmp slt i64 %1323, %1325
  br i1 %1326, label %20, label %8

1327:                                             ; preds = %1171, %1327
  %1328 = phi i64 [ 0, %1171 ], [ %1484, %1327 ]
  %1329 = getelementptr inbounds float, float* %5, i64 %1328
  %1330 = getelementptr inbounds float, float* %1329, i64 8
  %1331 = bitcast float* %1330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1331, i32 0, i32 1, i32 1)
  %1332 = getelementptr inbounds float, float* %3, i64 %1328
  %1333 = getelementptr inbounds float, float* %1332, i64 8
  %1334 = bitcast float* %1333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1334, i32 0, i32 1, i32 1)
  %1335 = getelementptr inbounds float, float* %1329, i64 16
  %1336 = bitcast float* %1335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1336, i32 0, i32 1, i32 1)
  %1337 = getelementptr inbounds float, float* %1332, i64 16
  %1338 = bitcast float* %1337 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1338, i32 0, i32 1, i32 1)
  %1339 = getelementptr inbounds float, float* %1329, i64 24
  %1340 = bitcast float* %1339 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1340, i32 0, i32 1, i32 1)
  %1341 = getelementptr inbounds float, float* %1332, i64 24
  %1342 = bitcast float* %1341 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1342, i32 0, i32 1, i32 1)
  %1343 = getelementptr inbounds float, float* %1329, i64 32
  %1344 = bitcast float* %1343 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1344, i32 0, i32 1, i32 1)
  %1345 = getelementptr inbounds float, float* %1332, i64 32
  %1346 = bitcast float* %1345 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1346, i32 0, i32 1, i32 1)
  %1347 = getelementptr inbounds float, float* %1329, i64 40
  %1348 = bitcast float* %1347 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1348, i32 0, i32 1, i32 1)
  %1349 = getelementptr inbounds float, float* %1332, i64 40
  %1350 = bitcast float* %1349 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1350, i32 0, i32 1, i32 1)
  %1351 = getelementptr inbounds float, float* %1329, i64 48
  %1352 = bitcast float* %1351 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1352, i32 0, i32 1, i32 1)
  %1353 = getelementptr inbounds float, float* %1332, i64 48
  %1354 = bitcast float* %1353 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1354, i32 0, i32 1, i32 1)
  %1355 = getelementptr inbounds float, float* %1329, i64 56
  %1356 = bitcast float* %1355 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1356, i32 0, i32 1, i32 1)
  %1357 = getelementptr inbounds float, float* %1332, i64 56
  %1358 = bitcast float* %1357 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1358, i32 0, i32 1, i32 1)
  %1359 = getelementptr inbounds float, float* %1329, i64 64
  %1360 = bitcast float* %1359 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1360, i32 0, i32 1, i32 1)
  %1361 = getelementptr inbounds float, float* %1332, i64 64
  %1362 = bitcast float* %1361 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1362, i32 0, i32 1, i32 1)
  %1363 = getelementptr inbounds float, float* %1329, i64 72
  %1364 = bitcast float* %1363 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1364, i32 0, i32 1, i32 1)
  %1365 = getelementptr inbounds float, float* %1332, i64 72
  %1366 = bitcast float* %1365 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1366, i32 0, i32 1, i32 1)
  %1367 = getelementptr inbounds float, float* %1329, i64 80
  %1368 = bitcast float* %1367 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1368, i32 0, i32 1, i32 1)
  %1369 = getelementptr inbounds float, float* %1332, i64 80
  %1370 = bitcast float* %1369 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1370, i32 0, i32 1, i32 1)
  %1371 = getelementptr inbounds float, float* %1329, i64 88
  %1372 = bitcast float* %1371 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1372, i32 0, i32 1, i32 1)
  %1373 = getelementptr inbounds float, float* %1332, i64 88
  %1374 = bitcast float* %1373 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1374, i32 0, i32 1, i32 1)
  %1375 = bitcast float* %1329 to <8 x float>*
  %1376 = load <8 x float>, <8 x float>* %1375, align 1, !tbaa !12
  %1377 = add nuw nsw i64 %1328, 8
  %1378 = getelementptr inbounds float, float* %5, i64 %1377
  %1379 = bitcast float* %1378 to <8 x float>*
  %1380 = load <8 x float>, <8 x float>* %1379, align 1, !tbaa !12
  %1381 = add nuw nsw i64 %1328, 16
  %1382 = getelementptr inbounds float, float* %5, i64 %1381
  %1383 = bitcast float* %1382 to <8 x float>*
  %1384 = load <8 x float>, <8 x float>* %1383, align 1, !tbaa !12
  %1385 = add nuw nsw i64 %1328, 24
  %1386 = getelementptr inbounds float, float* %5, i64 %1385
  %1387 = bitcast float* %1386 to <8 x float>*
  %1388 = load <8 x float>, <8 x float>* %1387, align 1, !tbaa !12
  %1389 = add nuw nsw i64 %1328, 32
  %1390 = getelementptr inbounds float, float* %5, i64 %1389
  %1391 = bitcast float* %1390 to <8 x float>*
  %1392 = load <8 x float>, <8 x float>* %1391, align 1, !tbaa !12
  %1393 = add nuw nsw i64 %1328, 40
  %1394 = getelementptr inbounds float, float* %5, i64 %1393
  %1395 = bitcast float* %1394 to <8 x float>*
  %1396 = load <8 x float>, <8 x float>* %1395, align 1, !tbaa !12
  %1397 = add nuw nsw i64 %1328, 48
  %1398 = getelementptr inbounds float, float* %5, i64 %1397
  %1399 = bitcast float* %1398 to <8 x float>*
  %1400 = load <8 x float>, <8 x float>* %1399, align 1, !tbaa !12
  %1401 = add nuw nsw i64 %1328, 56
  %1402 = getelementptr inbounds float, float* %5, i64 %1401
  %1403 = bitcast float* %1402 to <8 x float>*
  %1404 = load <8 x float>, <8 x float>* %1403, align 1, !tbaa !12
  %1405 = add nuw nsw i64 %1328, 64
  %1406 = getelementptr inbounds float, float* %5, i64 %1405
  %1407 = bitcast float* %1406 to <8 x float>*
  %1408 = load <8 x float>, <8 x float>* %1407, align 1, !tbaa !12
  %1409 = add nuw nsw i64 %1328, 72
  %1410 = getelementptr inbounds float, float* %5, i64 %1409
  %1411 = bitcast float* %1410 to <8 x float>*
  %1412 = load <8 x float>, <8 x float>* %1411, align 1, !tbaa !12
  %1413 = add nuw nsw i64 %1328, 80
  %1414 = getelementptr inbounds float, float* %5, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = trunc i64 %1328 to i32
  %1418 = add nsw i32 %1174, %1417
  %1419 = sext i32 %1418 to i64
  %1420 = getelementptr inbounds float, float* %3, i64 %1419
  %1421 = bitcast float* %1420 to <8 x float>*
  %1422 = load <8 x float>, <8 x float>* %1421, align 1, !tbaa !12
  %1423 = add nsw i32 %1418, 8
  %1424 = sext i32 %1423 to i64
  %1425 = getelementptr inbounds float, float* %3, i64 %1424
  %1426 = bitcast float* %1425 to <8 x float>*
  %1427 = load <8 x float>, <8 x float>* %1426, align 1, !tbaa !12
  %1428 = add nsw i32 %1418, 16
  %1429 = sext i32 %1428 to i64
  %1430 = getelementptr inbounds float, float* %3, i64 %1429
  %1431 = bitcast float* %1430 to <8 x float>*
  %1432 = load <8 x float>, <8 x float>* %1431, align 1, !tbaa !12
  %1433 = add nsw i32 %1418, 24
  %1434 = sext i32 %1433 to i64
  %1435 = getelementptr inbounds float, float* %3, i64 %1434
  %1436 = bitcast float* %1435 to <8 x float>*
  %1437 = load <8 x float>, <8 x float>* %1436, align 1, !tbaa !12
  %1438 = add nsw i32 %1418, 32
  %1439 = sext i32 %1438 to i64
  %1440 = getelementptr inbounds float, float* %3, i64 %1439
  %1441 = bitcast float* %1440 to <8 x float>*
  %1442 = load <8 x float>, <8 x float>* %1441, align 1, !tbaa !12
  %1443 = add nsw i32 %1418, 40
  %1444 = sext i32 %1443 to i64
  %1445 = getelementptr inbounds float, float* %3, i64 %1444
  %1446 = bitcast float* %1445 to <8 x float>*
  %1447 = load <8 x float>, <8 x float>* %1446, align 1, !tbaa !12
  %1448 = add nsw i32 %1418, 48
  %1449 = sext i32 %1448 to i64
  %1450 = getelementptr inbounds float, float* %3, i64 %1449
  %1451 = bitcast float* %1450 to <8 x float>*
  %1452 = load <8 x float>, <8 x float>* %1451, align 1, !tbaa !12
  %1453 = add nsw i32 %1418, 56
  %1454 = sext i32 %1453 to i64
  %1455 = getelementptr inbounds float, float* %3, i64 %1454
  %1456 = bitcast float* %1455 to <8 x float>*
  %1457 = load <8 x float>, <8 x float>* %1456, align 1, !tbaa !12
  %1458 = add nsw i32 %1418, 64
  %1459 = sext i32 %1458 to i64
  %1460 = getelementptr inbounds float, float* %3, i64 %1459
  %1461 = bitcast float* %1460 to <8 x float>*
  %1462 = load <8 x float>, <8 x float>* %1461, align 1, !tbaa !12
  %1463 = add nsw i32 %1418, 72
  %1464 = sext i32 %1463 to i64
  %1465 = getelementptr inbounds float, float* %3, i64 %1464
  %1466 = bitcast float* %1465 to <8 x float>*
  %1467 = load <8 x float>, <8 x float>* %1466, align 1, !tbaa !12
  %1468 = add nsw i32 %1418, 80
  %1469 = sext i32 %1468 to i64
  %1470 = getelementptr inbounds float, float* %3, i64 %1469
  %1471 = bitcast float* %1470 to <8 x float>*
  %1472 = load <8 x float>, <8 x float>* %1471, align 1, !tbaa !12
  %1473 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1422, <8 x float> %65, <8 x float> %1376) #10
  %1474 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1427, <8 x float> %65, <8 x float> %1380) #10
  %1475 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1432, <8 x float> %65, <8 x float> %1384) #10
  %1476 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1437, <8 x float> %65, <8 x float> %1388) #10
  %1477 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1442, <8 x float> %65, <8 x float> %1392) #10
  %1478 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1447, <8 x float> %65, <8 x float> %1396) #10
  %1479 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1452, <8 x float> %65, <8 x float> %1400) #10
  %1480 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1457, <8 x float> %65, <8 x float> %1404) #10
  %1481 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1462, <8 x float> %65, <8 x float> %1408) #10
  %1482 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1467, <8 x float> %65, <8 x float> %1412) #10
  %1483 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1472, <8 x float> %65, <8 x float> %1416) #10
  store <8 x float> %1473, <8 x float>* %1375, align 1, !tbaa !12
  store <8 x float> %1474, <8 x float>* %1379, align 1, !tbaa !12
  store <8 x float> %1475, <8 x float>* %1383, align 1, !tbaa !12
  store <8 x float> %1476, <8 x float>* %1387, align 1, !tbaa !12
  store <8 x float> %1477, <8 x float>* %1391, align 1, !tbaa !12
  store <8 x float> %1478, <8 x float>* %1395, align 1, !tbaa !12
  store <8 x float> %1479, <8 x float>* %1399, align 1, !tbaa !12
  store <8 x float> %1480, <8 x float>* %1403, align 1, !tbaa !12
  store <8 x float> %1481, <8 x float>* %1407, align 1, !tbaa !12
  store <8 x float> %1482, <8 x float>* %1411, align 1, !tbaa !12
  store <8 x float> %1483, <8 x float>* %1415, align 1, !tbaa !12
  %1484 = add nuw nsw i64 %1328, 88
  %1485 = icmp ult i64 %1484, %1172
  br i1 %1485, label %1327, label %1322
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 207
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui11_uk9.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
