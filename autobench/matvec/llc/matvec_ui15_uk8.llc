; ModuleID = 'codes/matvec_ui15_uk8.cpp'
source_filename = "codes/matvec_ui15_uk8.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui15_uk8.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 120
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = sdiv i32 %4, 64
  %6 = shl nsw i32 %5, 6
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1552, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1552
  %21 = phi i64 [ %1553, %1552 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = or i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = or i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = or i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = or i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = or i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = or i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %1552

63:                                               ; preds = %20
  %64 = zext i32 %61 to i64
  %65 = trunc i64 %21 to i32
  %66 = mul nsw i32 %61, %65
  br label %73

67:                                               ; preds = %73
  br i1 %62, label %68, label %493

68:                                               ; preds = %67
  %69 = trunc i64 %26 to i32
  %70 = mul nsw i32 %61, %69
  %71 = sext i32 %70 to i64
  %72 = zext i32 %61 to i64
  br label %294

73:                                               ; preds = %63, %73
  %74 = phi i64 [ 0, %63 ], [ %286, %73 ]
  %75 = getelementptr inbounds float, float* %5, i64 %74
  %76 = getelementptr inbounds float, float* %75, i64 8
  %77 = bitcast float* %76 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %77, i32 0, i32 1, i32 1)
  %78 = getelementptr inbounds float, float* %3, i64 %74
  %79 = getelementptr inbounds float, float* %78, i64 8
  %80 = bitcast float* %79 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %80, i32 0, i32 1, i32 1)
  %81 = getelementptr inbounds float, float* %75, i64 16
  %82 = bitcast float* %81 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %82, i32 0, i32 1, i32 1)
  %83 = getelementptr inbounds float, float* %78, i64 16
  %84 = bitcast float* %83 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %84, i32 0, i32 1, i32 1)
  %85 = getelementptr inbounds float, float* %75, i64 24
  %86 = bitcast float* %85 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %86, i32 0, i32 1, i32 1)
  %87 = getelementptr inbounds float, float* %78, i64 24
  %88 = bitcast float* %87 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %88, i32 0, i32 1, i32 1)
  %89 = getelementptr inbounds float, float* %75, i64 32
  %90 = bitcast float* %89 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %90, i32 0, i32 1, i32 1)
  %91 = getelementptr inbounds float, float* %78, i64 32
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %75, i64 40
  %94 = bitcast float* %93 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %94, i32 0, i32 1, i32 1)
  %95 = getelementptr inbounds float, float* %78, i64 40
  %96 = bitcast float* %95 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %96, i32 0, i32 1, i32 1)
  %97 = getelementptr inbounds float, float* %75, i64 48
  %98 = bitcast float* %97 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %98, i32 0, i32 1, i32 1)
  %99 = getelementptr inbounds float, float* %78, i64 48
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %75, i64 56
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %78, i64 56
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %75, i64 64
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %78, i64 64
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %75, i64 72
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %78, i64 72
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %75, i64 80
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %78, i64 80
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %75, i64 88
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %78, i64 88
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %75, i64 96
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %78, i64 96
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %75, i64 104
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %78, i64 104
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %75, i64 112
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %78, i64 112
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %75, i64 120
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %78, i64 120
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = bitcast float* %75 to <8 x float>*
  %138 = load <8 x float>, <8 x float>* %137, align 1, !tbaa !12
  %139 = add nuw nsw i64 %74, 8
  %140 = getelementptr inbounds float, float* %5, i64 %139
  %141 = bitcast float* %140 to <8 x float>*
  %142 = load <8 x float>, <8 x float>* %141, align 1, !tbaa !12
  %143 = add nuw nsw i64 %74, 16
  %144 = getelementptr inbounds float, float* %5, i64 %143
  %145 = bitcast float* %144 to <8 x float>*
  %146 = load <8 x float>, <8 x float>* %145, align 1, !tbaa !12
  %147 = add nuw nsw i64 %74, 24
  %148 = getelementptr inbounds float, float* %5, i64 %147
  %149 = bitcast float* %148 to <8 x float>*
  %150 = load <8 x float>, <8 x float>* %149, align 1, !tbaa !12
  %151 = add nuw nsw i64 %74, 32
  %152 = getelementptr inbounds float, float* %5, i64 %151
  %153 = bitcast float* %152 to <8 x float>*
  %154 = load <8 x float>, <8 x float>* %153, align 1, !tbaa !12
  %155 = add nuw nsw i64 %74, 40
  %156 = getelementptr inbounds float, float* %5, i64 %155
  %157 = bitcast float* %156 to <8 x float>*
  %158 = load <8 x float>, <8 x float>* %157, align 1, !tbaa !12
  %159 = add nuw nsw i64 %74, 48
  %160 = getelementptr inbounds float, float* %5, i64 %159
  %161 = bitcast float* %160 to <8 x float>*
  %162 = load <8 x float>, <8 x float>* %161, align 1, !tbaa !12
  %163 = add nuw nsw i64 %74, 56
  %164 = getelementptr inbounds float, float* %5, i64 %163
  %165 = bitcast float* %164 to <8 x float>*
  %166 = load <8 x float>, <8 x float>* %165, align 1, !tbaa !12
  %167 = add nuw nsw i64 %74, 64
  %168 = getelementptr inbounds float, float* %5, i64 %167
  %169 = bitcast float* %168 to <8 x float>*
  %170 = load <8 x float>, <8 x float>* %169, align 1, !tbaa !12
  %171 = add nuw nsw i64 %74, 72
  %172 = getelementptr inbounds float, float* %5, i64 %171
  %173 = bitcast float* %172 to <8 x float>*
  %174 = load <8 x float>, <8 x float>* %173, align 1, !tbaa !12
  %175 = add nuw nsw i64 %74, 80
  %176 = getelementptr inbounds float, float* %5, i64 %175
  %177 = bitcast float* %176 to <8 x float>*
  %178 = load <8 x float>, <8 x float>* %177, align 1, !tbaa !12
  %179 = add nuw nsw i64 %74, 88
  %180 = getelementptr inbounds float, float* %5, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = add nuw nsw i64 %74, 96
  %184 = getelementptr inbounds float, float* %5, i64 %183
  %185 = bitcast float* %184 to <8 x float>*
  %186 = load <8 x float>, <8 x float>* %185, align 1, !tbaa !12
  %187 = add nuw nsw i64 %74, 104
  %188 = getelementptr inbounds float, float* %5, i64 %187
  %189 = bitcast float* %188 to <8 x float>*
  %190 = load <8 x float>, <8 x float>* %189, align 1, !tbaa !12
  %191 = add nuw nsw i64 %74, 112
  %192 = getelementptr inbounds float, float* %5, i64 %191
  %193 = bitcast float* %192 to <8 x float>*
  %194 = load <8 x float>, <8 x float>* %193, align 1, !tbaa !12
  %195 = trunc i64 %74 to i32
  %196 = add nsw i32 %66, %195
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds float, float* %3, i64 %197
  %199 = bitcast float* %198 to <8 x float>*
  %200 = load <8 x float>, <8 x float>* %199, align 1, !tbaa !12
  %201 = add nsw i32 %196, 8
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds float, float* %3, i64 %202
  %204 = bitcast float* %203 to <8 x float>*
  %205 = load <8 x float>, <8 x float>* %204, align 1, !tbaa !12
  %206 = add nsw i32 %196, 16
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds float, float* %3, i64 %207
  %209 = bitcast float* %208 to <8 x float>*
  %210 = load <8 x float>, <8 x float>* %209, align 1, !tbaa !12
  %211 = add nsw i32 %196, 24
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds float, float* %3, i64 %212
  %214 = bitcast float* %213 to <8 x float>*
  %215 = load <8 x float>, <8 x float>* %214, align 1, !tbaa !12
  %216 = add nsw i32 %196, 32
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds float, float* %3, i64 %217
  %219 = bitcast float* %218 to <8 x float>*
  %220 = load <8 x float>, <8 x float>* %219, align 1, !tbaa !12
  %221 = add nsw i32 %196, 40
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds float, float* %3, i64 %222
  %224 = bitcast float* %223 to <8 x float>*
  %225 = load <8 x float>, <8 x float>* %224, align 1, !tbaa !12
  %226 = add nsw i32 %196, 48
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds float, float* %3, i64 %227
  %229 = bitcast float* %228 to <8 x float>*
  %230 = load <8 x float>, <8 x float>* %229, align 1, !tbaa !12
  %231 = add nsw i32 %196, 56
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds float, float* %3, i64 %232
  %234 = bitcast float* %233 to <8 x float>*
  %235 = load <8 x float>, <8 x float>* %234, align 1, !tbaa !12
  %236 = add nsw i32 %196, 64
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds float, float* %3, i64 %237
  %239 = bitcast float* %238 to <8 x float>*
  %240 = load <8 x float>, <8 x float>* %239, align 1, !tbaa !12
  %241 = add nsw i32 %196, 72
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds float, float* %3, i64 %242
  %244 = bitcast float* %243 to <8 x float>*
  %245 = load <8 x float>, <8 x float>* %244, align 1, !tbaa !12
  %246 = add nsw i32 %196, 80
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds float, float* %3, i64 %247
  %249 = bitcast float* %248 to <8 x float>*
  %250 = load <8 x float>, <8 x float>* %249, align 1, !tbaa !12
  %251 = add nsw i32 %196, 88
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds float, float* %3, i64 %252
  %254 = bitcast float* %253 to <8 x float>*
  %255 = load <8 x float>, <8 x float>* %254, align 1, !tbaa !12
  %256 = add nsw i32 %196, 96
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds float, float* %3, i64 %257
  %259 = bitcast float* %258 to <8 x float>*
  %260 = load <8 x float>, <8 x float>* %259, align 1, !tbaa !12
  %261 = add nsw i32 %196, 104
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds float, float* %3, i64 %262
  %264 = bitcast float* %263 to <8 x float>*
  %265 = load <8 x float>, <8 x float>* %264, align 1, !tbaa !12
  %266 = add nsw i32 %196, 112
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds float, float* %3, i64 %267
  %269 = bitcast float* %268 to <8 x float>*
  %270 = load <8 x float>, <8 x float>* %269, align 1, !tbaa !12
  %271 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %200, <8 x float> %25, <8 x float> %138) #10
  %272 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %205, <8 x float> %25, <8 x float> %142) #10
  %273 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %210, <8 x float> %25, <8 x float> %146) #10
  %274 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %215, <8 x float> %25, <8 x float> %150) #10
  %275 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %220, <8 x float> %25, <8 x float> %154) #10
  %276 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %225, <8 x float> %25, <8 x float> %158) #10
  %277 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %230, <8 x float> %25, <8 x float> %162) #10
  %278 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %235, <8 x float> %25, <8 x float> %166) #10
  %279 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %240, <8 x float> %25, <8 x float> %170) #10
  %280 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %245, <8 x float> %25, <8 x float> %174) #10
  %281 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %250, <8 x float> %25, <8 x float> %178) #10
  %282 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %255, <8 x float> %25, <8 x float> %182) #10
  %283 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %260, <8 x float> %25, <8 x float> %186) #10
  %284 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %265, <8 x float> %25, <8 x float> %190) #10
  %285 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %270, <8 x float> %25, <8 x float> %194) #10
  store <8 x float> %271, <8 x float>* %137, align 1, !tbaa !12
  store <8 x float> %272, <8 x float>* %141, align 1, !tbaa !12
  store <8 x float> %273, <8 x float>* %145, align 1, !tbaa !12
  store <8 x float> %274, <8 x float>* %149, align 1, !tbaa !12
  store <8 x float> %275, <8 x float>* %153, align 1, !tbaa !12
  store <8 x float> %276, <8 x float>* %157, align 1, !tbaa !12
  store <8 x float> %277, <8 x float>* %161, align 1, !tbaa !12
  store <8 x float> %278, <8 x float>* %165, align 1, !tbaa !12
  store <8 x float> %279, <8 x float>* %169, align 1, !tbaa !12
  store <8 x float> %280, <8 x float>* %173, align 1, !tbaa !12
  store <8 x float> %281, <8 x float>* %177, align 1, !tbaa !12
  store <8 x float> %282, <8 x float>* %181, align 1, !tbaa !12
  store <8 x float> %283, <8 x float>* %185, align 1, !tbaa !12
  store <8 x float> %284, <8 x float>* %189, align 1, !tbaa !12
  store <8 x float> %285, <8 x float>* %193, align 1, !tbaa !12
  %286 = add nuw nsw i64 %74, 120
  %287 = icmp ult i64 %286, %64
  br i1 %287, label %73, label %67

288:                                              ; preds = %294
  br i1 %62, label %289, label %493

289:                                              ; preds = %288
  %290 = trunc i64 %31 to i32
  %291 = mul nsw i32 %61, %290
  %292 = sext i32 %291 to i64
  %293 = zext i32 %61 to i64
  br label %500

294:                                              ; preds = %68, %294
  %295 = phi i64 [ 0, %68 ], [ %491, %294 ]
  %296 = getelementptr inbounds float, float* %5, i64 %295
  %297 = getelementptr inbounds float, float* %296, i64 8
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %3, i64 %295
  %300 = getelementptr inbounds float, float* %299, i64 8
  %301 = bitcast float* %300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %301, i32 0, i32 1, i32 1)
  %302 = getelementptr inbounds float, float* %296, i64 16
  %303 = bitcast float* %302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %303, i32 0, i32 1, i32 1)
  %304 = getelementptr inbounds float, float* %299, i64 16
  %305 = bitcast float* %304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %305, i32 0, i32 1, i32 1)
  %306 = getelementptr inbounds float, float* %296, i64 24
  %307 = bitcast float* %306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %307, i32 0, i32 1, i32 1)
  %308 = getelementptr inbounds float, float* %299, i64 24
  %309 = bitcast float* %308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %309, i32 0, i32 1, i32 1)
  %310 = getelementptr inbounds float, float* %296, i64 32
  %311 = bitcast float* %310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %311, i32 0, i32 1, i32 1)
  %312 = getelementptr inbounds float, float* %299, i64 32
  %313 = bitcast float* %312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %313, i32 0, i32 1, i32 1)
  %314 = getelementptr inbounds float, float* %296, i64 40
  %315 = bitcast float* %314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %315, i32 0, i32 1, i32 1)
  %316 = getelementptr inbounds float, float* %299, i64 40
  %317 = bitcast float* %316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %317, i32 0, i32 1, i32 1)
  %318 = getelementptr inbounds float, float* %296, i64 48
  %319 = bitcast float* %318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %319, i32 0, i32 1, i32 1)
  %320 = getelementptr inbounds float, float* %299, i64 48
  %321 = bitcast float* %320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %321, i32 0, i32 1, i32 1)
  %322 = getelementptr inbounds float, float* %296, i64 56
  %323 = bitcast float* %322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %323, i32 0, i32 1, i32 1)
  %324 = getelementptr inbounds float, float* %299, i64 56
  %325 = bitcast float* %324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %325, i32 0, i32 1, i32 1)
  %326 = getelementptr inbounds float, float* %296, i64 64
  %327 = bitcast float* %326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %327, i32 0, i32 1, i32 1)
  %328 = getelementptr inbounds float, float* %299, i64 64
  %329 = bitcast float* %328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %329, i32 0, i32 1, i32 1)
  %330 = getelementptr inbounds float, float* %296, i64 72
  %331 = bitcast float* %330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %331, i32 0, i32 1, i32 1)
  %332 = getelementptr inbounds float, float* %299, i64 72
  %333 = bitcast float* %332 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %333, i32 0, i32 1, i32 1)
  %334 = getelementptr inbounds float, float* %296, i64 80
  %335 = bitcast float* %334 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %335, i32 0, i32 1, i32 1)
  %336 = getelementptr inbounds float, float* %299, i64 80
  %337 = bitcast float* %336 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %337, i32 0, i32 1, i32 1)
  %338 = getelementptr inbounds float, float* %296, i64 88
  %339 = bitcast float* %338 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %339, i32 0, i32 1, i32 1)
  %340 = getelementptr inbounds float, float* %299, i64 88
  %341 = bitcast float* %340 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %341, i32 0, i32 1, i32 1)
  %342 = getelementptr inbounds float, float* %296, i64 96
  %343 = bitcast float* %342 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %343, i32 0, i32 1, i32 1)
  %344 = getelementptr inbounds float, float* %299, i64 96
  %345 = bitcast float* %344 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %345, i32 0, i32 1, i32 1)
  %346 = getelementptr inbounds float, float* %296, i64 104
  %347 = bitcast float* %346 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %347, i32 0, i32 1, i32 1)
  %348 = getelementptr inbounds float, float* %299, i64 104
  %349 = bitcast float* %348 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %349, i32 0, i32 1, i32 1)
  %350 = getelementptr inbounds float, float* %296, i64 112
  %351 = bitcast float* %350 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %351, i32 0, i32 1, i32 1)
  %352 = getelementptr inbounds float, float* %299, i64 112
  %353 = bitcast float* %352 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %353, i32 0, i32 1, i32 1)
  %354 = getelementptr inbounds float, float* %296, i64 120
  %355 = bitcast float* %354 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %355, i32 0, i32 1, i32 1)
  %356 = getelementptr inbounds float, float* %299, i64 120
  %357 = bitcast float* %356 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %357, i32 0, i32 1, i32 1)
  %358 = bitcast float* %296 to <8 x float>*
  %359 = load <8 x float>, <8 x float>* %358, align 1, !tbaa !12
  %360 = add nuw nsw i64 %295, 8
  %361 = getelementptr inbounds float, float* %5, i64 %360
  %362 = bitcast float* %361 to <8 x float>*
  %363 = load <8 x float>, <8 x float>* %362, align 1, !tbaa !12
  %364 = add nuw nsw i64 %295, 16
  %365 = getelementptr inbounds float, float* %5, i64 %364
  %366 = bitcast float* %365 to <8 x float>*
  %367 = load <8 x float>, <8 x float>* %366, align 1, !tbaa !12
  %368 = add nuw nsw i64 %295, 24
  %369 = getelementptr inbounds float, float* %5, i64 %368
  %370 = bitcast float* %369 to <8 x float>*
  %371 = load <8 x float>, <8 x float>* %370, align 1, !tbaa !12
  %372 = add nuw nsw i64 %295, 32
  %373 = getelementptr inbounds float, float* %5, i64 %372
  %374 = bitcast float* %373 to <8 x float>*
  %375 = load <8 x float>, <8 x float>* %374, align 1, !tbaa !12
  %376 = add nuw nsw i64 %295, 40
  %377 = getelementptr inbounds float, float* %5, i64 %376
  %378 = bitcast float* %377 to <8 x float>*
  %379 = load <8 x float>, <8 x float>* %378, align 1, !tbaa !12
  %380 = add nuw nsw i64 %295, 48
  %381 = getelementptr inbounds float, float* %5, i64 %380
  %382 = bitcast float* %381 to <8 x float>*
  %383 = load <8 x float>, <8 x float>* %382, align 1, !tbaa !12
  %384 = add nuw nsw i64 %295, 56
  %385 = getelementptr inbounds float, float* %5, i64 %384
  %386 = bitcast float* %385 to <8 x float>*
  %387 = load <8 x float>, <8 x float>* %386, align 1, !tbaa !12
  %388 = add nuw nsw i64 %295, 64
  %389 = getelementptr inbounds float, float* %5, i64 %388
  %390 = bitcast float* %389 to <8 x float>*
  %391 = load <8 x float>, <8 x float>* %390, align 1, !tbaa !12
  %392 = add nuw nsw i64 %295, 72
  %393 = getelementptr inbounds float, float* %5, i64 %392
  %394 = bitcast float* %393 to <8 x float>*
  %395 = load <8 x float>, <8 x float>* %394, align 1, !tbaa !12
  %396 = add nuw nsw i64 %295, 80
  %397 = getelementptr inbounds float, float* %5, i64 %396
  %398 = bitcast float* %397 to <8 x float>*
  %399 = load <8 x float>, <8 x float>* %398, align 1, !tbaa !12
  %400 = add nuw nsw i64 %295, 88
  %401 = getelementptr inbounds float, float* %5, i64 %400
  %402 = bitcast float* %401 to <8 x float>*
  %403 = load <8 x float>, <8 x float>* %402, align 1, !tbaa !12
  %404 = add nuw nsw i64 %295, 96
  %405 = getelementptr inbounds float, float* %5, i64 %404
  %406 = bitcast float* %405 to <8 x float>*
  %407 = load <8 x float>, <8 x float>* %406, align 1, !tbaa !12
  %408 = add nuw nsw i64 %295, 104
  %409 = getelementptr inbounds float, float* %5, i64 %408
  %410 = bitcast float* %409 to <8 x float>*
  %411 = load <8 x float>, <8 x float>* %410, align 1, !tbaa !12
  %412 = add nuw nsw i64 %295, 112
  %413 = getelementptr inbounds float, float* %5, i64 %412
  %414 = bitcast float* %413 to <8 x float>*
  %415 = load <8 x float>, <8 x float>* %414, align 1, !tbaa !12
  %416 = add nsw i64 %295, %71
  %417 = getelementptr inbounds float, float* %3, i64 %416
  %418 = bitcast float* %417 to <8 x float>*
  %419 = load <8 x float>, <8 x float>* %418, align 1, !tbaa !12
  %420 = add nsw i64 %416, 8
  %421 = getelementptr inbounds float, float* %3, i64 %420
  %422 = bitcast float* %421 to <8 x float>*
  %423 = load <8 x float>, <8 x float>* %422, align 1, !tbaa !12
  %424 = add nsw i64 %416, 16
  %425 = getelementptr inbounds float, float* %3, i64 %424
  %426 = bitcast float* %425 to <8 x float>*
  %427 = load <8 x float>, <8 x float>* %426, align 1, !tbaa !12
  %428 = add nsw i64 %416, 24
  %429 = getelementptr inbounds float, float* %3, i64 %428
  %430 = bitcast float* %429 to <8 x float>*
  %431 = load <8 x float>, <8 x float>* %430, align 1, !tbaa !12
  %432 = add nsw i64 %416, 32
  %433 = getelementptr inbounds float, float* %3, i64 %432
  %434 = bitcast float* %433 to <8 x float>*
  %435 = load <8 x float>, <8 x float>* %434, align 1, !tbaa !12
  %436 = add nsw i64 %416, 40
  %437 = getelementptr inbounds float, float* %3, i64 %436
  %438 = bitcast float* %437 to <8 x float>*
  %439 = load <8 x float>, <8 x float>* %438, align 1, !tbaa !12
  %440 = add nsw i64 %416, 48
  %441 = getelementptr inbounds float, float* %3, i64 %440
  %442 = bitcast float* %441 to <8 x float>*
  %443 = load <8 x float>, <8 x float>* %442, align 1, !tbaa !12
  %444 = add nsw i64 %416, 56
  %445 = getelementptr inbounds float, float* %3, i64 %444
  %446 = bitcast float* %445 to <8 x float>*
  %447 = load <8 x float>, <8 x float>* %446, align 1, !tbaa !12
  %448 = add nsw i64 %416, 64
  %449 = getelementptr inbounds float, float* %3, i64 %448
  %450 = bitcast float* %449 to <8 x float>*
  %451 = load <8 x float>, <8 x float>* %450, align 1, !tbaa !12
  %452 = add nsw i64 %416, 72
  %453 = getelementptr inbounds float, float* %3, i64 %452
  %454 = bitcast float* %453 to <8 x float>*
  %455 = load <8 x float>, <8 x float>* %454, align 1, !tbaa !12
  %456 = add nsw i64 %416, 80
  %457 = getelementptr inbounds float, float* %3, i64 %456
  %458 = bitcast float* %457 to <8 x float>*
  %459 = load <8 x float>, <8 x float>* %458, align 1, !tbaa !12
  %460 = add nsw i64 %416, 88
  %461 = getelementptr inbounds float, float* %3, i64 %460
  %462 = bitcast float* %461 to <8 x float>*
  %463 = load <8 x float>, <8 x float>* %462, align 1, !tbaa !12
  %464 = add nsw i64 %416, 96
  %465 = getelementptr inbounds float, float* %3, i64 %464
  %466 = bitcast float* %465 to <8 x float>*
  %467 = load <8 x float>, <8 x float>* %466, align 1, !tbaa !12
  %468 = add nsw i64 %416, 104
  %469 = getelementptr inbounds float, float* %3, i64 %468
  %470 = bitcast float* %469 to <8 x float>*
  %471 = load <8 x float>, <8 x float>* %470, align 1, !tbaa !12
  %472 = add nsw i64 %416, 112
  %473 = getelementptr inbounds float, float* %3, i64 %472
  %474 = bitcast float* %473 to <8 x float>*
  %475 = load <8 x float>, <8 x float>* %474, align 1, !tbaa !12
  %476 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %419, <8 x float> %30, <8 x float> %359) #10
  %477 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %423, <8 x float> %30, <8 x float> %363) #10
  %478 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %427, <8 x float> %30, <8 x float> %367) #10
  %479 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %431, <8 x float> %30, <8 x float> %371) #10
  %480 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %435, <8 x float> %30, <8 x float> %375) #10
  %481 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %439, <8 x float> %30, <8 x float> %379) #10
  %482 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %443, <8 x float> %30, <8 x float> %383) #10
  %483 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %447, <8 x float> %30, <8 x float> %387) #10
  %484 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %451, <8 x float> %30, <8 x float> %391) #10
  %485 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %455, <8 x float> %30, <8 x float> %395) #10
  %486 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %459, <8 x float> %30, <8 x float> %399) #10
  %487 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %463, <8 x float> %30, <8 x float> %403) #10
  %488 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %467, <8 x float> %30, <8 x float> %407) #10
  %489 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %471, <8 x float> %30, <8 x float> %411) #10
  %490 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %475, <8 x float> %30, <8 x float> %415) #10
  store <8 x float> %476, <8 x float>* %358, align 1, !tbaa !12
  store <8 x float> %477, <8 x float>* %362, align 1, !tbaa !12
  store <8 x float> %478, <8 x float>* %366, align 1, !tbaa !12
  store <8 x float> %479, <8 x float>* %370, align 1, !tbaa !12
  store <8 x float> %480, <8 x float>* %374, align 1, !tbaa !12
  store <8 x float> %481, <8 x float>* %378, align 1, !tbaa !12
  store <8 x float> %482, <8 x float>* %382, align 1, !tbaa !12
  store <8 x float> %483, <8 x float>* %386, align 1, !tbaa !12
  store <8 x float> %484, <8 x float>* %390, align 1, !tbaa !12
  store <8 x float> %485, <8 x float>* %394, align 1, !tbaa !12
  store <8 x float> %486, <8 x float>* %398, align 1, !tbaa !12
  store <8 x float> %487, <8 x float>* %402, align 1, !tbaa !12
  store <8 x float> %488, <8 x float>* %406, align 1, !tbaa !12
  store <8 x float> %489, <8 x float>* %410, align 1, !tbaa !12
  store <8 x float> %490, <8 x float>* %414, align 1, !tbaa !12
  %491 = add nuw nsw i64 %295, 120
  %492 = icmp ult i64 %491, %72
  br i1 %492, label %294, label %288

493:                                              ; preds = %500, %67, %288
  %494 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %495 = icmp sgt i32 %494, 0
  br i1 %495, label %496, label %1552

496:                                              ; preds = %493
  %497 = zext i32 %494 to i64
  %498 = trunc i64 %36 to i32
  %499 = mul nsw i32 %494, %498
  br label %705

500:                                              ; preds = %289, %500
  %501 = phi i64 [ 0, %289 ], [ %697, %500 ]
  %502 = getelementptr inbounds float, float* %5, i64 %501
  %503 = getelementptr inbounds float, float* %502, i64 8
  %504 = bitcast float* %503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %504, i32 0, i32 1, i32 1)
  %505 = getelementptr inbounds float, float* %3, i64 %501
  %506 = getelementptr inbounds float, float* %505, i64 8
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %502, i64 16
  %509 = bitcast float* %508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %509, i32 0, i32 1, i32 1)
  %510 = getelementptr inbounds float, float* %505, i64 16
  %511 = bitcast float* %510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %511, i32 0, i32 1, i32 1)
  %512 = getelementptr inbounds float, float* %502, i64 24
  %513 = bitcast float* %512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %513, i32 0, i32 1, i32 1)
  %514 = getelementptr inbounds float, float* %505, i64 24
  %515 = bitcast float* %514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %515, i32 0, i32 1, i32 1)
  %516 = getelementptr inbounds float, float* %502, i64 32
  %517 = bitcast float* %516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %517, i32 0, i32 1, i32 1)
  %518 = getelementptr inbounds float, float* %505, i64 32
  %519 = bitcast float* %518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %519, i32 0, i32 1, i32 1)
  %520 = getelementptr inbounds float, float* %502, i64 40
  %521 = bitcast float* %520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %521, i32 0, i32 1, i32 1)
  %522 = getelementptr inbounds float, float* %505, i64 40
  %523 = bitcast float* %522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %523, i32 0, i32 1, i32 1)
  %524 = getelementptr inbounds float, float* %502, i64 48
  %525 = bitcast float* %524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %525, i32 0, i32 1, i32 1)
  %526 = getelementptr inbounds float, float* %505, i64 48
  %527 = bitcast float* %526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %527, i32 0, i32 1, i32 1)
  %528 = getelementptr inbounds float, float* %502, i64 56
  %529 = bitcast float* %528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %529, i32 0, i32 1, i32 1)
  %530 = getelementptr inbounds float, float* %505, i64 56
  %531 = bitcast float* %530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %531, i32 0, i32 1, i32 1)
  %532 = getelementptr inbounds float, float* %502, i64 64
  %533 = bitcast float* %532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %533, i32 0, i32 1, i32 1)
  %534 = getelementptr inbounds float, float* %505, i64 64
  %535 = bitcast float* %534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %535, i32 0, i32 1, i32 1)
  %536 = getelementptr inbounds float, float* %502, i64 72
  %537 = bitcast float* %536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %537, i32 0, i32 1, i32 1)
  %538 = getelementptr inbounds float, float* %505, i64 72
  %539 = bitcast float* %538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %539, i32 0, i32 1, i32 1)
  %540 = getelementptr inbounds float, float* %502, i64 80
  %541 = bitcast float* %540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %541, i32 0, i32 1, i32 1)
  %542 = getelementptr inbounds float, float* %505, i64 80
  %543 = bitcast float* %542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %543, i32 0, i32 1, i32 1)
  %544 = getelementptr inbounds float, float* %502, i64 88
  %545 = bitcast float* %544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %545, i32 0, i32 1, i32 1)
  %546 = getelementptr inbounds float, float* %505, i64 88
  %547 = bitcast float* %546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %547, i32 0, i32 1, i32 1)
  %548 = getelementptr inbounds float, float* %502, i64 96
  %549 = bitcast float* %548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %549, i32 0, i32 1, i32 1)
  %550 = getelementptr inbounds float, float* %505, i64 96
  %551 = bitcast float* %550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %551, i32 0, i32 1, i32 1)
  %552 = getelementptr inbounds float, float* %502, i64 104
  %553 = bitcast float* %552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %553, i32 0, i32 1, i32 1)
  %554 = getelementptr inbounds float, float* %505, i64 104
  %555 = bitcast float* %554 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %555, i32 0, i32 1, i32 1)
  %556 = getelementptr inbounds float, float* %502, i64 112
  %557 = bitcast float* %556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %557, i32 0, i32 1, i32 1)
  %558 = getelementptr inbounds float, float* %505, i64 112
  %559 = bitcast float* %558 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %559, i32 0, i32 1, i32 1)
  %560 = getelementptr inbounds float, float* %502, i64 120
  %561 = bitcast float* %560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %561, i32 0, i32 1, i32 1)
  %562 = getelementptr inbounds float, float* %505, i64 120
  %563 = bitcast float* %562 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %563, i32 0, i32 1, i32 1)
  %564 = bitcast float* %502 to <8 x float>*
  %565 = load <8 x float>, <8 x float>* %564, align 1, !tbaa !12
  %566 = add nuw nsw i64 %501, 8
  %567 = getelementptr inbounds float, float* %5, i64 %566
  %568 = bitcast float* %567 to <8 x float>*
  %569 = load <8 x float>, <8 x float>* %568, align 1, !tbaa !12
  %570 = add nuw nsw i64 %501, 16
  %571 = getelementptr inbounds float, float* %5, i64 %570
  %572 = bitcast float* %571 to <8 x float>*
  %573 = load <8 x float>, <8 x float>* %572, align 1, !tbaa !12
  %574 = add nuw nsw i64 %501, 24
  %575 = getelementptr inbounds float, float* %5, i64 %574
  %576 = bitcast float* %575 to <8 x float>*
  %577 = load <8 x float>, <8 x float>* %576, align 1, !tbaa !12
  %578 = add nuw nsw i64 %501, 32
  %579 = getelementptr inbounds float, float* %5, i64 %578
  %580 = bitcast float* %579 to <8 x float>*
  %581 = load <8 x float>, <8 x float>* %580, align 1, !tbaa !12
  %582 = add nuw nsw i64 %501, 40
  %583 = getelementptr inbounds float, float* %5, i64 %582
  %584 = bitcast float* %583 to <8 x float>*
  %585 = load <8 x float>, <8 x float>* %584, align 1, !tbaa !12
  %586 = add nuw nsw i64 %501, 48
  %587 = getelementptr inbounds float, float* %5, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %589 = load <8 x float>, <8 x float>* %588, align 1, !tbaa !12
  %590 = add nuw nsw i64 %501, 56
  %591 = getelementptr inbounds float, float* %5, i64 %590
  %592 = bitcast float* %591 to <8 x float>*
  %593 = load <8 x float>, <8 x float>* %592, align 1, !tbaa !12
  %594 = add nuw nsw i64 %501, 64
  %595 = getelementptr inbounds float, float* %5, i64 %594
  %596 = bitcast float* %595 to <8 x float>*
  %597 = load <8 x float>, <8 x float>* %596, align 1, !tbaa !12
  %598 = add nuw nsw i64 %501, 72
  %599 = getelementptr inbounds float, float* %5, i64 %598
  %600 = bitcast float* %599 to <8 x float>*
  %601 = load <8 x float>, <8 x float>* %600, align 1, !tbaa !12
  %602 = add nuw nsw i64 %501, 80
  %603 = getelementptr inbounds float, float* %5, i64 %602
  %604 = bitcast float* %603 to <8 x float>*
  %605 = load <8 x float>, <8 x float>* %604, align 1, !tbaa !12
  %606 = add nuw nsw i64 %501, 88
  %607 = getelementptr inbounds float, float* %5, i64 %606
  %608 = bitcast float* %607 to <8 x float>*
  %609 = load <8 x float>, <8 x float>* %608, align 1, !tbaa !12
  %610 = add nuw nsw i64 %501, 96
  %611 = getelementptr inbounds float, float* %5, i64 %610
  %612 = bitcast float* %611 to <8 x float>*
  %613 = load <8 x float>, <8 x float>* %612, align 1, !tbaa !12
  %614 = add nuw nsw i64 %501, 104
  %615 = getelementptr inbounds float, float* %5, i64 %614
  %616 = bitcast float* %615 to <8 x float>*
  %617 = load <8 x float>, <8 x float>* %616, align 1, !tbaa !12
  %618 = add nuw nsw i64 %501, 112
  %619 = getelementptr inbounds float, float* %5, i64 %618
  %620 = bitcast float* %619 to <8 x float>*
  %621 = load <8 x float>, <8 x float>* %620, align 1, !tbaa !12
  %622 = add nsw i64 %501, %292
  %623 = getelementptr inbounds float, float* %3, i64 %622
  %624 = bitcast float* %623 to <8 x float>*
  %625 = load <8 x float>, <8 x float>* %624, align 1, !tbaa !12
  %626 = add nsw i64 %622, 8
  %627 = getelementptr inbounds float, float* %3, i64 %626
  %628 = bitcast float* %627 to <8 x float>*
  %629 = load <8 x float>, <8 x float>* %628, align 1, !tbaa !12
  %630 = add nsw i64 %622, 16
  %631 = getelementptr inbounds float, float* %3, i64 %630
  %632 = bitcast float* %631 to <8 x float>*
  %633 = load <8 x float>, <8 x float>* %632, align 1, !tbaa !12
  %634 = add nsw i64 %622, 24
  %635 = getelementptr inbounds float, float* %3, i64 %634
  %636 = bitcast float* %635 to <8 x float>*
  %637 = load <8 x float>, <8 x float>* %636, align 1, !tbaa !12
  %638 = add nsw i64 %622, 32
  %639 = getelementptr inbounds float, float* %3, i64 %638
  %640 = bitcast float* %639 to <8 x float>*
  %641 = load <8 x float>, <8 x float>* %640, align 1, !tbaa !12
  %642 = add nsw i64 %622, 40
  %643 = getelementptr inbounds float, float* %3, i64 %642
  %644 = bitcast float* %643 to <8 x float>*
  %645 = load <8 x float>, <8 x float>* %644, align 1, !tbaa !12
  %646 = add nsw i64 %622, 48
  %647 = getelementptr inbounds float, float* %3, i64 %646
  %648 = bitcast float* %647 to <8 x float>*
  %649 = load <8 x float>, <8 x float>* %648, align 1, !tbaa !12
  %650 = add nsw i64 %622, 56
  %651 = getelementptr inbounds float, float* %3, i64 %650
  %652 = bitcast float* %651 to <8 x float>*
  %653 = load <8 x float>, <8 x float>* %652, align 1, !tbaa !12
  %654 = add nsw i64 %622, 64
  %655 = getelementptr inbounds float, float* %3, i64 %654
  %656 = bitcast float* %655 to <8 x float>*
  %657 = load <8 x float>, <8 x float>* %656, align 1, !tbaa !12
  %658 = add nsw i64 %622, 72
  %659 = getelementptr inbounds float, float* %3, i64 %658
  %660 = bitcast float* %659 to <8 x float>*
  %661 = load <8 x float>, <8 x float>* %660, align 1, !tbaa !12
  %662 = add nsw i64 %622, 80
  %663 = getelementptr inbounds float, float* %3, i64 %662
  %664 = bitcast float* %663 to <8 x float>*
  %665 = load <8 x float>, <8 x float>* %664, align 1, !tbaa !12
  %666 = add nsw i64 %622, 88
  %667 = getelementptr inbounds float, float* %3, i64 %666
  %668 = bitcast float* %667 to <8 x float>*
  %669 = load <8 x float>, <8 x float>* %668, align 1, !tbaa !12
  %670 = add nsw i64 %622, 96
  %671 = getelementptr inbounds float, float* %3, i64 %670
  %672 = bitcast float* %671 to <8 x float>*
  %673 = load <8 x float>, <8 x float>* %672, align 1, !tbaa !12
  %674 = add nsw i64 %622, 104
  %675 = getelementptr inbounds float, float* %3, i64 %674
  %676 = bitcast float* %675 to <8 x float>*
  %677 = load <8 x float>, <8 x float>* %676, align 1, !tbaa !12
  %678 = add nsw i64 %622, 112
  %679 = getelementptr inbounds float, float* %3, i64 %678
  %680 = bitcast float* %679 to <8 x float>*
  %681 = load <8 x float>, <8 x float>* %680, align 1, !tbaa !12
  %682 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %625, <8 x float> %35, <8 x float> %565) #10
  %683 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %629, <8 x float> %35, <8 x float> %569) #10
  %684 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %633, <8 x float> %35, <8 x float> %573) #10
  %685 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %637, <8 x float> %35, <8 x float> %577) #10
  %686 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %641, <8 x float> %35, <8 x float> %581) #10
  %687 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %645, <8 x float> %35, <8 x float> %585) #10
  %688 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %649, <8 x float> %35, <8 x float> %589) #10
  %689 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %653, <8 x float> %35, <8 x float> %593) #10
  %690 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %657, <8 x float> %35, <8 x float> %597) #10
  %691 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %661, <8 x float> %35, <8 x float> %601) #10
  %692 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %665, <8 x float> %35, <8 x float> %605) #10
  %693 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %669, <8 x float> %35, <8 x float> %609) #10
  %694 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %673, <8 x float> %35, <8 x float> %613) #10
  %695 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %677, <8 x float> %35, <8 x float> %617) #10
  %696 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %681, <8 x float> %35, <8 x float> %621) #10
  store <8 x float> %682, <8 x float>* %564, align 1, !tbaa !12
  store <8 x float> %683, <8 x float>* %568, align 1, !tbaa !12
  store <8 x float> %684, <8 x float>* %572, align 1, !tbaa !12
  store <8 x float> %685, <8 x float>* %576, align 1, !tbaa !12
  store <8 x float> %686, <8 x float>* %580, align 1, !tbaa !12
  store <8 x float> %687, <8 x float>* %584, align 1, !tbaa !12
  store <8 x float> %688, <8 x float>* %588, align 1, !tbaa !12
  store <8 x float> %689, <8 x float>* %592, align 1, !tbaa !12
  store <8 x float> %690, <8 x float>* %596, align 1, !tbaa !12
  store <8 x float> %691, <8 x float>* %600, align 1, !tbaa !12
  store <8 x float> %692, <8 x float>* %604, align 1, !tbaa !12
  store <8 x float> %693, <8 x float>* %608, align 1, !tbaa !12
  store <8 x float> %694, <8 x float>* %612, align 1, !tbaa !12
  store <8 x float> %695, <8 x float>* %616, align 1, !tbaa !12
  store <8 x float> %696, <8 x float>* %620, align 1, !tbaa !12
  %697 = add nuw nsw i64 %501, 120
  %698 = icmp ult i64 %697, %293
  br i1 %698, label %500, label %493

699:                                              ; preds = %705
  br i1 %495, label %700, label %1125

700:                                              ; preds = %699
  %701 = trunc i64 %41 to i32
  %702 = mul nsw i32 %494, %701
  %703 = sext i32 %702 to i64
  %704 = zext i32 %494 to i64
  br label %926

705:                                              ; preds = %496, %705
  %706 = phi i64 [ 0, %496 ], [ %918, %705 ]
  %707 = getelementptr inbounds float, float* %5, i64 %706
  %708 = getelementptr inbounds float, float* %707, i64 8
  %709 = bitcast float* %708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %709, i32 0, i32 1, i32 1)
  %710 = getelementptr inbounds float, float* %3, i64 %706
  %711 = getelementptr inbounds float, float* %710, i64 8
  %712 = bitcast float* %711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %712, i32 0, i32 1, i32 1)
  %713 = getelementptr inbounds float, float* %707, i64 16
  %714 = bitcast float* %713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %714, i32 0, i32 1, i32 1)
  %715 = getelementptr inbounds float, float* %710, i64 16
  %716 = bitcast float* %715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %716, i32 0, i32 1, i32 1)
  %717 = getelementptr inbounds float, float* %707, i64 24
  %718 = bitcast float* %717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %718, i32 0, i32 1, i32 1)
  %719 = getelementptr inbounds float, float* %710, i64 24
  %720 = bitcast float* %719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %720, i32 0, i32 1, i32 1)
  %721 = getelementptr inbounds float, float* %707, i64 32
  %722 = bitcast float* %721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %722, i32 0, i32 1, i32 1)
  %723 = getelementptr inbounds float, float* %710, i64 32
  %724 = bitcast float* %723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %724, i32 0, i32 1, i32 1)
  %725 = getelementptr inbounds float, float* %707, i64 40
  %726 = bitcast float* %725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %726, i32 0, i32 1, i32 1)
  %727 = getelementptr inbounds float, float* %710, i64 40
  %728 = bitcast float* %727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %728, i32 0, i32 1, i32 1)
  %729 = getelementptr inbounds float, float* %707, i64 48
  %730 = bitcast float* %729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %730, i32 0, i32 1, i32 1)
  %731 = getelementptr inbounds float, float* %710, i64 48
  %732 = bitcast float* %731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %732, i32 0, i32 1, i32 1)
  %733 = getelementptr inbounds float, float* %707, i64 56
  %734 = bitcast float* %733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %734, i32 0, i32 1, i32 1)
  %735 = getelementptr inbounds float, float* %710, i64 56
  %736 = bitcast float* %735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %736, i32 0, i32 1, i32 1)
  %737 = getelementptr inbounds float, float* %707, i64 64
  %738 = bitcast float* %737 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %738, i32 0, i32 1, i32 1)
  %739 = getelementptr inbounds float, float* %710, i64 64
  %740 = bitcast float* %739 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %740, i32 0, i32 1, i32 1)
  %741 = getelementptr inbounds float, float* %707, i64 72
  %742 = bitcast float* %741 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %742, i32 0, i32 1, i32 1)
  %743 = getelementptr inbounds float, float* %710, i64 72
  %744 = bitcast float* %743 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %744, i32 0, i32 1, i32 1)
  %745 = getelementptr inbounds float, float* %707, i64 80
  %746 = bitcast float* %745 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %746, i32 0, i32 1, i32 1)
  %747 = getelementptr inbounds float, float* %710, i64 80
  %748 = bitcast float* %747 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %748, i32 0, i32 1, i32 1)
  %749 = getelementptr inbounds float, float* %707, i64 88
  %750 = bitcast float* %749 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %750, i32 0, i32 1, i32 1)
  %751 = getelementptr inbounds float, float* %710, i64 88
  %752 = bitcast float* %751 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %752, i32 0, i32 1, i32 1)
  %753 = getelementptr inbounds float, float* %707, i64 96
  %754 = bitcast float* %753 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %754, i32 0, i32 1, i32 1)
  %755 = getelementptr inbounds float, float* %710, i64 96
  %756 = bitcast float* %755 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %756, i32 0, i32 1, i32 1)
  %757 = getelementptr inbounds float, float* %707, i64 104
  %758 = bitcast float* %757 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %758, i32 0, i32 1, i32 1)
  %759 = getelementptr inbounds float, float* %710, i64 104
  %760 = bitcast float* %759 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %760, i32 0, i32 1, i32 1)
  %761 = getelementptr inbounds float, float* %707, i64 112
  %762 = bitcast float* %761 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %762, i32 0, i32 1, i32 1)
  %763 = getelementptr inbounds float, float* %710, i64 112
  %764 = bitcast float* %763 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %764, i32 0, i32 1, i32 1)
  %765 = getelementptr inbounds float, float* %707, i64 120
  %766 = bitcast float* %765 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %766, i32 0, i32 1, i32 1)
  %767 = getelementptr inbounds float, float* %710, i64 120
  %768 = bitcast float* %767 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %768, i32 0, i32 1, i32 1)
  %769 = bitcast float* %707 to <8 x float>*
  %770 = load <8 x float>, <8 x float>* %769, align 1, !tbaa !12
  %771 = add nuw nsw i64 %706, 8
  %772 = getelementptr inbounds float, float* %5, i64 %771
  %773 = bitcast float* %772 to <8 x float>*
  %774 = load <8 x float>, <8 x float>* %773, align 1, !tbaa !12
  %775 = add nuw nsw i64 %706, 16
  %776 = getelementptr inbounds float, float* %5, i64 %775
  %777 = bitcast float* %776 to <8 x float>*
  %778 = load <8 x float>, <8 x float>* %777, align 1, !tbaa !12
  %779 = add nuw nsw i64 %706, 24
  %780 = getelementptr inbounds float, float* %5, i64 %779
  %781 = bitcast float* %780 to <8 x float>*
  %782 = load <8 x float>, <8 x float>* %781, align 1, !tbaa !12
  %783 = add nuw nsw i64 %706, 32
  %784 = getelementptr inbounds float, float* %5, i64 %783
  %785 = bitcast float* %784 to <8 x float>*
  %786 = load <8 x float>, <8 x float>* %785, align 1, !tbaa !12
  %787 = add nuw nsw i64 %706, 40
  %788 = getelementptr inbounds float, float* %5, i64 %787
  %789 = bitcast float* %788 to <8 x float>*
  %790 = load <8 x float>, <8 x float>* %789, align 1, !tbaa !12
  %791 = add nuw nsw i64 %706, 48
  %792 = getelementptr inbounds float, float* %5, i64 %791
  %793 = bitcast float* %792 to <8 x float>*
  %794 = load <8 x float>, <8 x float>* %793, align 1, !tbaa !12
  %795 = add nuw nsw i64 %706, 56
  %796 = getelementptr inbounds float, float* %5, i64 %795
  %797 = bitcast float* %796 to <8 x float>*
  %798 = load <8 x float>, <8 x float>* %797, align 1, !tbaa !12
  %799 = add nuw nsw i64 %706, 64
  %800 = getelementptr inbounds float, float* %5, i64 %799
  %801 = bitcast float* %800 to <8 x float>*
  %802 = load <8 x float>, <8 x float>* %801, align 1, !tbaa !12
  %803 = add nuw nsw i64 %706, 72
  %804 = getelementptr inbounds float, float* %5, i64 %803
  %805 = bitcast float* %804 to <8 x float>*
  %806 = load <8 x float>, <8 x float>* %805, align 1, !tbaa !12
  %807 = add nuw nsw i64 %706, 80
  %808 = getelementptr inbounds float, float* %5, i64 %807
  %809 = bitcast float* %808 to <8 x float>*
  %810 = load <8 x float>, <8 x float>* %809, align 1, !tbaa !12
  %811 = add nuw nsw i64 %706, 88
  %812 = getelementptr inbounds float, float* %5, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %814 = load <8 x float>, <8 x float>* %813, align 1, !tbaa !12
  %815 = add nuw nsw i64 %706, 96
  %816 = getelementptr inbounds float, float* %5, i64 %815
  %817 = bitcast float* %816 to <8 x float>*
  %818 = load <8 x float>, <8 x float>* %817, align 1, !tbaa !12
  %819 = add nuw nsw i64 %706, 104
  %820 = getelementptr inbounds float, float* %5, i64 %819
  %821 = bitcast float* %820 to <8 x float>*
  %822 = load <8 x float>, <8 x float>* %821, align 1, !tbaa !12
  %823 = add nuw nsw i64 %706, 112
  %824 = getelementptr inbounds float, float* %5, i64 %823
  %825 = bitcast float* %824 to <8 x float>*
  %826 = load <8 x float>, <8 x float>* %825, align 1, !tbaa !12
  %827 = trunc i64 %706 to i32
  %828 = add nsw i32 %499, %827
  %829 = sext i32 %828 to i64
  %830 = getelementptr inbounds float, float* %3, i64 %829
  %831 = bitcast float* %830 to <8 x float>*
  %832 = load <8 x float>, <8 x float>* %831, align 1, !tbaa !12
  %833 = add nsw i32 %828, 8
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds float, float* %3, i64 %834
  %836 = bitcast float* %835 to <8 x float>*
  %837 = load <8 x float>, <8 x float>* %836, align 1, !tbaa !12
  %838 = add nsw i32 %828, 16
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds float, float* %3, i64 %839
  %841 = bitcast float* %840 to <8 x float>*
  %842 = load <8 x float>, <8 x float>* %841, align 1, !tbaa !12
  %843 = add nsw i32 %828, 24
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds float, float* %3, i64 %844
  %846 = bitcast float* %845 to <8 x float>*
  %847 = load <8 x float>, <8 x float>* %846, align 1, !tbaa !12
  %848 = add nsw i32 %828, 32
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds float, float* %3, i64 %849
  %851 = bitcast float* %850 to <8 x float>*
  %852 = load <8 x float>, <8 x float>* %851, align 1, !tbaa !12
  %853 = add nsw i32 %828, 40
  %854 = sext i32 %853 to i64
  %855 = getelementptr inbounds float, float* %3, i64 %854
  %856 = bitcast float* %855 to <8 x float>*
  %857 = load <8 x float>, <8 x float>* %856, align 1, !tbaa !12
  %858 = add nsw i32 %828, 48
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds float, float* %3, i64 %859
  %861 = bitcast float* %860 to <8 x float>*
  %862 = load <8 x float>, <8 x float>* %861, align 1, !tbaa !12
  %863 = add nsw i32 %828, 56
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds float, float* %3, i64 %864
  %866 = bitcast float* %865 to <8 x float>*
  %867 = load <8 x float>, <8 x float>* %866, align 1, !tbaa !12
  %868 = add nsw i32 %828, 64
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds float, float* %3, i64 %869
  %871 = bitcast float* %870 to <8 x float>*
  %872 = load <8 x float>, <8 x float>* %871, align 1, !tbaa !12
  %873 = add nsw i32 %828, 72
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds float, float* %3, i64 %874
  %876 = bitcast float* %875 to <8 x float>*
  %877 = load <8 x float>, <8 x float>* %876, align 1, !tbaa !12
  %878 = add nsw i32 %828, 80
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds float, float* %3, i64 %879
  %881 = bitcast float* %880 to <8 x float>*
  %882 = load <8 x float>, <8 x float>* %881, align 1, !tbaa !12
  %883 = add nsw i32 %828, 88
  %884 = sext i32 %883 to i64
  %885 = getelementptr inbounds float, float* %3, i64 %884
  %886 = bitcast float* %885 to <8 x float>*
  %887 = load <8 x float>, <8 x float>* %886, align 1, !tbaa !12
  %888 = add nsw i32 %828, 96
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds float, float* %3, i64 %889
  %891 = bitcast float* %890 to <8 x float>*
  %892 = load <8 x float>, <8 x float>* %891, align 1, !tbaa !12
  %893 = add nsw i32 %828, 104
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds float, float* %3, i64 %894
  %896 = bitcast float* %895 to <8 x float>*
  %897 = load <8 x float>, <8 x float>* %896, align 1, !tbaa !12
  %898 = add nsw i32 %828, 112
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds float, float* %3, i64 %899
  %901 = bitcast float* %900 to <8 x float>*
  %902 = load <8 x float>, <8 x float>* %901, align 1, !tbaa !12
  %903 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %832, <8 x float> %40, <8 x float> %770) #10
  %904 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %837, <8 x float> %40, <8 x float> %774) #10
  %905 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %842, <8 x float> %40, <8 x float> %778) #10
  %906 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %847, <8 x float> %40, <8 x float> %782) #10
  %907 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %852, <8 x float> %40, <8 x float> %786) #10
  %908 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %857, <8 x float> %40, <8 x float> %790) #10
  %909 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %862, <8 x float> %40, <8 x float> %794) #10
  %910 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %867, <8 x float> %40, <8 x float> %798) #10
  %911 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %872, <8 x float> %40, <8 x float> %802) #10
  %912 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %877, <8 x float> %40, <8 x float> %806) #10
  %913 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %882, <8 x float> %40, <8 x float> %810) #10
  %914 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %887, <8 x float> %40, <8 x float> %814) #10
  %915 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %892, <8 x float> %40, <8 x float> %818) #10
  %916 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %897, <8 x float> %40, <8 x float> %822) #10
  %917 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %902, <8 x float> %40, <8 x float> %826) #10
  store <8 x float> %903, <8 x float>* %769, align 1, !tbaa !12
  store <8 x float> %904, <8 x float>* %773, align 1, !tbaa !12
  store <8 x float> %905, <8 x float>* %777, align 1, !tbaa !12
  store <8 x float> %906, <8 x float>* %781, align 1, !tbaa !12
  store <8 x float> %907, <8 x float>* %785, align 1, !tbaa !12
  store <8 x float> %908, <8 x float>* %789, align 1, !tbaa !12
  store <8 x float> %909, <8 x float>* %793, align 1, !tbaa !12
  store <8 x float> %910, <8 x float>* %797, align 1, !tbaa !12
  store <8 x float> %911, <8 x float>* %801, align 1, !tbaa !12
  store <8 x float> %912, <8 x float>* %805, align 1, !tbaa !12
  store <8 x float> %913, <8 x float>* %809, align 1, !tbaa !12
  store <8 x float> %914, <8 x float>* %813, align 1, !tbaa !12
  store <8 x float> %915, <8 x float>* %817, align 1, !tbaa !12
  store <8 x float> %916, <8 x float>* %821, align 1, !tbaa !12
  store <8 x float> %917, <8 x float>* %825, align 1, !tbaa !12
  %918 = add nuw nsw i64 %706, 120
  %919 = icmp ult i64 %918, %497
  br i1 %919, label %705, label %699

920:                                              ; preds = %926
  br i1 %495, label %921, label %1125

921:                                              ; preds = %920
  %922 = trunc i64 %46 to i32
  %923 = mul nsw i32 %494, %922
  %924 = sext i32 %923 to i64
  %925 = zext i32 %494 to i64
  br label %1132

926:                                              ; preds = %700, %926
  %927 = phi i64 [ 0, %700 ], [ %1123, %926 ]
  %928 = getelementptr inbounds float, float* %5, i64 %927
  %929 = getelementptr inbounds float, float* %928, i64 8
  %930 = bitcast float* %929 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %930, i32 0, i32 1, i32 1)
  %931 = getelementptr inbounds float, float* %3, i64 %927
  %932 = getelementptr inbounds float, float* %931, i64 8
  %933 = bitcast float* %932 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %933, i32 0, i32 1, i32 1)
  %934 = getelementptr inbounds float, float* %928, i64 16
  %935 = bitcast float* %934 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %935, i32 0, i32 1, i32 1)
  %936 = getelementptr inbounds float, float* %931, i64 16
  %937 = bitcast float* %936 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %937, i32 0, i32 1, i32 1)
  %938 = getelementptr inbounds float, float* %928, i64 24
  %939 = bitcast float* %938 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %939, i32 0, i32 1, i32 1)
  %940 = getelementptr inbounds float, float* %931, i64 24
  %941 = bitcast float* %940 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %941, i32 0, i32 1, i32 1)
  %942 = getelementptr inbounds float, float* %928, i64 32
  %943 = bitcast float* %942 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %943, i32 0, i32 1, i32 1)
  %944 = getelementptr inbounds float, float* %931, i64 32
  %945 = bitcast float* %944 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %945, i32 0, i32 1, i32 1)
  %946 = getelementptr inbounds float, float* %928, i64 40
  %947 = bitcast float* %946 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %947, i32 0, i32 1, i32 1)
  %948 = getelementptr inbounds float, float* %931, i64 40
  %949 = bitcast float* %948 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %949, i32 0, i32 1, i32 1)
  %950 = getelementptr inbounds float, float* %928, i64 48
  %951 = bitcast float* %950 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %951, i32 0, i32 1, i32 1)
  %952 = getelementptr inbounds float, float* %931, i64 48
  %953 = bitcast float* %952 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %953, i32 0, i32 1, i32 1)
  %954 = getelementptr inbounds float, float* %928, i64 56
  %955 = bitcast float* %954 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %955, i32 0, i32 1, i32 1)
  %956 = getelementptr inbounds float, float* %931, i64 56
  %957 = bitcast float* %956 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %957, i32 0, i32 1, i32 1)
  %958 = getelementptr inbounds float, float* %928, i64 64
  %959 = bitcast float* %958 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %959, i32 0, i32 1, i32 1)
  %960 = getelementptr inbounds float, float* %931, i64 64
  %961 = bitcast float* %960 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %961, i32 0, i32 1, i32 1)
  %962 = getelementptr inbounds float, float* %928, i64 72
  %963 = bitcast float* %962 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %963, i32 0, i32 1, i32 1)
  %964 = getelementptr inbounds float, float* %931, i64 72
  %965 = bitcast float* %964 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %965, i32 0, i32 1, i32 1)
  %966 = getelementptr inbounds float, float* %928, i64 80
  %967 = bitcast float* %966 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %967, i32 0, i32 1, i32 1)
  %968 = getelementptr inbounds float, float* %931, i64 80
  %969 = bitcast float* %968 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %969, i32 0, i32 1, i32 1)
  %970 = getelementptr inbounds float, float* %928, i64 88
  %971 = bitcast float* %970 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %971, i32 0, i32 1, i32 1)
  %972 = getelementptr inbounds float, float* %931, i64 88
  %973 = bitcast float* %972 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %973, i32 0, i32 1, i32 1)
  %974 = getelementptr inbounds float, float* %928, i64 96
  %975 = bitcast float* %974 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %975, i32 0, i32 1, i32 1)
  %976 = getelementptr inbounds float, float* %931, i64 96
  %977 = bitcast float* %976 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %977, i32 0, i32 1, i32 1)
  %978 = getelementptr inbounds float, float* %928, i64 104
  %979 = bitcast float* %978 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %979, i32 0, i32 1, i32 1)
  %980 = getelementptr inbounds float, float* %931, i64 104
  %981 = bitcast float* %980 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %981, i32 0, i32 1, i32 1)
  %982 = getelementptr inbounds float, float* %928, i64 112
  %983 = bitcast float* %982 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %983, i32 0, i32 1, i32 1)
  %984 = getelementptr inbounds float, float* %931, i64 112
  %985 = bitcast float* %984 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %985, i32 0, i32 1, i32 1)
  %986 = getelementptr inbounds float, float* %928, i64 120
  %987 = bitcast float* %986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %987, i32 0, i32 1, i32 1)
  %988 = getelementptr inbounds float, float* %931, i64 120
  %989 = bitcast float* %988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %989, i32 0, i32 1, i32 1)
  %990 = bitcast float* %928 to <8 x float>*
  %991 = load <8 x float>, <8 x float>* %990, align 1, !tbaa !12
  %992 = add nuw nsw i64 %927, 8
  %993 = getelementptr inbounds float, float* %5, i64 %992
  %994 = bitcast float* %993 to <8 x float>*
  %995 = load <8 x float>, <8 x float>* %994, align 1, !tbaa !12
  %996 = add nuw nsw i64 %927, 16
  %997 = getelementptr inbounds float, float* %5, i64 %996
  %998 = bitcast float* %997 to <8 x float>*
  %999 = load <8 x float>, <8 x float>* %998, align 1, !tbaa !12
  %1000 = add nuw nsw i64 %927, 24
  %1001 = getelementptr inbounds float, float* %5, i64 %1000
  %1002 = bitcast float* %1001 to <8 x float>*
  %1003 = load <8 x float>, <8 x float>* %1002, align 1, !tbaa !12
  %1004 = add nuw nsw i64 %927, 32
  %1005 = getelementptr inbounds float, float* %5, i64 %1004
  %1006 = bitcast float* %1005 to <8 x float>*
  %1007 = load <8 x float>, <8 x float>* %1006, align 1, !tbaa !12
  %1008 = add nuw nsw i64 %927, 40
  %1009 = getelementptr inbounds float, float* %5, i64 %1008
  %1010 = bitcast float* %1009 to <8 x float>*
  %1011 = load <8 x float>, <8 x float>* %1010, align 1, !tbaa !12
  %1012 = add nuw nsw i64 %927, 48
  %1013 = getelementptr inbounds float, float* %5, i64 %1012
  %1014 = bitcast float* %1013 to <8 x float>*
  %1015 = load <8 x float>, <8 x float>* %1014, align 1, !tbaa !12
  %1016 = add nuw nsw i64 %927, 56
  %1017 = getelementptr inbounds float, float* %5, i64 %1016
  %1018 = bitcast float* %1017 to <8 x float>*
  %1019 = load <8 x float>, <8 x float>* %1018, align 1, !tbaa !12
  %1020 = add nuw nsw i64 %927, 64
  %1021 = getelementptr inbounds float, float* %5, i64 %1020
  %1022 = bitcast float* %1021 to <8 x float>*
  %1023 = load <8 x float>, <8 x float>* %1022, align 1, !tbaa !12
  %1024 = add nuw nsw i64 %927, 72
  %1025 = getelementptr inbounds float, float* %5, i64 %1024
  %1026 = bitcast float* %1025 to <8 x float>*
  %1027 = load <8 x float>, <8 x float>* %1026, align 1, !tbaa !12
  %1028 = add nuw nsw i64 %927, 80
  %1029 = getelementptr inbounds float, float* %5, i64 %1028
  %1030 = bitcast float* %1029 to <8 x float>*
  %1031 = load <8 x float>, <8 x float>* %1030, align 1, !tbaa !12
  %1032 = add nuw nsw i64 %927, 88
  %1033 = getelementptr inbounds float, float* %5, i64 %1032
  %1034 = bitcast float* %1033 to <8 x float>*
  %1035 = load <8 x float>, <8 x float>* %1034, align 1, !tbaa !12
  %1036 = add nuw nsw i64 %927, 96
  %1037 = getelementptr inbounds float, float* %5, i64 %1036
  %1038 = bitcast float* %1037 to <8 x float>*
  %1039 = load <8 x float>, <8 x float>* %1038, align 1, !tbaa !12
  %1040 = add nuw nsw i64 %927, 104
  %1041 = getelementptr inbounds float, float* %5, i64 %1040
  %1042 = bitcast float* %1041 to <8 x float>*
  %1043 = load <8 x float>, <8 x float>* %1042, align 1, !tbaa !12
  %1044 = add nuw nsw i64 %927, 112
  %1045 = getelementptr inbounds float, float* %5, i64 %1044
  %1046 = bitcast float* %1045 to <8 x float>*
  %1047 = load <8 x float>, <8 x float>* %1046, align 1, !tbaa !12
  %1048 = add nsw i64 %927, %703
  %1049 = getelementptr inbounds float, float* %3, i64 %1048
  %1050 = bitcast float* %1049 to <8 x float>*
  %1051 = load <8 x float>, <8 x float>* %1050, align 1, !tbaa !12
  %1052 = add nsw i64 %1048, 8
  %1053 = getelementptr inbounds float, float* %3, i64 %1052
  %1054 = bitcast float* %1053 to <8 x float>*
  %1055 = load <8 x float>, <8 x float>* %1054, align 1, !tbaa !12
  %1056 = add nsw i64 %1048, 16
  %1057 = getelementptr inbounds float, float* %3, i64 %1056
  %1058 = bitcast float* %1057 to <8 x float>*
  %1059 = load <8 x float>, <8 x float>* %1058, align 1, !tbaa !12
  %1060 = add nsw i64 %1048, 24
  %1061 = getelementptr inbounds float, float* %3, i64 %1060
  %1062 = bitcast float* %1061 to <8 x float>*
  %1063 = load <8 x float>, <8 x float>* %1062, align 1, !tbaa !12
  %1064 = add nsw i64 %1048, 32
  %1065 = getelementptr inbounds float, float* %3, i64 %1064
  %1066 = bitcast float* %1065 to <8 x float>*
  %1067 = load <8 x float>, <8 x float>* %1066, align 1, !tbaa !12
  %1068 = add nsw i64 %1048, 40
  %1069 = getelementptr inbounds float, float* %3, i64 %1068
  %1070 = bitcast float* %1069 to <8 x float>*
  %1071 = load <8 x float>, <8 x float>* %1070, align 1, !tbaa !12
  %1072 = add nsw i64 %1048, 48
  %1073 = getelementptr inbounds float, float* %3, i64 %1072
  %1074 = bitcast float* %1073 to <8 x float>*
  %1075 = load <8 x float>, <8 x float>* %1074, align 1, !tbaa !12
  %1076 = add nsw i64 %1048, 56
  %1077 = getelementptr inbounds float, float* %3, i64 %1076
  %1078 = bitcast float* %1077 to <8 x float>*
  %1079 = load <8 x float>, <8 x float>* %1078, align 1, !tbaa !12
  %1080 = add nsw i64 %1048, 64
  %1081 = getelementptr inbounds float, float* %3, i64 %1080
  %1082 = bitcast float* %1081 to <8 x float>*
  %1083 = load <8 x float>, <8 x float>* %1082, align 1, !tbaa !12
  %1084 = add nsw i64 %1048, 72
  %1085 = getelementptr inbounds float, float* %3, i64 %1084
  %1086 = bitcast float* %1085 to <8 x float>*
  %1087 = load <8 x float>, <8 x float>* %1086, align 1, !tbaa !12
  %1088 = add nsw i64 %1048, 80
  %1089 = getelementptr inbounds float, float* %3, i64 %1088
  %1090 = bitcast float* %1089 to <8 x float>*
  %1091 = load <8 x float>, <8 x float>* %1090, align 1, !tbaa !12
  %1092 = add nsw i64 %1048, 88
  %1093 = getelementptr inbounds float, float* %3, i64 %1092
  %1094 = bitcast float* %1093 to <8 x float>*
  %1095 = load <8 x float>, <8 x float>* %1094, align 1, !tbaa !12
  %1096 = add nsw i64 %1048, 96
  %1097 = getelementptr inbounds float, float* %3, i64 %1096
  %1098 = bitcast float* %1097 to <8 x float>*
  %1099 = load <8 x float>, <8 x float>* %1098, align 1, !tbaa !12
  %1100 = add nsw i64 %1048, 104
  %1101 = getelementptr inbounds float, float* %3, i64 %1100
  %1102 = bitcast float* %1101 to <8 x float>*
  %1103 = load <8 x float>, <8 x float>* %1102, align 1, !tbaa !12
  %1104 = add nsw i64 %1048, 112
  %1105 = getelementptr inbounds float, float* %3, i64 %1104
  %1106 = bitcast float* %1105 to <8 x float>*
  %1107 = load <8 x float>, <8 x float>* %1106, align 1, !tbaa !12
  %1108 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1051, <8 x float> %45, <8 x float> %991) #10
  %1109 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1055, <8 x float> %45, <8 x float> %995) #10
  %1110 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1059, <8 x float> %45, <8 x float> %999) #10
  %1111 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1063, <8 x float> %45, <8 x float> %1003) #10
  %1112 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1067, <8 x float> %45, <8 x float> %1007) #10
  %1113 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1071, <8 x float> %45, <8 x float> %1011) #10
  %1114 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1075, <8 x float> %45, <8 x float> %1015) #10
  %1115 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1079, <8 x float> %45, <8 x float> %1019) #10
  %1116 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1083, <8 x float> %45, <8 x float> %1023) #10
  %1117 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1087, <8 x float> %45, <8 x float> %1027) #10
  %1118 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1091, <8 x float> %45, <8 x float> %1031) #10
  %1119 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1095, <8 x float> %45, <8 x float> %1035) #10
  %1120 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1099, <8 x float> %45, <8 x float> %1039) #10
  %1121 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1103, <8 x float> %45, <8 x float> %1043) #10
  %1122 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1107, <8 x float> %45, <8 x float> %1047) #10
  store <8 x float> %1108, <8 x float>* %990, align 1, !tbaa !12
  store <8 x float> %1109, <8 x float>* %994, align 1, !tbaa !12
  store <8 x float> %1110, <8 x float>* %998, align 1, !tbaa !12
  store <8 x float> %1111, <8 x float>* %1002, align 1, !tbaa !12
  store <8 x float> %1112, <8 x float>* %1006, align 1, !tbaa !12
  store <8 x float> %1113, <8 x float>* %1010, align 1, !tbaa !12
  store <8 x float> %1114, <8 x float>* %1014, align 1, !tbaa !12
  store <8 x float> %1115, <8 x float>* %1018, align 1, !tbaa !12
  store <8 x float> %1116, <8 x float>* %1022, align 1, !tbaa !12
  store <8 x float> %1117, <8 x float>* %1026, align 1, !tbaa !12
  store <8 x float> %1118, <8 x float>* %1030, align 1, !tbaa !12
  store <8 x float> %1119, <8 x float>* %1034, align 1, !tbaa !12
  store <8 x float> %1120, <8 x float>* %1038, align 1, !tbaa !12
  store <8 x float> %1121, <8 x float>* %1042, align 1, !tbaa !12
  store <8 x float> %1122, <8 x float>* %1046, align 1, !tbaa !12
  %1123 = add nuw nsw i64 %927, 120
  %1124 = icmp ult i64 %1123, %704
  br i1 %1124, label %926, label %920

1125:                                             ; preds = %1132, %699, %920
  %1126 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1127 = icmp sgt i32 %1126, 0
  br i1 %1127, label %1128, label %1552

1128:                                             ; preds = %1125
  %1129 = zext i32 %1126 to i64
  %1130 = trunc i64 %51 to i32
  %1131 = mul nsw i32 %1126, %1130
  br label %1337

1132:                                             ; preds = %921, %1132
  %1133 = phi i64 [ 0, %921 ], [ %1329, %1132 ]
  %1134 = getelementptr inbounds float, float* %5, i64 %1133
  %1135 = getelementptr inbounds float, float* %1134, i64 8
  %1136 = bitcast float* %1135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1136, i32 0, i32 1, i32 1)
  %1137 = getelementptr inbounds float, float* %3, i64 %1133
  %1138 = getelementptr inbounds float, float* %1137, i64 8
  %1139 = bitcast float* %1138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1139, i32 0, i32 1, i32 1)
  %1140 = getelementptr inbounds float, float* %1134, i64 16
  %1141 = bitcast float* %1140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1141, i32 0, i32 1, i32 1)
  %1142 = getelementptr inbounds float, float* %1137, i64 16
  %1143 = bitcast float* %1142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1143, i32 0, i32 1, i32 1)
  %1144 = getelementptr inbounds float, float* %1134, i64 24
  %1145 = bitcast float* %1144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1145, i32 0, i32 1, i32 1)
  %1146 = getelementptr inbounds float, float* %1137, i64 24
  %1147 = bitcast float* %1146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1147, i32 0, i32 1, i32 1)
  %1148 = getelementptr inbounds float, float* %1134, i64 32
  %1149 = bitcast float* %1148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1149, i32 0, i32 1, i32 1)
  %1150 = getelementptr inbounds float, float* %1137, i64 32
  %1151 = bitcast float* %1150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1151, i32 0, i32 1, i32 1)
  %1152 = getelementptr inbounds float, float* %1134, i64 40
  %1153 = bitcast float* %1152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1153, i32 0, i32 1, i32 1)
  %1154 = getelementptr inbounds float, float* %1137, i64 40
  %1155 = bitcast float* %1154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1155, i32 0, i32 1, i32 1)
  %1156 = getelementptr inbounds float, float* %1134, i64 48
  %1157 = bitcast float* %1156 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1157, i32 0, i32 1, i32 1)
  %1158 = getelementptr inbounds float, float* %1137, i64 48
  %1159 = bitcast float* %1158 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1159, i32 0, i32 1, i32 1)
  %1160 = getelementptr inbounds float, float* %1134, i64 56
  %1161 = bitcast float* %1160 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1161, i32 0, i32 1, i32 1)
  %1162 = getelementptr inbounds float, float* %1137, i64 56
  %1163 = bitcast float* %1162 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1163, i32 0, i32 1, i32 1)
  %1164 = getelementptr inbounds float, float* %1134, i64 64
  %1165 = bitcast float* %1164 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1165, i32 0, i32 1, i32 1)
  %1166 = getelementptr inbounds float, float* %1137, i64 64
  %1167 = bitcast float* %1166 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1167, i32 0, i32 1, i32 1)
  %1168 = getelementptr inbounds float, float* %1134, i64 72
  %1169 = bitcast float* %1168 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1169, i32 0, i32 1, i32 1)
  %1170 = getelementptr inbounds float, float* %1137, i64 72
  %1171 = bitcast float* %1170 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1171, i32 0, i32 1, i32 1)
  %1172 = getelementptr inbounds float, float* %1134, i64 80
  %1173 = bitcast float* %1172 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1173, i32 0, i32 1, i32 1)
  %1174 = getelementptr inbounds float, float* %1137, i64 80
  %1175 = bitcast float* %1174 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1175, i32 0, i32 1, i32 1)
  %1176 = getelementptr inbounds float, float* %1134, i64 88
  %1177 = bitcast float* %1176 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1177, i32 0, i32 1, i32 1)
  %1178 = getelementptr inbounds float, float* %1137, i64 88
  %1179 = bitcast float* %1178 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1179, i32 0, i32 1, i32 1)
  %1180 = getelementptr inbounds float, float* %1134, i64 96
  %1181 = bitcast float* %1180 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1181, i32 0, i32 1, i32 1)
  %1182 = getelementptr inbounds float, float* %1137, i64 96
  %1183 = bitcast float* %1182 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1183, i32 0, i32 1, i32 1)
  %1184 = getelementptr inbounds float, float* %1134, i64 104
  %1185 = bitcast float* %1184 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1185, i32 0, i32 1, i32 1)
  %1186 = getelementptr inbounds float, float* %1137, i64 104
  %1187 = bitcast float* %1186 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1187, i32 0, i32 1, i32 1)
  %1188 = getelementptr inbounds float, float* %1134, i64 112
  %1189 = bitcast float* %1188 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1189, i32 0, i32 1, i32 1)
  %1190 = getelementptr inbounds float, float* %1137, i64 112
  %1191 = bitcast float* %1190 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1191, i32 0, i32 1, i32 1)
  %1192 = getelementptr inbounds float, float* %1134, i64 120
  %1193 = bitcast float* %1192 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1193, i32 0, i32 1, i32 1)
  %1194 = getelementptr inbounds float, float* %1137, i64 120
  %1195 = bitcast float* %1194 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1195, i32 0, i32 1, i32 1)
  %1196 = bitcast float* %1134 to <8 x float>*
  %1197 = load <8 x float>, <8 x float>* %1196, align 1, !tbaa !12
  %1198 = add nuw nsw i64 %1133, 8
  %1199 = getelementptr inbounds float, float* %5, i64 %1198
  %1200 = bitcast float* %1199 to <8 x float>*
  %1201 = load <8 x float>, <8 x float>* %1200, align 1, !tbaa !12
  %1202 = add nuw nsw i64 %1133, 16
  %1203 = getelementptr inbounds float, float* %5, i64 %1202
  %1204 = bitcast float* %1203 to <8 x float>*
  %1205 = load <8 x float>, <8 x float>* %1204, align 1, !tbaa !12
  %1206 = add nuw nsw i64 %1133, 24
  %1207 = getelementptr inbounds float, float* %5, i64 %1206
  %1208 = bitcast float* %1207 to <8 x float>*
  %1209 = load <8 x float>, <8 x float>* %1208, align 1, !tbaa !12
  %1210 = add nuw nsw i64 %1133, 32
  %1211 = getelementptr inbounds float, float* %5, i64 %1210
  %1212 = bitcast float* %1211 to <8 x float>*
  %1213 = load <8 x float>, <8 x float>* %1212, align 1, !tbaa !12
  %1214 = add nuw nsw i64 %1133, 40
  %1215 = getelementptr inbounds float, float* %5, i64 %1214
  %1216 = bitcast float* %1215 to <8 x float>*
  %1217 = load <8 x float>, <8 x float>* %1216, align 1, !tbaa !12
  %1218 = add nuw nsw i64 %1133, 48
  %1219 = getelementptr inbounds float, float* %5, i64 %1218
  %1220 = bitcast float* %1219 to <8 x float>*
  %1221 = load <8 x float>, <8 x float>* %1220, align 1, !tbaa !12
  %1222 = add nuw nsw i64 %1133, 56
  %1223 = getelementptr inbounds float, float* %5, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nuw nsw i64 %1133, 64
  %1227 = getelementptr inbounds float, float* %5, i64 %1226
  %1228 = bitcast float* %1227 to <8 x float>*
  %1229 = load <8 x float>, <8 x float>* %1228, align 1, !tbaa !12
  %1230 = add nuw nsw i64 %1133, 72
  %1231 = getelementptr inbounds float, float* %5, i64 %1230
  %1232 = bitcast float* %1231 to <8 x float>*
  %1233 = load <8 x float>, <8 x float>* %1232, align 1, !tbaa !12
  %1234 = add nuw nsw i64 %1133, 80
  %1235 = getelementptr inbounds float, float* %5, i64 %1234
  %1236 = bitcast float* %1235 to <8 x float>*
  %1237 = load <8 x float>, <8 x float>* %1236, align 1, !tbaa !12
  %1238 = add nuw nsw i64 %1133, 88
  %1239 = getelementptr inbounds float, float* %5, i64 %1238
  %1240 = bitcast float* %1239 to <8 x float>*
  %1241 = load <8 x float>, <8 x float>* %1240, align 1, !tbaa !12
  %1242 = add nuw nsw i64 %1133, 96
  %1243 = getelementptr inbounds float, float* %5, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nuw nsw i64 %1133, 104
  %1247 = getelementptr inbounds float, float* %5, i64 %1246
  %1248 = bitcast float* %1247 to <8 x float>*
  %1249 = load <8 x float>, <8 x float>* %1248, align 1, !tbaa !12
  %1250 = add nuw nsw i64 %1133, 112
  %1251 = getelementptr inbounds float, float* %5, i64 %1250
  %1252 = bitcast float* %1251 to <8 x float>*
  %1253 = load <8 x float>, <8 x float>* %1252, align 1, !tbaa !12
  %1254 = add nsw i64 %1133, %924
  %1255 = getelementptr inbounds float, float* %3, i64 %1254
  %1256 = bitcast float* %1255 to <8 x float>*
  %1257 = load <8 x float>, <8 x float>* %1256, align 1, !tbaa !12
  %1258 = add nsw i64 %1254, 8
  %1259 = getelementptr inbounds float, float* %3, i64 %1258
  %1260 = bitcast float* %1259 to <8 x float>*
  %1261 = load <8 x float>, <8 x float>* %1260, align 1, !tbaa !12
  %1262 = add nsw i64 %1254, 16
  %1263 = getelementptr inbounds float, float* %3, i64 %1262
  %1264 = bitcast float* %1263 to <8 x float>*
  %1265 = load <8 x float>, <8 x float>* %1264, align 1, !tbaa !12
  %1266 = add nsw i64 %1254, 24
  %1267 = getelementptr inbounds float, float* %3, i64 %1266
  %1268 = bitcast float* %1267 to <8 x float>*
  %1269 = load <8 x float>, <8 x float>* %1268, align 1, !tbaa !12
  %1270 = add nsw i64 %1254, 32
  %1271 = getelementptr inbounds float, float* %3, i64 %1270
  %1272 = bitcast float* %1271 to <8 x float>*
  %1273 = load <8 x float>, <8 x float>* %1272, align 1, !tbaa !12
  %1274 = add nsw i64 %1254, 40
  %1275 = getelementptr inbounds float, float* %3, i64 %1274
  %1276 = bitcast float* %1275 to <8 x float>*
  %1277 = load <8 x float>, <8 x float>* %1276, align 1, !tbaa !12
  %1278 = add nsw i64 %1254, 48
  %1279 = getelementptr inbounds float, float* %3, i64 %1278
  %1280 = bitcast float* %1279 to <8 x float>*
  %1281 = load <8 x float>, <8 x float>* %1280, align 1, !tbaa !12
  %1282 = add nsw i64 %1254, 56
  %1283 = getelementptr inbounds float, float* %3, i64 %1282
  %1284 = bitcast float* %1283 to <8 x float>*
  %1285 = load <8 x float>, <8 x float>* %1284, align 1, !tbaa !12
  %1286 = add nsw i64 %1254, 64
  %1287 = getelementptr inbounds float, float* %3, i64 %1286
  %1288 = bitcast float* %1287 to <8 x float>*
  %1289 = load <8 x float>, <8 x float>* %1288, align 1, !tbaa !12
  %1290 = add nsw i64 %1254, 72
  %1291 = getelementptr inbounds float, float* %3, i64 %1290
  %1292 = bitcast float* %1291 to <8 x float>*
  %1293 = load <8 x float>, <8 x float>* %1292, align 1, !tbaa !12
  %1294 = add nsw i64 %1254, 80
  %1295 = getelementptr inbounds float, float* %3, i64 %1294
  %1296 = bitcast float* %1295 to <8 x float>*
  %1297 = load <8 x float>, <8 x float>* %1296, align 1, !tbaa !12
  %1298 = add nsw i64 %1254, 88
  %1299 = getelementptr inbounds float, float* %3, i64 %1298
  %1300 = bitcast float* %1299 to <8 x float>*
  %1301 = load <8 x float>, <8 x float>* %1300, align 1, !tbaa !12
  %1302 = add nsw i64 %1254, 96
  %1303 = getelementptr inbounds float, float* %3, i64 %1302
  %1304 = bitcast float* %1303 to <8 x float>*
  %1305 = load <8 x float>, <8 x float>* %1304, align 1, !tbaa !12
  %1306 = add nsw i64 %1254, 104
  %1307 = getelementptr inbounds float, float* %3, i64 %1306
  %1308 = bitcast float* %1307 to <8 x float>*
  %1309 = load <8 x float>, <8 x float>* %1308, align 1, !tbaa !12
  %1310 = add nsw i64 %1254, 112
  %1311 = getelementptr inbounds float, float* %3, i64 %1310
  %1312 = bitcast float* %1311 to <8 x float>*
  %1313 = load <8 x float>, <8 x float>* %1312, align 1, !tbaa !12
  %1314 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1257, <8 x float> %50, <8 x float> %1197) #10
  %1315 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1261, <8 x float> %50, <8 x float> %1201) #10
  %1316 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1265, <8 x float> %50, <8 x float> %1205) #10
  %1317 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1269, <8 x float> %50, <8 x float> %1209) #10
  %1318 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1273, <8 x float> %50, <8 x float> %1213) #10
  %1319 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1277, <8 x float> %50, <8 x float> %1217) #10
  %1320 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1281, <8 x float> %50, <8 x float> %1221) #10
  %1321 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1285, <8 x float> %50, <8 x float> %1225) #10
  %1322 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1289, <8 x float> %50, <8 x float> %1229) #10
  %1323 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1293, <8 x float> %50, <8 x float> %1233) #10
  %1324 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1297, <8 x float> %50, <8 x float> %1237) #10
  %1325 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1301, <8 x float> %50, <8 x float> %1241) #10
  %1326 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1305, <8 x float> %50, <8 x float> %1245) #10
  %1327 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1309, <8 x float> %50, <8 x float> %1249) #10
  %1328 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1313, <8 x float> %50, <8 x float> %1253) #10
  store <8 x float> %1314, <8 x float>* %1196, align 1, !tbaa !12
  store <8 x float> %1315, <8 x float>* %1200, align 1, !tbaa !12
  store <8 x float> %1316, <8 x float>* %1204, align 1, !tbaa !12
  store <8 x float> %1317, <8 x float>* %1208, align 1, !tbaa !12
  store <8 x float> %1318, <8 x float>* %1212, align 1, !tbaa !12
  store <8 x float> %1319, <8 x float>* %1216, align 1, !tbaa !12
  store <8 x float> %1320, <8 x float>* %1220, align 1, !tbaa !12
  store <8 x float> %1321, <8 x float>* %1224, align 1, !tbaa !12
  store <8 x float> %1322, <8 x float>* %1228, align 1, !tbaa !12
  store <8 x float> %1323, <8 x float>* %1232, align 1, !tbaa !12
  store <8 x float> %1324, <8 x float>* %1236, align 1, !tbaa !12
  store <8 x float> %1325, <8 x float>* %1240, align 1, !tbaa !12
  store <8 x float> %1326, <8 x float>* %1244, align 1, !tbaa !12
  store <8 x float> %1327, <8 x float>* %1248, align 1, !tbaa !12
  store <8 x float> %1328, <8 x float>* %1252, align 1, !tbaa !12
  %1329 = add nuw nsw i64 %1133, 120
  %1330 = icmp ult i64 %1329, %925
  br i1 %1330, label %1132, label %1125

1331:                                             ; preds = %1337
  br i1 %1127, label %1332, label %1552

1332:                                             ; preds = %1331
  %1333 = trunc i64 %56 to i32
  %1334 = mul nsw i32 %1126, %1333
  %1335 = sext i32 %1334 to i64
  %1336 = zext i32 %1126 to i64
  br label %1557

1337:                                             ; preds = %1128, %1337
  %1338 = phi i64 [ 0, %1128 ], [ %1550, %1337 ]
  %1339 = getelementptr inbounds float, float* %5, i64 %1338
  %1340 = getelementptr inbounds float, float* %1339, i64 8
  %1341 = bitcast float* %1340 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1341, i32 0, i32 1, i32 1)
  %1342 = getelementptr inbounds float, float* %3, i64 %1338
  %1343 = getelementptr inbounds float, float* %1342, i64 8
  %1344 = bitcast float* %1343 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1344, i32 0, i32 1, i32 1)
  %1345 = getelementptr inbounds float, float* %1339, i64 16
  %1346 = bitcast float* %1345 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1346, i32 0, i32 1, i32 1)
  %1347 = getelementptr inbounds float, float* %1342, i64 16
  %1348 = bitcast float* %1347 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1348, i32 0, i32 1, i32 1)
  %1349 = getelementptr inbounds float, float* %1339, i64 24
  %1350 = bitcast float* %1349 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1350, i32 0, i32 1, i32 1)
  %1351 = getelementptr inbounds float, float* %1342, i64 24
  %1352 = bitcast float* %1351 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1352, i32 0, i32 1, i32 1)
  %1353 = getelementptr inbounds float, float* %1339, i64 32
  %1354 = bitcast float* %1353 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1354, i32 0, i32 1, i32 1)
  %1355 = getelementptr inbounds float, float* %1342, i64 32
  %1356 = bitcast float* %1355 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1356, i32 0, i32 1, i32 1)
  %1357 = getelementptr inbounds float, float* %1339, i64 40
  %1358 = bitcast float* %1357 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1358, i32 0, i32 1, i32 1)
  %1359 = getelementptr inbounds float, float* %1342, i64 40
  %1360 = bitcast float* %1359 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1360, i32 0, i32 1, i32 1)
  %1361 = getelementptr inbounds float, float* %1339, i64 48
  %1362 = bitcast float* %1361 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1362, i32 0, i32 1, i32 1)
  %1363 = getelementptr inbounds float, float* %1342, i64 48
  %1364 = bitcast float* %1363 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1364, i32 0, i32 1, i32 1)
  %1365 = getelementptr inbounds float, float* %1339, i64 56
  %1366 = bitcast float* %1365 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1366, i32 0, i32 1, i32 1)
  %1367 = getelementptr inbounds float, float* %1342, i64 56
  %1368 = bitcast float* %1367 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1368, i32 0, i32 1, i32 1)
  %1369 = getelementptr inbounds float, float* %1339, i64 64
  %1370 = bitcast float* %1369 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1370, i32 0, i32 1, i32 1)
  %1371 = getelementptr inbounds float, float* %1342, i64 64
  %1372 = bitcast float* %1371 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1372, i32 0, i32 1, i32 1)
  %1373 = getelementptr inbounds float, float* %1339, i64 72
  %1374 = bitcast float* %1373 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1374, i32 0, i32 1, i32 1)
  %1375 = getelementptr inbounds float, float* %1342, i64 72
  %1376 = bitcast float* %1375 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1376, i32 0, i32 1, i32 1)
  %1377 = getelementptr inbounds float, float* %1339, i64 80
  %1378 = bitcast float* %1377 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1378, i32 0, i32 1, i32 1)
  %1379 = getelementptr inbounds float, float* %1342, i64 80
  %1380 = bitcast float* %1379 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1380, i32 0, i32 1, i32 1)
  %1381 = getelementptr inbounds float, float* %1339, i64 88
  %1382 = bitcast float* %1381 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1382, i32 0, i32 1, i32 1)
  %1383 = getelementptr inbounds float, float* %1342, i64 88
  %1384 = bitcast float* %1383 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1384, i32 0, i32 1, i32 1)
  %1385 = getelementptr inbounds float, float* %1339, i64 96
  %1386 = bitcast float* %1385 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1386, i32 0, i32 1, i32 1)
  %1387 = getelementptr inbounds float, float* %1342, i64 96
  %1388 = bitcast float* %1387 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1388, i32 0, i32 1, i32 1)
  %1389 = getelementptr inbounds float, float* %1339, i64 104
  %1390 = bitcast float* %1389 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1390, i32 0, i32 1, i32 1)
  %1391 = getelementptr inbounds float, float* %1342, i64 104
  %1392 = bitcast float* %1391 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1392, i32 0, i32 1, i32 1)
  %1393 = getelementptr inbounds float, float* %1339, i64 112
  %1394 = bitcast float* %1393 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1394, i32 0, i32 1, i32 1)
  %1395 = getelementptr inbounds float, float* %1342, i64 112
  %1396 = bitcast float* %1395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1396, i32 0, i32 1, i32 1)
  %1397 = getelementptr inbounds float, float* %1339, i64 120
  %1398 = bitcast float* %1397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1398, i32 0, i32 1, i32 1)
  %1399 = getelementptr inbounds float, float* %1342, i64 120
  %1400 = bitcast float* %1399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1400, i32 0, i32 1, i32 1)
  %1401 = bitcast float* %1339 to <8 x float>*
  %1402 = load <8 x float>, <8 x float>* %1401, align 1, !tbaa !12
  %1403 = add nuw nsw i64 %1338, 8
  %1404 = getelementptr inbounds float, float* %5, i64 %1403
  %1405 = bitcast float* %1404 to <8 x float>*
  %1406 = load <8 x float>, <8 x float>* %1405, align 1, !tbaa !12
  %1407 = add nuw nsw i64 %1338, 16
  %1408 = getelementptr inbounds float, float* %5, i64 %1407
  %1409 = bitcast float* %1408 to <8 x float>*
  %1410 = load <8 x float>, <8 x float>* %1409, align 1, !tbaa !12
  %1411 = add nuw nsw i64 %1338, 24
  %1412 = getelementptr inbounds float, float* %5, i64 %1411
  %1413 = bitcast float* %1412 to <8 x float>*
  %1414 = load <8 x float>, <8 x float>* %1413, align 1, !tbaa !12
  %1415 = add nuw nsw i64 %1338, 32
  %1416 = getelementptr inbounds float, float* %5, i64 %1415
  %1417 = bitcast float* %1416 to <8 x float>*
  %1418 = load <8 x float>, <8 x float>* %1417, align 1, !tbaa !12
  %1419 = add nuw nsw i64 %1338, 40
  %1420 = getelementptr inbounds float, float* %5, i64 %1419
  %1421 = bitcast float* %1420 to <8 x float>*
  %1422 = load <8 x float>, <8 x float>* %1421, align 1, !tbaa !12
  %1423 = add nuw nsw i64 %1338, 48
  %1424 = getelementptr inbounds float, float* %5, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = add nuw nsw i64 %1338, 56
  %1428 = getelementptr inbounds float, float* %5, i64 %1427
  %1429 = bitcast float* %1428 to <8 x float>*
  %1430 = load <8 x float>, <8 x float>* %1429, align 1, !tbaa !12
  %1431 = add nuw nsw i64 %1338, 64
  %1432 = getelementptr inbounds float, float* %5, i64 %1431
  %1433 = bitcast float* %1432 to <8 x float>*
  %1434 = load <8 x float>, <8 x float>* %1433, align 1, !tbaa !12
  %1435 = add nuw nsw i64 %1338, 72
  %1436 = getelementptr inbounds float, float* %5, i64 %1435
  %1437 = bitcast float* %1436 to <8 x float>*
  %1438 = load <8 x float>, <8 x float>* %1437, align 1, !tbaa !12
  %1439 = add nuw nsw i64 %1338, 80
  %1440 = getelementptr inbounds float, float* %5, i64 %1439
  %1441 = bitcast float* %1440 to <8 x float>*
  %1442 = load <8 x float>, <8 x float>* %1441, align 1, !tbaa !12
  %1443 = add nuw nsw i64 %1338, 88
  %1444 = getelementptr inbounds float, float* %5, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nuw nsw i64 %1338, 96
  %1448 = getelementptr inbounds float, float* %5, i64 %1447
  %1449 = bitcast float* %1448 to <8 x float>*
  %1450 = load <8 x float>, <8 x float>* %1449, align 1, !tbaa !12
  %1451 = add nuw nsw i64 %1338, 104
  %1452 = getelementptr inbounds float, float* %5, i64 %1451
  %1453 = bitcast float* %1452 to <8 x float>*
  %1454 = load <8 x float>, <8 x float>* %1453, align 1, !tbaa !12
  %1455 = add nuw nsw i64 %1338, 112
  %1456 = getelementptr inbounds float, float* %5, i64 %1455
  %1457 = bitcast float* %1456 to <8 x float>*
  %1458 = load <8 x float>, <8 x float>* %1457, align 1, !tbaa !12
  %1459 = trunc i64 %1338 to i32
  %1460 = add nsw i32 %1131, %1459
  %1461 = sext i32 %1460 to i64
  %1462 = getelementptr inbounds float, float* %3, i64 %1461
  %1463 = bitcast float* %1462 to <8 x float>*
  %1464 = load <8 x float>, <8 x float>* %1463, align 1, !tbaa !12
  %1465 = add nsw i32 %1460, 8
  %1466 = sext i32 %1465 to i64
  %1467 = getelementptr inbounds float, float* %3, i64 %1466
  %1468 = bitcast float* %1467 to <8 x float>*
  %1469 = load <8 x float>, <8 x float>* %1468, align 1, !tbaa !12
  %1470 = add nsw i32 %1460, 16
  %1471 = sext i32 %1470 to i64
  %1472 = getelementptr inbounds float, float* %3, i64 %1471
  %1473 = bitcast float* %1472 to <8 x float>*
  %1474 = load <8 x float>, <8 x float>* %1473, align 1, !tbaa !12
  %1475 = add nsw i32 %1460, 24
  %1476 = sext i32 %1475 to i64
  %1477 = getelementptr inbounds float, float* %3, i64 %1476
  %1478 = bitcast float* %1477 to <8 x float>*
  %1479 = load <8 x float>, <8 x float>* %1478, align 1, !tbaa !12
  %1480 = add nsw i32 %1460, 32
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds float, float* %3, i64 %1481
  %1483 = bitcast float* %1482 to <8 x float>*
  %1484 = load <8 x float>, <8 x float>* %1483, align 1, !tbaa !12
  %1485 = add nsw i32 %1460, 40
  %1486 = sext i32 %1485 to i64
  %1487 = getelementptr inbounds float, float* %3, i64 %1486
  %1488 = bitcast float* %1487 to <8 x float>*
  %1489 = load <8 x float>, <8 x float>* %1488, align 1, !tbaa !12
  %1490 = add nsw i32 %1460, 48
  %1491 = sext i32 %1490 to i64
  %1492 = getelementptr inbounds float, float* %3, i64 %1491
  %1493 = bitcast float* %1492 to <8 x float>*
  %1494 = load <8 x float>, <8 x float>* %1493, align 1, !tbaa !12
  %1495 = add nsw i32 %1460, 56
  %1496 = sext i32 %1495 to i64
  %1497 = getelementptr inbounds float, float* %3, i64 %1496
  %1498 = bitcast float* %1497 to <8 x float>*
  %1499 = load <8 x float>, <8 x float>* %1498, align 1, !tbaa !12
  %1500 = add nsw i32 %1460, 64
  %1501 = sext i32 %1500 to i64
  %1502 = getelementptr inbounds float, float* %3, i64 %1501
  %1503 = bitcast float* %1502 to <8 x float>*
  %1504 = load <8 x float>, <8 x float>* %1503, align 1, !tbaa !12
  %1505 = add nsw i32 %1460, 72
  %1506 = sext i32 %1505 to i64
  %1507 = getelementptr inbounds float, float* %3, i64 %1506
  %1508 = bitcast float* %1507 to <8 x float>*
  %1509 = load <8 x float>, <8 x float>* %1508, align 1, !tbaa !12
  %1510 = add nsw i32 %1460, 80
  %1511 = sext i32 %1510 to i64
  %1512 = getelementptr inbounds float, float* %3, i64 %1511
  %1513 = bitcast float* %1512 to <8 x float>*
  %1514 = load <8 x float>, <8 x float>* %1513, align 1, !tbaa !12
  %1515 = add nsw i32 %1460, 88
  %1516 = sext i32 %1515 to i64
  %1517 = getelementptr inbounds float, float* %3, i64 %1516
  %1518 = bitcast float* %1517 to <8 x float>*
  %1519 = load <8 x float>, <8 x float>* %1518, align 1, !tbaa !12
  %1520 = add nsw i32 %1460, 96
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds float, float* %3, i64 %1521
  %1523 = bitcast float* %1522 to <8 x float>*
  %1524 = load <8 x float>, <8 x float>* %1523, align 1, !tbaa !12
  %1525 = add nsw i32 %1460, 104
  %1526 = sext i32 %1525 to i64
  %1527 = getelementptr inbounds float, float* %3, i64 %1526
  %1528 = bitcast float* %1527 to <8 x float>*
  %1529 = load <8 x float>, <8 x float>* %1528, align 1, !tbaa !12
  %1530 = add nsw i32 %1460, 112
  %1531 = sext i32 %1530 to i64
  %1532 = getelementptr inbounds float, float* %3, i64 %1531
  %1533 = bitcast float* %1532 to <8 x float>*
  %1534 = load <8 x float>, <8 x float>* %1533, align 1, !tbaa !12
  %1535 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1464, <8 x float> %55, <8 x float> %1402) #10
  %1536 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1469, <8 x float> %55, <8 x float> %1406) #10
  %1537 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1474, <8 x float> %55, <8 x float> %1410) #10
  %1538 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1479, <8 x float> %55, <8 x float> %1414) #10
  %1539 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1484, <8 x float> %55, <8 x float> %1418) #10
  %1540 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1489, <8 x float> %55, <8 x float> %1422) #10
  %1541 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1494, <8 x float> %55, <8 x float> %1426) #10
  %1542 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1499, <8 x float> %55, <8 x float> %1430) #10
  %1543 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1504, <8 x float> %55, <8 x float> %1434) #10
  %1544 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1509, <8 x float> %55, <8 x float> %1438) #10
  %1545 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1514, <8 x float> %55, <8 x float> %1442) #10
  %1546 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1519, <8 x float> %55, <8 x float> %1446) #10
  %1547 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1524, <8 x float> %55, <8 x float> %1450) #10
  %1548 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1529, <8 x float> %55, <8 x float> %1454) #10
  %1549 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1534, <8 x float> %55, <8 x float> %1458) #10
  store <8 x float> %1535, <8 x float>* %1401, align 1, !tbaa !12
  store <8 x float> %1536, <8 x float>* %1405, align 1, !tbaa !12
  store <8 x float> %1537, <8 x float>* %1409, align 1, !tbaa !12
  store <8 x float> %1538, <8 x float>* %1413, align 1, !tbaa !12
  store <8 x float> %1539, <8 x float>* %1417, align 1, !tbaa !12
  store <8 x float> %1540, <8 x float>* %1421, align 1, !tbaa !12
  store <8 x float> %1541, <8 x float>* %1425, align 1, !tbaa !12
  store <8 x float> %1542, <8 x float>* %1429, align 1, !tbaa !12
  store <8 x float> %1543, <8 x float>* %1433, align 1, !tbaa !12
  store <8 x float> %1544, <8 x float>* %1437, align 1, !tbaa !12
  store <8 x float> %1545, <8 x float>* %1441, align 1, !tbaa !12
  store <8 x float> %1546, <8 x float>* %1445, align 1, !tbaa !12
  store <8 x float> %1547, <8 x float>* %1449, align 1, !tbaa !12
  store <8 x float> %1548, <8 x float>* %1453, align 1, !tbaa !12
  store <8 x float> %1549, <8 x float>* %1457, align 1, !tbaa !12
  %1550 = add nuw nsw i64 %1338, 120
  %1551 = icmp ult i64 %1550, %1129
  br i1 %1551, label %1337, label %1331

1552:                                             ; preds = %1557, %20, %493, %1125, %1331
  %1553 = add nuw nsw i64 %21, 8
  %1554 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1555 = sext i32 %1554 to i64
  %1556 = icmp slt i64 %1553, %1555
  br i1 %1556, label %20, label %8

1557:                                             ; preds = %1332, %1557
  %1558 = phi i64 [ 0, %1332 ], [ %1754, %1557 ]
  %1559 = getelementptr inbounds float, float* %5, i64 %1558
  %1560 = getelementptr inbounds float, float* %1559, i64 8
  %1561 = bitcast float* %1560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1561, i32 0, i32 1, i32 1)
  %1562 = getelementptr inbounds float, float* %3, i64 %1558
  %1563 = getelementptr inbounds float, float* %1562, i64 8
  %1564 = bitcast float* %1563 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1564, i32 0, i32 1, i32 1)
  %1565 = getelementptr inbounds float, float* %1559, i64 16
  %1566 = bitcast float* %1565 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1566, i32 0, i32 1, i32 1)
  %1567 = getelementptr inbounds float, float* %1562, i64 16
  %1568 = bitcast float* %1567 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1568, i32 0, i32 1, i32 1)
  %1569 = getelementptr inbounds float, float* %1559, i64 24
  %1570 = bitcast float* %1569 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1570, i32 0, i32 1, i32 1)
  %1571 = getelementptr inbounds float, float* %1562, i64 24
  %1572 = bitcast float* %1571 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1572, i32 0, i32 1, i32 1)
  %1573 = getelementptr inbounds float, float* %1559, i64 32
  %1574 = bitcast float* %1573 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1574, i32 0, i32 1, i32 1)
  %1575 = getelementptr inbounds float, float* %1562, i64 32
  %1576 = bitcast float* %1575 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1576, i32 0, i32 1, i32 1)
  %1577 = getelementptr inbounds float, float* %1559, i64 40
  %1578 = bitcast float* %1577 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1578, i32 0, i32 1, i32 1)
  %1579 = getelementptr inbounds float, float* %1562, i64 40
  %1580 = bitcast float* %1579 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1580, i32 0, i32 1, i32 1)
  %1581 = getelementptr inbounds float, float* %1559, i64 48
  %1582 = bitcast float* %1581 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1582, i32 0, i32 1, i32 1)
  %1583 = getelementptr inbounds float, float* %1562, i64 48
  %1584 = bitcast float* %1583 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1584, i32 0, i32 1, i32 1)
  %1585 = getelementptr inbounds float, float* %1559, i64 56
  %1586 = bitcast float* %1585 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1586, i32 0, i32 1, i32 1)
  %1587 = getelementptr inbounds float, float* %1562, i64 56
  %1588 = bitcast float* %1587 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1588, i32 0, i32 1, i32 1)
  %1589 = getelementptr inbounds float, float* %1559, i64 64
  %1590 = bitcast float* %1589 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1590, i32 0, i32 1, i32 1)
  %1591 = getelementptr inbounds float, float* %1562, i64 64
  %1592 = bitcast float* %1591 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1592, i32 0, i32 1, i32 1)
  %1593 = getelementptr inbounds float, float* %1559, i64 72
  %1594 = bitcast float* %1593 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1594, i32 0, i32 1, i32 1)
  %1595 = getelementptr inbounds float, float* %1562, i64 72
  %1596 = bitcast float* %1595 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1596, i32 0, i32 1, i32 1)
  %1597 = getelementptr inbounds float, float* %1559, i64 80
  %1598 = bitcast float* %1597 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1598, i32 0, i32 1, i32 1)
  %1599 = getelementptr inbounds float, float* %1562, i64 80
  %1600 = bitcast float* %1599 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1600, i32 0, i32 1, i32 1)
  %1601 = getelementptr inbounds float, float* %1559, i64 88
  %1602 = bitcast float* %1601 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1602, i32 0, i32 1, i32 1)
  %1603 = getelementptr inbounds float, float* %1562, i64 88
  %1604 = bitcast float* %1603 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1604, i32 0, i32 1, i32 1)
  %1605 = getelementptr inbounds float, float* %1559, i64 96
  %1606 = bitcast float* %1605 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1606, i32 0, i32 1, i32 1)
  %1607 = getelementptr inbounds float, float* %1562, i64 96
  %1608 = bitcast float* %1607 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1608, i32 0, i32 1, i32 1)
  %1609 = getelementptr inbounds float, float* %1559, i64 104
  %1610 = bitcast float* %1609 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1610, i32 0, i32 1, i32 1)
  %1611 = getelementptr inbounds float, float* %1562, i64 104
  %1612 = bitcast float* %1611 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1612, i32 0, i32 1, i32 1)
  %1613 = getelementptr inbounds float, float* %1559, i64 112
  %1614 = bitcast float* %1613 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1614, i32 0, i32 1, i32 1)
  %1615 = getelementptr inbounds float, float* %1562, i64 112
  %1616 = bitcast float* %1615 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1616, i32 0, i32 1, i32 1)
  %1617 = getelementptr inbounds float, float* %1559, i64 120
  %1618 = bitcast float* %1617 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1618, i32 0, i32 1, i32 1)
  %1619 = getelementptr inbounds float, float* %1562, i64 120
  %1620 = bitcast float* %1619 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1620, i32 0, i32 1, i32 1)
  %1621 = bitcast float* %1559 to <8 x float>*
  %1622 = load <8 x float>, <8 x float>* %1621, align 1, !tbaa !12
  %1623 = add nuw nsw i64 %1558, 8
  %1624 = getelementptr inbounds float, float* %5, i64 %1623
  %1625 = bitcast float* %1624 to <8 x float>*
  %1626 = load <8 x float>, <8 x float>* %1625, align 1, !tbaa !12
  %1627 = add nuw nsw i64 %1558, 16
  %1628 = getelementptr inbounds float, float* %5, i64 %1627
  %1629 = bitcast float* %1628 to <8 x float>*
  %1630 = load <8 x float>, <8 x float>* %1629, align 1, !tbaa !12
  %1631 = add nuw nsw i64 %1558, 24
  %1632 = getelementptr inbounds float, float* %5, i64 %1631
  %1633 = bitcast float* %1632 to <8 x float>*
  %1634 = load <8 x float>, <8 x float>* %1633, align 1, !tbaa !12
  %1635 = add nuw nsw i64 %1558, 32
  %1636 = getelementptr inbounds float, float* %5, i64 %1635
  %1637 = bitcast float* %1636 to <8 x float>*
  %1638 = load <8 x float>, <8 x float>* %1637, align 1, !tbaa !12
  %1639 = add nuw nsw i64 %1558, 40
  %1640 = getelementptr inbounds float, float* %5, i64 %1639
  %1641 = bitcast float* %1640 to <8 x float>*
  %1642 = load <8 x float>, <8 x float>* %1641, align 1, !tbaa !12
  %1643 = add nuw nsw i64 %1558, 48
  %1644 = getelementptr inbounds float, float* %5, i64 %1643
  %1645 = bitcast float* %1644 to <8 x float>*
  %1646 = load <8 x float>, <8 x float>* %1645, align 1, !tbaa !12
  %1647 = add nuw nsw i64 %1558, 56
  %1648 = getelementptr inbounds float, float* %5, i64 %1647
  %1649 = bitcast float* %1648 to <8 x float>*
  %1650 = load <8 x float>, <8 x float>* %1649, align 1, !tbaa !12
  %1651 = add nuw nsw i64 %1558, 64
  %1652 = getelementptr inbounds float, float* %5, i64 %1651
  %1653 = bitcast float* %1652 to <8 x float>*
  %1654 = load <8 x float>, <8 x float>* %1653, align 1, !tbaa !12
  %1655 = add nuw nsw i64 %1558, 72
  %1656 = getelementptr inbounds float, float* %5, i64 %1655
  %1657 = bitcast float* %1656 to <8 x float>*
  %1658 = load <8 x float>, <8 x float>* %1657, align 1, !tbaa !12
  %1659 = add nuw nsw i64 %1558, 80
  %1660 = getelementptr inbounds float, float* %5, i64 %1659
  %1661 = bitcast float* %1660 to <8 x float>*
  %1662 = load <8 x float>, <8 x float>* %1661, align 1, !tbaa !12
  %1663 = add nuw nsw i64 %1558, 88
  %1664 = getelementptr inbounds float, float* %5, i64 %1663
  %1665 = bitcast float* %1664 to <8 x float>*
  %1666 = load <8 x float>, <8 x float>* %1665, align 1, !tbaa !12
  %1667 = add nuw nsw i64 %1558, 96
  %1668 = getelementptr inbounds float, float* %5, i64 %1667
  %1669 = bitcast float* %1668 to <8 x float>*
  %1670 = load <8 x float>, <8 x float>* %1669, align 1, !tbaa !12
  %1671 = add nuw nsw i64 %1558, 104
  %1672 = getelementptr inbounds float, float* %5, i64 %1671
  %1673 = bitcast float* %1672 to <8 x float>*
  %1674 = load <8 x float>, <8 x float>* %1673, align 1, !tbaa !12
  %1675 = add nuw nsw i64 %1558, 112
  %1676 = getelementptr inbounds float, float* %5, i64 %1675
  %1677 = bitcast float* %1676 to <8 x float>*
  %1678 = load <8 x float>, <8 x float>* %1677, align 1, !tbaa !12
  %1679 = add nsw i64 %1558, %1335
  %1680 = getelementptr inbounds float, float* %3, i64 %1679
  %1681 = bitcast float* %1680 to <8 x float>*
  %1682 = load <8 x float>, <8 x float>* %1681, align 1, !tbaa !12
  %1683 = add nsw i64 %1679, 8
  %1684 = getelementptr inbounds float, float* %3, i64 %1683
  %1685 = bitcast float* %1684 to <8 x float>*
  %1686 = load <8 x float>, <8 x float>* %1685, align 1, !tbaa !12
  %1687 = add nsw i64 %1679, 16
  %1688 = getelementptr inbounds float, float* %3, i64 %1687
  %1689 = bitcast float* %1688 to <8 x float>*
  %1690 = load <8 x float>, <8 x float>* %1689, align 1, !tbaa !12
  %1691 = add nsw i64 %1679, 24
  %1692 = getelementptr inbounds float, float* %3, i64 %1691
  %1693 = bitcast float* %1692 to <8 x float>*
  %1694 = load <8 x float>, <8 x float>* %1693, align 1, !tbaa !12
  %1695 = add nsw i64 %1679, 32
  %1696 = getelementptr inbounds float, float* %3, i64 %1695
  %1697 = bitcast float* %1696 to <8 x float>*
  %1698 = load <8 x float>, <8 x float>* %1697, align 1, !tbaa !12
  %1699 = add nsw i64 %1679, 40
  %1700 = getelementptr inbounds float, float* %3, i64 %1699
  %1701 = bitcast float* %1700 to <8 x float>*
  %1702 = load <8 x float>, <8 x float>* %1701, align 1, !tbaa !12
  %1703 = add nsw i64 %1679, 48
  %1704 = getelementptr inbounds float, float* %3, i64 %1703
  %1705 = bitcast float* %1704 to <8 x float>*
  %1706 = load <8 x float>, <8 x float>* %1705, align 1, !tbaa !12
  %1707 = add nsw i64 %1679, 56
  %1708 = getelementptr inbounds float, float* %3, i64 %1707
  %1709 = bitcast float* %1708 to <8 x float>*
  %1710 = load <8 x float>, <8 x float>* %1709, align 1, !tbaa !12
  %1711 = add nsw i64 %1679, 64
  %1712 = getelementptr inbounds float, float* %3, i64 %1711
  %1713 = bitcast float* %1712 to <8 x float>*
  %1714 = load <8 x float>, <8 x float>* %1713, align 1, !tbaa !12
  %1715 = add nsw i64 %1679, 72
  %1716 = getelementptr inbounds float, float* %3, i64 %1715
  %1717 = bitcast float* %1716 to <8 x float>*
  %1718 = load <8 x float>, <8 x float>* %1717, align 1, !tbaa !12
  %1719 = add nsw i64 %1679, 80
  %1720 = getelementptr inbounds float, float* %3, i64 %1719
  %1721 = bitcast float* %1720 to <8 x float>*
  %1722 = load <8 x float>, <8 x float>* %1721, align 1, !tbaa !12
  %1723 = add nsw i64 %1679, 88
  %1724 = getelementptr inbounds float, float* %3, i64 %1723
  %1725 = bitcast float* %1724 to <8 x float>*
  %1726 = load <8 x float>, <8 x float>* %1725, align 1, !tbaa !12
  %1727 = add nsw i64 %1679, 96
  %1728 = getelementptr inbounds float, float* %3, i64 %1727
  %1729 = bitcast float* %1728 to <8 x float>*
  %1730 = load <8 x float>, <8 x float>* %1729, align 1, !tbaa !12
  %1731 = add nsw i64 %1679, 104
  %1732 = getelementptr inbounds float, float* %3, i64 %1731
  %1733 = bitcast float* %1732 to <8 x float>*
  %1734 = load <8 x float>, <8 x float>* %1733, align 1, !tbaa !12
  %1735 = add nsw i64 %1679, 112
  %1736 = getelementptr inbounds float, float* %3, i64 %1735
  %1737 = bitcast float* %1736 to <8 x float>*
  %1738 = load <8 x float>, <8 x float>* %1737, align 1, !tbaa !12
  %1739 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1682, <8 x float> %60, <8 x float> %1622) #10
  %1740 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1686, <8 x float> %60, <8 x float> %1626) #10
  %1741 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1690, <8 x float> %60, <8 x float> %1630) #10
  %1742 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1694, <8 x float> %60, <8 x float> %1634) #10
  %1743 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1698, <8 x float> %60, <8 x float> %1638) #10
  %1744 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1702, <8 x float> %60, <8 x float> %1642) #10
  %1745 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1706, <8 x float> %60, <8 x float> %1646) #10
  %1746 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1710, <8 x float> %60, <8 x float> %1650) #10
  %1747 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1714, <8 x float> %60, <8 x float> %1654) #10
  %1748 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1718, <8 x float> %60, <8 x float> %1658) #10
  %1749 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1722, <8 x float> %60, <8 x float> %1662) #10
  %1750 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1726, <8 x float> %60, <8 x float> %1666) #10
  %1751 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1730, <8 x float> %60, <8 x float> %1670) #10
  %1752 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1734, <8 x float> %60, <8 x float> %1674) #10
  %1753 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1738, <8 x float> %60, <8 x float> %1678) #10
  store <8 x float> %1739, <8 x float>* %1621, align 1, !tbaa !12
  store <8 x float> %1740, <8 x float>* %1625, align 1, !tbaa !12
  store <8 x float> %1741, <8 x float>* %1629, align 1, !tbaa !12
  store <8 x float> %1742, <8 x float>* %1633, align 1, !tbaa !12
  store <8 x float> %1743, <8 x float>* %1637, align 1, !tbaa !12
  store <8 x float> %1744, <8 x float>* %1641, align 1, !tbaa !12
  store <8 x float> %1745, <8 x float>* %1645, align 1, !tbaa !12
  store <8 x float> %1746, <8 x float>* %1649, align 1, !tbaa !12
  store <8 x float> %1747, <8 x float>* %1653, align 1, !tbaa !12
  store <8 x float> %1748, <8 x float>* %1657, align 1, !tbaa !12
  store <8 x float> %1749, <8 x float>* %1661, align 1, !tbaa !12
  store <8 x float> %1750, <8 x float>* %1665, align 1, !tbaa !12
  store <8 x float> %1751, <8 x float>* %1669, align 1, !tbaa !12
  store <8 x float> %1752, <8 x float>* %1673, align 1, !tbaa !12
  store <8 x float> %1753, <8 x float>* %1677, align 1, !tbaa !12
  %1754 = add nuw nsw i64 %1558, 120
  %1755 = icmp ult i64 %1754, %1336
  br i1 %1755, label %1557, label %1552
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 248
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui15_uk8.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
