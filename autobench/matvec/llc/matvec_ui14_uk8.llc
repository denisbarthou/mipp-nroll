; ModuleID = 'codes/matvec_ui14_uk8.cpp'
source_filename = "codes/matvec_ui14_uk8.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui14_uk8.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 112
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = sdiv i32 %4, 64
  %6 = shl nsw i32 %5, 6
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1458, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1458
  %21 = phi i64 [ %1459, %1458 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = or i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = or i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = or i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = or i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = or i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = or i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %1458

63:                                               ; preds = %20
  %64 = zext i32 %61 to i64
  %65 = trunc i64 %21 to i32
  %66 = mul nsw i32 %61, %65
  br label %73

67:                                               ; preds = %73
  br i1 %62, label %68, label %466

68:                                               ; preds = %67
  %69 = trunc i64 %26 to i32
  %70 = mul nsw i32 %61, %69
  %71 = sext i32 %70 to i64
  %72 = zext i32 %61 to i64
  br label %280

73:                                               ; preds = %63, %73
  %74 = phi i64 [ 0, %63 ], [ %272, %73 ]
  %75 = getelementptr inbounds float, float* %5, i64 %74
  %76 = getelementptr inbounds float, float* %75, i64 8
  %77 = bitcast float* %76 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %77, i32 0, i32 1, i32 1)
  %78 = getelementptr inbounds float, float* %3, i64 %74
  %79 = getelementptr inbounds float, float* %78, i64 8
  %80 = bitcast float* %79 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %80, i32 0, i32 1, i32 1)
  %81 = getelementptr inbounds float, float* %75, i64 16
  %82 = bitcast float* %81 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %82, i32 0, i32 1, i32 1)
  %83 = getelementptr inbounds float, float* %78, i64 16
  %84 = bitcast float* %83 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %84, i32 0, i32 1, i32 1)
  %85 = getelementptr inbounds float, float* %75, i64 24
  %86 = bitcast float* %85 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %86, i32 0, i32 1, i32 1)
  %87 = getelementptr inbounds float, float* %78, i64 24
  %88 = bitcast float* %87 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %88, i32 0, i32 1, i32 1)
  %89 = getelementptr inbounds float, float* %75, i64 32
  %90 = bitcast float* %89 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %90, i32 0, i32 1, i32 1)
  %91 = getelementptr inbounds float, float* %78, i64 32
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %75, i64 40
  %94 = bitcast float* %93 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %94, i32 0, i32 1, i32 1)
  %95 = getelementptr inbounds float, float* %78, i64 40
  %96 = bitcast float* %95 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %96, i32 0, i32 1, i32 1)
  %97 = getelementptr inbounds float, float* %75, i64 48
  %98 = bitcast float* %97 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %98, i32 0, i32 1, i32 1)
  %99 = getelementptr inbounds float, float* %78, i64 48
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %75, i64 56
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %78, i64 56
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %75, i64 64
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %78, i64 64
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %75, i64 72
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %78, i64 72
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %75, i64 80
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %78, i64 80
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %75, i64 88
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %78, i64 88
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %75, i64 96
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %78, i64 96
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %75, i64 104
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %78, i64 104
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %75, i64 112
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %78, i64 112
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = bitcast float* %75 to <8 x float>*
  %134 = load <8 x float>, <8 x float>* %133, align 1, !tbaa !12
  %135 = or i64 %74, 8
  %136 = getelementptr inbounds float, float* %5, i64 %135
  %137 = bitcast float* %136 to <8 x float>*
  %138 = load <8 x float>, <8 x float>* %137, align 1, !tbaa !12
  %139 = add nuw nsw i64 %74, 16
  %140 = getelementptr inbounds float, float* %5, i64 %139
  %141 = bitcast float* %140 to <8 x float>*
  %142 = load <8 x float>, <8 x float>* %141, align 1, !tbaa !12
  %143 = add nuw nsw i64 %74, 24
  %144 = getelementptr inbounds float, float* %5, i64 %143
  %145 = bitcast float* %144 to <8 x float>*
  %146 = load <8 x float>, <8 x float>* %145, align 1, !tbaa !12
  %147 = add nuw nsw i64 %74, 32
  %148 = getelementptr inbounds float, float* %5, i64 %147
  %149 = bitcast float* %148 to <8 x float>*
  %150 = load <8 x float>, <8 x float>* %149, align 1, !tbaa !12
  %151 = add nuw nsw i64 %74, 40
  %152 = getelementptr inbounds float, float* %5, i64 %151
  %153 = bitcast float* %152 to <8 x float>*
  %154 = load <8 x float>, <8 x float>* %153, align 1, !tbaa !12
  %155 = add nuw nsw i64 %74, 48
  %156 = getelementptr inbounds float, float* %5, i64 %155
  %157 = bitcast float* %156 to <8 x float>*
  %158 = load <8 x float>, <8 x float>* %157, align 1, !tbaa !12
  %159 = add nuw nsw i64 %74, 56
  %160 = getelementptr inbounds float, float* %5, i64 %159
  %161 = bitcast float* %160 to <8 x float>*
  %162 = load <8 x float>, <8 x float>* %161, align 1, !tbaa !12
  %163 = add nuw nsw i64 %74, 64
  %164 = getelementptr inbounds float, float* %5, i64 %163
  %165 = bitcast float* %164 to <8 x float>*
  %166 = load <8 x float>, <8 x float>* %165, align 1, !tbaa !12
  %167 = add nuw nsw i64 %74, 72
  %168 = getelementptr inbounds float, float* %5, i64 %167
  %169 = bitcast float* %168 to <8 x float>*
  %170 = load <8 x float>, <8 x float>* %169, align 1, !tbaa !12
  %171 = add nuw nsw i64 %74, 80
  %172 = getelementptr inbounds float, float* %5, i64 %171
  %173 = bitcast float* %172 to <8 x float>*
  %174 = load <8 x float>, <8 x float>* %173, align 1, !tbaa !12
  %175 = add nuw nsw i64 %74, 88
  %176 = getelementptr inbounds float, float* %5, i64 %175
  %177 = bitcast float* %176 to <8 x float>*
  %178 = load <8 x float>, <8 x float>* %177, align 1, !tbaa !12
  %179 = add nuw nsw i64 %74, 96
  %180 = getelementptr inbounds float, float* %5, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = add nuw nsw i64 %74, 104
  %184 = getelementptr inbounds float, float* %5, i64 %183
  %185 = bitcast float* %184 to <8 x float>*
  %186 = load <8 x float>, <8 x float>* %185, align 1, !tbaa !12
  %187 = trunc i64 %74 to i32
  %188 = add nsw i32 %66, %187
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %3, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nsw i32 %188, 8
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %3, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = add nsw i32 %188, 16
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %3, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nsw i32 %188, 24
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = add nsw i32 %188, 32
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nsw i32 %188, 40
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %3, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %217 = load <8 x float>, <8 x float>* %216, align 1, !tbaa !12
  %218 = add nsw i32 %188, 48
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %3, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %222 = load <8 x float>, <8 x float>* %221, align 1, !tbaa !12
  %223 = add nsw i32 %188, 56
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %3, i64 %224
  %226 = bitcast float* %225 to <8 x float>*
  %227 = load <8 x float>, <8 x float>* %226, align 1, !tbaa !12
  %228 = add nsw i32 %188, 64
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float, float* %3, i64 %229
  %231 = bitcast float* %230 to <8 x float>*
  %232 = load <8 x float>, <8 x float>* %231, align 1, !tbaa !12
  %233 = add nsw i32 %188, 72
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float, float* %3, i64 %234
  %236 = bitcast float* %235 to <8 x float>*
  %237 = load <8 x float>, <8 x float>* %236, align 1, !tbaa !12
  %238 = add nsw i32 %188, 80
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float, float* %3, i64 %239
  %241 = bitcast float* %240 to <8 x float>*
  %242 = load <8 x float>, <8 x float>* %241, align 1, !tbaa !12
  %243 = add nsw i32 %188, 88
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %3, i64 %244
  %246 = bitcast float* %245 to <8 x float>*
  %247 = load <8 x float>, <8 x float>* %246, align 1, !tbaa !12
  %248 = add nsw i32 %188, 96
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds float, float* %3, i64 %249
  %251 = bitcast float* %250 to <8 x float>*
  %252 = load <8 x float>, <8 x float>* %251, align 1, !tbaa !12
  %253 = add nsw i32 %188, 104
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %3, i64 %254
  %256 = bitcast float* %255 to <8 x float>*
  %257 = load <8 x float>, <8 x float>* %256, align 1, !tbaa !12
  %258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %192, <8 x float> %25, <8 x float> %134) #10
  %259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %197, <8 x float> %25, <8 x float> %138) #10
  %260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %202, <8 x float> %25, <8 x float> %142) #10
  %261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %146) #10
  %262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %150) #10
  %263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %217, <8 x float> %25, <8 x float> %154) #10
  %264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %222, <8 x float> %25, <8 x float> %158) #10
  %265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %227, <8 x float> %25, <8 x float> %162) #10
  %266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %232, <8 x float> %25, <8 x float> %166) #10
  %267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %237, <8 x float> %25, <8 x float> %170) #10
  %268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %242, <8 x float> %25, <8 x float> %174) #10
  %269 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %247, <8 x float> %25, <8 x float> %178) #10
  %270 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %252, <8 x float> %25, <8 x float> %182) #10
  %271 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %257, <8 x float> %25, <8 x float> %186) #10
  store <8 x float> %258, <8 x float>* %133, align 1, !tbaa !12
  store <8 x float> %259, <8 x float>* %137, align 1, !tbaa !12
  store <8 x float> %260, <8 x float>* %141, align 1, !tbaa !12
  store <8 x float> %261, <8 x float>* %145, align 1, !tbaa !12
  store <8 x float> %262, <8 x float>* %149, align 1, !tbaa !12
  store <8 x float> %263, <8 x float>* %153, align 1, !tbaa !12
  store <8 x float> %264, <8 x float>* %157, align 1, !tbaa !12
  store <8 x float> %265, <8 x float>* %161, align 1, !tbaa !12
  store <8 x float> %266, <8 x float>* %165, align 1, !tbaa !12
  store <8 x float> %267, <8 x float>* %169, align 1, !tbaa !12
  store <8 x float> %268, <8 x float>* %173, align 1, !tbaa !12
  store <8 x float> %269, <8 x float>* %177, align 1, !tbaa !12
  store <8 x float> %270, <8 x float>* %181, align 1, !tbaa !12
  store <8 x float> %271, <8 x float>* %185, align 1, !tbaa !12
  %272 = add nuw nsw i64 %74, 112
  %273 = icmp ult i64 %272, %64
  br i1 %273, label %73, label %67

274:                                              ; preds = %280
  br i1 %62, label %275, label %466

275:                                              ; preds = %274
  %276 = trunc i64 %31 to i32
  %277 = mul nsw i32 %61, %276
  %278 = sext i32 %277 to i64
  %279 = zext i32 %61 to i64
  br label %473

280:                                              ; preds = %68, %280
  %281 = phi i64 [ 0, %68 ], [ %464, %280 ]
  %282 = getelementptr inbounds float, float* %5, i64 %281
  %283 = getelementptr inbounds float, float* %282, i64 8
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %3, i64 %281
  %286 = getelementptr inbounds float, float* %285, i64 8
  %287 = bitcast float* %286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %287, i32 0, i32 1, i32 1)
  %288 = getelementptr inbounds float, float* %282, i64 16
  %289 = bitcast float* %288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %289, i32 0, i32 1, i32 1)
  %290 = getelementptr inbounds float, float* %285, i64 16
  %291 = bitcast float* %290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %291, i32 0, i32 1, i32 1)
  %292 = getelementptr inbounds float, float* %282, i64 24
  %293 = bitcast float* %292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %293, i32 0, i32 1, i32 1)
  %294 = getelementptr inbounds float, float* %285, i64 24
  %295 = bitcast float* %294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %295, i32 0, i32 1, i32 1)
  %296 = getelementptr inbounds float, float* %282, i64 32
  %297 = bitcast float* %296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %297, i32 0, i32 1, i32 1)
  %298 = getelementptr inbounds float, float* %285, i64 32
  %299 = bitcast float* %298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %299, i32 0, i32 1, i32 1)
  %300 = getelementptr inbounds float, float* %282, i64 40
  %301 = bitcast float* %300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %301, i32 0, i32 1, i32 1)
  %302 = getelementptr inbounds float, float* %285, i64 40
  %303 = bitcast float* %302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %303, i32 0, i32 1, i32 1)
  %304 = getelementptr inbounds float, float* %282, i64 48
  %305 = bitcast float* %304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %305, i32 0, i32 1, i32 1)
  %306 = getelementptr inbounds float, float* %285, i64 48
  %307 = bitcast float* %306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %307, i32 0, i32 1, i32 1)
  %308 = getelementptr inbounds float, float* %282, i64 56
  %309 = bitcast float* %308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %309, i32 0, i32 1, i32 1)
  %310 = getelementptr inbounds float, float* %285, i64 56
  %311 = bitcast float* %310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %311, i32 0, i32 1, i32 1)
  %312 = getelementptr inbounds float, float* %282, i64 64
  %313 = bitcast float* %312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %313, i32 0, i32 1, i32 1)
  %314 = getelementptr inbounds float, float* %285, i64 64
  %315 = bitcast float* %314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %315, i32 0, i32 1, i32 1)
  %316 = getelementptr inbounds float, float* %282, i64 72
  %317 = bitcast float* %316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %317, i32 0, i32 1, i32 1)
  %318 = getelementptr inbounds float, float* %285, i64 72
  %319 = bitcast float* %318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %319, i32 0, i32 1, i32 1)
  %320 = getelementptr inbounds float, float* %282, i64 80
  %321 = bitcast float* %320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %321, i32 0, i32 1, i32 1)
  %322 = getelementptr inbounds float, float* %285, i64 80
  %323 = bitcast float* %322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %323, i32 0, i32 1, i32 1)
  %324 = getelementptr inbounds float, float* %282, i64 88
  %325 = bitcast float* %324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %325, i32 0, i32 1, i32 1)
  %326 = getelementptr inbounds float, float* %285, i64 88
  %327 = bitcast float* %326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %327, i32 0, i32 1, i32 1)
  %328 = getelementptr inbounds float, float* %282, i64 96
  %329 = bitcast float* %328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %329, i32 0, i32 1, i32 1)
  %330 = getelementptr inbounds float, float* %285, i64 96
  %331 = bitcast float* %330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %331, i32 0, i32 1, i32 1)
  %332 = getelementptr inbounds float, float* %282, i64 104
  %333 = bitcast float* %332 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %333, i32 0, i32 1, i32 1)
  %334 = getelementptr inbounds float, float* %285, i64 104
  %335 = bitcast float* %334 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %335, i32 0, i32 1, i32 1)
  %336 = getelementptr inbounds float, float* %282, i64 112
  %337 = bitcast float* %336 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %337, i32 0, i32 1, i32 1)
  %338 = getelementptr inbounds float, float* %285, i64 112
  %339 = bitcast float* %338 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %339, i32 0, i32 1, i32 1)
  %340 = bitcast float* %282 to <8 x float>*
  %341 = load <8 x float>, <8 x float>* %340, align 1, !tbaa !12
  %342 = or i64 %281, 8
  %343 = getelementptr inbounds float, float* %5, i64 %342
  %344 = bitcast float* %343 to <8 x float>*
  %345 = load <8 x float>, <8 x float>* %344, align 1, !tbaa !12
  %346 = add nuw nsw i64 %281, 16
  %347 = getelementptr inbounds float, float* %5, i64 %346
  %348 = bitcast float* %347 to <8 x float>*
  %349 = load <8 x float>, <8 x float>* %348, align 1, !tbaa !12
  %350 = add nuw nsw i64 %281, 24
  %351 = getelementptr inbounds float, float* %5, i64 %350
  %352 = bitcast float* %351 to <8 x float>*
  %353 = load <8 x float>, <8 x float>* %352, align 1, !tbaa !12
  %354 = add nuw nsw i64 %281, 32
  %355 = getelementptr inbounds float, float* %5, i64 %354
  %356 = bitcast float* %355 to <8 x float>*
  %357 = load <8 x float>, <8 x float>* %356, align 1, !tbaa !12
  %358 = add nuw nsw i64 %281, 40
  %359 = getelementptr inbounds float, float* %5, i64 %358
  %360 = bitcast float* %359 to <8 x float>*
  %361 = load <8 x float>, <8 x float>* %360, align 1, !tbaa !12
  %362 = add nuw nsw i64 %281, 48
  %363 = getelementptr inbounds float, float* %5, i64 %362
  %364 = bitcast float* %363 to <8 x float>*
  %365 = load <8 x float>, <8 x float>* %364, align 1, !tbaa !12
  %366 = add nuw nsw i64 %281, 56
  %367 = getelementptr inbounds float, float* %5, i64 %366
  %368 = bitcast float* %367 to <8 x float>*
  %369 = load <8 x float>, <8 x float>* %368, align 1, !tbaa !12
  %370 = add nuw nsw i64 %281, 64
  %371 = getelementptr inbounds float, float* %5, i64 %370
  %372 = bitcast float* %371 to <8 x float>*
  %373 = load <8 x float>, <8 x float>* %372, align 1, !tbaa !12
  %374 = add nuw nsw i64 %281, 72
  %375 = getelementptr inbounds float, float* %5, i64 %374
  %376 = bitcast float* %375 to <8 x float>*
  %377 = load <8 x float>, <8 x float>* %376, align 1, !tbaa !12
  %378 = add nuw nsw i64 %281, 80
  %379 = getelementptr inbounds float, float* %5, i64 %378
  %380 = bitcast float* %379 to <8 x float>*
  %381 = load <8 x float>, <8 x float>* %380, align 1, !tbaa !12
  %382 = add nuw nsw i64 %281, 88
  %383 = getelementptr inbounds float, float* %5, i64 %382
  %384 = bitcast float* %383 to <8 x float>*
  %385 = load <8 x float>, <8 x float>* %384, align 1, !tbaa !12
  %386 = add nuw nsw i64 %281, 96
  %387 = getelementptr inbounds float, float* %5, i64 %386
  %388 = bitcast float* %387 to <8 x float>*
  %389 = load <8 x float>, <8 x float>* %388, align 1, !tbaa !12
  %390 = add nuw nsw i64 %281, 104
  %391 = getelementptr inbounds float, float* %5, i64 %390
  %392 = bitcast float* %391 to <8 x float>*
  %393 = load <8 x float>, <8 x float>* %392, align 1, !tbaa !12
  %394 = add nsw i64 %281, %71
  %395 = getelementptr inbounds float, float* %3, i64 %394
  %396 = bitcast float* %395 to <8 x float>*
  %397 = load <8 x float>, <8 x float>* %396, align 1, !tbaa !12
  %398 = add nsw i64 %394, 8
  %399 = getelementptr inbounds float, float* %3, i64 %398
  %400 = bitcast float* %399 to <8 x float>*
  %401 = load <8 x float>, <8 x float>* %400, align 1, !tbaa !12
  %402 = add nsw i64 %394, 16
  %403 = getelementptr inbounds float, float* %3, i64 %402
  %404 = bitcast float* %403 to <8 x float>*
  %405 = load <8 x float>, <8 x float>* %404, align 1, !tbaa !12
  %406 = add nsw i64 %394, 24
  %407 = getelementptr inbounds float, float* %3, i64 %406
  %408 = bitcast float* %407 to <8 x float>*
  %409 = load <8 x float>, <8 x float>* %408, align 1, !tbaa !12
  %410 = add nsw i64 %394, 32
  %411 = getelementptr inbounds float, float* %3, i64 %410
  %412 = bitcast float* %411 to <8 x float>*
  %413 = load <8 x float>, <8 x float>* %412, align 1, !tbaa !12
  %414 = add nsw i64 %394, 40
  %415 = getelementptr inbounds float, float* %3, i64 %414
  %416 = bitcast float* %415 to <8 x float>*
  %417 = load <8 x float>, <8 x float>* %416, align 1, !tbaa !12
  %418 = add nsw i64 %394, 48
  %419 = getelementptr inbounds float, float* %3, i64 %418
  %420 = bitcast float* %419 to <8 x float>*
  %421 = load <8 x float>, <8 x float>* %420, align 1, !tbaa !12
  %422 = add nsw i64 %394, 56
  %423 = getelementptr inbounds float, float* %3, i64 %422
  %424 = bitcast float* %423 to <8 x float>*
  %425 = load <8 x float>, <8 x float>* %424, align 1, !tbaa !12
  %426 = add nsw i64 %394, 64
  %427 = getelementptr inbounds float, float* %3, i64 %426
  %428 = bitcast float* %427 to <8 x float>*
  %429 = load <8 x float>, <8 x float>* %428, align 1, !tbaa !12
  %430 = add nsw i64 %394, 72
  %431 = getelementptr inbounds float, float* %3, i64 %430
  %432 = bitcast float* %431 to <8 x float>*
  %433 = load <8 x float>, <8 x float>* %432, align 1, !tbaa !12
  %434 = add nsw i64 %394, 80
  %435 = getelementptr inbounds float, float* %3, i64 %434
  %436 = bitcast float* %435 to <8 x float>*
  %437 = load <8 x float>, <8 x float>* %436, align 1, !tbaa !12
  %438 = add nsw i64 %394, 88
  %439 = getelementptr inbounds float, float* %3, i64 %438
  %440 = bitcast float* %439 to <8 x float>*
  %441 = load <8 x float>, <8 x float>* %440, align 1, !tbaa !12
  %442 = add nsw i64 %394, 96
  %443 = getelementptr inbounds float, float* %3, i64 %442
  %444 = bitcast float* %443 to <8 x float>*
  %445 = load <8 x float>, <8 x float>* %444, align 1, !tbaa !12
  %446 = add nsw i64 %394, 104
  %447 = getelementptr inbounds float, float* %3, i64 %446
  %448 = bitcast float* %447 to <8 x float>*
  %449 = load <8 x float>, <8 x float>* %448, align 1, !tbaa !12
  %450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %397, <8 x float> %30, <8 x float> %341) #10
  %451 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %401, <8 x float> %30, <8 x float> %345) #10
  %452 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %405, <8 x float> %30, <8 x float> %349) #10
  %453 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %409, <8 x float> %30, <8 x float> %353) #10
  %454 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %413, <8 x float> %30, <8 x float> %357) #10
  %455 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %417, <8 x float> %30, <8 x float> %361) #10
  %456 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %421, <8 x float> %30, <8 x float> %365) #10
  %457 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %425, <8 x float> %30, <8 x float> %369) #10
  %458 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %429, <8 x float> %30, <8 x float> %373) #10
  %459 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %433, <8 x float> %30, <8 x float> %377) #10
  %460 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %437, <8 x float> %30, <8 x float> %381) #10
  %461 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %441, <8 x float> %30, <8 x float> %385) #10
  %462 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %445, <8 x float> %30, <8 x float> %389) #10
  %463 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %449, <8 x float> %30, <8 x float> %393) #10
  store <8 x float> %450, <8 x float>* %340, align 1, !tbaa !12
  store <8 x float> %451, <8 x float>* %344, align 1, !tbaa !12
  store <8 x float> %452, <8 x float>* %348, align 1, !tbaa !12
  store <8 x float> %453, <8 x float>* %352, align 1, !tbaa !12
  store <8 x float> %454, <8 x float>* %356, align 1, !tbaa !12
  store <8 x float> %455, <8 x float>* %360, align 1, !tbaa !12
  store <8 x float> %456, <8 x float>* %364, align 1, !tbaa !12
  store <8 x float> %457, <8 x float>* %368, align 1, !tbaa !12
  store <8 x float> %458, <8 x float>* %372, align 1, !tbaa !12
  store <8 x float> %459, <8 x float>* %376, align 1, !tbaa !12
  store <8 x float> %460, <8 x float>* %380, align 1, !tbaa !12
  store <8 x float> %461, <8 x float>* %384, align 1, !tbaa !12
  store <8 x float> %462, <8 x float>* %388, align 1, !tbaa !12
  store <8 x float> %463, <8 x float>* %392, align 1, !tbaa !12
  %464 = add nuw nsw i64 %281, 112
  %465 = icmp ult i64 %464, %72
  br i1 %465, label %280, label %274

466:                                              ; preds = %473, %67, %274
  %467 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %468 = icmp sgt i32 %467, 0
  br i1 %468, label %469, label %1458

469:                                              ; preds = %466
  %470 = zext i32 %467 to i64
  %471 = trunc i64 %36 to i32
  %472 = mul nsw i32 %467, %471
  br label %665

473:                                              ; preds = %275, %473
  %474 = phi i64 [ 0, %275 ], [ %657, %473 ]
  %475 = getelementptr inbounds float, float* %5, i64 %474
  %476 = getelementptr inbounds float, float* %475, i64 8
  %477 = bitcast float* %476 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %477, i32 0, i32 1, i32 1)
  %478 = getelementptr inbounds float, float* %3, i64 %474
  %479 = getelementptr inbounds float, float* %478, i64 8
  %480 = bitcast float* %479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %480, i32 0, i32 1, i32 1)
  %481 = getelementptr inbounds float, float* %475, i64 16
  %482 = bitcast float* %481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %482, i32 0, i32 1, i32 1)
  %483 = getelementptr inbounds float, float* %478, i64 16
  %484 = bitcast float* %483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %484, i32 0, i32 1, i32 1)
  %485 = getelementptr inbounds float, float* %475, i64 24
  %486 = bitcast float* %485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %486, i32 0, i32 1, i32 1)
  %487 = getelementptr inbounds float, float* %478, i64 24
  %488 = bitcast float* %487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %488, i32 0, i32 1, i32 1)
  %489 = getelementptr inbounds float, float* %475, i64 32
  %490 = bitcast float* %489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %490, i32 0, i32 1, i32 1)
  %491 = getelementptr inbounds float, float* %478, i64 32
  %492 = bitcast float* %491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %492, i32 0, i32 1, i32 1)
  %493 = getelementptr inbounds float, float* %475, i64 40
  %494 = bitcast float* %493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %494, i32 0, i32 1, i32 1)
  %495 = getelementptr inbounds float, float* %478, i64 40
  %496 = bitcast float* %495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %496, i32 0, i32 1, i32 1)
  %497 = getelementptr inbounds float, float* %475, i64 48
  %498 = bitcast float* %497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %498, i32 0, i32 1, i32 1)
  %499 = getelementptr inbounds float, float* %478, i64 48
  %500 = bitcast float* %499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %500, i32 0, i32 1, i32 1)
  %501 = getelementptr inbounds float, float* %475, i64 56
  %502 = bitcast float* %501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %502, i32 0, i32 1, i32 1)
  %503 = getelementptr inbounds float, float* %478, i64 56
  %504 = bitcast float* %503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %504, i32 0, i32 1, i32 1)
  %505 = getelementptr inbounds float, float* %475, i64 64
  %506 = bitcast float* %505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %506, i32 0, i32 1, i32 1)
  %507 = getelementptr inbounds float, float* %478, i64 64
  %508 = bitcast float* %507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %508, i32 0, i32 1, i32 1)
  %509 = getelementptr inbounds float, float* %475, i64 72
  %510 = bitcast float* %509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %510, i32 0, i32 1, i32 1)
  %511 = getelementptr inbounds float, float* %478, i64 72
  %512 = bitcast float* %511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %512, i32 0, i32 1, i32 1)
  %513 = getelementptr inbounds float, float* %475, i64 80
  %514 = bitcast float* %513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %514, i32 0, i32 1, i32 1)
  %515 = getelementptr inbounds float, float* %478, i64 80
  %516 = bitcast float* %515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %516, i32 0, i32 1, i32 1)
  %517 = getelementptr inbounds float, float* %475, i64 88
  %518 = bitcast float* %517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %518, i32 0, i32 1, i32 1)
  %519 = getelementptr inbounds float, float* %478, i64 88
  %520 = bitcast float* %519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %520, i32 0, i32 1, i32 1)
  %521 = getelementptr inbounds float, float* %475, i64 96
  %522 = bitcast float* %521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %522, i32 0, i32 1, i32 1)
  %523 = getelementptr inbounds float, float* %478, i64 96
  %524 = bitcast float* %523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %524, i32 0, i32 1, i32 1)
  %525 = getelementptr inbounds float, float* %475, i64 104
  %526 = bitcast float* %525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %526, i32 0, i32 1, i32 1)
  %527 = getelementptr inbounds float, float* %478, i64 104
  %528 = bitcast float* %527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %528, i32 0, i32 1, i32 1)
  %529 = getelementptr inbounds float, float* %475, i64 112
  %530 = bitcast float* %529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %530, i32 0, i32 1, i32 1)
  %531 = getelementptr inbounds float, float* %478, i64 112
  %532 = bitcast float* %531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %532, i32 0, i32 1, i32 1)
  %533 = bitcast float* %475 to <8 x float>*
  %534 = load <8 x float>, <8 x float>* %533, align 1, !tbaa !12
  %535 = or i64 %474, 8
  %536 = getelementptr inbounds float, float* %5, i64 %535
  %537 = bitcast float* %536 to <8 x float>*
  %538 = load <8 x float>, <8 x float>* %537, align 1, !tbaa !12
  %539 = add nuw nsw i64 %474, 16
  %540 = getelementptr inbounds float, float* %5, i64 %539
  %541 = bitcast float* %540 to <8 x float>*
  %542 = load <8 x float>, <8 x float>* %541, align 1, !tbaa !12
  %543 = add nuw nsw i64 %474, 24
  %544 = getelementptr inbounds float, float* %5, i64 %543
  %545 = bitcast float* %544 to <8 x float>*
  %546 = load <8 x float>, <8 x float>* %545, align 1, !tbaa !12
  %547 = add nuw nsw i64 %474, 32
  %548 = getelementptr inbounds float, float* %5, i64 %547
  %549 = bitcast float* %548 to <8 x float>*
  %550 = load <8 x float>, <8 x float>* %549, align 1, !tbaa !12
  %551 = add nuw nsw i64 %474, 40
  %552 = getelementptr inbounds float, float* %5, i64 %551
  %553 = bitcast float* %552 to <8 x float>*
  %554 = load <8 x float>, <8 x float>* %553, align 1, !tbaa !12
  %555 = add nuw nsw i64 %474, 48
  %556 = getelementptr inbounds float, float* %5, i64 %555
  %557 = bitcast float* %556 to <8 x float>*
  %558 = load <8 x float>, <8 x float>* %557, align 1, !tbaa !12
  %559 = add nuw nsw i64 %474, 56
  %560 = getelementptr inbounds float, float* %5, i64 %559
  %561 = bitcast float* %560 to <8 x float>*
  %562 = load <8 x float>, <8 x float>* %561, align 1, !tbaa !12
  %563 = add nuw nsw i64 %474, 64
  %564 = getelementptr inbounds float, float* %5, i64 %563
  %565 = bitcast float* %564 to <8 x float>*
  %566 = load <8 x float>, <8 x float>* %565, align 1, !tbaa !12
  %567 = add nuw nsw i64 %474, 72
  %568 = getelementptr inbounds float, float* %5, i64 %567
  %569 = bitcast float* %568 to <8 x float>*
  %570 = load <8 x float>, <8 x float>* %569, align 1, !tbaa !12
  %571 = add nuw nsw i64 %474, 80
  %572 = getelementptr inbounds float, float* %5, i64 %571
  %573 = bitcast float* %572 to <8 x float>*
  %574 = load <8 x float>, <8 x float>* %573, align 1, !tbaa !12
  %575 = add nuw nsw i64 %474, 88
  %576 = getelementptr inbounds float, float* %5, i64 %575
  %577 = bitcast float* %576 to <8 x float>*
  %578 = load <8 x float>, <8 x float>* %577, align 1, !tbaa !12
  %579 = add nuw nsw i64 %474, 96
  %580 = getelementptr inbounds float, float* %5, i64 %579
  %581 = bitcast float* %580 to <8 x float>*
  %582 = load <8 x float>, <8 x float>* %581, align 1, !tbaa !12
  %583 = add nuw nsw i64 %474, 104
  %584 = getelementptr inbounds float, float* %5, i64 %583
  %585 = bitcast float* %584 to <8 x float>*
  %586 = load <8 x float>, <8 x float>* %585, align 1, !tbaa !12
  %587 = add nsw i64 %474, %278
  %588 = getelementptr inbounds float, float* %3, i64 %587
  %589 = bitcast float* %588 to <8 x float>*
  %590 = load <8 x float>, <8 x float>* %589, align 1, !tbaa !12
  %591 = add nsw i64 %587, 8
  %592 = getelementptr inbounds float, float* %3, i64 %591
  %593 = bitcast float* %592 to <8 x float>*
  %594 = load <8 x float>, <8 x float>* %593, align 1, !tbaa !12
  %595 = add nsw i64 %587, 16
  %596 = getelementptr inbounds float, float* %3, i64 %595
  %597 = bitcast float* %596 to <8 x float>*
  %598 = load <8 x float>, <8 x float>* %597, align 1, !tbaa !12
  %599 = add nsw i64 %587, 24
  %600 = getelementptr inbounds float, float* %3, i64 %599
  %601 = bitcast float* %600 to <8 x float>*
  %602 = load <8 x float>, <8 x float>* %601, align 1, !tbaa !12
  %603 = add nsw i64 %587, 32
  %604 = getelementptr inbounds float, float* %3, i64 %603
  %605 = bitcast float* %604 to <8 x float>*
  %606 = load <8 x float>, <8 x float>* %605, align 1, !tbaa !12
  %607 = add nsw i64 %587, 40
  %608 = getelementptr inbounds float, float* %3, i64 %607
  %609 = bitcast float* %608 to <8 x float>*
  %610 = load <8 x float>, <8 x float>* %609, align 1, !tbaa !12
  %611 = add nsw i64 %587, 48
  %612 = getelementptr inbounds float, float* %3, i64 %611
  %613 = bitcast float* %612 to <8 x float>*
  %614 = load <8 x float>, <8 x float>* %613, align 1, !tbaa !12
  %615 = add nsw i64 %587, 56
  %616 = getelementptr inbounds float, float* %3, i64 %615
  %617 = bitcast float* %616 to <8 x float>*
  %618 = load <8 x float>, <8 x float>* %617, align 1, !tbaa !12
  %619 = add nsw i64 %587, 64
  %620 = getelementptr inbounds float, float* %3, i64 %619
  %621 = bitcast float* %620 to <8 x float>*
  %622 = load <8 x float>, <8 x float>* %621, align 1, !tbaa !12
  %623 = add nsw i64 %587, 72
  %624 = getelementptr inbounds float, float* %3, i64 %623
  %625 = bitcast float* %624 to <8 x float>*
  %626 = load <8 x float>, <8 x float>* %625, align 1, !tbaa !12
  %627 = add nsw i64 %587, 80
  %628 = getelementptr inbounds float, float* %3, i64 %627
  %629 = bitcast float* %628 to <8 x float>*
  %630 = load <8 x float>, <8 x float>* %629, align 1, !tbaa !12
  %631 = add nsw i64 %587, 88
  %632 = getelementptr inbounds float, float* %3, i64 %631
  %633 = bitcast float* %632 to <8 x float>*
  %634 = load <8 x float>, <8 x float>* %633, align 1, !tbaa !12
  %635 = add nsw i64 %587, 96
  %636 = getelementptr inbounds float, float* %3, i64 %635
  %637 = bitcast float* %636 to <8 x float>*
  %638 = load <8 x float>, <8 x float>* %637, align 1, !tbaa !12
  %639 = add nsw i64 %587, 104
  %640 = getelementptr inbounds float, float* %3, i64 %639
  %641 = bitcast float* %640 to <8 x float>*
  %642 = load <8 x float>, <8 x float>* %641, align 1, !tbaa !12
  %643 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %590, <8 x float> %35, <8 x float> %534) #10
  %644 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %594, <8 x float> %35, <8 x float> %538) #10
  %645 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %598, <8 x float> %35, <8 x float> %542) #10
  %646 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %602, <8 x float> %35, <8 x float> %546) #10
  %647 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %606, <8 x float> %35, <8 x float> %550) #10
  %648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %610, <8 x float> %35, <8 x float> %554) #10
  %649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %614, <8 x float> %35, <8 x float> %558) #10
  %650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %618, <8 x float> %35, <8 x float> %562) #10
  %651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %622, <8 x float> %35, <8 x float> %566) #10
  %652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %626, <8 x float> %35, <8 x float> %570) #10
  %653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %630, <8 x float> %35, <8 x float> %574) #10
  %654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %634, <8 x float> %35, <8 x float> %578) #10
  %655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %638, <8 x float> %35, <8 x float> %582) #10
  %656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %642, <8 x float> %35, <8 x float> %586) #10
  store <8 x float> %643, <8 x float>* %533, align 1, !tbaa !12
  store <8 x float> %644, <8 x float>* %537, align 1, !tbaa !12
  store <8 x float> %645, <8 x float>* %541, align 1, !tbaa !12
  store <8 x float> %646, <8 x float>* %545, align 1, !tbaa !12
  store <8 x float> %647, <8 x float>* %549, align 1, !tbaa !12
  store <8 x float> %648, <8 x float>* %553, align 1, !tbaa !12
  store <8 x float> %649, <8 x float>* %557, align 1, !tbaa !12
  store <8 x float> %650, <8 x float>* %561, align 1, !tbaa !12
  store <8 x float> %651, <8 x float>* %565, align 1, !tbaa !12
  store <8 x float> %652, <8 x float>* %569, align 1, !tbaa !12
  store <8 x float> %653, <8 x float>* %573, align 1, !tbaa !12
  store <8 x float> %654, <8 x float>* %577, align 1, !tbaa !12
  store <8 x float> %655, <8 x float>* %581, align 1, !tbaa !12
  store <8 x float> %656, <8 x float>* %585, align 1, !tbaa !12
  %657 = add nuw nsw i64 %474, 112
  %658 = icmp ult i64 %657, %279
  br i1 %658, label %473, label %466

659:                                              ; preds = %665
  br i1 %468, label %660, label %1058

660:                                              ; preds = %659
  %661 = trunc i64 %41 to i32
  %662 = mul nsw i32 %467, %661
  %663 = sext i32 %662 to i64
  %664 = zext i32 %467 to i64
  br label %872

665:                                              ; preds = %469, %665
  %666 = phi i64 [ 0, %469 ], [ %864, %665 ]
  %667 = getelementptr inbounds float, float* %5, i64 %666
  %668 = getelementptr inbounds float, float* %667, i64 8
  %669 = bitcast float* %668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %669, i32 0, i32 1, i32 1)
  %670 = getelementptr inbounds float, float* %3, i64 %666
  %671 = getelementptr inbounds float, float* %670, i64 8
  %672 = bitcast float* %671 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %672, i32 0, i32 1, i32 1)
  %673 = getelementptr inbounds float, float* %667, i64 16
  %674 = bitcast float* %673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %674, i32 0, i32 1, i32 1)
  %675 = getelementptr inbounds float, float* %670, i64 16
  %676 = bitcast float* %675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %676, i32 0, i32 1, i32 1)
  %677 = getelementptr inbounds float, float* %667, i64 24
  %678 = bitcast float* %677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %678, i32 0, i32 1, i32 1)
  %679 = getelementptr inbounds float, float* %670, i64 24
  %680 = bitcast float* %679 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %680, i32 0, i32 1, i32 1)
  %681 = getelementptr inbounds float, float* %667, i64 32
  %682 = bitcast float* %681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %682, i32 0, i32 1, i32 1)
  %683 = getelementptr inbounds float, float* %670, i64 32
  %684 = bitcast float* %683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %684, i32 0, i32 1, i32 1)
  %685 = getelementptr inbounds float, float* %667, i64 40
  %686 = bitcast float* %685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %686, i32 0, i32 1, i32 1)
  %687 = getelementptr inbounds float, float* %670, i64 40
  %688 = bitcast float* %687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %688, i32 0, i32 1, i32 1)
  %689 = getelementptr inbounds float, float* %667, i64 48
  %690 = bitcast float* %689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %690, i32 0, i32 1, i32 1)
  %691 = getelementptr inbounds float, float* %670, i64 48
  %692 = bitcast float* %691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %692, i32 0, i32 1, i32 1)
  %693 = getelementptr inbounds float, float* %667, i64 56
  %694 = bitcast float* %693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %694, i32 0, i32 1, i32 1)
  %695 = getelementptr inbounds float, float* %670, i64 56
  %696 = bitcast float* %695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %696, i32 0, i32 1, i32 1)
  %697 = getelementptr inbounds float, float* %667, i64 64
  %698 = bitcast float* %697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %698, i32 0, i32 1, i32 1)
  %699 = getelementptr inbounds float, float* %670, i64 64
  %700 = bitcast float* %699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %700, i32 0, i32 1, i32 1)
  %701 = getelementptr inbounds float, float* %667, i64 72
  %702 = bitcast float* %701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %702, i32 0, i32 1, i32 1)
  %703 = getelementptr inbounds float, float* %670, i64 72
  %704 = bitcast float* %703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %704, i32 0, i32 1, i32 1)
  %705 = getelementptr inbounds float, float* %667, i64 80
  %706 = bitcast float* %705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %706, i32 0, i32 1, i32 1)
  %707 = getelementptr inbounds float, float* %670, i64 80
  %708 = bitcast float* %707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %708, i32 0, i32 1, i32 1)
  %709 = getelementptr inbounds float, float* %667, i64 88
  %710 = bitcast float* %709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %710, i32 0, i32 1, i32 1)
  %711 = getelementptr inbounds float, float* %670, i64 88
  %712 = bitcast float* %711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %712, i32 0, i32 1, i32 1)
  %713 = getelementptr inbounds float, float* %667, i64 96
  %714 = bitcast float* %713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %714, i32 0, i32 1, i32 1)
  %715 = getelementptr inbounds float, float* %670, i64 96
  %716 = bitcast float* %715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %716, i32 0, i32 1, i32 1)
  %717 = getelementptr inbounds float, float* %667, i64 104
  %718 = bitcast float* %717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %718, i32 0, i32 1, i32 1)
  %719 = getelementptr inbounds float, float* %670, i64 104
  %720 = bitcast float* %719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %720, i32 0, i32 1, i32 1)
  %721 = getelementptr inbounds float, float* %667, i64 112
  %722 = bitcast float* %721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %722, i32 0, i32 1, i32 1)
  %723 = getelementptr inbounds float, float* %670, i64 112
  %724 = bitcast float* %723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %724, i32 0, i32 1, i32 1)
  %725 = bitcast float* %667 to <8 x float>*
  %726 = load <8 x float>, <8 x float>* %725, align 1, !tbaa !12
  %727 = or i64 %666, 8
  %728 = getelementptr inbounds float, float* %5, i64 %727
  %729 = bitcast float* %728 to <8 x float>*
  %730 = load <8 x float>, <8 x float>* %729, align 1, !tbaa !12
  %731 = add nuw nsw i64 %666, 16
  %732 = getelementptr inbounds float, float* %5, i64 %731
  %733 = bitcast float* %732 to <8 x float>*
  %734 = load <8 x float>, <8 x float>* %733, align 1, !tbaa !12
  %735 = add nuw nsw i64 %666, 24
  %736 = getelementptr inbounds float, float* %5, i64 %735
  %737 = bitcast float* %736 to <8 x float>*
  %738 = load <8 x float>, <8 x float>* %737, align 1, !tbaa !12
  %739 = add nuw nsw i64 %666, 32
  %740 = getelementptr inbounds float, float* %5, i64 %739
  %741 = bitcast float* %740 to <8 x float>*
  %742 = load <8 x float>, <8 x float>* %741, align 1, !tbaa !12
  %743 = add nuw nsw i64 %666, 40
  %744 = getelementptr inbounds float, float* %5, i64 %743
  %745 = bitcast float* %744 to <8 x float>*
  %746 = load <8 x float>, <8 x float>* %745, align 1, !tbaa !12
  %747 = add nuw nsw i64 %666, 48
  %748 = getelementptr inbounds float, float* %5, i64 %747
  %749 = bitcast float* %748 to <8 x float>*
  %750 = load <8 x float>, <8 x float>* %749, align 1, !tbaa !12
  %751 = add nuw nsw i64 %666, 56
  %752 = getelementptr inbounds float, float* %5, i64 %751
  %753 = bitcast float* %752 to <8 x float>*
  %754 = load <8 x float>, <8 x float>* %753, align 1, !tbaa !12
  %755 = add nuw nsw i64 %666, 64
  %756 = getelementptr inbounds float, float* %5, i64 %755
  %757 = bitcast float* %756 to <8 x float>*
  %758 = load <8 x float>, <8 x float>* %757, align 1, !tbaa !12
  %759 = add nuw nsw i64 %666, 72
  %760 = getelementptr inbounds float, float* %5, i64 %759
  %761 = bitcast float* %760 to <8 x float>*
  %762 = load <8 x float>, <8 x float>* %761, align 1, !tbaa !12
  %763 = add nuw nsw i64 %666, 80
  %764 = getelementptr inbounds float, float* %5, i64 %763
  %765 = bitcast float* %764 to <8 x float>*
  %766 = load <8 x float>, <8 x float>* %765, align 1, !tbaa !12
  %767 = add nuw nsw i64 %666, 88
  %768 = getelementptr inbounds float, float* %5, i64 %767
  %769 = bitcast float* %768 to <8 x float>*
  %770 = load <8 x float>, <8 x float>* %769, align 1, !tbaa !12
  %771 = add nuw nsw i64 %666, 96
  %772 = getelementptr inbounds float, float* %5, i64 %771
  %773 = bitcast float* %772 to <8 x float>*
  %774 = load <8 x float>, <8 x float>* %773, align 1, !tbaa !12
  %775 = add nuw nsw i64 %666, 104
  %776 = getelementptr inbounds float, float* %5, i64 %775
  %777 = bitcast float* %776 to <8 x float>*
  %778 = load <8 x float>, <8 x float>* %777, align 1, !tbaa !12
  %779 = trunc i64 %666 to i32
  %780 = add nsw i32 %472, %779
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds float, float* %3, i64 %781
  %783 = bitcast float* %782 to <8 x float>*
  %784 = load <8 x float>, <8 x float>* %783, align 1, !tbaa !12
  %785 = add nsw i32 %780, 8
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds float, float* %3, i64 %786
  %788 = bitcast float* %787 to <8 x float>*
  %789 = load <8 x float>, <8 x float>* %788, align 1, !tbaa !12
  %790 = add nsw i32 %780, 16
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds float, float* %3, i64 %791
  %793 = bitcast float* %792 to <8 x float>*
  %794 = load <8 x float>, <8 x float>* %793, align 1, !tbaa !12
  %795 = add nsw i32 %780, 24
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds float, float* %3, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %799 = load <8 x float>, <8 x float>* %798, align 1, !tbaa !12
  %800 = add nsw i32 %780, 32
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds float, float* %3, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nsw i32 %780, 40
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds float, float* %3, i64 %806
  %808 = bitcast float* %807 to <8 x float>*
  %809 = load <8 x float>, <8 x float>* %808, align 1, !tbaa !12
  %810 = add nsw i32 %780, 48
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds float, float* %3, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %814 = load <8 x float>, <8 x float>* %813, align 1, !tbaa !12
  %815 = add nsw i32 %780, 56
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds float, float* %3, i64 %816
  %818 = bitcast float* %817 to <8 x float>*
  %819 = load <8 x float>, <8 x float>* %818, align 1, !tbaa !12
  %820 = add nsw i32 %780, 64
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float, float* %3, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %824 = load <8 x float>, <8 x float>* %823, align 1, !tbaa !12
  %825 = add nsw i32 %780, 72
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds float, float* %3, i64 %826
  %828 = bitcast float* %827 to <8 x float>*
  %829 = load <8 x float>, <8 x float>* %828, align 1, !tbaa !12
  %830 = add nsw i32 %780, 80
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds float, float* %3, i64 %831
  %833 = bitcast float* %832 to <8 x float>*
  %834 = load <8 x float>, <8 x float>* %833, align 1, !tbaa !12
  %835 = add nsw i32 %780, 88
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float, float* %3, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nsw i32 %780, 96
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds float, float* %3, i64 %841
  %843 = bitcast float* %842 to <8 x float>*
  %844 = load <8 x float>, <8 x float>* %843, align 1, !tbaa !12
  %845 = add nsw i32 %780, 104
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds float, float* %3, i64 %846
  %848 = bitcast float* %847 to <8 x float>*
  %849 = load <8 x float>, <8 x float>* %848, align 1, !tbaa !12
  %850 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %784, <8 x float> %40, <8 x float> %726) #10
  %851 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %789, <8 x float> %40, <8 x float> %730) #10
  %852 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %794, <8 x float> %40, <8 x float> %734) #10
  %853 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %799, <8 x float> %40, <8 x float> %738) #10
  %854 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %804, <8 x float> %40, <8 x float> %742) #10
  %855 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %809, <8 x float> %40, <8 x float> %746) #10
  %856 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %814, <8 x float> %40, <8 x float> %750) #10
  %857 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %819, <8 x float> %40, <8 x float> %754) #10
  %858 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %824, <8 x float> %40, <8 x float> %758) #10
  %859 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %829, <8 x float> %40, <8 x float> %762) #10
  %860 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %834, <8 x float> %40, <8 x float> %766) #10
  %861 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %839, <8 x float> %40, <8 x float> %770) #10
  %862 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %844, <8 x float> %40, <8 x float> %774) #10
  %863 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %849, <8 x float> %40, <8 x float> %778) #10
  store <8 x float> %850, <8 x float>* %725, align 1, !tbaa !12
  store <8 x float> %851, <8 x float>* %729, align 1, !tbaa !12
  store <8 x float> %852, <8 x float>* %733, align 1, !tbaa !12
  store <8 x float> %853, <8 x float>* %737, align 1, !tbaa !12
  store <8 x float> %854, <8 x float>* %741, align 1, !tbaa !12
  store <8 x float> %855, <8 x float>* %745, align 1, !tbaa !12
  store <8 x float> %856, <8 x float>* %749, align 1, !tbaa !12
  store <8 x float> %857, <8 x float>* %753, align 1, !tbaa !12
  store <8 x float> %858, <8 x float>* %757, align 1, !tbaa !12
  store <8 x float> %859, <8 x float>* %761, align 1, !tbaa !12
  store <8 x float> %860, <8 x float>* %765, align 1, !tbaa !12
  store <8 x float> %861, <8 x float>* %769, align 1, !tbaa !12
  store <8 x float> %862, <8 x float>* %773, align 1, !tbaa !12
  store <8 x float> %863, <8 x float>* %777, align 1, !tbaa !12
  %864 = add nuw nsw i64 %666, 112
  %865 = icmp ult i64 %864, %470
  br i1 %865, label %665, label %659

866:                                              ; preds = %872
  br i1 %468, label %867, label %1058

867:                                              ; preds = %866
  %868 = trunc i64 %46 to i32
  %869 = mul nsw i32 %467, %868
  %870 = sext i32 %869 to i64
  %871 = zext i32 %467 to i64
  br label %1065

872:                                              ; preds = %660, %872
  %873 = phi i64 [ 0, %660 ], [ %1056, %872 ]
  %874 = getelementptr inbounds float, float* %5, i64 %873
  %875 = getelementptr inbounds float, float* %874, i64 8
  %876 = bitcast float* %875 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %876, i32 0, i32 1, i32 1)
  %877 = getelementptr inbounds float, float* %3, i64 %873
  %878 = getelementptr inbounds float, float* %877, i64 8
  %879 = bitcast float* %878 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %879, i32 0, i32 1, i32 1)
  %880 = getelementptr inbounds float, float* %874, i64 16
  %881 = bitcast float* %880 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %881, i32 0, i32 1, i32 1)
  %882 = getelementptr inbounds float, float* %877, i64 16
  %883 = bitcast float* %882 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %883, i32 0, i32 1, i32 1)
  %884 = getelementptr inbounds float, float* %874, i64 24
  %885 = bitcast float* %884 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %885, i32 0, i32 1, i32 1)
  %886 = getelementptr inbounds float, float* %877, i64 24
  %887 = bitcast float* %886 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %887, i32 0, i32 1, i32 1)
  %888 = getelementptr inbounds float, float* %874, i64 32
  %889 = bitcast float* %888 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %889, i32 0, i32 1, i32 1)
  %890 = getelementptr inbounds float, float* %877, i64 32
  %891 = bitcast float* %890 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %891, i32 0, i32 1, i32 1)
  %892 = getelementptr inbounds float, float* %874, i64 40
  %893 = bitcast float* %892 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %893, i32 0, i32 1, i32 1)
  %894 = getelementptr inbounds float, float* %877, i64 40
  %895 = bitcast float* %894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %895, i32 0, i32 1, i32 1)
  %896 = getelementptr inbounds float, float* %874, i64 48
  %897 = bitcast float* %896 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %897, i32 0, i32 1, i32 1)
  %898 = getelementptr inbounds float, float* %877, i64 48
  %899 = bitcast float* %898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %899, i32 0, i32 1, i32 1)
  %900 = getelementptr inbounds float, float* %874, i64 56
  %901 = bitcast float* %900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %901, i32 0, i32 1, i32 1)
  %902 = getelementptr inbounds float, float* %877, i64 56
  %903 = bitcast float* %902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %903, i32 0, i32 1, i32 1)
  %904 = getelementptr inbounds float, float* %874, i64 64
  %905 = bitcast float* %904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %905, i32 0, i32 1, i32 1)
  %906 = getelementptr inbounds float, float* %877, i64 64
  %907 = bitcast float* %906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %907, i32 0, i32 1, i32 1)
  %908 = getelementptr inbounds float, float* %874, i64 72
  %909 = bitcast float* %908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %909, i32 0, i32 1, i32 1)
  %910 = getelementptr inbounds float, float* %877, i64 72
  %911 = bitcast float* %910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %911, i32 0, i32 1, i32 1)
  %912 = getelementptr inbounds float, float* %874, i64 80
  %913 = bitcast float* %912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %913, i32 0, i32 1, i32 1)
  %914 = getelementptr inbounds float, float* %877, i64 80
  %915 = bitcast float* %914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %915, i32 0, i32 1, i32 1)
  %916 = getelementptr inbounds float, float* %874, i64 88
  %917 = bitcast float* %916 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %917, i32 0, i32 1, i32 1)
  %918 = getelementptr inbounds float, float* %877, i64 88
  %919 = bitcast float* %918 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %919, i32 0, i32 1, i32 1)
  %920 = getelementptr inbounds float, float* %874, i64 96
  %921 = bitcast float* %920 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %921, i32 0, i32 1, i32 1)
  %922 = getelementptr inbounds float, float* %877, i64 96
  %923 = bitcast float* %922 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %923, i32 0, i32 1, i32 1)
  %924 = getelementptr inbounds float, float* %874, i64 104
  %925 = bitcast float* %924 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %925, i32 0, i32 1, i32 1)
  %926 = getelementptr inbounds float, float* %877, i64 104
  %927 = bitcast float* %926 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %927, i32 0, i32 1, i32 1)
  %928 = getelementptr inbounds float, float* %874, i64 112
  %929 = bitcast float* %928 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %929, i32 0, i32 1, i32 1)
  %930 = getelementptr inbounds float, float* %877, i64 112
  %931 = bitcast float* %930 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %931, i32 0, i32 1, i32 1)
  %932 = bitcast float* %874 to <8 x float>*
  %933 = load <8 x float>, <8 x float>* %932, align 1, !tbaa !12
  %934 = or i64 %873, 8
  %935 = getelementptr inbounds float, float* %5, i64 %934
  %936 = bitcast float* %935 to <8 x float>*
  %937 = load <8 x float>, <8 x float>* %936, align 1, !tbaa !12
  %938 = add nuw nsw i64 %873, 16
  %939 = getelementptr inbounds float, float* %5, i64 %938
  %940 = bitcast float* %939 to <8 x float>*
  %941 = load <8 x float>, <8 x float>* %940, align 1, !tbaa !12
  %942 = add nuw nsw i64 %873, 24
  %943 = getelementptr inbounds float, float* %5, i64 %942
  %944 = bitcast float* %943 to <8 x float>*
  %945 = load <8 x float>, <8 x float>* %944, align 1, !tbaa !12
  %946 = add nuw nsw i64 %873, 32
  %947 = getelementptr inbounds float, float* %5, i64 %946
  %948 = bitcast float* %947 to <8 x float>*
  %949 = load <8 x float>, <8 x float>* %948, align 1, !tbaa !12
  %950 = add nuw nsw i64 %873, 40
  %951 = getelementptr inbounds float, float* %5, i64 %950
  %952 = bitcast float* %951 to <8 x float>*
  %953 = load <8 x float>, <8 x float>* %952, align 1, !tbaa !12
  %954 = add nuw nsw i64 %873, 48
  %955 = getelementptr inbounds float, float* %5, i64 %954
  %956 = bitcast float* %955 to <8 x float>*
  %957 = load <8 x float>, <8 x float>* %956, align 1, !tbaa !12
  %958 = add nuw nsw i64 %873, 56
  %959 = getelementptr inbounds float, float* %5, i64 %958
  %960 = bitcast float* %959 to <8 x float>*
  %961 = load <8 x float>, <8 x float>* %960, align 1, !tbaa !12
  %962 = add nuw nsw i64 %873, 64
  %963 = getelementptr inbounds float, float* %5, i64 %962
  %964 = bitcast float* %963 to <8 x float>*
  %965 = load <8 x float>, <8 x float>* %964, align 1, !tbaa !12
  %966 = add nuw nsw i64 %873, 72
  %967 = getelementptr inbounds float, float* %5, i64 %966
  %968 = bitcast float* %967 to <8 x float>*
  %969 = load <8 x float>, <8 x float>* %968, align 1, !tbaa !12
  %970 = add nuw nsw i64 %873, 80
  %971 = getelementptr inbounds float, float* %5, i64 %970
  %972 = bitcast float* %971 to <8 x float>*
  %973 = load <8 x float>, <8 x float>* %972, align 1, !tbaa !12
  %974 = add nuw nsw i64 %873, 88
  %975 = getelementptr inbounds float, float* %5, i64 %974
  %976 = bitcast float* %975 to <8 x float>*
  %977 = load <8 x float>, <8 x float>* %976, align 1, !tbaa !12
  %978 = add nuw nsw i64 %873, 96
  %979 = getelementptr inbounds float, float* %5, i64 %978
  %980 = bitcast float* %979 to <8 x float>*
  %981 = load <8 x float>, <8 x float>* %980, align 1, !tbaa !12
  %982 = add nuw nsw i64 %873, 104
  %983 = getelementptr inbounds float, float* %5, i64 %982
  %984 = bitcast float* %983 to <8 x float>*
  %985 = load <8 x float>, <8 x float>* %984, align 1, !tbaa !12
  %986 = add nsw i64 %873, %663
  %987 = getelementptr inbounds float, float* %3, i64 %986
  %988 = bitcast float* %987 to <8 x float>*
  %989 = load <8 x float>, <8 x float>* %988, align 1, !tbaa !12
  %990 = add nsw i64 %986, 8
  %991 = getelementptr inbounds float, float* %3, i64 %990
  %992 = bitcast float* %991 to <8 x float>*
  %993 = load <8 x float>, <8 x float>* %992, align 1, !tbaa !12
  %994 = add nsw i64 %986, 16
  %995 = getelementptr inbounds float, float* %3, i64 %994
  %996 = bitcast float* %995 to <8 x float>*
  %997 = load <8 x float>, <8 x float>* %996, align 1, !tbaa !12
  %998 = add nsw i64 %986, 24
  %999 = getelementptr inbounds float, float* %3, i64 %998
  %1000 = bitcast float* %999 to <8 x float>*
  %1001 = load <8 x float>, <8 x float>* %1000, align 1, !tbaa !12
  %1002 = add nsw i64 %986, 32
  %1003 = getelementptr inbounds float, float* %3, i64 %1002
  %1004 = bitcast float* %1003 to <8 x float>*
  %1005 = load <8 x float>, <8 x float>* %1004, align 1, !tbaa !12
  %1006 = add nsw i64 %986, 40
  %1007 = getelementptr inbounds float, float* %3, i64 %1006
  %1008 = bitcast float* %1007 to <8 x float>*
  %1009 = load <8 x float>, <8 x float>* %1008, align 1, !tbaa !12
  %1010 = add nsw i64 %986, 48
  %1011 = getelementptr inbounds float, float* %3, i64 %1010
  %1012 = bitcast float* %1011 to <8 x float>*
  %1013 = load <8 x float>, <8 x float>* %1012, align 1, !tbaa !12
  %1014 = add nsw i64 %986, 56
  %1015 = getelementptr inbounds float, float* %3, i64 %1014
  %1016 = bitcast float* %1015 to <8 x float>*
  %1017 = load <8 x float>, <8 x float>* %1016, align 1, !tbaa !12
  %1018 = add nsw i64 %986, 64
  %1019 = getelementptr inbounds float, float* %3, i64 %1018
  %1020 = bitcast float* %1019 to <8 x float>*
  %1021 = load <8 x float>, <8 x float>* %1020, align 1, !tbaa !12
  %1022 = add nsw i64 %986, 72
  %1023 = getelementptr inbounds float, float* %3, i64 %1022
  %1024 = bitcast float* %1023 to <8 x float>*
  %1025 = load <8 x float>, <8 x float>* %1024, align 1, !tbaa !12
  %1026 = add nsw i64 %986, 80
  %1027 = getelementptr inbounds float, float* %3, i64 %1026
  %1028 = bitcast float* %1027 to <8 x float>*
  %1029 = load <8 x float>, <8 x float>* %1028, align 1, !tbaa !12
  %1030 = add nsw i64 %986, 88
  %1031 = getelementptr inbounds float, float* %3, i64 %1030
  %1032 = bitcast float* %1031 to <8 x float>*
  %1033 = load <8 x float>, <8 x float>* %1032, align 1, !tbaa !12
  %1034 = add nsw i64 %986, 96
  %1035 = getelementptr inbounds float, float* %3, i64 %1034
  %1036 = bitcast float* %1035 to <8 x float>*
  %1037 = load <8 x float>, <8 x float>* %1036, align 1, !tbaa !12
  %1038 = add nsw i64 %986, 104
  %1039 = getelementptr inbounds float, float* %3, i64 %1038
  %1040 = bitcast float* %1039 to <8 x float>*
  %1041 = load <8 x float>, <8 x float>* %1040, align 1, !tbaa !12
  %1042 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %989, <8 x float> %45, <8 x float> %933) #10
  %1043 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %993, <8 x float> %45, <8 x float> %937) #10
  %1044 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %997, <8 x float> %45, <8 x float> %941) #10
  %1045 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1001, <8 x float> %45, <8 x float> %945) #10
  %1046 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1005, <8 x float> %45, <8 x float> %949) #10
  %1047 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1009, <8 x float> %45, <8 x float> %953) #10
  %1048 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1013, <8 x float> %45, <8 x float> %957) #10
  %1049 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1017, <8 x float> %45, <8 x float> %961) #10
  %1050 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1021, <8 x float> %45, <8 x float> %965) #10
  %1051 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1025, <8 x float> %45, <8 x float> %969) #10
  %1052 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1029, <8 x float> %45, <8 x float> %973) #10
  %1053 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1033, <8 x float> %45, <8 x float> %977) #10
  %1054 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1037, <8 x float> %45, <8 x float> %981) #10
  %1055 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1041, <8 x float> %45, <8 x float> %985) #10
  store <8 x float> %1042, <8 x float>* %932, align 1, !tbaa !12
  store <8 x float> %1043, <8 x float>* %936, align 1, !tbaa !12
  store <8 x float> %1044, <8 x float>* %940, align 1, !tbaa !12
  store <8 x float> %1045, <8 x float>* %944, align 1, !tbaa !12
  store <8 x float> %1046, <8 x float>* %948, align 1, !tbaa !12
  store <8 x float> %1047, <8 x float>* %952, align 1, !tbaa !12
  store <8 x float> %1048, <8 x float>* %956, align 1, !tbaa !12
  store <8 x float> %1049, <8 x float>* %960, align 1, !tbaa !12
  store <8 x float> %1050, <8 x float>* %964, align 1, !tbaa !12
  store <8 x float> %1051, <8 x float>* %968, align 1, !tbaa !12
  store <8 x float> %1052, <8 x float>* %972, align 1, !tbaa !12
  store <8 x float> %1053, <8 x float>* %976, align 1, !tbaa !12
  store <8 x float> %1054, <8 x float>* %980, align 1, !tbaa !12
  store <8 x float> %1055, <8 x float>* %984, align 1, !tbaa !12
  %1056 = add nuw nsw i64 %873, 112
  %1057 = icmp ult i64 %1056, %664
  br i1 %1057, label %872, label %866

1058:                                             ; preds = %1065, %659, %866
  %1059 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1060 = icmp sgt i32 %1059, 0
  br i1 %1060, label %1061, label %1458

1061:                                             ; preds = %1058
  %1062 = zext i32 %1059 to i64
  %1063 = trunc i64 %51 to i32
  %1064 = mul nsw i32 %1059, %1063
  br label %1257

1065:                                             ; preds = %867, %1065
  %1066 = phi i64 [ 0, %867 ], [ %1249, %1065 ]
  %1067 = getelementptr inbounds float, float* %5, i64 %1066
  %1068 = getelementptr inbounds float, float* %1067, i64 8
  %1069 = bitcast float* %1068 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1069, i32 0, i32 1, i32 1)
  %1070 = getelementptr inbounds float, float* %3, i64 %1066
  %1071 = getelementptr inbounds float, float* %1070, i64 8
  %1072 = bitcast float* %1071 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1072, i32 0, i32 1, i32 1)
  %1073 = getelementptr inbounds float, float* %1067, i64 16
  %1074 = bitcast float* %1073 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1074, i32 0, i32 1, i32 1)
  %1075 = getelementptr inbounds float, float* %1070, i64 16
  %1076 = bitcast float* %1075 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1076, i32 0, i32 1, i32 1)
  %1077 = getelementptr inbounds float, float* %1067, i64 24
  %1078 = bitcast float* %1077 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1078, i32 0, i32 1, i32 1)
  %1079 = getelementptr inbounds float, float* %1070, i64 24
  %1080 = bitcast float* %1079 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1080, i32 0, i32 1, i32 1)
  %1081 = getelementptr inbounds float, float* %1067, i64 32
  %1082 = bitcast float* %1081 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1082, i32 0, i32 1, i32 1)
  %1083 = getelementptr inbounds float, float* %1070, i64 32
  %1084 = bitcast float* %1083 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1084, i32 0, i32 1, i32 1)
  %1085 = getelementptr inbounds float, float* %1067, i64 40
  %1086 = bitcast float* %1085 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1086, i32 0, i32 1, i32 1)
  %1087 = getelementptr inbounds float, float* %1070, i64 40
  %1088 = bitcast float* %1087 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1088, i32 0, i32 1, i32 1)
  %1089 = getelementptr inbounds float, float* %1067, i64 48
  %1090 = bitcast float* %1089 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1090, i32 0, i32 1, i32 1)
  %1091 = getelementptr inbounds float, float* %1070, i64 48
  %1092 = bitcast float* %1091 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1092, i32 0, i32 1, i32 1)
  %1093 = getelementptr inbounds float, float* %1067, i64 56
  %1094 = bitcast float* %1093 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1094, i32 0, i32 1, i32 1)
  %1095 = getelementptr inbounds float, float* %1070, i64 56
  %1096 = bitcast float* %1095 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1096, i32 0, i32 1, i32 1)
  %1097 = getelementptr inbounds float, float* %1067, i64 64
  %1098 = bitcast float* %1097 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1098, i32 0, i32 1, i32 1)
  %1099 = getelementptr inbounds float, float* %1070, i64 64
  %1100 = bitcast float* %1099 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1100, i32 0, i32 1, i32 1)
  %1101 = getelementptr inbounds float, float* %1067, i64 72
  %1102 = bitcast float* %1101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1102, i32 0, i32 1, i32 1)
  %1103 = getelementptr inbounds float, float* %1070, i64 72
  %1104 = bitcast float* %1103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1104, i32 0, i32 1, i32 1)
  %1105 = getelementptr inbounds float, float* %1067, i64 80
  %1106 = bitcast float* %1105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1106, i32 0, i32 1, i32 1)
  %1107 = getelementptr inbounds float, float* %1070, i64 80
  %1108 = bitcast float* %1107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1108, i32 0, i32 1, i32 1)
  %1109 = getelementptr inbounds float, float* %1067, i64 88
  %1110 = bitcast float* %1109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1110, i32 0, i32 1, i32 1)
  %1111 = getelementptr inbounds float, float* %1070, i64 88
  %1112 = bitcast float* %1111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1112, i32 0, i32 1, i32 1)
  %1113 = getelementptr inbounds float, float* %1067, i64 96
  %1114 = bitcast float* %1113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1114, i32 0, i32 1, i32 1)
  %1115 = getelementptr inbounds float, float* %1070, i64 96
  %1116 = bitcast float* %1115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1116, i32 0, i32 1, i32 1)
  %1117 = getelementptr inbounds float, float* %1067, i64 104
  %1118 = bitcast float* %1117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1118, i32 0, i32 1, i32 1)
  %1119 = getelementptr inbounds float, float* %1070, i64 104
  %1120 = bitcast float* %1119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1120, i32 0, i32 1, i32 1)
  %1121 = getelementptr inbounds float, float* %1067, i64 112
  %1122 = bitcast float* %1121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1122, i32 0, i32 1, i32 1)
  %1123 = getelementptr inbounds float, float* %1070, i64 112
  %1124 = bitcast float* %1123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1124, i32 0, i32 1, i32 1)
  %1125 = bitcast float* %1067 to <8 x float>*
  %1126 = load <8 x float>, <8 x float>* %1125, align 1, !tbaa !12
  %1127 = or i64 %1066, 8
  %1128 = getelementptr inbounds float, float* %5, i64 %1127
  %1129 = bitcast float* %1128 to <8 x float>*
  %1130 = load <8 x float>, <8 x float>* %1129, align 1, !tbaa !12
  %1131 = add nuw nsw i64 %1066, 16
  %1132 = getelementptr inbounds float, float* %5, i64 %1131
  %1133 = bitcast float* %1132 to <8 x float>*
  %1134 = load <8 x float>, <8 x float>* %1133, align 1, !tbaa !12
  %1135 = add nuw nsw i64 %1066, 24
  %1136 = getelementptr inbounds float, float* %5, i64 %1135
  %1137 = bitcast float* %1136 to <8 x float>*
  %1138 = load <8 x float>, <8 x float>* %1137, align 1, !tbaa !12
  %1139 = add nuw nsw i64 %1066, 32
  %1140 = getelementptr inbounds float, float* %5, i64 %1139
  %1141 = bitcast float* %1140 to <8 x float>*
  %1142 = load <8 x float>, <8 x float>* %1141, align 1, !tbaa !12
  %1143 = add nuw nsw i64 %1066, 40
  %1144 = getelementptr inbounds float, float* %5, i64 %1143
  %1145 = bitcast float* %1144 to <8 x float>*
  %1146 = load <8 x float>, <8 x float>* %1145, align 1, !tbaa !12
  %1147 = add nuw nsw i64 %1066, 48
  %1148 = getelementptr inbounds float, float* %5, i64 %1147
  %1149 = bitcast float* %1148 to <8 x float>*
  %1150 = load <8 x float>, <8 x float>* %1149, align 1, !tbaa !12
  %1151 = add nuw nsw i64 %1066, 56
  %1152 = getelementptr inbounds float, float* %5, i64 %1151
  %1153 = bitcast float* %1152 to <8 x float>*
  %1154 = load <8 x float>, <8 x float>* %1153, align 1, !tbaa !12
  %1155 = add nuw nsw i64 %1066, 64
  %1156 = getelementptr inbounds float, float* %5, i64 %1155
  %1157 = bitcast float* %1156 to <8 x float>*
  %1158 = load <8 x float>, <8 x float>* %1157, align 1, !tbaa !12
  %1159 = add nuw nsw i64 %1066, 72
  %1160 = getelementptr inbounds float, float* %5, i64 %1159
  %1161 = bitcast float* %1160 to <8 x float>*
  %1162 = load <8 x float>, <8 x float>* %1161, align 1, !tbaa !12
  %1163 = add nuw nsw i64 %1066, 80
  %1164 = getelementptr inbounds float, float* %5, i64 %1163
  %1165 = bitcast float* %1164 to <8 x float>*
  %1166 = load <8 x float>, <8 x float>* %1165, align 1, !tbaa !12
  %1167 = add nuw nsw i64 %1066, 88
  %1168 = getelementptr inbounds float, float* %5, i64 %1167
  %1169 = bitcast float* %1168 to <8 x float>*
  %1170 = load <8 x float>, <8 x float>* %1169, align 1, !tbaa !12
  %1171 = add nuw nsw i64 %1066, 96
  %1172 = getelementptr inbounds float, float* %5, i64 %1171
  %1173 = bitcast float* %1172 to <8 x float>*
  %1174 = load <8 x float>, <8 x float>* %1173, align 1, !tbaa !12
  %1175 = add nuw nsw i64 %1066, 104
  %1176 = getelementptr inbounds float, float* %5, i64 %1175
  %1177 = bitcast float* %1176 to <8 x float>*
  %1178 = load <8 x float>, <8 x float>* %1177, align 1, !tbaa !12
  %1179 = add nsw i64 %1066, %870
  %1180 = getelementptr inbounds float, float* %3, i64 %1179
  %1181 = bitcast float* %1180 to <8 x float>*
  %1182 = load <8 x float>, <8 x float>* %1181, align 1, !tbaa !12
  %1183 = add nsw i64 %1179, 8
  %1184 = getelementptr inbounds float, float* %3, i64 %1183
  %1185 = bitcast float* %1184 to <8 x float>*
  %1186 = load <8 x float>, <8 x float>* %1185, align 1, !tbaa !12
  %1187 = add nsw i64 %1179, 16
  %1188 = getelementptr inbounds float, float* %3, i64 %1187
  %1189 = bitcast float* %1188 to <8 x float>*
  %1190 = load <8 x float>, <8 x float>* %1189, align 1, !tbaa !12
  %1191 = add nsw i64 %1179, 24
  %1192 = getelementptr inbounds float, float* %3, i64 %1191
  %1193 = bitcast float* %1192 to <8 x float>*
  %1194 = load <8 x float>, <8 x float>* %1193, align 1, !tbaa !12
  %1195 = add nsw i64 %1179, 32
  %1196 = getelementptr inbounds float, float* %3, i64 %1195
  %1197 = bitcast float* %1196 to <8 x float>*
  %1198 = load <8 x float>, <8 x float>* %1197, align 1, !tbaa !12
  %1199 = add nsw i64 %1179, 40
  %1200 = getelementptr inbounds float, float* %3, i64 %1199
  %1201 = bitcast float* %1200 to <8 x float>*
  %1202 = load <8 x float>, <8 x float>* %1201, align 1, !tbaa !12
  %1203 = add nsw i64 %1179, 48
  %1204 = getelementptr inbounds float, float* %3, i64 %1203
  %1205 = bitcast float* %1204 to <8 x float>*
  %1206 = load <8 x float>, <8 x float>* %1205, align 1, !tbaa !12
  %1207 = add nsw i64 %1179, 56
  %1208 = getelementptr inbounds float, float* %3, i64 %1207
  %1209 = bitcast float* %1208 to <8 x float>*
  %1210 = load <8 x float>, <8 x float>* %1209, align 1, !tbaa !12
  %1211 = add nsw i64 %1179, 64
  %1212 = getelementptr inbounds float, float* %3, i64 %1211
  %1213 = bitcast float* %1212 to <8 x float>*
  %1214 = load <8 x float>, <8 x float>* %1213, align 1, !tbaa !12
  %1215 = add nsw i64 %1179, 72
  %1216 = getelementptr inbounds float, float* %3, i64 %1215
  %1217 = bitcast float* %1216 to <8 x float>*
  %1218 = load <8 x float>, <8 x float>* %1217, align 1, !tbaa !12
  %1219 = add nsw i64 %1179, 80
  %1220 = getelementptr inbounds float, float* %3, i64 %1219
  %1221 = bitcast float* %1220 to <8 x float>*
  %1222 = load <8 x float>, <8 x float>* %1221, align 1, !tbaa !12
  %1223 = add nsw i64 %1179, 88
  %1224 = getelementptr inbounds float, float* %3, i64 %1223
  %1225 = bitcast float* %1224 to <8 x float>*
  %1226 = load <8 x float>, <8 x float>* %1225, align 1, !tbaa !12
  %1227 = add nsw i64 %1179, 96
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i64 %1179, 104
  %1232 = getelementptr inbounds float, float* %3, i64 %1231
  %1233 = bitcast float* %1232 to <8 x float>*
  %1234 = load <8 x float>, <8 x float>* %1233, align 1, !tbaa !12
  %1235 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1182, <8 x float> %50, <8 x float> %1126) #10
  %1236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1186, <8 x float> %50, <8 x float> %1130) #10
  %1237 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1190, <8 x float> %50, <8 x float> %1134) #10
  %1238 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1194, <8 x float> %50, <8 x float> %1138) #10
  %1239 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1198, <8 x float> %50, <8 x float> %1142) #10
  %1240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1202, <8 x float> %50, <8 x float> %1146) #10
  %1241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1206, <8 x float> %50, <8 x float> %1150) #10
  %1242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1210, <8 x float> %50, <8 x float> %1154) #10
  %1243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1214, <8 x float> %50, <8 x float> %1158) #10
  %1244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1218, <8 x float> %50, <8 x float> %1162) #10
  %1245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1222, <8 x float> %50, <8 x float> %1166) #10
  %1246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1226, <8 x float> %50, <8 x float> %1170) #10
  %1247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %50, <8 x float> %1174) #10
  %1248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1234, <8 x float> %50, <8 x float> %1178) #10
  store <8 x float> %1235, <8 x float>* %1125, align 1, !tbaa !12
  store <8 x float> %1236, <8 x float>* %1129, align 1, !tbaa !12
  store <8 x float> %1237, <8 x float>* %1133, align 1, !tbaa !12
  store <8 x float> %1238, <8 x float>* %1137, align 1, !tbaa !12
  store <8 x float> %1239, <8 x float>* %1141, align 1, !tbaa !12
  store <8 x float> %1240, <8 x float>* %1145, align 1, !tbaa !12
  store <8 x float> %1241, <8 x float>* %1149, align 1, !tbaa !12
  store <8 x float> %1242, <8 x float>* %1153, align 1, !tbaa !12
  store <8 x float> %1243, <8 x float>* %1157, align 1, !tbaa !12
  store <8 x float> %1244, <8 x float>* %1161, align 1, !tbaa !12
  store <8 x float> %1245, <8 x float>* %1165, align 1, !tbaa !12
  store <8 x float> %1246, <8 x float>* %1169, align 1, !tbaa !12
  store <8 x float> %1247, <8 x float>* %1173, align 1, !tbaa !12
  store <8 x float> %1248, <8 x float>* %1177, align 1, !tbaa !12
  %1249 = add nuw nsw i64 %1066, 112
  %1250 = icmp ult i64 %1249, %871
  br i1 %1250, label %1065, label %1058

1251:                                             ; preds = %1257
  br i1 %1060, label %1252, label %1458

1252:                                             ; preds = %1251
  %1253 = trunc i64 %56 to i32
  %1254 = mul nsw i32 %1059, %1253
  %1255 = sext i32 %1254 to i64
  %1256 = zext i32 %1059 to i64
  br label %1463

1257:                                             ; preds = %1061, %1257
  %1258 = phi i64 [ 0, %1061 ], [ %1456, %1257 ]
  %1259 = getelementptr inbounds float, float* %5, i64 %1258
  %1260 = getelementptr inbounds float, float* %1259, i64 8
  %1261 = bitcast float* %1260 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1261, i32 0, i32 1, i32 1)
  %1262 = getelementptr inbounds float, float* %3, i64 %1258
  %1263 = getelementptr inbounds float, float* %1262, i64 8
  %1264 = bitcast float* %1263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1264, i32 0, i32 1, i32 1)
  %1265 = getelementptr inbounds float, float* %1259, i64 16
  %1266 = bitcast float* %1265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1266, i32 0, i32 1, i32 1)
  %1267 = getelementptr inbounds float, float* %1262, i64 16
  %1268 = bitcast float* %1267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1268, i32 0, i32 1, i32 1)
  %1269 = getelementptr inbounds float, float* %1259, i64 24
  %1270 = bitcast float* %1269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1270, i32 0, i32 1, i32 1)
  %1271 = getelementptr inbounds float, float* %1262, i64 24
  %1272 = bitcast float* %1271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1272, i32 0, i32 1, i32 1)
  %1273 = getelementptr inbounds float, float* %1259, i64 32
  %1274 = bitcast float* %1273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1274, i32 0, i32 1, i32 1)
  %1275 = getelementptr inbounds float, float* %1262, i64 32
  %1276 = bitcast float* %1275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1276, i32 0, i32 1, i32 1)
  %1277 = getelementptr inbounds float, float* %1259, i64 40
  %1278 = bitcast float* %1277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1278, i32 0, i32 1, i32 1)
  %1279 = getelementptr inbounds float, float* %1262, i64 40
  %1280 = bitcast float* %1279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1280, i32 0, i32 1, i32 1)
  %1281 = getelementptr inbounds float, float* %1259, i64 48
  %1282 = bitcast float* %1281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1282, i32 0, i32 1, i32 1)
  %1283 = getelementptr inbounds float, float* %1262, i64 48
  %1284 = bitcast float* %1283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1284, i32 0, i32 1, i32 1)
  %1285 = getelementptr inbounds float, float* %1259, i64 56
  %1286 = bitcast float* %1285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1286, i32 0, i32 1, i32 1)
  %1287 = getelementptr inbounds float, float* %1262, i64 56
  %1288 = bitcast float* %1287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1288, i32 0, i32 1, i32 1)
  %1289 = getelementptr inbounds float, float* %1259, i64 64
  %1290 = bitcast float* %1289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1290, i32 0, i32 1, i32 1)
  %1291 = getelementptr inbounds float, float* %1262, i64 64
  %1292 = bitcast float* %1291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1292, i32 0, i32 1, i32 1)
  %1293 = getelementptr inbounds float, float* %1259, i64 72
  %1294 = bitcast float* %1293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1294, i32 0, i32 1, i32 1)
  %1295 = getelementptr inbounds float, float* %1262, i64 72
  %1296 = bitcast float* %1295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1296, i32 0, i32 1, i32 1)
  %1297 = getelementptr inbounds float, float* %1259, i64 80
  %1298 = bitcast float* %1297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1298, i32 0, i32 1, i32 1)
  %1299 = getelementptr inbounds float, float* %1262, i64 80
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %1259, i64 88
  %1302 = bitcast float* %1301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1302, i32 0, i32 1, i32 1)
  %1303 = getelementptr inbounds float, float* %1262, i64 88
  %1304 = bitcast float* %1303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1304, i32 0, i32 1, i32 1)
  %1305 = getelementptr inbounds float, float* %1259, i64 96
  %1306 = bitcast float* %1305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1306, i32 0, i32 1, i32 1)
  %1307 = getelementptr inbounds float, float* %1262, i64 96
  %1308 = bitcast float* %1307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1308, i32 0, i32 1, i32 1)
  %1309 = getelementptr inbounds float, float* %1259, i64 104
  %1310 = bitcast float* %1309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1310, i32 0, i32 1, i32 1)
  %1311 = getelementptr inbounds float, float* %1262, i64 104
  %1312 = bitcast float* %1311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1312, i32 0, i32 1, i32 1)
  %1313 = getelementptr inbounds float, float* %1259, i64 112
  %1314 = bitcast float* %1313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1314, i32 0, i32 1, i32 1)
  %1315 = getelementptr inbounds float, float* %1262, i64 112
  %1316 = bitcast float* %1315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1316, i32 0, i32 1, i32 1)
  %1317 = bitcast float* %1259 to <8 x float>*
  %1318 = load <8 x float>, <8 x float>* %1317, align 1, !tbaa !12
  %1319 = or i64 %1258, 8
  %1320 = getelementptr inbounds float, float* %5, i64 %1319
  %1321 = bitcast float* %1320 to <8 x float>*
  %1322 = load <8 x float>, <8 x float>* %1321, align 1, !tbaa !12
  %1323 = add nuw nsw i64 %1258, 16
  %1324 = getelementptr inbounds float, float* %5, i64 %1323
  %1325 = bitcast float* %1324 to <8 x float>*
  %1326 = load <8 x float>, <8 x float>* %1325, align 1, !tbaa !12
  %1327 = add nuw nsw i64 %1258, 24
  %1328 = getelementptr inbounds float, float* %5, i64 %1327
  %1329 = bitcast float* %1328 to <8 x float>*
  %1330 = load <8 x float>, <8 x float>* %1329, align 1, !tbaa !12
  %1331 = add nuw nsw i64 %1258, 32
  %1332 = getelementptr inbounds float, float* %5, i64 %1331
  %1333 = bitcast float* %1332 to <8 x float>*
  %1334 = load <8 x float>, <8 x float>* %1333, align 1, !tbaa !12
  %1335 = add nuw nsw i64 %1258, 40
  %1336 = getelementptr inbounds float, float* %5, i64 %1335
  %1337 = bitcast float* %1336 to <8 x float>*
  %1338 = load <8 x float>, <8 x float>* %1337, align 1, !tbaa !12
  %1339 = add nuw nsw i64 %1258, 48
  %1340 = getelementptr inbounds float, float* %5, i64 %1339
  %1341 = bitcast float* %1340 to <8 x float>*
  %1342 = load <8 x float>, <8 x float>* %1341, align 1, !tbaa !12
  %1343 = add nuw nsw i64 %1258, 56
  %1344 = getelementptr inbounds float, float* %5, i64 %1343
  %1345 = bitcast float* %1344 to <8 x float>*
  %1346 = load <8 x float>, <8 x float>* %1345, align 1, !tbaa !12
  %1347 = add nuw nsw i64 %1258, 64
  %1348 = getelementptr inbounds float, float* %5, i64 %1347
  %1349 = bitcast float* %1348 to <8 x float>*
  %1350 = load <8 x float>, <8 x float>* %1349, align 1, !tbaa !12
  %1351 = add nuw nsw i64 %1258, 72
  %1352 = getelementptr inbounds float, float* %5, i64 %1351
  %1353 = bitcast float* %1352 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = add nuw nsw i64 %1258, 80
  %1356 = getelementptr inbounds float, float* %5, i64 %1355
  %1357 = bitcast float* %1356 to <8 x float>*
  %1358 = load <8 x float>, <8 x float>* %1357, align 1, !tbaa !12
  %1359 = add nuw nsw i64 %1258, 88
  %1360 = getelementptr inbounds float, float* %5, i64 %1359
  %1361 = bitcast float* %1360 to <8 x float>*
  %1362 = load <8 x float>, <8 x float>* %1361, align 1, !tbaa !12
  %1363 = add nuw nsw i64 %1258, 96
  %1364 = getelementptr inbounds float, float* %5, i64 %1363
  %1365 = bitcast float* %1364 to <8 x float>*
  %1366 = load <8 x float>, <8 x float>* %1365, align 1, !tbaa !12
  %1367 = add nuw nsw i64 %1258, 104
  %1368 = getelementptr inbounds float, float* %5, i64 %1367
  %1369 = bitcast float* %1368 to <8 x float>*
  %1370 = load <8 x float>, <8 x float>* %1369, align 1, !tbaa !12
  %1371 = trunc i64 %1258 to i32
  %1372 = add nsw i32 %1064, %1371
  %1373 = sext i32 %1372 to i64
  %1374 = getelementptr inbounds float, float* %3, i64 %1373
  %1375 = bitcast float* %1374 to <8 x float>*
  %1376 = load <8 x float>, <8 x float>* %1375, align 1, !tbaa !12
  %1377 = add nsw i32 %1372, 8
  %1378 = sext i32 %1377 to i64
  %1379 = getelementptr inbounds float, float* %3, i64 %1378
  %1380 = bitcast float* %1379 to <8 x float>*
  %1381 = load <8 x float>, <8 x float>* %1380, align 1, !tbaa !12
  %1382 = add nsw i32 %1372, 16
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds float, float* %3, i64 %1383
  %1385 = bitcast float* %1384 to <8 x float>*
  %1386 = load <8 x float>, <8 x float>* %1385, align 1, !tbaa !12
  %1387 = add nsw i32 %1372, 24
  %1388 = sext i32 %1387 to i64
  %1389 = getelementptr inbounds float, float* %3, i64 %1388
  %1390 = bitcast float* %1389 to <8 x float>*
  %1391 = load <8 x float>, <8 x float>* %1390, align 1, !tbaa !12
  %1392 = add nsw i32 %1372, 32
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds float, float* %3, i64 %1393
  %1395 = bitcast float* %1394 to <8 x float>*
  %1396 = load <8 x float>, <8 x float>* %1395, align 1, !tbaa !12
  %1397 = add nsw i32 %1372, 40
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds float, float* %3, i64 %1398
  %1400 = bitcast float* %1399 to <8 x float>*
  %1401 = load <8 x float>, <8 x float>* %1400, align 1, !tbaa !12
  %1402 = add nsw i32 %1372, 48
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds float, float* %3, i64 %1403
  %1405 = bitcast float* %1404 to <8 x float>*
  %1406 = load <8 x float>, <8 x float>* %1405, align 1, !tbaa !12
  %1407 = add nsw i32 %1372, 56
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds float, float* %3, i64 %1408
  %1410 = bitcast float* %1409 to <8 x float>*
  %1411 = load <8 x float>, <8 x float>* %1410, align 1, !tbaa !12
  %1412 = add nsw i32 %1372, 64
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds float, float* %3, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = add nsw i32 %1372, 72
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds float, float* %3, i64 %1418
  %1420 = bitcast float* %1419 to <8 x float>*
  %1421 = load <8 x float>, <8 x float>* %1420, align 1, !tbaa !12
  %1422 = add nsw i32 %1372, 80
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds float, float* %3, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = add nsw i32 %1372, 88
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds float, float* %3, i64 %1428
  %1430 = bitcast float* %1429 to <8 x float>*
  %1431 = load <8 x float>, <8 x float>* %1430, align 1, !tbaa !12
  %1432 = add nsw i32 %1372, 96
  %1433 = sext i32 %1432 to i64
  %1434 = getelementptr inbounds float, float* %3, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = add nsw i32 %1372, 104
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds float, float* %3, i64 %1438
  %1440 = bitcast float* %1439 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1376, <8 x float> %55, <8 x float> %1318) #10
  %1443 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1381, <8 x float> %55, <8 x float> %1322) #10
  %1444 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1386, <8 x float> %55, <8 x float> %1326) #10
  %1445 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1391, <8 x float> %55, <8 x float> %1330) #10
  %1446 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1396, <8 x float> %55, <8 x float> %1334) #10
  %1447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1401, <8 x float> %55, <8 x float> %1338) #10
  %1448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1406, <8 x float> %55, <8 x float> %1342) #10
  %1449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1411, <8 x float> %55, <8 x float> %1346) #10
  %1450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1416, <8 x float> %55, <8 x float> %1350) #10
  %1451 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1421, <8 x float> %55, <8 x float> %1354) #10
  %1452 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1426, <8 x float> %55, <8 x float> %1358) #10
  %1453 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1431, <8 x float> %55, <8 x float> %1362) #10
  %1454 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1436, <8 x float> %55, <8 x float> %1366) #10
  %1455 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1441, <8 x float> %55, <8 x float> %1370) #10
  store <8 x float> %1442, <8 x float>* %1317, align 1, !tbaa !12
  store <8 x float> %1443, <8 x float>* %1321, align 1, !tbaa !12
  store <8 x float> %1444, <8 x float>* %1325, align 1, !tbaa !12
  store <8 x float> %1445, <8 x float>* %1329, align 1, !tbaa !12
  store <8 x float> %1446, <8 x float>* %1333, align 1, !tbaa !12
  store <8 x float> %1447, <8 x float>* %1337, align 1, !tbaa !12
  store <8 x float> %1448, <8 x float>* %1341, align 1, !tbaa !12
  store <8 x float> %1449, <8 x float>* %1345, align 1, !tbaa !12
  store <8 x float> %1450, <8 x float>* %1349, align 1, !tbaa !12
  store <8 x float> %1451, <8 x float>* %1353, align 1, !tbaa !12
  store <8 x float> %1452, <8 x float>* %1357, align 1, !tbaa !12
  store <8 x float> %1453, <8 x float>* %1361, align 1, !tbaa !12
  store <8 x float> %1454, <8 x float>* %1365, align 1, !tbaa !12
  store <8 x float> %1455, <8 x float>* %1369, align 1, !tbaa !12
  %1456 = add nuw nsw i64 %1258, 112
  %1457 = icmp ult i64 %1456, %1062
  br i1 %1457, label %1257, label %1251

1458:                                             ; preds = %1463, %20, %466, %1058, %1251
  %1459 = add nuw nsw i64 %21, 8
  %1460 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1461 = sext i32 %1460 to i64
  %1462 = icmp slt i64 %1459, %1461
  br i1 %1462, label %20, label %8

1463:                                             ; preds = %1252, %1463
  %1464 = phi i64 [ 0, %1252 ], [ %1647, %1463 ]
  %1465 = getelementptr inbounds float, float* %5, i64 %1464
  %1466 = getelementptr inbounds float, float* %1465, i64 8
  %1467 = bitcast float* %1466 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1467, i32 0, i32 1, i32 1)
  %1468 = getelementptr inbounds float, float* %3, i64 %1464
  %1469 = getelementptr inbounds float, float* %1468, i64 8
  %1470 = bitcast float* %1469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1470, i32 0, i32 1, i32 1)
  %1471 = getelementptr inbounds float, float* %1465, i64 16
  %1472 = bitcast float* %1471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1472, i32 0, i32 1, i32 1)
  %1473 = getelementptr inbounds float, float* %1468, i64 16
  %1474 = bitcast float* %1473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1474, i32 0, i32 1, i32 1)
  %1475 = getelementptr inbounds float, float* %1465, i64 24
  %1476 = bitcast float* %1475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1476, i32 0, i32 1, i32 1)
  %1477 = getelementptr inbounds float, float* %1468, i64 24
  %1478 = bitcast float* %1477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1478, i32 0, i32 1, i32 1)
  %1479 = getelementptr inbounds float, float* %1465, i64 32
  %1480 = bitcast float* %1479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1480, i32 0, i32 1, i32 1)
  %1481 = getelementptr inbounds float, float* %1468, i64 32
  %1482 = bitcast float* %1481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1482, i32 0, i32 1, i32 1)
  %1483 = getelementptr inbounds float, float* %1465, i64 40
  %1484 = bitcast float* %1483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1484, i32 0, i32 1, i32 1)
  %1485 = getelementptr inbounds float, float* %1468, i64 40
  %1486 = bitcast float* %1485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1486, i32 0, i32 1, i32 1)
  %1487 = getelementptr inbounds float, float* %1465, i64 48
  %1488 = bitcast float* %1487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1488, i32 0, i32 1, i32 1)
  %1489 = getelementptr inbounds float, float* %1468, i64 48
  %1490 = bitcast float* %1489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1490, i32 0, i32 1, i32 1)
  %1491 = getelementptr inbounds float, float* %1465, i64 56
  %1492 = bitcast float* %1491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1492, i32 0, i32 1, i32 1)
  %1493 = getelementptr inbounds float, float* %1468, i64 56
  %1494 = bitcast float* %1493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1494, i32 0, i32 1, i32 1)
  %1495 = getelementptr inbounds float, float* %1465, i64 64
  %1496 = bitcast float* %1495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1496, i32 0, i32 1, i32 1)
  %1497 = getelementptr inbounds float, float* %1468, i64 64
  %1498 = bitcast float* %1497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1498, i32 0, i32 1, i32 1)
  %1499 = getelementptr inbounds float, float* %1465, i64 72
  %1500 = bitcast float* %1499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1500, i32 0, i32 1, i32 1)
  %1501 = getelementptr inbounds float, float* %1468, i64 72
  %1502 = bitcast float* %1501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1502, i32 0, i32 1, i32 1)
  %1503 = getelementptr inbounds float, float* %1465, i64 80
  %1504 = bitcast float* %1503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1504, i32 0, i32 1, i32 1)
  %1505 = getelementptr inbounds float, float* %1468, i64 80
  %1506 = bitcast float* %1505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1506, i32 0, i32 1, i32 1)
  %1507 = getelementptr inbounds float, float* %1465, i64 88
  %1508 = bitcast float* %1507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1508, i32 0, i32 1, i32 1)
  %1509 = getelementptr inbounds float, float* %1468, i64 88
  %1510 = bitcast float* %1509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1510, i32 0, i32 1, i32 1)
  %1511 = getelementptr inbounds float, float* %1465, i64 96
  %1512 = bitcast float* %1511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1512, i32 0, i32 1, i32 1)
  %1513 = getelementptr inbounds float, float* %1468, i64 96
  %1514 = bitcast float* %1513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1514, i32 0, i32 1, i32 1)
  %1515 = getelementptr inbounds float, float* %1465, i64 104
  %1516 = bitcast float* %1515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1516, i32 0, i32 1, i32 1)
  %1517 = getelementptr inbounds float, float* %1468, i64 104
  %1518 = bitcast float* %1517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1518, i32 0, i32 1, i32 1)
  %1519 = getelementptr inbounds float, float* %1465, i64 112
  %1520 = bitcast float* %1519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1520, i32 0, i32 1, i32 1)
  %1521 = getelementptr inbounds float, float* %1468, i64 112
  %1522 = bitcast float* %1521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1522, i32 0, i32 1, i32 1)
  %1523 = bitcast float* %1465 to <8 x float>*
  %1524 = load <8 x float>, <8 x float>* %1523, align 1, !tbaa !12
  %1525 = or i64 %1464, 8
  %1526 = getelementptr inbounds float, float* %5, i64 %1525
  %1527 = bitcast float* %1526 to <8 x float>*
  %1528 = load <8 x float>, <8 x float>* %1527, align 1, !tbaa !12
  %1529 = add nuw nsw i64 %1464, 16
  %1530 = getelementptr inbounds float, float* %5, i64 %1529
  %1531 = bitcast float* %1530 to <8 x float>*
  %1532 = load <8 x float>, <8 x float>* %1531, align 1, !tbaa !12
  %1533 = add nuw nsw i64 %1464, 24
  %1534 = getelementptr inbounds float, float* %5, i64 %1533
  %1535 = bitcast float* %1534 to <8 x float>*
  %1536 = load <8 x float>, <8 x float>* %1535, align 1, !tbaa !12
  %1537 = add nuw nsw i64 %1464, 32
  %1538 = getelementptr inbounds float, float* %5, i64 %1537
  %1539 = bitcast float* %1538 to <8 x float>*
  %1540 = load <8 x float>, <8 x float>* %1539, align 1, !tbaa !12
  %1541 = add nuw nsw i64 %1464, 40
  %1542 = getelementptr inbounds float, float* %5, i64 %1541
  %1543 = bitcast float* %1542 to <8 x float>*
  %1544 = load <8 x float>, <8 x float>* %1543, align 1, !tbaa !12
  %1545 = add nuw nsw i64 %1464, 48
  %1546 = getelementptr inbounds float, float* %5, i64 %1545
  %1547 = bitcast float* %1546 to <8 x float>*
  %1548 = load <8 x float>, <8 x float>* %1547, align 1, !tbaa !12
  %1549 = add nuw nsw i64 %1464, 56
  %1550 = getelementptr inbounds float, float* %5, i64 %1549
  %1551 = bitcast float* %1550 to <8 x float>*
  %1552 = load <8 x float>, <8 x float>* %1551, align 1, !tbaa !12
  %1553 = add nuw nsw i64 %1464, 64
  %1554 = getelementptr inbounds float, float* %5, i64 %1553
  %1555 = bitcast float* %1554 to <8 x float>*
  %1556 = load <8 x float>, <8 x float>* %1555, align 1, !tbaa !12
  %1557 = add nuw nsw i64 %1464, 72
  %1558 = getelementptr inbounds float, float* %5, i64 %1557
  %1559 = bitcast float* %1558 to <8 x float>*
  %1560 = load <8 x float>, <8 x float>* %1559, align 1, !tbaa !12
  %1561 = add nuw nsw i64 %1464, 80
  %1562 = getelementptr inbounds float, float* %5, i64 %1561
  %1563 = bitcast float* %1562 to <8 x float>*
  %1564 = load <8 x float>, <8 x float>* %1563, align 1, !tbaa !12
  %1565 = add nuw nsw i64 %1464, 88
  %1566 = getelementptr inbounds float, float* %5, i64 %1565
  %1567 = bitcast float* %1566 to <8 x float>*
  %1568 = load <8 x float>, <8 x float>* %1567, align 1, !tbaa !12
  %1569 = add nuw nsw i64 %1464, 96
  %1570 = getelementptr inbounds float, float* %5, i64 %1569
  %1571 = bitcast float* %1570 to <8 x float>*
  %1572 = load <8 x float>, <8 x float>* %1571, align 1, !tbaa !12
  %1573 = add nuw nsw i64 %1464, 104
  %1574 = getelementptr inbounds float, float* %5, i64 %1573
  %1575 = bitcast float* %1574 to <8 x float>*
  %1576 = load <8 x float>, <8 x float>* %1575, align 1, !tbaa !12
  %1577 = add nsw i64 %1464, %1255
  %1578 = getelementptr inbounds float, float* %3, i64 %1577
  %1579 = bitcast float* %1578 to <8 x float>*
  %1580 = load <8 x float>, <8 x float>* %1579, align 1, !tbaa !12
  %1581 = add nsw i64 %1577, 8
  %1582 = getelementptr inbounds float, float* %3, i64 %1581
  %1583 = bitcast float* %1582 to <8 x float>*
  %1584 = load <8 x float>, <8 x float>* %1583, align 1, !tbaa !12
  %1585 = add nsw i64 %1577, 16
  %1586 = getelementptr inbounds float, float* %3, i64 %1585
  %1587 = bitcast float* %1586 to <8 x float>*
  %1588 = load <8 x float>, <8 x float>* %1587, align 1, !tbaa !12
  %1589 = add nsw i64 %1577, 24
  %1590 = getelementptr inbounds float, float* %3, i64 %1589
  %1591 = bitcast float* %1590 to <8 x float>*
  %1592 = load <8 x float>, <8 x float>* %1591, align 1, !tbaa !12
  %1593 = add nsw i64 %1577, 32
  %1594 = getelementptr inbounds float, float* %3, i64 %1593
  %1595 = bitcast float* %1594 to <8 x float>*
  %1596 = load <8 x float>, <8 x float>* %1595, align 1, !tbaa !12
  %1597 = add nsw i64 %1577, 40
  %1598 = getelementptr inbounds float, float* %3, i64 %1597
  %1599 = bitcast float* %1598 to <8 x float>*
  %1600 = load <8 x float>, <8 x float>* %1599, align 1, !tbaa !12
  %1601 = add nsw i64 %1577, 48
  %1602 = getelementptr inbounds float, float* %3, i64 %1601
  %1603 = bitcast float* %1602 to <8 x float>*
  %1604 = load <8 x float>, <8 x float>* %1603, align 1, !tbaa !12
  %1605 = add nsw i64 %1577, 56
  %1606 = getelementptr inbounds float, float* %3, i64 %1605
  %1607 = bitcast float* %1606 to <8 x float>*
  %1608 = load <8 x float>, <8 x float>* %1607, align 1, !tbaa !12
  %1609 = add nsw i64 %1577, 64
  %1610 = getelementptr inbounds float, float* %3, i64 %1609
  %1611 = bitcast float* %1610 to <8 x float>*
  %1612 = load <8 x float>, <8 x float>* %1611, align 1, !tbaa !12
  %1613 = add nsw i64 %1577, 72
  %1614 = getelementptr inbounds float, float* %3, i64 %1613
  %1615 = bitcast float* %1614 to <8 x float>*
  %1616 = load <8 x float>, <8 x float>* %1615, align 1, !tbaa !12
  %1617 = add nsw i64 %1577, 80
  %1618 = getelementptr inbounds float, float* %3, i64 %1617
  %1619 = bitcast float* %1618 to <8 x float>*
  %1620 = load <8 x float>, <8 x float>* %1619, align 1, !tbaa !12
  %1621 = add nsw i64 %1577, 88
  %1622 = getelementptr inbounds float, float* %3, i64 %1621
  %1623 = bitcast float* %1622 to <8 x float>*
  %1624 = load <8 x float>, <8 x float>* %1623, align 1, !tbaa !12
  %1625 = add nsw i64 %1577, 96
  %1626 = getelementptr inbounds float, float* %3, i64 %1625
  %1627 = bitcast float* %1626 to <8 x float>*
  %1628 = load <8 x float>, <8 x float>* %1627, align 1, !tbaa !12
  %1629 = add nsw i64 %1577, 104
  %1630 = getelementptr inbounds float, float* %3, i64 %1629
  %1631 = bitcast float* %1630 to <8 x float>*
  %1632 = load <8 x float>, <8 x float>* %1631, align 1, !tbaa !12
  %1633 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1580, <8 x float> %60, <8 x float> %1524) #10
  %1634 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1584, <8 x float> %60, <8 x float> %1528) #10
  %1635 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1588, <8 x float> %60, <8 x float> %1532) #10
  %1636 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1592, <8 x float> %60, <8 x float> %1536) #10
  %1637 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1596, <8 x float> %60, <8 x float> %1540) #10
  %1638 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1600, <8 x float> %60, <8 x float> %1544) #10
  %1639 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1604, <8 x float> %60, <8 x float> %1548) #10
  %1640 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1608, <8 x float> %60, <8 x float> %1552) #10
  %1641 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1612, <8 x float> %60, <8 x float> %1556) #10
  %1642 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1616, <8 x float> %60, <8 x float> %1560) #10
  %1643 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1620, <8 x float> %60, <8 x float> %1564) #10
  %1644 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1624, <8 x float> %60, <8 x float> %1568) #10
  %1645 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1628, <8 x float> %60, <8 x float> %1572) #10
  %1646 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1632, <8 x float> %60, <8 x float> %1576) #10
  store <8 x float> %1633, <8 x float>* %1523, align 1, !tbaa !12
  store <8 x float> %1634, <8 x float>* %1527, align 1, !tbaa !12
  store <8 x float> %1635, <8 x float>* %1531, align 1, !tbaa !12
  store <8 x float> %1636, <8 x float>* %1535, align 1, !tbaa !12
  store <8 x float> %1637, <8 x float>* %1539, align 1, !tbaa !12
  store <8 x float> %1638, <8 x float>* %1543, align 1, !tbaa !12
  store <8 x float> %1639, <8 x float>* %1547, align 1, !tbaa !12
  store <8 x float> %1640, <8 x float>* %1551, align 1, !tbaa !12
  store <8 x float> %1641, <8 x float>* %1555, align 1, !tbaa !12
  store <8 x float> %1642, <8 x float>* %1559, align 1, !tbaa !12
  store <8 x float> %1643, <8 x float>* %1563, align 1, !tbaa !12
  store <8 x float> %1644, <8 x float>* %1567, align 1, !tbaa !12
  store <8 x float> %1645, <8 x float>* %1571, align 1, !tbaa !12
  store <8 x float> %1646, <8 x float>* %1575, align 1, !tbaa !12
  %1647 = add nuw nsw i64 %1464, 112
  %1648 = icmp ult i64 %1647, %1256
  br i1 %1648, label %1463, label %1458
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 232
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui14_uk8.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
