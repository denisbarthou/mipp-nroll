; ModuleID = 'codes/matvec_ui11_uk13.cpp'
source_filename = "codes/matvec_ui11_uk13.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui11_uk13.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 88
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 104
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1967, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1967
  %21 = phi i64 [ %1968, %1967 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %1967

88:                                               ; preds = %20
  %89 = zext i32 %86 to i64
  %90 = trunc i64 %21 to i32
  %91 = mul nsw i32 %86, %90
  br label %98

92:                                               ; preds = %98
  br i1 %87, label %93, label %563

93:                                               ; preds = %92
  %94 = trunc i64 %26 to i32
  %95 = mul nsw i32 %86, %94
  %96 = sext i32 %95 to i64
  %97 = zext i32 %86 to i64
  br label %263

98:                                               ; preds = %88, %98
  %99 = phi i64 [ 0, %88 ], [ %255, %98 ]
  %100 = getelementptr inbounds float, float* %5, i64 %99
  %101 = getelementptr inbounds float, float* %100, i64 8
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %3, i64 %99
  %104 = getelementptr inbounds float, float* %103, i64 8
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %100, i64 16
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %103, i64 16
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %100, i64 24
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %103, i64 24
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %100, i64 32
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %103, i64 32
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %100, i64 40
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %103, i64 40
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %100, i64 48
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %103, i64 48
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %100, i64 56
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %103, i64 56
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %100, i64 64
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %103, i64 64
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %100, i64 72
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %103, i64 72
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = getelementptr inbounds float, float* %100, i64 80
  %139 = bitcast float* %138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %139, i32 0, i32 1, i32 1)
  %140 = getelementptr inbounds float, float* %103, i64 80
  %141 = bitcast float* %140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %141, i32 0, i32 1, i32 1)
  %142 = getelementptr inbounds float, float* %100, i64 88
  %143 = bitcast float* %142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %143, i32 0, i32 1, i32 1)
  %144 = getelementptr inbounds float, float* %103, i64 88
  %145 = bitcast float* %144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %145, i32 0, i32 1, i32 1)
  %146 = bitcast float* %100 to <8 x float>*
  %147 = load <8 x float>, <8 x float>* %146, align 1, !tbaa !12
  %148 = add nuw nsw i64 %99, 8
  %149 = getelementptr inbounds float, float* %5, i64 %148
  %150 = bitcast float* %149 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = add nuw nsw i64 %99, 16
  %153 = getelementptr inbounds float, float* %5, i64 %152
  %154 = bitcast float* %153 to <8 x float>*
  %155 = load <8 x float>, <8 x float>* %154, align 1, !tbaa !12
  %156 = add nuw nsw i64 %99, 24
  %157 = getelementptr inbounds float, float* %5, i64 %156
  %158 = bitcast float* %157 to <8 x float>*
  %159 = load <8 x float>, <8 x float>* %158, align 1, !tbaa !12
  %160 = add nuw nsw i64 %99, 32
  %161 = getelementptr inbounds float, float* %5, i64 %160
  %162 = bitcast float* %161 to <8 x float>*
  %163 = load <8 x float>, <8 x float>* %162, align 1, !tbaa !12
  %164 = add nuw nsw i64 %99, 40
  %165 = getelementptr inbounds float, float* %5, i64 %164
  %166 = bitcast float* %165 to <8 x float>*
  %167 = load <8 x float>, <8 x float>* %166, align 1, !tbaa !12
  %168 = add nuw nsw i64 %99, 48
  %169 = getelementptr inbounds float, float* %5, i64 %168
  %170 = bitcast float* %169 to <8 x float>*
  %171 = load <8 x float>, <8 x float>* %170, align 1, !tbaa !12
  %172 = add nuw nsw i64 %99, 56
  %173 = getelementptr inbounds float, float* %5, i64 %172
  %174 = bitcast float* %173 to <8 x float>*
  %175 = load <8 x float>, <8 x float>* %174, align 1, !tbaa !12
  %176 = add nuw nsw i64 %99, 64
  %177 = getelementptr inbounds float, float* %5, i64 %176
  %178 = bitcast float* %177 to <8 x float>*
  %179 = load <8 x float>, <8 x float>* %178, align 1, !tbaa !12
  %180 = add nuw nsw i64 %99, 72
  %181 = getelementptr inbounds float, float* %5, i64 %180
  %182 = bitcast float* %181 to <8 x float>*
  %183 = load <8 x float>, <8 x float>* %182, align 1, !tbaa !12
  %184 = add nuw nsw i64 %99, 80
  %185 = getelementptr inbounds float, float* %5, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = trunc i64 %99 to i32
  %189 = add nsw i32 %91, %188
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds float, float* %3, i64 %190
  %192 = bitcast float* %191 to <8 x float>*
  %193 = load <8 x float>, <8 x float>* %192, align 1, !tbaa !12
  %194 = add nsw i32 %189, 8
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds float, float* %3, i64 %195
  %197 = bitcast float* %196 to <8 x float>*
  %198 = load <8 x float>, <8 x float>* %197, align 1, !tbaa !12
  %199 = add nsw i32 %189, 16
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds float, float* %3, i64 %200
  %202 = bitcast float* %201 to <8 x float>*
  %203 = load <8 x float>, <8 x float>* %202, align 1, !tbaa !12
  %204 = add nsw i32 %189, 24
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds float, float* %3, i64 %205
  %207 = bitcast float* %206 to <8 x float>*
  %208 = load <8 x float>, <8 x float>* %207, align 1, !tbaa !12
  %209 = add nsw i32 %189, 32
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds float, float* %3, i64 %210
  %212 = bitcast float* %211 to <8 x float>*
  %213 = load <8 x float>, <8 x float>* %212, align 1, !tbaa !12
  %214 = add nsw i32 %189, 40
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds float, float* %3, i64 %215
  %217 = bitcast float* %216 to <8 x float>*
  %218 = load <8 x float>, <8 x float>* %217, align 1, !tbaa !12
  %219 = add nsw i32 %189, 48
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds float, float* %3, i64 %220
  %222 = bitcast float* %221 to <8 x float>*
  %223 = load <8 x float>, <8 x float>* %222, align 1, !tbaa !12
  %224 = add nsw i32 %189, 56
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds float, float* %3, i64 %225
  %227 = bitcast float* %226 to <8 x float>*
  %228 = load <8 x float>, <8 x float>* %227, align 1, !tbaa !12
  %229 = add nsw i32 %189, 64
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds float, float* %3, i64 %230
  %232 = bitcast float* %231 to <8 x float>*
  %233 = load <8 x float>, <8 x float>* %232, align 1, !tbaa !12
  %234 = add nsw i32 %189, 72
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds float, float* %3, i64 %235
  %237 = bitcast float* %236 to <8 x float>*
  %238 = load <8 x float>, <8 x float>* %237, align 1, !tbaa !12
  %239 = add nsw i32 %189, 80
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds float, float* %3, i64 %240
  %242 = bitcast float* %241 to <8 x float>*
  %243 = load <8 x float>, <8 x float>* %242, align 1, !tbaa !12
  %244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %193, <8 x float> %25, <8 x float> %147) #10
  %245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %198, <8 x float> %25, <8 x float> %151) #10
  %246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %203, <8 x float> %25, <8 x float> %155) #10
  %247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %208, <8 x float> %25, <8 x float> %159) #10
  %248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %213, <8 x float> %25, <8 x float> %163) #10
  %249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %218, <8 x float> %25, <8 x float> %167) #10
  %250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %223, <8 x float> %25, <8 x float> %171) #10
  %251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %228, <8 x float> %25, <8 x float> %175) #10
  %252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %233, <8 x float> %25, <8 x float> %179) #10
  %253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %238, <8 x float> %25, <8 x float> %183) #10
  %254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %243, <8 x float> %25, <8 x float> %187) #10
  store <8 x float> %244, <8 x float>* %146, align 1, !tbaa !12
  store <8 x float> %245, <8 x float>* %150, align 1, !tbaa !12
  store <8 x float> %246, <8 x float>* %154, align 1, !tbaa !12
  store <8 x float> %247, <8 x float>* %158, align 1, !tbaa !12
  store <8 x float> %248, <8 x float>* %162, align 1, !tbaa !12
  store <8 x float> %249, <8 x float>* %166, align 1, !tbaa !12
  store <8 x float> %250, <8 x float>* %170, align 1, !tbaa !12
  store <8 x float> %251, <8 x float>* %174, align 1, !tbaa !12
  store <8 x float> %252, <8 x float>* %178, align 1, !tbaa !12
  store <8 x float> %253, <8 x float>* %182, align 1, !tbaa !12
  store <8 x float> %254, <8 x float>* %186, align 1, !tbaa !12
  %255 = add nuw nsw i64 %99, 88
  %256 = icmp ult i64 %255, %89
  br i1 %256, label %98, label %92

257:                                              ; preds = %263
  br i1 %87, label %258, label %563

258:                                              ; preds = %257
  %259 = trunc i64 %31 to i32
  %260 = mul nsw i32 %86, %259
  %261 = sext i32 %260 to i64
  %262 = zext i32 %86 to i64
  br label %416

263:                                              ; preds = %93, %263
  %264 = phi i64 [ 0, %93 ], [ %408, %263 ]
  %265 = getelementptr inbounds float, float* %5, i64 %264
  %266 = getelementptr inbounds float, float* %265, i64 8
  %267 = bitcast float* %266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %267, i32 0, i32 1, i32 1)
  %268 = getelementptr inbounds float, float* %3, i64 %264
  %269 = getelementptr inbounds float, float* %268, i64 8
  %270 = bitcast float* %269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %270, i32 0, i32 1, i32 1)
  %271 = getelementptr inbounds float, float* %265, i64 16
  %272 = bitcast float* %271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %272, i32 0, i32 1, i32 1)
  %273 = getelementptr inbounds float, float* %268, i64 16
  %274 = bitcast float* %273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %274, i32 0, i32 1, i32 1)
  %275 = getelementptr inbounds float, float* %265, i64 24
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %276, i32 0, i32 1, i32 1)
  %277 = getelementptr inbounds float, float* %268, i64 24
  %278 = bitcast float* %277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %278, i32 0, i32 1, i32 1)
  %279 = getelementptr inbounds float, float* %265, i64 32
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %268, i64 32
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %265, i64 40
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %268, i64 40
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %265, i64 48
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %268, i64 48
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %265, i64 56
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %268, i64 56
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %265, i64 64
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %268, i64 64
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %265, i64 72
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = getelementptr inbounds float, float* %268, i64 72
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = getelementptr inbounds float, float* %265, i64 80
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %268, i64 80
  %306 = bitcast float* %305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %306, i32 0, i32 1, i32 1)
  %307 = getelementptr inbounds float, float* %265, i64 88
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %268, i64 88
  %310 = bitcast float* %309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %310, i32 0, i32 1, i32 1)
  %311 = bitcast float* %265 to <8 x float>*
  %312 = load <8 x float>, <8 x float>* %311, align 1, !tbaa !12
  %313 = add nuw nsw i64 %264, 8
  %314 = getelementptr inbounds float, float* %5, i64 %313
  %315 = bitcast float* %314 to <8 x float>*
  %316 = load <8 x float>, <8 x float>* %315, align 1, !tbaa !12
  %317 = add nuw nsw i64 %264, 16
  %318 = getelementptr inbounds float, float* %5, i64 %317
  %319 = bitcast float* %318 to <8 x float>*
  %320 = load <8 x float>, <8 x float>* %319, align 1, !tbaa !12
  %321 = add nuw nsw i64 %264, 24
  %322 = getelementptr inbounds float, float* %5, i64 %321
  %323 = bitcast float* %322 to <8 x float>*
  %324 = load <8 x float>, <8 x float>* %323, align 1, !tbaa !12
  %325 = add nuw nsw i64 %264, 32
  %326 = getelementptr inbounds float, float* %5, i64 %325
  %327 = bitcast float* %326 to <8 x float>*
  %328 = load <8 x float>, <8 x float>* %327, align 1, !tbaa !12
  %329 = add nuw nsw i64 %264, 40
  %330 = getelementptr inbounds float, float* %5, i64 %329
  %331 = bitcast float* %330 to <8 x float>*
  %332 = load <8 x float>, <8 x float>* %331, align 1, !tbaa !12
  %333 = add nuw nsw i64 %264, 48
  %334 = getelementptr inbounds float, float* %5, i64 %333
  %335 = bitcast float* %334 to <8 x float>*
  %336 = load <8 x float>, <8 x float>* %335, align 1, !tbaa !12
  %337 = add nuw nsw i64 %264, 56
  %338 = getelementptr inbounds float, float* %5, i64 %337
  %339 = bitcast float* %338 to <8 x float>*
  %340 = load <8 x float>, <8 x float>* %339, align 1, !tbaa !12
  %341 = add nuw nsw i64 %264, 64
  %342 = getelementptr inbounds float, float* %5, i64 %341
  %343 = bitcast float* %342 to <8 x float>*
  %344 = load <8 x float>, <8 x float>* %343, align 1, !tbaa !12
  %345 = add nuw nsw i64 %264, 72
  %346 = getelementptr inbounds float, float* %5, i64 %345
  %347 = bitcast float* %346 to <8 x float>*
  %348 = load <8 x float>, <8 x float>* %347, align 1, !tbaa !12
  %349 = add nuw nsw i64 %264, 80
  %350 = getelementptr inbounds float, float* %5, i64 %349
  %351 = bitcast float* %350 to <8 x float>*
  %352 = load <8 x float>, <8 x float>* %351, align 1, !tbaa !12
  %353 = add nsw i64 %264, %96
  %354 = getelementptr inbounds float, float* %3, i64 %353
  %355 = bitcast float* %354 to <8 x float>*
  %356 = load <8 x float>, <8 x float>* %355, align 1, !tbaa !12
  %357 = add nsw i64 %353, 8
  %358 = getelementptr inbounds float, float* %3, i64 %357
  %359 = bitcast float* %358 to <8 x float>*
  %360 = load <8 x float>, <8 x float>* %359, align 1, !tbaa !12
  %361 = add nsw i64 %353, 16
  %362 = getelementptr inbounds float, float* %3, i64 %361
  %363 = bitcast float* %362 to <8 x float>*
  %364 = load <8 x float>, <8 x float>* %363, align 1, !tbaa !12
  %365 = add nsw i64 %353, 24
  %366 = getelementptr inbounds float, float* %3, i64 %365
  %367 = bitcast float* %366 to <8 x float>*
  %368 = load <8 x float>, <8 x float>* %367, align 1, !tbaa !12
  %369 = add nsw i64 %353, 32
  %370 = getelementptr inbounds float, float* %3, i64 %369
  %371 = bitcast float* %370 to <8 x float>*
  %372 = load <8 x float>, <8 x float>* %371, align 1, !tbaa !12
  %373 = add nsw i64 %353, 40
  %374 = getelementptr inbounds float, float* %3, i64 %373
  %375 = bitcast float* %374 to <8 x float>*
  %376 = load <8 x float>, <8 x float>* %375, align 1, !tbaa !12
  %377 = add nsw i64 %353, 48
  %378 = getelementptr inbounds float, float* %3, i64 %377
  %379 = bitcast float* %378 to <8 x float>*
  %380 = load <8 x float>, <8 x float>* %379, align 1, !tbaa !12
  %381 = add nsw i64 %353, 56
  %382 = getelementptr inbounds float, float* %3, i64 %381
  %383 = bitcast float* %382 to <8 x float>*
  %384 = load <8 x float>, <8 x float>* %383, align 1, !tbaa !12
  %385 = add nsw i64 %353, 64
  %386 = getelementptr inbounds float, float* %3, i64 %385
  %387 = bitcast float* %386 to <8 x float>*
  %388 = load <8 x float>, <8 x float>* %387, align 1, !tbaa !12
  %389 = add nsw i64 %353, 72
  %390 = getelementptr inbounds float, float* %3, i64 %389
  %391 = bitcast float* %390 to <8 x float>*
  %392 = load <8 x float>, <8 x float>* %391, align 1, !tbaa !12
  %393 = add nsw i64 %353, 80
  %394 = getelementptr inbounds float, float* %3, i64 %393
  %395 = bitcast float* %394 to <8 x float>*
  %396 = load <8 x float>, <8 x float>* %395, align 1, !tbaa !12
  %397 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %356, <8 x float> %30, <8 x float> %312) #10
  %398 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %360, <8 x float> %30, <8 x float> %316) #10
  %399 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %364, <8 x float> %30, <8 x float> %320) #10
  %400 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %368, <8 x float> %30, <8 x float> %324) #10
  %401 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %372, <8 x float> %30, <8 x float> %328) #10
  %402 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %376, <8 x float> %30, <8 x float> %332) #10
  %403 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %380, <8 x float> %30, <8 x float> %336) #10
  %404 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %384, <8 x float> %30, <8 x float> %340) #10
  %405 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %388, <8 x float> %30, <8 x float> %344) #10
  %406 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %392, <8 x float> %30, <8 x float> %348) #10
  %407 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %396, <8 x float> %30, <8 x float> %352) #10
  store <8 x float> %397, <8 x float>* %311, align 1, !tbaa !12
  store <8 x float> %398, <8 x float>* %315, align 1, !tbaa !12
  store <8 x float> %399, <8 x float>* %319, align 1, !tbaa !12
  store <8 x float> %400, <8 x float>* %323, align 1, !tbaa !12
  store <8 x float> %401, <8 x float>* %327, align 1, !tbaa !12
  store <8 x float> %402, <8 x float>* %331, align 1, !tbaa !12
  store <8 x float> %403, <8 x float>* %335, align 1, !tbaa !12
  store <8 x float> %404, <8 x float>* %339, align 1, !tbaa !12
  store <8 x float> %405, <8 x float>* %343, align 1, !tbaa !12
  store <8 x float> %406, <8 x float>* %347, align 1, !tbaa !12
  store <8 x float> %407, <8 x float>* %351, align 1, !tbaa !12
  %408 = add nuw nsw i64 %264, 88
  %409 = icmp ult i64 %408, %97
  br i1 %409, label %263, label %257

410:                                              ; preds = %416
  br i1 %87, label %411, label %563

411:                                              ; preds = %410
  %412 = trunc i64 %36 to i32
  %413 = mul nsw i32 %86, %412
  %414 = sext i32 %413 to i64
  %415 = zext i32 %86 to i64
  br label %570

416:                                              ; preds = %258, %416
  %417 = phi i64 [ 0, %258 ], [ %561, %416 ]
  %418 = getelementptr inbounds float, float* %5, i64 %417
  %419 = getelementptr inbounds float, float* %418, i64 8
  %420 = bitcast float* %419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %420, i32 0, i32 1, i32 1)
  %421 = getelementptr inbounds float, float* %3, i64 %417
  %422 = getelementptr inbounds float, float* %421, i64 8
  %423 = bitcast float* %422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %423, i32 0, i32 1, i32 1)
  %424 = getelementptr inbounds float, float* %418, i64 16
  %425 = bitcast float* %424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %425, i32 0, i32 1, i32 1)
  %426 = getelementptr inbounds float, float* %421, i64 16
  %427 = bitcast float* %426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %427, i32 0, i32 1, i32 1)
  %428 = getelementptr inbounds float, float* %418, i64 24
  %429 = bitcast float* %428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %429, i32 0, i32 1, i32 1)
  %430 = getelementptr inbounds float, float* %421, i64 24
  %431 = bitcast float* %430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %431, i32 0, i32 1, i32 1)
  %432 = getelementptr inbounds float, float* %418, i64 32
  %433 = bitcast float* %432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %433, i32 0, i32 1, i32 1)
  %434 = getelementptr inbounds float, float* %421, i64 32
  %435 = bitcast float* %434 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %435, i32 0, i32 1, i32 1)
  %436 = getelementptr inbounds float, float* %418, i64 40
  %437 = bitcast float* %436 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %437, i32 0, i32 1, i32 1)
  %438 = getelementptr inbounds float, float* %421, i64 40
  %439 = bitcast float* %438 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %439, i32 0, i32 1, i32 1)
  %440 = getelementptr inbounds float, float* %418, i64 48
  %441 = bitcast float* %440 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %441, i32 0, i32 1, i32 1)
  %442 = getelementptr inbounds float, float* %421, i64 48
  %443 = bitcast float* %442 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %443, i32 0, i32 1, i32 1)
  %444 = getelementptr inbounds float, float* %418, i64 56
  %445 = bitcast float* %444 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %445, i32 0, i32 1, i32 1)
  %446 = getelementptr inbounds float, float* %421, i64 56
  %447 = bitcast float* %446 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %447, i32 0, i32 1, i32 1)
  %448 = getelementptr inbounds float, float* %418, i64 64
  %449 = bitcast float* %448 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %449, i32 0, i32 1, i32 1)
  %450 = getelementptr inbounds float, float* %421, i64 64
  %451 = bitcast float* %450 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %451, i32 0, i32 1, i32 1)
  %452 = getelementptr inbounds float, float* %418, i64 72
  %453 = bitcast float* %452 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %453, i32 0, i32 1, i32 1)
  %454 = getelementptr inbounds float, float* %421, i64 72
  %455 = bitcast float* %454 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %455, i32 0, i32 1, i32 1)
  %456 = getelementptr inbounds float, float* %418, i64 80
  %457 = bitcast float* %456 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %457, i32 0, i32 1, i32 1)
  %458 = getelementptr inbounds float, float* %421, i64 80
  %459 = bitcast float* %458 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %459, i32 0, i32 1, i32 1)
  %460 = getelementptr inbounds float, float* %418, i64 88
  %461 = bitcast float* %460 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %461, i32 0, i32 1, i32 1)
  %462 = getelementptr inbounds float, float* %421, i64 88
  %463 = bitcast float* %462 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %463, i32 0, i32 1, i32 1)
  %464 = bitcast float* %418 to <8 x float>*
  %465 = load <8 x float>, <8 x float>* %464, align 1, !tbaa !12
  %466 = add nuw nsw i64 %417, 8
  %467 = getelementptr inbounds float, float* %5, i64 %466
  %468 = bitcast float* %467 to <8 x float>*
  %469 = load <8 x float>, <8 x float>* %468, align 1, !tbaa !12
  %470 = add nuw nsw i64 %417, 16
  %471 = getelementptr inbounds float, float* %5, i64 %470
  %472 = bitcast float* %471 to <8 x float>*
  %473 = load <8 x float>, <8 x float>* %472, align 1, !tbaa !12
  %474 = add nuw nsw i64 %417, 24
  %475 = getelementptr inbounds float, float* %5, i64 %474
  %476 = bitcast float* %475 to <8 x float>*
  %477 = load <8 x float>, <8 x float>* %476, align 1, !tbaa !12
  %478 = add nuw nsw i64 %417, 32
  %479 = getelementptr inbounds float, float* %5, i64 %478
  %480 = bitcast float* %479 to <8 x float>*
  %481 = load <8 x float>, <8 x float>* %480, align 1, !tbaa !12
  %482 = add nuw nsw i64 %417, 40
  %483 = getelementptr inbounds float, float* %5, i64 %482
  %484 = bitcast float* %483 to <8 x float>*
  %485 = load <8 x float>, <8 x float>* %484, align 1, !tbaa !12
  %486 = add nuw nsw i64 %417, 48
  %487 = getelementptr inbounds float, float* %5, i64 %486
  %488 = bitcast float* %487 to <8 x float>*
  %489 = load <8 x float>, <8 x float>* %488, align 1, !tbaa !12
  %490 = add nuw nsw i64 %417, 56
  %491 = getelementptr inbounds float, float* %5, i64 %490
  %492 = bitcast float* %491 to <8 x float>*
  %493 = load <8 x float>, <8 x float>* %492, align 1, !tbaa !12
  %494 = add nuw nsw i64 %417, 64
  %495 = getelementptr inbounds float, float* %5, i64 %494
  %496 = bitcast float* %495 to <8 x float>*
  %497 = load <8 x float>, <8 x float>* %496, align 1, !tbaa !12
  %498 = add nuw nsw i64 %417, 72
  %499 = getelementptr inbounds float, float* %5, i64 %498
  %500 = bitcast float* %499 to <8 x float>*
  %501 = load <8 x float>, <8 x float>* %500, align 1, !tbaa !12
  %502 = add nuw nsw i64 %417, 80
  %503 = getelementptr inbounds float, float* %5, i64 %502
  %504 = bitcast float* %503 to <8 x float>*
  %505 = load <8 x float>, <8 x float>* %504, align 1, !tbaa !12
  %506 = add nsw i64 %417, %261
  %507 = getelementptr inbounds float, float* %3, i64 %506
  %508 = bitcast float* %507 to <8 x float>*
  %509 = load <8 x float>, <8 x float>* %508, align 1, !tbaa !12
  %510 = add nsw i64 %506, 8
  %511 = getelementptr inbounds float, float* %3, i64 %510
  %512 = bitcast float* %511 to <8 x float>*
  %513 = load <8 x float>, <8 x float>* %512, align 1, !tbaa !12
  %514 = add nsw i64 %506, 16
  %515 = getelementptr inbounds float, float* %3, i64 %514
  %516 = bitcast float* %515 to <8 x float>*
  %517 = load <8 x float>, <8 x float>* %516, align 1, !tbaa !12
  %518 = add nsw i64 %506, 24
  %519 = getelementptr inbounds float, float* %3, i64 %518
  %520 = bitcast float* %519 to <8 x float>*
  %521 = load <8 x float>, <8 x float>* %520, align 1, !tbaa !12
  %522 = add nsw i64 %506, 32
  %523 = getelementptr inbounds float, float* %3, i64 %522
  %524 = bitcast float* %523 to <8 x float>*
  %525 = load <8 x float>, <8 x float>* %524, align 1, !tbaa !12
  %526 = add nsw i64 %506, 40
  %527 = getelementptr inbounds float, float* %3, i64 %526
  %528 = bitcast float* %527 to <8 x float>*
  %529 = load <8 x float>, <8 x float>* %528, align 1, !tbaa !12
  %530 = add nsw i64 %506, 48
  %531 = getelementptr inbounds float, float* %3, i64 %530
  %532 = bitcast float* %531 to <8 x float>*
  %533 = load <8 x float>, <8 x float>* %532, align 1, !tbaa !12
  %534 = add nsw i64 %506, 56
  %535 = getelementptr inbounds float, float* %3, i64 %534
  %536 = bitcast float* %535 to <8 x float>*
  %537 = load <8 x float>, <8 x float>* %536, align 1, !tbaa !12
  %538 = add nsw i64 %506, 64
  %539 = getelementptr inbounds float, float* %3, i64 %538
  %540 = bitcast float* %539 to <8 x float>*
  %541 = load <8 x float>, <8 x float>* %540, align 1, !tbaa !12
  %542 = add nsw i64 %506, 72
  %543 = getelementptr inbounds float, float* %3, i64 %542
  %544 = bitcast float* %543 to <8 x float>*
  %545 = load <8 x float>, <8 x float>* %544, align 1, !tbaa !12
  %546 = add nsw i64 %506, 80
  %547 = getelementptr inbounds float, float* %3, i64 %546
  %548 = bitcast float* %547 to <8 x float>*
  %549 = load <8 x float>, <8 x float>* %548, align 1, !tbaa !12
  %550 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %509, <8 x float> %35, <8 x float> %465) #10
  %551 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %513, <8 x float> %35, <8 x float> %469) #10
  %552 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %517, <8 x float> %35, <8 x float> %473) #10
  %553 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %521, <8 x float> %35, <8 x float> %477) #10
  %554 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %525, <8 x float> %35, <8 x float> %481) #10
  %555 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %529, <8 x float> %35, <8 x float> %485) #10
  %556 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %533, <8 x float> %35, <8 x float> %489) #10
  %557 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %537, <8 x float> %35, <8 x float> %493) #10
  %558 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %541, <8 x float> %35, <8 x float> %497) #10
  %559 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %545, <8 x float> %35, <8 x float> %501) #10
  %560 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %549, <8 x float> %35, <8 x float> %505) #10
  store <8 x float> %550, <8 x float>* %464, align 1, !tbaa !12
  store <8 x float> %551, <8 x float>* %468, align 1, !tbaa !12
  store <8 x float> %552, <8 x float>* %472, align 1, !tbaa !12
  store <8 x float> %553, <8 x float>* %476, align 1, !tbaa !12
  store <8 x float> %554, <8 x float>* %480, align 1, !tbaa !12
  store <8 x float> %555, <8 x float>* %484, align 1, !tbaa !12
  store <8 x float> %556, <8 x float>* %488, align 1, !tbaa !12
  store <8 x float> %557, <8 x float>* %492, align 1, !tbaa !12
  store <8 x float> %558, <8 x float>* %496, align 1, !tbaa !12
  store <8 x float> %559, <8 x float>* %500, align 1, !tbaa !12
  store <8 x float> %560, <8 x float>* %504, align 1, !tbaa !12
  %561 = add nuw nsw i64 %417, 88
  %562 = icmp ult i64 %561, %262
  br i1 %562, label %416, label %410

563:                                              ; preds = %570, %92, %257, %410
  %564 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %565 = icmp sgt i32 %564, 0
  br i1 %565, label %566, label %1967

566:                                              ; preds = %563
  %567 = zext i32 %564 to i64
  %568 = trunc i64 %41 to i32
  %569 = mul nsw i32 %564, %568
  br label %723

570:                                              ; preds = %411, %570
  %571 = phi i64 [ 0, %411 ], [ %715, %570 ]
  %572 = getelementptr inbounds float, float* %5, i64 %571
  %573 = getelementptr inbounds float, float* %572, i64 8
  %574 = bitcast float* %573 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %574, i32 0, i32 1, i32 1)
  %575 = getelementptr inbounds float, float* %3, i64 %571
  %576 = getelementptr inbounds float, float* %575, i64 8
  %577 = bitcast float* %576 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %577, i32 0, i32 1, i32 1)
  %578 = getelementptr inbounds float, float* %572, i64 16
  %579 = bitcast float* %578 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %579, i32 0, i32 1, i32 1)
  %580 = getelementptr inbounds float, float* %575, i64 16
  %581 = bitcast float* %580 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %581, i32 0, i32 1, i32 1)
  %582 = getelementptr inbounds float, float* %572, i64 24
  %583 = bitcast float* %582 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %583, i32 0, i32 1, i32 1)
  %584 = getelementptr inbounds float, float* %575, i64 24
  %585 = bitcast float* %584 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %585, i32 0, i32 1, i32 1)
  %586 = getelementptr inbounds float, float* %572, i64 32
  %587 = bitcast float* %586 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %587, i32 0, i32 1, i32 1)
  %588 = getelementptr inbounds float, float* %575, i64 32
  %589 = bitcast float* %588 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %589, i32 0, i32 1, i32 1)
  %590 = getelementptr inbounds float, float* %572, i64 40
  %591 = bitcast float* %590 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %591, i32 0, i32 1, i32 1)
  %592 = getelementptr inbounds float, float* %575, i64 40
  %593 = bitcast float* %592 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %593, i32 0, i32 1, i32 1)
  %594 = getelementptr inbounds float, float* %572, i64 48
  %595 = bitcast float* %594 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %595, i32 0, i32 1, i32 1)
  %596 = getelementptr inbounds float, float* %575, i64 48
  %597 = bitcast float* %596 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %597, i32 0, i32 1, i32 1)
  %598 = getelementptr inbounds float, float* %572, i64 56
  %599 = bitcast float* %598 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %599, i32 0, i32 1, i32 1)
  %600 = getelementptr inbounds float, float* %575, i64 56
  %601 = bitcast float* %600 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %601, i32 0, i32 1, i32 1)
  %602 = getelementptr inbounds float, float* %572, i64 64
  %603 = bitcast float* %602 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %603, i32 0, i32 1, i32 1)
  %604 = getelementptr inbounds float, float* %575, i64 64
  %605 = bitcast float* %604 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %605, i32 0, i32 1, i32 1)
  %606 = getelementptr inbounds float, float* %572, i64 72
  %607 = bitcast float* %606 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %607, i32 0, i32 1, i32 1)
  %608 = getelementptr inbounds float, float* %575, i64 72
  %609 = bitcast float* %608 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %609, i32 0, i32 1, i32 1)
  %610 = getelementptr inbounds float, float* %572, i64 80
  %611 = bitcast float* %610 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %611, i32 0, i32 1, i32 1)
  %612 = getelementptr inbounds float, float* %575, i64 80
  %613 = bitcast float* %612 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %613, i32 0, i32 1, i32 1)
  %614 = getelementptr inbounds float, float* %572, i64 88
  %615 = bitcast float* %614 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %615, i32 0, i32 1, i32 1)
  %616 = getelementptr inbounds float, float* %575, i64 88
  %617 = bitcast float* %616 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %617, i32 0, i32 1, i32 1)
  %618 = bitcast float* %572 to <8 x float>*
  %619 = load <8 x float>, <8 x float>* %618, align 1, !tbaa !12
  %620 = add nuw nsw i64 %571, 8
  %621 = getelementptr inbounds float, float* %5, i64 %620
  %622 = bitcast float* %621 to <8 x float>*
  %623 = load <8 x float>, <8 x float>* %622, align 1, !tbaa !12
  %624 = add nuw nsw i64 %571, 16
  %625 = getelementptr inbounds float, float* %5, i64 %624
  %626 = bitcast float* %625 to <8 x float>*
  %627 = load <8 x float>, <8 x float>* %626, align 1, !tbaa !12
  %628 = add nuw nsw i64 %571, 24
  %629 = getelementptr inbounds float, float* %5, i64 %628
  %630 = bitcast float* %629 to <8 x float>*
  %631 = load <8 x float>, <8 x float>* %630, align 1, !tbaa !12
  %632 = add nuw nsw i64 %571, 32
  %633 = getelementptr inbounds float, float* %5, i64 %632
  %634 = bitcast float* %633 to <8 x float>*
  %635 = load <8 x float>, <8 x float>* %634, align 1, !tbaa !12
  %636 = add nuw nsw i64 %571, 40
  %637 = getelementptr inbounds float, float* %5, i64 %636
  %638 = bitcast float* %637 to <8 x float>*
  %639 = load <8 x float>, <8 x float>* %638, align 1, !tbaa !12
  %640 = add nuw nsw i64 %571, 48
  %641 = getelementptr inbounds float, float* %5, i64 %640
  %642 = bitcast float* %641 to <8 x float>*
  %643 = load <8 x float>, <8 x float>* %642, align 1, !tbaa !12
  %644 = add nuw nsw i64 %571, 56
  %645 = getelementptr inbounds float, float* %5, i64 %644
  %646 = bitcast float* %645 to <8 x float>*
  %647 = load <8 x float>, <8 x float>* %646, align 1, !tbaa !12
  %648 = add nuw nsw i64 %571, 64
  %649 = getelementptr inbounds float, float* %5, i64 %648
  %650 = bitcast float* %649 to <8 x float>*
  %651 = load <8 x float>, <8 x float>* %650, align 1, !tbaa !12
  %652 = add nuw nsw i64 %571, 72
  %653 = getelementptr inbounds float, float* %5, i64 %652
  %654 = bitcast float* %653 to <8 x float>*
  %655 = load <8 x float>, <8 x float>* %654, align 1, !tbaa !12
  %656 = add nuw nsw i64 %571, 80
  %657 = getelementptr inbounds float, float* %5, i64 %656
  %658 = bitcast float* %657 to <8 x float>*
  %659 = load <8 x float>, <8 x float>* %658, align 1, !tbaa !12
  %660 = add nsw i64 %571, %414
  %661 = getelementptr inbounds float, float* %3, i64 %660
  %662 = bitcast float* %661 to <8 x float>*
  %663 = load <8 x float>, <8 x float>* %662, align 1, !tbaa !12
  %664 = add nsw i64 %660, 8
  %665 = getelementptr inbounds float, float* %3, i64 %664
  %666 = bitcast float* %665 to <8 x float>*
  %667 = load <8 x float>, <8 x float>* %666, align 1, !tbaa !12
  %668 = add nsw i64 %660, 16
  %669 = getelementptr inbounds float, float* %3, i64 %668
  %670 = bitcast float* %669 to <8 x float>*
  %671 = load <8 x float>, <8 x float>* %670, align 1, !tbaa !12
  %672 = add nsw i64 %660, 24
  %673 = getelementptr inbounds float, float* %3, i64 %672
  %674 = bitcast float* %673 to <8 x float>*
  %675 = load <8 x float>, <8 x float>* %674, align 1, !tbaa !12
  %676 = add nsw i64 %660, 32
  %677 = getelementptr inbounds float, float* %3, i64 %676
  %678 = bitcast float* %677 to <8 x float>*
  %679 = load <8 x float>, <8 x float>* %678, align 1, !tbaa !12
  %680 = add nsw i64 %660, 40
  %681 = getelementptr inbounds float, float* %3, i64 %680
  %682 = bitcast float* %681 to <8 x float>*
  %683 = load <8 x float>, <8 x float>* %682, align 1, !tbaa !12
  %684 = add nsw i64 %660, 48
  %685 = getelementptr inbounds float, float* %3, i64 %684
  %686 = bitcast float* %685 to <8 x float>*
  %687 = load <8 x float>, <8 x float>* %686, align 1, !tbaa !12
  %688 = add nsw i64 %660, 56
  %689 = getelementptr inbounds float, float* %3, i64 %688
  %690 = bitcast float* %689 to <8 x float>*
  %691 = load <8 x float>, <8 x float>* %690, align 1, !tbaa !12
  %692 = add nsw i64 %660, 64
  %693 = getelementptr inbounds float, float* %3, i64 %692
  %694 = bitcast float* %693 to <8 x float>*
  %695 = load <8 x float>, <8 x float>* %694, align 1, !tbaa !12
  %696 = add nsw i64 %660, 72
  %697 = getelementptr inbounds float, float* %3, i64 %696
  %698 = bitcast float* %697 to <8 x float>*
  %699 = load <8 x float>, <8 x float>* %698, align 1, !tbaa !12
  %700 = add nsw i64 %660, 80
  %701 = getelementptr inbounds float, float* %3, i64 %700
  %702 = bitcast float* %701 to <8 x float>*
  %703 = load <8 x float>, <8 x float>* %702, align 1, !tbaa !12
  %704 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %663, <8 x float> %40, <8 x float> %619) #10
  %705 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %667, <8 x float> %40, <8 x float> %623) #10
  %706 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %671, <8 x float> %40, <8 x float> %627) #10
  %707 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %675, <8 x float> %40, <8 x float> %631) #10
  %708 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %679, <8 x float> %40, <8 x float> %635) #10
  %709 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %683, <8 x float> %40, <8 x float> %639) #10
  %710 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %687, <8 x float> %40, <8 x float> %643) #10
  %711 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %691, <8 x float> %40, <8 x float> %647) #10
  %712 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %695, <8 x float> %40, <8 x float> %651) #10
  %713 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %699, <8 x float> %40, <8 x float> %655) #10
  %714 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %703, <8 x float> %40, <8 x float> %659) #10
  store <8 x float> %704, <8 x float>* %618, align 1, !tbaa !12
  store <8 x float> %705, <8 x float>* %622, align 1, !tbaa !12
  store <8 x float> %706, <8 x float>* %626, align 1, !tbaa !12
  store <8 x float> %707, <8 x float>* %630, align 1, !tbaa !12
  store <8 x float> %708, <8 x float>* %634, align 1, !tbaa !12
  store <8 x float> %709, <8 x float>* %638, align 1, !tbaa !12
  store <8 x float> %710, <8 x float>* %642, align 1, !tbaa !12
  store <8 x float> %711, <8 x float>* %646, align 1, !tbaa !12
  store <8 x float> %712, <8 x float>* %650, align 1, !tbaa !12
  store <8 x float> %713, <8 x float>* %654, align 1, !tbaa !12
  store <8 x float> %714, <8 x float>* %658, align 1, !tbaa !12
  %715 = add nuw nsw i64 %571, 88
  %716 = icmp ult i64 %715, %415
  br i1 %716, label %570, label %563

717:                                              ; preds = %723
  br i1 %565, label %718, label %1188

718:                                              ; preds = %717
  %719 = trunc i64 %46 to i32
  %720 = mul nsw i32 %564, %719
  %721 = sext i32 %720 to i64
  %722 = zext i32 %564 to i64
  br label %888

723:                                              ; preds = %566, %723
  %724 = phi i64 [ 0, %566 ], [ %880, %723 ]
  %725 = getelementptr inbounds float, float* %5, i64 %724
  %726 = getelementptr inbounds float, float* %725, i64 8
  %727 = bitcast float* %726 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %727, i32 0, i32 1, i32 1)
  %728 = getelementptr inbounds float, float* %3, i64 %724
  %729 = getelementptr inbounds float, float* %728, i64 8
  %730 = bitcast float* %729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %730, i32 0, i32 1, i32 1)
  %731 = getelementptr inbounds float, float* %725, i64 16
  %732 = bitcast float* %731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %732, i32 0, i32 1, i32 1)
  %733 = getelementptr inbounds float, float* %728, i64 16
  %734 = bitcast float* %733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %734, i32 0, i32 1, i32 1)
  %735 = getelementptr inbounds float, float* %725, i64 24
  %736 = bitcast float* %735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %736, i32 0, i32 1, i32 1)
  %737 = getelementptr inbounds float, float* %728, i64 24
  %738 = bitcast float* %737 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %738, i32 0, i32 1, i32 1)
  %739 = getelementptr inbounds float, float* %725, i64 32
  %740 = bitcast float* %739 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %740, i32 0, i32 1, i32 1)
  %741 = getelementptr inbounds float, float* %728, i64 32
  %742 = bitcast float* %741 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %742, i32 0, i32 1, i32 1)
  %743 = getelementptr inbounds float, float* %725, i64 40
  %744 = bitcast float* %743 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %744, i32 0, i32 1, i32 1)
  %745 = getelementptr inbounds float, float* %728, i64 40
  %746 = bitcast float* %745 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %746, i32 0, i32 1, i32 1)
  %747 = getelementptr inbounds float, float* %725, i64 48
  %748 = bitcast float* %747 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %748, i32 0, i32 1, i32 1)
  %749 = getelementptr inbounds float, float* %728, i64 48
  %750 = bitcast float* %749 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %750, i32 0, i32 1, i32 1)
  %751 = getelementptr inbounds float, float* %725, i64 56
  %752 = bitcast float* %751 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %752, i32 0, i32 1, i32 1)
  %753 = getelementptr inbounds float, float* %728, i64 56
  %754 = bitcast float* %753 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %754, i32 0, i32 1, i32 1)
  %755 = getelementptr inbounds float, float* %725, i64 64
  %756 = bitcast float* %755 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %756, i32 0, i32 1, i32 1)
  %757 = getelementptr inbounds float, float* %728, i64 64
  %758 = bitcast float* %757 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %758, i32 0, i32 1, i32 1)
  %759 = getelementptr inbounds float, float* %725, i64 72
  %760 = bitcast float* %759 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %760, i32 0, i32 1, i32 1)
  %761 = getelementptr inbounds float, float* %728, i64 72
  %762 = bitcast float* %761 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %762, i32 0, i32 1, i32 1)
  %763 = getelementptr inbounds float, float* %725, i64 80
  %764 = bitcast float* %763 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %764, i32 0, i32 1, i32 1)
  %765 = getelementptr inbounds float, float* %728, i64 80
  %766 = bitcast float* %765 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %766, i32 0, i32 1, i32 1)
  %767 = getelementptr inbounds float, float* %725, i64 88
  %768 = bitcast float* %767 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %768, i32 0, i32 1, i32 1)
  %769 = getelementptr inbounds float, float* %728, i64 88
  %770 = bitcast float* %769 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %770, i32 0, i32 1, i32 1)
  %771 = bitcast float* %725 to <8 x float>*
  %772 = load <8 x float>, <8 x float>* %771, align 1, !tbaa !12
  %773 = add nuw nsw i64 %724, 8
  %774 = getelementptr inbounds float, float* %5, i64 %773
  %775 = bitcast float* %774 to <8 x float>*
  %776 = load <8 x float>, <8 x float>* %775, align 1, !tbaa !12
  %777 = add nuw nsw i64 %724, 16
  %778 = getelementptr inbounds float, float* %5, i64 %777
  %779 = bitcast float* %778 to <8 x float>*
  %780 = load <8 x float>, <8 x float>* %779, align 1, !tbaa !12
  %781 = add nuw nsw i64 %724, 24
  %782 = getelementptr inbounds float, float* %5, i64 %781
  %783 = bitcast float* %782 to <8 x float>*
  %784 = load <8 x float>, <8 x float>* %783, align 1, !tbaa !12
  %785 = add nuw nsw i64 %724, 32
  %786 = getelementptr inbounds float, float* %5, i64 %785
  %787 = bitcast float* %786 to <8 x float>*
  %788 = load <8 x float>, <8 x float>* %787, align 1, !tbaa !12
  %789 = add nuw nsw i64 %724, 40
  %790 = getelementptr inbounds float, float* %5, i64 %789
  %791 = bitcast float* %790 to <8 x float>*
  %792 = load <8 x float>, <8 x float>* %791, align 1, !tbaa !12
  %793 = add nuw nsw i64 %724, 48
  %794 = getelementptr inbounds float, float* %5, i64 %793
  %795 = bitcast float* %794 to <8 x float>*
  %796 = load <8 x float>, <8 x float>* %795, align 1, !tbaa !12
  %797 = add nuw nsw i64 %724, 56
  %798 = getelementptr inbounds float, float* %5, i64 %797
  %799 = bitcast float* %798 to <8 x float>*
  %800 = load <8 x float>, <8 x float>* %799, align 1, !tbaa !12
  %801 = add nuw nsw i64 %724, 64
  %802 = getelementptr inbounds float, float* %5, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nuw nsw i64 %724, 72
  %806 = getelementptr inbounds float, float* %5, i64 %805
  %807 = bitcast float* %806 to <8 x float>*
  %808 = load <8 x float>, <8 x float>* %807, align 1, !tbaa !12
  %809 = add nuw nsw i64 %724, 80
  %810 = getelementptr inbounds float, float* %5, i64 %809
  %811 = bitcast float* %810 to <8 x float>*
  %812 = load <8 x float>, <8 x float>* %811, align 1, !tbaa !12
  %813 = trunc i64 %724 to i32
  %814 = add nsw i32 %569, %813
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds float, float* %3, i64 %815
  %817 = bitcast float* %816 to <8 x float>*
  %818 = load <8 x float>, <8 x float>* %817, align 1, !tbaa !12
  %819 = add nsw i32 %814, 8
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds float, float* %3, i64 %820
  %822 = bitcast float* %821 to <8 x float>*
  %823 = load <8 x float>, <8 x float>* %822, align 1, !tbaa !12
  %824 = add nsw i32 %814, 16
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds float, float* %3, i64 %825
  %827 = bitcast float* %826 to <8 x float>*
  %828 = load <8 x float>, <8 x float>* %827, align 1, !tbaa !12
  %829 = add nsw i32 %814, 24
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds float, float* %3, i64 %830
  %832 = bitcast float* %831 to <8 x float>*
  %833 = load <8 x float>, <8 x float>* %832, align 1, !tbaa !12
  %834 = add nsw i32 %814, 32
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds float, float* %3, i64 %835
  %837 = bitcast float* %836 to <8 x float>*
  %838 = load <8 x float>, <8 x float>* %837, align 1, !tbaa !12
  %839 = add nsw i32 %814, 40
  %840 = sext i32 %839 to i64
  %841 = getelementptr inbounds float, float* %3, i64 %840
  %842 = bitcast float* %841 to <8 x float>*
  %843 = load <8 x float>, <8 x float>* %842, align 1, !tbaa !12
  %844 = add nsw i32 %814, 48
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds float, float* %3, i64 %845
  %847 = bitcast float* %846 to <8 x float>*
  %848 = load <8 x float>, <8 x float>* %847, align 1, !tbaa !12
  %849 = add nsw i32 %814, 56
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds float, float* %3, i64 %850
  %852 = bitcast float* %851 to <8 x float>*
  %853 = load <8 x float>, <8 x float>* %852, align 1, !tbaa !12
  %854 = add nsw i32 %814, 64
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds float, float* %3, i64 %855
  %857 = bitcast float* %856 to <8 x float>*
  %858 = load <8 x float>, <8 x float>* %857, align 1, !tbaa !12
  %859 = add nsw i32 %814, 72
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds float, float* %3, i64 %860
  %862 = bitcast float* %861 to <8 x float>*
  %863 = load <8 x float>, <8 x float>* %862, align 1, !tbaa !12
  %864 = add nsw i32 %814, 80
  %865 = sext i32 %864 to i64
  %866 = getelementptr inbounds float, float* %3, i64 %865
  %867 = bitcast float* %866 to <8 x float>*
  %868 = load <8 x float>, <8 x float>* %867, align 1, !tbaa !12
  %869 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %818, <8 x float> %45, <8 x float> %772) #10
  %870 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %823, <8 x float> %45, <8 x float> %776) #10
  %871 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %828, <8 x float> %45, <8 x float> %780) #10
  %872 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %833, <8 x float> %45, <8 x float> %784) #10
  %873 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %838, <8 x float> %45, <8 x float> %788) #10
  %874 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %843, <8 x float> %45, <8 x float> %792) #10
  %875 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %848, <8 x float> %45, <8 x float> %796) #10
  %876 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %853, <8 x float> %45, <8 x float> %800) #10
  %877 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %858, <8 x float> %45, <8 x float> %804) #10
  %878 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %863, <8 x float> %45, <8 x float> %808) #10
  %879 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %868, <8 x float> %45, <8 x float> %812) #10
  store <8 x float> %869, <8 x float>* %771, align 1, !tbaa !12
  store <8 x float> %870, <8 x float>* %775, align 1, !tbaa !12
  store <8 x float> %871, <8 x float>* %779, align 1, !tbaa !12
  store <8 x float> %872, <8 x float>* %783, align 1, !tbaa !12
  store <8 x float> %873, <8 x float>* %787, align 1, !tbaa !12
  store <8 x float> %874, <8 x float>* %791, align 1, !tbaa !12
  store <8 x float> %875, <8 x float>* %795, align 1, !tbaa !12
  store <8 x float> %876, <8 x float>* %799, align 1, !tbaa !12
  store <8 x float> %877, <8 x float>* %803, align 1, !tbaa !12
  store <8 x float> %878, <8 x float>* %807, align 1, !tbaa !12
  store <8 x float> %879, <8 x float>* %811, align 1, !tbaa !12
  %880 = add nuw nsw i64 %724, 88
  %881 = icmp ult i64 %880, %567
  br i1 %881, label %723, label %717

882:                                              ; preds = %888
  br i1 %565, label %883, label %1188

883:                                              ; preds = %882
  %884 = trunc i64 %51 to i32
  %885 = mul nsw i32 %564, %884
  %886 = sext i32 %885 to i64
  %887 = zext i32 %564 to i64
  br label %1041

888:                                              ; preds = %718, %888
  %889 = phi i64 [ 0, %718 ], [ %1033, %888 ]
  %890 = getelementptr inbounds float, float* %5, i64 %889
  %891 = getelementptr inbounds float, float* %890, i64 8
  %892 = bitcast float* %891 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %892, i32 0, i32 1, i32 1)
  %893 = getelementptr inbounds float, float* %3, i64 %889
  %894 = getelementptr inbounds float, float* %893, i64 8
  %895 = bitcast float* %894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %895, i32 0, i32 1, i32 1)
  %896 = getelementptr inbounds float, float* %890, i64 16
  %897 = bitcast float* %896 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %897, i32 0, i32 1, i32 1)
  %898 = getelementptr inbounds float, float* %893, i64 16
  %899 = bitcast float* %898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %899, i32 0, i32 1, i32 1)
  %900 = getelementptr inbounds float, float* %890, i64 24
  %901 = bitcast float* %900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %901, i32 0, i32 1, i32 1)
  %902 = getelementptr inbounds float, float* %893, i64 24
  %903 = bitcast float* %902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %903, i32 0, i32 1, i32 1)
  %904 = getelementptr inbounds float, float* %890, i64 32
  %905 = bitcast float* %904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %905, i32 0, i32 1, i32 1)
  %906 = getelementptr inbounds float, float* %893, i64 32
  %907 = bitcast float* %906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %907, i32 0, i32 1, i32 1)
  %908 = getelementptr inbounds float, float* %890, i64 40
  %909 = bitcast float* %908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %909, i32 0, i32 1, i32 1)
  %910 = getelementptr inbounds float, float* %893, i64 40
  %911 = bitcast float* %910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %911, i32 0, i32 1, i32 1)
  %912 = getelementptr inbounds float, float* %890, i64 48
  %913 = bitcast float* %912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %913, i32 0, i32 1, i32 1)
  %914 = getelementptr inbounds float, float* %893, i64 48
  %915 = bitcast float* %914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %915, i32 0, i32 1, i32 1)
  %916 = getelementptr inbounds float, float* %890, i64 56
  %917 = bitcast float* %916 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %917, i32 0, i32 1, i32 1)
  %918 = getelementptr inbounds float, float* %893, i64 56
  %919 = bitcast float* %918 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %919, i32 0, i32 1, i32 1)
  %920 = getelementptr inbounds float, float* %890, i64 64
  %921 = bitcast float* %920 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %921, i32 0, i32 1, i32 1)
  %922 = getelementptr inbounds float, float* %893, i64 64
  %923 = bitcast float* %922 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %923, i32 0, i32 1, i32 1)
  %924 = getelementptr inbounds float, float* %890, i64 72
  %925 = bitcast float* %924 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %925, i32 0, i32 1, i32 1)
  %926 = getelementptr inbounds float, float* %893, i64 72
  %927 = bitcast float* %926 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %927, i32 0, i32 1, i32 1)
  %928 = getelementptr inbounds float, float* %890, i64 80
  %929 = bitcast float* %928 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %929, i32 0, i32 1, i32 1)
  %930 = getelementptr inbounds float, float* %893, i64 80
  %931 = bitcast float* %930 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %931, i32 0, i32 1, i32 1)
  %932 = getelementptr inbounds float, float* %890, i64 88
  %933 = bitcast float* %932 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %933, i32 0, i32 1, i32 1)
  %934 = getelementptr inbounds float, float* %893, i64 88
  %935 = bitcast float* %934 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %935, i32 0, i32 1, i32 1)
  %936 = bitcast float* %890 to <8 x float>*
  %937 = load <8 x float>, <8 x float>* %936, align 1, !tbaa !12
  %938 = add nuw nsw i64 %889, 8
  %939 = getelementptr inbounds float, float* %5, i64 %938
  %940 = bitcast float* %939 to <8 x float>*
  %941 = load <8 x float>, <8 x float>* %940, align 1, !tbaa !12
  %942 = add nuw nsw i64 %889, 16
  %943 = getelementptr inbounds float, float* %5, i64 %942
  %944 = bitcast float* %943 to <8 x float>*
  %945 = load <8 x float>, <8 x float>* %944, align 1, !tbaa !12
  %946 = add nuw nsw i64 %889, 24
  %947 = getelementptr inbounds float, float* %5, i64 %946
  %948 = bitcast float* %947 to <8 x float>*
  %949 = load <8 x float>, <8 x float>* %948, align 1, !tbaa !12
  %950 = add nuw nsw i64 %889, 32
  %951 = getelementptr inbounds float, float* %5, i64 %950
  %952 = bitcast float* %951 to <8 x float>*
  %953 = load <8 x float>, <8 x float>* %952, align 1, !tbaa !12
  %954 = add nuw nsw i64 %889, 40
  %955 = getelementptr inbounds float, float* %5, i64 %954
  %956 = bitcast float* %955 to <8 x float>*
  %957 = load <8 x float>, <8 x float>* %956, align 1, !tbaa !12
  %958 = add nuw nsw i64 %889, 48
  %959 = getelementptr inbounds float, float* %5, i64 %958
  %960 = bitcast float* %959 to <8 x float>*
  %961 = load <8 x float>, <8 x float>* %960, align 1, !tbaa !12
  %962 = add nuw nsw i64 %889, 56
  %963 = getelementptr inbounds float, float* %5, i64 %962
  %964 = bitcast float* %963 to <8 x float>*
  %965 = load <8 x float>, <8 x float>* %964, align 1, !tbaa !12
  %966 = add nuw nsw i64 %889, 64
  %967 = getelementptr inbounds float, float* %5, i64 %966
  %968 = bitcast float* %967 to <8 x float>*
  %969 = load <8 x float>, <8 x float>* %968, align 1, !tbaa !12
  %970 = add nuw nsw i64 %889, 72
  %971 = getelementptr inbounds float, float* %5, i64 %970
  %972 = bitcast float* %971 to <8 x float>*
  %973 = load <8 x float>, <8 x float>* %972, align 1, !tbaa !12
  %974 = add nuw nsw i64 %889, 80
  %975 = getelementptr inbounds float, float* %5, i64 %974
  %976 = bitcast float* %975 to <8 x float>*
  %977 = load <8 x float>, <8 x float>* %976, align 1, !tbaa !12
  %978 = add nsw i64 %889, %721
  %979 = getelementptr inbounds float, float* %3, i64 %978
  %980 = bitcast float* %979 to <8 x float>*
  %981 = load <8 x float>, <8 x float>* %980, align 1, !tbaa !12
  %982 = add nsw i64 %978, 8
  %983 = getelementptr inbounds float, float* %3, i64 %982
  %984 = bitcast float* %983 to <8 x float>*
  %985 = load <8 x float>, <8 x float>* %984, align 1, !tbaa !12
  %986 = add nsw i64 %978, 16
  %987 = getelementptr inbounds float, float* %3, i64 %986
  %988 = bitcast float* %987 to <8 x float>*
  %989 = load <8 x float>, <8 x float>* %988, align 1, !tbaa !12
  %990 = add nsw i64 %978, 24
  %991 = getelementptr inbounds float, float* %3, i64 %990
  %992 = bitcast float* %991 to <8 x float>*
  %993 = load <8 x float>, <8 x float>* %992, align 1, !tbaa !12
  %994 = add nsw i64 %978, 32
  %995 = getelementptr inbounds float, float* %3, i64 %994
  %996 = bitcast float* %995 to <8 x float>*
  %997 = load <8 x float>, <8 x float>* %996, align 1, !tbaa !12
  %998 = add nsw i64 %978, 40
  %999 = getelementptr inbounds float, float* %3, i64 %998
  %1000 = bitcast float* %999 to <8 x float>*
  %1001 = load <8 x float>, <8 x float>* %1000, align 1, !tbaa !12
  %1002 = add nsw i64 %978, 48
  %1003 = getelementptr inbounds float, float* %3, i64 %1002
  %1004 = bitcast float* %1003 to <8 x float>*
  %1005 = load <8 x float>, <8 x float>* %1004, align 1, !tbaa !12
  %1006 = add nsw i64 %978, 56
  %1007 = getelementptr inbounds float, float* %3, i64 %1006
  %1008 = bitcast float* %1007 to <8 x float>*
  %1009 = load <8 x float>, <8 x float>* %1008, align 1, !tbaa !12
  %1010 = add nsw i64 %978, 64
  %1011 = getelementptr inbounds float, float* %3, i64 %1010
  %1012 = bitcast float* %1011 to <8 x float>*
  %1013 = load <8 x float>, <8 x float>* %1012, align 1, !tbaa !12
  %1014 = add nsw i64 %978, 72
  %1015 = getelementptr inbounds float, float* %3, i64 %1014
  %1016 = bitcast float* %1015 to <8 x float>*
  %1017 = load <8 x float>, <8 x float>* %1016, align 1, !tbaa !12
  %1018 = add nsw i64 %978, 80
  %1019 = getelementptr inbounds float, float* %3, i64 %1018
  %1020 = bitcast float* %1019 to <8 x float>*
  %1021 = load <8 x float>, <8 x float>* %1020, align 1, !tbaa !12
  %1022 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %981, <8 x float> %50, <8 x float> %937) #10
  %1023 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %985, <8 x float> %50, <8 x float> %941) #10
  %1024 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %989, <8 x float> %50, <8 x float> %945) #10
  %1025 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %993, <8 x float> %50, <8 x float> %949) #10
  %1026 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %997, <8 x float> %50, <8 x float> %953) #10
  %1027 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1001, <8 x float> %50, <8 x float> %957) #10
  %1028 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1005, <8 x float> %50, <8 x float> %961) #10
  %1029 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1009, <8 x float> %50, <8 x float> %965) #10
  %1030 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1013, <8 x float> %50, <8 x float> %969) #10
  %1031 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1017, <8 x float> %50, <8 x float> %973) #10
  %1032 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1021, <8 x float> %50, <8 x float> %977) #10
  store <8 x float> %1022, <8 x float>* %936, align 1, !tbaa !12
  store <8 x float> %1023, <8 x float>* %940, align 1, !tbaa !12
  store <8 x float> %1024, <8 x float>* %944, align 1, !tbaa !12
  store <8 x float> %1025, <8 x float>* %948, align 1, !tbaa !12
  store <8 x float> %1026, <8 x float>* %952, align 1, !tbaa !12
  store <8 x float> %1027, <8 x float>* %956, align 1, !tbaa !12
  store <8 x float> %1028, <8 x float>* %960, align 1, !tbaa !12
  store <8 x float> %1029, <8 x float>* %964, align 1, !tbaa !12
  store <8 x float> %1030, <8 x float>* %968, align 1, !tbaa !12
  store <8 x float> %1031, <8 x float>* %972, align 1, !tbaa !12
  store <8 x float> %1032, <8 x float>* %976, align 1, !tbaa !12
  %1033 = add nuw nsw i64 %889, 88
  %1034 = icmp ult i64 %1033, %722
  br i1 %1034, label %888, label %882

1035:                                             ; preds = %1041
  br i1 %565, label %1036, label %1188

1036:                                             ; preds = %1035
  %1037 = trunc i64 %56 to i32
  %1038 = mul nsw i32 %564, %1037
  %1039 = sext i32 %1038 to i64
  %1040 = zext i32 %564 to i64
  br label %1195

1041:                                             ; preds = %883, %1041
  %1042 = phi i64 [ 0, %883 ], [ %1186, %1041 ]
  %1043 = getelementptr inbounds float, float* %5, i64 %1042
  %1044 = getelementptr inbounds float, float* %1043, i64 8
  %1045 = bitcast float* %1044 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1045, i32 0, i32 1, i32 1)
  %1046 = getelementptr inbounds float, float* %3, i64 %1042
  %1047 = getelementptr inbounds float, float* %1046, i64 8
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = getelementptr inbounds float, float* %1043, i64 16
  %1050 = bitcast float* %1049 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1050, i32 0, i32 1, i32 1)
  %1051 = getelementptr inbounds float, float* %1046, i64 16
  %1052 = bitcast float* %1051 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1052, i32 0, i32 1, i32 1)
  %1053 = getelementptr inbounds float, float* %1043, i64 24
  %1054 = bitcast float* %1053 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1054, i32 0, i32 1, i32 1)
  %1055 = getelementptr inbounds float, float* %1046, i64 24
  %1056 = bitcast float* %1055 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1056, i32 0, i32 1, i32 1)
  %1057 = getelementptr inbounds float, float* %1043, i64 32
  %1058 = bitcast float* %1057 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1058, i32 0, i32 1, i32 1)
  %1059 = getelementptr inbounds float, float* %1046, i64 32
  %1060 = bitcast float* %1059 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1060, i32 0, i32 1, i32 1)
  %1061 = getelementptr inbounds float, float* %1043, i64 40
  %1062 = bitcast float* %1061 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1062, i32 0, i32 1, i32 1)
  %1063 = getelementptr inbounds float, float* %1046, i64 40
  %1064 = bitcast float* %1063 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1064, i32 0, i32 1, i32 1)
  %1065 = getelementptr inbounds float, float* %1043, i64 48
  %1066 = bitcast float* %1065 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1066, i32 0, i32 1, i32 1)
  %1067 = getelementptr inbounds float, float* %1046, i64 48
  %1068 = bitcast float* %1067 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1068, i32 0, i32 1, i32 1)
  %1069 = getelementptr inbounds float, float* %1043, i64 56
  %1070 = bitcast float* %1069 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1070, i32 0, i32 1, i32 1)
  %1071 = getelementptr inbounds float, float* %1046, i64 56
  %1072 = bitcast float* %1071 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1072, i32 0, i32 1, i32 1)
  %1073 = getelementptr inbounds float, float* %1043, i64 64
  %1074 = bitcast float* %1073 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1074, i32 0, i32 1, i32 1)
  %1075 = getelementptr inbounds float, float* %1046, i64 64
  %1076 = bitcast float* %1075 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1076, i32 0, i32 1, i32 1)
  %1077 = getelementptr inbounds float, float* %1043, i64 72
  %1078 = bitcast float* %1077 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1078, i32 0, i32 1, i32 1)
  %1079 = getelementptr inbounds float, float* %1046, i64 72
  %1080 = bitcast float* %1079 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1080, i32 0, i32 1, i32 1)
  %1081 = getelementptr inbounds float, float* %1043, i64 80
  %1082 = bitcast float* %1081 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1082, i32 0, i32 1, i32 1)
  %1083 = getelementptr inbounds float, float* %1046, i64 80
  %1084 = bitcast float* %1083 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1084, i32 0, i32 1, i32 1)
  %1085 = getelementptr inbounds float, float* %1043, i64 88
  %1086 = bitcast float* %1085 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1086, i32 0, i32 1, i32 1)
  %1087 = getelementptr inbounds float, float* %1046, i64 88
  %1088 = bitcast float* %1087 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1088, i32 0, i32 1, i32 1)
  %1089 = bitcast float* %1043 to <8 x float>*
  %1090 = load <8 x float>, <8 x float>* %1089, align 1, !tbaa !12
  %1091 = add nuw nsw i64 %1042, 8
  %1092 = getelementptr inbounds float, float* %5, i64 %1091
  %1093 = bitcast float* %1092 to <8 x float>*
  %1094 = load <8 x float>, <8 x float>* %1093, align 1, !tbaa !12
  %1095 = add nuw nsw i64 %1042, 16
  %1096 = getelementptr inbounds float, float* %5, i64 %1095
  %1097 = bitcast float* %1096 to <8 x float>*
  %1098 = load <8 x float>, <8 x float>* %1097, align 1, !tbaa !12
  %1099 = add nuw nsw i64 %1042, 24
  %1100 = getelementptr inbounds float, float* %5, i64 %1099
  %1101 = bitcast float* %1100 to <8 x float>*
  %1102 = load <8 x float>, <8 x float>* %1101, align 1, !tbaa !12
  %1103 = add nuw nsw i64 %1042, 32
  %1104 = getelementptr inbounds float, float* %5, i64 %1103
  %1105 = bitcast float* %1104 to <8 x float>*
  %1106 = load <8 x float>, <8 x float>* %1105, align 1, !tbaa !12
  %1107 = add nuw nsw i64 %1042, 40
  %1108 = getelementptr inbounds float, float* %5, i64 %1107
  %1109 = bitcast float* %1108 to <8 x float>*
  %1110 = load <8 x float>, <8 x float>* %1109, align 1, !tbaa !12
  %1111 = add nuw nsw i64 %1042, 48
  %1112 = getelementptr inbounds float, float* %5, i64 %1111
  %1113 = bitcast float* %1112 to <8 x float>*
  %1114 = load <8 x float>, <8 x float>* %1113, align 1, !tbaa !12
  %1115 = add nuw nsw i64 %1042, 56
  %1116 = getelementptr inbounds float, float* %5, i64 %1115
  %1117 = bitcast float* %1116 to <8 x float>*
  %1118 = load <8 x float>, <8 x float>* %1117, align 1, !tbaa !12
  %1119 = add nuw nsw i64 %1042, 64
  %1120 = getelementptr inbounds float, float* %5, i64 %1119
  %1121 = bitcast float* %1120 to <8 x float>*
  %1122 = load <8 x float>, <8 x float>* %1121, align 1, !tbaa !12
  %1123 = add nuw nsw i64 %1042, 72
  %1124 = getelementptr inbounds float, float* %5, i64 %1123
  %1125 = bitcast float* %1124 to <8 x float>*
  %1126 = load <8 x float>, <8 x float>* %1125, align 1, !tbaa !12
  %1127 = add nuw nsw i64 %1042, 80
  %1128 = getelementptr inbounds float, float* %5, i64 %1127
  %1129 = bitcast float* %1128 to <8 x float>*
  %1130 = load <8 x float>, <8 x float>* %1129, align 1, !tbaa !12
  %1131 = add nsw i64 %1042, %886
  %1132 = getelementptr inbounds float, float* %3, i64 %1131
  %1133 = bitcast float* %1132 to <8 x float>*
  %1134 = load <8 x float>, <8 x float>* %1133, align 1, !tbaa !12
  %1135 = add nsw i64 %1131, 8
  %1136 = getelementptr inbounds float, float* %3, i64 %1135
  %1137 = bitcast float* %1136 to <8 x float>*
  %1138 = load <8 x float>, <8 x float>* %1137, align 1, !tbaa !12
  %1139 = add nsw i64 %1131, 16
  %1140 = getelementptr inbounds float, float* %3, i64 %1139
  %1141 = bitcast float* %1140 to <8 x float>*
  %1142 = load <8 x float>, <8 x float>* %1141, align 1, !tbaa !12
  %1143 = add nsw i64 %1131, 24
  %1144 = getelementptr inbounds float, float* %3, i64 %1143
  %1145 = bitcast float* %1144 to <8 x float>*
  %1146 = load <8 x float>, <8 x float>* %1145, align 1, !tbaa !12
  %1147 = add nsw i64 %1131, 32
  %1148 = getelementptr inbounds float, float* %3, i64 %1147
  %1149 = bitcast float* %1148 to <8 x float>*
  %1150 = load <8 x float>, <8 x float>* %1149, align 1, !tbaa !12
  %1151 = add nsw i64 %1131, 40
  %1152 = getelementptr inbounds float, float* %3, i64 %1151
  %1153 = bitcast float* %1152 to <8 x float>*
  %1154 = load <8 x float>, <8 x float>* %1153, align 1, !tbaa !12
  %1155 = add nsw i64 %1131, 48
  %1156 = getelementptr inbounds float, float* %3, i64 %1155
  %1157 = bitcast float* %1156 to <8 x float>*
  %1158 = load <8 x float>, <8 x float>* %1157, align 1, !tbaa !12
  %1159 = add nsw i64 %1131, 56
  %1160 = getelementptr inbounds float, float* %3, i64 %1159
  %1161 = bitcast float* %1160 to <8 x float>*
  %1162 = load <8 x float>, <8 x float>* %1161, align 1, !tbaa !12
  %1163 = add nsw i64 %1131, 64
  %1164 = getelementptr inbounds float, float* %3, i64 %1163
  %1165 = bitcast float* %1164 to <8 x float>*
  %1166 = load <8 x float>, <8 x float>* %1165, align 1, !tbaa !12
  %1167 = add nsw i64 %1131, 72
  %1168 = getelementptr inbounds float, float* %3, i64 %1167
  %1169 = bitcast float* %1168 to <8 x float>*
  %1170 = load <8 x float>, <8 x float>* %1169, align 1, !tbaa !12
  %1171 = add nsw i64 %1131, 80
  %1172 = getelementptr inbounds float, float* %3, i64 %1171
  %1173 = bitcast float* %1172 to <8 x float>*
  %1174 = load <8 x float>, <8 x float>* %1173, align 1, !tbaa !12
  %1175 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1134, <8 x float> %55, <8 x float> %1090) #10
  %1176 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1138, <8 x float> %55, <8 x float> %1094) #10
  %1177 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1142, <8 x float> %55, <8 x float> %1098) #10
  %1178 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1146, <8 x float> %55, <8 x float> %1102) #10
  %1179 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1150, <8 x float> %55, <8 x float> %1106) #10
  %1180 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1154, <8 x float> %55, <8 x float> %1110) #10
  %1181 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1158, <8 x float> %55, <8 x float> %1114) #10
  %1182 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1162, <8 x float> %55, <8 x float> %1118) #10
  %1183 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1166, <8 x float> %55, <8 x float> %1122) #10
  %1184 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1170, <8 x float> %55, <8 x float> %1126) #10
  %1185 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1174, <8 x float> %55, <8 x float> %1130) #10
  store <8 x float> %1175, <8 x float>* %1089, align 1, !tbaa !12
  store <8 x float> %1176, <8 x float>* %1093, align 1, !tbaa !12
  store <8 x float> %1177, <8 x float>* %1097, align 1, !tbaa !12
  store <8 x float> %1178, <8 x float>* %1101, align 1, !tbaa !12
  store <8 x float> %1179, <8 x float>* %1105, align 1, !tbaa !12
  store <8 x float> %1180, <8 x float>* %1109, align 1, !tbaa !12
  store <8 x float> %1181, <8 x float>* %1113, align 1, !tbaa !12
  store <8 x float> %1182, <8 x float>* %1117, align 1, !tbaa !12
  store <8 x float> %1183, <8 x float>* %1121, align 1, !tbaa !12
  store <8 x float> %1184, <8 x float>* %1125, align 1, !tbaa !12
  store <8 x float> %1185, <8 x float>* %1129, align 1, !tbaa !12
  %1186 = add nuw nsw i64 %1042, 88
  %1187 = icmp ult i64 %1186, %887
  br i1 %1187, label %1041, label %1035

1188:                                             ; preds = %1195, %717, %882, %1035
  %1189 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1190 = icmp sgt i32 %1189, 0
  br i1 %1190, label %1191, label %1967

1191:                                             ; preds = %1188
  %1192 = zext i32 %1189 to i64
  %1193 = trunc i64 %61 to i32
  %1194 = mul nsw i32 %1189, %1193
  br label %1348

1195:                                             ; preds = %1036, %1195
  %1196 = phi i64 [ 0, %1036 ], [ %1340, %1195 ]
  %1197 = getelementptr inbounds float, float* %5, i64 %1196
  %1198 = getelementptr inbounds float, float* %1197, i64 8
  %1199 = bitcast float* %1198 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1199, i32 0, i32 1, i32 1)
  %1200 = getelementptr inbounds float, float* %3, i64 %1196
  %1201 = getelementptr inbounds float, float* %1200, i64 8
  %1202 = bitcast float* %1201 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1202, i32 0, i32 1, i32 1)
  %1203 = getelementptr inbounds float, float* %1197, i64 16
  %1204 = bitcast float* %1203 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1204, i32 0, i32 1, i32 1)
  %1205 = getelementptr inbounds float, float* %1200, i64 16
  %1206 = bitcast float* %1205 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1206, i32 0, i32 1, i32 1)
  %1207 = getelementptr inbounds float, float* %1197, i64 24
  %1208 = bitcast float* %1207 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1208, i32 0, i32 1, i32 1)
  %1209 = getelementptr inbounds float, float* %1200, i64 24
  %1210 = bitcast float* %1209 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1210, i32 0, i32 1, i32 1)
  %1211 = getelementptr inbounds float, float* %1197, i64 32
  %1212 = bitcast float* %1211 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1212, i32 0, i32 1, i32 1)
  %1213 = getelementptr inbounds float, float* %1200, i64 32
  %1214 = bitcast float* %1213 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1214, i32 0, i32 1, i32 1)
  %1215 = getelementptr inbounds float, float* %1197, i64 40
  %1216 = bitcast float* %1215 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1216, i32 0, i32 1, i32 1)
  %1217 = getelementptr inbounds float, float* %1200, i64 40
  %1218 = bitcast float* %1217 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1218, i32 0, i32 1, i32 1)
  %1219 = getelementptr inbounds float, float* %1197, i64 48
  %1220 = bitcast float* %1219 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1220, i32 0, i32 1, i32 1)
  %1221 = getelementptr inbounds float, float* %1200, i64 48
  %1222 = bitcast float* %1221 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1222, i32 0, i32 1, i32 1)
  %1223 = getelementptr inbounds float, float* %1197, i64 56
  %1224 = bitcast float* %1223 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1224, i32 0, i32 1, i32 1)
  %1225 = getelementptr inbounds float, float* %1200, i64 56
  %1226 = bitcast float* %1225 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1226, i32 0, i32 1, i32 1)
  %1227 = getelementptr inbounds float, float* %1197, i64 64
  %1228 = bitcast float* %1227 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1228, i32 0, i32 1, i32 1)
  %1229 = getelementptr inbounds float, float* %1200, i64 64
  %1230 = bitcast float* %1229 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1230, i32 0, i32 1, i32 1)
  %1231 = getelementptr inbounds float, float* %1197, i64 72
  %1232 = bitcast float* %1231 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1232, i32 0, i32 1, i32 1)
  %1233 = getelementptr inbounds float, float* %1200, i64 72
  %1234 = bitcast float* %1233 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1234, i32 0, i32 1, i32 1)
  %1235 = getelementptr inbounds float, float* %1197, i64 80
  %1236 = bitcast float* %1235 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1236, i32 0, i32 1, i32 1)
  %1237 = getelementptr inbounds float, float* %1200, i64 80
  %1238 = bitcast float* %1237 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1238, i32 0, i32 1, i32 1)
  %1239 = getelementptr inbounds float, float* %1197, i64 88
  %1240 = bitcast float* %1239 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1240, i32 0, i32 1, i32 1)
  %1241 = getelementptr inbounds float, float* %1200, i64 88
  %1242 = bitcast float* %1241 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1242, i32 0, i32 1, i32 1)
  %1243 = bitcast float* %1197 to <8 x float>*
  %1244 = load <8 x float>, <8 x float>* %1243, align 1, !tbaa !12
  %1245 = add nuw nsw i64 %1196, 8
  %1246 = getelementptr inbounds float, float* %5, i64 %1245
  %1247 = bitcast float* %1246 to <8 x float>*
  %1248 = load <8 x float>, <8 x float>* %1247, align 1, !tbaa !12
  %1249 = add nuw nsw i64 %1196, 16
  %1250 = getelementptr inbounds float, float* %5, i64 %1249
  %1251 = bitcast float* %1250 to <8 x float>*
  %1252 = load <8 x float>, <8 x float>* %1251, align 1, !tbaa !12
  %1253 = add nuw nsw i64 %1196, 24
  %1254 = getelementptr inbounds float, float* %5, i64 %1253
  %1255 = bitcast float* %1254 to <8 x float>*
  %1256 = load <8 x float>, <8 x float>* %1255, align 1, !tbaa !12
  %1257 = add nuw nsw i64 %1196, 32
  %1258 = getelementptr inbounds float, float* %5, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nuw nsw i64 %1196, 40
  %1262 = getelementptr inbounds float, float* %5, i64 %1261
  %1263 = bitcast float* %1262 to <8 x float>*
  %1264 = load <8 x float>, <8 x float>* %1263, align 1, !tbaa !12
  %1265 = add nuw nsw i64 %1196, 48
  %1266 = getelementptr inbounds float, float* %5, i64 %1265
  %1267 = bitcast float* %1266 to <8 x float>*
  %1268 = load <8 x float>, <8 x float>* %1267, align 1, !tbaa !12
  %1269 = add nuw nsw i64 %1196, 56
  %1270 = getelementptr inbounds float, float* %5, i64 %1269
  %1271 = bitcast float* %1270 to <8 x float>*
  %1272 = load <8 x float>, <8 x float>* %1271, align 1, !tbaa !12
  %1273 = add nuw nsw i64 %1196, 64
  %1274 = getelementptr inbounds float, float* %5, i64 %1273
  %1275 = bitcast float* %1274 to <8 x float>*
  %1276 = load <8 x float>, <8 x float>* %1275, align 1, !tbaa !12
  %1277 = add nuw nsw i64 %1196, 72
  %1278 = getelementptr inbounds float, float* %5, i64 %1277
  %1279 = bitcast float* %1278 to <8 x float>*
  %1280 = load <8 x float>, <8 x float>* %1279, align 1, !tbaa !12
  %1281 = add nuw nsw i64 %1196, 80
  %1282 = getelementptr inbounds float, float* %5, i64 %1281
  %1283 = bitcast float* %1282 to <8 x float>*
  %1284 = load <8 x float>, <8 x float>* %1283, align 1, !tbaa !12
  %1285 = add nsw i64 %1196, %1039
  %1286 = getelementptr inbounds float, float* %3, i64 %1285
  %1287 = bitcast float* %1286 to <8 x float>*
  %1288 = load <8 x float>, <8 x float>* %1287, align 1, !tbaa !12
  %1289 = add nsw i64 %1285, 8
  %1290 = getelementptr inbounds float, float* %3, i64 %1289
  %1291 = bitcast float* %1290 to <8 x float>*
  %1292 = load <8 x float>, <8 x float>* %1291, align 1, !tbaa !12
  %1293 = add nsw i64 %1285, 16
  %1294 = getelementptr inbounds float, float* %3, i64 %1293
  %1295 = bitcast float* %1294 to <8 x float>*
  %1296 = load <8 x float>, <8 x float>* %1295, align 1, !tbaa !12
  %1297 = add nsw i64 %1285, 24
  %1298 = getelementptr inbounds float, float* %3, i64 %1297
  %1299 = bitcast float* %1298 to <8 x float>*
  %1300 = load <8 x float>, <8 x float>* %1299, align 1, !tbaa !12
  %1301 = add nsw i64 %1285, 32
  %1302 = getelementptr inbounds float, float* %3, i64 %1301
  %1303 = bitcast float* %1302 to <8 x float>*
  %1304 = load <8 x float>, <8 x float>* %1303, align 1, !tbaa !12
  %1305 = add nsw i64 %1285, 40
  %1306 = getelementptr inbounds float, float* %3, i64 %1305
  %1307 = bitcast float* %1306 to <8 x float>*
  %1308 = load <8 x float>, <8 x float>* %1307, align 1, !tbaa !12
  %1309 = add nsw i64 %1285, 48
  %1310 = getelementptr inbounds float, float* %3, i64 %1309
  %1311 = bitcast float* %1310 to <8 x float>*
  %1312 = load <8 x float>, <8 x float>* %1311, align 1, !tbaa !12
  %1313 = add nsw i64 %1285, 56
  %1314 = getelementptr inbounds float, float* %3, i64 %1313
  %1315 = bitcast float* %1314 to <8 x float>*
  %1316 = load <8 x float>, <8 x float>* %1315, align 1, !tbaa !12
  %1317 = add nsw i64 %1285, 64
  %1318 = getelementptr inbounds float, float* %3, i64 %1317
  %1319 = bitcast float* %1318 to <8 x float>*
  %1320 = load <8 x float>, <8 x float>* %1319, align 1, !tbaa !12
  %1321 = add nsw i64 %1285, 72
  %1322 = getelementptr inbounds float, float* %3, i64 %1321
  %1323 = bitcast float* %1322 to <8 x float>*
  %1324 = load <8 x float>, <8 x float>* %1323, align 1, !tbaa !12
  %1325 = add nsw i64 %1285, 80
  %1326 = getelementptr inbounds float, float* %3, i64 %1325
  %1327 = bitcast float* %1326 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1288, <8 x float> %60, <8 x float> %1244) #10
  %1330 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1292, <8 x float> %60, <8 x float> %1248) #10
  %1331 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1296, <8 x float> %60, <8 x float> %1252) #10
  %1332 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1300, <8 x float> %60, <8 x float> %1256) #10
  %1333 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1304, <8 x float> %60, <8 x float> %1260) #10
  %1334 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1308, <8 x float> %60, <8 x float> %1264) #10
  %1335 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1312, <8 x float> %60, <8 x float> %1268) #10
  %1336 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1316, <8 x float> %60, <8 x float> %1272) #10
  %1337 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1320, <8 x float> %60, <8 x float> %1276) #10
  %1338 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1324, <8 x float> %60, <8 x float> %1280) #10
  %1339 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1328, <8 x float> %60, <8 x float> %1284) #10
  store <8 x float> %1329, <8 x float>* %1243, align 1, !tbaa !12
  store <8 x float> %1330, <8 x float>* %1247, align 1, !tbaa !12
  store <8 x float> %1331, <8 x float>* %1251, align 1, !tbaa !12
  store <8 x float> %1332, <8 x float>* %1255, align 1, !tbaa !12
  store <8 x float> %1333, <8 x float>* %1259, align 1, !tbaa !12
  store <8 x float> %1334, <8 x float>* %1263, align 1, !tbaa !12
  store <8 x float> %1335, <8 x float>* %1267, align 1, !tbaa !12
  store <8 x float> %1336, <8 x float>* %1271, align 1, !tbaa !12
  store <8 x float> %1337, <8 x float>* %1275, align 1, !tbaa !12
  store <8 x float> %1338, <8 x float>* %1279, align 1, !tbaa !12
  store <8 x float> %1339, <8 x float>* %1283, align 1, !tbaa !12
  %1340 = add nuw nsw i64 %1196, 88
  %1341 = icmp ult i64 %1340, %1040
  br i1 %1341, label %1195, label %1188

1342:                                             ; preds = %1348
  br i1 %1190, label %1343, label %1813

1343:                                             ; preds = %1342
  %1344 = trunc i64 %66 to i32
  %1345 = mul nsw i32 %1189, %1344
  %1346 = sext i32 %1345 to i64
  %1347 = zext i32 %1189 to i64
  br label %1513

1348:                                             ; preds = %1191, %1348
  %1349 = phi i64 [ 0, %1191 ], [ %1505, %1348 ]
  %1350 = getelementptr inbounds float, float* %5, i64 %1349
  %1351 = getelementptr inbounds float, float* %1350, i64 8
  %1352 = bitcast float* %1351 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1352, i32 0, i32 1, i32 1)
  %1353 = getelementptr inbounds float, float* %3, i64 %1349
  %1354 = getelementptr inbounds float, float* %1353, i64 8
  %1355 = bitcast float* %1354 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1355, i32 0, i32 1, i32 1)
  %1356 = getelementptr inbounds float, float* %1350, i64 16
  %1357 = bitcast float* %1356 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1357, i32 0, i32 1, i32 1)
  %1358 = getelementptr inbounds float, float* %1353, i64 16
  %1359 = bitcast float* %1358 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1359, i32 0, i32 1, i32 1)
  %1360 = getelementptr inbounds float, float* %1350, i64 24
  %1361 = bitcast float* %1360 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1361, i32 0, i32 1, i32 1)
  %1362 = getelementptr inbounds float, float* %1353, i64 24
  %1363 = bitcast float* %1362 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1363, i32 0, i32 1, i32 1)
  %1364 = getelementptr inbounds float, float* %1350, i64 32
  %1365 = bitcast float* %1364 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1365, i32 0, i32 1, i32 1)
  %1366 = getelementptr inbounds float, float* %1353, i64 32
  %1367 = bitcast float* %1366 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1367, i32 0, i32 1, i32 1)
  %1368 = getelementptr inbounds float, float* %1350, i64 40
  %1369 = bitcast float* %1368 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1369, i32 0, i32 1, i32 1)
  %1370 = getelementptr inbounds float, float* %1353, i64 40
  %1371 = bitcast float* %1370 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1371, i32 0, i32 1, i32 1)
  %1372 = getelementptr inbounds float, float* %1350, i64 48
  %1373 = bitcast float* %1372 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1373, i32 0, i32 1, i32 1)
  %1374 = getelementptr inbounds float, float* %1353, i64 48
  %1375 = bitcast float* %1374 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1375, i32 0, i32 1, i32 1)
  %1376 = getelementptr inbounds float, float* %1350, i64 56
  %1377 = bitcast float* %1376 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1377, i32 0, i32 1, i32 1)
  %1378 = getelementptr inbounds float, float* %1353, i64 56
  %1379 = bitcast float* %1378 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1379, i32 0, i32 1, i32 1)
  %1380 = getelementptr inbounds float, float* %1350, i64 64
  %1381 = bitcast float* %1380 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1381, i32 0, i32 1, i32 1)
  %1382 = getelementptr inbounds float, float* %1353, i64 64
  %1383 = bitcast float* %1382 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1383, i32 0, i32 1, i32 1)
  %1384 = getelementptr inbounds float, float* %1350, i64 72
  %1385 = bitcast float* %1384 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1385, i32 0, i32 1, i32 1)
  %1386 = getelementptr inbounds float, float* %1353, i64 72
  %1387 = bitcast float* %1386 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1387, i32 0, i32 1, i32 1)
  %1388 = getelementptr inbounds float, float* %1350, i64 80
  %1389 = bitcast float* %1388 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1389, i32 0, i32 1, i32 1)
  %1390 = getelementptr inbounds float, float* %1353, i64 80
  %1391 = bitcast float* %1390 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1391, i32 0, i32 1, i32 1)
  %1392 = getelementptr inbounds float, float* %1350, i64 88
  %1393 = bitcast float* %1392 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1393, i32 0, i32 1, i32 1)
  %1394 = getelementptr inbounds float, float* %1353, i64 88
  %1395 = bitcast float* %1394 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1395, i32 0, i32 1, i32 1)
  %1396 = bitcast float* %1350 to <8 x float>*
  %1397 = load <8 x float>, <8 x float>* %1396, align 1, !tbaa !12
  %1398 = add nuw nsw i64 %1349, 8
  %1399 = getelementptr inbounds float, float* %5, i64 %1398
  %1400 = bitcast float* %1399 to <8 x float>*
  %1401 = load <8 x float>, <8 x float>* %1400, align 1, !tbaa !12
  %1402 = add nuw nsw i64 %1349, 16
  %1403 = getelementptr inbounds float, float* %5, i64 %1402
  %1404 = bitcast float* %1403 to <8 x float>*
  %1405 = load <8 x float>, <8 x float>* %1404, align 1, !tbaa !12
  %1406 = add nuw nsw i64 %1349, 24
  %1407 = getelementptr inbounds float, float* %5, i64 %1406
  %1408 = bitcast float* %1407 to <8 x float>*
  %1409 = load <8 x float>, <8 x float>* %1408, align 1, !tbaa !12
  %1410 = add nuw nsw i64 %1349, 32
  %1411 = getelementptr inbounds float, float* %5, i64 %1410
  %1412 = bitcast float* %1411 to <8 x float>*
  %1413 = load <8 x float>, <8 x float>* %1412, align 1, !tbaa !12
  %1414 = add nuw nsw i64 %1349, 40
  %1415 = getelementptr inbounds float, float* %5, i64 %1414
  %1416 = bitcast float* %1415 to <8 x float>*
  %1417 = load <8 x float>, <8 x float>* %1416, align 1, !tbaa !12
  %1418 = add nuw nsw i64 %1349, 48
  %1419 = getelementptr inbounds float, float* %5, i64 %1418
  %1420 = bitcast float* %1419 to <8 x float>*
  %1421 = load <8 x float>, <8 x float>* %1420, align 1, !tbaa !12
  %1422 = add nuw nsw i64 %1349, 56
  %1423 = getelementptr inbounds float, float* %5, i64 %1422
  %1424 = bitcast float* %1423 to <8 x float>*
  %1425 = load <8 x float>, <8 x float>* %1424, align 1, !tbaa !12
  %1426 = add nuw nsw i64 %1349, 64
  %1427 = getelementptr inbounds float, float* %5, i64 %1426
  %1428 = bitcast float* %1427 to <8 x float>*
  %1429 = load <8 x float>, <8 x float>* %1428, align 1, !tbaa !12
  %1430 = add nuw nsw i64 %1349, 72
  %1431 = getelementptr inbounds float, float* %5, i64 %1430
  %1432 = bitcast float* %1431 to <8 x float>*
  %1433 = load <8 x float>, <8 x float>* %1432, align 1, !tbaa !12
  %1434 = add nuw nsw i64 %1349, 80
  %1435 = getelementptr inbounds float, float* %5, i64 %1434
  %1436 = bitcast float* %1435 to <8 x float>*
  %1437 = load <8 x float>, <8 x float>* %1436, align 1, !tbaa !12
  %1438 = trunc i64 %1349 to i32
  %1439 = add nsw i32 %1194, %1438
  %1440 = sext i32 %1439 to i64
  %1441 = getelementptr inbounds float, float* %3, i64 %1440
  %1442 = bitcast float* %1441 to <8 x float>*
  %1443 = load <8 x float>, <8 x float>* %1442, align 1, !tbaa !12
  %1444 = add nsw i32 %1439, 8
  %1445 = sext i32 %1444 to i64
  %1446 = getelementptr inbounds float, float* %3, i64 %1445
  %1447 = bitcast float* %1446 to <8 x float>*
  %1448 = load <8 x float>, <8 x float>* %1447, align 1, !tbaa !12
  %1449 = add nsw i32 %1439, 16
  %1450 = sext i32 %1449 to i64
  %1451 = getelementptr inbounds float, float* %3, i64 %1450
  %1452 = bitcast float* %1451 to <8 x float>*
  %1453 = load <8 x float>, <8 x float>* %1452, align 1, !tbaa !12
  %1454 = add nsw i32 %1439, 24
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds float, float* %3, i64 %1455
  %1457 = bitcast float* %1456 to <8 x float>*
  %1458 = load <8 x float>, <8 x float>* %1457, align 1, !tbaa !12
  %1459 = add nsw i32 %1439, 32
  %1460 = sext i32 %1459 to i64
  %1461 = getelementptr inbounds float, float* %3, i64 %1460
  %1462 = bitcast float* %1461 to <8 x float>*
  %1463 = load <8 x float>, <8 x float>* %1462, align 1, !tbaa !12
  %1464 = add nsw i32 %1439, 40
  %1465 = sext i32 %1464 to i64
  %1466 = getelementptr inbounds float, float* %3, i64 %1465
  %1467 = bitcast float* %1466 to <8 x float>*
  %1468 = load <8 x float>, <8 x float>* %1467, align 1, !tbaa !12
  %1469 = add nsw i32 %1439, 48
  %1470 = sext i32 %1469 to i64
  %1471 = getelementptr inbounds float, float* %3, i64 %1470
  %1472 = bitcast float* %1471 to <8 x float>*
  %1473 = load <8 x float>, <8 x float>* %1472, align 1, !tbaa !12
  %1474 = add nsw i32 %1439, 56
  %1475 = sext i32 %1474 to i64
  %1476 = getelementptr inbounds float, float* %3, i64 %1475
  %1477 = bitcast float* %1476 to <8 x float>*
  %1478 = load <8 x float>, <8 x float>* %1477, align 1, !tbaa !12
  %1479 = add nsw i32 %1439, 64
  %1480 = sext i32 %1479 to i64
  %1481 = getelementptr inbounds float, float* %3, i64 %1480
  %1482 = bitcast float* %1481 to <8 x float>*
  %1483 = load <8 x float>, <8 x float>* %1482, align 1, !tbaa !12
  %1484 = add nsw i32 %1439, 72
  %1485 = sext i32 %1484 to i64
  %1486 = getelementptr inbounds float, float* %3, i64 %1485
  %1487 = bitcast float* %1486 to <8 x float>*
  %1488 = load <8 x float>, <8 x float>* %1487, align 1, !tbaa !12
  %1489 = add nsw i32 %1439, 80
  %1490 = sext i32 %1489 to i64
  %1491 = getelementptr inbounds float, float* %3, i64 %1490
  %1492 = bitcast float* %1491 to <8 x float>*
  %1493 = load <8 x float>, <8 x float>* %1492, align 1, !tbaa !12
  %1494 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1443, <8 x float> %65, <8 x float> %1397) #10
  %1495 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1448, <8 x float> %65, <8 x float> %1401) #10
  %1496 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1453, <8 x float> %65, <8 x float> %1405) #10
  %1497 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1458, <8 x float> %65, <8 x float> %1409) #10
  %1498 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1463, <8 x float> %65, <8 x float> %1413) #10
  %1499 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1468, <8 x float> %65, <8 x float> %1417) #10
  %1500 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1473, <8 x float> %65, <8 x float> %1421) #10
  %1501 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1478, <8 x float> %65, <8 x float> %1425) #10
  %1502 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1483, <8 x float> %65, <8 x float> %1429) #10
  %1503 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1488, <8 x float> %65, <8 x float> %1433) #10
  %1504 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1493, <8 x float> %65, <8 x float> %1437) #10
  store <8 x float> %1494, <8 x float>* %1396, align 1, !tbaa !12
  store <8 x float> %1495, <8 x float>* %1400, align 1, !tbaa !12
  store <8 x float> %1496, <8 x float>* %1404, align 1, !tbaa !12
  store <8 x float> %1497, <8 x float>* %1408, align 1, !tbaa !12
  store <8 x float> %1498, <8 x float>* %1412, align 1, !tbaa !12
  store <8 x float> %1499, <8 x float>* %1416, align 1, !tbaa !12
  store <8 x float> %1500, <8 x float>* %1420, align 1, !tbaa !12
  store <8 x float> %1501, <8 x float>* %1424, align 1, !tbaa !12
  store <8 x float> %1502, <8 x float>* %1428, align 1, !tbaa !12
  store <8 x float> %1503, <8 x float>* %1432, align 1, !tbaa !12
  store <8 x float> %1504, <8 x float>* %1436, align 1, !tbaa !12
  %1505 = add nuw nsw i64 %1349, 88
  %1506 = icmp ult i64 %1505, %1192
  br i1 %1506, label %1348, label %1342

1507:                                             ; preds = %1513
  br i1 %1190, label %1508, label %1813

1508:                                             ; preds = %1507
  %1509 = trunc i64 %71 to i32
  %1510 = mul nsw i32 %1189, %1509
  %1511 = sext i32 %1510 to i64
  %1512 = zext i32 %1189 to i64
  br label %1666

1513:                                             ; preds = %1343, %1513
  %1514 = phi i64 [ 0, %1343 ], [ %1658, %1513 ]
  %1515 = getelementptr inbounds float, float* %5, i64 %1514
  %1516 = getelementptr inbounds float, float* %1515, i64 8
  %1517 = bitcast float* %1516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1517, i32 0, i32 1, i32 1)
  %1518 = getelementptr inbounds float, float* %3, i64 %1514
  %1519 = getelementptr inbounds float, float* %1518, i64 8
  %1520 = bitcast float* %1519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1520, i32 0, i32 1, i32 1)
  %1521 = getelementptr inbounds float, float* %1515, i64 16
  %1522 = bitcast float* %1521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1522, i32 0, i32 1, i32 1)
  %1523 = getelementptr inbounds float, float* %1518, i64 16
  %1524 = bitcast float* %1523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1524, i32 0, i32 1, i32 1)
  %1525 = getelementptr inbounds float, float* %1515, i64 24
  %1526 = bitcast float* %1525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1526, i32 0, i32 1, i32 1)
  %1527 = getelementptr inbounds float, float* %1518, i64 24
  %1528 = bitcast float* %1527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1528, i32 0, i32 1, i32 1)
  %1529 = getelementptr inbounds float, float* %1515, i64 32
  %1530 = bitcast float* %1529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1530, i32 0, i32 1, i32 1)
  %1531 = getelementptr inbounds float, float* %1518, i64 32
  %1532 = bitcast float* %1531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1532, i32 0, i32 1, i32 1)
  %1533 = getelementptr inbounds float, float* %1515, i64 40
  %1534 = bitcast float* %1533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1534, i32 0, i32 1, i32 1)
  %1535 = getelementptr inbounds float, float* %1518, i64 40
  %1536 = bitcast float* %1535 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1536, i32 0, i32 1, i32 1)
  %1537 = getelementptr inbounds float, float* %1515, i64 48
  %1538 = bitcast float* %1537 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1538, i32 0, i32 1, i32 1)
  %1539 = getelementptr inbounds float, float* %1518, i64 48
  %1540 = bitcast float* %1539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1540, i32 0, i32 1, i32 1)
  %1541 = getelementptr inbounds float, float* %1515, i64 56
  %1542 = bitcast float* %1541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1542, i32 0, i32 1, i32 1)
  %1543 = getelementptr inbounds float, float* %1518, i64 56
  %1544 = bitcast float* %1543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1544, i32 0, i32 1, i32 1)
  %1545 = getelementptr inbounds float, float* %1515, i64 64
  %1546 = bitcast float* %1545 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1546, i32 0, i32 1, i32 1)
  %1547 = getelementptr inbounds float, float* %1518, i64 64
  %1548 = bitcast float* %1547 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1548, i32 0, i32 1, i32 1)
  %1549 = getelementptr inbounds float, float* %1515, i64 72
  %1550 = bitcast float* %1549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1550, i32 0, i32 1, i32 1)
  %1551 = getelementptr inbounds float, float* %1518, i64 72
  %1552 = bitcast float* %1551 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1552, i32 0, i32 1, i32 1)
  %1553 = getelementptr inbounds float, float* %1515, i64 80
  %1554 = bitcast float* %1553 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1554, i32 0, i32 1, i32 1)
  %1555 = getelementptr inbounds float, float* %1518, i64 80
  %1556 = bitcast float* %1555 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1556, i32 0, i32 1, i32 1)
  %1557 = getelementptr inbounds float, float* %1515, i64 88
  %1558 = bitcast float* %1557 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1558, i32 0, i32 1, i32 1)
  %1559 = getelementptr inbounds float, float* %1518, i64 88
  %1560 = bitcast float* %1559 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1560, i32 0, i32 1, i32 1)
  %1561 = bitcast float* %1515 to <8 x float>*
  %1562 = load <8 x float>, <8 x float>* %1561, align 1, !tbaa !12
  %1563 = add nuw nsw i64 %1514, 8
  %1564 = getelementptr inbounds float, float* %5, i64 %1563
  %1565 = bitcast float* %1564 to <8 x float>*
  %1566 = load <8 x float>, <8 x float>* %1565, align 1, !tbaa !12
  %1567 = add nuw nsw i64 %1514, 16
  %1568 = getelementptr inbounds float, float* %5, i64 %1567
  %1569 = bitcast float* %1568 to <8 x float>*
  %1570 = load <8 x float>, <8 x float>* %1569, align 1, !tbaa !12
  %1571 = add nuw nsw i64 %1514, 24
  %1572 = getelementptr inbounds float, float* %5, i64 %1571
  %1573 = bitcast float* %1572 to <8 x float>*
  %1574 = load <8 x float>, <8 x float>* %1573, align 1, !tbaa !12
  %1575 = add nuw nsw i64 %1514, 32
  %1576 = getelementptr inbounds float, float* %5, i64 %1575
  %1577 = bitcast float* %1576 to <8 x float>*
  %1578 = load <8 x float>, <8 x float>* %1577, align 1, !tbaa !12
  %1579 = add nuw nsw i64 %1514, 40
  %1580 = getelementptr inbounds float, float* %5, i64 %1579
  %1581 = bitcast float* %1580 to <8 x float>*
  %1582 = load <8 x float>, <8 x float>* %1581, align 1, !tbaa !12
  %1583 = add nuw nsw i64 %1514, 48
  %1584 = getelementptr inbounds float, float* %5, i64 %1583
  %1585 = bitcast float* %1584 to <8 x float>*
  %1586 = load <8 x float>, <8 x float>* %1585, align 1, !tbaa !12
  %1587 = add nuw nsw i64 %1514, 56
  %1588 = getelementptr inbounds float, float* %5, i64 %1587
  %1589 = bitcast float* %1588 to <8 x float>*
  %1590 = load <8 x float>, <8 x float>* %1589, align 1, !tbaa !12
  %1591 = add nuw nsw i64 %1514, 64
  %1592 = getelementptr inbounds float, float* %5, i64 %1591
  %1593 = bitcast float* %1592 to <8 x float>*
  %1594 = load <8 x float>, <8 x float>* %1593, align 1, !tbaa !12
  %1595 = add nuw nsw i64 %1514, 72
  %1596 = getelementptr inbounds float, float* %5, i64 %1595
  %1597 = bitcast float* %1596 to <8 x float>*
  %1598 = load <8 x float>, <8 x float>* %1597, align 1, !tbaa !12
  %1599 = add nuw nsw i64 %1514, 80
  %1600 = getelementptr inbounds float, float* %5, i64 %1599
  %1601 = bitcast float* %1600 to <8 x float>*
  %1602 = load <8 x float>, <8 x float>* %1601, align 1, !tbaa !12
  %1603 = add nsw i64 %1514, %1346
  %1604 = getelementptr inbounds float, float* %3, i64 %1603
  %1605 = bitcast float* %1604 to <8 x float>*
  %1606 = load <8 x float>, <8 x float>* %1605, align 1, !tbaa !12
  %1607 = add nsw i64 %1603, 8
  %1608 = getelementptr inbounds float, float* %3, i64 %1607
  %1609 = bitcast float* %1608 to <8 x float>*
  %1610 = load <8 x float>, <8 x float>* %1609, align 1, !tbaa !12
  %1611 = add nsw i64 %1603, 16
  %1612 = getelementptr inbounds float, float* %3, i64 %1611
  %1613 = bitcast float* %1612 to <8 x float>*
  %1614 = load <8 x float>, <8 x float>* %1613, align 1, !tbaa !12
  %1615 = add nsw i64 %1603, 24
  %1616 = getelementptr inbounds float, float* %3, i64 %1615
  %1617 = bitcast float* %1616 to <8 x float>*
  %1618 = load <8 x float>, <8 x float>* %1617, align 1, !tbaa !12
  %1619 = add nsw i64 %1603, 32
  %1620 = getelementptr inbounds float, float* %3, i64 %1619
  %1621 = bitcast float* %1620 to <8 x float>*
  %1622 = load <8 x float>, <8 x float>* %1621, align 1, !tbaa !12
  %1623 = add nsw i64 %1603, 40
  %1624 = getelementptr inbounds float, float* %3, i64 %1623
  %1625 = bitcast float* %1624 to <8 x float>*
  %1626 = load <8 x float>, <8 x float>* %1625, align 1, !tbaa !12
  %1627 = add nsw i64 %1603, 48
  %1628 = getelementptr inbounds float, float* %3, i64 %1627
  %1629 = bitcast float* %1628 to <8 x float>*
  %1630 = load <8 x float>, <8 x float>* %1629, align 1, !tbaa !12
  %1631 = add nsw i64 %1603, 56
  %1632 = getelementptr inbounds float, float* %3, i64 %1631
  %1633 = bitcast float* %1632 to <8 x float>*
  %1634 = load <8 x float>, <8 x float>* %1633, align 1, !tbaa !12
  %1635 = add nsw i64 %1603, 64
  %1636 = getelementptr inbounds float, float* %3, i64 %1635
  %1637 = bitcast float* %1636 to <8 x float>*
  %1638 = load <8 x float>, <8 x float>* %1637, align 1, !tbaa !12
  %1639 = add nsw i64 %1603, 72
  %1640 = getelementptr inbounds float, float* %3, i64 %1639
  %1641 = bitcast float* %1640 to <8 x float>*
  %1642 = load <8 x float>, <8 x float>* %1641, align 1, !tbaa !12
  %1643 = add nsw i64 %1603, 80
  %1644 = getelementptr inbounds float, float* %3, i64 %1643
  %1645 = bitcast float* %1644 to <8 x float>*
  %1646 = load <8 x float>, <8 x float>* %1645, align 1, !tbaa !12
  %1647 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1606, <8 x float> %70, <8 x float> %1562) #10
  %1648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1610, <8 x float> %70, <8 x float> %1566) #10
  %1649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1614, <8 x float> %70, <8 x float> %1570) #10
  %1650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1618, <8 x float> %70, <8 x float> %1574) #10
  %1651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1622, <8 x float> %70, <8 x float> %1578) #10
  %1652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1626, <8 x float> %70, <8 x float> %1582) #10
  %1653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1630, <8 x float> %70, <8 x float> %1586) #10
  %1654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1634, <8 x float> %70, <8 x float> %1590) #10
  %1655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1638, <8 x float> %70, <8 x float> %1594) #10
  %1656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1642, <8 x float> %70, <8 x float> %1598) #10
  %1657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1646, <8 x float> %70, <8 x float> %1602) #10
  store <8 x float> %1647, <8 x float>* %1561, align 1, !tbaa !12
  store <8 x float> %1648, <8 x float>* %1565, align 1, !tbaa !12
  store <8 x float> %1649, <8 x float>* %1569, align 1, !tbaa !12
  store <8 x float> %1650, <8 x float>* %1573, align 1, !tbaa !12
  store <8 x float> %1651, <8 x float>* %1577, align 1, !tbaa !12
  store <8 x float> %1652, <8 x float>* %1581, align 1, !tbaa !12
  store <8 x float> %1653, <8 x float>* %1585, align 1, !tbaa !12
  store <8 x float> %1654, <8 x float>* %1589, align 1, !tbaa !12
  store <8 x float> %1655, <8 x float>* %1593, align 1, !tbaa !12
  store <8 x float> %1656, <8 x float>* %1597, align 1, !tbaa !12
  store <8 x float> %1657, <8 x float>* %1601, align 1, !tbaa !12
  %1658 = add nuw nsw i64 %1514, 88
  %1659 = icmp ult i64 %1658, %1347
  br i1 %1659, label %1513, label %1507

1660:                                             ; preds = %1666
  br i1 %1190, label %1661, label %1813

1661:                                             ; preds = %1660
  %1662 = trunc i64 %76 to i32
  %1663 = mul nsw i32 %1189, %1662
  %1664 = sext i32 %1663 to i64
  %1665 = zext i32 %1189 to i64
  br label %1820

1666:                                             ; preds = %1508, %1666
  %1667 = phi i64 [ 0, %1508 ], [ %1811, %1666 ]
  %1668 = getelementptr inbounds float, float* %5, i64 %1667
  %1669 = getelementptr inbounds float, float* %1668, i64 8
  %1670 = bitcast float* %1669 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1670, i32 0, i32 1, i32 1)
  %1671 = getelementptr inbounds float, float* %3, i64 %1667
  %1672 = getelementptr inbounds float, float* %1671, i64 8
  %1673 = bitcast float* %1672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1673, i32 0, i32 1, i32 1)
  %1674 = getelementptr inbounds float, float* %1668, i64 16
  %1675 = bitcast float* %1674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1675, i32 0, i32 1, i32 1)
  %1676 = getelementptr inbounds float, float* %1671, i64 16
  %1677 = bitcast float* %1676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1677, i32 0, i32 1, i32 1)
  %1678 = getelementptr inbounds float, float* %1668, i64 24
  %1679 = bitcast float* %1678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1679, i32 0, i32 1, i32 1)
  %1680 = getelementptr inbounds float, float* %1671, i64 24
  %1681 = bitcast float* %1680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1681, i32 0, i32 1, i32 1)
  %1682 = getelementptr inbounds float, float* %1668, i64 32
  %1683 = bitcast float* %1682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1683, i32 0, i32 1, i32 1)
  %1684 = getelementptr inbounds float, float* %1671, i64 32
  %1685 = bitcast float* %1684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1685, i32 0, i32 1, i32 1)
  %1686 = getelementptr inbounds float, float* %1668, i64 40
  %1687 = bitcast float* %1686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1687, i32 0, i32 1, i32 1)
  %1688 = getelementptr inbounds float, float* %1671, i64 40
  %1689 = bitcast float* %1688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1689, i32 0, i32 1, i32 1)
  %1690 = getelementptr inbounds float, float* %1668, i64 48
  %1691 = bitcast float* %1690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1691, i32 0, i32 1, i32 1)
  %1692 = getelementptr inbounds float, float* %1671, i64 48
  %1693 = bitcast float* %1692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1693, i32 0, i32 1, i32 1)
  %1694 = getelementptr inbounds float, float* %1668, i64 56
  %1695 = bitcast float* %1694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1695, i32 0, i32 1, i32 1)
  %1696 = getelementptr inbounds float, float* %1671, i64 56
  %1697 = bitcast float* %1696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1697, i32 0, i32 1, i32 1)
  %1698 = getelementptr inbounds float, float* %1668, i64 64
  %1699 = bitcast float* %1698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1699, i32 0, i32 1, i32 1)
  %1700 = getelementptr inbounds float, float* %1671, i64 64
  %1701 = bitcast float* %1700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1701, i32 0, i32 1, i32 1)
  %1702 = getelementptr inbounds float, float* %1668, i64 72
  %1703 = bitcast float* %1702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1703, i32 0, i32 1, i32 1)
  %1704 = getelementptr inbounds float, float* %1671, i64 72
  %1705 = bitcast float* %1704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1705, i32 0, i32 1, i32 1)
  %1706 = getelementptr inbounds float, float* %1668, i64 80
  %1707 = bitcast float* %1706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1707, i32 0, i32 1, i32 1)
  %1708 = getelementptr inbounds float, float* %1671, i64 80
  %1709 = bitcast float* %1708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1709, i32 0, i32 1, i32 1)
  %1710 = getelementptr inbounds float, float* %1668, i64 88
  %1711 = bitcast float* %1710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1711, i32 0, i32 1, i32 1)
  %1712 = getelementptr inbounds float, float* %1671, i64 88
  %1713 = bitcast float* %1712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1713, i32 0, i32 1, i32 1)
  %1714 = bitcast float* %1668 to <8 x float>*
  %1715 = load <8 x float>, <8 x float>* %1714, align 1, !tbaa !12
  %1716 = add nuw nsw i64 %1667, 8
  %1717 = getelementptr inbounds float, float* %5, i64 %1716
  %1718 = bitcast float* %1717 to <8 x float>*
  %1719 = load <8 x float>, <8 x float>* %1718, align 1, !tbaa !12
  %1720 = add nuw nsw i64 %1667, 16
  %1721 = getelementptr inbounds float, float* %5, i64 %1720
  %1722 = bitcast float* %1721 to <8 x float>*
  %1723 = load <8 x float>, <8 x float>* %1722, align 1, !tbaa !12
  %1724 = add nuw nsw i64 %1667, 24
  %1725 = getelementptr inbounds float, float* %5, i64 %1724
  %1726 = bitcast float* %1725 to <8 x float>*
  %1727 = load <8 x float>, <8 x float>* %1726, align 1, !tbaa !12
  %1728 = add nuw nsw i64 %1667, 32
  %1729 = getelementptr inbounds float, float* %5, i64 %1728
  %1730 = bitcast float* %1729 to <8 x float>*
  %1731 = load <8 x float>, <8 x float>* %1730, align 1, !tbaa !12
  %1732 = add nuw nsw i64 %1667, 40
  %1733 = getelementptr inbounds float, float* %5, i64 %1732
  %1734 = bitcast float* %1733 to <8 x float>*
  %1735 = load <8 x float>, <8 x float>* %1734, align 1, !tbaa !12
  %1736 = add nuw nsw i64 %1667, 48
  %1737 = getelementptr inbounds float, float* %5, i64 %1736
  %1738 = bitcast float* %1737 to <8 x float>*
  %1739 = load <8 x float>, <8 x float>* %1738, align 1, !tbaa !12
  %1740 = add nuw nsw i64 %1667, 56
  %1741 = getelementptr inbounds float, float* %5, i64 %1740
  %1742 = bitcast float* %1741 to <8 x float>*
  %1743 = load <8 x float>, <8 x float>* %1742, align 1, !tbaa !12
  %1744 = add nuw nsw i64 %1667, 64
  %1745 = getelementptr inbounds float, float* %5, i64 %1744
  %1746 = bitcast float* %1745 to <8 x float>*
  %1747 = load <8 x float>, <8 x float>* %1746, align 1, !tbaa !12
  %1748 = add nuw nsw i64 %1667, 72
  %1749 = getelementptr inbounds float, float* %5, i64 %1748
  %1750 = bitcast float* %1749 to <8 x float>*
  %1751 = load <8 x float>, <8 x float>* %1750, align 1, !tbaa !12
  %1752 = add nuw nsw i64 %1667, 80
  %1753 = getelementptr inbounds float, float* %5, i64 %1752
  %1754 = bitcast float* %1753 to <8 x float>*
  %1755 = load <8 x float>, <8 x float>* %1754, align 1, !tbaa !12
  %1756 = add nsw i64 %1667, %1511
  %1757 = getelementptr inbounds float, float* %3, i64 %1756
  %1758 = bitcast float* %1757 to <8 x float>*
  %1759 = load <8 x float>, <8 x float>* %1758, align 1, !tbaa !12
  %1760 = add nsw i64 %1756, 8
  %1761 = getelementptr inbounds float, float* %3, i64 %1760
  %1762 = bitcast float* %1761 to <8 x float>*
  %1763 = load <8 x float>, <8 x float>* %1762, align 1, !tbaa !12
  %1764 = add nsw i64 %1756, 16
  %1765 = getelementptr inbounds float, float* %3, i64 %1764
  %1766 = bitcast float* %1765 to <8 x float>*
  %1767 = load <8 x float>, <8 x float>* %1766, align 1, !tbaa !12
  %1768 = add nsw i64 %1756, 24
  %1769 = getelementptr inbounds float, float* %3, i64 %1768
  %1770 = bitcast float* %1769 to <8 x float>*
  %1771 = load <8 x float>, <8 x float>* %1770, align 1, !tbaa !12
  %1772 = add nsw i64 %1756, 32
  %1773 = getelementptr inbounds float, float* %3, i64 %1772
  %1774 = bitcast float* %1773 to <8 x float>*
  %1775 = load <8 x float>, <8 x float>* %1774, align 1, !tbaa !12
  %1776 = add nsw i64 %1756, 40
  %1777 = getelementptr inbounds float, float* %3, i64 %1776
  %1778 = bitcast float* %1777 to <8 x float>*
  %1779 = load <8 x float>, <8 x float>* %1778, align 1, !tbaa !12
  %1780 = add nsw i64 %1756, 48
  %1781 = getelementptr inbounds float, float* %3, i64 %1780
  %1782 = bitcast float* %1781 to <8 x float>*
  %1783 = load <8 x float>, <8 x float>* %1782, align 1, !tbaa !12
  %1784 = add nsw i64 %1756, 56
  %1785 = getelementptr inbounds float, float* %3, i64 %1784
  %1786 = bitcast float* %1785 to <8 x float>*
  %1787 = load <8 x float>, <8 x float>* %1786, align 1, !tbaa !12
  %1788 = add nsw i64 %1756, 64
  %1789 = getelementptr inbounds float, float* %3, i64 %1788
  %1790 = bitcast float* %1789 to <8 x float>*
  %1791 = load <8 x float>, <8 x float>* %1790, align 1, !tbaa !12
  %1792 = add nsw i64 %1756, 72
  %1793 = getelementptr inbounds float, float* %3, i64 %1792
  %1794 = bitcast float* %1793 to <8 x float>*
  %1795 = load <8 x float>, <8 x float>* %1794, align 1, !tbaa !12
  %1796 = add nsw i64 %1756, 80
  %1797 = getelementptr inbounds float, float* %3, i64 %1796
  %1798 = bitcast float* %1797 to <8 x float>*
  %1799 = load <8 x float>, <8 x float>* %1798, align 1, !tbaa !12
  %1800 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1759, <8 x float> %75, <8 x float> %1715) #10
  %1801 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1763, <8 x float> %75, <8 x float> %1719) #10
  %1802 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1767, <8 x float> %75, <8 x float> %1723) #10
  %1803 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1771, <8 x float> %75, <8 x float> %1727) #10
  %1804 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1775, <8 x float> %75, <8 x float> %1731) #10
  %1805 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1779, <8 x float> %75, <8 x float> %1735) #10
  %1806 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1783, <8 x float> %75, <8 x float> %1739) #10
  %1807 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1787, <8 x float> %75, <8 x float> %1743) #10
  %1808 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1791, <8 x float> %75, <8 x float> %1747) #10
  %1809 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1795, <8 x float> %75, <8 x float> %1751) #10
  %1810 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1799, <8 x float> %75, <8 x float> %1755) #10
  store <8 x float> %1800, <8 x float>* %1714, align 1, !tbaa !12
  store <8 x float> %1801, <8 x float>* %1718, align 1, !tbaa !12
  store <8 x float> %1802, <8 x float>* %1722, align 1, !tbaa !12
  store <8 x float> %1803, <8 x float>* %1726, align 1, !tbaa !12
  store <8 x float> %1804, <8 x float>* %1730, align 1, !tbaa !12
  store <8 x float> %1805, <8 x float>* %1734, align 1, !tbaa !12
  store <8 x float> %1806, <8 x float>* %1738, align 1, !tbaa !12
  store <8 x float> %1807, <8 x float>* %1742, align 1, !tbaa !12
  store <8 x float> %1808, <8 x float>* %1746, align 1, !tbaa !12
  store <8 x float> %1809, <8 x float>* %1750, align 1, !tbaa !12
  store <8 x float> %1810, <8 x float>* %1754, align 1, !tbaa !12
  %1811 = add nuw nsw i64 %1667, 88
  %1812 = icmp ult i64 %1811, %1512
  br i1 %1812, label %1666, label %1660

1813:                                             ; preds = %1820, %1342, %1507, %1660
  %1814 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1815 = icmp sgt i32 %1814, 0
  br i1 %1815, label %1816, label %1967

1816:                                             ; preds = %1813
  %1817 = zext i32 %1814 to i64
  %1818 = trunc i64 %81 to i32
  %1819 = mul nsw i32 %1814, %1818
  br label %1972

1820:                                             ; preds = %1661, %1820
  %1821 = phi i64 [ 0, %1661 ], [ %1965, %1820 ]
  %1822 = getelementptr inbounds float, float* %5, i64 %1821
  %1823 = getelementptr inbounds float, float* %1822, i64 8
  %1824 = bitcast float* %1823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1824, i32 0, i32 1, i32 1)
  %1825 = getelementptr inbounds float, float* %3, i64 %1821
  %1826 = getelementptr inbounds float, float* %1825, i64 8
  %1827 = bitcast float* %1826 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1827, i32 0, i32 1, i32 1)
  %1828 = getelementptr inbounds float, float* %1822, i64 16
  %1829 = bitcast float* %1828 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1829, i32 0, i32 1, i32 1)
  %1830 = getelementptr inbounds float, float* %1825, i64 16
  %1831 = bitcast float* %1830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1831, i32 0, i32 1, i32 1)
  %1832 = getelementptr inbounds float, float* %1822, i64 24
  %1833 = bitcast float* %1832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1833, i32 0, i32 1, i32 1)
  %1834 = getelementptr inbounds float, float* %1825, i64 24
  %1835 = bitcast float* %1834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1835, i32 0, i32 1, i32 1)
  %1836 = getelementptr inbounds float, float* %1822, i64 32
  %1837 = bitcast float* %1836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1837, i32 0, i32 1, i32 1)
  %1838 = getelementptr inbounds float, float* %1825, i64 32
  %1839 = bitcast float* %1838 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1839, i32 0, i32 1, i32 1)
  %1840 = getelementptr inbounds float, float* %1822, i64 40
  %1841 = bitcast float* %1840 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1841, i32 0, i32 1, i32 1)
  %1842 = getelementptr inbounds float, float* %1825, i64 40
  %1843 = bitcast float* %1842 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1843, i32 0, i32 1, i32 1)
  %1844 = getelementptr inbounds float, float* %1822, i64 48
  %1845 = bitcast float* %1844 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1845, i32 0, i32 1, i32 1)
  %1846 = getelementptr inbounds float, float* %1825, i64 48
  %1847 = bitcast float* %1846 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1847, i32 0, i32 1, i32 1)
  %1848 = getelementptr inbounds float, float* %1822, i64 56
  %1849 = bitcast float* %1848 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1849, i32 0, i32 1, i32 1)
  %1850 = getelementptr inbounds float, float* %1825, i64 56
  %1851 = bitcast float* %1850 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1851, i32 0, i32 1, i32 1)
  %1852 = getelementptr inbounds float, float* %1822, i64 64
  %1853 = bitcast float* %1852 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1853, i32 0, i32 1, i32 1)
  %1854 = getelementptr inbounds float, float* %1825, i64 64
  %1855 = bitcast float* %1854 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1855, i32 0, i32 1, i32 1)
  %1856 = getelementptr inbounds float, float* %1822, i64 72
  %1857 = bitcast float* %1856 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1857, i32 0, i32 1, i32 1)
  %1858 = getelementptr inbounds float, float* %1825, i64 72
  %1859 = bitcast float* %1858 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1859, i32 0, i32 1, i32 1)
  %1860 = getelementptr inbounds float, float* %1822, i64 80
  %1861 = bitcast float* %1860 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1861, i32 0, i32 1, i32 1)
  %1862 = getelementptr inbounds float, float* %1825, i64 80
  %1863 = bitcast float* %1862 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1863, i32 0, i32 1, i32 1)
  %1864 = getelementptr inbounds float, float* %1822, i64 88
  %1865 = bitcast float* %1864 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1865, i32 0, i32 1, i32 1)
  %1866 = getelementptr inbounds float, float* %1825, i64 88
  %1867 = bitcast float* %1866 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1867, i32 0, i32 1, i32 1)
  %1868 = bitcast float* %1822 to <8 x float>*
  %1869 = load <8 x float>, <8 x float>* %1868, align 1, !tbaa !12
  %1870 = add nuw nsw i64 %1821, 8
  %1871 = getelementptr inbounds float, float* %5, i64 %1870
  %1872 = bitcast float* %1871 to <8 x float>*
  %1873 = load <8 x float>, <8 x float>* %1872, align 1, !tbaa !12
  %1874 = add nuw nsw i64 %1821, 16
  %1875 = getelementptr inbounds float, float* %5, i64 %1874
  %1876 = bitcast float* %1875 to <8 x float>*
  %1877 = load <8 x float>, <8 x float>* %1876, align 1, !tbaa !12
  %1878 = add nuw nsw i64 %1821, 24
  %1879 = getelementptr inbounds float, float* %5, i64 %1878
  %1880 = bitcast float* %1879 to <8 x float>*
  %1881 = load <8 x float>, <8 x float>* %1880, align 1, !tbaa !12
  %1882 = add nuw nsw i64 %1821, 32
  %1883 = getelementptr inbounds float, float* %5, i64 %1882
  %1884 = bitcast float* %1883 to <8 x float>*
  %1885 = load <8 x float>, <8 x float>* %1884, align 1, !tbaa !12
  %1886 = add nuw nsw i64 %1821, 40
  %1887 = getelementptr inbounds float, float* %5, i64 %1886
  %1888 = bitcast float* %1887 to <8 x float>*
  %1889 = load <8 x float>, <8 x float>* %1888, align 1, !tbaa !12
  %1890 = add nuw nsw i64 %1821, 48
  %1891 = getelementptr inbounds float, float* %5, i64 %1890
  %1892 = bitcast float* %1891 to <8 x float>*
  %1893 = load <8 x float>, <8 x float>* %1892, align 1, !tbaa !12
  %1894 = add nuw nsw i64 %1821, 56
  %1895 = getelementptr inbounds float, float* %5, i64 %1894
  %1896 = bitcast float* %1895 to <8 x float>*
  %1897 = load <8 x float>, <8 x float>* %1896, align 1, !tbaa !12
  %1898 = add nuw nsw i64 %1821, 64
  %1899 = getelementptr inbounds float, float* %5, i64 %1898
  %1900 = bitcast float* %1899 to <8 x float>*
  %1901 = load <8 x float>, <8 x float>* %1900, align 1, !tbaa !12
  %1902 = add nuw nsw i64 %1821, 72
  %1903 = getelementptr inbounds float, float* %5, i64 %1902
  %1904 = bitcast float* %1903 to <8 x float>*
  %1905 = load <8 x float>, <8 x float>* %1904, align 1, !tbaa !12
  %1906 = add nuw nsw i64 %1821, 80
  %1907 = getelementptr inbounds float, float* %5, i64 %1906
  %1908 = bitcast float* %1907 to <8 x float>*
  %1909 = load <8 x float>, <8 x float>* %1908, align 1, !tbaa !12
  %1910 = add nsw i64 %1821, %1664
  %1911 = getelementptr inbounds float, float* %3, i64 %1910
  %1912 = bitcast float* %1911 to <8 x float>*
  %1913 = load <8 x float>, <8 x float>* %1912, align 1, !tbaa !12
  %1914 = add nsw i64 %1910, 8
  %1915 = getelementptr inbounds float, float* %3, i64 %1914
  %1916 = bitcast float* %1915 to <8 x float>*
  %1917 = load <8 x float>, <8 x float>* %1916, align 1, !tbaa !12
  %1918 = add nsw i64 %1910, 16
  %1919 = getelementptr inbounds float, float* %3, i64 %1918
  %1920 = bitcast float* %1919 to <8 x float>*
  %1921 = load <8 x float>, <8 x float>* %1920, align 1, !tbaa !12
  %1922 = add nsw i64 %1910, 24
  %1923 = getelementptr inbounds float, float* %3, i64 %1922
  %1924 = bitcast float* %1923 to <8 x float>*
  %1925 = load <8 x float>, <8 x float>* %1924, align 1, !tbaa !12
  %1926 = add nsw i64 %1910, 32
  %1927 = getelementptr inbounds float, float* %3, i64 %1926
  %1928 = bitcast float* %1927 to <8 x float>*
  %1929 = load <8 x float>, <8 x float>* %1928, align 1, !tbaa !12
  %1930 = add nsw i64 %1910, 40
  %1931 = getelementptr inbounds float, float* %3, i64 %1930
  %1932 = bitcast float* %1931 to <8 x float>*
  %1933 = load <8 x float>, <8 x float>* %1932, align 1, !tbaa !12
  %1934 = add nsw i64 %1910, 48
  %1935 = getelementptr inbounds float, float* %3, i64 %1934
  %1936 = bitcast float* %1935 to <8 x float>*
  %1937 = load <8 x float>, <8 x float>* %1936, align 1, !tbaa !12
  %1938 = add nsw i64 %1910, 56
  %1939 = getelementptr inbounds float, float* %3, i64 %1938
  %1940 = bitcast float* %1939 to <8 x float>*
  %1941 = load <8 x float>, <8 x float>* %1940, align 1, !tbaa !12
  %1942 = add nsw i64 %1910, 64
  %1943 = getelementptr inbounds float, float* %3, i64 %1942
  %1944 = bitcast float* %1943 to <8 x float>*
  %1945 = load <8 x float>, <8 x float>* %1944, align 1, !tbaa !12
  %1946 = add nsw i64 %1910, 72
  %1947 = getelementptr inbounds float, float* %3, i64 %1946
  %1948 = bitcast float* %1947 to <8 x float>*
  %1949 = load <8 x float>, <8 x float>* %1948, align 1, !tbaa !12
  %1950 = add nsw i64 %1910, 80
  %1951 = getelementptr inbounds float, float* %3, i64 %1950
  %1952 = bitcast float* %1951 to <8 x float>*
  %1953 = load <8 x float>, <8 x float>* %1952, align 1, !tbaa !12
  %1954 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1913, <8 x float> %80, <8 x float> %1869) #10
  %1955 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1917, <8 x float> %80, <8 x float> %1873) #10
  %1956 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1921, <8 x float> %80, <8 x float> %1877) #10
  %1957 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1925, <8 x float> %80, <8 x float> %1881) #10
  %1958 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1929, <8 x float> %80, <8 x float> %1885) #10
  %1959 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1933, <8 x float> %80, <8 x float> %1889) #10
  %1960 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1937, <8 x float> %80, <8 x float> %1893) #10
  %1961 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1941, <8 x float> %80, <8 x float> %1897) #10
  %1962 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1945, <8 x float> %80, <8 x float> %1901) #10
  %1963 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1949, <8 x float> %80, <8 x float> %1905) #10
  %1964 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1953, <8 x float> %80, <8 x float> %1909) #10
  store <8 x float> %1954, <8 x float>* %1868, align 1, !tbaa !12
  store <8 x float> %1955, <8 x float>* %1872, align 1, !tbaa !12
  store <8 x float> %1956, <8 x float>* %1876, align 1, !tbaa !12
  store <8 x float> %1957, <8 x float>* %1880, align 1, !tbaa !12
  store <8 x float> %1958, <8 x float>* %1884, align 1, !tbaa !12
  store <8 x float> %1959, <8 x float>* %1888, align 1, !tbaa !12
  store <8 x float> %1960, <8 x float>* %1892, align 1, !tbaa !12
  store <8 x float> %1961, <8 x float>* %1896, align 1, !tbaa !12
  store <8 x float> %1962, <8 x float>* %1900, align 1, !tbaa !12
  store <8 x float> %1963, <8 x float>* %1904, align 1, !tbaa !12
  store <8 x float> %1964, <8 x float>* %1908, align 1, !tbaa !12
  %1965 = add nuw nsw i64 %1821, 88
  %1966 = icmp ult i64 %1965, %1665
  br i1 %1966, label %1820, label %1813

1967:                                             ; preds = %1972, %563, %20, %1188, %1813
  %1968 = add nuw nsw i64 %21, 13
  %1969 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1970 = sext i32 %1969 to i64
  %1971 = icmp slt i64 %1968, %1970
  br i1 %1971, label %20, label %8

1972:                                             ; preds = %1816, %1972
  %1973 = phi i64 [ 0, %1816 ], [ %2129, %1972 ]
  %1974 = getelementptr inbounds float, float* %5, i64 %1973
  %1975 = getelementptr inbounds float, float* %1974, i64 8
  %1976 = bitcast float* %1975 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1976, i32 0, i32 1, i32 1)
  %1977 = getelementptr inbounds float, float* %3, i64 %1973
  %1978 = getelementptr inbounds float, float* %1977, i64 8
  %1979 = bitcast float* %1978 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1979, i32 0, i32 1, i32 1)
  %1980 = getelementptr inbounds float, float* %1974, i64 16
  %1981 = bitcast float* %1980 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1981, i32 0, i32 1, i32 1)
  %1982 = getelementptr inbounds float, float* %1977, i64 16
  %1983 = bitcast float* %1982 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1983, i32 0, i32 1, i32 1)
  %1984 = getelementptr inbounds float, float* %1974, i64 24
  %1985 = bitcast float* %1984 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1985, i32 0, i32 1, i32 1)
  %1986 = getelementptr inbounds float, float* %1977, i64 24
  %1987 = bitcast float* %1986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1987, i32 0, i32 1, i32 1)
  %1988 = getelementptr inbounds float, float* %1974, i64 32
  %1989 = bitcast float* %1988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1989, i32 0, i32 1, i32 1)
  %1990 = getelementptr inbounds float, float* %1977, i64 32
  %1991 = bitcast float* %1990 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1991, i32 0, i32 1, i32 1)
  %1992 = getelementptr inbounds float, float* %1974, i64 40
  %1993 = bitcast float* %1992 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1993, i32 0, i32 1, i32 1)
  %1994 = getelementptr inbounds float, float* %1977, i64 40
  %1995 = bitcast float* %1994 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1995, i32 0, i32 1, i32 1)
  %1996 = getelementptr inbounds float, float* %1974, i64 48
  %1997 = bitcast float* %1996 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1997, i32 0, i32 1, i32 1)
  %1998 = getelementptr inbounds float, float* %1977, i64 48
  %1999 = bitcast float* %1998 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1999, i32 0, i32 1, i32 1)
  %2000 = getelementptr inbounds float, float* %1974, i64 56
  %2001 = bitcast float* %2000 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2001, i32 0, i32 1, i32 1)
  %2002 = getelementptr inbounds float, float* %1977, i64 56
  %2003 = bitcast float* %2002 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2003, i32 0, i32 1, i32 1)
  %2004 = getelementptr inbounds float, float* %1974, i64 64
  %2005 = bitcast float* %2004 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2005, i32 0, i32 1, i32 1)
  %2006 = getelementptr inbounds float, float* %1977, i64 64
  %2007 = bitcast float* %2006 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2007, i32 0, i32 1, i32 1)
  %2008 = getelementptr inbounds float, float* %1974, i64 72
  %2009 = bitcast float* %2008 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2009, i32 0, i32 1, i32 1)
  %2010 = getelementptr inbounds float, float* %1977, i64 72
  %2011 = bitcast float* %2010 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2011, i32 0, i32 1, i32 1)
  %2012 = getelementptr inbounds float, float* %1974, i64 80
  %2013 = bitcast float* %2012 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2013, i32 0, i32 1, i32 1)
  %2014 = getelementptr inbounds float, float* %1977, i64 80
  %2015 = bitcast float* %2014 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2015, i32 0, i32 1, i32 1)
  %2016 = getelementptr inbounds float, float* %1974, i64 88
  %2017 = bitcast float* %2016 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2017, i32 0, i32 1, i32 1)
  %2018 = getelementptr inbounds float, float* %1977, i64 88
  %2019 = bitcast float* %2018 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2019, i32 0, i32 1, i32 1)
  %2020 = bitcast float* %1974 to <8 x float>*
  %2021 = load <8 x float>, <8 x float>* %2020, align 1, !tbaa !12
  %2022 = add nuw nsw i64 %1973, 8
  %2023 = getelementptr inbounds float, float* %5, i64 %2022
  %2024 = bitcast float* %2023 to <8 x float>*
  %2025 = load <8 x float>, <8 x float>* %2024, align 1, !tbaa !12
  %2026 = add nuw nsw i64 %1973, 16
  %2027 = getelementptr inbounds float, float* %5, i64 %2026
  %2028 = bitcast float* %2027 to <8 x float>*
  %2029 = load <8 x float>, <8 x float>* %2028, align 1, !tbaa !12
  %2030 = add nuw nsw i64 %1973, 24
  %2031 = getelementptr inbounds float, float* %5, i64 %2030
  %2032 = bitcast float* %2031 to <8 x float>*
  %2033 = load <8 x float>, <8 x float>* %2032, align 1, !tbaa !12
  %2034 = add nuw nsw i64 %1973, 32
  %2035 = getelementptr inbounds float, float* %5, i64 %2034
  %2036 = bitcast float* %2035 to <8 x float>*
  %2037 = load <8 x float>, <8 x float>* %2036, align 1, !tbaa !12
  %2038 = add nuw nsw i64 %1973, 40
  %2039 = getelementptr inbounds float, float* %5, i64 %2038
  %2040 = bitcast float* %2039 to <8 x float>*
  %2041 = load <8 x float>, <8 x float>* %2040, align 1, !tbaa !12
  %2042 = add nuw nsw i64 %1973, 48
  %2043 = getelementptr inbounds float, float* %5, i64 %2042
  %2044 = bitcast float* %2043 to <8 x float>*
  %2045 = load <8 x float>, <8 x float>* %2044, align 1, !tbaa !12
  %2046 = add nuw nsw i64 %1973, 56
  %2047 = getelementptr inbounds float, float* %5, i64 %2046
  %2048 = bitcast float* %2047 to <8 x float>*
  %2049 = load <8 x float>, <8 x float>* %2048, align 1, !tbaa !12
  %2050 = add nuw nsw i64 %1973, 64
  %2051 = getelementptr inbounds float, float* %5, i64 %2050
  %2052 = bitcast float* %2051 to <8 x float>*
  %2053 = load <8 x float>, <8 x float>* %2052, align 1, !tbaa !12
  %2054 = add nuw nsw i64 %1973, 72
  %2055 = getelementptr inbounds float, float* %5, i64 %2054
  %2056 = bitcast float* %2055 to <8 x float>*
  %2057 = load <8 x float>, <8 x float>* %2056, align 1, !tbaa !12
  %2058 = add nuw nsw i64 %1973, 80
  %2059 = getelementptr inbounds float, float* %5, i64 %2058
  %2060 = bitcast float* %2059 to <8 x float>*
  %2061 = load <8 x float>, <8 x float>* %2060, align 1, !tbaa !12
  %2062 = trunc i64 %1973 to i32
  %2063 = add nsw i32 %1819, %2062
  %2064 = sext i32 %2063 to i64
  %2065 = getelementptr inbounds float, float* %3, i64 %2064
  %2066 = bitcast float* %2065 to <8 x float>*
  %2067 = load <8 x float>, <8 x float>* %2066, align 1, !tbaa !12
  %2068 = add nsw i32 %2063, 8
  %2069 = sext i32 %2068 to i64
  %2070 = getelementptr inbounds float, float* %3, i64 %2069
  %2071 = bitcast float* %2070 to <8 x float>*
  %2072 = load <8 x float>, <8 x float>* %2071, align 1, !tbaa !12
  %2073 = add nsw i32 %2063, 16
  %2074 = sext i32 %2073 to i64
  %2075 = getelementptr inbounds float, float* %3, i64 %2074
  %2076 = bitcast float* %2075 to <8 x float>*
  %2077 = load <8 x float>, <8 x float>* %2076, align 1, !tbaa !12
  %2078 = add nsw i32 %2063, 24
  %2079 = sext i32 %2078 to i64
  %2080 = getelementptr inbounds float, float* %3, i64 %2079
  %2081 = bitcast float* %2080 to <8 x float>*
  %2082 = load <8 x float>, <8 x float>* %2081, align 1, !tbaa !12
  %2083 = add nsw i32 %2063, 32
  %2084 = sext i32 %2083 to i64
  %2085 = getelementptr inbounds float, float* %3, i64 %2084
  %2086 = bitcast float* %2085 to <8 x float>*
  %2087 = load <8 x float>, <8 x float>* %2086, align 1, !tbaa !12
  %2088 = add nsw i32 %2063, 40
  %2089 = sext i32 %2088 to i64
  %2090 = getelementptr inbounds float, float* %3, i64 %2089
  %2091 = bitcast float* %2090 to <8 x float>*
  %2092 = load <8 x float>, <8 x float>* %2091, align 1, !tbaa !12
  %2093 = add nsw i32 %2063, 48
  %2094 = sext i32 %2093 to i64
  %2095 = getelementptr inbounds float, float* %3, i64 %2094
  %2096 = bitcast float* %2095 to <8 x float>*
  %2097 = load <8 x float>, <8 x float>* %2096, align 1, !tbaa !12
  %2098 = add nsw i32 %2063, 56
  %2099 = sext i32 %2098 to i64
  %2100 = getelementptr inbounds float, float* %3, i64 %2099
  %2101 = bitcast float* %2100 to <8 x float>*
  %2102 = load <8 x float>, <8 x float>* %2101, align 1, !tbaa !12
  %2103 = add nsw i32 %2063, 64
  %2104 = sext i32 %2103 to i64
  %2105 = getelementptr inbounds float, float* %3, i64 %2104
  %2106 = bitcast float* %2105 to <8 x float>*
  %2107 = load <8 x float>, <8 x float>* %2106, align 1, !tbaa !12
  %2108 = add nsw i32 %2063, 72
  %2109 = sext i32 %2108 to i64
  %2110 = getelementptr inbounds float, float* %3, i64 %2109
  %2111 = bitcast float* %2110 to <8 x float>*
  %2112 = load <8 x float>, <8 x float>* %2111, align 1, !tbaa !12
  %2113 = add nsw i32 %2063, 80
  %2114 = sext i32 %2113 to i64
  %2115 = getelementptr inbounds float, float* %3, i64 %2114
  %2116 = bitcast float* %2115 to <8 x float>*
  %2117 = load <8 x float>, <8 x float>* %2116, align 1, !tbaa !12
  %2118 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2067, <8 x float> %85, <8 x float> %2021) #10
  %2119 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2072, <8 x float> %85, <8 x float> %2025) #10
  %2120 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2077, <8 x float> %85, <8 x float> %2029) #10
  %2121 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2082, <8 x float> %85, <8 x float> %2033) #10
  %2122 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2087, <8 x float> %85, <8 x float> %2037) #10
  %2123 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2092, <8 x float> %85, <8 x float> %2041) #10
  %2124 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2097, <8 x float> %85, <8 x float> %2045) #10
  %2125 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2102, <8 x float> %85, <8 x float> %2049) #10
  %2126 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2107, <8 x float> %85, <8 x float> %2053) #10
  %2127 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2112, <8 x float> %85, <8 x float> %2057) #10
  %2128 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2117, <8 x float> %85, <8 x float> %2061) #10
  store <8 x float> %2118, <8 x float>* %2020, align 1, !tbaa !12
  store <8 x float> %2119, <8 x float>* %2024, align 1, !tbaa !12
  store <8 x float> %2120, <8 x float>* %2028, align 1, !tbaa !12
  store <8 x float> %2121, <8 x float>* %2032, align 1, !tbaa !12
  store <8 x float> %2122, <8 x float>* %2036, align 1, !tbaa !12
  store <8 x float> %2123, <8 x float>* %2040, align 1, !tbaa !12
  store <8 x float> %2124, <8 x float>* %2044, align 1, !tbaa !12
  store <8 x float> %2125, <8 x float>* %2048, align 1, !tbaa !12
  store <8 x float> %2126, <8 x float>* %2052, align 1, !tbaa !12
  store <8 x float> %2127, <8 x float>* %2056, align 1, !tbaa !12
  store <8 x float> %2128, <8 x float>* %2060, align 1, !tbaa !12
  %2129 = add nuw nsw i64 %1973, 88
  %2130 = icmp ult i64 %2129, %1817
  br i1 %2130, label %1972, label %1967
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 299
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui11_uk13.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
