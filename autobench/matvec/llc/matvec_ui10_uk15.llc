; ModuleID = 'codes/matvec_ui10_uk15.cpp'
source_filename = "codes/matvec_ui10_uk15.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui10_uk15.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 80
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 120
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %2109, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %2109
  %21 = phi i64 [ %2110, %2109 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = add nuw nsw i64 %21, 13
  %87 = getelementptr inbounds float, float* %4, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !18
  %89 = insertelement <8 x float> undef, float %88, i32 0
  %90 = shufflevector <8 x float> %89, <8 x float> undef, <8 x i32> zeroinitializer
  %91 = add nuw nsw i64 %21, 14
  %92 = getelementptr inbounds float, float* %4, i64 %91
  %93 = load float, float* %92, align 4, !tbaa !18
  %94 = insertelement <8 x float> undef, float %93, i32 0
  %95 = shufflevector <8 x float> %94, <8 x float> undef, <8 x i32> zeroinitializer
  %96 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %2109

98:                                               ; preds = %20
  %99 = zext i32 %96 to i64
  %100 = trunc i64 %21 to i32
  %101 = mul nsw i32 %96, %100
  br label %108

102:                                              ; preds = %108
  br i1 %97, label %103, label %533

103:                                              ; preds = %102
  %104 = trunc i64 %26 to i32
  %105 = mul nsw i32 %96, %104
  %106 = sext i32 %105 to i64
  %107 = zext i32 %96 to i64
  br label %259

108:                                              ; preds = %98, %108
  %109 = phi i64 [ 0, %98 ], [ %251, %108 ]
  %110 = getelementptr inbounds float, float* %5, i64 %109
  %111 = getelementptr inbounds float, float* %110, i64 8
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %3, i64 %109
  %114 = getelementptr inbounds float, float* %113, i64 8
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %110, i64 16
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %113, i64 16
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %110, i64 24
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %113, i64 24
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %110, i64 32
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %113, i64 32
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %110, i64 40
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %113, i64 40
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %110, i64 48
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %113, i64 48
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %110, i64 56
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = getelementptr inbounds float, float* %113, i64 56
  %139 = bitcast float* %138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %139, i32 0, i32 1, i32 1)
  %140 = getelementptr inbounds float, float* %110, i64 64
  %141 = bitcast float* %140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %141, i32 0, i32 1, i32 1)
  %142 = getelementptr inbounds float, float* %113, i64 64
  %143 = bitcast float* %142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %143, i32 0, i32 1, i32 1)
  %144 = getelementptr inbounds float, float* %110, i64 72
  %145 = bitcast float* %144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %145, i32 0, i32 1, i32 1)
  %146 = getelementptr inbounds float, float* %113, i64 72
  %147 = bitcast float* %146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %147, i32 0, i32 1, i32 1)
  %148 = getelementptr inbounds float, float* %110, i64 80
  %149 = bitcast float* %148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %149, i32 0, i32 1, i32 1)
  %150 = getelementptr inbounds float, float* %113, i64 80
  %151 = bitcast float* %150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %151, i32 0, i32 1, i32 1)
  %152 = bitcast float* %110 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = or i64 %109, 8
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nuw nsw i64 %109, 16
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = add nuw nsw i64 %109, 24
  %163 = getelementptr inbounds float, float* %5, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = add nuw nsw i64 %109, 32
  %167 = getelementptr inbounds float, float* %5, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = add nuw nsw i64 %109, 40
  %171 = getelementptr inbounds float, float* %5, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = add nuw nsw i64 %109, 48
  %175 = getelementptr inbounds float, float* %5, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nuw nsw i64 %109, 56
  %179 = getelementptr inbounds float, float* %5, i64 %178
  %180 = bitcast float* %179 to <8 x float>*
  %181 = load <8 x float>, <8 x float>* %180, align 1, !tbaa !12
  %182 = add nuw nsw i64 %109, 64
  %183 = getelementptr inbounds float, float* %5, i64 %182
  %184 = bitcast float* %183 to <8 x float>*
  %185 = load <8 x float>, <8 x float>* %184, align 1, !tbaa !12
  %186 = add nuw nsw i64 %109, 72
  %187 = getelementptr inbounds float, float* %5, i64 %186
  %188 = bitcast float* %187 to <8 x float>*
  %189 = load <8 x float>, <8 x float>* %188, align 1, !tbaa !12
  %190 = trunc i64 %109 to i32
  %191 = add nsw i32 %101, %190
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds float, float* %3, i64 %192
  %194 = bitcast float* %193 to <8 x float>*
  %195 = load <8 x float>, <8 x float>* %194, align 1, !tbaa !12
  %196 = add nsw i32 %191, 8
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds float, float* %3, i64 %197
  %199 = bitcast float* %198 to <8 x float>*
  %200 = load <8 x float>, <8 x float>* %199, align 1, !tbaa !12
  %201 = add nsw i32 %191, 16
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds float, float* %3, i64 %202
  %204 = bitcast float* %203 to <8 x float>*
  %205 = load <8 x float>, <8 x float>* %204, align 1, !tbaa !12
  %206 = add nsw i32 %191, 24
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds float, float* %3, i64 %207
  %209 = bitcast float* %208 to <8 x float>*
  %210 = load <8 x float>, <8 x float>* %209, align 1, !tbaa !12
  %211 = add nsw i32 %191, 32
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds float, float* %3, i64 %212
  %214 = bitcast float* %213 to <8 x float>*
  %215 = load <8 x float>, <8 x float>* %214, align 1, !tbaa !12
  %216 = add nsw i32 %191, 40
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds float, float* %3, i64 %217
  %219 = bitcast float* %218 to <8 x float>*
  %220 = load <8 x float>, <8 x float>* %219, align 1, !tbaa !12
  %221 = add nsw i32 %191, 48
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds float, float* %3, i64 %222
  %224 = bitcast float* %223 to <8 x float>*
  %225 = load <8 x float>, <8 x float>* %224, align 1, !tbaa !12
  %226 = add nsw i32 %191, 56
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds float, float* %3, i64 %227
  %229 = bitcast float* %228 to <8 x float>*
  %230 = load <8 x float>, <8 x float>* %229, align 1, !tbaa !12
  %231 = add nsw i32 %191, 64
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds float, float* %3, i64 %232
  %234 = bitcast float* %233 to <8 x float>*
  %235 = load <8 x float>, <8 x float>* %234, align 1, !tbaa !12
  %236 = add nsw i32 %191, 72
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds float, float* %3, i64 %237
  %239 = bitcast float* %238 to <8 x float>*
  %240 = load <8 x float>, <8 x float>* %239, align 1, !tbaa !12
  %241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %195, <8 x float> %25, <8 x float> %153) #10
  %242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %200, <8 x float> %25, <8 x float> %157) #10
  %243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %205, <8 x float> %25, <8 x float> %161) #10
  %244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %210, <8 x float> %25, <8 x float> %165) #10
  %245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %215, <8 x float> %25, <8 x float> %169) #10
  %246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %220, <8 x float> %25, <8 x float> %173) #10
  %247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %225, <8 x float> %25, <8 x float> %177) #10
  %248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %230, <8 x float> %25, <8 x float> %181) #10
  %249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %235, <8 x float> %25, <8 x float> %185) #10
  %250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %240, <8 x float> %25, <8 x float> %189) #10
  store <8 x float> %241, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %242, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %243, <8 x float>* %160, align 1, !tbaa !12
  store <8 x float> %244, <8 x float>* %164, align 1, !tbaa !12
  store <8 x float> %245, <8 x float>* %168, align 1, !tbaa !12
  store <8 x float> %246, <8 x float>* %172, align 1, !tbaa !12
  store <8 x float> %247, <8 x float>* %176, align 1, !tbaa !12
  store <8 x float> %248, <8 x float>* %180, align 1, !tbaa !12
  store <8 x float> %249, <8 x float>* %184, align 1, !tbaa !12
  store <8 x float> %250, <8 x float>* %188, align 1, !tbaa !12
  %251 = add nuw nsw i64 %109, 80
  %252 = icmp ult i64 %251, %99
  br i1 %252, label %108, label %102

253:                                              ; preds = %259
  br i1 %97, label %254, label %533

254:                                              ; preds = %253
  %255 = trunc i64 %31 to i32
  %256 = mul nsw i32 %96, %255
  %257 = sext i32 %256 to i64
  %258 = zext i32 %96 to i64
  br label %399

259:                                              ; preds = %103, %259
  %260 = phi i64 [ 0, %103 ], [ %391, %259 ]
  %261 = getelementptr inbounds float, float* %5, i64 %260
  %262 = getelementptr inbounds float, float* %261, i64 8
  %263 = bitcast float* %262 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %263, i32 0, i32 1, i32 1)
  %264 = getelementptr inbounds float, float* %3, i64 %260
  %265 = getelementptr inbounds float, float* %264, i64 8
  %266 = bitcast float* %265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %266, i32 0, i32 1, i32 1)
  %267 = getelementptr inbounds float, float* %261, i64 16
  %268 = bitcast float* %267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %268, i32 0, i32 1, i32 1)
  %269 = getelementptr inbounds float, float* %264, i64 16
  %270 = bitcast float* %269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %270, i32 0, i32 1, i32 1)
  %271 = getelementptr inbounds float, float* %261, i64 24
  %272 = bitcast float* %271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %272, i32 0, i32 1, i32 1)
  %273 = getelementptr inbounds float, float* %264, i64 24
  %274 = bitcast float* %273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %274, i32 0, i32 1, i32 1)
  %275 = getelementptr inbounds float, float* %261, i64 32
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %276, i32 0, i32 1, i32 1)
  %277 = getelementptr inbounds float, float* %264, i64 32
  %278 = bitcast float* %277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %278, i32 0, i32 1, i32 1)
  %279 = getelementptr inbounds float, float* %261, i64 40
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %264, i64 40
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %261, i64 48
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %264, i64 48
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %261, i64 56
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %264, i64 56
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %261, i64 64
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %264, i64 64
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %261, i64 72
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %264, i64 72
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %261, i64 80
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = getelementptr inbounds float, float* %264, i64 80
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = bitcast float* %261 to <8 x float>*
  %304 = load <8 x float>, <8 x float>* %303, align 1, !tbaa !12
  %305 = or i64 %260, 8
  %306 = getelementptr inbounds float, float* %5, i64 %305
  %307 = bitcast float* %306 to <8 x float>*
  %308 = load <8 x float>, <8 x float>* %307, align 1, !tbaa !12
  %309 = add nuw nsw i64 %260, 16
  %310 = getelementptr inbounds float, float* %5, i64 %309
  %311 = bitcast float* %310 to <8 x float>*
  %312 = load <8 x float>, <8 x float>* %311, align 1, !tbaa !12
  %313 = add nuw nsw i64 %260, 24
  %314 = getelementptr inbounds float, float* %5, i64 %313
  %315 = bitcast float* %314 to <8 x float>*
  %316 = load <8 x float>, <8 x float>* %315, align 1, !tbaa !12
  %317 = add nuw nsw i64 %260, 32
  %318 = getelementptr inbounds float, float* %5, i64 %317
  %319 = bitcast float* %318 to <8 x float>*
  %320 = load <8 x float>, <8 x float>* %319, align 1, !tbaa !12
  %321 = add nuw nsw i64 %260, 40
  %322 = getelementptr inbounds float, float* %5, i64 %321
  %323 = bitcast float* %322 to <8 x float>*
  %324 = load <8 x float>, <8 x float>* %323, align 1, !tbaa !12
  %325 = add nuw nsw i64 %260, 48
  %326 = getelementptr inbounds float, float* %5, i64 %325
  %327 = bitcast float* %326 to <8 x float>*
  %328 = load <8 x float>, <8 x float>* %327, align 1, !tbaa !12
  %329 = add nuw nsw i64 %260, 56
  %330 = getelementptr inbounds float, float* %5, i64 %329
  %331 = bitcast float* %330 to <8 x float>*
  %332 = load <8 x float>, <8 x float>* %331, align 1, !tbaa !12
  %333 = add nuw nsw i64 %260, 64
  %334 = getelementptr inbounds float, float* %5, i64 %333
  %335 = bitcast float* %334 to <8 x float>*
  %336 = load <8 x float>, <8 x float>* %335, align 1, !tbaa !12
  %337 = add nuw nsw i64 %260, 72
  %338 = getelementptr inbounds float, float* %5, i64 %337
  %339 = bitcast float* %338 to <8 x float>*
  %340 = load <8 x float>, <8 x float>* %339, align 1, !tbaa !12
  %341 = add nsw i64 %260, %106
  %342 = getelementptr inbounds float, float* %3, i64 %341
  %343 = bitcast float* %342 to <8 x float>*
  %344 = load <8 x float>, <8 x float>* %343, align 1, !tbaa !12
  %345 = add nsw i64 %341, 8
  %346 = getelementptr inbounds float, float* %3, i64 %345
  %347 = bitcast float* %346 to <8 x float>*
  %348 = load <8 x float>, <8 x float>* %347, align 1, !tbaa !12
  %349 = add nsw i64 %341, 16
  %350 = getelementptr inbounds float, float* %3, i64 %349
  %351 = bitcast float* %350 to <8 x float>*
  %352 = load <8 x float>, <8 x float>* %351, align 1, !tbaa !12
  %353 = add nsw i64 %341, 24
  %354 = getelementptr inbounds float, float* %3, i64 %353
  %355 = bitcast float* %354 to <8 x float>*
  %356 = load <8 x float>, <8 x float>* %355, align 1, !tbaa !12
  %357 = add nsw i64 %341, 32
  %358 = getelementptr inbounds float, float* %3, i64 %357
  %359 = bitcast float* %358 to <8 x float>*
  %360 = load <8 x float>, <8 x float>* %359, align 1, !tbaa !12
  %361 = add nsw i64 %341, 40
  %362 = getelementptr inbounds float, float* %3, i64 %361
  %363 = bitcast float* %362 to <8 x float>*
  %364 = load <8 x float>, <8 x float>* %363, align 1, !tbaa !12
  %365 = add nsw i64 %341, 48
  %366 = getelementptr inbounds float, float* %3, i64 %365
  %367 = bitcast float* %366 to <8 x float>*
  %368 = load <8 x float>, <8 x float>* %367, align 1, !tbaa !12
  %369 = add nsw i64 %341, 56
  %370 = getelementptr inbounds float, float* %3, i64 %369
  %371 = bitcast float* %370 to <8 x float>*
  %372 = load <8 x float>, <8 x float>* %371, align 1, !tbaa !12
  %373 = add nsw i64 %341, 64
  %374 = getelementptr inbounds float, float* %3, i64 %373
  %375 = bitcast float* %374 to <8 x float>*
  %376 = load <8 x float>, <8 x float>* %375, align 1, !tbaa !12
  %377 = add nsw i64 %341, 72
  %378 = getelementptr inbounds float, float* %3, i64 %377
  %379 = bitcast float* %378 to <8 x float>*
  %380 = load <8 x float>, <8 x float>* %379, align 1, !tbaa !12
  %381 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %344, <8 x float> %30, <8 x float> %304) #10
  %382 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %348, <8 x float> %30, <8 x float> %308) #10
  %383 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %352, <8 x float> %30, <8 x float> %312) #10
  %384 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %356, <8 x float> %30, <8 x float> %316) #10
  %385 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %360, <8 x float> %30, <8 x float> %320) #10
  %386 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %364, <8 x float> %30, <8 x float> %324) #10
  %387 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %368, <8 x float> %30, <8 x float> %328) #10
  %388 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %372, <8 x float> %30, <8 x float> %332) #10
  %389 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %376, <8 x float> %30, <8 x float> %336) #10
  %390 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %380, <8 x float> %30, <8 x float> %340) #10
  store <8 x float> %381, <8 x float>* %303, align 1, !tbaa !12
  store <8 x float> %382, <8 x float>* %307, align 1, !tbaa !12
  store <8 x float> %383, <8 x float>* %311, align 1, !tbaa !12
  store <8 x float> %384, <8 x float>* %315, align 1, !tbaa !12
  store <8 x float> %385, <8 x float>* %319, align 1, !tbaa !12
  store <8 x float> %386, <8 x float>* %323, align 1, !tbaa !12
  store <8 x float> %387, <8 x float>* %327, align 1, !tbaa !12
  store <8 x float> %388, <8 x float>* %331, align 1, !tbaa !12
  store <8 x float> %389, <8 x float>* %335, align 1, !tbaa !12
  store <8 x float> %390, <8 x float>* %339, align 1, !tbaa !12
  %391 = add nuw nsw i64 %260, 80
  %392 = icmp ult i64 %391, %107
  br i1 %392, label %259, label %253

393:                                              ; preds = %399
  br i1 %97, label %394, label %533

394:                                              ; preds = %393
  %395 = trunc i64 %36 to i32
  %396 = mul nsw i32 %96, %395
  %397 = sext i32 %396 to i64
  %398 = zext i32 %96 to i64
  br label %540

399:                                              ; preds = %254, %399
  %400 = phi i64 [ 0, %254 ], [ %531, %399 ]
  %401 = getelementptr inbounds float, float* %5, i64 %400
  %402 = getelementptr inbounds float, float* %401, i64 8
  %403 = bitcast float* %402 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %403, i32 0, i32 1, i32 1)
  %404 = getelementptr inbounds float, float* %3, i64 %400
  %405 = getelementptr inbounds float, float* %404, i64 8
  %406 = bitcast float* %405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %406, i32 0, i32 1, i32 1)
  %407 = getelementptr inbounds float, float* %401, i64 16
  %408 = bitcast float* %407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %408, i32 0, i32 1, i32 1)
  %409 = getelementptr inbounds float, float* %404, i64 16
  %410 = bitcast float* %409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %410, i32 0, i32 1, i32 1)
  %411 = getelementptr inbounds float, float* %401, i64 24
  %412 = bitcast float* %411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %412, i32 0, i32 1, i32 1)
  %413 = getelementptr inbounds float, float* %404, i64 24
  %414 = bitcast float* %413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %414, i32 0, i32 1, i32 1)
  %415 = getelementptr inbounds float, float* %401, i64 32
  %416 = bitcast float* %415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %416, i32 0, i32 1, i32 1)
  %417 = getelementptr inbounds float, float* %404, i64 32
  %418 = bitcast float* %417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %418, i32 0, i32 1, i32 1)
  %419 = getelementptr inbounds float, float* %401, i64 40
  %420 = bitcast float* %419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %420, i32 0, i32 1, i32 1)
  %421 = getelementptr inbounds float, float* %404, i64 40
  %422 = bitcast float* %421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %422, i32 0, i32 1, i32 1)
  %423 = getelementptr inbounds float, float* %401, i64 48
  %424 = bitcast float* %423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %424, i32 0, i32 1, i32 1)
  %425 = getelementptr inbounds float, float* %404, i64 48
  %426 = bitcast float* %425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %426, i32 0, i32 1, i32 1)
  %427 = getelementptr inbounds float, float* %401, i64 56
  %428 = bitcast float* %427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %428, i32 0, i32 1, i32 1)
  %429 = getelementptr inbounds float, float* %404, i64 56
  %430 = bitcast float* %429 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %430, i32 0, i32 1, i32 1)
  %431 = getelementptr inbounds float, float* %401, i64 64
  %432 = bitcast float* %431 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %432, i32 0, i32 1, i32 1)
  %433 = getelementptr inbounds float, float* %404, i64 64
  %434 = bitcast float* %433 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %434, i32 0, i32 1, i32 1)
  %435 = getelementptr inbounds float, float* %401, i64 72
  %436 = bitcast float* %435 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %436, i32 0, i32 1, i32 1)
  %437 = getelementptr inbounds float, float* %404, i64 72
  %438 = bitcast float* %437 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %438, i32 0, i32 1, i32 1)
  %439 = getelementptr inbounds float, float* %401, i64 80
  %440 = bitcast float* %439 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %440, i32 0, i32 1, i32 1)
  %441 = getelementptr inbounds float, float* %404, i64 80
  %442 = bitcast float* %441 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %442, i32 0, i32 1, i32 1)
  %443 = bitcast float* %401 to <8 x float>*
  %444 = load <8 x float>, <8 x float>* %443, align 1, !tbaa !12
  %445 = or i64 %400, 8
  %446 = getelementptr inbounds float, float* %5, i64 %445
  %447 = bitcast float* %446 to <8 x float>*
  %448 = load <8 x float>, <8 x float>* %447, align 1, !tbaa !12
  %449 = add nuw nsw i64 %400, 16
  %450 = getelementptr inbounds float, float* %5, i64 %449
  %451 = bitcast float* %450 to <8 x float>*
  %452 = load <8 x float>, <8 x float>* %451, align 1, !tbaa !12
  %453 = add nuw nsw i64 %400, 24
  %454 = getelementptr inbounds float, float* %5, i64 %453
  %455 = bitcast float* %454 to <8 x float>*
  %456 = load <8 x float>, <8 x float>* %455, align 1, !tbaa !12
  %457 = add nuw nsw i64 %400, 32
  %458 = getelementptr inbounds float, float* %5, i64 %457
  %459 = bitcast float* %458 to <8 x float>*
  %460 = load <8 x float>, <8 x float>* %459, align 1, !tbaa !12
  %461 = add nuw nsw i64 %400, 40
  %462 = getelementptr inbounds float, float* %5, i64 %461
  %463 = bitcast float* %462 to <8 x float>*
  %464 = load <8 x float>, <8 x float>* %463, align 1, !tbaa !12
  %465 = add nuw nsw i64 %400, 48
  %466 = getelementptr inbounds float, float* %5, i64 %465
  %467 = bitcast float* %466 to <8 x float>*
  %468 = load <8 x float>, <8 x float>* %467, align 1, !tbaa !12
  %469 = add nuw nsw i64 %400, 56
  %470 = getelementptr inbounds float, float* %5, i64 %469
  %471 = bitcast float* %470 to <8 x float>*
  %472 = load <8 x float>, <8 x float>* %471, align 1, !tbaa !12
  %473 = add nuw nsw i64 %400, 64
  %474 = getelementptr inbounds float, float* %5, i64 %473
  %475 = bitcast float* %474 to <8 x float>*
  %476 = load <8 x float>, <8 x float>* %475, align 1, !tbaa !12
  %477 = add nuw nsw i64 %400, 72
  %478 = getelementptr inbounds float, float* %5, i64 %477
  %479 = bitcast float* %478 to <8 x float>*
  %480 = load <8 x float>, <8 x float>* %479, align 1, !tbaa !12
  %481 = add nsw i64 %400, %257
  %482 = getelementptr inbounds float, float* %3, i64 %481
  %483 = bitcast float* %482 to <8 x float>*
  %484 = load <8 x float>, <8 x float>* %483, align 1, !tbaa !12
  %485 = add nsw i64 %481, 8
  %486 = getelementptr inbounds float, float* %3, i64 %485
  %487 = bitcast float* %486 to <8 x float>*
  %488 = load <8 x float>, <8 x float>* %487, align 1, !tbaa !12
  %489 = add nsw i64 %481, 16
  %490 = getelementptr inbounds float, float* %3, i64 %489
  %491 = bitcast float* %490 to <8 x float>*
  %492 = load <8 x float>, <8 x float>* %491, align 1, !tbaa !12
  %493 = add nsw i64 %481, 24
  %494 = getelementptr inbounds float, float* %3, i64 %493
  %495 = bitcast float* %494 to <8 x float>*
  %496 = load <8 x float>, <8 x float>* %495, align 1, !tbaa !12
  %497 = add nsw i64 %481, 32
  %498 = getelementptr inbounds float, float* %3, i64 %497
  %499 = bitcast float* %498 to <8 x float>*
  %500 = load <8 x float>, <8 x float>* %499, align 1, !tbaa !12
  %501 = add nsw i64 %481, 40
  %502 = getelementptr inbounds float, float* %3, i64 %501
  %503 = bitcast float* %502 to <8 x float>*
  %504 = load <8 x float>, <8 x float>* %503, align 1, !tbaa !12
  %505 = add nsw i64 %481, 48
  %506 = getelementptr inbounds float, float* %3, i64 %505
  %507 = bitcast float* %506 to <8 x float>*
  %508 = load <8 x float>, <8 x float>* %507, align 1, !tbaa !12
  %509 = add nsw i64 %481, 56
  %510 = getelementptr inbounds float, float* %3, i64 %509
  %511 = bitcast float* %510 to <8 x float>*
  %512 = load <8 x float>, <8 x float>* %511, align 1, !tbaa !12
  %513 = add nsw i64 %481, 64
  %514 = getelementptr inbounds float, float* %3, i64 %513
  %515 = bitcast float* %514 to <8 x float>*
  %516 = load <8 x float>, <8 x float>* %515, align 1, !tbaa !12
  %517 = add nsw i64 %481, 72
  %518 = getelementptr inbounds float, float* %3, i64 %517
  %519 = bitcast float* %518 to <8 x float>*
  %520 = load <8 x float>, <8 x float>* %519, align 1, !tbaa !12
  %521 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %484, <8 x float> %35, <8 x float> %444) #10
  %522 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %488, <8 x float> %35, <8 x float> %448) #10
  %523 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %492, <8 x float> %35, <8 x float> %452) #10
  %524 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %496, <8 x float> %35, <8 x float> %456) #10
  %525 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %500, <8 x float> %35, <8 x float> %460) #10
  %526 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %504, <8 x float> %35, <8 x float> %464) #10
  %527 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %508, <8 x float> %35, <8 x float> %468) #10
  %528 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %512, <8 x float> %35, <8 x float> %472) #10
  %529 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %516, <8 x float> %35, <8 x float> %476) #10
  %530 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %520, <8 x float> %35, <8 x float> %480) #10
  store <8 x float> %521, <8 x float>* %443, align 1, !tbaa !12
  store <8 x float> %522, <8 x float>* %447, align 1, !tbaa !12
  store <8 x float> %523, <8 x float>* %451, align 1, !tbaa !12
  store <8 x float> %524, <8 x float>* %455, align 1, !tbaa !12
  store <8 x float> %525, <8 x float>* %459, align 1, !tbaa !12
  store <8 x float> %526, <8 x float>* %463, align 1, !tbaa !12
  store <8 x float> %527, <8 x float>* %467, align 1, !tbaa !12
  store <8 x float> %528, <8 x float>* %471, align 1, !tbaa !12
  store <8 x float> %529, <8 x float>* %475, align 1, !tbaa !12
  store <8 x float> %530, <8 x float>* %479, align 1, !tbaa !12
  %531 = add nuw nsw i64 %400, 80
  %532 = icmp ult i64 %531, %258
  br i1 %532, label %399, label %393

533:                                              ; preds = %540, %102, %253, %393
  %534 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %535 = icmp sgt i32 %534, 0
  br i1 %535, label %536, label %2109

536:                                              ; preds = %533
  %537 = zext i32 %534 to i64
  %538 = trunc i64 %41 to i32
  %539 = mul nsw i32 %534, %538
  br label %680

540:                                              ; preds = %394, %540
  %541 = phi i64 [ 0, %394 ], [ %672, %540 ]
  %542 = getelementptr inbounds float, float* %5, i64 %541
  %543 = getelementptr inbounds float, float* %542, i64 8
  %544 = bitcast float* %543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %544, i32 0, i32 1, i32 1)
  %545 = getelementptr inbounds float, float* %3, i64 %541
  %546 = getelementptr inbounds float, float* %545, i64 8
  %547 = bitcast float* %546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %547, i32 0, i32 1, i32 1)
  %548 = getelementptr inbounds float, float* %542, i64 16
  %549 = bitcast float* %548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %549, i32 0, i32 1, i32 1)
  %550 = getelementptr inbounds float, float* %545, i64 16
  %551 = bitcast float* %550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %551, i32 0, i32 1, i32 1)
  %552 = getelementptr inbounds float, float* %542, i64 24
  %553 = bitcast float* %552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %553, i32 0, i32 1, i32 1)
  %554 = getelementptr inbounds float, float* %545, i64 24
  %555 = bitcast float* %554 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %555, i32 0, i32 1, i32 1)
  %556 = getelementptr inbounds float, float* %542, i64 32
  %557 = bitcast float* %556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %557, i32 0, i32 1, i32 1)
  %558 = getelementptr inbounds float, float* %545, i64 32
  %559 = bitcast float* %558 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %559, i32 0, i32 1, i32 1)
  %560 = getelementptr inbounds float, float* %542, i64 40
  %561 = bitcast float* %560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %561, i32 0, i32 1, i32 1)
  %562 = getelementptr inbounds float, float* %545, i64 40
  %563 = bitcast float* %562 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %563, i32 0, i32 1, i32 1)
  %564 = getelementptr inbounds float, float* %542, i64 48
  %565 = bitcast float* %564 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %565, i32 0, i32 1, i32 1)
  %566 = getelementptr inbounds float, float* %545, i64 48
  %567 = bitcast float* %566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %567, i32 0, i32 1, i32 1)
  %568 = getelementptr inbounds float, float* %542, i64 56
  %569 = bitcast float* %568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %569, i32 0, i32 1, i32 1)
  %570 = getelementptr inbounds float, float* %545, i64 56
  %571 = bitcast float* %570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %571, i32 0, i32 1, i32 1)
  %572 = getelementptr inbounds float, float* %542, i64 64
  %573 = bitcast float* %572 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %573, i32 0, i32 1, i32 1)
  %574 = getelementptr inbounds float, float* %545, i64 64
  %575 = bitcast float* %574 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %575, i32 0, i32 1, i32 1)
  %576 = getelementptr inbounds float, float* %542, i64 72
  %577 = bitcast float* %576 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %577, i32 0, i32 1, i32 1)
  %578 = getelementptr inbounds float, float* %545, i64 72
  %579 = bitcast float* %578 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %579, i32 0, i32 1, i32 1)
  %580 = getelementptr inbounds float, float* %542, i64 80
  %581 = bitcast float* %580 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %581, i32 0, i32 1, i32 1)
  %582 = getelementptr inbounds float, float* %545, i64 80
  %583 = bitcast float* %582 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %583, i32 0, i32 1, i32 1)
  %584 = bitcast float* %542 to <8 x float>*
  %585 = load <8 x float>, <8 x float>* %584, align 1, !tbaa !12
  %586 = or i64 %541, 8
  %587 = getelementptr inbounds float, float* %5, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %589 = load <8 x float>, <8 x float>* %588, align 1, !tbaa !12
  %590 = add nuw nsw i64 %541, 16
  %591 = getelementptr inbounds float, float* %5, i64 %590
  %592 = bitcast float* %591 to <8 x float>*
  %593 = load <8 x float>, <8 x float>* %592, align 1, !tbaa !12
  %594 = add nuw nsw i64 %541, 24
  %595 = getelementptr inbounds float, float* %5, i64 %594
  %596 = bitcast float* %595 to <8 x float>*
  %597 = load <8 x float>, <8 x float>* %596, align 1, !tbaa !12
  %598 = add nuw nsw i64 %541, 32
  %599 = getelementptr inbounds float, float* %5, i64 %598
  %600 = bitcast float* %599 to <8 x float>*
  %601 = load <8 x float>, <8 x float>* %600, align 1, !tbaa !12
  %602 = add nuw nsw i64 %541, 40
  %603 = getelementptr inbounds float, float* %5, i64 %602
  %604 = bitcast float* %603 to <8 x float>*
  %605 = load <8 x float>, <8 x float>* %604, align 1, !tbaa !12
  %606 = add nuw nsw i64 %541, 48
  %607 = getelementptr inbounds float, float* %5, i64 %606
  %608 = bitcast float* %607 to <8 x float>*
  %609 = load <8 x float>, <8 x float>* %608, align 1, !tbaa !12
  %610 = add nuw nsw i64 %541, 56
  %611 = getelementptr inbounds float, float* %5, i64 %610
  %612 = bitcast float* %611 to <8 x float>*
  %613 = load <8 x float>, <8 x float>* %612, align 1, !tbaa !12
  %614 = add nuw nsw i64 %541, 64
  %615 = getelementptr inbounds float, float* %5, i64 %614
  %616 = bitcast float* %615 to <8 x float>*
  %617 = load <8 x float>, <8 x float>* %616, align 1, !tbaa !12
  %618 = add nuw nsw i64 %541, 72
  %619 = getelementptr inbounds float, float* %5, i64 %618
  %620 = bitcast float* %619 to <8 x float>*
  %621 = load <8 x float>, <8 x float>* %620, align 1, !tbaa !12
  %622 = add nsw i64 %541, %397
  %623 = getelementptr inbounds float, float* %3, i64 %622
  %624 = bitcast float* %623 to <8 x float>*
  %625 = load <8 x float>, <8 x float>* %624, align 1, !tbaa !12
  %626 = add nsw i64 %622, 8
  %627 = getelementptr inbounds float, float* %3, i64 %626
  %628 = bitcast float* %627 to <8 x float>*
  %629 = load <8 x float>, <8 x float>* %628, align 1, !tbaa !12
  %630 = add nsw i64 %622, 16
  %631 = getelementptr inbounds float, float* %3, i64 %630
  %632 = bitcast float* %631 to <8 x float>*
  %633 = load <8 x float>, <8 x float>* %632, align 1, !tbaa !12
  %634 = add nsw i64 %622, 24
  %635 = getelementptr inbounds float, float* %3, i64 %634
  %636 = bitcast float* %635 to <8 x float>*
  %637 = load <8 x float>, <8 x float>* %636, align 1, !tbaa !12
  %638 = add nsw i64 %622, 32
  %639 = getelementptr inbounds float, float* %3, i64 %638
  %640 = bitcast float* %639 to <8 x float>*
  %641 = load <8 x float>, <8 x float>* %640, align 1, !tbaa !12
  %642 = add nsw i64 %622, 40
  %643 = getelementptr inbounds float, float* %3, i64 %642
  %644 = bitcast float* %643 to <8 x float>*
  %645 = load <8 x float>, <8 x float>* %644, align 1, !tbaa !12
  %646 = add nsw i64 %622, 48
  %647 = getelementptr inbounds float, float* %3, i64 %646
  %648 = bitcast float* %647 to <8 x float>*
  %649 = load <8 x float>, <8 x float>* %648, align 1, !tbaa !12
  %650 = add nsw i64 %622, 56
  %651 = getelementptr inbounds float, float* %3, i64 %650
  %652 = bitcast float* %651 to <8 x float>*
  %653 = load <8 x float>, <8 x float>* %652, align 1, !tbaa !12
  %654 = add nsw i64 %622, 64
  %655 = getelementptr inbounds float, float* %3, i64 %654
  %656 = bitcast float* %655 to <8 x float>*
  %657 = load <8 x float>, <8 x float>* %656, align 1, !tbaa !12
  %658 = add nsw i64 %622, 72
  %659 = getelementptr inbounds float, float* %3, i64 %658
  %660 = bitcast float* %659 to <8 x float>*
  %661 = load <8 x float>, <8 x float>* %660, align 1, !tbaa !12
  %662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %625, <8 x float> %40, <8 x float> %585) #10
  %663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %629, <8 x float> %40, <8 x float> %589) #10
  %664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %633, <8 x float> %40, <8 x float> %593) #10
  %665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %637, <8 x float> %40, <8 x float> %597) #10
  %666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %641, <8 x float> %40, <8 x float> %601) #10
  %667 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %645, <8 x float> %40, <8 x float> %605) #10
  %668 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %649, <8 x float> %40, <8 x float> %609) #10
  %669 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %653, <8 x float> %40, <8 x float> %613) #10
  %670 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %657, <8 x float> %40, <8 x float> %617) #10
  %671 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %661, <8 x float> %40, <8 x float> %621) #10
  store <8 x float> %662, <8 x float>* %584, align 1, !tbaa !12
  store <8 x float> %663, <8 x float>* %588, align 1, !tbaa !12
  store <8 x float> %664, <8 x float>* %592, align 1, !tbaa !12
  store <8 x float> %665, <8 x float>* %596, align 1, !tbaa !12
  store <8 x float> %666, <8 x float>* %600, align 1, !tbaa !12
  store <8 x float> %667, <8 x float>* %604, align 1, !tbaa !12
  store <8 x float> %668, <8 x float>* %608, align 1, !tbaa !12
  store <8 x float> %669, <8 x float>* %612, align 1, !tbaa !12
  store <8 x float> %670, <8 x float>* %616, align 1, !tbaa !12
  store <8 x float> %671, <8 x float>* %620, align 1, !tbaa !12
  %672 = add nuw nsw i64 %541, 80
  %673 = icmp ult i64 %672, %398
  br i1 %673, label %540, label %533

674:                                              ; preds = %680
  br i1 %535, label %675, label %1105

675:                                              ; preds = %674
  %676 = trunc i64 %46 to i32
  %677 = mul nsw i32 %534, %676
  %678 = sext i32 %677 to i64
  %679 = zext i32 %534 to i64
  br label %831

680:                                              ; preds = %536, %680
  %681 = phi i64 [ 0, %536 ], [ %823, %680 ]
  %682 = getelementptr inbounds float, float* %5, i64 %681
  %683 = getelementptr inbounds float, float* %682, i64 8
  %684 = bitcast float* %683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %684, i32 0, i32 1, i32 1)
  %685 = getelementptr inbounds float, float* %3, i64 %681
  %686 = getelementptr inbounds float, float* %685, i64 8
  %687 = bitcast float* %686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %687, i32 0, i32 1, i32 1)
  %688 = getelementptr inbounds float, float* %682, i64 16
  %689 = bitcast float* %688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %689, i32 0, i32 1, i32 1)
  %690 = getelementptr inbounds float, float* %685, i64 16
  %691 = bitcast float* %690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %691, i32 0, i32 1, i32 1)
  %692 = getelementptr inbounds float, float* %682, i64 24
  %693 = bitcast float* %692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %693, i32 0, i32 1, i32 1)
  %694 = getelementptr inbounds float, float* %685, i64 24
  %695 = bitcast float* %694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %695, i32 0, i32 1, i32 1)
  %696 = getelementptr inbounds float, float* %682, i64 32
  %697 = bitcast float* %696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %697, i32 0, i32 1, i32 1)
  %698 = getelementptr inbounds float, float* %685, i64 32
  %699 = bitcast float* %698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %699, i32 0, i32 1, i32 1)
  %700 = getelementptr inbounds float, float* %682, i64 40
  %701 = bitcast float* %700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %701, i32 0, i32 1, i32 1)
  %702 = getelementptr inbounds float, float* %685, i64 40
  %703 = bitcast float* %702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %703, i32 0, i32 1, i32 1)
  %704 = getelementptr inbounds float, float* %682, i64 48
  %705 = bitcast float* %704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %705, i32 0, i32 1, i32 1)
  %706 = getelementptr inbounds float, float* %685, i64 48
  %707 = bitcast float* %706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %707, i32 0, i32 1, i32 1)
  %708 = getelementptr inbounds float, float* %682, i64 56
  %709 = bitcast float* %708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %709, i32 0, i32 1, i32 1)
  %710 = getelementptr inbounds float, float* %685, i64 56
  %711 = bitcast float* %710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %711, i32 0, i32 1, i32 1)
  %712 = getelementptr inbounds float, float* %682, i64 64
  %713 = bitcast float* %712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %713, i32 0, i32 1, i32 1)
  %714 = getelementptr inbounds float, float* %685, i64 64
  %715 = bitcast float* %714 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %715, i32 0, i32 1, i32 1)
  %716 = getelementptr inbounds float, float* %682, i64 72
  %717 = bitcast float* %716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %717, i32 0, i32 1, i32 1)
  %718 = getelementptr inbounds float, float* %685, i64 72
  %719 = bitcast float* %718 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %719, i32 0, i32 1, i32 1)
  %720 = getelementptr inbounds float, float* %682, i64 80
  %721 = bitcast float* %720 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %721, i32 0, i32 1, i32 1)
  %722 = getelementptr inbounds float, float* %685, i64 80
  %723 = bitcast float* %722 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %723, i32 0, i32 1, i32 1)
  %724 = bitcast float* %682 to <8 x float>*
  %725 = load <8 x float>, <8 x float>* %724, align 1, !tbaa !12
  %726 = or i64 %681, 8
  %727 = getelementptr inbounds float, float* %5, i64 %726
  %728 = bitcast float* %727 to <8 x float>*
  %729 = load <8 x float>, <8 x float>* %728, align 1, !tbaa !12
  %730 = add nuw nsw i64 %681, 16
  %731 = getelementptr inbounds float, float* %5, i64 %730
  %732 = bitcast float* %731 to <8 x float>*
  %733 = load <8 x float>, <8 x float>* %732, align 1, !tbaa !12
  %734 = add nuw nsw i64 %681, 24
  %735 = getelementptr inbounds float, float* %5, i64 %734
  %736 = bitcast float* %735 to <8 x float>*
  %737 = load <8 x float>, <8 x float>* %736, align 1, !tbaa !12
  %738 = add nuw nsw i64 %681, 32
  %739 = getelementptr inbounds float, float* %5, i64 %738
  %740 = bitcast float* %739 to <8 x float>*
  %741 = load <8 x float>, <8 x float>* %740, align 1, !tbaa !12
  %742 = add nuw nsw i64 %681, 40
  %743 = getelementptr inbounds float, float* %5, i64 %742
  %744 = bitcast float* %743 to <8 x float>*
  %745 = load <8 x float>, <8 x float>* %744, align 1, !tbaa !12
  %746 = add nuw nsw i64 %681, 48
  %747 = getelementptr inbounds float, float* %5, i64 %746
  %748 = bitcast float* %747 to <8 x float>*
  %749 = load <8 x float>, <8 x float>* %748, align 1, !tbaa !12
  %750 = add nuw nsw i64 %681, 56
  %751 = getelementptr inbounds float, float* %5, i64 %750
  %752 = bitcast float* %751 to <8 x float>*
  %753 = load <8 x float>, <8 x float>* %752, align 1, !tbaa !12
  %754 = add nuw nsw i64 %681, 64
  %755 = getelementptr inbounds float, float* %5, i64 %754
  %756 = bitcast float* %755 to <8 x float>*
  %757 = load <8 x float>, <8 x float>* %756, align 1, !tbaa !12
  %758 = add nuw nsw i64 %681, 72
  %759 = getelementptr inbounds float, float* %5, i64 %758
  %760 = bitcast float* %759 to <8 x float>*
  %761 = load <8 x float>, <8 x float>* %760, align 1, !tbaa !12
  %762 = trunc i64 %681 to i32
  %763 = add nsw i32 %539, %762
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds float, float* %3, i64 %764
  %766 = bitcast float* %765 to <8 x float>*
  %767 = load <8 x float>, <8 x float>* %766, align 1, !tbaa !12
  %768 = add nsw i32 %763, 8
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds float, float* %3, i64 %769
  %771 = bitcast float* %770 to <8 x float>*
  %772 = load <8 x float>, <8 x float>* %771, align 1, !tbaa !12
  %773 = add nsw i32 %763, 16
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds float, float* %3, i64 %774
  %776 = bitcast float* %775 to <8 x float>*
  %777 = load <8 x float>, <8 x float>* %776, align 1, !tbaa !12
  %778 = add nsw i32 %763, 24
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds float, float* %3, i64 %779
  %781 = bitcast float* %780 to <8 x float>*
  %782 = load <8 x float>, <8 x float>* %781, align 1, !tbaa !12
  %783 = add nsw i32 %763, 32
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds float, float* %3, i64 %784
  %786 = bitcast float* %785 to <8 x float>*
  %787 = load <8 x float>, <8 x float>* %786, align 1, !tbaa !12
  %788 = add nsw i32 %763, 40
  %789 = sext i32 %788 to i64
  %790 = getelementptr inbounds float, float* %3, i64 %789
  %791 = bitcast float* %790 to <8 x float>*
  %792 = load <8 x float>, <8 x float>* %791, align 1, !tbaa !12
  %793 = add nsw i32 %763, 48
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds float, float* %3, i64 %794
  %796 = bitcast float* %795 to <8 x float>*
  %797 = load <8 x float>, <8 x float>* %796, align 1, !tbaa !12
  %798 = add nsw i32 %763, 56
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds float, float* %3, i64 %799
  %801 = bitcast float* %800 to <8 x float>*
  %802 = load <8 x float>, <8 x float>* %801, align 1, !tbaa !12
  %803 = add nsw i32 %763, 64
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds float, float* %3, i64 %804
  %806 = bitcast float* %805 to <8 x float>*
  %807 = load <8 x float>, <8 x float>* %806, align 1, !tbaa !12
  %808 = add nsw i32 %763, 72
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds float, float* %3, i64 %809
  %811 = bitcast float* %810 to <8 x float>*
  %812 = load <8 x float>, <8 x float>* %811, align 1, !tbaa !12
  %813 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %767, <8 x float> %45, <8 x float> %725) #10
  %814 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %772, <8 x float> %45, <8 x float> %729) #10
  %815 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %777, <8 x float> %45, <8 x float> %733) #10
  %816 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %782, <8 x float> %45, <8 x float> %737) #10
  %817 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %787, <8 x float> %45, <8 x float> %741) #10
  %818 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %792, <8 x float> %45, <8 x float> %745) #10
  %819 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %797, <8 x float> %45, <8 x float> %749) #10
  %820 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %802, <8 x float> %45, <8 x float> %753) #10
  %821 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %807, <8 x float> %45, <8 x float> %757) #10
  %822 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %812, <8 x float> %45, <8 x float> %761) #10
  store <8 x float> %813, <8 x float>* %724, align 1, !tbaa !12
  store <8 x float> %814, <8 x float>* %728, align 1, !tbaa !12
  store <8 x float> %815, <8 x float>* %732, align 1, !tbaa !12
  store <8 x float> %816, <8 x float>* %736, align 1, !tbaa !12
  store <8 x float> %817, <8 x float>* %740, align 1, !tbaa !12
  store <8 x float> %818, <8 x float>* %744, align 1, !tbaa !12
  store <8 x float> %819, <8 x float>* %748, align 1, !tbaa !12
  store <8 x float> %820, <8 x float>* %752, align 1, !tbaa !12
  store <8 x float> %821, <8 x float>* %756, align 1, !tbaa !12
  store <8 x float> %822, <8 x float>* %760, align 1, !tbaa !12
  %823 = add nuw nsw i64 %681, 80
  %824 = icmp ult i64 %823, %537
  br i1 %824, label %680, label %674

825:                                              ; preds = %831
  br i1 %535, label %826, label %1105

826:                                              ; preds = %825
  %827 = trunc i64 %51 to i32
  %828 = mul nsw i32 %534, %827
  %829 = sext i32 %828 to i64
  %830 = zext i32 %534 to i64
  br label %971

831:                                              ; preds = %675, %831
  %832 = phi i64 [ 0, %675 ], [ %963, %831 ]
  %833 = getelementptr inbounds float, float* %5, i64 %832
  %834 = getelementptr inbounds float, float* %833, i64 8
  %835 = bitcast float* %834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %835, i32 0, i32 1, i32 1)
  %836 = getelementptr inbounds float, float* %3, i64 %832
  %837 = getelementptr inbounds float, float* %836, i64 8
  %838 = bitcast float* %837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %838, i32 0, i32 1, i32 1)
  %839 = getelementptr inbounds float, float* %833, i64 16
  %840 = bitcast float* %839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %840, i32 0, i32 1, i32 1)
  %841 = getelementptr inbounds float, float* %836, i64 16
  %842 = bitcast float* %841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %842, i32 0, i32 1, i32 1)
  %843 = getelementptr inbounds float, float* %833, i64 24
  %844 = bitcast float* %843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %844, i32 0, i32 1, i32 1)
  %845 = getelementptr inbounds float, float* %836, i64 24
  %846 = bitcast float* %845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %846, i32 0, i32 1, i32 1)
  %847 = getelementptr inbounds float, float* %833, i64 32
  %848 = bitcast float* %847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %848, i32 0, i32 1, i32 1)
  %849 = getelementptr inbounds float, float* %836, i64 32
  %850 = bitcast float* %849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %850, i32 0, i32 1, i32 1)
  %851 = getelementptr inbounds float, float* %833, i64 40
  %852 = bitcast float* %851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %852, i32 0, i32 1, i32 1)
  %853 = getelementptr inbounds float, float* %836, i64 40
  %854 = bitcast float* %853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %854, i32 0, i32 1, i32 1)
  %855 = getelementptr inbounds float, float* %833, i64 48
  %856 = bitcast float* %855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %856, i32 0, i32 1, i32 1)
  %857 = getelementptr inbounds float, float* %836, i64 48
  %858 = bitcast float* %857 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %858, i32 0, i32 1, i32 1)
  %859 = getelementptr inbounds float, float* %833, i64 56
  %860 = bitcast float* %859 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %860, i32 0, i32 1, i32 1)
  %861 = getelementptr inbounds float, float* %836, i64 56
  %862 = bitcast float* %861 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %862, i32 0, i32 1, i32 1)
  %863 = getelementptr inbounds float, float* %833, i64 64
  %864 = bitcast float* %863 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %864, i32 0, i32 1, i32 1)
  %865 = getelementptr inbounds float, float* %836, i64 64
  %866 = bitcast float* %865 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %866, i32 0, i32 1, i32 1)
  %867 = getelementptr inbounds float, float* %833, i64 72
  %868 = bitcast float* %867 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %868, i32 0, i32 1, i32 1)
  %869 = getelementptr inbounds float, float* %836, i64 72
  %870 = bitcast float* %869 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %870, i32 0, i32 1, i32 1)
  %871 = getelementptr inbounds float, float* %833, i64 80
  %872 = bitcast float* %871 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %872, i32 0, i32 1, i32 1)
  %873 = getelementptr inbounds float, float* %836, i64 80
  %874 = bitcast float* %873 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %874, i32 0, i32 1, i32 1)
  %875 = bitcast float* %833 to <8 x float>*
  %876 = load <8 x float>, <8 x float>* %875, align 1, !tbaa !12
  %877 = or i64 %832, 8
  %878 = getelementptr inbounds float, float* %5, i64 %877
  %879 = bitcast float* %878 to <8 x float>*
  %880 = load <8 x float>, <8 x float>* %879, align 1, !tbaa !12
  %881 = add nuw nsw i64 %832, 16
  %882 = getelementptr inbounds float, float* %5, i64 %881
  %883 = bitcast float* %882 to <8 x float>*
  %884 = load <8 x float>, <8 x float>* %883, align 1, !tbaa !12
  %885 = add nuw nsw i64 %832, 24
  %886 = getelementptr inbounds float, float* %5, i64 %885
  %887 = bitcast float* %886 to <8 x float>*
  %888 = load <8 x float>, <8 x float>* %887, align 1, !tbaa !12
  %889 = add nuw nsw i64 %832, 32
  %890 = getelementptr inbounds float, float* %5, i64 %889
  %891 = bitcast float* %890 to <8 x float>*
  %892 = load <8 x float>, <8 x float>* %891, align 1, !tbaa !12
  %893 = add nuw nsw i64 %832, 40
  %894 = getelementptr inbounds float, float* %5, i64 %893
  %895 = bitcast float* %894 to <8 x float>*
  %896 = load <8 x float>, <8 x float>* %895, align 1, !tbaa !12
  %897 = add nuw nsw i64 %832, 48
  %898 = getelementptr inbounds float, float* %5, i64 %897
  %899 = bitcast float* %898 to <8 x float>*
  %900 = load <8 x float>, <8 x float>* %899, align 1, !tbaa !12
  %901 = add nuw nsw i64 %832, 56
  %902 = getelementptr inbounds float, float* %5, i64 %901
  %903 = bitcast float* %902 to <8 x float>*
  %904 = load <8 x float>, <8 x float>* %903, align 1, !tbaa !12
  %905 = add nuw nsw i64 %832, 64
  %906 = getelementptr inbounds float, float* %5, i64 %905
  %907 = bitcast float* %906 to <8 x float>*
  %908 = load <8 x float>, <8 x float>* %907, align 1, !tbaa !12
  %909 = add nuw nsw i64 %832, 72
  %910 = getelementptr inbounds float, float* %5, i64 %909
  %911 = bitcast float* %910 to <8 x float>*
  %912 = load <8 x float>, <8 x float>* %911, align 1, !tbaa !12
  %913 = add nsw i64 %832, %678
  %914 = getelementptr inbounds float, float* %3, i64 %913
  %915 = bitcast float* %914 to <8 x float>*
  %916 = load <8 x float>, <8 x float>* %915, align 1, !tbaa !12
  %917 = add nsw i64 %913, 8
  %918 = getelementptr inbounds float, float* %3, i64 %917
  %919 = bitcast float* %918 to <8 x float>*
  %920 = load <8 x float>, <8 x float>* %919, align 1, !tbaa !12
  %921 = add nsw i64 %913, 16
  %922 = getelementptr inbounds float, float* %3, i64 %921
  %923 = bitcast float* %922 to <8 x float>*
  %924 = load <8 x float>, <8 x float>* %923, align 1, !tbaa !12
  %925 = add nsw i64 %913, 24
  %926 = getelementptr inbounds float, float* %3, i64 %925
  %927 = bitcast float* %926 to <8 x float>*
  %928 = load <8 x float>, <8 x float>* %927, align 1, !tbaa !12
  %929 = add nsw i64 %913, 32
  %930 = getelementptr inbounds float, float* %3, i64 %929
  %931 = bitcast float* %930 to <8 x float>*
  %932 = load <8 x float>, <8 x float>* %931, align 1, !tbaa !12
  %933 = add nsw i64 %913, 40
  %934 = getelementptr inbounds float, float* %3, i64 %933
  %935 = bitcast float* %934 to <8 x float>*
  %936 = load <8 x float>, <8 x float>* %935, align 1, !tbaa !12
  %937 = add nsw i64 %913, 48
  %938 = getelementptr inbounds float, float* %3, i64 %937
  %939 = bitcast float* %938 to <8 x float>*
  %940 = load <8 x float>, <8 x float>* %939, align 1, !tbaa !12
  %941 = add nsw i64 %913, 56
  %942 = getelementptr inbounds float, float* %3, i64 %941
  %943 = bitcast float* %942 to <8 x float>*
  %944 = load <8 x float>, <8 x float>* %943, align 1, !tbaa !12
  %945 = add nsw i64 %913, 64
  %946 = getelementptr inbounds float, float* %3, i64 %945
  %947 = bitcast float* %946 to <8 x float>*
  %948 = load <8 x float>, <8 x float>* %947, align 1, !tbaa !12
  %949 = add nsw i64 %913, 72
  %950 = getelementptr inbounds float, float* %3, i64 %949
  %951 = bitcast float* %950 to <8 x float>*
  %952 = load <8 x float>, <8 x float>* %951, align 1, !tbaa !12
  %953 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %916, <8 x float> %50, <8 x float> %876) #10
  %954 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %920, <8 x float> %50, <8 x float> %880) #10
  %955 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %924, <8 x float> %50, <8 x float> %884) #10
  %956 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %928, <8 x float> %50, <8 x float> %888) #10
  %957 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %932, <8 x float> %50, <8 x float> %892) #10
  %958 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %936, <8 x float> %50, <8 x float> %896) #10
  %959 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %940, <8 x float> %50, <8 x float> %900) #10
  %960 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %944, <8 x float> %50, <8 x float> %904) #10
  %961 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %948, <8 x float> %50, <8 x float> %908) #10
  %962 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %952, <8 x float> %50, <8 x float> %912) #10
  store <8 x float> %953, <8 x float>* %875, align 1, !tbaa !12
  store <8 x float> %954, <8 x float>* %879, align 1, !tbaa !12
  store <8 x float> %955, <8 x float>* %883, align 1, !tbaa !12
  store <8 x float> %956, <8 x float>* %887, align 1, !tbaa !12
  store <8 x float> %957, <8 x float>* %891, align 1, !tbaa !12
  store <8 x float> %958, <8 x float>* %895, align 1, !tbaa !12
  store <8 x float> %959, <8 x float>* %899, align 1, !tbaa !12
  store <8 x float> %960, <8 x float>* %903, align 1, !tbaa !12
  store <8 x float> %961, <8 x float>* %907, align 1, !tbaa !12
  store <8 x float> %962, <8 x float>* %911, align 1, !tbaa !12
  %963 = add nuw nsw i64 %832, 80
  %964 = icmp ult i64 %963, %679
  br i1 %964, label %831, label %825

965:                                              ; preds = %971
  br i1 %535, label %966, label %1105

966:                                              ; preds = %965
  %967 = trunc i64 %56 to i32
  %968 = mul nsw i32 %534, %967
  %969 = sext i32 %968 to i64
  %970 = zext i32 %534 to i64
  br label %1112

971:                                              ; preds = %826, %971
  %972 = phi i64 [ 0, %826 ], [ %1103, %971 ]
  %973 = getelementptr inbounds float, float* %5, i64 %972
  %974 = getelementptr inbounds float, float* %973, i64 8
  %975 = bitcast float* %974 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %975, i32 0, i32 1, i32 1)
  %976 = getelementptr inbounds float, float* %3, i64 %972
  %977 = getelementptr inbounds float, float* %976, i64 8
  %978 = bitcast float* %977 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %978, i32 0, i32 1, i32 1)
  %979 = getelementptr inbounds float, float* %973, i64 16
  %980 = bitcast float* %979 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %980, i32 0, i32 1, i32 1)
  %981 = getelementptr inbounds float, float* %976, i64 16
  %982 = bitcast float* %981 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %982, i32 0, i32 1, i32 1)
  %983 = getelementptr inbounds float, float* %973, i64 24
  %984 = bitcast float* %983 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %984, i32 0, i32 1, i32 1)
  %985 = getelementptr inbounds float, float* %976, i64 24
  %986 = bitcast float* %985 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %986, i32 0, i32 1, i32 1)
  %987 = getelementptr inbounds float, float* %973, i64 32
  %988 = bitcast float* %987 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %988, i32 0, i32 1, i32 1)
  %989 = getelementptr inbounds float, float* %976, i64 32
  %990 = bitcast float* %989 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %990, i32 0, i32 1, i32 1)
  %991 = getelementptr inbounds float, float* %973, i64 40
  %992 = bitcast float* %991 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %992, i32 0, i32 1, i32 1)
  %993 = getelementptr inbounds float, float* %976, i64 40
  %994 = bitcast float* %993 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %994, i32 0, i32 1, i32 1)
  %995 = getelementptr inbounds float, float* %973, i64 48
  %996 = bitcast float* %995 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %996, i32 0, i32 1, i32 1)
  %997 = getelementptr inbounds float, float* %976, i64 48
  %998 = bitcast float* %997 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %998, i32 0, i32 1, i32 1)
  %999 = getelementptr inbounds float, float* %973, i64 56
  %1000 = bitcast float* %999 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1000, i32 0, i32 1, i32 1)
  %1001 = getelementptr inbounds float, float* %976, i64 56
  %1002 = bitcast float* %1001 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1002, i32 0, i32 1, i32 1)
  %1003 = getelementptr inbounds float, float* %973, i64 64
  %1004 = bitcast float* %1003 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1004, i32 0, i32 1, i32 1)
  %1005 = getelementptr inbounds float, float* %976, i64 64
  %1006 = bitcast float* %1005 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1006, i32 0, i32 1, i32 1)
  %1007 = getelementptr inbounds float, float* %973, i64 72
  %1008 = bitcast float* %1007 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1008, i32 0, i32 1, i32 1)
  %1009 = getelementptr inbounds float, float* %976, i64 72
  %1010 = bitcast float* %1009 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1010, i32 0, i32 1, i32 1)
  %1011 = getelementptr inbounds float, float* %973, i64 80
  %1012 = bitcast float* %1011 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1012, i32 0, i32 1, i32 1)
  %1013 = getelementptr inbounds float, float* %976, i64 80
  %1014 = bitcast float* %1013 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1014, i32 0, i32 1, i32 1)
  %1015 = bitcast float* %973 to <8 x float>*
  %1016 = load <8 x float>, <8 x float>* %1015, align 1, !tbaa !12
  %1017 = or i64 %972, 8
  %1018 = getelementptr inbounds float, float* %5, i64 %1017
  %1019 = bitcast float* %1018 to <8 x float>*
  %1020 = load <8 x float>, <8 x float>* %1019, align 1, !tbaa !12
  %1021 = add nuw nsw i64 %972, 16
  %1022 = getelementptr inbounds float, float* %5, i64 %1021
  %1023 = bitcast float* %1022 to <8 x float>*
  %1024 = load <8 x float>, <8 x float>* %1023, align 1, !tbaa !12
  %1025 = add nuw nsw i64 %972, 24
  %1026 = getelementptr inbounds float, float* %5, i64 %1025
  %1027 = bitcast float* %1026 to <8 x float>*
  %1028 = load <8 x float>, <8 x float>* %1027, align 1, !tbaa !12
  %1029 = add nuw nsw i64 %972, 32
  %1030 = getelementptr inbounds float, float* %5, i64 %1029
  %1031 = bitcast float* %1030 to <8 x float>*
  %1032 = load <8 x float>, <8 x float>* %1031, align 1, !tbaa !12
  %1033 = add nuw nsw i64 %972, 40
  %1034 = getelementptr inbounds float, float* %5, i64 %1033
  %1035 = bitcast float* %1034 to <8 x float>*
  %1036 = load <8 x float>, <8 x float>* %1035, align 1, !tbaa !12
  %1037 = add nuw nsw i64 %972, 48
  %1038 = getelementptr inbounds float, float* %5, i64 %1037
  %1039 = bitcast float* %1038 to <8 x float>*
  %1040 = load <8 x float>, <8 x float>* %1039, align 1, !tbaa !12
  %1041 = add nuw nsw i64 %972, 56
  %1042 = getelementptr inbounds float, float* %5, i64 %1041
  %1043 = bitcast float* %1042 to <8 x float>*
  %1044 = load <8 x float>, <8 x float>* %1043, align 1, !tbaa !12
  %1045 = add nuw nsw i64 %972, 64
  %1046 = getelementptr inbounds float, float* %5, i64 %1045
  %1047 = bitcast float* %1046 to <8 x float>*
  %1048 = load <8 x float>, <8 x float>* %1047, align 1, !tbaa !12
  %1049 = add nuw nsw i64 %972, 72
  %1050 = getelementptr inbounds float, float* %5, i64 %1049
  %1051 = bitcast float* %1050 to <8 x float>*
  %1052 = load <8 x float>, <8 x float>* %1051, align 1, !tbaa !12
  %1053 = add nsw i64 %972, %829
  %1054 = getelementptr inbounds float, float* %3, i64 %1053
  %1055 = bitcast float* %1054 to <8 x float>*
  %1056 = load <8 x float>, <8 x float>* %1055, align 1, !tbaa !12
  %1057 = add nsw i64 %1053, 8
  %1058 = getelementptr inbounds float, float* %3, i64 %1057
  %1059 = bitcast float* %1058 to <8 x float>*
  %1060 = load <8 x float>, <8 x float>* %1059, align 1, !tbaa !12
  %1061 = add nsw i64 %1053, 16
  %1062 = getelementptr inbounds float, float* %3, i64 %1061
  %1063 = bitcast float* %1062 to <8 x float>*
  %1064 = load <8 x float>, <8 x float>* %1063, align 1, !tbaa !12
  %1065 = add nsw i64 %1053, 24
  %1066 = getelementptr inbounds float, float* %3, i64 %1065
  %1067 = bitcast float* %1066 to <8 x float>*
  %1068 = load <8 x float>, <8 x float>* %1067, align 1, !tbaa !12
  %1069 = add nsw i64 %1053, 32
  %1070 = getelementptr inbounds float, float* %3, i64 %1069
  %1071 = bitcast float* %1070 to <8 x float>*
  %1072 = load <8 x float>, <8 x float>* %1071, align 1, !tbaa !12
  %1073 = add nsw i64 %1053, 40
  %1074 = getelementptr inbounds float, float* %3, i64 %1073
  %1075 = bitcast float* %1074 to <8 x float>*
  %1076 = load <8 x float>, <8 x float>* %1075, align 1, !tbaa !12
  %1077 = add nsw i64 %1053, 48
  %1078 = getelementptr inbounds float, float* %3, i64 %1077
  %1079 = bitcast float* %1078 to <8 x float>*
  %1080 = load <8 x float>, <8 x float>* %1079, align 1, !tbaa !12
  %1081 = add nsw i64 %1053, 56
  %1082 = getelementptr inbounds float, float* %3, i64 %1081
  %1083 = bitcast float* %1082 to <8 x float>*
  %1084 = load <8 x float>, <8 x float>* %1083, align 1, !tbaa !12
  %1085 = add nsw i64 %1053, 64
  %1086 = getelementptr inbounds float, float* %3, i64 %1085
  %1087 = bitcast float* %1086 to <8 x float>*
  %1088 = load <8 x float>, <8 x float>* %1087, align 1, !tbaa !12
  %1089 = add nsw i64 %1053, 72
  %1090 = getelementptr inbounds float, float* %3, i64 %1089
  %1091 = bitcast float* %1090 to <8 x float>*
  %1092 = load <8 x float>, <8 x float>* %1091, align 1, !tbaa !12
  %1093 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1056, <8 x float> %55, <8 x float> %1016) #10
  %1094 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1060, <8 x float> %55, <8 x float> %1020) #10
  %1095 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1064, <8 x float> %55, <8 x float> %1024) #10
  %1096 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1068, <8 x float> %55, <8 x float> %1028) #10
  %1097 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1072, <8 x float> %55, <8 x float> %1032) #10
  %1098 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1076, <8 x float> %55, <8 x float> %1036) #10
  %1099 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1080, <8 x float> %55, <8 x float> %1040) #10
  %1100 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1084, <8 x float> %55, <8 x float> %1044) #10
  %1101 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1088, <8 x float> %55, <8 x float> %1048) #10
  %1102 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1092, <8 x float> %55, <8 x float> %1052) #10
  store <8 x float> %1093, <8 x float>* %1015, align 1, !tbaa !12
  store <8 x float> %1094, <8 x float>* %1019, align 1, !tbaa !12
  store <8 x float> %1095, <8 x float>* %1023, align 1, !tbaa !12
  store <8 x float> %1096, <8 x float>* %1027, align 1, !tbaa !12
  store <8 x float> %1097, <8 x float>* %1031, align 1, !tbaa !12
  store <8 x float> %1098, <8 x float>* %1035, align 1, !tbaa !12
  store <8 x float> %1099, <8 x float>* %1039, align 1, !tbaa !12
  store <8 x float> %1100, <8 x float>* %1043, align 1, !tbaa !12
  store <8 x float> %1101, <8 x float>* %1047, align 1, !tbaa !12
  store <8 x float> %1102, <8 x float>* %1051, align 1, !tbaa !12
  %1103 = add nuw nsw i64 %972, 80
  %1104 = icmp ult i64 %1103, %830
  br i1 %1104, label %971, label %965

1105:                                             ; preds = %1112, %674, %825, %965
  %1106 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1107 = icmp sgt i32 %1106, 0
  br i1 %1107, label %1108, label %2109

1108:                                             ; preds = %1105
  %1109 = zext i32 %1106 to i64
  %1110 = trunc i64 %61 to i32
  %1111 = mul nsw i32 %1106, %1110
  br label %1252

1112:                                             ; preds = %966, %1112
  %1113 = phi i64 [ 0, %966 ], [ %1244, %1112 ]
  %1114 = getelementptr inbounds float, float* %5, i64 %1113
  %1115 = getelementptr inbounds float, float* %1114, i64 8
  %1116 = bitcast float* %1115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1116, i32 0, i32 1, i32 1)
  %1117 = getelementptr inbounds float, float* %3, i64 %1113
  %1118 = getelementptr inbounds float, float* %1117, i64 8
  %1119 = bitcast float* %1118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1119, i32 0, i32 1, i32 1)
  %1120 = getelementptr inbounds float, float* %1114, i64 16
  %1121 = bitcast float* %1120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1121, i32 0, i32 1, i32 1)
  %1122 = getelementptr inbounds float, float* %1117, i64 16
  %1123 = bitcast float* %1122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1123, i32 0, i32 1, i32 1)
  %1124 = getelementptr inbounds float, float* %1114, i64 24
  %1125 = bitcast float* %1124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1125, i32 0, i32 1, i32 1)
  %1126 = getelementptr inbounds float, float* %1117, i64 24
  %1127 = bitcast float* %1126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1127, i32 0, i32 1, i32 1)
  %1128 = getelementptr inbounds float, float* %1114, i64 32
  %1129 = bitcast float* %1128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1129, i32 0, i32 1, i32 1)
  %1130 = getelementptr inbounds float, float* %1117, i64 32
  %1131 = bitcast float* %1130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1131, i32 0, i32 1, i32 1)
  %1132 = getelementptr inbounds float, float* %1114, i64 40
  %1133 = bitcast float* %1132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1133, i32 0, i32 1, i32 1)
  %1134 = getelementptr inbounds float, float* %1117, i64 40
  %1135 = bitcast float* %1134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1135, i32 0, i32 1, i32 1)
  %1136 = getelementptr inbounds float, float* %1114, i64 48
  %1137 = bitcast float* %1136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1137, i32 0, i32 1, i32 1)
  %1138 = getelementptr inbounds float, float* %1117, i64 48
  %1139 = bitcast float* %1138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1139, i32 0, i32 1, i32 1)
  %1140 = getelementptr inbounds float, float* %1114, i64 56
  %1141 = bitcast float* %1140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1141, i32 0, i32 1, i32 1)
  %1142 = getelementptr inbounds float, float* %1117, i64 56
  %1143 = bitcast float* %1142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1143, i32 0, i32 1, i32 1)
  %1144 = getelementptr inbounds float, float* %1114, i64 64
  %1145 = bitcast float* %1144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1145, i32 0, i32 1, i32 1)
  %1146 = getelementptr inbounds float, float* %1117, i64 64
  %1147 = bitcast float* %1146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1147, i32 0, i32 1, i32 1)
  %1148 = getelementptr inbounds float, float* %1114, i64 72
  %1149 = bitcast float* %1148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1149, i32 0, i32 1, i32 1)
  %1150 = getelementptr inbounds float, float* %1117, i64 72
  %1151 = bitcast float* %1150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1151, i32 0, i32 1, i32 1)
  %1152 = getelementptr inbounds float, float* %1114, i64 80
  %1153 = bitcast float* %1152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1153, i32 0, i32 1, i32 1)
  %1154 = getelementptr inbounds float, float* %1117, i64 80
  %1155 = bitcast float* %1154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1155, i32 0, i32 1, i32 1)
  %1156 = bitcast float* %1114 to <8 x float>*
  %1157 = load <8 x float>, <8 x float>* %1156, align 1, !tbaa !12
  %1158 = or i64 %1113, 8
  %1159 = getelementptr inbounds float, float* %5, i64 %1158
  %1160 = bitcast float* %1159 to <8 x float>*
  %1161 = load <8 x float>, <8 x float>* %1160, align 1, !tbaa !12
  %1162 = add nuw nsw i64 %1113, 16
  %1163 = getelementptr inbounds float, float* %5, i64 %1162
  %1164 = bitcast float* %1163 to <8 x float>*
  %1165 = load <8 x float>, <8 x float>* %1164, align 1, !tbaa !12
  %1166 = add nuw nsw i64 %1113, 24
  %1167 = getelementptr inbounds float, float* %5, i64 %1166
  %1168 = bitcast float* %1167 to <8 x float>*
  %1169 = load <8 x float>, <8 x float>* %1168, align 1, !tbaa !12
  %1170 = add nuw nsw i64 %1113, 32
  %1171 = getelementptr inbounds float, float* %5, i64 %1170
  %1172 = bitcast float* %1171 to <8 x float>*
  %1173 = load <8 x float>, <8 x float>* %1172, align 1, !tbaa !12
  %1174 = add nuw nsw i64 %1113, 40
  %1175 = getelementptr inbounds float, float* %5, i64 %1174
  %1176 = bitcast float* %1175 to <8 x float>*
  %1177 = load <8 x float>, <8 x float>* %1176, align 1, !tbaa !12
  %1178 = add nuw nsw i64 %1113, 48
  %1179 = getelementptr inbounds float, float* %5, i64 %1178
  %1180 = bitcast float* %1179 to <8 x float>*
  %1181 = load <8 x float>, <8 x float>* %1180, align 1, !tbaa !12
  %1182 = add nuw nsw i64 %1113, 56
  %1183 = getelementptr inbounds float, float* %5, i64 %1182
  %1184 = bitcast float* %1183 to <8 x float>*
  %1185 = load <8 x float>, <8 x float>* %1184, align 1, !tbaa !12
  %1186 = add nuw nsw i64 %1113, 64
  %1187 = getelementptr inbounds float, float* %5, i64 %1186
  %1188 = bitcast float* %1187 to <8 x float>*
  %1189 = load <8 x float>, <8 x float>* %1188, align 1, !tbaa !12
  %1190 = add nuw nsw i64 %1113, 72
  %1191 = getelementptr inbounds float, float* %5, i64 %1190
  %1192 = bitcast float* %1191 to <8 x float>*
  %1193 = load <8 x float>, <8 x float>* %1192, align 1, !tbaa !12
  %1194 = add nsw i64 %1113, %969
  %1195 = getelementptr inbounds float, float* %3, i64 %1194
  %1196 = bitcast float* %1195 to <8 x float>*
  %1197 = load <8 x float>, <8 x float>* %1196, align 1, !tbaa !12
  %1198 = add nsw i64 %1194, 8
  %1199 = getelementptr inbounds float, float* %3, i64 %1198
  %1200 = bitcast float* %1199 to <8 x float>*
  %1201 = load <8 x float>, <8 x float>* %1200, align 1, !tbaa !12
  %1202 = add nsw i64 %1194, 16
  %1203 = getelementptr inbounds float, float* %3, i64 %1202
  %1204 = bitcast float* %1203 to <8 x float>*
  %1205 = load <8 x float>, <8 x float>* %1204, align 1, !tbaa !12
  %1206 = add nsw i64 %1194, 24
  %1207 = getelementptr inbounds float, float* %3, i64 %1206
  %1208 = bitcast float* %1207 to <8 x float>*
  %1209 = load <8 x float>, <8 x float>* %1208, align 1, !tbaa !12
  %1210 = add nsw i64 %1194, 32
  %1211 = getelementptr inbounds float, float* %3, i64 %1210
  %1212 = bitcast float* %1211 to <8 x float>*
  %1213 = load <8 x float>, <8 x float>* %1212, align 1, !tbaa !12
  %1214 = add nsw i64 %1194, 40
  %1215 = getelementptr inbounds float, float* %3, i64 %1214
  %1216 = bitcast float* %1215 to <8 x float>*
  %1217 = load <8 x float>, <8 x float>* %1216, align 1, !tbaa !12
  %1218 = add nsw i64 %1194, 48
  %1219 = getelementptr inbounds float, float* %3, i64 %1218
  %1220 = bitcast float* %1219 to <8 x float>*
  %1221 = load <8 x float>, <8 x float>* %1220, align 1, !tbaa !12
  %1222 = add nsw i64 %1194, 56
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i64 %1194, 64
  %1227 = getelementptr inbounds float, float* %3, i64 %1226
  %1228 = bitcast float* %1227 to <8 x float>*
  %1229 = load <8 x float>, <8 x float>* %1228, align 1, !tbaa !12
  %1230 = add nsw i64 %1194, 72
  %1231 = getelementptr inbounds float, float* %3, i64 %1230
  %1232 = bitcast float* %1231 to <8 x float>*
  %1233 = load <8 x float>, <8 x float>* %1232, align 1, !tbaa !12
  %1234 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1197, <8 x float> %60, <8 x float> %1157) #10
  %1235 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1201, <8 x float> %60, <8 x float> %1161) #10
  %1236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1205, <8 x float> %60, <8 x float> %1165) #10
  %1237 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1209, <8 x float> %60, <8 x float> %1169) #10
  %1238 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1213, <8 x float> %60, <8 x float> %1173) #10
  %1239 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1217, <8 x float> %60, <8 x float> %1177) #10
  %1240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1221, <8 x float> %60, <8 x float> %1181) #10
  %1241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %60, <8 x float> %1185) #10
  %1242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1229, <8 x float> %60, <8 x float> %1189) #10
  %1243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1233, <8 x float> %60, <8 x float> %1193) #10
  store <8 x float> %1234, <8 x float>* %1156, align 1, !tbaa !12
  store <8 x float> %1235, <8 x float>* %1160, align 1, !tbaa !12
  store <8 x float> %1236, <8 x float>* %1164, align 1, !tbaa !12
  store <8 x float> %1237, <8 x float>* %1168, align 1, !tbaa !12
  store <8 x float> %1238, <8 x float>* %1172, align 1, !tbaa !12
  store <8 x float> %1239, <8 x float>* %1176, align 1, !tbaa !12
  store <8 x float> %1240, <8 x float>* %1180, align 1, !tbaa !12
  store <8 x float> %1241, <8 x float>* %1184, align 1, !tbaa !12
  store <8 x float> %1242, <8 x float>* %1188, align 1, !tbaa !12
  store <8 x float> %1243, <8 x float>* %1192, align 1, !tbaa !12
  %1244 = add nuw nsw i64 %1113, 80
  %1245 = icmp ult i64 %1244, %970
  br i1 %1245, label %1112, label %1105

1246:                                             ; preds = %1252
  br i1 %1107, label %1247, label %1677

1247:                                             ; preds = %1246
  %1248 = trunc i64 %66 to i32
  %1249 = mul nsw i32 %1106, %1248
  %1250 = sext i32 %1249 to i64
  %1251 = zext i32 %1106 to i64
  br label %1403

1252:                                             ; preds = %1108, %1252
  %1253 = phi i64 [ 0, %1108 ], [ %1395, %1252 ]
  %1254 = getelementptr inbounds float, float* %5, i64 %1253
  %1255 = getelementptr inbounds float, float* %1254, i64 8
  %1256 = bitcast float* %1255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1256, i32 0, i32 1, i32 1)
  %1257 = getelementptr inbounds float, float* %3, i64 %1253
  %1258 = getelementptr inbounds float, float* %1257, i64 8
  %1259 = bitcast float* %1258 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1259, i32 0, i32 1, i32 1)
  %1260 = getelementptr inbounds float, float* %1254, i64 16
  %1261 = bitcast float* %1260 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1261, i32 0, i32 1, i32 1)
  %1262 = getelementptr inbounds float, float* %1257, i64 16
  %1263 = bitcast float* %1262 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1263, i32 0, i32 1, i32 1)
  %1264 = getelementptr inbounds float, float* %1254, i64 24
  %1265 = bitcast float* %1264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1265, i32 0, i32 1, i32 1)
  %1266 = getelementptr inbounds float, float* %1257, i64 24
  %1267 = bitcast float* %1266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1267, i32 0, i32 1, i32 1)
  %1268 = getelementptr inbounds float, float* %1254, i64 32
  %1269 = bitcast float* %1268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1269, i32 0, i32 1, i32 1)
  %1270 = getelementptr inbounds float, float* %1257, i64 32
  %1271 = bitcast float* %1270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1271, i32 0, i32 1, i32 1)
  %1272 = getelementptr inbounds float, float* %1254, i64 40
  %1273 = bitcast float* %1272 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1273, i32 0, i32 1, i32 1)
  %1274 = getelementptr inbounds float, float* %1257, i64 40
  %1275 = bitcast float* %1274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1275, i32 0, i32 1, i32 1)
  %1276 = getelementptr inbounds float, float* %1254, i64 48
  %1277 = bitcast float* %1276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1277, i32 0, i32 1, i32 1)
  %1278 = getelementptr inbounds float, float* %1257, i64 48
  %1279 = bitcast float* %1278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1279, i32 0, i32 1, i32 1)
  %1280 = getelementptr inbounds float, float* %1254, i64 56
  %1281 = bitcast float* %1280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1281, i32 0, i32 1, i32 1)
  %1282 = getelementptr inbounds float, float* %1257, i64 56
  %1283 = bitcast float* %1282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1283, i32 0, i32 1, i32 1)
  %1284 = getelementptr inbounds float, float* %1254, i64 64
  %1285 = bitcast float* %1284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1285, i32 0, i32 1, i32 1)
  %1286 = getelementptr inbounds float, float* %1257, i64 64
  %1287 = bitcast float* %1286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1287, i32 0, i32 1, i32 1)
  %1288 = getelementptr inbounds float, float* %1254, i64 72
  %1289 = bitcast float* %1288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1289, i32 0, i32 1, i32 1)
  %1290 = getelementptr inbounds float, float* %1257, i64 72
  %1291 = bitcast float* %1290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1291, i32 0, i32 1, i32 1)
  %1292 = getelementptr inbounds float, float* %1254, i64 80
  %1293 = bitcast float* %1292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1293, i32 0, i32 1, i32 1)
  %1294 = getelementptr inbounds float, float* %1257, i64 80
  %1295 = bitcast float* %1294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1295, i32 0, i32 1, i32 1)
  %1296 = bitcast float* %1254 to <8 x float>*
  %1297 = load <8 x float>, <8 x float>* %1296, align 1, !tbaa !12
  %1298 = or i64 %1253, 8
  %1299 = getelementptr inbounds float, float* %5, i64 %1298
  %1300 = bitcast float* %1299 to <8 x float>*
  %1301 = load <8 x float>, <8 x float>* %1300, align 1, !tbaa !12
  %1302 = add nuw nsw i64 %1253, 16
  %1303 = getelementptr inbounds float, float* %5, i64 %1302
  %1304 = bitcast float* %1303 to <8 x float>*
  %1305 = load <8 x float>, <8 x float>* %1304, align 1, !tbaa !12
  %1306 = add nuw nsw i64 %1253, 24
  %1307 = getelementptr inbounds float, float* %5, i64 %1306
  %1308 = bitcast float* %1307 to <8 x float>*
  %1309 = load <8 x float>, <8 x float>* %1308, align 1, !tbaa !12
  %1310 = add nuw nsw i64 %1253, 32
  %1311 = getelementptr inbounds float, float* %5, i64 %1310
  %1312 = bitcast float* %1311 to <8 x float>*
  %1313 = load <8 x float>, <8 x float>* %1312, align 1, !tbaa !12
  %1314 = add nuw nsw i64 %1253, 40
  %1315 = getelementptr inbounds float, float* %5, i64 %1314
  %1316 = bitcast float* %1315 to <8 x float>*
  %1317 = load <8 x float>, <8 x float>* %1316, align 1, !tbaa !12
  %1318 = add nuw nsw i64 %1253, 48
  %1319 = getelementptr inbounds float, float* %5, i64 %1318
  %1320 = bitcast float* %1319 to <8 x float>*
  %1321 = load <8 x float>, <8 x float>* %1320, align 1, !tbaa !12
  %1322 = add nuw nsw i64 %1253, 56
  %1323 = getelementptr inbounds float, float* %5, i64 %1322
  %1324 = bitcast float* %1323 to <8 x float>*
  %1325 = load <8 x float>, <8 x float>* %1324, align 1, !tbaa !12
  %1326 = add nuw nsw i64 %1253, 64
  %1327 = getelementptr inbounds float, float* %5, i64 %1326
  %1328 = bitcast float* %1327 to <8 x float>*
  %1329 = load <8 x float>, <8 x float>* %1328, align 1, !tbaa !12
  %1330 = add nuw nsw i64 %1253, 72
  %1331 = getelementptr inbounds float, float* %5, i64 %1330
  %1332 = bitcast float* %1331 to <8 x float>*
  %1333 = load <8 x float>, <8 x float>* %1332, align 1, !tbaa !12
  %1334 = trunc i64 %1253 to i32
  %1335 = add nsw i32 %1111, %1334
  %1336 = sext i32 %1335 to i64
  %1337 = getelementptr inbounds float, float* %3, i64 %1336
  %1338 = bitcast float* %1337 to <8 x float>*
  %1339 = load <8 x float>, <8 x float>* %1338, align 1, !tbaa !12
  %1340 = add nsw i32 %1335, 8
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds float, float* %3, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nsw i32 %1335, 16
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds float, float* %3, i64 %1346
  %1348 = bitcast float* %1347 to <8 x float>*
  %1349 = load <8 x float>, <8 x float>* %1348, align 1, !tbaa !12
  %1350 = add nsw i32 %1335, 24
  %1351 = sext i32 %1350 to i64
  %1352 = getelementptr inbounds float, float* %3, i64 %1351
  %1353 = bitcast float* %1352 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = add nsw i32 %1335, 32
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds float, float* %3, i64 %1356
  %1358 = bitcast float* %1357 to <8 x float>*
  %1359 = load <8 x float>, <8 x float>* %1358, align 1, !tbaa !12
  %1360 = add nsw i32 %1335, 40
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds float, float* %3, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nsw i32 %1335, 48
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds float, float* %3, i64 %1366
  %1368 = bitcast float* %1367 to <8 x float>*
  %1369 = load <8 x float>, <8 x float>* %1368, align 1, !tbaa !12
  %1370 = add nsw i32 %1335, 56
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds float, float* %3, i64 %1371
  %1373 = bitcast float* %1372 to <8 x float>*
  %1374 = load <8 x float>, <8 x float>* %1373, align 1, !tbaa !12
  %1375 = add nsw i32 %1335, 64
  %1376 = sext i32 %1375 to i64
  %1377 = getelementptr inbounds float, float* %3, i64 %1376
  %1378 = bitcast float* %1377 to <8 x float>*
  %1379 = load <8 x float>, <8 x float>* %1378, align 1, !tbaa !12
  %1380 = add nsw i32 %1335, 72
  %1381 = sext i32 %1380 to i64
  %1382 = getelementptr inbounds float, float* %3, i64 %1381
  %1383 = bitcast float* %1382 to <8 x float>*
  %1384 = load <8 x float>, <8 x float>* %1383, align 1, !tbaa !12
  %1385 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1339, <8 x float> %65, <8 x float> %1297) #10
  %1386 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1344, <8 x float> %65, <8 x float> %1301) #10
  %1387 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1349, <8 x float> %65, <8 x float> %1305) #10
  %1388 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1354, <8 x float> %65, <8 x float> %1309) #10
  %1389 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1359, <8 x float> %65, <8 x float> %1313) #10
  %1390 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1364, <8 x float> %65, <8 x float> %1317) #10
  %1391 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1369, <8 x float> %65, <8 x float> %1321) #10
  %1392 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1374, <8 x float> %65, <8 x float> %1325) #10
  %1393 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1379, <8 x float> %65, <8 x float> %1329) #10
  %1394 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1384, <8 x float> %65, <8 x float> %1333) #10
  store <8 x float> %1385, <8 x float>* %1296, align 1, !tbaa !12
  store <8 x float> %1386, <8 x float>* %1300, align 1, !tbaa !12
  store <8 x float> %1387, <8 x float>* %1304, align 1, !tbaa !12
  store <8 x float> %1388, <8 x float>* %1308, align 1, !tbaa !12
  store <8 x float> %1389, <8 x float>* %1312, align 1, !tbaa !12
  store <8 x float> %1390, <8 x float>* %1316, align 1, !tbaa !12
  store <8 x float> %1391, <8 x float>* %1320, align 1, !tbaa !12
  store <8 x float> %1392, <8 x float>* %1324, align 1, !tbaa !12
  store <8 x float> %1393, <8 x float>* %1328, align 1, !tbaa !12
  store <8 x float> %1394, <8 x float>* %1332, align 1, !tbaa !12
  %1395 = add nuw nsw i64 %1253, 80
  %1396 = icmp ult i64 %1395, %1109
  br i1 %1396, label %1252, label %1246

1397:                                             ; preds = %1403
  br i1 %1107, label %1398, label %1677

1398:                                             ; preds = %1397
  %1399 = trunc i64 %71 to i32
  %1400 = mul nsw i32 %1106, %1399
  %1401 = sext i32 %1400 to i64
  %1402 = zext i32 %1106 to i64
  br label %1543

1403:                                             ; preds = %1247, %1403
  %1404 = phi i64 [ 0, %1247 ], [ %1535, %1403 ]
  %1405 = getelementptr inbounds float, float* %5, i64 %1404
  %1406 = getelementptr inbounds float, float* %1405, i64 8
  %1407 = bitcast float* %1406 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1407, i32 0, i32 1, i32 1)
  %1408 = getelementptr inbounds float, float* %3, i64 %1404
  %1409 = getelementptr inbounds float, float* %1408, i64 8
  %1410 = bitcast float* %1409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1410, i32 0, i32 1, i32 1)
  %1411 = getelementptr inbounds float, float* %1405, i64 16
  %1412 = bitcast float* %1411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1412, i32 0, i32 1, i32 1)
  %1413 = getelementptr inbounds float, float* %1408, i64 16
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %1405, i64 24
  %1416 = bitcast float* %1415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1416, i32 0, i32 1, i32 1)
  %1417 = getelementptr inbounds float, float* %1408, i64 24
  %1418 = bitcast float* %1417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1418, i32 0, i32 1, i32 1)
  %1419 = getelementptr inbounds float, float* %1405, i64 32
  %1420 = bitcast float* %1419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1420, i32 0, i32 1, i32 1)
  %1421 = getelementptr inbounds float, float* %1408, i64 32
  %1422 = bitcast float* %1421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1422, i32 0, i32 1, i32 1)
  %1423 = getelementptr inbounds float, float* %1405, i64 40
  %1424 = bitcast float* %1423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1424, i32 0, i32 1, i32 1)
  %1425 = getelementptr inbounds float, float* %1408, i64 40
  %1426 = bitcast float* %1425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1426, i32 0, i32 1, i32 1)
  %1427 = getelementptr inbounds float, float* %1405, i64 48
  %1428 = bitcast float* %1427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1428, i32 0, i32 1, i32 1)
  %1429 = getelementptr inbounds float, float* %1408, i64 48
  %1430 = bitcast float* %1429 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1430, i32 0, i32 1, i32 1)
  %1431 = getelementptr inbounds float, float* %1405, i64 56
  %1432 = bitcast float* %1431 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1432, i32 0, i32 1, i32 1)
  %1433 = getelementptr inbounds float, float* %1408, i64 56
  %1434 = bitcast float* %1433 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1434, i32 0, i32 1, i32 1)
  %1435 = getelementptr inbounds float, float* %1405, i64 64
  %1436 = bitcast float* %1435 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1436, i32 0, i32 1, i32 1)
  %1437 = getelementptr inbounds float, float* %1408, i64 64
  %1438 = bitcast float* %1437 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1438, i32 0, i32 1, i32 1)
  %1439 = getelementptr inbounds float, float* %1405, i64 72
  %1440 = bitcast float* %1439 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1440, i32 0, i32 1, i32 1)
  %1441 = getelementptr inbounds float, float* %1408, i64 72
  %1442 = bitcast float* %1441 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1442, i32 0, i32 1, i32 1)
  %1443 = getelementptr inbounds float, float* %1405, i64 80
  %1444 = bitcast float* %1443 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1444, i32 0, i32 1, i32 1)
  %1445 = getelementptr inbounds float, float* %1408, i64 80
  %1446 = bitcast float* %1445 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1446, i32 0, i32 1, i32 1)
  %1447 = bitcast float* %1405 to <8 x float>*
  %1448 = load <8 x float>, <8 x float>* %1447, align 1, !tbaa !12
  %1449 = or i64 %1404, 8
  %1450 = getelementptr inbounds float, float* %5, i64 %1449
  %1451 = bitcast float* %1450 to <8 x float>*
  %1452 = load <8 x float>, <8 x float>* %1451, align 1, !tbaa !12
  %1453 = add nuw nsw i64 %1404, 16
  %1454 = getelementptr inbounds float, float* %5, i64 %1453
  %1455 = bitcast float* %1454 to <8 x float>*
  %1456 = load <8 x float>, <8 x float>* %1455, align 1, !tbaa !12
  %1457 = add nuw nsw i64 %1404, 24
  %1458 = getelementptr inbounds float, float* %5, i64 %1457
  %1459 = bitcast float* %1458 to <8 x float>*
  %1460 = load <8 x float>, <8 x float>* %1459, align 1, !tbaa !12
  %1461 = add nuw nsw i64 %1404, 32
  %1462 = getelementptr inbounds float, float* %5, i64 %1461
  %1463 = bitcast float* %1462 to <8 x float>*
  %1464 = load <8 x float>, <8 x float>* %1463, align 1, !tbaa !12
  %1465 = add nuw nsw i64 %1404, 40
  %1466 = getelementptr inbounds float, float* %5, i64 %1465
  %1467 = bitcast float* %1466 to <8 x float>*
  %1468 = load <8 x float>, <8 x float>* %1467, align 1, !tbaa !12
  %1469 = add nuw nsw i64 %1404, 48
  %1470 = getelementptr inbounds float, float* %5, i64 %1469
  %1471 = bitcast float* %1470 to <8 x float>*
  %1472 = load <8 x float>, <8 x float>* %1471, align 1, !tbaa !12
  %1473 = add nuw nsw i64 %1404, 56
  %1474 = getelementptr inbounds float, float* %5, i64 %1473
  %1475 = bitcast float* %1474 to <8 x float>*
  %1476 = load <8 x float>, <8 x float>* %1475, align 1, !tbaa !12
  %1477 = add nuw nsw i64 %1404, 64
  %1478 = getelementptr inbounds float, float* %5, i64 %1477
  %1479 = bitcast float* %1478 to <8 x float>*
  %1480 = load <8 x float>, <8 x float>* %1479, align 1, !tbaa !12
  %1481 = add nuw nsw i64 %1404, 72
  %1482 = getelementptr inbounds float, float* %5, i64 %1481
  %1483 = bitcast float* %1482 to <8 x float>*
  %1484 = load <8 x float>, <8 x float>* %1483, align 1, !tbaa !12
  %1485 = add nsw i64 %1404, %1250
  %1486 = getelementptr inbounds float, float* %3, i64 %1485
  %1487 = bitcast float* %1486 to <8 x float>*
  %1488 = load <8 x float>, <8 x float>* %1487, align 1, !tbaa !12
  %1489 = add nsw i64 %1485, 8
  %1490 = getelementptr inbounds float, float* %3, i64 %1489
  %1491 = bitcast float* %1490 to <8 x float>*
  %1492 = load <8 x float>, <8 x float>* %1491, align 1, !tbaa !12
  %1493 = add nsw i64 %1485, 16
  %1494 = getelementptr inbounds float, float* %3, i64 %1493
  %1495 = bitcast float* %1494 to <8 x float>*
  %1496 = load <8 x float>, <8 x float>* %1495, align 1, !tbaa !12
  %1497 = add nsw i64 %1485, 24
  %1498 = getelementptr inbounds float, float* %3, i64 %1497
  %1499 = bitcast float* %1498 to <8 x float>*
  %1500 = load <8 x float>, <8 x float>* %1499, align 1, !tbaa !12
  %1501 = add nsw i64 %1485, 32
  %1502 = getelementptr inbounds float, float* %3, i64 %1501
  %1503 = bitcast float* %1502 to <8 x float>*
  %1504 = load <8 x float>, <8 x float>* %1503, align 1, !tbaa !12
  %1505 = add nsw i64 %1485, 40
  %1506 = getelementptr inbounds float, float* %3, i64 %1505
  %1507 = bitcast float* %1506 to <8 x float>*
  %1508 = load <8 x float>, <8 x float>* %1507, align 1, !tbaa !12
  %1509 = add nsw i64 %1485, 48
  %1510 = getelementptr inbounds float, float* %3, i64 %1509
  %1511 = bitcast float* %1510 to <8 x float>*
  %1512 = load <8 x float>, <8 x float>* %1511, align 1, !tbaa !12
  %1513 = add nsw i64 %1485, 56
  %1514 = getelementptr inbounds float, float* %3, i64 %1513
  %1515 = bitcast float* %1514 to <8 x float>*
  %1516 = load <8 x float>, <8 x float>* %1515, align 1, !tbaa !12
  %1517 = add nsw i64 %1485, 64
  %1518 = getelementptr inbounds float, float* %3, i64 %1517
  %1519 = bitcast float* %1518 to <8 x float>*
  %1520 = load <8 x float>, <8 x float>* %1519, align 1, !tbaa !12
  %1521 = add nsw i64 %1485, 72
  %1522 = getelementptr inbounds float, float* %3, i64 %1521
  %1523 = bitcast float* %1522 to <8 x float>*
  %1524 = load <8 x float>, <8 x float>* %1523, align 1, !tbaa !12
  %1525 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1488, <8 x float> %70, <8 x float> %1448) #10
  %1526 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1492, <8 x float> %70, <8 x float> %1452) #10
  %1527 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1496, <8 x float> %70, <8 x float> %1456) #10
  %1528 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1500, <8 x float> %70, <8 x float> %1460) #10
  %1529 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1504, <8 x float> %70, <8 x float> %1464) #10
  %1530 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1508, <8 x float> %70, <8 x float> %1468) #10
  %1531 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1512, <8 x float> %70, <8 x float> %1472) #10
  %1532 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1516, <8 x float> %70, <8 x float> %1476) #10
  %1533 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1520, <8 x float> %70, <8 x float> %1480) #10
  %1534 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1524, <8 x float> %70, <8 x float> %1484) #10
  store <8 x float> %1525, <8 x float>* %1447, align 1, !tbaa !12
  store <8 x float> %1526, <8 x float>* %1451, align 1, !tbaa !12
  store <8 x float> %1527, <8 x float>* %1455, align 1, !tbaa !12
  store <8 x float> %1528, <8 x float>* %1459, align 1, !tbaa !12
  store <8 x float> %1529, <8 x float>* %1463, align 1, !tbaa !12
  store <8 x float> %1530, <8 x float>* %1467, align 1, !tbaa !12
  store <8 x float> %1531, <8 x float>* %1471, align 1, !tbaa !12
  store <8 x float> %1532, <8 x float>* %1475, align 1, !tbaa !12
  store <8 x float> %1533, <8 x float>* %1479, align 1, !tbaa !12
  store <8 x float> %1534, <8 x float>* %1483, align 1, !tbaa !12
  %1535 = add nuw nsw i64 %1404, 80
  %1536 = icmp ult i64 %1535, %1251
  br i1 %1536, label %1403, label %1397

1537:                                             ; preds = %1543
  br i1 %1107, label %1538, label %1677

1538:                                             ; preds = %1537
  %1539 = trunc i64 %76 to i32
  %1540 = mul nsw i32 %1106, %1539
  %1541 = sext i32 %1540 to i64
  %1542 = zext i32 %1106 to i64
  br label %1684

1543:                                             ; preds = %1398, %1543
  %1544 = phi i64 [ 0, %1398 ], [ %1675, %1543 ]
  %1545 = getelementptr inbounds float, float* %5, i64 %1544
  %1546 = getelementptr inbounds float, float* %1545, i64 8
  %1547 = bitcast float* %1546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1547, i32 0, i32 1, i32 1)
  %1548 = getelementptr inbounds float, float* %3, i64 %1544
  %1549 = getelementptr inbounds float, float* %1548, i64 8
  %1550 = bitcast float* %1549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1550, i32 0, i32 1, i32 1)
  %1551 = getelementptr inbounds float, float* %1545, i64 16
  %1552 = bitcast float* %1551 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1552, i32 0, i32 1, i32 1)
  %1553 = getelementptr inbounds float, float* %1548, i64 16
  %1554 = bitcast float* %1553 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1554, i32 0, i32 1, i32 1)
  %1555 = getelementptr inbounds float, float* %1545, i64 24
  %1556 = bitcast float* %1555 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1556, i32 0, i32 1, i32 1)
  %1557 = getelementptr inbounds float, float* %1548, i64 24
  %1558 = bitcast float* %1557 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1558, i32 0, i32 1, i32 1)
  %1559 = getelementptr inbounds float, float* %1545, i64 32
  %1560 = bitcast float* %1559 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1560, i32 0, i32 1, i32 1)
  %1561 = getelementptr inbounds float, float* %1548, i64 32
  %1562 = bitcast float* %1561 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1562, i32 0, i32 1, i32 1)
  %1563 = getelementptr inbounds float, float* %1545, i64 40
  %1564 = bitcast float* %1563 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1564, i32 0, i32 1, i32 1)
  %1565 = getelementptr inbounds float, float* %1548, i64 40
  %1566 = bitcast float* %1565 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1566, i32 0, i32 1, i32 1)
  %1567 = getelementptr inbounds float, float* %1545, i64 48
  %1568 = bitcast float* %1567 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1568, i32 0, i32 1, i32 1)
  %1569 = getelementptr inbounds float, float* %1548, i64 48
  %1570 = bitcast float* %1569 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1570, i32 0, i32 1, i32 1)
  %1571 = getelementptr inbounds float, float* %1545, i64 56
  %1572 = bitcast float* %1571 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1572, i32 0, i32 1, i32 1)
  %1573 = getelementptr inbounds float, float* %1548, i64 56
  %1574 = bitcast float* %1573 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1574, i32 0, i32 1, i32 1)
  %1575 = getelementptr inbounds float, float* %1545, i64 64
  %1576 = bitcast float* %1575 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1576, i32 0, i32 1, i32 1)
  %1577 = getelementptr inbounds float, float* %1548, i64 64
  %1578 = bitcast float* %1577 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1578, i32 0, i32 1, i32 1)
  %1579 = getelementptr inbounds float, float* %1545, i64 72
  %1580 = bitcast float* %1579 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1580, i32 0, i32 1, i32 1)
  %1581 = getelementptr inbounds float, float* %1548, i64 72
  %1582 = bitcast float* %1581 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1582, i32 0, i32 1, i32 1)
  %1583 = getelementptr inbounds float, float* %1545, i64 80
  %1584 = bitcast float* %1583 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1584, i32 0, i32 1, i32 1)
  %1585 = getelementptr inbounds float, float* %1548, i64 80
  %1586 = bitcast float* %1585 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1586, i32 0, i32 1, i32 1)
  %1587 = bitcast float* %1545 to <8 x float>*
  %1588 = load <8 x float>, <8 x float>* %1587, align 1, !tbaa !12
  %1589 = or i64 %1544, 8
  %1590 = getelementptr inbounds float, float* %5, i64 %1589
  %1591 = bitcast float* %1590 to <8 x float>*
  %1592 = load <8 x float>, <8 x float>* %1591, align 1, !tbaa !12
  %1593 = add nuw nsw i64 %1544, 16
  %1594 = getelementptr inbounds float, float* %5, i64 %1593
  %1595 = bitcast float* %1594 to <8 x float>*
  %1596 = load <8 x float>, <8 x float>* %1595, align 1, !tbaa !12
  %1597 = add nuw nsw i64 %1544, 24
  %1598 = getelementptr inbounds float, float* %5, i64 %1597
  %1599 = bitcast float* %1598 to <8 x float>*
  %1600 = load <8 x float>, <8 x float>* %1599, align 1, !tbaa !12
  %1601 = add nuw nsw i64 %1544, 32
  %1602 = getelementptr inbounds float, float* %5, i64 %1601
  %1603 = bitcast float* %1602 to <8 x float>*
  %1604 = load <8 x float>, <8 x float>* %1603, align 1, !tbaa !12
  %1605 = add nuw nsw i64 %1544, 40
  %1606 = getelementptr inbounds float, float* %5, i64 %1605
  %1607 = bitcast float* %1606 to <8 x float>*
  %1608 = load <8 x float>, <8 x float>* %1607, align 1, !tbaa !12
  %1609 = add nuw nsw i64 %1544, 48
  %1610 = getelementptr inbounds float, float* %5, i64 %1609
  %1611 = bitcast float* %1610 to <8 x float>*
  %1612 = load <8 x float>, <8 x float>* %1611, align 1, !tbaa !12
  %1613 = add nuw nsw i64 %1544, 56
  %1614 = getelementptr inbounds float, float* %5, i64 %1613
  %1615 = bitcast float* %1614 to <8 x float>*
  %1616 = load <8 x float>, <8 x float>* %1615, align 1, !tbaa !12
  %1617 = add nuw nsw i64 %1544, 64
  %1618 = getelementptr inbounds float, float* %5, i64 %1617
  %1619 = bitcast float* %1618 to <8 x float>*
  %1620 = load <8 x float>, <8 x float>* %1619, align 1, !tbaa !12
  %1621 = add nuw nsw i64 %1544, 72
  %1622 = getelementptr inbounds float, float* %5, i64 %1621
  %1623 = bitcast float* %1622 to <8 x float>*
  %1624 = load <8 x float>, <8 x float>* %1623, align 1, !tbaa !12
  %1625 = add nsw i64 %1544, %1401
  %1626 = getelementptr inbounds float, float* %3, i64 %1625
  %1627 = bitcast float* %1626 to <8 x float>*
  %1628 = load <8 x float>, <8 x float>* %1627, align 1, !tbaa !12
  %1629 = add nsw i64 %1625, 8
  %1630 = getelementptr inbounds float, float* %3, i64 %1629
  %1631 = bitcast float* %1630 to <8 x float>*
  %1632 = load <8 x float>, <8 x float>* %1631, align 1, !tbaa !12
  %1633 = add nsw i64 %1625, 16
  %1634 = getelementptr inbounds float, float* %3, i64 %1633
  %1635 = bitcast float* %1634 to <8 x float>*
  %1636 = load <8 x float>, <8 x float>* %1635, align 1, !tbaa !12
  %1637 = add nsw i64 %1625, 24
  %1638 = getelementptr inbounds float, float* %3, i64 %1637
  %1639 = bitcast float* %1638 to <8 x float>*
  %1640 = load <8 x float>, <8 x float>* %1639, align 1, !tbaa !12
  %1641 = add nsw i64 %1625, 32
  %1642 = getelementptr inbounds float, float* %3, i64 %1641
  %1643 = bitcast float* %1642 to <8 x float>*
  %1644 = load <8 x float>, <8 x float>* %1643, align 1, !tbaa !12
  %1645 = add nsw i64 %1625, 40
  %1646 = getelementptr inbounds float, float* %3, i64 %1645
  %1647 = bitcast float* %1646 to <8 x float>*
  %1648 = load <8 x float>, <8 x float>* %1647, align 1, !tbaa !12
  %1649 = add nsw i64 %1625, 48
  %1650 = getelementptr inbounds float, float* %3, i64 %1649
  %1651 = bitcast float* %1650 to <8 x float>*
  %1652 = load <8 x float>, <8 x float>* %1651, align 1, !tbaa !12
  %1653 = add nsw i64 %1625, 56
  %1654 = getelementptr inbounds float, float* %3, i64 %1653
  %1655 = bitcast float* %1654 to <8 x float>*
  %1656 = load <8 x float>, <8 x float>* %1655, align 1, !tbaa !12
  %1657 = add nsw i64 %1625, 64
  %1658 = getelementptr inbounds float, float* %3, i64 %1657
  %1659 = bitcast float* %1658 to <8 x float>*
  %1660 = load <8 x float>, <8 x float>* %1659, align 1, !tbaa !12
  %1661 = add nsw i64 %1625, 72
  %1662 = getelementptr inbounds float, float* %3, i64 %1661
  %1663 = bitcast float* %1662 to <8 x float>*
  %1664 = load <8 x float>, <8 x float>* %1663, align 1, !tbaa !12
  %1665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1628, <8 x float> %75, <8 x float> %1588) #10
  %1666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1632, <8 x float> %75, <8 x float> %1592) #10
  %1667 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1636, <8 x float> %75, <8 x float> %1596) #10
  %1668 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1640, <8 x float> %75, <8 x float> %1600) #10
  %1669 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1644, <8 x float> %75, <8 x float> %1604) #10
  %1670 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1648, <8 x float> %75, <8 x float> %1608) #10
  %1671 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1652, <8 x float> %75, <8 x float> %1612) #10
  %1672 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1656, <8 x float> %75, <8 x float> %1616) #10
  %1673 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1660, <8 x float> %75, <8 x float> %1620) #10
  %1674 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1664, <8 x float> %75, <8 x float> %1624) #10
  store <8 x float> %1665, <8 x float>* %1587, align 1, !tbaa !12
  store <8 x float> %1666, <8 x float>* %1591, align 1, !tbaa !12
  store <8 x float> %1667, <8 x float>* %1595, align 1, !tbaa !12
  store <8 x float> %1668, <8 x float>* %1599, align 1, !tbaa !12
  store <8 x float> %1669, <8 x float>* %1603, align 1, !tbaa !12
  store <8 x float> %1670, <8 x float>* %1607, align 1, !tbaa !12
  store <8 x float> %1671, <8 x float>* %1611, align 1, !tbaa !12
  store <8 x float> %1672, <8 x float>* %1615, align 1, !tbaa !12
  store <8 x float> %1673, <8 x float>* %1619, align 1, !tbaa !12
  store <8 x float> %1674, <8 x float>* %1623, align 1, !tbaa !12
  %1675 = add nuw nsw i64 %1544, 80
  %1676 = icmp ult i64 %1675, %1402
  br i1 %1676, label %1543, label %1537

1677:                                             ; preds = %1684, %1246, %1397, %1537
  %1678 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1679 = icmp sgt i32 %1678, 0
  br i1 %1679, label %1680, label %2109

1680:                                             ; preds = %1677
  %1681 = zext i32 %1678 to i64
  %1682 = trunc i64 %81 to i32
  %1683 = mul nsw i32 %1678, %1682
  br label %1824

1684:                                             ; preds = %1538, %1684
  %1685 = phi i64 [ 0, %1538 ], [ %1816, %1684 ]
  %1686 = getelementptr inbounds float, float* %5, i64 %1685
  %1687 = getelementptr inbounds float, float* %1686, i64 8
  %1688 = bitcast float* %1687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1688, i32 0, i32 1, i32 1)
  %1689 = getelementptr inbounds float, float* %3, i64 %1685
  %1690 = getelementptr inbounds float, float* %1689, i64 8
  %1691 = bitcast float* %1690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1691, i32 0, i32 1, i32 1)
  %1692 = getelementptr inbounds float, float* %1686, i64 16
  %1693 = bitcast float* %1692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1693, i32 0, i32 1, i32 1)
  %1694 = getelementptr inbounds float, float* %1689, i64 16
  %1695 = bitcast float* %1694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1695, i32 0, i32 1, i32 1)
  %1696 = getelementptr inbounds float, float* %1686, i64 24
  %1697 = bitcast float* %1696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1697, i32 0, i32 1, i32 1)
  %1698 = getelementptr inbounds float, float* %1689, i64 24
  %1699 = bitcast float* %1698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1699, i32 0, i32 1, i32 1)
  %1700 = getelementptr inbounds float, float* %1686, i64 32
  %1701 = bitcast float* %1700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1701, i32 0, i32 1, i32 1)
  %1702 = getelementptr inbounds float, float* %1689, i64 32
  %1703 = bitcast float* %1702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1703, i32 0, i32 1, i32 1)
  %1704 = getelementptr inbounds float, float* %1686, i64 40
  %1705 = bitcast float* %1704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1705, i32 0, i32 1, i32 1)
  %1706 = getelementptr inbounds float, float* %1689, i64 40
  %1707 = bitcast float* %1706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1707, i32 0, i32 1, i32 1)
  %1708 = getelementptr inbounds float, float* %1686, i64 48
  %1709 = bitcast float* %1708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1709, i32 0, i32 1, i32 1)
  %1710 = getelementptr inbounds float, float* %1689, i64 48
  %1711 = bitcast float* %1710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1711, i32 0, i32 1, i32 1)
  %1712 = getelementptr inbounds float, float* %1686, i64 56
  %1713 = bitcast float* %1712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1713, i32 0, i32 1, i32 1)
  %1714 = getelementptr inbounds float, float* %1689, i64 56
  %1715 = bitcast float* %1714 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1715, i32 0, i32 1, i32 1)
  %1716 = getelementptr inbounds float, float* %1686, i64 64
  %1717 = bitcast float* %1716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1717, i32 0, i32 1, i32 1)
  %1718 = getelementptr inbounds float, float* %1689, i64 64
  %1719 = bitcast float* %1718 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1719, i32 0, i32 1, i32 1)
  %1720 = getelementptr inbounds float, float* %1686, i64 72
  %1721 = bitcast float* %1720 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1721, i32 0, i32 1, i32 1)
  %1722 = getelementptr inbounds float, float* %1689, i64 72
  %1723 = bitcast float* %1722 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1723, i32 0, i32 1, i32 1)
  %1724 = getelementptr inbounds float, float* %1686, i64 80
  %1725 = bitcast float* %1724 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1725, i32 0, i32 1, i32 1)
  %1726 = getelementptr inbounds float, float* %1689, i64 80
  %1727 = bitcast float* %1726 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1727, i32 0, i32 1, i32 1)
  %1728 = bitcast float* %1686 to <8 x float>*
  %1729 = load <8 x float>, <8 x float>* %1728, align 1, !tbaa !12
  %1730 = or i64 %1685, 8
  %1731 = getelementptr inbounds float, float* %5, i64 %1730
  %1732 = bitcast float* %1731 to <8 x float>*
  %1733 = load <8 x float>, <8 x float>* %1732, align 1, !tbaa !12
  %1734 = add nuw nsw i64 %1685, 16
  %1735 = getelementptr inbounds float, float* %5, i64 %1734
  %1736 = bitcast float* %1735 to <8 x float>*
  %1737 = load <8 x float>, <8 x float>* %1736, align 1, !tbaa !12
  %1738 = add nuw nsw i64 %1685, 24
  %1739 = getelementptr inbounds float, float* %5, i64 %1738
  %1740 = bitcast float* %1739 to <8 x float>*
  %1741 = load <8 x float>, <8 x float>* %1740, align 1, !tbaa !12
  %1742 = add nuw nsw i64 %1685, 32
  %1743 = getelementptr inbounds float, float* %5, i64 %1742
  %1744 = bitcast float* %1743 to <8 x float>*
  %1745 = load <8 x float>, <8 x float>* %1744, align 1, !tbaa !12
  %1746 = add nuw nsw i64 %1685, 40
  %1747 = getelementptr inbounds float, float* %5, i64 %1746
  %1748 = bitcast float* %1747 to <8 x float>*
  %1749 = load <8 x float>, <8 x float>* %1748, align 1, !tbaa !12
  %1750 = add nuw nsw i64 %1685, 48
  %1751 = getelementptr inbounds float, float* %5, i64 %1750
  %1752 = bitcast float* %1751 to <8 x float>*
  %1753 = load <8 x float>, <8 x float>* %1752, align 1, !tbaa !12
  %1754 = add nuw nsw i64 %1685, 56
  %1755 = getelementptr inbounds float, float* %5, i64 %1754
  %1756 = bitcast float* %1755 to <8 x float>*
  %1757 = load <8 x float>, <8 x float>* %1756, align 1, !tbaa !12
  %1758 = add nuw nsw i64 %1685, 64
  %1759 = getelementptr inbounds float, float* %5, i64 %1758
  %1760 = bitcast float* %1759 to <8 x float>*
  %1761 = load <8 x float>, <8 x float>* %1760, align 1, !tbaa !12
  %1762 = add nuw nsw i64 %1685, 72
  %1763 = getelementptr inbounds float, float* %5, i64 %1762
  %1764 = bitcast float* %1763 to <8 x float>*
  %1765 = load <8 x float>, <8 x float>* %1764, align 1, !tbaa !12
  %1766 = add nsw i64 %1685, %1541
  %1767 = getelementptr inbounds float, float* %3, i64 %1766
  %1768 = bitcast float* %1767 to <8 x float>*
  %1769 = load <8 x float>, <8 x float>* %1768, align 1, !tbaa !12
  %1770 = add nsw i64 %1766, 8
  %1771 = getelementptr inbounds float, float* %3, i64 %1770
  %1772 = bitcast float* %1771 to <8 x float>*
  %1773 = load <8 x float>, <8 x float>* %1772, align 1, !tbaa !12
  %1774 = add nsw i64 %1766, 16
  %1775 = getelementptr inbounds float, float* %3, i64 %1774
  %1776 = bitcast float* %1775 to <8 x float>*
  %1777 = load <8 x float>, <8 x float>* %1776, align 1, !tbaa !12
  %1778 = add nsw i64 %1766, 24
  %1779 = getelementptr inbounds float, float* %3, i64 %1778
  %1780 = bitcast float* %1779 to <8 x float>*
  %1781 = load <8 x float>, <8 x float>* %1780, align 1, !tbaa !12
  %1782 = add nsw i64 %1766, 32
  %1783 = getelementptr inbounds float, float* %3, i64 %1782
  %1784 = bitcast float* %1783 to <8 x float>*
  %1785 = load <8 x float>, <8 x float>* %1784, align 1, !tbaa !12
  %1786 = add nsw i64 %1766, 40
  %1787 = getelementptr inbounds float, float* %3, i64 %1786
  %1788 = bitcast float* %1787 to <8 x float>*
  %1789 = load <8 x float>, <8 x float>* %1788, align 1, !tbaa !12
  %1790 = add nsw i64 %1766, 48
  %1791 = getelementptr inbounds float, float* %3, i64 %1790
  %1792 = bitcast float* %1791 to <8 x float>*
  %1793 = load <8 x float>, <8 x float>* %1792, align 1, !tbaa !12
  %1794 = add nsw i64 %1766, 56
  %1795 = getelementptr inbounds float, float* %3, i64 %1794
  %1796 = bitcast float* %1795 to <8 x float>*
  %1797 = load <8 x float>, <8 x float>* %1796, align 1, !tbaa !12
  %1798 = add nsw i64 %1766, 64
  %1799 = getelementptr inbounds float, float* %3, i64 %1798
  %1800 = bitcast float* %1799 to <8 x float>*
  %1801 = load <8 x float>, <8 x float>* %1800, align 1, !tbaa !12
  %1802 = add nsw i64 %1766, 72
  %1803 = getelementptr inbounds float, float* %3, i64 %1802
  %1804 = bitcast float* %1803 to <8 x float>*
  %1805 = load <8 x float>, <8 x float>* %1804, align 1, !tbaa !12
  %1806 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1769, <8 x float> %80, <8 x float> %1729) #10
  %1807 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1773, <8 x float> %80, <8 x float> %1733) #10
  %1808 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1777, <8 x float> %80, <8 x float> %1737) #10
  %1809 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1781, <8 x float> %80, <8 x float> %1741) #10
  %1810 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1785, <8 x float> %80, <8 x float> %1745) #10
  %1811 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1789, <8 x float> %80, <8 x float> %1749) #10
  %1812 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1793, <8 x float> %80, <8 x float> %1753) #10
  %1813 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1797, <8 x float> %80, <8 x float> %1757) #10
  %1814 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1801, <8 x float> %80, <8 x float> %1761) #10
  %1815 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1805, <8 x float> %80, <8 x float> %1765) #10
  store <8 x float> %1806, <8 x float>* %1728, align 1, !tbaa !12
  store <8 x float> %1807, <8 x float>* %1732, align 1, !tbaa !12
  store <8 x float> %1808, <8 x float>* %1736, align 1, !tbaa !12
  store <8 x float> %1809, <8 x float>* %1740, align 1, !tbaa !12
  store <8 x float> %1810, <8 x float>* %1744, align 1, !tbaa !12
  store <8 x float> %1811, <8 x float>* %1748, align 1, !tbaa !12
  store <8 x float> %1812, <8 x float>* %1752, align 1, !tbaa !12
  store <8 x float> %1813, <8 x float>* %1756, align 1, !tbaa !12
  store <8 x float> %1814, <8 x float>* %1760, align 1, !tbaa !12
  store <8 x float> %1815, <8 x float>* %1764, align 1, !tbaa !12
  %1816 = add nuw nsw i64 %1685, 80
  %1817 = icmp ult i64 %1816, %1542
  br i1 %1817, label %1684, label %1677

1818:                                             ; preds = %1824
  br i1 %1679, label %1819, label %2109

1819:                                             ; preds = %1818
  %1820 = trunc i64 %86 to i32
  %1821 = mul nsw i32 %1678, %1820
  %1822 = sext i32 %1821 to i64
  %1823 = zext i32 %1678 to i64
  br label %1975

1824:                                             ; preds = %1680, %1824
  %1825 = phi i64 [ 0, %1680 ], [ %1967, %1824 ]
  %1826 = getelementptr inbounds float, float* %5, i64 %1825
  %1827 = getelementptr inbounds float, float* %1826, i64 8
  %1828 = bitcast float* %1827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1828, i32 0, i32 1, i32 1)
  %1829 = getelementptr inbounds float, float* %3, i64 %1825
  %1830 = getelementptr inbounds float, float* %1829, i64 8
  %1831 = bitcast float* %1830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1831, i32 0, i32 1, i32 1)
  %1832 = getelementptr inbounds float, float* %1826, i64 16
  %1833 = bitcast float* %1832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1833, i32 0, i32 1, i32 1)
  %1834 = getelementptr inbounds float, float* %1829, i64 16
  %1835 = bitcast float* %1834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1835, i32 0, i32 1, i32 1)
  %1836 = getelementptr inbounds float, float* %1826, i64 24
  %1837 = bitcast float* %1836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1837, i32 0, i32 1, i32 1)
  %1838 = getelementptr inbounds float, float* %1829, i64 24
  %1839 = bitcast float* %1838 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1839, i32 0, i32 1, i32 1)
  %1840 = getelementptr inbounds float, float* %1826, i64 32
  %1841 = bitcast float* %1840 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1841, i32 0, i32 1, i32 1)
  %1842 = getelementptr inbounds float, float* %1829, i64 32
  %1843 = bitcast float* %1842 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1843, i32 0, i32 1, i32 1)
  %1844 = getelementptr inbounds float, float* %1826, i64 40
  %1845 = bitcast float* %1844 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1845, i32 0, i32 1, i32 1)
  %1846 = getelementptr inbounds float, float* %1829, i64 40
  %1847 = bitcast float* %1846 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1847, i32 0, i32 1, i32 1)
  %1848 = getelementptr inbounds float, float* %1826, i64 48
  %1849 = bitcast float* %1848 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1849, i32 0, i32 1, i32 1)
  %1850 = getelementptr inbounds float, float* %1829, i64 48
  %1851 = bitcast float* %1850 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1851, i32 0, i32 1, i32 1)
  %1852 = getelementptr inbounds float, float* %1826, i64 56
  %1853 = bitcast float* %1852 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1853, i32 0, i32 1, i32 1)
  %1854 = getelementptr inbounds float, float* %1829, i64 56
  %1855 = bitcast float* %1854 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1855, i32 0, i32 1, i32 1)
  %1856 = getelementptr inbounds float, float* %1826, i64 64
  %1857 = bitcast float* %1856 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1857, i32 0, i32 1, i32 1)
  %1858 = getelementptr inbounds float, float* %1829, i64 64
  %1859 = bitcast float* %1858 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1859, i32 0, i32 1, i32 1)
  %1860 = getelementptr inbounds float, float* %1826, i64 72
  %1861 = bitcast float* %1860 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1861, i32 0, i32 1, i32 1)
  %1862 = getelementptr inbounds float, float* %1829, i64 72
  %1863 = bitcast float* %1862 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1863, i32 0, i32 1, i32 1)
  %1864 = getelementptr inbounds float, float* %1826, i64 80
  %1865 = bitcast float* %1864 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1865, i32 0, i32 1, i32 1)
  %1866 = getelementptr inbounds float, float* %1829, i64 80
  %1867 = bitcast float* %1866 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1867, i32 0, i32 1, i32 1)
  %1868 = bitcast float* %1826 to <8 x float>*
  %1869 = load <8 x float>, <8 x float>* %1868, align 1, !tbaa !12
  %1870 = or i64 %1825, 8
  %1871 = getelementptr inbounds float, float* %5, i64 %1870
  %1872 = bitcast float* %1871 to <8 x float>*
  %1873 = load <8 x float>, <8 x float>* %1872, align 1, !tbaa !12
  %1874 = add nuw nsw i64 %1825, 16
  %1875 = getelementptr inbounds float, float* %5, i64 %1874
  %1876 = bitcast float* %1875 to <8 x float>*
  %1877 = load <8 x float>, <8 x float>* %1876, align 1, !tbaa !12
  %1878 = add nuw nsw i64 %1825, 24
  %1879 = getelementptr inbounds float, float* %5, i64 %1878
  %1880 = bitcast float* %1879 to <8 x float>*
  %1881 = load <8 x float>, <8 x float>* %1880, align 1, !tbaa !12
  %1882 = add nuw nsw i64 %1825, 32
  %1883 = getelementptr inbounds float, float* %5, i64 %1882
  %1884 = bitcast float* %1883 to <8 x float>*
  %1885 = load <8 x float>, <8 x float>* %1884, align 1, !tbaa !12
  %1886 = add nuw nsw i64 %1825, 40
  %1887 = getelementptr inbounds float, float* %5, i64 %1886
  %1888 = bitcast float* %1887 to <8 x float>*
  %1889 = load <8 x float>, <8 x float>* %1888, align 1, !tbaa !12
  %1890 = add nuw nsw i64 %1825, 48
  %1891 = getelementptr inbounds float, float* %5, i64 %1890
  %1892 = bitcast float* %1891 to <8 x float>*
  %1893 = load <8 x float>, <8 x float>* %1892, align 1, !tbaa !12
  %1894 = add nuw nsw i64 %1825, 56
  %1895 = getelementptr inbounds float, float* %5, i64 %1894
  %1896 = bitcast float* %1895 to <8 x float>*
  %1897 = load <8 x float>, <8 x float>* %1896, align 1, !tbaa !12
  %1898 = add nuw nsw i64 %1825, 64
  %1899 = getelementptr inbounds float, float* %5, i64 %1898
  %1900 = bitcast float* %1899 to <8 x float>*
  %1901 = load <8 x float>, <8 x float>* %1900, align 1, !tbaa !12
  %1902 = add nuw nsw i64 %1825, 72
  %1903 = getelementptr inbounds float, float* %5, i64 %1902
  %1904 = bitcast float* %1903 to <8 x float>*
  %1905 = load <8 x float>, <8 x float>* %1904, align 1, !tbaa !12
  %1906 = trunc i64 %1825 to i32
  %1907 = add nsw i32 %1683, %1906
  %1908 = sext i32 %1907 to i64
  %1909 = getelementptr inbounds float, float* %3, i64 %1908
  %1910 = bitcast float* %1909 to <8 x float>*
  %1911 = load <8 x float>, <8 x float>* %1910, align 1, !tbaa !12
  %1912 = add nsw i32 %1907, 8
  %1913 = sext i32 %1912 to i64
  %1914 = getelementptr inbounds float, float* %3, i64 %1913
  %1915 = bitcast float* %1914 to <8 x float>*
  %1916 = load <8 x float>, <8 x float>* %1915, align 1, !tbaa !12
  %1917 = add nsw i32 %1907, 16
  %1918 = sext i32 %1917 to i64
  %1919 = getelementptr inbounds float, float* %3, i64 %1918
  %1920 = bitcast float* %1919 to <8 x float>*
  %1921 = load <8 x float>, <8 x float>* %1920, align 1, !tbaa !12
  %1922 = add nsw i32 %1907, 24
  %1923 = sext i32 %1922 to i64
  %1924 = getelementptr inbounds float, float* %3, i64 %1923
  %1925 = bitcast float* %1924 to <8 x float>*
  %1926 = load <8 x float>, <8 x float>* %1925, align 1, !tbaa !12
  %1927 = add nsw i32 %1907, 32
  %1928 = sext i32 %1927 to i64
  %1929 = getelementptr inbounds float, float* %3, i64 %1928
  %1930 = bitcast float* %1929 to <8 x float>*
  %1931 = load <8 x float>, <8 x float>* %1930, align 1, !tbaa !12
  %1932 = add nsw i32 %1907, 40
  %1933 = sext i32 %1932 to i64
  %1934 = getelementptr inbounds float, float* %3, i64 %1933
  %1935 = bitcast float* %1934 to <8 x float>*
  %1936 = load <8 x float>, <8 x float>* %1935, align 1, !tbaa !12
  %1937 = add nsw i32 %1907, 48
  %1938 = sext i32 %1937 to i64
  %1939 = getelementptr inbounds float, float* %3, i64 %1938
  %1940 = bitcast float* %1939 to <8 x float>*
  %1941 = load <8 x float>, <8 x float>* %1940, align 1, !tbaa !12
  %1942 = add nsw i32 %1907, 56
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds float, float* %3, i64 %1943
  %1945 = bitcast float* %1944 to <8 x float>*
  %1946 = load <8 x float>, <8 x float>* %1945, align 1, !tbaa !12
  %1947 = add nsw i32 %1907, 64
  %1948 = sext i32 %1947 to i64
  %1949 = getelementptr inbounds float, float* %3, i64 %1948
  %1950 = bitcast float* %1949 to <8 x float>*
  %1951 = load <8 x float>, <8 x float>* %1950, align 1, !tbaa !12
  %1952 = add nsw i32 %1907, 72
  %1953 = sext i32 %1952 to i64
  %1954 = getelementptr inbounds float, float* %3, i64 %1953
  %1955 = bitcast float* %1954 to <8 x float>*
  %1956 = load <8 x float>, <8 x float>* %1955, align 1, !tbaa !12
  %1957 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1911, <8 x float> %85, <8 x float> %1869) #10
  %1958 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1916, <8 x float> %85, <8 x float> %1873) #10
  %1959 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1921, <8 x float> %85, <8 x float> %1877) #10
  %1960 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1926, <8 x float> %85, <8 x float> %1881) #10
  %1961 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1931, <8 x float> %85, <8 x float> %1885) #10
  %1962 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1936, <8 x float> %85, <8 x float> %1889) #10
  %1963 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1941, <8 x float> %85, <8 x float> %1893) #10
  %1964 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1946, <8 x float> %85, <8 x float> %1897) #10
  %1965 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1951, <8 x float> %85, <8 x float> %1901) #10
  %1966 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1956, <8 x float> %85, <8 x float> %1905) #10
  store <8 x float> %1957, <8 x float>* %1868, align 1, !tbaa !12
  store <8 x float> %1958, <8 x float>* %1872, align 1, !tbaa !12
  store <8 x float> %1959, <8 x float>* %1876, align 1, !tbaa !12
  store <8 x float> %1960, <8 x float>* %1880, align 1, !tbaa !12
  store <8 x float> %1961, <8 x float>* %1884, align 1, !tbaa !12
  store <8 x float> %1962, <8 x float>* %1888, align 1, !tbaa !12
  store <8 x float> %1963, <8 x float>* %1892, align 1, !tbaa !12
  store <8 x float> %1964, <8 x float>* %1896, align 1, !tbaa !12
  store <8 x float> %1965, <8 x float>* %1900, align 1, !tbaa !12
  store <8 x float> %1966, <8 x float>* %1904, align 1, !tbaa !12
  %1967 = add nuw nsw i64 %1825, 80
  %1968 = icmp ult i64 %1967, %1681
  br i1 %1968, label %1824, label %1818

1969:                                             ; preds = %1975
  br i1 %1679, label %1970, label %2109

1970:                                             ; preds = %1969
  %1971 = trunc i64 %91 to i32
  %1972 = mul nsw i32 %1678, %1971
  %1973 = sext i32 %1972 to i64
  %1974 = zext i32 %1678 to i64
  br label %2114

1975:                                             ; preds = %1819, %1975
  %1976 = phi i64 [ 0, %1819 ], [ %2107, %1975 ]
  %1977 = getelementptr inbounds float, float* %5, i64 %1976
  %1978 = getelementptr inbounds float, float* %1977, i64 8
  %1979 = bitcast float* %1978 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1979, i32 0, i32 1, i32 1)
  %1980 = getelementptr inbounds float, float* %3, i64 %1976
  %1981 = getelementptr inbounds float, float* %1980, i64 8
  %1982 = bitcast float* %1981 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1982, i32 0, i32 1, i32 1)
  %1983 = getelementptr inbounds float, float* %1977, i64 16
  %1984 = bitcast float* %1983 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1984, i32 0, i32 1, i32 1)
  %1985 = getelementptr inbounds float, float* %1980, i64 16
  %1986 = bitcast float* %1985 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1986, i32 0, i32 1, i32 1)
  %1987 = getelementptr inbounds float, float* %1977, i64 24
  %1988 = bitcast float* %1987 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1988, i32 0, i32 1, i32 1)
  %1989 = getelementptr inbounds float, float* %1980, i64 24
  %1990 = bitcast float* %1989 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1990, i32 0, i32 1, i32 1)
  %1991 = getelementptr inbounds float, float* %1977, i64 32
  %1992 = bitcast float* %1991 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1992, i32 0, i32 1, i32 1)
  %1993 = getelementptr inbounds float, float* %1980, i64 32
  %1994 = bitcast float* %1993 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1994, i32 0, i32 1, i32 1)
  %1995 = getelementptr inbounds float, float* %1977, i64 40
  %1996 = bitcast float* %1995 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1996, i32 0, i32 1, i32 1)
  %1997 = getelementptr inbounds float, float* %1980, i64 40
  %1998 = bitcast float* %1997 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1998, i32 0, i32 1, i32 1)
  %1999 = getelementptr inbounds float, float* %1977, i64 48
  %2000 = bitcast float* %1999 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2000, i32 0, i32 1, i32 1)
  %2001 = getelementptr inbounds float, float* %1980, i64 48
  %2002 = bitcast float* %2001 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2002, i32 0, i32 1, i32 1)
  %2003 = getelementptr inbounds float, float* %1977, i64 56
  %2004 = bitcast float* %2003 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2004, i32 0, i32 1, i32 1)
  %2005 = getelementptr inbounds float, float* %1980, i64 56
  %2006 = bitcast float* %2005 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2006, i32 0, i32 1, i32 1)
  %2007 = getelementptr inbounds float, float* %1977, i64 64
  %2008 = bitcast float* %2007 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2008, i32 0, i32 1, i32 1)
  %2009 = getelementptr inbounds float, float* %1980, i64 64
  %2010 = bitcast float* %2009 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2010, i32 0, i32 1, i32 1)
  %2011 = getelementptr inbounds float, float* %1977, i64 72
  %2012 = bitcast float* %2011 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2012, i32 0, i32 1, i32 1)
  %2013 = getelementptr inbounds float, float* %1980, i64 72
  %2014 = bitcast float* %2013 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2014, i32 0, i32 1, i32 1)
  %2015 = getelementptr inbounds float, float* %1977, i64 80
  %2016 = bitcast float* %2015 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2016, i32 0, i32 1, i32 1)
  %2017 = getelementptr inbounds float, float* %1980, i64 80
  %2018 = bitcast float* %2017 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2018, i32 0, i32 1, i32 1)
  %2019 = bitcast float* %1977 to <8 x float>*
  %2020 = load <8 x float>, <8 x float>* %2019, align 1, !tbaa !12
  %2021 = or i64 %1976, 8
  %2022 = getelementptr inbounds float, float* %5, i64 %2021
  %2023 = bitcast float* %2022 to <8 x float>*
  %2024 = load <8 x float>, <8 x float>* %2023, align 1, !tbaa !12
  %2025 = add nuw nsw i64 %1976, 16
  %2026 = getelementptr inbounds float, float* %5, i64 %2025
  %2027 = bitcast float* %2026 to <8 x float>*
  %2028 = load <8 x float>, <8 x float>* %2027, align 1, !tbaa !12
  %2029 = add nuw nsw i64 %1976, 24
  %2030 = getelementptr inbounds float, float* %5, i64 %2029
  %2031 = bitcast float* %2030 to <8 x float>*
  %2032 = load <8 x float>, <8 x float>* %2031, align 1, !tbaa !12
  %2033 = add nuw nsw i64 %1976, 32
  %2034 = getelementptr inbounds float, float* %5, i64 %2033
  %2035 = bitcast float* %2034 to <8 x float>*
  %2036 = load <8 x float>, <8 x float>* %2035, align 1, !tbaa !12
  %2037 = add nuw nsw i64 %1976, 40
  %2038 = getelementptr inbounds float, float* %5, i64 %2037
  %2039 = bitcast float* %2038 to <8 x float>*
  %2040 = load <8 x float>, <8 x float>* %2039, align 1, !tbaa !12
  %2041 = add nuw nsw i64 %1976, 48
  %2042 = getelementptr inbounds float, float* %5, i64 %2041
  %2043 = bitcast float* %2042 to <8 x float>*
  %2044 = load <8 x float>, <8 x float>* %2043, align 1, !tbaa !12
  %2045 = add nuw nsw i64 %1976, 56
  %2046 = getelementptr inbounds float, float* %5, i64 %2045
  %2047 = bitcast float* %2046 to <8 x float>*
  %2048 = load <8 x float>, <8 x float>* %2047, align 1, !tbaa !12
  %2049 = add nuw nsw i64 %1976, 64
  %2050 = getelementptr inbounds float, float* %5, i64 %2049
  %2051 = bitcast float* %2050 to <8 x float>*
  %2052 = load <8 x float>, <8 x float>* %2051, align 1, !tbaa !12
  %2053 = add nuw nsw i64 %1976, 72
  %2054 = getelementptr inbounds float, float* %5, i64 %2053
  %2055 = bitcast float* %2054 to <8 x float>*
  %2056 = load <8 x float>, <8 x float>* %2055, align 1, !tbaa !12
  %2057 = add nsw i64 %1976, %1822
  %2058 = getelementptr inbounds float, float* %3, i64 %2057
  %2059 = bitcast float* %2058 to <8 x float>*
  %2060 = load <8 x float>, <8 x float>* %2059, align 1, !tbaa !12
  %2061 = add nsw i64 %2057, 8
  %2062 = getelementptr inbounds float, float* %3, i64 %2061
  %2063 = bitcast float* %2062 to <8 x float>*
  %2064 = load <8 x float>, <8 x float>* %2063, align 1, !tbaa !12
  %2065 = add nsw i64 %2057, 16
  %2066 = getelementptr inbounds float, float* %3, i64 %2065
  %2067 = bitcast float* %2066 to <8 x float>*
  %2068 = load <8 x float>, <8 x float>* %2067, align 1, !tbaa !12
  %2069 = add nsw i64 %2057, 24
  %2070 = getelementptr inbounds float, float* %3, i64 %2069
  %2071 = bitcast float* %2070 to <8 x float>*
  %2072 = load <8 x float>, <8 x float>* %2071, align 1, !tbaa !12
  %2073 = add nsw i64 %2057, 32
  %2074 = getelementptr inbounds float, float* %3, i64 %2073
  %2075 = bitcast float* %2074 to <8 x float>*
  %2076 = load <8 x float>, <8 x float>* %2075, align 1, !tbaa !12
  %2077 = add nsw i64 %2057, 40
  %2078 = getelementptr inbounds float, float* %3, i64 %2077
  %2079 = bitcast float* %2078 to <8 x float>*
  %2080 = load <8 x float>, <8 x float>* %2079, align 1, !tbaa !12
  %2081 = add nsw i64 %2057, 48
  %2082 = getelementptr inbounds float, float* %3, i64 %2081
  %2083 = bitcast float* %2082 to <8 x float>*
  %2084 = load <8 x float>, <8 x float>* %2083, align 1, !tbaa !12
  %2085 = add nsw i64 %2057, 56
  %2086 = getelementptr inbounds float, float* %3, i64 %2085
  %2087 = bitcast float* %2086 to <8 x float>*
  %2088 = load <8 x float>, <8 x float>* %2087, align 1, !tbaa !12
  %2089 = add nsw i64 %2057, 64
  %2090 = getelementptr inbounds float, float* %3, i64 %2089
  %2091 = bitcast float* %2090 to <8 x float>*
  %2092 = load <8 x float>, <8 x float>* %2091, align 1, !tbaa !12
  %2093 = add nsw i64 %2057, 72
  %2094 = getelementptr inbounds float, float* %3, i64 %2093
  %2095 = bitcast float* %2094 to <8 x float>*
  %2096 = load <8 x float>, <8 x float>* %2095, align 1, !tbaa !12
  %2097 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2060, <8 x float> %90, <8 x float> %2020) #10
  %2098 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2064, <8 x float> %90, <8 x float> %2024) #10
  %2099 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2068, <8 x float> %90, <8 x float> %2028) #10
  %2100 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2072, <8 x float> %90, <8 x float> %2032) #10
  %2101 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2076, <8 x float> %90, <8 x float> %2036) #10
  %2102 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2080, <8 x float> %90, <8 x float> %2040) #10
  %2103 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2084, <8 x float> %90, <8 x float> %2044) #10
  %2104 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2088, <8 x float> %90, <8 x float> %2048) #10
  %2105 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2092, <8 x float> %90, <8 x float> %2052) #10
  %2106 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2096, <8 x float> %90, <8 x float> %2056) #10
  store <8 x float> %2097, <8 x float>* %2019, align 1, !tbaa !12
  store <8 x float> %2098, <8 x float>* %2023, align 1, !tbaa !12
  store <8 x float> %2099, <8 x float>* %2027, align 1, !tbaa !12
  store <8 x float> %2100, <8 x float>* %2031, align 1, !tbaa !12
  store <8 x float> %2101, <8 x float>* %2035, align 1, !tbaa !12
  store <8 x float> %2102, <8 x float>* %2039, align 1, !tbaa !12
  store <8 x float> %2103, <8 x float>* %2043, align 1, !tbaa !12
  store <8 x float> %2104, <8 x float>* %2047, align 1, !tbaa !12
  store <8 x float> %2105, <8 x float>* %2051, align 1, !tbaa !12
  store <8 x float> %2106, <8 x float>* %2055, align 1, !tbaa !12
  %2107 = add nuw nsw i64 %1976, 80
  %2108 = icmp ult i64 %2107, %1823
  br i1 %2108, label %1975, label %1969

2109:                                             ; preds = %2114, %533, %20, %1105, %1677, %1818, %1969
  %2110 = add nuw nsw i64 %21, 15
  %2111 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %2112 = sext i32 %2111 to i64
  %2113 = icmp slt i64 %2110, %2112
  br i1 %2113, label %20, label %8

2114:                                             ; preds = %1970, %2114
  %2115 = phi i64 [ 0, %1970 ], [ %2246, %2114 ]
  %2116 = getelementptr inbounds float, float* %5, i64 %2115
  %2117 = getelementptr inbounds float, float* %2116, i64 8
  %2118 = bitcast float* %2117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2118, i32 0, i32 1, i32 1)
  %2119 = getelementptr inbounds float, float* %3, i64 %2115
  %2120 = getelementptr inbounds float, float* %2119, i64 8
  %2121 = bitcast float* %2120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2121, i32 0, i32 1, i32 1)
  %2122 = getelementptr inbounds float, float* %2116, i64 16
  %2123 = bitcast float* %2122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2123, i32 0, i32 1, i32 1)
  %2124 = getelementptr inbounds float, float* %2119, i64 16
  %2125 = bitcast float* %2124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2125, i32 0, i32 1, i32 1)
  %2126 = getelementptr inbounds float, float* %2116, i64 24
  %2127 = bitcast float* %2126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2127, i32 0, i32 1, i32 1)
  %2128 = getelementptr inbounds float, float* %2119, i64 24
  %2129 = bitcast float* %2128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2129, i32 0, i32 1, i32 1)
  %2130 = getelementptr inbounds float, float* %2116, i64 32
  %2131 = bitcast float* %2130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2131, i32 0, i32 1, i32 1)
  %2132 = getelementptr inbounds float, float* %2119, i64 32
  %2133 = bitcast float* %2132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2133, i32 0, i32 1, i32 1)
  %2134 = getelementptr inbounds float, float* %2116, i64 40
  %2135 = bitcast float* %2134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2135, i32 0, i32 1, i32 1)
  %2136 = getelementptr inbounds float, float* %2119, i64 40
  %2137 = bitcast float* %2136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2137, i32 0, i32 1, i32 1)
  %2138 = getelementptr inbounds float, float* %2116, i64 48
  %2139 = bitcast float* %2138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2139, i32 0, i32 1, i32 1)
  %2140 = getelementptr inbounds float, float* %2119, i64 48
  %2141 = bitcast float* %2140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2141, i32 0, i32 1, i32 1)
  %2142 = getelementptr inbounds float, float* %2116, i64 56
  %2143 = bitcast float* %2142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2143, i32 0, i32 1, i32 1)
  %2144 = getelementptr inbounds float, float* %2119, i64 56
  %2145 = bitcast float* %2144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2145, i32 0, i32 1, i32 1)
  %2146 = getelementptr inbounds float, float* %2116, i64 64
  %2147 = bitcast float* %2146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2147, i32 0, i32 1, i32 1)
  %2148 = getelementptr inbounds float, float* %2119, i64 64
  %2149 = bitcast float* %2148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2149, i32 0, i32 1, i32 1)
  %2150 = getelementptr inbounds float, float* %2116, i64 72
  %2151 = bitcast float* %2150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2151, i32 0, i32 1, i32 1)
  %2152 = getelementptr inbounds float, float* %2119, i64 72
  %2153 = bitcast float* %2152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2153, i32 0, i32 1, i32 1)
  %2154 = getelementptr inbounds float, float* %2116, i64 80
  %2155 = bitcast float* %2154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2155, i32 0, i32 1, i32 1)
  %2156 = getelementptr inbounds float, float* %2119, i64 80
  %2157 = bitcast float* %2156 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2157, i32 0, i32 1, i32 1)
  %2158 = bitcast float* %2116 to <8 x float>*
  %2159 = load <8 x float>, <8 x float>* %2158, align 1, !tbaa !12
  %2160 = or i64 %2115, 8
  %2161 = getelementptr inbounds float, float* %5, i64 %2160
  %2162 = bitcast float* %2161 to <8 x float>*
  %2163 = load <8 x float>, <8 x float>* %2162, align 1, !tbaa !12
  %2164 = add nuw nsw i64 %2115, 16
  %2165 = getelementptr inbounds float, float* %5, i64 %2164
  %2166 = bitcast float* %2165 to <8 x float>*
  %2167 = load <8 x float>, <8 x float>* %2166, align 1, !tbaa !12
  %2168 = add nuw nsw i64 %2115, 24
  %2169 = getelementptr inbounds float, float* %5, i64 %2168
  %2170 = bitcast float* %2169 to <8 x float>*
  %2171 = load <8 x float>, <8 x float>* %2170, align 1, !tbaa !12
  %2172 = add nuw nsw i64 %2115, 32
  %2173 = getelementptr inbounds float, float* %5, i64 %2172
  %2174 = bitcast float* %2173 to <8 x float>*
  %2175 = load <8 x float>, <8 x float>* %2174, align 1, !tbaa !12
  %2176 = add nuw nsw i64 %2115, 40
  %2177 = getelementptr inbounds float, float* %5, i64 %2176
  %2178 = bitcast float* %2177 to <8 x float>*
  %2179 = load <8 x float>, <8 x float>* %2178, align 1, !tbaa !12
  %2180 = add nuw nsw i64 %2115, 48
  %2181 = getelementptr inbounds float, float* %5, i64 %2180
  %2182 = bitcast float* %2181 to <8 x float>*
  %2183 = load <8 x float>, <8 x float>* %2182, align 1, !tbaa !12
  %2184 = add nuw nsw i64 %2115, 56
  %2185 = getelementptr inbounds float, float* %5, i64 %2184
  %2186 = bitcast float* %2185 to <8 x float>*
  %2187 = load <8 x float>, <8 x float>* %2186, align 1, !tbaa !12
  %2188 = add nuw nsw i64 %2115, 64
  %2189 = getelementptr inbounds float, float* %5, i64 %2188
  %2190 = bitcast float* %2189 to <8 x float>*
  %2191 = load <8 x float>, <8 x float>* %2190, align 1, !tbaa !12
  %2192 = add nuw nsw i64 %2115, 72
  %2193 = getelementptr inbounds float, float* %5, i64 %2192
  %2194 = bitcast float* %2193 to <8 x float>*
  %2195 = load <8 x float>, <8 x float>* %2194, align 1, !tbaa !12
  %2196 = add nsw i64 %2115, %1973
  %2197 = getelementptr inbounds float, float* %3, i64 %2196
  %2198 = bitcast float* %2197 to <8 x float>*
  %2199 = load <8 x float>, <8 x float>* %2198, align 1, !tbaa !12
  %2200 = add nsw i64 %2196, 8
  %2201 = getelementptr inbounds float, float* %3, i64 %2200
  %2202 = bitcast float* %2201 to <8 x float>*
  %2203 = load <8 x float>, <8 x float>* %2202, align 1, !tbaa !12
  %2204 = add nsw i64 %2196, 16
  %2205 = getelementptr inbounds float, float* %3, i64 %2204
  %2206 = bitcast float* %2205 to <8 x float>*
  %2207 = load <8 x float>, <8 x float>* %2206, align 1, !tbaa !12
  %2208 = add nsw i64 %2196, 24
  %2209 = getelementptr inbounds float, float* %3, i64 %2208
  %2210 = bitcast float* %2209 to <8 x float>*
  %2211 = load <8 x float>, <8 x float>* %2210, align 1, !tbaa !12
  %2212 = add nsw i64 %2196, 32
  %2213 = getelementptr inbounds float, float* %3, i64 %2212
  %2214 = bitcast float* %2213 to <8 x float>*
  %2215 = load <8 x float>, <8 x float>* %2214, align 1, !tbaa !12
  %2216 = add nsw i64 %2196, 40
  %2217 = getelementptr inbounds float, float* %3, i64 %2216
  %2218 = bitcast float* %2217 to <8 x float>*
  %2219 = load <8 x float>, <8 x float>* %2218, align 1, !tbaa !12
  %2220 = add nsw i64 %2196, 48
  %2221 = getelementptr inbounds float, float* %3, i64 %2220
  %2222 = bitcast float* %2221 to <8 x float>*
  %2223 = load <8 x float>, <8 x float>* %2222, align 1, !tbaa !12
  %2224 = add nsw i64 %2196, 56
  %2225 = getelementptr inbounds float, float* %3, i64 %2224
  %2226 = bitcast float* %2225 to <8 x float>*
  %2227 = load <8 x float>, <8 x float>* %2226, align 1, !tbaa !12
  %2228 = add nsw i64 %2196, 64
  %2229 = getelementptr inbounds float, float* %3, i64 %2228
  %2230 = bitcast float* %2229 to <8 x float>*
  %2231 = load <8 x float>, <8 x float>* %2230, align 1, !tbaa !12
  %2232 = add nsw i64 %2196, 72
  %2233 = getelementptr inbounds float, float* %3, i64 %2232
  %2234 = bitcast float* %2233 to <8 x float>*
  %2235 = load <8 x float>, <8 x float>* %2234, align 1, !tbaa !12
  %2236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2199, <8 x float> %95, <8 x float> %2159) #10
  %2237 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2203, <8 x float> %95, <8 x float> %2163) #10
  %2238 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2207, <8 x float> %95, <8 x float> %2167) #10
  %2239 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2211, <8 x float> %95, <8 x float> %2171) #10
  %2240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2215, <8 x float> %95, <8 x float> %2175) #10
  %2241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2219, <8 x float> %95, <8 x float> %2179) #10
  %2242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2223, <8 x float> %95, <8 x float> %2183) #10
  %2243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2227, <8 x float> %95, <8 x float> %2187) #10
  %2244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2231, <8 x float> %95, <8 x float> %2191) #10
  %2245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2235, <8 x float> %95, <8 x float> %2195) #10
  store <8 x float> %2236, <8 x float>* %2158, align 1, !tbaa !12
  store <8 x float> %2237, <8 x float>* %2162, align 1, !tbaa !12
  store <8 x float> %2238, <8 x float>* %2166, align 1, !tbaa !12
  store <8 x float> %2239, <8 x float>* %2170, align 1, !tbaa !12
  store <8 x float> %2240, <8 x float>* %2174, align 1, !tbaa !12
  store <8 x float> %2241, <8 x float>* %2178, align 1, !tbaa !12
  store <8 x float> %2242, <8 x float>* %2182, align 1, !tbaa !12
  store <8 x float> %2243, <8 x float>* %2186, align 1, !tbaa !12
  store <8 x float> %2244, <8 x float>* %2190, align 1, !tbaa !12
  store <8 x float> %2245, <8 x float>* %2194, align 1, !tbaa !12
  %2246 = add nuw nsw i64 %2115, 80
  %2247 = icmp ult i64 %2246, %1974
  br i1 %2247, label %2114, label %2109
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 315
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui10_uk15.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
