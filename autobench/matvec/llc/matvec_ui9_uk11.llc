; ModuleID = 'codes/matvec_ui9_uk11.cpp'
source_filename = "codes/matvec_ui9_uk11.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui9_uk11.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 72
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 88
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1384, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1384
  %21 = phi i64 [ %1385, %1384 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %1384

78:                                               ; preds = %20
  %79 = zext i32 %76 to i64
  %80 = trunc i64 %21 to i32
  %81 = mul nsw i32 %76, %80
  br label %88

82:                                               ; preds = %88
  br i1 %77, label %83, label %473

83:                                               ; preds = %82
  %84 = trunc i64 %26 to i32
  %85 = mul nsw i32 %76, %84
  %86 = sext i32 %85 to i64
  %87 = zext i32 %76 to i64
  br label %225

88:                                               ; preds = %78, %88
  %89 = phi i64 [ 0, %78 ], [ %217, %88 ]
  %90 = getelementptr inbounds float, float* %5, i64 %89
  %91 = getelementptr inbounds float, float* %90, i64 8
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %3, i64 %89
  %94 = getelementptr inbounds float, float* %93, i64 8
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %90, i64 16
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %93, i64 16
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %90, i64 24
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %93, i64 24
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %90, i64 32
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %93, i64 32
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %90, i64 40
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %93, i64 40
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %90, i64 48
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %93, i64 48
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %90, i64 56
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %93, i64 56
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %90, i64 64
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %93, i64 64
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %90, i64 72
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %93, i64 72
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = bitcast float* %90 to <8 x float>*
  %129 = load <8 x float>, <8 x float>* %128, align 1, !tbaa !12
  %130 = add nuw nsw i64 %89, 8
  %131 = getelementptr inbounds float, float* %5, i64 %130
  %132 = bitcast float* %131 to <8 x float>*
  %133 = load <8 x float>, <8 x float>* %132, align 1, !tbaa !12
  %134 = add nuw nsw i64 %89, 16
  %135 = getelementptr inbounds float, float* %5, i64 %134
  %136 = bitcast float* %135 to <8 x float>*
  %137 = load <8 x float>, <8 x float>* %136, align 1, !tbaa !12
  %138 = add nuw nsw i64 %89, 24
  %139 = getelementptr inbounds float, float* %5, i64 %138
  %140 = bitcast float* %139 to <8 x float>*
  %141 = load <8 x float>, <8 x float>* %140, align 1, !tbaa !12
  %142 = add nuw nsw i64 %89, 32
  %143 = getelementptr inbounds float, float* %5, i64 %142
  %144 = bitcast float* %143 to <8 x float>*
  %145 = load <8 x float>, <8 x float>* %144, align 1, !tbaa !12
  %146 = add nuw nsw i64 %89, 40
  %147 = getelementptr inbounds float, float* %5, i64 %146
  %148 = bitcast float* %147 to <8 x float>*
  %149 = load <8 x float>, <8 x float>* %148, align 1, !tbaa !12
  %150 = add nuw nsw i64 %89, 48
  %151 = getelementptr inbounds float, float* %5, i64 %150
  %152 = bitcast float* %151 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = add nuw nsw i64 %89, 56
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nuw nsw i64 %89, 64
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = trunc i64 %89 to i32
  %163 = add nsw i32 %81, %162
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds float, float* %3, i64 %164
  %166 = bitcast float* %165 to <8 x float>*
  %167 = load <8 x float>, <8 x float>* %166, align 1, !tbaa !12
  %168 = add nsw i32 %163, 8
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds float, float* %3, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nsw i32 %163, 16
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds float, float* %3, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nsw i32 %163, 24
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds float, float* %3, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = add nsw i32 %163, 32
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds float, float* %3, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = add nsw i32 %163, 40
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %3, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nsw i32 %163, 48
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %3, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = add nsw i32 %163, 56
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %3, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nsw i32 %163, 64
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %167, <8 x float> %25, <8 x float> %129) #10
  %209 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %172, <8 x float> %25, <8 x float> %133) #10
  %210 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %177, <8 x float> %25, <8 x float> %137) #10
  %211 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %182, <8 x float> %25, <8 x float> %141) #10
  %212 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %187, <8 x float> %25, <8 x float> %145) #10
  %213 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %192, <8 x float> %25, <8 x float> %149) #10
  %214 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %197, <8 x float> %25, <8 x float> %153) #10
  %215 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %202, <8 x float> %25, <8 x float> %157) #10
  %216 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %161) #10
  store <8 x float> %208, <8 x float>* %128, align 1, !tbaa !12
  store <8 x float> %209, <8 x float>* %132, align 1, !tbaa !12
  store <8 x float> %210, <8 x float>* %136, align 1, !tbaa !12
  store <8 x float> %211, <8 x float>* %140, align 1, !tbaa !12
  store <8 x float> %212, <8 x float>* %144, align 1, !tbaa !12
  store <8 x float> %213, <8 x float>* %148, align 1, !tbaa !12
  store <8 x float> %214, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %215, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %216, <8 x float>* %160, align 1, !tbaa !12
  %217 = add nuw nsw i64 %89, 72
  %218 = icmp ult i64 %217, %79
  br i1 %218, label %88, label %82

219:                                              ; preds = %225
  br i1 %77, label %220, label %473

220:                                              ; preds = %219
  %221 = trunc i64 %31 to i32
  %222 = mul nsw i32 %76, %221
  %223 = sext i32 %222 to i64
  %224 = zext i32 %76 to i64
  br label %352

225:                                              ; preds = %83, %225
  %226 = phi i64 [ 0, %83 ], [ %344, %225 ]
  %227 = getelementptr inbounds float, float* %5, i64 %226
  %228 = getelementptr inbounds float, float* %227, i64 8
  %229 = bitcast float* %228 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %229, i32 0, i32 1, i32 1)
  %230 = getelementptr inbounds float, float* %3, i64 %226
  %231 = getelementptr inbounds float, float* %230, i64 8
  %232 = bitcast float* %231 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %232, i32 0, i32 1, i32 1)
  %233 = getelementptr inbounds float, float* %227, i64 16
  %234 = bitcast float* %233 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %234, i32 0, i32 1, i32 1)
  %235 = getelementptr inbounds float, float* %230, i64 16
  %236 = bitcast float* %235 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %236, i32 0, i32 1, i32 1)
  %237 = getelementptr inbounds float, float* %227, i64 24
  %238 = bitcast float* %237 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %238, i32 0, i32 1, i32 1)
  %239 = getelementptr inbounds float, float* %230, i64 24
  %240 = bitcast float* %239 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %240, i32 0, i32 1, i32 1)
  %241 = getelementptr inbounds float, float* %227, i64 32
  %242 = bitcast float* %241 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %242, i32 0, i32 1, i32 1)
  %243 = getelementptr inbounds float, float* %230, i64 32
  %244 = bitcast float* %243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %244, i32 0, i32 1, i32 1)
  %245 = getelementptr inbounds float, float* %227, i64 40
  %246 = bitcast float* %245 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %246, i32 0, i32 1, i32 1)
  %247 = getelementptr inbounds float, float* %230, i64 40
  %248 = bitcast float* %247 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %248, i32 0, i32 1, i32 1)
  %249 = getelementptr inbounds float, float* %227, i64 48
  %250 = bitcast float* %249 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %250, i32 0, i32 1, i32 1)
  %251 = getelementptr inbounds float, float* %230, i64 48
  %252 = bitcast float* %251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %252, i32 0, i32 1, i32 1)
  %253 = getelementptr inbounds float, float* %227, i64 56
  %254 = bitcast float* %253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %254, i32 0, i32 1, i32 1)
  %255 = getelementptr inbounds float, float* %230, i64 56
  %256 = bitcast float* %255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %256, i32 0, i32 1, i32 1)
  %257 = getelementptr inbounds float, float* %227, i64 64
  %258 = bitcast float* %257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %258, i32 0, i32 1, i32 1)
  %259 = getelementptr inbounds float, float* %230, i64 64
  %260 = bitcast float* %259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %260, i32 0, i32 1, i32 1)
  %261 = getelementptr inbounds float, float* %227, i64 72
  %262 = bitcast float* %261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %262, i32 0, i32 1, i32 1)
  %263 = getelementptr inbounds float, float* %230, i64 72
  %264 = bitcast float* %263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %264, i32 0, i32 1, i32 1)
  %265 = bitcast float* %227 to <8 x float>*
  %266 = load <8 x float>, <8 x float>* %265, align 1, !tbaa !12
  %267 = add nuw nsw i64 %226, 8
  %268 = getelementptr inbounds float, float* %5, i64 %267
  %269 = bitcast float* %268 to <8 x float>*
  %270 = load <8 x float>, <8 x float>* %269, align 1, !tbaa !12
  %271 = add nuw nsw i64 %226, 16
  %272 = getelementptr inbounds float, float* %5, i64 %271
  %273 = bitcast float* %272 to <8 x float>*
  %274 = load <8 x float>, <8 x float>* %273, align 1, !tbaa !12
  %275 = add nuw nsw i64 %226, 24
  %276 = getelementptr inbounds float, float* %5, i64 %275
  %277 = bitcast float* %276 to <8 x float>*
  %278 = load <8 x float>, <8 x float>* %277, align 1, !tbaa !12
  %279 = add nuw nsw i64 %226, 32
  %280 = getelementptr inbounds float, float* %5, i64 %279
  %281 = bitcast float* %280 to <8 x float>*
  %282 = load <8 x float>, <8 x float>* %281, align 1, !tbaa !12
  %283 = add nuw nsw i64 %226, 40
  %284 = getelementptr inbounds float, float* %5, i64 %283
  %285 = bitcast float* %284 to <8 x float>*
  %286 = load <8 x float>, <8 x float>* %285, align 1, !tbaa !12
  %287 = add nuw nsw i64 %226, 48
  %288 = getelementptr inbounds float, float* %5, i64 %287
  %289 = bitcast float* %288 to <8 x float>*
  %290 = load <8 x float>, <8 x float>* %289, align 1, !tbaa !12
  %291 = add nuw nsw i64 %226, 56
  %292 = getelementptr inbounds float, float* %5, i64 %291
  %293 = bitcast float* %292 to <8 x float>*
  %294 = load <8 x float>, <8 x float>* %293, align 1, !tbaa !12
  %295 = add nuw nsw i64 %226, 64
  %296 = getelementptr inbounds float, float* %5, i64 %295
  %297 = bitcast float* %296 to <8 x float>*
  %298 = load <8 x float>, <8 x float>* %297, align 1, !tbaa !12
  %299 = add nsw i64 %226, %86
  %300 = getelementptr inbounds float, float* %3, i64 %299
  %301 = bitcast float* %300 to <8 x float>*
  %302 = load <8 x float>, <8 x float>* %301, align 1, !tbaa !12
  %303 = add nsw i64 %299, 8
  %304 = getelementptr inbounds float, float* %3, i64 %303
  %305 = bitcast float* %304 to <8 x float>*
  %306 = load <8 x float>, <8 x float>* %305, align 1, !tbaa !12
  %307 = add nsw i64 %299, 16
  %308 = getelementptr inbounds float, float* %3, i64 %307
  %309 = bitcast float* %308 to <8 x float>*
  %310 = load <8 x float>, <8 x float>* %309, align 1, !tbaa !12
  %311 = add nsw i64 %299, 24
  %312 = getelementptr inbounds float, float* %3, i64 %311
  %313 = bitcast float* %312 to <8 x float>*
  %314 = load <8 x float>, <8 x float>* %313, align 1, !tbaa !12
  %315 = add nsw i64 %299, 32
  %316 = getelementptr inbounds float, float* %3, i64 %315
  %317 = bitcast float* %316 to <8 x float>*
  %318 = load <8 x float>, <8 x float>* %317, align 1, !tbaa !12
  %319 = add nsw i64 %299, 40
  %320 = getelementptr inbounds float, float* %3, i64 %319
  %321 = bitcast float* %320 to <8 x float>*
  %322 = load <8 x float>, <8 x float>* %321, align 1, !tbaa !12
  %323 = add nsw i64 %299, 48
  %324 = getelementptr inbounds float, float* %3, i64 %323
  %325 = bitcast float* %324 to <8 x float>*
  %326 = load <8 x float>, <8 x float>* %325, align 1, !tbaa !12
  %327 = add nsw i64 %299, 56
  %328 = getelementptr inbounds float, float* %3, i64 %327
  %329 = bitcast float* %328 to <8 x float>*
  %330 = load <8 x float>, <8 x float>* %329, align 1, !tbaa !12
  %331 = add nsw i64 %299, 64
  %332 = getelementptr inbounds float, float* %3, i64 %331
  %333 = bitcast float* %332 to <8 x float>*
  %334 = load <8 x float>, <8 x float>* %333, align 1, !tbaa !12
  %335 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %302, <8 x float> %30, <8 x float> %266) #10
  %336 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %306, <8 x float> %30, <8 x float> %270) #10
  %337 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %310, <8 x float> %30, <8 x float> %274) #10
  %338 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %314, <8 x float> %30, <8 x float> %278) #10
  %339 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %318, <8 x float> %30, <8 x float> %282) #10
  %340 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %322, <8 x float> %30, <8 x float> %286) #10
  %341 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %326, <8 x float> %30, <8 x float> %290) #10
  %342 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %330, <8 x float> %30, <8 x float> %294) #10
  %343 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %334, <8 x float> %30, <8 x float> %298) #10
  store <8 x float> %335, <8 x float>* %265, align 1, !tbaa !12
  store <8 x float> %336, <8 x float>* %269, align 1, !tbaa !12
  store <8 x float> %337, <8 x float>* %273, align 1, !tbaa !12
  store <8 x float> %338, <8 x float>* %277, align 1, !tbaa !12
  store <8 x float> %339, <8 x float>* %281, align 1, !tbaa !12
  store <8 x float> %340, <8 x float>* %285, align 1, !tbaa !12
  store <8 x float> %341, <8 x float>* %289, align 1, !tbaa !12
  store <8 x float> %342, <8 x float>* %293, align 1, !tbaa !12
  store <8 x float> %343, <8 x float>* %297, align 1, !tbaa !12
  %344 = add nuw nsw i64 %226, 72
  %345 = icmp ult i64 %344, %87
  br i1 %345, label %225, label %219

346:                                              ; preds = %352
  br i1 %77, label %347, label %473

347:                                              ; preds = %346
  %348 = trunc i64 %36 to i32
  %349 = mul nsw i32 %76, %348
  %350 = sext i32 %349 to i64
  %351 = zext i32 %76 to i64
  br label %480

352:                                              ; preds = %220, %352
  %353 = phi i64 [ 0, %220 ], [ %471, %352 ]
  %354 = getelementptr inbounds float, float* %5, i64 %353
  %355 = getelementptr inbounds float, float* %354, i64 8
  %356 = bitcast float* %355 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %356, i32 0, i32 1, i32 1)
  %357 = getelementptr inbounds float, float* %3, i64 %353
  %358 = getelementptr inbounds float, float* %357, i64 8
  %359 = bitcast float* %358 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %359, i32 0, i32 1, i32 1)
  %360 = getelementptr inbounds float, float* %354, i64 16
  %361 = bitcast float* %360 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %361, i32 0, i32 1, i32 1)
  %362 = getelementptr inbounds float, float* %357, i64 16
  %363 = bitcast float* %362 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %363, i32 0, i32 1, i32 1)
  %364 = getelementptr inbounds float, float* %354, i64 24
  %365 = bitcast float* %364 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %365, i32 0, i32 1, i32 1)
  %366 = getelementptr inbounds float, float* %357, i64 24
  %367 = bitcast float* %366 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %367, i32 0, i32 1, i32 1)
  %368 = getelementptr inbounds float, float* %354, i64 32
  %369 = bitcast float* %368 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %369, i32 0, i32 1, i32 1)
  %370 = getelementptr inbounds float, float* %357, i64 32
  %371 = bitcast float* %370 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %371, i32 0, i32 1, i32 1)
  %372 = getelementptr inbounds float, float* %354, i64 40
  %373 = bitcast float* %372 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %373, i32 0, i32 1, i32 1)
  %374 = getelementptr inbounds float, float* %357, i64 40
  %375 = bitcast float* %374 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %375, i32 0, i32 1, i32 1)
  %376 = getelementptr inbounds float, float* %354, i64 48
  %377 = bitcast float* %376 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %377, i32 0, i32 1, i32 1)
  %378 = getelementptr inbounds float, float* %357, i64 48
  %379 = bitcast float* %378 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %379, i32 0, i32 1, i32 1)
  %380 = getelementptr inbounds float, float* %354, i64 56
  %381 = bitcast float* %380 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %381, i32 0, i32 1, i32 1)
  %382 = getelementptr inbounds float, float* %357, i64 56
  %383 = bitcast float* %382 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %383, i32 0, i32 1, i32 1)
  %384 = getelementptr inbounds float, float* %354, i64 64
  %385 = bitcast float* %384 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %385, i32 0, i32 1, i32 1)
  %386 = getelementptr inbounds float, float* %357, i64 64
  %387 = bitcast float* %386 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %387, i32 0, i32 1, i32 1)
  %388 = getelementptr inbounds float, float* %354, i64 72
  %389 = bitcast float* %388 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %389, i32 0, i32 1, i32 1)
  %390 = getelementptr inbounds float, float* %357, i64 72
  %391 = bitcast float* %390 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %391, i32 0, i32 1, i32 1)
  %392 = bitcast float* %354 to <8 x float>*
  %393 = load <8 x float>, <8 x float>* %392, align 1, !tbaa !12
  %394 = add nuw nsw i64 %353, 8
  %395 = getelementptr inbounds float, float* %5, i64 %394
  %396 = bitcast float* %395 to <8 x float>*
  %397 = load <8 x float>, <8 x float>* %396, align 1, !tbaa !12
  %398 = add nuw nsw i64 %353, 16
  %399 = getelementptr inbounds float, float* %5, i64 %398
  %400 = bitcast float* %399 to <8 x float>*
  %401 = load <8 x float>, <8 x float>* %400, align 1, !tbaa !12
  %402 = add nuw nsw i64 %353, 24
  %403 = getelementptr inbounds float, float* %5, i64 %402
  %404 = bitcast float* %403 to <8 x float>*
  %405 = load <8 x float>, <8 x float>* %404, align 1, !tbaa !12
  %406 = add nuw nsw i64 %353, 32
  %407 = getelementptr inbounds float, float* %5, i64 %406
  %408 = bitcast float* %407 to <8 x float>*
  %409 = load <8 x float>, <8 x float>* %408, align 1, !tbaa !12
  %410 = add nuw nsw i64 %353, 40
  %411 = getelementptr inbounds float, float* %5, i64 %410
  %412 = bitcast float* %411 to <8 x float>*
  %413 = load <8 x float>, <8 x float>* %412, align 1, !tbaa !12
  %414 = add nuw nsw i64 %353, 48
  %415 = getelementptr inbounds float, float* %5, i64 %414
  %416 = bitcast float* %415 to <8 x float>*
  %417 = load <8 x float>, <8 x float>* %416, align 1, !tbaa !12
  %418 = add nuw nsw i64 %353, 56
  %419 = getelementptr inbounds float, float* %5, i64 %418
  %420 = bitcast float* %419 to <8 x float>*
  %421 = load <8 x float>, <8 x float>* %420, align 1, !tbaa !12
  %422 = add nuw nsw i64 %353, 64
  %423 = getelementptr inbounds float, float* %5, i64 %422
  %424 = bitcast float* %423 to <8 x float>*
  %425 = load <8 x float>, <8 x float>* %424, align 1, !tbaa !12
  %426 = add nsw i64 %353, %223
  %427 = getelementptr inbounds float, float* %3, i64 %426
  %428 = bitcast float* %427 to <8 x float>*
  %429 = load <8 x float>, <8 x float>* %428, align 1, !tbaa !12
  %430 = add nsw i64 %426, 8
  %431 = getelementptr inbounds float, float* %3, i64 %430
  %432 = bitcast float* %431 to <8 x float>*
  %433 = load <8 x float>, <8 x float>* %432, align 1, !tbaa !12
  %434 = add nsw i64 %426, 16
  %435 = getelementptr inbounds float, float* %3, i64 %434
  %436 = bitcast float* %435 to <8 x float>*
  %437 = load <8 x float>, <8 x float>* %436, align 1, !tbaa !12
  %438 = add nsw i64 %426, 24
  %439 = getelementptr inbounds float, float* %3, i64 %438
  %440 = bitcast float* %439 to <8 x float>*
  %441 = load <8 x float>, <8 x float>* %440, align 1, !tbaa !12
  %442 = add nsw i64 %426, 32
  %443 = getelementptr inbounds float, float* %3, i64 %442
  %444 = bitcast float* %443 to <8 x float>*
  %445 = load <8 x float>, <8 x float>* %444, align 1, !tbaa !12
  %446 = add nsw i64 %426, 40
  %447 = getelementptr inbounds float, float* %3, i64 %446
  %448 = bitcast float* %447 to <8 x float>*
  %449 = load <8 x float>, <8 x float>* %448, align 1, !tbaa !12
  %450 = add nsw i64 %426, 48
  %451 = getelementptr inbounds float, float* %3, i64 %450
  %452 = bitcast float* %451 to <8 x float>*
  %453 = load <8 x float>, <8 x float>* %452, align 1, !tbaa !12
  %454 = add nsw i64 %426, 56
  %455 = getelementptr inbounds float, float* %3, i64 %454
  %456 = bitcast float* %455 to <8 x float>*
  %457 = load <8 x float>, <8 x float>* %456, align 1, !tbaa !12
  %458 = add nsw i64 %426, 64
  %459 = getelementptr inbounds float, float* %3, i64 %458
  %460 = bitcast float* %459 to <8 x float>*
  %461 = load <8 x float>, <8 x float>* %460, align 1, !tbaa !12
  %462 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %429, <8 x float> %35, <8 x float> %393) #10
  %463 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %433, <8 x float> %35, <8 x float> %397) #10
  %464 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %437, <8 x float> %35, <8 x float> %401) #10
  %465 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %441, <8 x float> %35, <8 x float> %405) #10
  %466 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %445, <8 x float> %35, <8 x float> %409) #10
  %467 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %449, <8 x float> %35, <8 x float> %413) #10
  %468 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %453, <8 x float> %35, <8 x float> %417) #10
  %469 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %457, <8 x float> %35, <8 x float> %421) #10
  %470 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %461, <8 x float> %35, <8 x float> %425) #10
  store <8 x float> %462, <8 x float>* %392, align 1, !tbaa !12
  store <8 x float> %463, <8 x float>* %396, align 1, !tbaa !12
  store <8 x float> %464, <8 x float>* %400, align 1, !tbaa !12
  store <8 x float> %465, <8 x float>* %404, align 1, !tbaa !12
  store <8 x float> %466, <8 x float>* %408, align 1, !tbaa !12
  store <8 x float> %467, <8 x float>* %412, align 1, !tbaa !12
  store <8 x float> %468, <8 x float>* %416, align 1, !tbaa !12
  store <8 x float> %469, <8 x float>* %420, align 1, !tbaa !12
  store <8 x float> %470, <8 x float>* %424, align 1, !tbaa !12
  %471 = add nuw nsw i64 %353, 72
  %472 = icmp ult i64 %471, %224
  br i1 %472, label %352, label %346

473:                                              ; preds = %480, %82, %219, %346
  %474 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %475 = icmp sgt i32 %474, 0
  br i1 %475, label %476, label %1384

476:                                              ; preds = %473
  %477 = zext i32 %474 to i64
  %478 = trunc i64 %41 to i32
  %479 = mul nsw i32 %474, %478
  br label %607

480:                                              ; preds = %347, %480
  %481 = phi i64 [ 0, %347 ], [ %599, %480 ]
  %482 = getelementptr inbounds float, float* %5, i64 %481
  %483 = getelementptr inbounds float, float* %482, i64 8
  %484 = bitcast float* %483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %484, i32 0, i32 1, i32 1)
  %485 = getelementptr inbounds float, float* %3, i64 %481
  %486 = getelementptr inbounds float, float* %485, i64 8
  %487 = bitcast float* %486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %487, i32 0, i32 1, i32 1)
  %488 = getelementptr inbounds float, float* %482, i64 16
  %489 = bitcast float* %488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %489, i32 0, i32 1, i32 1)
  %490 = getelementptr inbounds float, float* %485, i64 16
  %491 = bitcast float* %490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %491, i32 0, i32 1, i32 1)
  %492 = getelementptr inbounds float, float* %482, i64 24
  %493 = bitcast float* %492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %493, i32 0, i32 1, i32 1)
  %494 = getelementptr inbounds float, float* %485, i64 24
  %495 = bitcast float* %494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %495, i32 0, i32 1, i32 1)
  %496 = getelementptr inbounds float, float* %482, i64 32
  %497 = bitcast float* %496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %497, i32 0, i32 1, i32 1)
  %498 = getelementptr inbounds float, float* %485, i64 32
  %499 = bitcast float* %498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %499, i32 0, i32 1, i32 1)
  %500 = getelementptr inbounds float, float* %482, i64 40
  %501 = bitcast float* %500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %501, i32 0, i32 1, i32 1)
  %502 = getelementptr inbounds float, float* %485, i64 40
  %503 = bitcast float* %502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %503, i32 0, i32 1, i32 1)
  %504 = getelementptr inbounds float, float* %482, i64 48
  %505 = bitcast float* %504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %505, i32 0, i32 1, i32 1)
  %506 = getelementptr inbounds float, float* %485, i64 48
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %482, i64 56
  %509 = bitcast float* %508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %509, i32 0, i32 1, i32 1)
  %510 = getelementptr inbounds float, float* %485, i64 56
  %511 = bitcast float* %510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %511, i32 0, i32 1, i32 1)
  %512 = getelementptr inbounds float, float* %482, i64 64
  %513 = bitcast float* %512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %513, i32 0, i32 1, i32 1)
  %514 = getelementptr inbounds float, float* %485, i64 64
  %515 = bitcast float* %514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %515, i32 0, i32 1, i32 1)
  %516 = getelementptr inbounds float, float* %482, i64 72
  %517 = bitcast float* %516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %517, i32 0, i32 1, i32 1)
  %518 = getelementptr inbounds float, float* %485, i64 72
  %519 = bitcast float* %518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %519, i32 0, i32 1, i32 1)
  %520 = bitcast float* %482 to <8 x float>*
  %521 = load <8 x float>, <8 x float>* %520, align 1, !tbaa !12
  %522 = add nuw nsw i64 %481, 8
  %523 = getelementptr inbounds float, float* %5, i64 %522
  %524 = bitcast float* %523 to <8 x float>*
  %525 = load <8 x float>, <8 x float>* %524, align 1, !tbaa !12
  %526 = add nuw nsw i64 %481, 16
  %527 = getelementptr inbounds float, float* %5, i64 %526
  %528 = bitcast float* %527 to <8 x float>*
  %529 = load <8 x float>, <8 x float>* %528, align 1, !tbaa !12
  %530 = add nuw nsw i64 %481, 24
  %531 = getelementptr inbounds float, float* %5, i64 %530
  %532 = bitcast float* %531 to <8 x float>*
  %533 = load <8 x float>, <8 x float>* %532, align 1, !tbaa !12
  %534 = add nuw nsw i64 %481, 32
  %535 = getelementptr inbounds float, float* %5, i64 %534
  %536 = bitcast float* %535 to <8 x float>*
  %537 = load <8 x float>, <8 x float>* %536, align 1, !tbaa !12
  %538 = add nuw nsw i64 %481, 40
  %539 = getelementptr inbounds float, float* %5, i64 %538
  %540 = bitcast float* %539 to <8 x float>*
  %541 = load <8 x float>, <8 x float>* %540, align 1, !tbaa !12
  %542 = add nuw nsw i64 %481, 48
  %543 = getelementptr inbounds float, float* %5, i64 %542
  %544 = bitcast float* %543 to <8 x float>*
  %545 = load <8 x float>, <8 x float>* %544, align 1, !tbaa !12
  %546 = add nuw nsw i64 %481, 56
  %547 = getelementptr inbounds float, float* %5, i64 %546
  %548 = bitcast float* %547 to <8 x float>*
  %549 = load <8 x float>, <8 x float>* %548, align 1, !tbaa !12
  %550 = add nuw nsw i64 %481, 64
  %551 = getelementptr inbounds float, float* %5, i64 %550
  %552 = bitcast float* %551 to <8 x float>*
  %553 = load <8 x float>, <8 x float>* %552, align 1, !tbaa !12
  %554 = add nsw i64 %481, %350
  %555 = getelementptr inbounds float, float* %3, i64 %554
  %556 = bitcast float* %555 to <8 x float>*
  %557 = load <8 x float>, <8 x float>* %556, align 1, !tbaa !12
  %558 = add nsw i64 %554, 8
  %559 = getelementptr inbounds float, float* %3, i64 %558
  %560 = bitcast float* %559 to <8 x float>*
  %561 = load <8 x float>, <8 x float>* %560, align 1, !tbaa !12
  %562 = add nsw i64 %554, 16
  %563 = getelementptr inbounds float, float* %3, i64 %562
  %564 = bitcast float* %563 to <8 x float>*
  %565 = load <8 x float>, <8 x float>* %564, align 1, !tbaa !12
  %566 = add nsw i64 %554, 24
  %567 = getelementptr inbounds float, float* %3, i64 %566
  %568 = bitcast float* %567 to <8 x float>*
  %569 = load <8 x float>, <8 x float>* %568, align 1, !tbaa !12
  %570 = add nsw i64 %554, 32
  %571 = getelementptr inbounds float, float* %3, i64 %570
  %572 = bitcast float* %571 to <8 x float>*
  %573 = load <8 x float>, <8 x float>* %572, align 1, !tbaa !12
  %574 = add nsw i64 %554, 40
  %575 = getelementptr inbounds float, float* %3, i64 %574
  %576 = bitcast float* %575 to <8 x float>*
  %577 = load <8 x float>, <8 x float>* %576, align 1, !tbaa !12
  %578 = add nsw i64 %554, 48
  %579 = getelementptr inbounds float, float* %3, i64 %578
  %580 = bitcast float* %579 to <8 x float>*
  %581 = load <8 x float>, <8 x float>* %580, align 1, !tbaa !12
  %582 = add nsw i64 %554, 56
  %583 = getelementptr inbounds float, float* %3, i64 %582
  %584 = bitcast float* %583 to <8 x float>*
  %585 = load <8 x float>, <8 x float>* %584, align 1, !tbaa !12
  %586 = add nsw i64 %554, 64
  %587 = getelementptr inbounds float, float* %3, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %589 = load <8 x float>, <8 x float>* %588, align 1, !tbaa !12
  %590 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %557, <8 x float> %40, <8 x float> %521) #10
  %591 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %561, <8 x float> %40, <8 x float> %525) #10
  %592 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %565, <8 x float> %40, <8 x float> %529) #10
  %593 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %569, <8 x float> %40, <8 x float> %533) #10
  %594 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %573, <8 x float> %40, <8 x float> %537) #10
  %595 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %577, <8 x float> %40, <8 x float> %541) #10
  %596 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %581, <8 x float> %40, <8 x float> %545) #10
  %597 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %585, <8 x float> %40, <8 x float> %549) #10
  %598 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %589, <8 x float> %40, <8 x float> %553) #10
  store <8 x float> %590, <8 x float>* %520, align 1, !tbaa !12
  store <8 x float> %591, <8 x float>* %524, align 1, !tbaa !12
  store <8 x float> %592, <8 x float>* %528, align 1, !tbaa !12
  store <8 x float> %593, <8 x float>* %532, align 1, !tbaa !12
  store <8 x float> %594, <8 x float>* %536, align 1, !tbaa !12
  store <8 x float> %595, <8 x float>* %540, align 1, !tbaa !12
  store <8 x float> %596, <8 x float>* %544, align 1, !tbaa !12
  store <8 x float> %597, <8 x float>* %548, align 1, !tbaa !12
  store <8 x float> %598, <8 x float>* %552, align 1, !tbaa !12
  %599 = add nuw nsw i64 %481, 72
  %600 = icmp ult i64 %599, %351
  br i1 %600, label %480, label %473

601:                                              ; preds = %607
  br i1 %475, label %602, label %992

602:                                              ; preds = %601
  %603 = trunc i64 %46 to i32
  %604 = mul nsw i32 %474, %603
  %605 = sext i32 %604 to i64
  %606 = zext i32 %474 to i64
  br label %744

607:                                              ; preds = %476, %607
  %608 = phi i64 [ 0, %476 ], [ %736, %607 ]
  %609 = getelementptr inbounds float, float* %5, i64 %608
  %610 = getelementptr inbounds float, float* %609, i64 8
  %611 = bitcast float* %610 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %611, i32 0, i32 1, i32 1)
  %612 = getelementptr inbounds float, float* %3, i64 %608
  %613 = getelementptr inbounds float, float* %612, i64 8
  %614 = bitcast float* %613 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %614, i32 0, i32 1, i32 1)
  %615 = getelementptr inbounds float, float* %609, i64 16
  %616 = bitcast float* %615 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %616, i32 0, i32 1, i32 1)
  %617 = getelementptr inbounds float, float* %612, i64 16
  %618 = bitcast float* %617 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %618, i32 0, i32 1, i32 1)
  %619 = getelementptr inbounds float, float* %609, i64 24
  %620 = bitcast float* %619 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %620, i32 0, i32 1, i32 1)
  %621 = getelementptr inbounds float, float* %612, i64 24
  %622 = bitcast float* %621 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %622, i32 0, i32 1, i32 1)
  %623 = getelementptr inbounds float, float* %609, i64 32
  %624 = bitcast float* %623 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %624, i32 0, i32 1, i32 1)
  %625 = getelementptr inbounds float, float* %612, i64 32
  %626 = bitcast float* %625 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %626, i32 0, i32 1, i32 1)
  %627 = getelementptr inbounds float, float* %609, i64 40
  %628 = bitcast float* %627 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %628, i32 0, i32 1, i32 1)
  %629 = getelementptr inbounds float, float* %612, i64 40
  %630 = bitcast float* %629 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %630, i32 0, i32 1, i32 1)
  %631 = getelementptr inbounds float, float* %609, i64 48
  %632 = bitcast float* %631 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %632, i32 0, i32 1, i32 1)
  %633 = getelementptr inbounds float, float* %612, i64 48
  %634 = bitcast float* %633 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %634, i32 0, i32 1, i32 1)
  %635 = getelementptr inbounds float, float* %609, i64 56
  %636 = bitcast float* %635 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %636, i32 0, i32 1, i32 1)
  %637 = getelementptr inbounds float, float* %612, i64 56
  %638 = bitcast float* %637 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %638, i32 0, i32 1, i32 1)
  %639 = getelementptr inbounds float, float* %609, i64 64
  %640 = bitcast float* %639 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %640, i32 0, i32 1, i32 1)
  %641 = getelementptr inbounds float, float* %612, i64 64
  %642 = bitcast float* %641 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %642, i32 0, i32 1, i32 1)
  %643 = getelementptr inbounds float, float* %609, i64 72
  %644 = bitcast float* %643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %644, i32 0, i32 1, i32 1)
  %645 = getelementptr inbounds float, float* %612, i64 72
  %646 = bitcast float* %645 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %646, i32 0, i32 1, i32 1)
  %647 = bitcast float* %609 to <8 x float>*
  %648 = load <8 x float>, <8 x float>* %647, align 1, !tbaa !12
  %649 = add nuw nsw i64 %608, 8
  %650 = getelementptr inbounds float, float* %5, i64 %649
  %651 = bitcast float* %650 to <8 x float>*
  %652 = load <8 x float>, <8 x float>* %651, align 1, !tbaa !12
  %653 = add nuw nsw i64 %608, 16
  %654 = getelementptr inbounds float, float* %5, i64 %653
  %655 = bitcast float* %654 to <8 x float>*
  %656 = load <8 x float>, <8 x float>* %655, align 1, !tbaa !12
  %657 = add nuw nsw i64 %608, 24
  %658 = getelementptr inbounds float, float* %5, i64 %657
  %659 = bitcast float* %658 to <8 x float>*
  %660 = load <8 x float>, <8 x float>* %659, align 1, !tbaa !12
  %661 = add nuw nsw i64 %608, 32
  %662 = getelementptr inbounds float, float* %5, i64 %661
  %663 = bitcast float* %662 to <8 x float>*
  %664 = load <8 x float>, <8 x float>* %663, align 1, !tbaa !12
  %665 = add nuw nsw i64 %608, 40
  %666 = getelementptr inbounds float, float* %5, i64 %665
  %667 = bitcast float* %666 to <8 x float>*
  %668 = load <8 x float>, <8 x float>* %667, align 1, !tbaa !12
  %669 = add nuw nsw i64 %608, 48
  %670 = getelementptr inbounds float, float* %5, i64 %669
  %671 = bitcast float* %670 to <8 x float>*
  %672 = load <8 x float>, <8 x float>* %671, align 1, !tbaa !12
  %673 = add nuw nsw i64 %608, 56
  %674 = getelementptr inbounds float, float* %5, i64 %673
  %675 = bitcast float* %674 to <8 x float>*
  %676 = load <8 x float>, <8 x float>* %675, align 1, !tbaa !12
  %677 = add nuw nsw i64 %608, 64
  %678 = getelementptr inbounds float, float* %5, i64 %677
  %679 = bitcast float* %678 to <8 x float>*
  %680 = load <8 x float>, <8 x float>* %679, align 1, !tbaa !12
  %681 = trunc i64 %608 to i32
  %682 = add nsw i32 %479, %681
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds float, float* %3, i64 %683
  %685 = bitcast float* %684 to <8 x float>*
  %686 = load <8 x float>, <8 x float>* %685, align 1, !tbaa !12
  %687 = add nsw i32 %682, 8
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds float, float* %3, i64 %688
  %690 = bitcast float* %689 to <8 x float>*
  %691 = load <8 x float>, <8 x float>* %690, align 1, !tbaa !12
  %692 = add nsw i32 %682, 16
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds float, float* %3, i64 %693
  %695 = bitcast float* %694 to <8 x float>*
  %696 = load <8 x float>, <8 x float>* %695, align 1, !tbaa !12
  %697 = add nsw i32 %682, 24
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds float, float* %3, i64 %698
  %700 = bitcast float* %699 to <8 x float>*
  %701 = load <8 x float>, <8 x float>* %700, align 1, !tbaa !12
  %702 = add nsw i32 %682, 32
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds float, float* %3, i64 %703
  %705 = bitcast float* %704 to <8 x float>*
  %706 = load <8 x float>, <8 x float>* %705, align 1, !tbaa !12
  %707 = add nsw i32 %682, 40
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds float, float* %3, i64 %708
  %710 = bitcast float* %709 to <8 x float>*
  %711 = load <8 x float>, <8 x float>* %710, align 1, !tbaa !12
  %712 = add nsw i32 %682, 48
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds float, float* %3, i64 %713
  %715 = bitcast float* %714 to <8 x float>*
  %716 = load <8 x float>, <8 x float>* %715, align 1, !tbaa !12
  %717 = add nsw i32 %682, 56
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds float, float* %3, i64 %718
  %720 = bitcast float* %719 to <8 x float>*
  %721 = load <8 x float>, <8 x float>* %720, align 1, !tbaa !12
  %722 = add nsw i32 %682, 64
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds float, float* %3, i64 %723
  %725 = bitcast float* %724 to <8 x float>*
  %726 = load <8 x float>, <8 x float>* %725, align 1, !tbaa !12
  %727 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %686, <8 x float> %45, <8 x float> %648) #10
  %728 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %691, <8 x float> %45, <8 x float> %652) #10
  %729 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %696, <8 x float> %45, <8 x float> %656) #10
  %730 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %701, <8 x float> %45, <8 x float> %660) #10
  %731 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %706, <8 x float> %45, <8 x float> %664) #10
  %732 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %711, <8 x float> %45, <8 x float> %668) #10
  %733 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %716, <8 x float> %45, <8 x float> %672) #10
  %734 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %721, <8 x float> %45, <8 x float> %676) #10
  %735 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %726, <8 x float> %45, <8 x float> %680) #10
  store <8 x float> %727, <8 x float>* %647, align 1, !tbaa !12
  store <8 x float> %728, <8 x float>* %651, align 1, !tbaa !12
  store <8 x float> %729, <8 x float>* %655, align 1, !tbaa !12
  store <8 x float> %730, <8 x float>* %659, align 1, !tbaa !12
  store <8 x float> %731, <8 x float>* %663, align 1, !tbaa !12
  store <8 x float> %732, <8 x float>* %667, align 1, !tbaa !12
  store <8 x float> %733, <8 x float>* %671, align 1, !tbaa !12
  store <8 x float> %734, <8 x float>* %675, align 1, !tbaa !12
  store <8 x float> %735, <8 x float>* %679, align 1, !tbaa !12
  %736 = add nuw nsw i64 %608, 72
  %737 = icmp ult i64 %736, %477
  br i1 %737, label %607, label %601

738:                                              ; preds = %744
  br i1 %475, label %739, label %992

739:                                              ; preds = %738
  %740 = trunc i64 %51 to i32
  %741 = mul nsw i32 %474, %740
  %742 = sext i32 %741 to i64
  %743 = zext i32 %474 to i64
  br label %871

744:                                              ; preds = %602, %744
  %745 = phi i64 [ 0, %602 ], [ %863, %744 ]
  %746 = getelementptr inbounds float, float* %5, i64 %745
  %747 = getelementptr inbounds float, float* %746, i64 8
  %748 = bitcast float* %747 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %748, i32 0, i32 1, i32 1)
  %749 = getelementptr inbounds float, float* %3, i64 %745
  %750 = getelementptr inbounds float, float* %749, i64 8
  %751 = bitcast float* %750 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %751, i32 0, i32 1, i32 1)
  %752 = getelementptr inbounds float, float* %746, i64 16
  %753 = bitcast float* %752 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %753, i32 0, i32 1, i32 1)
  %754 = getelementptr inbounds float, float* %749, i64 16
  %755 = bitcast float* %754 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %755, i32 0, i32 1, i32 1)
  %756 = getelementptr inbounds float, float* %746, i64 24
  %757 = bitcast float* %756 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %757, i32 0, i32 1, i32 1)
  %758 = getelementptr inbounds float, float* %749, i64 24
  %759 = bitcast float* %758 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %759, i32 0, i32 1, i32 1)
  %760 = getelementptr inbounds float, float* %746, i64 32
  %761 = bitcast float* %760 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %761, i32 0, i32 1, i32 1)
  %762 = getelementptr inbounds float, float* %749, i64 32
  %763 = bitcast float* %762 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %763, i32 0, i32 1, i32 1)
  %764 = getelementptr inbounds float, float* %746, i64 40
  %765 = bitcast float* %764 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %765, i32 0, i32 1, i32 1)
  %766 = getelementptr inbounds float, float* %749, i64 40
  %767 = bitcast float* %766 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %767, i32 0, i32 1, i32 1)
  %768 = getelementptr inbounds float, float* %746, i64 48
  %769 = bitcast float* %768 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %769, i32 0, i32 1, i32 1)
  %770 = getelementptr inbounds float, float* %749, i64 48
  %771 = bitcast float* %770 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %771, i32 0, i32 1, i32 1)
  %772 = getelementptr inbounds float, float* %746, i64 56
  %773 = bitcast float* %772 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %773, i32 0, i32 1, i32 1)
  %774 = getelementptr inbounds float, float* %749, i64 56
  %775 = bitcast float* %774 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %775, i32 0, i32 1, i32 1)
  %776 = getelementptr inbounds float, float* %746, i64 64
  %777 = bitcast float* %776 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %777, i32 0, i32 1, i32 1)
  %778 = getelementptr inbounds float, float* %749, i64 64
  %779 = bitcast float* %778 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %779, i32 0, i32 1, i32 1)
  %780 = getelementptr inbounds float, float* %746, i64 72
  %781 = bitcast float* %780 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %781, i32 0, i32 1, i32 1)
  %782 = getelementptr inbounds float, float* %749, i64 72
  %783 = bitcast float* %782 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %783, i32 0, i32 1, i32 1)
  %784 = bitcast float* %746 to <8 x float>*
  %785 = load <8 x float>, <8 x float>* %784, align 1, !tbaa !12
  %786 = add nuw nsw i64 %745, 8
  %787 = getelementptr inbounds float, float* %5, i64 %786
  %788 = bitcast float* %787 to <8 x float>*
  %789 = load <8 x float>, <8 x float>* %788, align 1, !tbaa !12
  %790 = add nuw nsw i64 %745, 16
  %791 = getelementptr inbounds float, float* %5, i64 %790
  %792 = bitcast float* %791 to <8 x float>*
  %793 = load <8 x float>, <8 x float>* %792, align 1, !tbaa !12
  %794 = add nuw nsw i64 %745, 24
  %795 = getelementptr inbounds float, float* %5, i64 %794
  %796 = bitcast float* %795 to <8 x float>*
  %797 = load <8 x float>, <8 x float>* %796, align 1, !tbaa !12
  %798 = add nuw nsw i64 %745, 32
  %799 = getelementptr inbounds float, float* %5, i64 %798
  %800 = bitcast float* %799 to <8 x float>*
  %801 = load <8 x float>, <8 x float>* %800, align 1, !tbaa !12
  %802 = add nuw nsw i64 %745, 40
  %803 = getelementptr inbounds float, float* %5, i64 %802
  %804 = bitcast float* %803 to <8 x float>*
  %805 = load <8 x float>, <8 x float>* %804, align 1, !tbaa !12
  %806 = add nuw nsw i64 %745, 48
  %807 = getelementptr inbounds float, float* %5, i64 %806
  %808 = bitcast float* %807 to <8 x float>*
  %809 = load <8 x float>, <8 x float>* %808, align 1, !tbaa !12
  %810 = add nuw nsw i64 %745, 56
  %811 = getelementptr inbounds float, float* %5, i64 %810
  %812 = bitcast float* %811 to <8 x float>*
  %813 = load <8 x float>, <8 x float>* %812, align 1, !tbaa !12
  %814 = add nuw nsw i64 %745, 64
  %815 = getelementptr inbounds float, float* %5, i64 %814
  %816 = bitcast float* %815 to <8 x float>*
  %817 = load <8 x float>, <8 x float>* %816, align 1, !tbaa !12
  %818 = add nsw i64 %745, %605
  %819 = getelementptr inbounds float, float* %3, i64 %818
  %820 = bitcast float* %819 to <8 x float>*
  %821 = load <8 x float>, <8 x float>* %820, align 1, !tbaa !12
  %822 = add nsw i64 %818, 8
  %823 = getelementptr inbounds float, float* %3, i64 %822
  %824 = bitcast float* %823 to <8 x float>*
  %825 = load <8 x float>, <8 x float>* %824, align 1, !tbaa !12
  %826 = add nsw i64 %818, 16
  %827 = getelementptr inbounds float, float* %3, i64 %826
  %828 = bitcast float* %827 to <8 x float>*
  %829 = load <8 x float>, <8 x float>* %828, align 1, !tbaa !12
  %830 = add nsw i64 %818, 24
  %831 = getelementptr inbounds float, float* %3, i64 %830
  %832 = bitcast float* %831 to <8 x float>*
  %833 = load <8 x float>, <8 x float>* %832, align 1, !tbaa !12
  %834 = add nsw i64 %818, 32
  %835 = getelementptr inbounds float, float* %3, i64 %834
  %836 = bitcast float* %835 to <8 x float>*
  %837 = load <8 x float>, <8 x float>* %836, align 1, !tbaa !12
  %838 = add nsw i64 %818, 40
  %839 = getelementptr inbounds float, float* %3, i64 %838
  %840 = bitcast float* %839 to <8 x float>*
  %841 = load <8 x float>, <8 x float>* %840, align 1, !tbaa !12
  %842 = add nsw i64 %818, 48
  %843 = getelementptr inbounds float, float* %3, i64 %842
  %844 = bitcast float* %843 to <8 x float>*
  %845 = load <8 x float>, <8 x float>* %844, align 1, !tbaa !12
  %846 = add nsw i64 %818, 56
  %847 = getelementptr inbounds float, float* %3, i64 %846
  %848 = bitcast float* %847 to <8 x float>*
  %849 = load <8 x float>, <8 x float>* %848, align 1, !tbaa !12
  %850 = add nsw i64 %818, 64
  %851 = getelementptr inbounds float, float* %3, i64 %850
  %852 = bitcast float* %851 to <8 x float>*
  %853 = load <8 x float>, <8 x float>* %852, align 1, !tbaa !12
  %854 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %821, <8 x float> %50, <8 x float> %785) #10
  %855 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %825, <8 x float> %50, <8 x float> %789) #10
  %856 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %829, <8 x float> %50, <8 x float> %793) #10
  %857 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %833, <8 x float> %50, <8 x float> %797) #10
  %858 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %837, <8 x float> %50, <8 x float> %801) #10
  %859 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %841, <8 x float> %50, <8 x float> %805) #10
  %860 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %845, <8 x float> %50, <8 x float> %809) #10
  %861 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %849, <8 x float> %50, <8 x float> %813) #10
  %862 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %853, <8 x float> %50, <8 x float> %817) #10
  store <8 x float> %854, <8 x float>* %784, align 1, !tbaa !12
  store <8 x float> %855, <8 x float>* %788, align 1, !tbaa !12
  store <8 x float> %856, <8 x float>* %792, align 1, !tbaa !12
  store <8 x float> %857, <8 x float>* %796, align 1, !tbaa !12
  store <8 x float> %858, <8 x float>* %800, align 1, !tbaa !12
  store <8 x float> %859, <8 x float>* %804, align 1, !tbaa !12
  store <8 x float> %860, <8 x float>* %808, align 1, !tbaa !12
  store <8 x float> %861, <8 x float>* %812, align 1, !tbaa !12
  store <8 x float> %862, <8 x float>* %816, align 1, !tbaa !12
  %863 = add nuw nsw i64 %745, 72
  %864 = icmp ult i64 %863, %606
  br i1 %864, label %744, label %738

865:                                              ; preds = %871
  br i1 %475, label %866, label %992

866:                                              ; preds = %865
  %867 = trunc i64 %56 to i32
  %868 = mul nsw i32 %474, %867
  %869 = sext i32 %868 to i64
  %870 = zext i32 %474 to i64
  br label %999

871:                                              ; preds = %739, %871
  %872 = phi i64 [ 0, %739 ], [ %990, %871 ]
  %873 = getelementptr inbounds float, float* %5, i64 %872
  %874 = getelementptr inbounds float, float* %873, i64 8
  %875 = bitcast float* %874 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %875, i32 0, i32 1, i32 1)
  %876 = getelementptr inbounds float, float* %3, i64 %872
  %877 = getelementptr inbounds float, float* %876, i64 8
  %878 = bitcast float* %877 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %878, i32 0, i32 1, i32 1)
  %879 = getelementptr inbounds float, float* %873, i64 16
  %880 = bitcast float* %879 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %880, i32 0, i32 1, i32 1)
  %881 = getelementptr inbounds float, float* %876, i64 16
  %882 = bitcast float* %881 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %882, i32 0, i32 1, i32 1)
  %883 = getelementptr inbounds float, float* %873, i64 24
  %884 = bitcast float* %883 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %884, i32 0, i32 1, i32 1)
  %885 = getelementptr inbounds float, float* %876, i64 24
  %886 = bitcast float* %885 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %886, i32 0, i32 1, i32 1)
  %887 = getelementptr inbounds float, float* %873, i64 32
  %888 = bitcast float* %887 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %888, i32 0, i32 1, i32 1)
  %889 = getelementptr inbounds float, float* %876, i64 32
  %890 = bitcast float* %889 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %890, i32 0, i32 1, i32 1)
  %891 = getelementptr inbounds float, float* %873, i64 40
  %892 = bitcast float* %891 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %892, i32 0, i32 1, i32 1)
  %893 = getelementptr inbounds float, float* %876, i64 40
  %894 = bitcast float* %893 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %894, i32 0, i32 1, i32 1)
  %895 = getelementptr inbounds float, float* %873, i64 48
  %896 = bitcast float* %895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %896, i32 0, i32 1, i32 1)
  %897 = getelementptr inbounds float, float* %876, i64 48
  %898 = bitcast float* %897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %898, i32 0, i32 1, i32 1)
  %899 = getelementptr inbounds float, float* %873, i64 56
  %900 = bitcast float* %899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %900, i32 0, i32 1, i32 1)
  %901 = getelementptr inbounds float, float* %876, i64 56
  %902 = bitcast float* %901 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %902, i32 0, i32 1, i32 1)
  %903 = getelementptr inbounds float, float* %873, i64 64
  %904 = bitcast float* %903 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %904, i32 0, i32 1, i32 1)
  %905 = getelementptr inbounds float, float* %876, i64 64
  %906 = bitcast float* %905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %906, i32 0, i32 1, i32 1)
  %907 = getelementptr inbounds float, float* %873, i64 72
  %908 = bitcast float* %907 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %908, i32 0, i32 1, i32 1)
  %909 = getelementptr inbounds float, float* %876, i64 72
  %910 = bitcast float* %909 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %910, i32 0, i32 1, i32 1)
  %911 = bitcast float* %873 to <8 x float>*
  %912 = load <8 x float>, <8 x float>* %911, align 1, !tbaa !12
  %913 = add nuw nsw i64 %872, 8
  %914 = getelementptr inbounds float, float* %5, i64 %913
  %915 = bitcast float* %914 to <8 x float>*
  %916 = load <8 x float>, <8 x float>* %915, align 1, !tbaa !12
  %917 = add nuw nsw i64 %872, 16
  %918 = getelementptr inbounds float, float* %5, i64 %917
  %919 = bitcast float* %918 to <8 x float>*
  %920 = load <8 x float>, <8 x float>* %919, align 1, !tbaa !12
  %921 = add nuw nsw i64 %872, 24
  %922 = getelementptr inbounds float, float* %5, i64 %921
  %923 = bitcast float* %922 to <8 x float>*
  %924 = load <8 x float>, <8 x float>* %923, align 1, !tbaa !12
  %925 = add nuw nsw i64 %872, 32
  %926 = getelementptr inbounds float, float* %5, i64 %925
  %927 = bitcast float* %926 to <8 x float>*
  %928 = load <8 x float>, <8 x float>* %927, align 1, !tbaa !12
  %929 = add nuw nsw i64 %872, 40
  %930 = getelementptr inbounds float, float* %5, i64 %929
  %931 = bitcast float* %930 to <8 x float>*
  %932 = load <8 x float>, <8 x float>* %931, align 1, !tbaa !12
  %933 = add nuw nsw i64 %872, 48
  %934 = getelementptr inbounds float, float* %5, i64 %933
  %935 = bitcast float* %934 to <8 x float>*
  %936 = load <8 x float>, <8 x float>* %935, align 1, !tbaa !12
  %937 = add nuw nsw i64 %872, 56
  %938 = getelementptr inbounds float, float* %5, i64 %937
  %939 = bitcast float* %938 to <8 x float>*
  %940 = load <8 x float>, <8 x float>* %939, align 1, !tbaa !12
  %941 = add nuw nsw i64 %872, 64
  %942 = getelementptr inbounds float, float* %5, i64 %941
  %943 = bitcast float* %942 to <8 x float>*
  %944 = load <8 x float>, <8 x float>* %943, align 1, !tbaa !12
  %945 = add nsw i64 %872, %742
  %946 = getelementptr inbounds float, float* %3, i64 %945
  %947 = bitcast float* %946 to <8 x float>*
  %948 = load <8 x float>, <8 x float>* %947, align 1, !tbaa !12
  %949 = add nsw i64 %945, 8
  %950 = getelementptr inbounds float, float* %3, i64 %949
  %951 = bitcast float* %950 to <8 x float>*
  %952 = load <8 x float>, <8 x float>* %951, align 1, !tbaa !12
  %953 = add nsw i64 %945, 16
  %954 = getelementptr inbounds float, float* %3, i64 %953
  %955 = bitcast float* %954 to <8 x float>*
  %956 = load <8 x float>, <8 x float>* %955, align 1, !tbaa !12
  %957 = add nsw i64 %945, 24
  %958 = getelementptr inbounds float, float* %3, i64 %957
  %959 = bitcast float* %958 to <8 x float>*
  %960 = load <8 x float>, <8 x float>* %959, align 1, !tbaa !12
  %961 = add nsw i64 %945, 32
  %962 = getelementptr inbounds float, float* %3, i64 %961
  %963 = bitcast float* %962 to <8 x float>*
  %964 = load <8 x float>, <8 x float>* %963, align 1, !tbaa !12
  %965 = add nsw i64 %945, 40
  %966 = getelementptr inbounds float, float* %3, i64 %965
  %967 = bitcast float* %966 to <8 x float>*
  %968 = load <8 x float>, <8 x float>* %967, align 1, !tbaa !12
  %969 = add nsw i64 %945, 48
  %970 = getelementptr inbounds float, float* %3, i64 %969
  %971 = bitcast float* %970 to <8 x float>*
  %972 = load <8 x float>, <8 x float>* %971, align 1, !tbaa !12
  %973 = add nsw i64 %945, 56
  %974 = getelementptr inbounds float, float* %3, i64 %973
  %975 = bitcast float* %974 to <8 x float>*
  %976 = load <8 x float>, <8 x float>* %975, align 1, !tbaa !12
  %977 = add nsw i64 %945, 64
  %978 = getelementptr inbounds float, float* %3, i64 %977
  %979 = bitcast float* %978 to <8 x float>*
  %980 = load <8 x float>, <8 x float>* %979, align 1, !tbaa !12
  %981 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %948, <8 x float> %55, <8 x float> %912) #10
  %982 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %952, <8 x float> %55, <8 x float> %916) #10
  %983 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %956, <8 x float> %55, <8 x float> %920) #10
  %984 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %960, <8 x float> %55, <8 x float> %924) #10
  %985 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %964, <8 x float> %55, <8 x float> %928) #10
  %986 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %968, <8 x float> %55, <8 x float> %932) #10
  %987 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %972, <8 x float> %55, <8 x float> %936) #10
  %988 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %976, <8 x float> %55, <8 x float> %940) #10
  %989 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %980, <8 x float> %55, <8 x float> %944) #10
  store <8 x float> %981, <8 x float>* %911, align 1, !tbaa !12
  store <8 x float> %982, <8 x float>* %915, align 1, !tbaa !12
  store <8 x float> %983, <8 x float>* %919, align 1, !tbaa !12
  store <8 x float> %984, <8 x float>* %923, align 1, !tbaa !12
  store <8 x float> %985, <8 x float>* %927, align 1, !tbaa !12
  store <8 x float> %986, <8 x float>* %931, align 1, !tbaa !12
  store <8 x float> %987, <8 x float>* %935, align 1, !tbaa !12
  store <8 x float> %988, <8 x float>* %939, align 1, !tbaa !12
  store <8 x float> %989, <8 x float>* %943, align 1, !tbaa !12
  %990 = add nuw nsw i64 %872, 72
  %991 = icmp ult i64 %990, %743
  br i1 %991, label %871, label %865

992:                                              ; preds = %999, %601, %738, %865
  %993 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %994 = icmp sgt i32 %993, 0
  br i1 %994, label %995, label %1384

995:                                              ; preds = %992
  %996 = zext i32 %993 to i64
  %997 = trunc i64 %61 to i32
  %998 = mul nsw i32 %993, %997
  br label %1126

999:                                              ; preds = %866, %999
  %1000 = phi i64 [ 0, %866 ], [ %1118, %999 ]
  %1001 = getelementptr inbounds float, float* %5, i64 %1000
  %1002 = getelementptr inbounds float, float* %1001, i64 8
  %1003 = bitcast float* %1002 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1003, i32 0, i32 1, i32 1)
  %1004 = getelementptr inbounds float, float* %3, i64 %1000
  %1005 = getelementptr inbounds float, float* %1004, i64 8
  %1006 = bitcast float* %1005 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1006, i32 0, i32 1, i32 1)
  %1007 = getelementptr inbounds float, float* %1001, i64 16
  %1008 = bitcast float* %1007 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1008, i32 0, i32 1, i32 1)
  %1009 = getelementptr inbounds float, float* %1004, i64 16
  %1010 = bitcast float* %1009 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1010, i32 0, i32 1, i32 1)
  %1011 = getelementptr inbounds float, float* %1001, i64 24
  %1012 = bitcast float* %1011 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1012, i32 0, i32 1, i32 1)
  %1013 = getelementptr inbounds float, float* %1004, i64 24
  %1014 = bitcast float* %1013 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1014, i32 0, i32 1, i32 1)
  %1015 = getelementptr inbounds float, float* %1001, i64 32
  %1016 = bitcast float* %1015 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1016, i32 0, i32 1, i32 1)
  %1017 = getelementptr inbounds float, float* %1004, i64 32
  %1018 = bitcast float* %1017 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1018, i32 0, i32 1, i32 1)
  %1019 = getelementptr inbounds float, float* %1001, i64 40
  %1020 = bitcast float* %1019 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1020, i32 0, i32 1, i32 1)
  %1021 = getelementptr inbounds float, float* %1004, i64 40
  %1022 = bitcast float* %1021 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1022, i32 0, i32 1, i32 1)
  %1023 = getelementptr inbounds float, float* %1001, i64 48
  %1024 = bitcast float* %1023 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1024, i32 0, i32 1, i32 1)
  %1025 = getelementptr inbounds float, float* %1004, i64 48
  %1026 = bitcast float* %1025 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1026, i32 0, i32 1, i32 1)
  %1027 = getelementptr inbounds float, float* %1001, i64 56
  %1028 = bitcast float* %1027 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1028, i32 0, i32 1, i32 1)
  %1029 = getelementptr inbounds float, float* %1004, i64 56
  %1030 = bitcast float* %1029 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1030, i32 0, i32 1, i32 1)
  %1031 = getelementptr inbounds float, float* %1001, i64 64
  %1032 = bitcast float* %1031 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1032, i32 0, i32 1, i32 1)
  %1033 = getelementptr inbounds float, float* %1004, i64 64
  %1034 = bitcast float* %1033 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1034, i32 0, i32 1, i32 1)
  %1035 = getelementptr inbounds float, float* %1001, i64 72
  %1036 = bitcast float* %1035 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1036, i32 0, i32 1, i32 1)
  %1037 = getelementptr inbounds float, float* %1004, i64 72
  %1038 = bitcast float* %1037 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1038, i32 0, i32 1, i32 1)
  %1039 = bitcast float* %1001 to <8 x float>*
  %1040 = load <8 x float>, <8 x float>* %1039, align 1, !tbaa !12
  %1041 = add nuw nsw i64 %1000, 8
  %1042 = getelementptr inbounds float, float* %5, i64 %1041
  %1043 = bitcast float* %1042 to <8 x float>*
  %1044 = load <8 x float>, <8 x float>* %1043, align 1, !tbaa !12
  %1045 = add nuw nsw i64 %1000, 16
  %1046 = getelementptr inbounds float, float* %5, i64 %1045
  %1047 = bitcast float* %1046 to <8 x float>*
  %1048 = load <8 x float>, <8 x float>* %1047, align 1, !tbaa !12
  %1049 = add nuw nsw i64 %1000, 24
  %1050 = getelementptr inbounds float, float* %5, i64 %1049
  %1051 = bitcast float* %1050 to <8 x float>*
  %1052 = load <8 x float>, <8 x float>* %1051, align 1, !tbaa !12
  %1053 = add nuw nsw i64 %1000, 32
  %1054 = getelementptr inbounds float, float* %5, i64 %1053
  %1055 = bitcast float* %1054 to <8 x float>*
  %1056 = load <8 x float>, <8 x float>* %1055, align 1, !tbaa !12
  %1057 = add nuw nsw i64 %1000, 40
  %1058 = getelementptr inbounds float, float* %5, i64 %1057
  %1059 = bitcast float* %1058 to <8 x float>*
  %1060 = load <8 x float>, <8 x float>* %1059, align 1, !tbaa !12
  %1061 = add nuw nsw i64 %1000, 48
  %1062 = getelementptr inbounds float, float* %5, i64 %1061
  %1063 = bitcast float* %1062 to <8 x float>*
  %1064 = load <8 x float>, <8 x float>* %1063, align 1, !tbaa !12
  %1065 = add nuw nsw i64 %1000, 56
  %1066 = getelementptr inbounds float, float* %5, i64 %1065
  %1067 = bitcast float* %1066 to <8 x float>*
  %1068 = load <8 x float>, <8 x float>* %1067, align 1, !tbaa !12
  %1069 = add nuw nsw i64 %1000, 64
  %1070 = getelementptr inbounds float, float* %5, i64 %1069
  %1071 = bitcast float* %1070 to <8 x float>*
  %1072 = load <8 x float>, <8 x float>* %1071, align 1, !tbaa !12
  %1073 = add nsw i64 %1000, %869
  %1074 = getelementptr inbounds float, float* %3, i64 %1073
  %1075 = bitcast float* %1074 to <8 x float>*
  %1076 = load <8 x float>, <8 x float>* %1075, align 1, !tbaa !12
  %1077 = add nsw i64 %1073, 8
  %1078 = getelementptr inbounds float, float* %3, i64 %1077
  %1079 = bitcast float* %1078 to <8 x float>*
  %1080 = load <8 x float>, <8 x float>* %1079, align 1, !tbaa !12
  %1081 = add nsw i64 %1073, 16
  %1082 = getelementptr inbounds float, float* %3, i64 %1081
  %1083 = bitcast float* %1082 to <8 x float>*
  %1084 = load <8 x float>, <8 x float>* %1083, align 1, !tbaa !12
  %1085 = add nsw i64 %1073, 24
  %1086 = getelementptr inbounds float, float* %3, i64 %1085
  %1087 = bitcast float* %1086 to <8 x float>*
  %1088 = load <8 x float>, <8 x float>* %1087, align 1, !tbaa !12
  %1089 = add nsw i64 %1073, 32
  %1090 = getelementptr inbounds float, float* %3, i64 %1089
  %1091 = bitcast float* %1090 to <8 x float>*
  %1092 = load <8 x float>, <8 x float>* %1091, align 1, !tbaa !12
  %1093 = add nsw i64 %1073, 40
  %1094 = getelementptr inbounds float, float* %3, i64 %1093
  %1095 = bitcast float* %1094 to <8 x float>*
  %1096 = load <8 x float>, <8 x float>* %1095, align 1, !tbaa !12
  %1097 = add nsw i64 %1073, 48
  %1098 = getelementptr inbounds float, float* %3, i64 %1097
  %1099 = bitcast float* %1098 to <8 x float>*
  %1100 = load <8 x float>, <8 x float>* %1099, align 1, !tbaa !12
  %1101 = add nsw i64 %1073, 56
  %1102 = getelementptr inbounds float, float* %3, i64 %1101
  %1103 = bitcast float* %1102 to <8 x float>*
  %1104 = load <8 x float>, <8 x float>* %1103, align 1, !tbaa !12
  %1105 = add nsw i64 %1073, 64
  %1106 = getelementptr inbounds float, float* %3, i64 %1105
  %1107 = bitcast float* %1106 to <8 x float>*
  %1108 = load <8 x float>, <8 x float>* %1107, align 1, !tbaa !12
  %1109 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1076, <8 x float> %60, <8 x float> %1040) #10
  %1110 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1080, <8 x float> %60, <8 x float> %1044) #10
  %1111 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1084, <8 x float> %60, <8 x float> %1048) #10
  %1112 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1088, <8 x float> %60, <8 x float> %1052) #10
  %1113 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1092, <8 x float> %60, <8 x float> %1056) #10
  %1114 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1096, <8 x float> %60, <8 x float> %1060) #10
  %1115 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1100, <8 x float> %60, <8 x float> %1064) #10
  %1116 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1104, <8 x float> %60, <8 x float> %1068) #10
  %1117 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1108, <8 x float> %60, <8 x float> %1072) #10
  store <8 x float> %1109, <8 x float>* %1039, align 1, !tbaa !12
  store <8 x float> %1110, <8 x float>* %1043, align 1, !tbaa !12
  store <8 x float> %1111, <8 x float>* %1047, align 1, !tbaa !12
  store <8 x float> %1112, <8 x float>* %1051, align 1, !tbaa !12
  store <8 x float> %1113, <8 x float>* %1055, align 1, !tbaa !12
  store <8 x float> %1114, <8 x float>* %1059, align 1, !tbaa !12
  store <8 x float> %1115, <8 x float>* %1063, align 1, !tbaa !12
  store <8 x float> %1116, <8 x float>* %1067, align 1, !tbaa !12
  store <8 x float> %1117, <8 x float>* %1071, align 1, !tbaa !12
  %1118 = add nuw nsw i64 %1000, 72
  %1119 = icmp ult i64 %1118, %870
  br i1 %1119, label %999, label %992

1120:                                             ; preds = %1126
  br i1 %994, label %1121, label %1384

1121:                                             ; preds = %1120
  %1122 = trunc i64 %66 to i32
  %1123 = mul nsw i32 %993, %1122
  %1124 = sext i32 %1123 to i64
  %1125 = zext i32 %993 to i64
  br label %1263

1126:                                             ; preds = %995, %1126
  %1127 = phi i64 [ 0, %995 ], [ %1255, %1126 ]
  %1128 = getelementptr inbounds float, float* %5, i64 %1127
  %1129 = getelementptr inbounds float, float* %1128, i64 8
  %1130 = bitcast float* %1129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1130, i32 0, i32 1, i32 1)
  %1131 = getelementptr inbounds float, float* %3, i64 %1127
  %1132 = getelementptr inbounds float, float* %1131, i64 8
  %1133 = bitcast float* %1132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1133, i32 0, i32 1, i32 1)
  %1134 = getelementptr inbounds float, float* %1128, i64 16
  %1135 = bitcast float* %1134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1135, i32 0, i32 1, i32 1)
  %1136 = getelementptr inbounds float, float* %1131, i64 16
  %1137 = bitcast float* %1136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1137, i32 0, i32 1, i32 1)
  %1138 = getelementptr inbounds float, float* %1128, i64 24
  %1139 = bitcast float* %1138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1139, i32 0, i32 1, i32 1)
  %1140 = getelementptr inbounds float, float* %1131, i64 24
  %1141 = bitcast float* %1140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1141, i32 0, i32 1, i32 1)
  %1142 = getelementptr inbounds float, float* %1128, i64 32
  %1143 = bitcast float* %1142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1143, i32 0, i32 1, i32 1)
  %1144 = getelementptr inbounds float, float* %1131, i64 32
  %1145 = bitcast float* %1144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1145, i32 0, i32 1, i32 1)
  %1146 = getelementptr inbounds float, float* %1128, i64 40
  %1147 = bitcast float* %1146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1147, i32 0, i32 1, i32 1)
  %1148 = getelementptr inbounds float, float* %1131, i64 40
  %1149 = bitcast float* %1148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1149, i32 0, i32 1, i32 1)
  %1150 = getelementptr inbounds float, float* %1128, i64 48
  %1151 = bitcast float* %1150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1151, i32 0, i32 1, i32 1)
  %1152 = getelementptr inbounds float, float* %1131, i64 48
  %1153 = bitcast float* %1152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1153, i32 0, i32 1, i32 1)
  %1154 = getelementptr inbounds float, float* %1128, i64 56
  %1155 = bitcast float* %1154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1155, i32 0, i32 1, i32 1)
  %1156 = getelementptr inbounds float, float* %1131, i64 56
  %1157 = bitcast float* %1156 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1157, i32 0, i32 1, i32 1)
  %1158 = getelementptr inbounds float, float* %1128, i64 64
  %1159 = bitcast float* %1158 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1159, i32 0, i32 1, i32 1)
  %1160 = getelementptr inbounds float, float* %1131, i64 64
  %1161 = bitcast float* %1160 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1161, i32 0, i32 1, i32 1)
  %1162 = getelementptr inbounds float, float* %1128, i64 72
  %1163 = bitcast float* %1162 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1163, i32 0, i32 1, i32 1)
  %1164 = getelementptr inbounds float, float* %1131, i64 72
  %1165 = bitcast float* %1164 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1165, i32 0, i32 1, i32 1)
  %1166 = bitcast float* %1128 to <8 x float>*
  %1167 = load <8 x float>, <8 x float>* %1166, align 1, !tbaa !12
  %1168 = add nuw nsw i64 %1127, 8
  %1169 = getelementptr inbounds float, float* %5, i64 %1168
  %1170 = bitcast float* %1169 to <8 x float>*
  %1171 = load <8 x float>, <8 x float>* %1170, align 1, !tbaa !12
  %1172 = add nuw nsw i64 %1127, 16
  %1173 = getelementptr inbounds float, float* %5, i64 %1172
  %1174 = bitcast float* %1173 to <8 x float>*
  %1175 = load <8 x float>, <8 x float>* %1174, align 1, !tbaa !12
  %1176 = add nuw nsw i64 %1127, 24
  %1177 = getelementptr inbounds float, float* %5, i64 %1176
  %1178 = bitcast float* %1177 to <8 x float>*
  %1179 = load <8 x float>, <8 x float>* %1178, align 1, !tbaa !12
  %1180 = add nuw nsw i64 %1127, 32
  %1181 = getelementptr inbounds float, float* %5, i64 %1180
  %1182 = bitcast float* %1181 to <8 x float>*
  %1183 = load <8 x float>, <8 x float>* %1182, align 1, !tbaa !12
  %1184 = add nuw nsw i64 %1127, 40
  %1185 = getelementptr inbounds float, float* %5, i64 %1184
  %1186 = bitcast float* %1185 to <8 x float>*
  %1187 = load <8 x float>, <8 x float>* %1186, align 1, !tbaa !12
  %1188 = add nuw nsw i64 %1127, 48
  %1189 = getelementptr inbounds float, float* %5, i64 %1188
  %1190 = bitcast float* %1189 to <8 x float>*
  %1191 = load <8 x float>, <8 x float>* %1190, align 1, !tbaa !12
  %1192 = add nuw nsw i64 %1127, 56
  %1193 = getelementptr inbounds float, float* %5, i64 %1192
  %1194 = bitcast float* %1193 to <8 x float>*
  %1195 = load <8 x float>, <8 x float>* %1194, align 1, !tbaa !12
  %1196 = add nuw nsw i64 %1127, 64
  %1197 = getelementptr inbounds float, float* %5, i64 %1196
  %1198 = bitcast float* %1197 to <8 x float>*
  %1199 = load <8 x float>, <8 x float>* %1198, align 1, !tbaa !12
  %1200 = trunc i64 %1127 to i32
  %1201 = add nsw i32 %998, %1200
  %1202 = sext i32 %1201 to i64
  %1203 = getelementptr inbounds float, float* %3, i64 %1202
  %1204 = bitcast float* %1203 to <8 x float>*
  %1205 = load <8 x float>, <8 x float>* %1204, align 1, !tbaa !12
  %1206 = add nsw i32 %1201, 8
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds float, float* %3, i64 %1207
  %1209 = bitcast float* %1208 to <8 x float>*
  %1210 = load <8 x float>, <8 x float>* %1209, align 1, !tbaa !12
  %1211 = add nsw i32 %1201, 16
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds float, float* %3, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nsw i32 %1201, 24
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i32 %1201, 32
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i32 %1201, 40
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i32 %1201, 48
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i32 %1201, 56
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i32 %1201, 64
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1205, <8 x float> %65, <8 x float> %1167) #10
  %1247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1210, <8 x float> %65, <8 x float> %1171) #10
  %1248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1215, <8 x float> %65, <8 x float> %1175) #10
  %1249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %65, <8 x float> %1179) #10
  %1250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %65, <8 x float> %1183) #10
  %1251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %65, <8 x float> %1187) #10
  %1252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %65, <8 x float> %1191) #10
  %1253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %65, <8 x float> %1195) #10
  %1254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %65, <8 x float> %1199) #10
  store <8 x float> %1246, <8 x float>* %1166, align 1, !tbaa !12
  store <8 x float> %1247, <8 x float>* %1170, align 1, !tbaa !12
  store <8 x float> %1248, <8 x float>* %1174, align 1, !tbaa !12
  store <8 x float> %1249, <8 x float>* %1178, align 1, !tbaa !12
  store <8 x float> %1250, <8 x float>* %1182, align 1, !tbaa !12
  store <8 x float> %1251, <8 x float>* %1186, align 1, !tbaa !12
  store <8 x float> %1252, <8 x float>* %1190, align 1, !tbaa !12
  store <8 x float> %1253, <8 x float>* %1194, align 1, !tbaa !12
  store <8 x float> %1254, <8 x float>* %1198, align 1, !tbaa !12
  %1255 = add nuw nsw i64 %1127, 72
  %1256 = icmp ult i64 %1255, %996
  br i1 %1256, label %1126, label %1120

1257:                                             ; preds = %1263
  br i1 %994, label %1258, label %1384

1258:                                             ; preds = %1257
  %1259 = trunc i64 %71 to i32
  %1260 = mul nsw i32 %993, %1259
  %1261 = sext i32 %1260 to i64
  %1262 = zext i32 %993 to i64
  br label %1389

1263:                                             ; preds = %1121, %1263
  %1264 = phi i64 [ 0, %1121 ], [ %1382, %1263 ]
  %1265 = getelementptr inbounds float, float* %5, i64 %1264
  %1266 = getelementptr inbounds float, float* %1265, i64 8
  %1267 = bitcast float* %1266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1267, i32 0, i32 1, i32 1)
  %1268 = getelementptr inbounds float, float* %3, i64 %1264
  %1269 = getelementptr inbounds float, float* %1268, i64 8
  %1270 = bitcast float* %1269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1270, i32 0, i32 1, i32 1)
  %1271 = getelementptr inbounds float, float* %1265, i64 16
  %1272 = bitcast float* %1271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1272, i32 0, i32 1, i32 1)
  %1273 = getelementptr inbounds float, float* %1268, i64 16
  %1274 = bitcast float* %1273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1274, i32 0, i32 1, i32 1)
  %1275 = getelementptr inbounds float, float* %1265, i64 24
  %1276 = bitcast float* %1275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1276, i32 0, i32 1, i32 1)
  %1277 = getelementptr inbounds float, float* %1268, i64 24
  %1278 = bitcast float* %1277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1278, i32 0, i32 1, i32 1)
  %1279 = getelementptr inbounds float, float* %1265, i64 32
  %1280 = bitcast float* %1279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1280, i32 0, i32 1, i32 1)
  %1281 = getelementptr inbounds float, float* %1268, i64 32
  %1282 = bitcast float* %1281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1282, i32 0, i32 1, i32 1)
  %1283 = getelementptr inbounds float, float* %1265, i64 40
  %1284 = bitcast float* %1283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1284, i32 0, i32 1, i32 1)
  %1285 = getelementptr inbounds float, float* %1268, i64 40
  %1286 = bitcast float* %1285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1286, i32 0, i32 1, i32 1)
  %1287 = getelementptr inbounds float, float* %1265, i64 48
  %1288 = bitcast float* %1287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1288, i32 0, i32 1, i32 1)
  %1289 = getelementptr inbounds float, float* %1268, i64 48
  %1290 = bitcast float* %1289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1290, i32 0, i32 1, i32 1)
  %1291 = getelementptr inbounds float, float* %1265, i64 56
  %1292 = bitcast float* %1291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1292, i32 0, i32 1, i32 1)
  %1293 = getelementptr inbounds float, float* %1268, i64 56
  %1294 = bitcast float* %1293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1294, i32 0, i32 1, i32 1)
  %1295 = getelementptr inbounds float, float* %1265, i64 64
  %1296 = bitcast float* %1295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1296, i32 0, i32 1, i32 1)
  %1297 = getelementptr inbounds float, float* %1268, i64 64
  %1298 = bitcast float* %1297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1298, i32 0, i32 1, i32 1)
  %1299 = getelementptr inbounds float, float* %1265, i64 72
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %1268, i64 72
  %1302 = bitcast float* %1301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1302, i32 0, i32 1, i32 1)
  %1303 = bitcast float* %1265 to <8 x float>*
  %1304 = load <8 x float>, <8 x float>* %1303, align 1, !tbaa !12
  %1305 = add nuw nsw i64 %1264, 8
  %1306 = getelementptr inbounds float, float* %5, i64 %1305
  %1307 = bitcast float* %1306 to <8 x float>*
  %1308 = load <8 x float>, <8 x float>* %1307, align 1, !tbaa !12
  %1309 = add nuw nsw i64 %1264, 16
  %1310 = getelementptr inbounds float, float* %5, i64 %1309
  %1311 = bitcast float* %1310 to <8 x float>*
  %1312 = load <8 x float>, <8 x float>* %1311, align 1, !tbaa !12
  %1313 = add nuw nsw i64 %1264, 24
  %1314 = getelementptr inbounds float, float* %5, i64 %1313
  %1315 = bitcast float* %1314 to <8 x float>*
  %1316 = load <8 x float>, <8 x float>* %1315, align 1, !tbaa !12
  %1317 = add nuw nsw i64 %1264, 32
  %1318 = getelementptr inbounds float, float* %5, i64 %1317
  %1319 = bitcast float* %1318 to <8 x float>*
  %1320 = load <8 x float>, <8 x float>* %1319, align 1, !tbaa !12
  %1321 = add nuw nsw i64 %1264, 40
  %1322 = getelementptr inbounds float, float* %5, i64 %1321
  %1323 = bitcast float* %1322 to <8 x float>*
  %1324 = load <8 x float>, <8 x float>* %1323, align 1, !tbaa !12
  %1325 = add nuw nsw i64 %1264, 48
  %1326 = getelementptr inbounds float, float* %5, i64 %1325
  %1327 = bitcast float* %1326 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = add nuw nsw i64 %1264, 56
  %1330 = getelementptr inbounds float, float* %5, i64 %1329
  %1331 = bitcast float* %1330 to <8 x float>*
  %1332 = load <8 x float>, <8 x float>* %1331, align 1, !tbaa !12
  %1333 = add nuw nsw i64 %1264, 64
  %1334 = getelementptr inbounds float, float* %5, i64 %1333
  %1335 = bitcast float* %1334 to <8 x float>*
  %1336 = load <8 x float>, <8 x float>* %1335, align 1, !tbaa !12
  %1337 = add nsw i64 %1264, %1124
  %1338 = getelementptr inbounds float, float* %3, i64 %1337
  %1339 = bitcast float* %1338 to <8 x float>*
  %1340 = load <8 x float>, <8 x float>* %1339, align 1, !tbaa !12
  %1341 = add nsw i64 %1337, 8
  %1342 = getelementptr inbounds float, float* %3, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nsw i64 %1337, 16
  %1346 = getelementptr inbounds float, float* %3, i64 %1345
  %1347 = bitcast float* %1346 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = add nsw i64 %1337, 24
  %1350 = getelementptr inbounds float, float* %3, i64 %1349
  %1351 = bitcast float* %1350 to <8 x float>*
  %1352 = load <8 x float>, <8 x float>* %1351, align 1, !tbaa !12
  %1353 = add nsw i64 %1337, 32
  %1354 = getelementptr inbounds float, float* %3, i64 %1353
  %1355 = bitcast float* %1354 to <8 x float>*
  %1356 = load <8 x float>, <8 x float>* %1355, align 1, !tbaa !12
  %1357 = add nsw i64 %1337, 40
  %1358 = getelementptr inbounds float, float* %3, i64 %1357
  %1359 = bitcast float* %1358 to <8 x float>*
  %1360 = load <8 x float>, <8 x float>* %1359, align 1, !tbaa !12
  %1361 = add nsw i64 %1337, 48
  %1362 = getelementptr inbounds float, float* %3, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nsw i64 %1337, 56
  %1366 = getelementptr inbounds float, float* %3, i64 %1365
  %1367 = bitcast float* %1366 to <8 x float>*
  %1368 = load <8 x float>, <8 x float>* %1367, align 1, !tbaa !12
  %1369 = add nsw i64 %1337, 64
  %1370 = getelementptr inbounds float, float* %3, i64 %1369
  %1371 = bitcast float* %1370 to <8 x float>*
  %1372 = load <8 x float>, <8 x float>* %1371, align 1, !tbaa !12
  %1373 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1340, <8 x float> %70, <8 x float> %1304) #10
  %1374 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1344, <8 x float> %70, <8 x float> %1308) #10
  %1375 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1348, <8 x float> %70, <8 x float> %1312) #10
  %1376 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1352, <8 x float> %70, <8 x float> %1316) #10
  %1377 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1356, <8 x float> %70, <8 x float> %1320) #10
  %1378 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1360, <8 x float> %70, <8 x float> %1324) #10
  %1379 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1364, <8 x float> %70, <8 x float> %1328) #10
  %1380 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1368, <8 x float> %70, <8 x float> %1332) #10
  %1381 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1372, <8 x float> %70, <8 x float> %1336) #10
  store <8 x float> %1373, <8 x float>* %1303, align 1, !tbaa !12
  store <8 x float> %1374, <8 x float>* %1307, align 1, !tbaa !12
  store <8 x float> %1375, <8 x float>* %1311, align 1, !tbaa !12
  store <8 x float> %1376, <8 x float>* %1315, align 1, !tbaa !12
  store <8 x float> %1377, <8 x float>* %1319, align 1, !tbaa !12
  store <8 x float> %1378, <8 x float>* %1323, align 1, !tbaa !12
  store <8 x float> %1379, <8 x float>* %1327, align 1, !tbaa !12
  store <8 x float> %1380, <8 x float>* %1331, align 1, !tbaa !12
  store <8 x float> %1381, <8 x float>* %1335, align 1, !tbaa !12
  %1382 = add nuw nsw i64 %1264, 72
  %1383 = icmp ult i64 %1382, %1125
  br i1 %1383, label %1263, label %1257

1384:                                             ; preds = %1389, %20, %473, %992, %1120, %1257
  %1385 = add nuw nsw i64 %21, 11
  %1386 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1387 = sext i32 %1386 to i64
  %1388 = icmp slt i64 %1385, %1387
  br i1 %1388, label %20, label %8

1389:                                             ; preds = %1258, %1389
  %1390 = phi i64 [ 0, %1258 ], [ %1508, %1389 ]
  %1391 = getelementptr inbounds float, float* %5, i64 %1390
  %1392 = getelementptr inbounds float, float* %1391, i64 8
  %1393 = bitcast float* %1392 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1393, i32 0, i32 1, i32 1)
  %1394 = getelementptr inbounds float, float* %3, i64 %1390
  %1395 = getelementptr inbounds float, float* %1394, i64 8
  %1396 = bitcast float* %1395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1396, i32 0, i32 1, i32 1)
  %1397 = getelementptr inbounds float, float* %1391, i64 16
  %1398 = bitcast float* %1397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1398, i32 0, i32 1, i32 1)
  %1399 = getelementptr inbounds float, float* %1394, i64 16
  %1400 = bitcast float* %1399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1400, i32 0, i32 1, i32 1)
  %1401 = getelementptr inbounds float, float* %1391, i64 24
  %1402 = bitcast float* %1401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1402, i32 0, i32 1, i32 1)
  %1403 = getelementptr inbounds float, float* %1394, i64 24
  %1404 = bitcast float* %1403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1404, i32 0, i32 1, i32 1)
  %1405 = getelementptr inbounds float, float* %1391, i64 32
  %1406 = bitcast float* %1405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1406, i32 0, i32 1, i32 1)
  %1407 = getelementptr inbounds float, float* %1394, i64 32
  %1408 = bitcast float* %1407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1408, i32 0, i32 1, i32 1)
  %1409 = getelementptr inbounds float, float* %1391, i64 40
  %1410 = bitcast float* %1409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1410, i32 0, i32 1, i32 1)
  %1411 = getelementptr inbounds float, float* %1394, i64 40
  %1412 = bitcast float* %1411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1412, i32 0, i32 1, i32 1)
  %1413 = getelementptr inbounds float, float* %1391, i64 48
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %1394, i64 48
  %1416 = bitcast float* %1415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1416, i32 0, i32 1, i32 1)
  %1417 = getelementptr inbounds float, float* %1391, i64 56
  %1418 = bitcast float* %1417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1418, i32 0, i32 1, i32 1)
  %1419 = getelementptr inbounds float, float* %1394, i64 56
  %1420 = bitcast float* %1419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1420, i32 0, i32 1, i32 1)
  %1421 = getelementptr inbounds float, float* %1391, i64 64
  %1422 = bitcast float* %1421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1422, i32 0, i32 1, i32 1)
  %1423 = getelementptr inbounds float, float* %1394, i64 64
  %1424 = bitcast float* %1423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1424, i32 0, i32 1, i32 1)
  %1425 = getelementptr inbounds float, float* %1391, i64 72
  %1426 = bitcast float* %1425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1426, i32 0, i32 1, i32 1)
  %1427 = getelementptr inbounds float, float* %1394, i64 72
  %1428 = bitcast float* %1427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1428, i32 0, i32 1, i32 1)
  %1429 = bitcast float* %1391 to <8 x float>*
  %1430 = load <8 x float>, <8 x float>* %1429, align 1, !tbaa !12
  %1431 = add nuw nsw i64 %1390, 8
  %1432 = getelementptr inbounds float, float* %5, i64 %1431
  %1433 = bitcast float* %1432 to <8 x float>*
  %1434 = load <8 x float>, <8 x float>* %1433, align 1, !tbaa !12
  %1435 = add nuw nsw i64 %1390, 16
  %1436 = getelementptr inbounds float, float* %5, i64 %1435
  %1437 = bitcast float* %1436 to <8 x float>*
  %1438 = load <8 x float>, <8 x float>* %1437, align 1, !tbaa !12
  %1439 = add nuw nsw i64 %1390, 24
  %1440 = getelementptr inbounds float, float* %5, i64 %1439
  %1441 = bitcast float* %1440 to <8 x float>*
  %1442 = load <8 x float>, <8 x float>* %1441, align 1, !tbaa !12
  %1443 = add nuw nsw i64 %1390, 32
  %1444 = getelementptr inbounds float, float* %5, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nuw nsw i64 %1390, 40
  %1448 = getelementptr inbounds float, float* %5, i64 %1447
  %1449 = bitcast float* %1448 to <8 x float>*
  %1450 = load <8 x float>, <8 x float>* %1449, align 1, !tbaa !12
  %1451 = add nuw nsw i64 %1390, 48
  %1452 = getelementptr inbounds float, float* %5, i64 %1451
  %1453 = bitcast float* %1452 to <8 x float>*
  %1454 = load <8 x float>, <8 x float>* %1453, align 1, !tbaa !12
  %1455 = add nuw nsw i64 %1390, 56
  %1456 = getelementptr inbounds float, float* %5, i64 %1455
  %1457 = bitcast float* %1456 to <8 x float>*
  %1458 = load <8 x float>, <8 x float>* %1457, align 1, !tbaa !12
  %1459 = add nuw nsw i64 %1390, 64
  %1460 = getelementptr inbounds float, float* %5, i64 %1459
  %1461 = bitcast float* %1460 to <8 x float>*
  %1462 = load <8 x float>, <8 x float>* %1461, align 1, !tbaa !12
  %1463 = add nsw i64 %1390, %1261
  %1464 = getelementptr inbounds float, float* %3, i64 %1463
  %1465 = bitcast float* %1464 to <8 x float>*
  %1466 = load <8 x float>, <8 x float>* %1465, align 1, !tbaa !12
  %1467 = add nsw i64 %1463, 8
  %1468 = getelementptr inbounds float, float* %3, i64 %1467
  %1469 = bitcast float* %1468 to <8 x float>*
  %1470 = load <8 x float>, <8 x float>* %1469, align 1, !tbaa !12
  %1471 = add nsw i64 %1463, 16
  %1472 = getelementptr inbounds float, float* %3, i64 %1471
  %1473 = bitcast float* %1472 to <8 x float>*
  %1474 = load <8 x float>, <8 x float>* %1473, align 1, !tbaa !12
  %1475 = add nsw i64 %1463, 24
  %1476 = getelementptr inbounds float, float* %3, i64 %1475
  %1477 = bitcast float* %1476 to <8 x float>*
  %1478 = load <8 x float>, <8 x float>* %1477, align 1, !tbaa !12
  %1479 = add nsw i64 %1463, 32
  %1480 = getelementptr inbounds float, float* %3, i64 %1479
  %1481 = bitcast float* %1480 to <8 x float>*
  %1482 = load <8 x float>, <8 x float>* %1481, align 1, !tbaa !12
  %1483 = add nsw i64 %1463, 40
  %1484 = getelementptr inbounds float, float* %3, i64 %1483
  %1485 = bitcast float* %1484 to <8 x float>*
  %1486 = load <8 x float>, <8 x float>* %1485, align 1, !tbaa !12
  %1487 = add nsw i64 %1463, 48
  %1488 = getelementptr inbounds float, float* %3, i64 %1487
  %1489 = bitcast float* %1488 to <8 x float>*
  %1490 = load <8 x float>, <8 x float>* %1489, align 1, !tbaa !12
  %1491 = add nsw i64 %1463, 56
  %1492 = getelementptr inbounds float, float* %3, i64 %1491
  %1493 = bitcast float* %1492 to <8 x float>*
  %1494 = load <8 x float>, <8 x float>* %1493, align 1, !tbaa !12
  %1495 = add nsw i64 %1463, 64
  %1496 = getelementptr inbounds float, float* %3, i64 %1495
  %1497 = bitcast float* %1496 to <8 x float>*
  %1498 = load <8 x float>, <8 x float>* %1497, align 1, !tbaa !12
  %1499 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1466, <8 x float> %75, <8 x float> %1430) #10
  %1500 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1470, <8 x float> %75, <8 x float> %1434) #10
  %1501 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1474, <8 x float> %75, <8 x float> %1438) #10
  %1502 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1478, <8 x float> %75, <8 x float> %1442) #10
  %1503 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1482, <8 x float> %75, <8 x float> %1446) #10
  %1504 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1486, <8 x float> %75, <8 x float> %1450) #10
  %1505 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1490, <8 x float> %75, <8 x float> %1454) #10
  %1506 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1494, <8 x float> %75, <8 x float> %1458) #10
  %1507 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1498, <8 x float> %75, <8 x float> %1462) #10
  store <8 x float> %1499, <8 x float>* %1429, align 1, !tbaa !12
  store <8 x float> %1500, <8 x float>* %1433, align 1, !tbaa !12
  store <8 x float> %1501, <8 x float>* %1437, align 1, !tbaa !12
  store <8 x float> %1502, <8 x float>* %1441, align 1, !tbaa !12
  store <8 x float> %1503, <8 x float>* %1445, align 1, !tbaa !12
  store <8 x float> %1504, <8 x float>* %1449, align 1, !tbaa !12
  store <8 x float> %1505, <8 x float>* %1453, align 1, !tbaa !12
  store <8 x float> %1506, <8 x float>* %1457, align 1, !tbaa !12
  store <8 x float> %1507, <8 x float>* %1461, align 1, !tbaa !12
  %1508 = add nuw nsw i64 %1390, 72
  %1509 = icmp ult i64 %1508, %1262
  br i1 %1509, label %1389, label %1384
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 209
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui9_uk11.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
