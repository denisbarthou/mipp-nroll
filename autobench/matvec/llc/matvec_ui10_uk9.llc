; ModuleID = 'codes/matvec_ui10_uk9.cpp'
source_filename = "codes/matvec_ui10_uk9.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui10_uk9.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 80
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 72
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1216, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1216
  %21 = phi i64 [ %1217, %1216 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %1216

68:                                               ; preds = %20
  %69 = zext i32 %66 to i64
  %70 = trunc i64 %21 to i32
  %71 = mul nsw i32 %66, %70
  br label %78

72:                                               ; preds = %78
  br i1 %67, label %73, label %503

73:                                               ; preds = %72
  %74 = trunc i64 %26 to i32
  %75 = mul nsw i32 %66, %74
  %76 = sext i32 %75 to i64
  %77 = zext i32 %66 to i64
  br label %229

78:                                               ; preds = %68, %78
  %79 = phi i64 [ 0, %68 ], [ %221, %78 ]
  %80 = getelementptr inbounds float, float* %5, i64 %79
  %81 = getelementptr inbounds float, float* %80, i64 8
  %82 = bitcast float* %81 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %82, i32 0, i32 1, i32 1)
  %83 = getelementptr inbounds float, float* %3, i64 %79
  %84 = getelementptr inbounds float, float* %83, i64 8
  %85 = bitcast float* %84 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %85, i32 0, i32 1, i32 1)
  %86 = getelementptr inbounds float, float* %80, i64 16
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %83, i64 16
  %89 = bitcast float* %88 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %89, i32 0, i32 1, i32 1)
  %90 = getelementptr inbounds float, float* %80, i64 24
  %91 = bitcast float* %90 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %91, i32 0, i32 1, i32 1)
  %92 = getelementptr inbounds float, float* %83, i64 24
  %93 = bitcast float* %92 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %93, i32 0, i32 1, i32 1)
  %94 = getelementptr inbounds float, float* %80, i64 32
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %83, i64 32
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %80, i64 40
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %83, i64 40
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %80, i64 48
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %83, i64 48
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %80, i64 56
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %83, i64 56
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %80, i64 64
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %83, i64 64
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %80, i64 72
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %83, i64 72
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %80, i64 80
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %83, i64 80
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = bitcast float* %80 to <8 x float>*
  %123 = load <8 x float>, <8 x float>* %122, align 1, !tbaa !12
  %124 = or i64 %79, 8
  %125 = getelementptr inbounds float, float* %5, i64 %124
  %126 = bitcast float* %125 to <8 x float>*
  %127 = load <8 x float>, <8 x float>* %126, align 1, !tbaa !12
  %128 = add nuw nsw i64 %79, 16
  %129 = getelementptr inbounds float, float* %5, i64 %128
  %130 = bitcast float* %129 to <8 x float>*
  %131 = load <8 x float>, <8 x float>* %130, align 1, !tbaa !12
  %132 = add nuw nsw i64 %79, 24
  %133 = getelementptr inbounds float, float* %5, i64 %132
  %134 = bitcast float* %133 to <8 x float>*
  %135 = load <8 x float>, <8 x float>* %134, align 1, !tbaa !12
  %136 = add nuw nsw i64 %79, 32
  %137 = getelementptr inbounds float, float* %5, i64 %136
  %138 = bitcast float* %137 to <8 x float>*
  %139 = load <8 x float>, <8 x float>* %138, align 1, !tbaa !12
  %140 = add nuw nsw i64 %79, 40
  %141 = getelementptr inbounds float, float* %5, i64 %140
  %142 = bitcast float* %141 to <8 x float>*
  %143 = load <8 x float>, <8 x float>* %142, align 1, !tbaa !12
  %144 = add nuw nsw i64 %79, 48
  %145 = getelementptr inbounds float, float* %5, i64 %144
  %146 = bitcast float* %145 to <8 x float>*
  %147 = load <8 x float>, <8 x float>* %146, align 1, !tbaa !12
  %148 = add nuw nsw i64 %79, 56
  %149 = getelementptr inbounds float, float* %5, i64 %148
  %150 = bitcast float* %149 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = add nuw nsw i64 %79, 64
  %153 = getelementptr inbounds float, float* %5, i64 %152
  %154 = bitcast float* %153 to <8 x float>*
  %155 = load <8 x float>, <8 x float>* %154, align 1, !tbaa !12
  %156 = add nuw nsw i64 %79, 72
  %157 = getelementptr inbounds float, float* %5, i64 %156
  %158 = bitcast float* %157 to <8 x float>*
  %159 = load <8 x float>, <8 x float>* %158, align 1, !tbaa !12
  %160 = trunc i64 %79 to i32
  %161 = add nsw i32 %71, %160
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds float, float* %3, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = add nsw i32 %161, 8
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds float, float* %3, i64 %167
  %169 = bitcast float* %168 to <8 x float>*
  %170 = load <8 x float>, <8 x float>* %169, align 1, !tbaa !12
  %171 = add nsw i32 %161, 16
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds float, float* %3, i64 %172
  %174 = bitcast float* %173 to <8 x float>*
  %175 = load <8 x float>, <8 x float>* %174, align 1, !tbaa !12
  %176 = add nsw i32 %161, 24
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds float, float* %3, i64 %177
  %179 = bitcast float* %178 to <8 x float>*
  %180 = load <8 x float>, <8 x float>* %179, align 1, !tbaa !12
  %181 = add nsw i32 %161, 32
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds float, float* %3, i64 %182
  %184 = bitcast float* %183 to <8 x float>*
  %185 = load <8 x float>, <8 x float>* %184, align 1, !tbaa !12
  %186 = add nsw i32 %161, 40
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds float, float* %3, i64 %187
  %189 = bitcast float* %188 to <8 x float>*
  %190 = load <8 x float>, <8 x float>* %189, align 1, !tbaa !12
  %191 = add nsw i32 %161, 48
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds float, float* %3, i64 %192
  %194 = bitcast float* %193 to <8 x float>*
  %195 = load <8 x float>, <8 x float>* %194, align 1, !tbaa !12
  %196 = add nsw i32 %161, 56
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds float, float* %3, i64 %197
  %199 = bitcast float* %198 to <8 x float>*
  %200 = load <8 x float>, <8 x float>* %199, align 1, !tbaa !12
  %201 = add nsw i32 %161, 64
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds float, float* %3, i64 %202
  %204 = bitcast float* %203 to <8 x float>*
  %205 = load <8 x float>, <8 x float>* %204, align 1, !tbaa !12
  %206 = add nsw i32 %161, 72
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds float, float* %3, i64 %207
  %209 = bitcast float* %208 to <8 x float>*
  %210 = load <8 x float>, <8 x float>* %209, align 1, !tbaa !12
  %211 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %165, <8 x float> %25, <8 x float> %123) #10
  %212 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %170, <8 x float> %25, <8 x float> %127) #10
  %213 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %175, <8 x float> %25, <8 x float> %131) #10
  %214 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %180, <8 x float> %25, <8 x float> %135) #10
  %215 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %185, <8 x float> %25, <8 x float> %139) #10
  %216 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %190, <8 x float> %25, <8 x float> %143) #10
  %217 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %195, <8 x float> %25, <8 x float> %147) #10
  %218 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %200, <8 x float> %25, <8 x float> %151) #10
  %219 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %205, <8 x float> %25, <8 x float> %155) #10
  %220 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %210, <8 x float> %25, <8 x float> %159) #10
  store <8 x float> %211, <8 x float>* %122, align 1, !tbaa !12
  store <8 x float> %212, <8 x float>* %126, align 1, !tbaa !12
  store <8 x float> %213, <8 x float>* %130, align 1, !tbaa !12
  store <8 x float> %214, <8 x float>* %134, align 1, !tbaa !12
  store <8 x float> %215, <8 x float>* %138, align 1, !tbaa !12
  store <8 x float> %216, <8 x float>* %142, align 1, !tbaa !12
  store <8 x float> %217, <8 x float>* %146, align 1, !tbaa !12
  store <8 x float> %218, <8 x float>* %150, align 1, !tbaa !12
  store <8 x float> %219, <8 x float>* %154, align 1, !tbaa !12
  store <8 x float> %220, <8 x float>* %158, align 1, !tbaa !12
  %221 = add nuw nsw i64 %79, 80
  %222 = icmp ult i64 %221, %69
  br i1 %222, label %78, label %72

223:                                              ; preds = %229
  br i1 %67, label %224, label %503

224:                                              ; preds = %223
  %225 = trunc i64 %31 to i32
  %226 = mul nsw i32 %66, %225
  %227 = sext i32 %226 to i64
  %228 = zext i32 %66 to i64
  br label %369

229:                                              ; preds = %73, %229
  %230 = phi i64 [ 0, %73 ], [ %361, %229 ]
  %231 = getelementptr inbounds float, float* %5, i64 %230
  %232 = getelementptr inbounds float, float* %231, i64 8
  %233 = bitcast float* %232 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %233, i32 0, i32 1, i32 1)
  %234 = getelementptr inbounds float, float* %3, i64 %230
  %235 = getelementptr inbounds float, float* %234, i64 8
  %236 = bitcast float* %235 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %236, i32 0, i32 1, i32 1)
  %237 = getelementptr inbounds float, float* %231, i64 16
  %238 = bitcast float* %237 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %238, i32 0, i32 1, i32 1)
  %239 = getelementptr inbounds float, float* %234, i64 16
  %240 = bitcast float* %239 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %240, i32 0, i32 1, i32 1)
  %241 = getelementptr inbounds float, float* %231, i64 24
  %242 = bitcast float* %241 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %242, i32 0, i32 1, i32 1)
  %243 = getelementptr inbounds float, float* %234, i64 24
  %244 = bitcast float* %243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %244, i32 0, i32 1, i32 1)
  %245 = getelementptr inbounds float, float* %231, i64 32
  %246 = bitcast float* %245 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %246, i32 0, i32 1, i32 1)
  %247 = getelementptr inbounds float, float* %234, i64 32
  %248 = bitcast float* %247 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %248, i32 0, i32 1, i32 1)
  %249 = getelementptr inbounds float, float* %231, i64 40
  %250 = bitcast float* %249 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %250, i32 0, i32 1, i32 1)
  %251 = getelementptr inbounds float, float* %234, i64 40
  %252 = bitcast float* %251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %252, i32 0, i32 1, i32 1)
  %253 = getelementptr inbounds float, float* %231, i64 48
  %254 = bitcast float* %253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %254, i32 0, i32 1, i32 1)
  %255 = getelementptr inbounds float, float* %234, i64 48
  %256 = bitcast float* %255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %256, i32 0, i32 1, i32 1)
  %257 = getelementptr inbounds float, float* %231, i64 56
  %258 = bitcast float* %257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %258, i32 0, i32 1, i32 1)
  %259 = getelementptr inbounds float, float* %234, i64 56
  %260 = bitcast float* %259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %260, i32 0, i32 1, i32 1)
  %261 = getelementptr inbounds float, float* %231, i64 64
  %262 = bitcast float* %261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %262, i32 0, i32 1, i32 1)
  %263 = getelementptr inbounds float, float* %234, i64 64
  %264 = bitcast float* %263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %264, i32 0, i32 1, i32 1)
  %265 = getelementptr inbounds float, float* %231, i64 72
  %266 = bitcast float* %265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %266, i32 0, i32 1, i32 1)
  %267 = getelementptr inbounds float, float* %234, i64 72
  %268 = bitcast float* %267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %268, i32 0, i32 1, i32 1)
  %269 = getelementptr inbounds float, float* %231, i64 80
  %270 = bitcast float* %269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %270, i32 0, i32 1, i32 1)
  %271 = getelementptr inbounds float, float* %234, i64 80
  %272 = bitcast float* %271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %272, i32 0, i32 1, i32 1)
  %273 = bitcast float* %231 to <8 x float>*
  %274 = load <8 x float>, <8 x float>* %273, align 1, !tbaa !12
  %275 = or i64 %230, 8
  %276 = getelementptr inbounds float, float* %5, i64 %275
  %277 = bitcast float* %276 to <8 x float>*
  %278 = load <8 x float>, <8 x float>* %277, align 1, !tbaa !12
  %279 = add nuw nsw i64 %230, 16
  %280 = getelementptr inbounds float, float* %5, i64 %279
  %281 = bitcast float* %280 to <8 x float>*
  %282 = load <8 x float>, <8 x float>* %281, align 1, !tbaa !12
  %283 = add nuw nsw i64 %230, 24
  %284 = getelementptr inbounds float, float* %5, i64 %283
  %285 = bitcast float* %284 to <8 x float>*
  %286 = load <8 x float>, <8 x float>* %285, align 1, !tbaa !12
  %287 = add nuw nsw i64 %230, 32
  %288 = getelementptr inbounds float, float* %5, i64 %287
  %289 = bitcast float* %288 to <8 x float>*
  %290 = load <8 x float>, <8 x float>* %289, align 1, !tbaa !12
  %291 = add nuw nsw i64 %230, 40
  %292 = getelementptr inbounds float, float* %5, i64 %291
  %293 = bitcast float* %292 to <8 x float>*
  %294 = load <8 x float>, <8 x float>* %293, align 1, !tbaa !12
  %295 = add nuw nsw i64 %230, 48
  %296 = getelementptr inbounds float, float* %5, i64 %295
  %297 = bitcast float* %296 to <8 x float>*
  %298 = load <8 x float>, <8 x float>* %297, align 1, !tbaa !12
  %299 = add nuw nsw i64 %230, 56
  %300 = getelementptr inbounds float, float* %5, i64 %299
  %301 = bitcast float* %300 to <8 x float>*
  %302 = load <8 x float>, <8 x float>* %301, align 1, !tbaa !12
  %303 = add nuw nsw i64 %230, 64
  %304 = getelementptr inbounds float, float* %5, i64 %303
  %305 = bitcast float* %304 to <8 x float>*
  %306 = load <8 x float>, <8 x float>* %305, align 1, !tbaa !12
  %307 = add nuw nsw i64 %230, 72
  %308 = getelementptr inbounds float, float* %5, i64 %307
  %309 = bitcast float* %308 to <8 x float>*
  %310 = load <8 x float>, <8 x float>* %309, align 1, !tbaa !12
  %311 = add nsw i64 %230, %76
  %312 = getelementptr inbounds float, float* %3, i64 %311
  %313 = bitcast float* %312 to <8 x float>*
  %314 = load <8 x float>, <8 x float>* %313, align 1, !tbaa !12
  %315 = add nsw i64 %311, 8
  %316 = getelementptr inbounds float, float* %3, i64 %315
  %317 = bitcast float* %316 to <8 x float>*
  %318 = load <8 x float>, <8 x float>* %317, align 1, !tbaa !12
  %319 = add nsw i64 %311, 16
  %320 = getelementptr inbounds float, float* %3, i64 %319
  %321 = bitcast float* %320 to <8 x float>*
  %322 = load <8 x float>, <8 x float>* %321, align 1, !tbaa !12
  %323 = add nsw i64 %311, 24
  %324 = getelementptr inbounds float, float* %3, i64 %323
  %325 = bitcast float* %324 to <8 x float>*
  %326 = load <8 x float>, <8 x float>* %325, align 1, !tbaa !12
  %327 = add nsw i64 %311, 32
  %328 = getelementptr inbounds float, float* %3, i64 %327
  %329 = bitcast float* %328 to <8 x float>*
  %330 = load <8 x float>, <8 x float>* %329, align 1, !tbaa !12
  %331 = add nsw i64 %311, 40
  %332 = getelementptr inbounds float, float* %3, i64 %331
  %333 = bitcast float* %332 to <8 x float>*
  %334 = load <8 x float>, <8 x float>* %333, align 1, !tbaa !12
  %335 = add nsw i64 %311, 48
  %336 = getelementptr inbounds float, float* %3, i64 %335
  %337 = bitcast float* %336 to <8 x float>*
  %338 = load <8 x float>, <8 x float>* %337, align 1, !tbaa !12
  %339 = add nsw i64 %311, 56
  %340 = getelementptr inbounds float, float* %3, i64 %339
  %341 = bitcast float* %340 to <8 x float>*
  %342 = load <8 x float>, <8 x float>* %341, align 1, !tbaa !12
  %343 = add nsw i64 %311, 64
  %344 = getelementptr inbounds float, float* %3, i64 %343
  %345 = bitcast float* %344 to <8 x float>*
  %346 = load <8 x float>, <8 x float>* %345, align 1, !tbaa !12
  %347 = add nsw i64 %311, 72
  %348 = getelementptr inbounds float, float* %3, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %350 = load <8 x float>, <8 x float>* %349, align 1, !tbaa !12
  %351 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %314, <8 x float> %30, <8 x float> %274) #10
  %352 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %318, <8 x float> %30, <8 x float> %278) #10
  %353 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %322, <8 x float> %30, <8 x float> %282) #10
  %354 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %326, <8 x float> %30, <8 x float> %286) #10
  %355 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %330, <8 x float> %30, <8 x float> %290) #10
  %356 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %334, <8 x float> %30, <8 x float> %294) #10
  %357 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %338, <8 x float> %30, <8 x float> %298) #10
  %358 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %342, <8 x float> %30, <8 x float> %302) #10
  %359 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %346, <8 x float> %30, <8 x float> %306) #10
  %360 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %350, <8 x float> %30, <8 x float> %310) #10
  store <8 x float> %351, <8 x float>* %273, align 1, !tbaa !12
  store <8 x float> %352, <8 x float>* %277, align 1, !tbaa !12
  store <8 x float> %353, <8 x float>* %281, align 1, !tbaa !12
  store <8 x float> %354, <8 x float>* %285, align 1, !tbaa !12
  store <8 x float> %355, <8 x float>* %289, align 1, !tbaa !12
  store <8 x float> %356, <8 x float>* %293, align 1, !tbaa !12
  store <8 x float> %357, <8 x float>* %297, align 1, !tbaa !12
  store <8 x float> %358, <8 x float>* %301, align 1, !tbaa !12
  store <8 x float> %359, <8 x float>* %305, align 1, !tbaa !12
  store <8 x float> %360, <8 x float>* %309, align 1, !tbaa !12
  %361 = add nuw nsw i64 %230, 80
  %362 = icmp ult i64 %361, %77
  br i1 %362, label %229, label %223

363:                                              ; preds = %369
  br i1 %67, label %364, label %503

364:                                              ; preds = %363
  %365 = trunc i64 %36 to i32
  %366 = mul nsw i32 %66, %365
  %367 = sext i32 %366 to i64
  %368 = zext i32 %66 to i64
  br label %510

369:                                              ; preds = %224, %369
  %370 = phi i64 [ 0, %224 ], [ %501, %369 ]
  %371 = getelementptr inbounds float, float* %5, i64 %370
  %372 = getelementptr inbounds float, float* %371, i64 8
  %373 = bitcast float* %372 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %373, i32 0, i32 1, i32 1)
  %374 = getelementptr inbounds float, float* %3, i64 %370
  %375 = getelementptr inbounds float, float* %374, i64 8
  %376 = bitcast float* %375 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %376, i32 0, i32 1, i32 1)
  %377 = getelementptr inbounds float, float* %371, i64 16
  %378 = bitcast float* %377 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %378, i32 0, i32 1, i32 1)
  %379 = getelementptr inbounds float, float* %374, i64 16
  %380 = bitcast float* %379 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %380, i32 0, i32 1, i32 1)
  %381 = getelementptr inbounds float, float* %371, i64 24
  %382 = bitcast float* %381 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %382, i32 0, i32 1, i32 1)
  %383 = getelementptr inbounds float, float* %374, i64 24
  %384 = bitcast float* %383 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %384, i32 0, i32 1, i32 1)
  %385 = getelementptr inbounds float, float* %371, i64 32
  %386 = bitcast float* %385 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %386, i32 0, i32 1, i32 1)
  %387 = getelementptr inbounds float, float* %374, i64 32
  %388 = bitcast float* %387 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %388, i32 0, i32 1, i32 1)
  %389 = getelementptr inbounds float, float* %371, i64 40
  %390 = bitcast float* %389 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %390, i32 0, i32 1, i32 1)
  %391 = getelementptr inbounds float, float* %374, i64 40
  %392 = bitcast float* %391 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %392, i32 0, i32 1, i32 1)
  %393 = getelementptr inbounds float, float* %371, i64 48
  %394 = bitcast float* %393 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %394, i32 0, i32 1, i32 1)
  %395 = getelementptr inbounds float, float* %374, i64 48
  %396 = bitcast float* %395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %396, i32 0, i32 1, i32 1)
  %397 = getelementptr inbounds float, float* %371, i64 56
  %398 = bitcast float* %397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %398, i32 0, i32 1, i32 1)
  %399 = getelementptr inbounds float, float* %374, i64 56
  %400 = bitcast float* %399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %400, i32 0, i32 1, i32 1)
  %401 = getelementptr inbounds float, float* %371, i64 64
  %402 = bitcast float* %401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %402, i32 0, i32 1, i32 1)
  %403 = getelementptr inbounds float, float* %374, i64 64
  %404 = bitcast float* %403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %404, i32 0, i32 1, i32 1)
  %405 = getelementptr inbounds float, float* %371, i64 72
  %406 = bitcast float* %405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %406, i32 0, i32 1, i32 1)
  %407 = getelementptr inbounds float, float* %374, i64 72
  %408 = bitcast float* %407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %408, i32 0, i32 1, i32 1)
  %409 = getelementptr inbounds float, float* %371, i64 80
  %410 = bitcast float* %409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %410, i32 0, i32 1, i32 1)
  %411 = getelementptr inbounds float, float* %374, i64 80
  %412 = bitcast float* %411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %412, i32 0, i32 1, i32 1)
  %413 = bitcast float* %371 to <8 x float>*
  %414 = load <8 x float>, <8 x float>* %413, align 1, !tbaa !12
  %415 = or i64 %370, 8
  %416 = getelementptr inbounds float, float* %5, i64 %415
  %417 = bitcast float* %416 to <8 x float>*
  %418 = load <8 x float>, <8 x float>* %417, align 1, !tbaa !12
  %419 = add nuw nsw i64 %370, 16
  %420 = getelementptr inbounds float, float* %5, i64 %419
  %421 = bitcast float* %420 to <8 x float>*
  %422 = load <8 x float>, <8 x float>* %421, align 1, !tbaa !12
  %423 = add nuw nsw i64 %370, 24
  %424 = getelementptr inbounds float, float* %5, i64 %423
  %425 = bitcast float* %424 to <8 x float>*
  %426 = load <8 x float>, <8 x float>* %425, align 1, !tbaa !12
  %427 = add nuw nsw i64 %370, 32
  %428 = getelementptr inbounds float, float* %5, i64 %427
  %429 = bitcast float* %428 to <8 x float>*
  %430 = load <8 x float>, <8 x float>* %429, align 1, !tbaa !12
  %431 = add nuw nsw i64 %370, 40
  %432 = getelementptr inbounds float, float* %5, i64 %431
  %433 = bitcast float* %432 to <8 x float>*
  %434 = load <8 x float>, <8 x float>* %433, align 1, !tbaa !12
  %435 = add nuw nsw i64 %370, 48
  %436 = getelementptr inbounds float, float* %5, i64 %435
  %437 = bitcast float* %436 to <8 x float>*
  %438 = load <8 x float>, <8 x float>* %437, align 1, !tbaa !12
  %439 = add nuw nsw i64 %370, 56
  %440 = getelementptr inbounds float, float* %5, i64 %439
  %441 = bitcast float* %440 to <8 x float>*
  %442 = load <8 x float>, <8 x float>* %441, align 1, !tbaa !12
  %443 = add nuw nsw i64 %370, 64
  %444 = getelementptr inbounds float, float* %5, i64 %443
  %445 = bitcast float* %444 to <8 x float>*
  %446 = load <8 x float>, <8 x float>* %445, align 1, !tbaa !12
  %447 = add nuw nsw i64 %370, 72
  %448 = getelementptr inbounds float, float* %5, i64 %447
  %449 = bitcast float* %448 to <8 x float>*
  %450 = load <8 x float>, <8 x float>* %449, align 1, !tbaa !12
  %451 = add nsw i64 %370, %227
  %452 = getelementptr inbounds float, float* %3, i64 %451
  %453 = bitcast float* %452 to <8 x float>*
  %454 = load <8 x float>, <8 x float>* %453, align 1, !tbaa !12
  %455 = add nsw i64 %451, 8
  %456 = getelementptr inbounds float, float* %3, i64 %455
  %457 = bitcast float* %456 to <8 x float>*
  %458 = load <8 x float>, <8 x float>* %457, align 1, !tbaa !12
  %459 = add nsw i64 %451, 16
  %460 = getelementptr inbounds float, float* %3, i64 %459
  %461 = bitcast float* %460 to <8 x float>*
  %462 = load <8 x float>, <8 x float>* %461, align 1, !tbaa !12
  %463 = add nsw i64 %451, 24
  %464 = getelementptr inbounds float, float* %3, i64 %463
  %465 = bitcast float* %464 to <8 x float>*
  %466 = load <8 x float>, <8 x float>* %465, align 1, !tbaa !12
  %467 = add nsw i64 %451, 32
  %468 = getelementptr inbounds float, float* %3, i64 %467
  %469 = bitcast float* %468 to <8 x float>*
  %470 = load <8 x float>, <8 x float>* %469, align 1, !tbaa !12
  %471 = add nsw i64 %451, 40
  %472 = getelementptr inbounds float, float* %3, i64 %471
  %473 = bitcast float* %472 to <8 x float>*
  %474 = load <8 x float>, <8 x float>* %473, align 1, !tbaa !12
  %475 = add nsw i64 %451, 48
  %476 = getelementptr inbounds float, float* %3, i64 %475
  %477 = bitcast float* %476 to <8 x float>*
  %478 = load <8 x float>, <8 x float>* %477, align 1, !tbaa !12
  %479 = add nsw i64 %451, 56
  %480 = getelementptr inbounds float, float* %3, i64 %479
  %481 = bitcast float* %480 to <8 x float>*
  %482 = load <8 x float>, <8 x float>* %481, align 1, !tbaa !12
  %483 = add nsw i64 %451, 64
  %484 = getelementptr inbounds float, float* %3, i64 %483
  %485 = bitcast float* %484 to <8 x float>*
  %486 = load <8 x float>, <8 x float>* %485, align 1, !tbaa !12
  %487 = add nsw i64 %451, 72
  %488 = getelementptr inbounds float, float* %3, i64 %487
  %489 = bitcast float* %488 to <8 x float>*
  %490 = load <8 x float>, <8 x float>* %489, align 1, !tbaa !12
  %491 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %454, <8 x float> %35, <8 x float> %414) #10
  %492 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %458, <8 x float> %35, <8 x float> %418) #10
  %493 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %462, <8 x float> %35, <8 x float> %422) #10
  %494 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %466, <8 x float> %35, <8 x float> %426) #10
  %495 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %470, <8 x float> %35, <8 x float> %430) #10
  %496 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %474, <8 x float> %35, <8 x float> %434) #10
  %497 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %478, <8 x float> %35, <8 x float> %438) #10
  %498 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %482, <8 x float> %35, <8 x float> %442) #10
  %499 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %486, <8 x float> %35, <8 x float> %446) #10
  %500 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %490, <8 x float> %35, <8 x float> %450) #10
  store <8 x float> %491, <8 x float>* %413, align 1, !tbaa !12
  store <8 x float> %492, <8 x float>* %417, align 1, !tbaa !12
  store <8 x float> %493, <8 x float>* %421, align 1, !tbaa !12
  store <8 x float> %494, <8 x float>* %425, align 1, !tbaa !12
  store <8 x float> %495, <8 x float>* %429, align 1, !tbaa !12
  store <8 x float> %496, <8 x float>* %433, align 1, !tbaa !12
  store <8 x float> %497, <8 x float>* %437, align 1, !tbaa !12
  store <8 x float> %498, <8 x float>* %441, align 1, !tbaa !12
  store <8 x float> %499, <8 x float>* %445, align 1, !tbaa !12
  store <8 x float> %500, <8 x float>* %449, align 1, !tbaa !12
  %501 = add nuw nsw i64 %370, 80
  %502 = icmp ult i64 %501, %228
  br i1 %502, label %369, label %363

503:                                              ; preds = %510, %72, %223, %363
  %504 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %505 = icmp sgt i32 %504, 0
  br i1 %505, label %506, label %1216

506:                                              ; preds = %503
  %507 = zext i32 %504 to i64
  %508 = trunc i64 %41 to i32
  %509 = mul nsw i32 %504, %508
  br label %650

510:                                              ; preds = %364, %510
  %511 = phi i64 [ 0, %364 ], [ %642, %510 ]
  %512 = getelementptr inbounds float, float* %5, i64 %511
  %513 = getelementptr inbounds float, float* %512, i64 8
  %514 = bitcast float* %513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %514, i32 0, i32 1, i32 1)
  %515 = getelementptr inbounds float, float* %3, i64 %511
  %516 = getelementptr inbounds float, float* %515, i64 8
  %517 = bitcast float* %516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %517, i32 0, i32 1, i32 1)
  %518 = getelementptr inbounds float, float* %512, i64 16
  %519 = bitcast float* %518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %519, i32 0, i32 1, i32 1)
  %520 = getelementptr inbounds float, float* %515, i64 16
  %521 = bitcast float* %520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %521, i32 0, i32 1, i32 1)
  %522 = getelementptr inbounds float, float* %512, i64 24
  %523 = bitcast float* %522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %523, i32 0, i32 1, i32 1)
  %524 = getelementptr inbounds float, float* %515, i64 24
  %525 = bitcast float* %524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %525, i32 0, i32 1, i32 1)
  %526 = getelementptr inbounds float, float* %512, i64 32
  %527 = bitcast float* %526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %527, i32 0, i32 1, i32 1)
  %528 = getelementptr inbounds float, float* %515, i64 32
  %529 = bitcast float* %528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %529, i32 0, i32 1, i32 1)
  %530 = getelementptr inbounds float, float* %512, i64 40
  %531 = bitcast float* %530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %531, i32 0, i32 1, i32 1)
  %532 = getelementptr inbounds float, float* %515, i64 40
  %533 = bitcast float* %532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %533, i32 0, i32 1, i32 1)
  %534 = getelementptr inbounds float, float* %512, i64 48
  %535 = bitcast float* %534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %535, i32 0, i32 1, i32 1)
  %536 = getelementptr inbounds float, float* %515, i64 48
  %537 = bitcast float* %536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %537, i32 0, i32 1, i32 1)
  %538 = getelementptr inbounds float, float* %512, i64 56
  %539 = bitcast float* %538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %539, i32 0, i32 1, i32 1)
  %540 = getelementptr inbounds float, float* %515, i64 56
  %541 = bitcast float* %540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %541, i32 0, i32 1, i32 1)
  %542 = getelementptr inbounds float, float* %512, i64 64
  %543 = bitcast float* %542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %543, i32 0, i32 1, i32 1)
  %544 = getelementptr inbounds float, float* %515, i64 64
  %545 = bitcast float* %544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %545, i32 0, i32 1, i32 1)
  %546 = getelementptr inbounds float, float* %512, i64 72
  %547 = bitcast float* %546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %547, i32 0, i32 1, i32 1)
  %548 = getelementptr inbounds float, float* %515, i64 72
  %549 = bitcast float* %548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %549, i32 0, i32 1, i32 1)
  %550 = getelementptr inbounds float, float* %512, i64 80
  %551 = bitcast float* %550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %551, i32 0, i32 1, i32 1)
  %552 = getelementptr inbounds float, float* %515, i64 80
  %553 = bitcast float* %552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %553, i32 0, i32 1, i32 1)
  %554 = bitcast float* %512 to <8 x float>*
  %555 = load <8 x float>, <8 x float>* %554, align 1, !tbaa !12
  %556 = or i64 %511, 8
  %557 = getelementptr inbounds float, float* %5, i64 %556
  %558 = bitcast float* %557 to <8 x float>*
  %559 = load <8 x float>, <8 x float>* %558, align 1, !tbaa !12
  %560 = add nuw nsw i64 %511, 16
  %561 = getelementptr inbounds float, float* %5, i64 %560
  %562 = bitcast float* %561 to <8 x float>*
  %563 = load <8 x float>, <8 x float>* %562, align 1, !tbaa !12
  %564 = add nuw nsw i64 %511, 24
  %565 = getelementptr inbounds float, float* %5, i64 %564
  %566 = bitcast float* %565 to <8 x float>*
  %567 = load <8 x float>, <8 x float>* %566, align 1, !tbaa !12
  %568 = add nuw nsw i64 %511, 32
  %569 = getelementptr inbounds float, float* %5, i64 %568
  %570 = bitcast float* %569 to <8 x float>*
  %571 = load <8 x float>, <8 x float>* %570, align 1, !tbaa !12
  %572 = add nuw nsw i64 %511, 40
  %573 = getelementptr inbounds float, float* %5, i64 %572
  %574 = bitcast float* %573 to <8 x float>*
  %575 = load <8 x float>, <8 x float>* %574, align 1, !tbaa !12
  %576 = add nuw nsw i64 %511, 48
  %577 = getelementptr inbounds float, float* %5, i64 %576
  %578 = bitcast float* %577 to <8 x float>*
  %579 = load <8 x float>, <8 x float>* %578, align 1, !tbaa !12
  %580 = add nuw nsw i64 %511, 56
  %581 = getelementptr inbounds float, float* %5, i64 %580
  %582 = bitcast float* %581 to <8 x float>*
  %583 = load <8 x float>, <8 x float>* %582, align 1, !tbaa !12
  %584 = add nuw nsw i64 %511, 64
  %585 = getelementptr inbounds float, float* %5, i64 %584
  %586 = bitcast float* %585 to <8 x float>*
  %587 = load <8 x float>, <8 x float>* %586, align 1, !tbaa !12
  %588 = add nuw nsw i64 %511, 72
  %589 = getelementptr inbounds float, float* %5, i64 %588
  %590 = bitcast float* %589 to <8 x float>*
  %591 = load <8 x float>, <8 x float>* %590, align 1, !tbaa !12
  %592 = add nsw i64 %511, %367
  %593 = getelementptr inbounds float, float* %3, i64 %592
  %594 = bitcast float* %593 to <8 x float>*
  %595 = load <8 x float>, <8 x float>* %594, align 1, !tbaa !12
  %596 = add nsw i64 %592, 8
  %597 = getelementptr inbounds float, float* %3, i64 %596
  %598 = bitcast float* %597 to <8 x float>*
  %599 = load <8 x float>, <8 x float>* %598, align 1, !tbaa !12
  %600 = add nsw i64 %592, 16
  %601 = getelementptr inbounds float, float* %3, i64 %600
  %602 = bitcast float* %601 to <8 x float>*
  %603 = load <8 x float>, <8 x float>* %602, align 1, !tbaa !12
  %604 = add nsw i64 %592, 24
  %605 = getelementptr inbounds float, float* %3, i64 %604
  %606 = bitcast float* %605 to <8 x float>*
  %607 = load <8 x float>, <8 x float>* %606, align 1, !tbaa !12
  %608 = add nsw i64 %592, 32
  %609 = getelementptr inbounds float, float* %3, i64 %608
  %610 = bitcast float* %609 to <8 x float>*
  %611 = load <8 x float>, <8 x float>* %610, align 1, !tbaa !12
  %612 = add nsw i64 %592, 40
  %613 = getelementptr inbounds float, float* %3, i64 %612
  %614 = bitcast float* %613 to <8 x float>*
  %615 = load <8 x float>, <8 x float>* %614, align 1, !tbaa !12
  %616 = add nsw i64 %592, 48
  %617 = getelementptr inbounds float, float* %3, i64 %616
  %618 = bitcast float* %617 to <8 x float>*
  %619 = load <8 x float>, <8 x float>* %618, align 1, !tbaa !12
  %620 = add nsw i64 %592, 56
  %621 = getelementptr inbounds float, float* %3, i64 %620
  %622 = bitcast float* %621 to <8 x float>*
  %623 = load <8 x float>, <8 x float>* %622, align 1, !tbaa !12
  %624 = add nsw i64 %592, 64
  %625 = getelementptr inbounds float, float* %3, i64 %624
  %626 = bitcast float* %625 to <8 x float>*
  %627 = load <8 x float>, <8 x float>* %626, align 1, !tbaa !12
  %628 = add nsw i64 %592, 72
  %629 = getelementptr inbounds float, float* %3, i64 %628
  %630 = bitcast float* %629 to <8 x float>*
  %631 = load <8 x float>, <8 x float>* %630, align 1, !tbaa !12
  %632 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %595, <8 x float> %40, <8 x float> %555) #10
  %633 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %599, <8 x float> %40, <8 x float> %559) #10
  %634 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %603, <8 x float> %40, <8 x float> %563) #10
  %635 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %607, <8 x float> %40, <8 x float> %567) #10
  %636 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %611, <8 x float> %40, <8 x float> %571) #10
  %637 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %615, <8 x float> %40, <8 x float> %575) #10
  %638 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %619, <8 x float> %40, <8 x float> %579) #10
  %639 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %623, <8 x float> %40, <8 x float> %583) #10
  %640 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %627, <8 x float> %40, <8 x float> %587) #10
  %641 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %631, <8 x float> %40, <8 x float> %591) #10
  store <8 x float> %632, <8 x float>* %554, align 1, !tbaa !12
  store <8 x float> %633, <8 x float>* %558, align 1, !tbaa !12
  store <8 x float> %634, <8 x float>* %562, align 1, !tbaa !12
  store <8 x float> %635, <8 x float>* %566, align 1, !tbaa !12
  store <8 x float> %636, <8 x float>* %570, align 1, !tbaa !12
  store <8 x float> %637, <8 x float>* %574, align 1, !tbaa !12
  store <8 x float> %638, <8 x float>* %578, align 1, !tbaa !12
  store <8 x float> %639, <8 x float>* %582, align 1, !tbaa !12
  store <8 x float> %640, <8 x float>* %586, align 1, !tbaa !12
  store <8 x float> %641, <8 x float>* %590, align 1, !tbaa !12
  %642 = add nuw nsw i64 %511, 80
  %643 = icmp ult i64 %642, %368
  br i1 %643, label %510, label %503

644:                                              ; preds = %650
  br i1 %505, label %645, label %1075

645:                                              ; preds = %644
  %646 = trunc i64 %46 to i32
  %647 = mul nsw i32 %504, %646
  %648 = sext i32 %647 to i64
  %649 = zext i32 %504 to i64
  br label %801

650:                                              ; preds = %506, %650
  %651 = phi i64 [ 0, %506 ], [ %793, %650 ]
  %652 = getelementptr inbounds float, float* %5, i64 %651
  %653 = getelementptr inbounds float, float* %652, i64 8
  %654 = bitcast float* %653 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %654, i32 0, i32 1, i32 1)
  %655 = getelementptr inbounds float, float* %3, i64 %651
  %656 = getelementptr inbounds float, float* %655, i64 8
  %657 = bitcast float* %656 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %657, i32 0, i32 1, i32 1)
  %658 = getelementptr inbounds float, float* %652, i64 16
  %659 = bitcast float* %658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %659, i32 0, i32 1, i32 1)
  %660 = getelementptr inbounds float, float* %655, i64 16
  %661 = bitcast float* %660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %661, i32 0, i32 1, i32 1)
  %662 = getelementptr inbounds float, float* %652, i64 24
  %663 = bitcast float* %662 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %663, i32 0, i32 1, i32 1)
  %664 = getelementptr inbounds float, float* %655, i64 24
  %665 = bitcast float* %664 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %665, i32 0, i32 1, i32 1)
  %666 = getelementptr inbounds float, float* %652, i64 32
  %667 = bitcast float* %666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %667, i32 0, i32 1, i32 1)
  %668 = getelementptr inbounds float, float* %655, i64 32
  %669 = bitcast float* %668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %669, i32 0, i32 1, i32 1)
  %670 = getelementptr inbounds float, float* %652, i64 40
  %671 = bitcast float* %670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %671, i32 0, i32 1, i32 1)
  %672 = getelementptr inbounds float, float* %655, i64 40
  %673 = bitcast float* %672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %673, i32 0, i32 1, i32 1)
  %674 = getelementptr inbounds float, float* %652, i64 48
  %675 = bitcast float* %674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %675, i32 0, i32 1, i32 1)
  %676 = getelementptr inbounds float, float* %655, i64 48
  %677 = bitcast float* %676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %677, i32 0, i32 1, i32 1)
  %678 = getelementptr inbounds float, float* %652, i64 56
  %679 = bitcast float* %678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %679, i32 0, i32 1, i32 1)
  %680 = getelementptr inbounds float, float* %655, i64 56
  %681 = bitcast float* %680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %681, i32 0, i32 1, i32 1)
  %682 = getelementptr inbounds float, float* %652, i64 64
  %683 = bitcast float* %682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %683, i32 0, i32 1, i32 1)
  %684 = getelementptr inbounds float, float* %655, i64 64
  %685 = bitcast float* %684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %685, i32 0, i32 1, i32 1)
  %686 = getelementptr inbounds float, float* %652, i64 72
  %687 = bitcast float* %686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %687, i32 0, i32 1, i32 1)
  %688 = getelementptr inbounds float, float* %655, i64 72
  %689 = bitcast float* %688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %689, i32 0, i32 1, i32 1)
  %690 = getelementptr inbounds float, float* %652, i64 80
  %691 = bitcast float* %690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %691, i32 0, i32 1, i32 1)
  %692 = getelementptr inbounds float, float* %655, i64 80
  %693 = bitcast float* %692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %693, i32 0, i32 1, i32 1)
  %694 = bitcast float* %652 to <8 x float>*
  %695 = load <8 x float>, <8 x float>* %694, align 1, !tbaa !12
  %696 = or i64 %651, 8
  %697 = getelementptr inbounds float, float* %5, i64 %696
  %698 = bitcast float* %697 to <8 x float>*
  %699 = load <8 x float>, <8 x float>* %698, align 1, !tbaa !12
  %700 = add nuw nsw i64 %651, 16
  %701 = getelementptr inbounds float, float* %5, i64 %700
  %702 = bitcast float* %701 to <8 x float>*
  %703 = load <8 x float>, <8 x float>* %702, align 1, !tbaa !12
  %704 = add nuw nsw i64 %651, 24
  %705 = getelementptr inbounds float, float* %5, i64 %704
  %706 = bitcast float* %705 to <8 x float>*
  %707 = load <8 x float>, <8 x float>* %706, align 1, !tbaa !12
  %708 = add nuw nsw i64 %651, 32
  %709 = getelementptr inbounds float, float* %5, i64 %708
  %710 = bitcast float* %709 to <8 x float>*
  %711 = load <8 x float>, <8 x float>* %710, align 1, !tbaa !12
  %712 = add nuw nsw i64 %651, 40
  %713 = getelementptr inbounds float, float* %5, i64 %712
  %714 = bitcast float* %713 to <8 x float>*
  %715 = load <8 x float>, <8 x float>* %714, align 1, !tbaa !12
  %716 = add nuw nsw i64 %651, 48
  %717 = getelementptr inbounds float, float* %5, i64 %716
  %718 = bitcast float* %717 to <8 x float>*
  %719 = load <8 x float>, <8 x float>* %718, align 1, !tbaa !12
  %720 = add nuw nsw i64 %651, 56
  %721 = getelementptr inbounds float, float* %5, i64 %720
  %722 = bitcast float* %721 to <8 x float>*
  %723 = load <8 x float>, <8 x float>* %722, align 1, !tbaa !12
  %724 = add nuw nsw i64 %651, 64
  %725 = getelementptr inbounds float, float* %5, i64 %724
  %726 = bitcast float* %725 to <8 x float>*
  %727 = load <8 x float>, <8 x float>* %726, align 1, !tbaa !12
  %728 = add nuw nsw i64 %651, 72
  %729 = getelementptr inbounds float, float* %5, i64 %728
  %730 = bitcast float* %729 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = trunc i64 %651 to i32
  %733 = add nsw i32 %509, %732
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds float, float* %3, i64 %734
  %736 = bitcast float* %735 to <8 x float>*
  %737 = load <8 x float>, <8 x float>* %736, align 1, !tbaa !12
  %738 = add nsw i32 %733, 8
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds float, float* %3, i64 %739
  %741 = bitcast float* %740 to <8 x float>*
  %742 = load <8 x float>, <8 x float>* %741, align 1, !tbaa !12
  %743 = add nsw i32 %733, 16
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds float, float* %3, i64 %744
  %746 = bitcast float* %745 to <8 x float>*
  %747 = load <8 x float>, <8 x float>* %746, align 1, !tbaa !12
  %748 = add nsw i32 %733, 24
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds float, float* %3, i64 %749
  %751 = bitcast float* %750 to <8 x float>*
  %752 = load <8 x float>, <8 x float>* %751, align 1, !tbaa !12
  %753 = add nsw i32 %733, 32
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds float, float* %3, i64 %754
  %756 = bitcast float* %755 to <8 x float>*
  %757 = load <8 x float>, <8 x float>* %756, align 1, !tbaa !12
  %758 = add nsw i32 %733, 40
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds float, float* %3, i64 %759
  %761 = bitcast float* %760 to <8 x float>*
  %762 = load <8 x float>, <8 x float>* %761, align 1, !tbaa !12
  %763 = add nsw i32 %733, 48
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds float, float* %3, i64 %764
  %766 = bitcast float* %765 to <8 x float>*
  %767 = load <8 x float>, <8 x float>* %766, align 1, !tbaa !12
  %768 = add nsw i32 %733, 56
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds float, float* %3, i64 %769
  %771 = bitcast float* %770 to <8 x float>*
  %772 = load <8 x float>, <8 x float>* %771, align 1, !tbaa !12
  %773 = add nsw i32 %733, 64
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds float, float* %3, i64 %774
  %776 = bitcast float* %775 to <8 x float>*
  %777 = load <8 x float>, <8 x float>* %776, align 1, !tbaa !12
  %778 = add nsw i32 %733, 72
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds float, float* %3, i64 %779
  %781 = bitcast float* %780 to <8 x float>*
  %782 = load <8 x float>, <8 x float>* %781, align 1, !tbaa !12
  %783 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %737, <8 x float> %45, <8 x float> %695) #10
  %784 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %742, <8 x float> %45, <8 x float> %699) #10
  %785 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %747, <8 x float> %45, <8 x float> %703) #10
  %786 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %752, <8 x float> %45, <8 x float> %707) #10
  %787 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %757, <8 x float> %45, <8 x float> %711) #10
  %788 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %762, <8 x float> %45, <8 x float> %715) #10
  %789 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %767, <8 x float> %45, <8 x float> %719) #10
  %790 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %772, <8 x float> %45, <8 x float> %723) #10
  %791 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %777, <8 x float> %45, <8 x float> %727) #10
  %792 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %782, <8 x float> %45, <8 x float> %731) #10
  store <8 x float> %783, <8 x float>* %694, align 1, !tbaa !12
  store <8 x float> %784, <8 x float>* %698, align 1, !tbaa !12
  store <8 x float> %785, <8 x float>* %702, align 1, !tbaa !12
  store <8 x float> %786, <8 x float>* %706, align 1, !tbaa !12
  store <8 x float> %787, <8 x float>* %710, align 1, !tbaa !12
  store <8 x float> %788, <8 x float>* %714, align 1, !tbaa !12
  store <8 x float> %789, <8 x float>* %718, align 1, !tbaa !12
  store <8 x float> %790, <8 x float>* %722, align 1, !tbaa !12
  store <8 x float> %791, <8 x float>* %726, align 1, !tbaa !12
  store <8 x float> %792, <8 x float>* %730, align 1, !tbaa !12
  %793 = add nuw nsw i64 %651, 80
  %794 = icmp ult i64 %793, %507
  br i1 %794, label %650, label %644

795:                                              ; preds = %801
  br i1 %505, label %796, label %1075

796:                                              ; preds = %795
  %797 = trunc i64 %51 to i32
  %798 = mul nsw i32 %504, %797
  %799 = sext i32 %798 to i64
  %800 = zext i32 %504 to i64
  br label %941

801:                                              ; preds = %645, %801
  %802 = phi i64 [ 0, %645 ], [ %933, %801 ]
  %803 = getelementptr inbounds float, float* %5, i64 %802
  %804 = getelementptr inbounds float, float* %803, i64 8
  %805 = bitcast float* %804 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %805, i32 0, i32 1, i32 1)
  %806 = getelementptr inbounds float, float* %3, i64 %802
  %807 = getelementptr inbounds float, float* %806, i64 8
  %808 = bitcast float* %807 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %808, i32 0, i32 1, i32 1)
  %809 = getelementptr inbounds float, float* %803, i64 16
  %810 = bitcast float* %809 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %810, i32 0, i32 1, i32 1)
  %811 = getelementptr inbounds float, float* %806, i64 16
  %812 = bitcast float* %811 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %812, i32 0, i32 1, i32 1)
  %813 = getelementptr inbounds float, float* %803, i64 24
  %814 = bitcast float* %813 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %814, i32 0, i32 1, i32 1)
  %815 = getelementptr inbounds float, float* %806, i64 24
  %816 = bitcast float* %815 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %816, i32 0, i32 1, i32 1)
  %817 = getelementptr inbounds float, float* %803, i64 32
  %818 = bitcast float* %817 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %818, i32 0, i32 1, i32 1)
  %819 = getelementptr inbounds float, float* %806, i64 32
  %820 = bitcast float* %819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %820, i32 0, i32 1, i32 1)
  %821 = getelementptr inbounds float, float* %803, i64 40
  %822 = bitcast float* %821 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %822, i32 0, i32 1, i32 1)
  %823 = getelementptr inbounds float, float* %806, i64 40
  %824 = bitcast float* %823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %824, i32 0, i32 1, i32 1)
  %825 = getelementptr inbounds float, float* %803, i64 48
  %826 = bitcast float* %825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %826, i32 0, i32 1, i32 1)
  %827 = getelementptr inbounds float, float* %806, i64 48
  %828 = bitcast float* %827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %828, i32 0, i32 1, i32 1)
  %829 = getelementptr inbounds float, float* %803, i64 56
  %830 = bitcast float* %829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %830, i32 0, i32 1, i32 1)
  %831 = getelementptr inbounds float, float* %806, i64 56
  %832 = bitcast float* %831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %832, i32 0, i32 1, i32 1)
  %833 = getelementptr inbounds float, float* %803, i64 64
  %834 = bitcast float* %833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %834, i32 0, i32 1, i32 1)
  %835 = getelementptr inbounds float, float* %806, i64 64
  %836 = bitcast float* %835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %836, i32 0, i32 1, i32 1)
  %837 = getelementptr inbounds float, float* %803, i64 72
  %838 = bitcast float* %837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %838, i32 0, i32 1, i32 1)
  %839 = getelementptr inbounds float, float* %806, i64 72
  %840 = bitcast float* %839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %840, i32 0, i32 1, i32 1)
  %841 = getelementptr inbounds float, float* %803, i64 80
  %842 = bitcast float* %841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %842, i32 0, i32 1, i32 1)
  %843 = getelementptr inbounds float, float* %806, i64 80
  %844 = bitcast float* %843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %844, i32 0, i32 1, i32 1)
  %845 = bitcast float* %803 to <8 x float>*
  %846 = load <8 x float>, <8 x float>* %845, align 1, !tbaa !12
  %847 = or i64 %802, 8
  %848 = getelementptr inbounds float, float* %5, i64 %847
  %849 = bitcast float* %848 to <8 x float>*
  %850 = load <8 x float>, <8 x float>* %849, align 1, !tbaa !12
  %851 = add nuw nsw i64 %802, 16
  %852 = getelementptr inbounds float, float* %5, i64 %851
  %853 = bitcast float* %852 to <8 x float>*
  %854 = load <8 x float>, <8 x float>* %853, align 1, !tbaa !12
  %855 = add nuw nsw i64 %802, 24
  %856 = getelementptr inbounds float, float* %5, i64 %855
  %857 = bitcast float* %856 to <8 x float>*
  %858 = load <8 x float>, <8 x float>* %857, align 1, !tbaa !12
  %859 = add nuw nsw i64 %802, 32
  %860 = getelementptr inbounds float, float* %5, i64 %859
  %861 = bitcast float* %860 to <8 x float>*
  %862 = load <8 x float>, <8 x float>* %861, align 1, !tbaa !12
  %863 = add nuw nsw i64 %802, 40
  %864 = getelementptr inbounds float, float* %5, i64 %863
  %865 = bitcast float* %864 to <8 x float>*
  %866 = load <8 x float>, <8 x float>* %865, align 1, !tbaa !12
  %867 = add nuw nsw i64 %802, 48
  %868 = getelementptr inbounds float, float* %5, i64 %867
  %869 = bitcast float* %868 to <8 x float>*
  %870 = load <8 x float>, <8 x float>* %869, align 1, !tbaa !12
  %871 = add nuw nsw i64 %802, 56
  %872 = getelementptr inbounds float, float* %5, i64 %871
  %873 = bitcast float* %872 to <8 x float>*
  %874 = load <8 x float>, <8 x float>* %873, align 1, !tbaa !12
  %875 = add nuw nsw i64 %802, 64
  %876 = getelementptr inbounds float, float* %5, i64 %875
  %877 = bitcast float* %876 to <8 x float>*
  %878 = load <8 x float>, <8 x float>* %877, align 1, !tbaa !12
  %879 = add nuw nsw i64 %802, 72
  %880 = getelementptr inbounds float, float* %5, i64 %879
  %881 = bitcast float* %880 to <8 x float>*
  %882 = load <8 x float>, <8 x float>* %881, align 1, !tbaa !12
  %883 = add nsw i64 %802, %648
  %884 = getelementptr inbounds float, float* %3, i64 %883
  %885 = bitcast float* %884 to <8 x float>*
  %886 = load <8 x float>, <8 x float>* %885, align 1, !tbaa !12
  %887 = add nsw i64 %883, 8
  %888 = getelementptr inbounds float, float* %3, i64 %887
  %889 = bitcast float* %888 to <8 x float>*
  %890 = load <8 x float>, <8 x float>* %889, align 1, !tbaa !12
  %891 = add nsw i64 %883, 16
  %892 = getelementptr inbounds float, float* %3, i64 %891
  %893 = bitcast float* %892 to <8 x float>*
  %894 = load <8 x float>, <8 x float>* %893, align 1, !tbaa !12
  %895 = add nsw i64 %883, 24
  %896 = getelementptr inbounds float, float* %3, i64 %895
  %897 = bitcast float* %896 to <8 x float>*
  %898 = load <8 x float>, <8 x float>* %897, align 1, !tbaa !12
  %899 = add nsw i64 %883, 32
  %900 = getelementptr inbounds float, float* %3, i64 %899
  %901 = bitcast float* %900 to <8 x float>*
  %902 = load <8 x float>, <8 x float>* %901, align 1, !tbaa !12
  %903 = add nsw i64 %883, 40
  %904 = getelementptr inbounds float, float* %3, i64 %903
  %905 = bitcast float* %904 to <8 x float>*
  %906 = load <8 x float>, <8 x float>* %905, align 1, !tbaa !12
  %907 = add nsw i64 %883, 48
  %908 = getelementptr inbounds float, float* %3, i64 %907
  %909 = bitcast float* %908 to <8 x float>*
  %910 = load <8 x float>, <8 x float>* %909, align 1, !tbaa !12
  %911 = add nsw i64 %883, 56
  %912 = getelementptr inbounds float, float* %3, i64 %911
  %913 = bitcast float* %912 to <8 x float>*
  %914 = load <8 x float>, <8 x float>* %913, align 1, !tbaa !12
  %915 = add nsw i64 %883, 64
  %916 = getelementptr inbounds float, float* %3, i64 %915
  %917 = bitcast float* %916 to <8 x float>*
  %918 = load <8 x float>, <8 x float>* %917, align 1, !tbaa !12
  %919 = add nsw i64 %883, 72
  %920 = getelementptr inbounds float, float* %3, i64 %919
  %921 = bitcast float* %920 to <8 x float>*
  %922 = load <8 x float>, <8 x float>* %921, align 1, !tbaa !12
  %923 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %886, <8 x float> %50, <8 x float> %846) #10
  %924 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %890, <8 x float> %50, <8 x float> %850) #10
  %925 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %894, <8 x float> %50, <8 x float> %854) #10
  %926 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %898, <8 x float> %50, <8 x float> %858) #10
  %927 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %902, <8 x float> %50, <8 x float> %862) #10
  %928 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %906, <8 x float> %50, <8 x float> %866) #10
  %929 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %910, <8 x float> %50, <8 x float> %870) #10
  %930 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %914, <8 x float> %50, <8 x float> %874) #10
  %931 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %918, <8 x float> %50, <8 x float> %878) #10
  %932 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %922, <8 x float> %50, <8 x float> %882) #10
  store <8 x float> %923, <8 x float>* %845, align 1, !tbaa !12
  store <8 x float> %924, <8 x float>* %849, align 1, !tbaa !12
  store <8 x float> %925, <8 x float>* %853, align 1, !tbaa !12
  store <8 x float> %926, <8 x float>* %857, align 1, !tbaa !12
  store <8 x float> %927, <8 x float>* %861, align 1, !tbaa !12
  store <8 x float> %928, <8 x float>* %865, align 1, !tbaa !12
  store <8 x float> %929, <8 x float>* %869, align 1, !tbaa !12
  store <8 x float> %930, <8 x float>* %873, align 1, !tbaa !12
  store <8 x float> %931, <8 x float>* %877, align 1, !tbaa !12
  store <8 x float> %932, <8 x float>* %881, align 1, !tbaa !12
  %933 = add nuw nsw i64 %802, 80
  %934 = icmp ult i64 %933, %649
  br i1 %934, label %801, label %795

935:                                              ; preds = %941
  br i1 %505, label %936, label %1075

936:                                              ; preds = %935
  %937 = trunc i64 %56 to i32
  %938 = mul nsw i32 %504, %937
  %939 = sext i32 %938 to i64
  %940 = zext i32 %504 to i64
  br label %1082

941:                                              ; preds = %796, %941
  %942 = phi i64 [ 0, %796 ], [ %1073, %941 ]
  %943 = getelementptr inbounds float, float* %5, i64 %942
  %944 = getelementptr inbounds float, float* %943, i64 8
  %945 = bitcast float* %944 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %945, i32 0, i32 1, i32 1)
  %946 = getelementptr inbounds float, float* %3, i64 %942
  %947 = getelementptr inbounds float, float* %946, i64 8
  %948 = bitcast float* %947 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %948, i32 0, i32 1, i32 1)
  %949 = getelementptr inbounds float, float* %943, i64 16
  %950 = bitcast float* %949 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %950, i32 0, i32 1, i32 1)
  %951 = getelementptr inbounds float, float* %946, i64 16
  %952 = bitcast float* %951 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %952, i32 0, i32 1, i32 1)
  %953 = getelementptr inbounds float, float* %943, i64 24
  %954 = bitcast float* %953 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %954, i32 0, i32 1, i32 1)
  %955 = getelementptr inbounds float, float* %946, i64 24
  %956 = bitcast float* %955 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %956, i32 0, i32 1, i32 1)
  %957 = getelementptr inbounds float, float* %943, i64 32
  %958 = bitcast float* %957 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %958, i32 0, i32 1, i32 1)
  %959 = getelementptr inbounds float, float* %946, i64 32
  %960 = bitcast float* %959 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %960, i32 0, i32 1, i32 1)
  %961 = getelementptr inbounds float, float* %943, i64 40
  %962 = bitcast float* %961 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %962, i32 0, i32 1, i32 1)
  %963 = getelementptr inbounds float, float* %946, i64 40
  %964 = bitcast float* %963 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %964, i32 0, i32 1, i32 1)
  %965 = getelementptr inbounds float, float* %943, i64 48
  %966 = bitcast float* %965 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %966, i32 0, i32 1, i32 1)
  %967 = getelementptr inbounds float, float* %946, i64 48
  %968 = bitcast float* %967 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %968, i32 0, i32 1, i32 1)
  %969 = getelementptr inbounds float, float* %943, i64 56
  %970 = bitcast float* %969 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %970, i32 0, i32 1, i32 1)
  %971 = getelementptr inbounds float, float* %946, i64 56
  %972 = bitcast float* %971 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %972, i32 0, i32 1, i32 1)
  %973 = getelementptr inbounds float, float* %943, i64 64
  %974 = bitcast float* %973 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %974, i32 0, i32 1, i32 1)
  %975 = getelementptr inbounds float, float* %946, i64 64
  %976 = bitcast float* %975 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %976, i32 0, i32 1, i32 1)
  %977 = getelementptr inbounds float, float* %943, i64 72
  %978 = bitcast float* %977 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %978, i32 0, i32 1, i32 1)
  %979 = getelementptr inbounds float, float* %946, i64 72
  %980 = bitcast float* %979 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %980, i32 0, i32 1, i32 1)
  %981 = getelementptr inbounds float, float* %943, i64 80
  %982 = bitcast float* %981 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %982, i32 0, i32 1, i32 1)
  %983 = getelementptr inbounds float, float* %946, i64 80
  %984 = bitcast float* %983 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %984, i32 0, i32 1, i32 1)
  %985 = bitcast float* %943 to <8 x float>*
  %986 = load <8 x float>, <8 x float>* %985, align 1, !tbaa !12
  %987 = or i64 %942, 8
  %988 = getelementptr inbounds float, float* %5, i64 %987
  %989 = bitcast float* %988 to <8 x float>*
  %990 = load <8 x float>, <8 x float>* %989, align 1, !tbaa !12
  %991 = add nuw nsw i64 %942, 16
  %992 = getelementptr inbounds float, float* %5, i64 %991
  %993 = bitcast float* %992 to <8 x float>*
  %994 = load <8 x float>, <8 x float>* %993, align 1, !tbaa !12
  %995 = add nuw nsw i64 %942, 24
  %996 = getelementptr inbounds float, float* %5, i64 %995
  %997 = bitcast float* %996 to <8 x float>*
  %998 = load <8 x float>, <8 x float>* %997, align 1, !tbaa !12
  %999 = add nuw nsw i64 %942, 32
  %1000 = getelementptr inbounds float, float* %5, i64 %999
  %1001 = bitcast float* %1000 to <8 x float>*
  %1002 = load <8 x float>, <8 x float>* %1001, align 1, !tbaa !12
  %1003 = add nuw nsw i64 %942, 40
  %1004 = getelementptr inbounds float, float* %5, i64 %1003
  %1005 = bitcast float* %1004 to <8 x float>*
  %1006 = load <8 x float>, <8 x float>* %1005, align 1, !tbaa !12
  %1007 = add nuw nsw i64 %942, 48
  %1008 = getelementptr inbounds float, float* %5, i64 %1007
  %1009 = bitcast float* %1008 to <8 x float>*
  %1010 = load <8 x float>, <8 x float>* %1009, align 1, !tbaa !12
  %1011 = add nuw nsw i64 %942, 56
  %1012 = getelementptr inbounds float, float* %5, i64 %1011
  %1013 = bitcast float* %1012 to <8 x float>*
  %1014 = load <8 x float>, <8 x float>* %1013, align 1, !tbaa !12
  %1015 = add nuw nsw i64 %942, 64
  %1016 = getelementptr inbounds float, float* %5, i64 %1015
  %1017 = bitcast float* %1016 to <8 x float>*
  %1018 = load <8 x float>, <8 x float>* %1017, align 1, !tbaa !12
  %1019 = add nuw nsw i64 %942, 72
  %1020 = getelementptr inbounds float, float* %5, i64 %1019
  %1021 = bitcast float* %1020 to <8 x float>*
  %1022 = load <8 x float>, <8 x float>* %1021, align 1, !tbaa !12
  %1023 = add nsw i64 %942, %799
  %1024 = getelementptr inbounds float, float* %3, i64 %1023
  %1025 = bitcast float* %1024 to <8 x float>*
  %1026 = load <8 x float>, <8 x float>* %1025, align 1, !tbaa !12
  %1027 = add nsw i64 %1023, 8
  %1028 = getelementptr inbounds float, float* %3, i64 %1027
  %1029 = bitcast float* %1028 to <8 x float>*
  %1030 = load <8 x float>, <8 x float>* %1029, align 1, !tbaa !12
  %1031 = add nsw i64 %1023, 16
  %1032 = getelementptr inbounds float, float* %3, i64 %1031
  %1033 = bitcast float* %1032 to <8 x float>*
  %1034 = load <8 x float>, <8 x float>* %1033, align 1, !tbaa !12
  %1035 = add nsw i64 %1023, 24
  %1036 = getelementptr inbounds float, float* %3, i64 %1035
  %1037 = bitcast float* %1036 to <8 x float>*
  %1038 = load <8 x float>, <8 x float>* %1037, align 1, !tbaa !12
  %1039 = add nsw i64 %1023, 32
  %1040 = getelementptr inbounds float, float* %3, i64 %1039
  %1041 = bitcast float* %1040 to <8 x float>*
  %1042 = load <8 x float>, <8 x float>* %1041, align 1, !tbaa !12
  %1043 = add nsw i64 %1023, 40
  %1044 = getelementptr inbounds float, float* %3, i64 %1043
  %1045 = bitcast float* %1044 to <8 x float>*
  %1046 = load <8 x float>, <8 x float>* %1045, align 1, !tbaa !12
  %1047 = add nsw i64 %1023, 48
  %1048 = getelementptr inbounds float, float* %3, i64 %1047
  %1049 = bitcast float* %1048 to <8 x float>*
  %1050 = load <8 x float>, <8 x float>* %1049, align 1, !tbaa !12
  %1051 = add nsw i64 %1023, 56
  %1052 = getelementptr inbounds float, float* %3, i64 %1051
  %1053 = bitcast float* %1052 to <8 x float>*
  %1054 = load <8 x float>, <8 x float>* %1053, align 1, !tbaa !12
  %1055 = add nsw i64 %1023, 64
  %1056 = getelementptr inbounds float, float* %3, i64 %1055
  %1057 = bitcast float* %1056 to <8 x float>*
  %1058 = load <8 x float>, <8 x float>* %1057, align 1, !tbaa !12
  %1059 = add nsw i64 %1023, 72
  %1060 = getelementptr inbounds float, float* %3, i64 %1059
  %1061 = bitcast float* %1060 to <8 x float>*
  %1062 = load <8 x float>, <8 x float>* %1061, align 1, !tbaa !12
  %1063 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1026, <8 x float> %55, <8 x float> %986) #10
  %1064 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1030, <8 x float> %55, <8 x float> %990) #10
  %1065 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1034, <8 x float> %55, <8 x float> %994) #10
  %1066 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1038, <8 x float> %55, <8 x float> %998) #10
  %1067 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1042, <8 x float> %55, <8 x float> %1002) #10
  %1068 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1046, <8 x float> %55, <8 x float> %1006) #10
  %1069 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1050, <8 x float> %55, <8 x float> %1010) #10
  %1070 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1054, <8 x float> %55, <8 x float> %1014) #10
  %1071 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1058, <8 x float> %55, <8 x float> %1018) #10
  %1072 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1062, <8 x float> %55, <8 x float> %1022) #10
  store <8 x float> %1063, <8 x float>* %985, align 1, !tbaa !12
  store <8 x float> %1064, <8 x float>* %989, align 1, !tbaa !12
  store <8 x float> %1065, <8 x float>* %993, align 1, !tbaa !12
  store <8 x float> %1066, <8 x float>* %997, align 1, !tbaa !12
  store <8 x float> %1067, <8 x float>* %1001, align 1, !tbaa !12
  store <8 x float> %1068, <8 x float>* %1005, align 1, !tbaa !12
  store <8 x float> %1069, <8 x float>* %1009, align 1, !tbaa !12
  store <8 x float> %1070, <8 x float>* %1013, align 1, !tbaa !12
  store <8 x float> %1071, <8 x float>* %1017, align 1, !tbaa !12
  store <8 x float> %1072, <8 x float>* %1021, align 1, !tbaa !12
  %1073 = add nuw nsw i64 %942, 80
  %1074 = icmp ult i64 %1073, %800
  br i1 %1074, label %941, label %935

1075:                                             ; preds = %1082, %644, %795, %935
  %1076 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1077 = icmp sgt i32 %1076, 0
  br i1 %1077, label %1078, label %1216

1078:                                             ; preds = %1075
  %1079 = zext i32 %1076 to i64
  %1080 = trunc i64 %61 to i32
  %1081 = mul nsw i32 %1076, %1080
  br label %1221

1082:                                             ; preds = %936, %1082
  %1083 = phi i64 [ 0, %936 ], [ %1214, %1082 ]
  %1084 = getelementptr inbounds float, float* %5, i64 %1083
  %1085 = getelementptr inbounds float, float* %1084, i64 8
  %1086 = bitcast float* %1085 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1086, i32 0, i32 1, i32 1)
  %1087 = getelementptr inbounds float, float* %3, i64 %1083
  %1088 = getelementptr inbounds float, float* %1087, i64 8
  %1089 = bitcast float* %1088 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1089, i32 0, i32 1, i32 1)
  %1090 = getelementptr inbounds float, float* %1084, i64 16
  %1091 = bitcast float* %1090 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1091, i32 0, i32 1, i32 1)
  %1092 = getelementptr inbounds float, float* %1087, i64 16
  %1093 = bitcast float* %1092 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1093, i32 0, i32 1, i32 1)
  %1094 = getelementptr inbounds float, float* %1084, i64 24
  %1095 = bitcast float* %1094 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1095, i32 0, i32 1, i32 1)
  %1096 = getelementptr inbounds float, float* %1087, i64 24
  %1097 = bitcast float* %1096 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1097, i32 0, i32 1, i32 1)
  %1098 = getelementptr inbounds float, float* %1084, i64 32
  %1099 = bitcast float* %1098 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1099, i32 0, i32 1, i32 1)
  %1100 = getelementptr inbounds float, float* %1087, i64 32
  %1101 = bitcast float* %1100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1101, i32 0, i32 1, i32 1)
  %1102 = getelementptr inbounds float, float* %1084, i64 40
  %1103 = bitcast float* %1102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1103, i32 0, i32 1, i32 1)
  %1104 = getelementptr inbounds float, float* %1087, i64 40
  %1105 = bitcast float* %1104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1105, i32 0, i32 1, i32 1)
  %1106 = getelementptr inbounds float, float* %1084, i64 48
  %1107 = bitcast float* %1106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1107, i32 0, i32 1, i32 1)
  %1108 = getelementptr inbounds float, float* %1087, i64 48
  %1109 = bitcast float* %1108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1109, i32 0, i32 1, i32 1)
  %1110 = getelementptr inbounds float, float* %1084, i64 56
  %1111 = bitcast float* %1110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1111, i32 0, i32 1, i32 1)
  %1112 = getelementptr inbounds float, float* %1087, i64 56
  %1113 = bitcast float* %1112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1113, i32 0, i32 1, i32 1)
  %1114 = getelementptr inbounds float, float* %1084, i64 64
  %1115 = bitcast float* %1114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1115, i32 0, i32 1, i32 1)
  %1116 = getelementptr inbounds float, float* %1087, i64 64
  %1117 = bitcast float* %1116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1117, i32 0, i32 1, i32 1)
  %1118 = getelementptr inbounds float, float* %1084, i64 72
  %1119 = bitcast float* %1118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1119, i32 0, i32 1, i32 1)
  %1120 = getelementptr inbounds float, float* %1087, i64 72
  %1121 = bitcast float* %1120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1121, i32 0, i32 1, i32 1)
  %1122 = getelementptr inbounds float, float* %1084, i64 80
  %1123 = bitcast float* %1122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1123, i32 0, i32 1, i32 1)
  %1124 = getelementptr inbounds float, float* %1087, i64 80
  %1125 = bitcast float* %1124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1125, i32 0, i32 1, i32 1)
  %1126 = bitcast float* %1084 to <8 x float>*
  %1127 = load <8 x float>, <8 x float>* %1126, align 1, !tbaa !12
  %1128 = or i64 %1083, 8
  %1129 = getelementptr inbounds float, float* %5, i64 %1128
  %1130 = bitcast float* %1129 to <8 x float>*
  %1131 = load <8 x float>, <8 x float>* %1130, align 1, !tbaa !12
  %1132 = add nuw nsw i64 %1083, 16
  %1133 = getelementptr inbounds float, float* %5, i64 %1132
  %1134 = bitcast float* %1133 to <8 x float>*
  %1135 = load <8 x float>, <8 x float>* %1134, align 1, !tbaa !12
  %1136 = add nuw nsw i64 %1083, 24
  %1137 = getelementptr inbounds float, float* %5, i64 %1136
  %1138 = bitcast float* %1137 to <8 x float>*
  %1139 = load <8 x float>, <8 x float>* %1138, align 1, !tbaa !12
  %1140 = add nuw nsw i64 %1083, 32
  %1141 = getelementptr inbounds float, float* %5, i64 %1140
  %1142 = bitcast float* %1141 to <8 x float>*
  %1143 = load <8 x float>, <8 x float>* %1142, align 1, !tbaa !12
  %1144 = add nuw nsw i64 %1083, 40
  %1145 = getelementptr inbounds float, float* %5, i64 %1144
  %1146 = bitcast float* %1145 to <8 x float>*
  %1147 = load <8 x float>, <8 x float>* %1146, align 1, !tbaa !12
  %1148 = add nuw nsw i64 %1083, 48
  %1149 = getelementptr inbounds float, float* %5, i64 %1148
  %1150 = bitcast float* %1149 to <8 x float>*
  %1151 = load <8 x float>, <8 x float>* %1150, align 1, !tbaa !12
  %1152 = add nuw nsw i64 %1083, 56
  %1153 = getelementptr inbounds float, float* %5, i64 %1152
  %1154 = bitcast float* %1153 to <8 x float>*
  %1155 = load <8 x float>, <8 x float>* %1154, align 1, !tbaa !12
  %1156 = add nuw nsw i64 %1083, 64
  %1157 = getelementptr inbounds float, float* %5, i64 %1156
  %1158 = bitcast float* %1157 to <8 x float>*
  %1159 = load <8 x float>, <8 x float>* %1158, align 1, !tbaa !12
  %1160 = add nuw nsw i64 %1083, 72
  %1161 = getelementptr inbounds float, float* %5, i64 %1160
  %1162 = bitcast float* %1161 to <8 x float>*
  %1163 = load <8 x float>, <8 x float>* %1162, align 1, !tbaa !12
  %1164 = add nsw i64 %1083, %939
  %1165 = getelementptr inbounds float, float* %3, i64 %1164
  %1166 = bitcast float* %1165 to <8 x float>*
  %1167 = load <8 x float>, <8 x float>* %1166, align 1, !tbaa !12
  %1168 = add nsw i64 %1164, 8
  %1169 = getelementptr inbounds float, float* %3, i64 %1168
  %1170 = bitcast float* %1169 to <8 x float>*
  %1171 = load <8 x float>, <8 x float>* %1170, align 1, !tbaa !12
  %1172 = add nsw i64 %1164, 16
  %1173 = getelementptr inbounds float, float* %3, i64 %1172
  %1174 = bitcast float* %1173 to <8 x float>*
  %1175 = load <8 x float>, <8 x float>* %1174, align 1, !tbaa !12
  %1176 = add nsw i64 %1164, 24
  %1177 = getelementptr inbounds float, float* %3, i64 %1176
  %1178 = bitcast float* %1177 to <8 x float>*
  %1179 = load <8 x float>, <8 x float>* %1178, align 1, !tbaa !12
  %1180 = add nsw i64 %1164, 32
  %1181 = getelementptr inbounds float, float* %3, i64 %1180
  %1182 = bitcast float* %1181 to <8 x float>*
  %1183 = load <8 x float>, <8 x float>* %1182, align 1, !tbaa !12
  %1184 = add nsw i64 %1164, 40
  %1185 = getelementptr inbounds float, float* %3, i64 %1184
  %1186 = bitcast float* %1185 to <8 x float>*
  %1187 = load <8 x float>, <8 x float>* %1186, align 1, !tbaa !12
  %1188 = add nsw i64 %1164, 48
  %1189 = getelementptr inbounds float, float* %3, i64 %1188
  %1190 = bitcast float* %1189 to <8 x float>*
  %1191 = load <8 x float>, <8 x float>* %1190, align 1, !tbaa !12
  %1192 = add nsw i64 %1164, 56
  %1193 = getelementptr inbounds float, float* %3, i64 %1192
  %1194 = bitcast float* %1193 to <8 x float>*
  %1195 = load <8 x float>, <8 x float>* %1194, align 1, !tbaa !12
  %1196 = add nsw i64 %1164, 64
  %1197 = getelementptr inbounds float, float* %3, i64 %1196
  %1198 = bitcast float* %1197 to <8 x float>*
  %1199 = load <8 x float>, <8 x float>* %1198, align 1, !tbaa !12
  %1200 = add nsw i64 %1164, 72
  %1201 = getelementptr inbounds float, float* %3, i64 %1200
  %1202 = bitcast float* %1201 to <8 x float>*
  %1203 = load <8 x float>, <8 x float>* %1202, align 1, !tbaa !12
  %1204 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1167, <8 x float> %60, <8 x float> %1127) #10
  %1205 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1171, <8 x float> %60, <8 x float> %1131) #10
  %1206 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1175, <8 x float> %60, <8 x float> %1135) #10
  %1207 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1179, <8 x float> %60, <8 x float> %1139) #10
  %1208 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1183, <8 x float> %60, <8 x float> %1143) #10
  %1209 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1187, <8 x float> %60, <8 x float> %1147) #10
  %1210 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1191, <8 x float> %60, <8 x float> %1151) #10
  %1211 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1195, <8 x float> %60, <8 x float> %1155) #10
  %1212 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1199, <8 x float> %60, <8 x float> %1159) #10
  %1213 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1203, <8 x float> %60, <8 x float> %1163) #10
  store <8 x float> %1204, <8 x float>* %1126, align 1, !tbaa !12
  store <8 x float> %1205, <8 x float>* %1130, align 1, !tbaa !12
  store <8 x float> %1206, <8 x float>* %1134, align 1, !tbaa !12
  store <8 x float> %1207, <8 x float>* %1138, align 1, !tbaa !12
  store <8 x float> %1208, <8 x float>* %1142, align 1, !tbaa !12
  store <8 x float> %1209, <8 x float>* %1146, align 1, !tbaa !12
  store <8 x float> %1210, <8 x float>* %1150, align 1, !tbaa !12
  store <8 x float> %1211, <8 x float>* %1154, align 1, !tbaa !12
  store <8 x float> %1212, <8 x float>* %1158, align 1, !tbaa !12
  store <8 x float> %1213, <8 x float>* %1162, align 1, !tbaa !12
  %1214 = add nuw nsw i64 %1083, 80
  %1215 = icmp ult i64 %1214, %940
  br i1 %1215, label %1082, label %1075

1216:                                             ; preds = %1221, %20, %503, %1075
  %1217 = add nuw nsw i64 %21, 9
  %1218 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1219 = sext i32 %1218 to i64
  %1220 = icmp slt i64 %1217, %1219
  br i1 %1220, label %20, label %8

1221:                                             ; preds = %1078, %1221
  %1222 = phi i64 [ 0, %1078 ], [ %1364, %1221 ]
  %1223 = getelementptr inbounds float, float* %5, i64 %1222
  %1224 = getelementptr inbounds float, float* %1223, i64 8
  %1225 = bitcast float* %1224 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1225, i32 0, i32 1, i32 1)
  %1226 = getelementptr inbounds float, float* %3, i64 %1222
  %1227 = getelementptr inbounds float, float* %1226, i64 8
  %1228 = bitcast float* %1227 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1228, i32 0, i32 1, i32 1)
  %1229 = getelementptr inbounds float, float* %1223, i64 16
  %1230 = bitcast float* %1229 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1230, i32 0, i32 1, i32 1)
  %1231 = getelementptr inbounds float, float* %1226, i64 16
  %1232 = bitcast float* %1231 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1232, i32 0, i32 1, i32 1)
  %1233 = getelementptr inbounds float, float* %1223, i64 24
  %1234 = bitcast float* %1233 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1234, i32 0, i32 1, i32 1)
  %1235 = getelementptr inbounds float, float* %1226, i64 24
  %1236 = bitcast float* %1235 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1236, i32 0, i32 1, i32 1)
  %1237 = getelementptr inbounds float, float* %1223, i64 32
  %1238 = bitcast float* %1237 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1238, i32 0, i32 1, i32 1)
  %1239 = getelementptr inbounds float, float* %1226, i64 32
  %1240 = bitcast float* %1239 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1240, i32 0, i32 1, i32 1)
  %1241 = getelementptr inbounds float, float* %1223, i64 40
  %1242 = bitcast float* %1241 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1242, i32 0, i32 1, i32 1)
  %1243 = getelementptr inbounds float, float* %1226, i64 40
  %1244 = bitcast float* %1243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1244, i32 0, i32 1, i32 1)
  %1245 = getelementptr inbounds float, float* %1223, i64 48
  %1246 = bitcast float* %1245 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1246, i32 0, i32 1, i32 1)
  %1247 = getelementptr inbounds float, float* %1226, i64 48
  %1248 = bitcast float* %1247 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1248, i32 0, i32 1, i32 1)
  %1249 = getelementptr inbounds float, float* %1223, i64 56
  %1250 = bitcast float* %1249 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1250, i32 0, i32 1, i32 1)
  %1251 = getelementptr inbounds float, float* %1226, i64 56
  %1252 = bitcast float* %1251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1252, i32 0, i32 1, i32 1)
  %1253 = getelementptr inbounds float, float* %1223, i64 64
  %1254 = bitcast float* %1253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1254, i32 0, i32 1, i32 1)
  %1255 = getelementptr inbounds float, float* %1226, i64 64
  %1256 = bitcast float* %1255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1256, i32 0, i32 1, i32 1)
  %1257 = getelementptr inbounds float, float* %1223, i64 72
  %1258 = bitcast float* %1257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1258, i32 0, i32 1, i32 1)
  %1259 = getelementptr inbounds float, float* %1226, i64 72
  %1260 = bitcast float* %1259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1260, i32 0, i32 1, i32 1)
  %1261 = getelementptr inbounds float, float* %1223, i64 80
  %1262 = bitcast float* %1261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1262, i32 0, i32 1, i32 1)
  %1263 = getelementptr inbounds float, float* %1226, i64 80
  %1264 = bitcast float* %1263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1264, i32 0, i32 1, i32 1)
  %1265 = bitcast float* %1223 to <8 x float>*
  %1266 = load <8 x float>, <8 x float>* %1265, align 1, !tbaa !12
  %1267 = or i64 %1222, 8
  %1268 = getelementptr inbounds float, float* %5, i64 %1267
  %1269 = bitcast float* %1268 to <8 x float>*
  %1270 = load <8 x float>, <8 x float>* %1269, align 1, !tbaa !12
  %1271 = add nuw nsw i64 %1222, 16
  %1272 = getelementptr inbounds float, float* %5, i64 %1271
  %1273 = bitcast float* %1272 to <8 x float>*
  %1274 = load <8 x float>, <8 x float>* %1273, align 1, !tbaa !12
  %1275 = add nuw nsw i64 %1222, 24
  %1276 = getelementptr inbounds float, float* %5, i64 %1275
  %1277 = bitcast float* %1276 to <8 x float>*
  %1278 = load <8 x float>, <8 x float>* %1277, align 1, !tbaa !12
  %1279 = add nuw nsw i64 %1222, 32
  %1280 = getelementptr inbounds float, float* %5, i64 %1279
  %1281 = bitcast float* %1280 to <8 x float>*
  %1282 = load <8 x float>, <8 x float>* %1281, align 1, !tbaa !12
  %1283 = add nuw nsw i64 %1222, 40
  %1284 = getelementptr inbounds float, float* %5, i64 %1283
  %1285 = bitcast float* %1284 to <8 x float>*
  %1286 = load <8 x float>, <8 x float>* %1285, align 1, !tbaa !12
  %1287 = add nuw nsw i64 %1222, 48
  %1288 = getelementptr inbounds float, float* %5, i64 %1287
  %1289 = bitcast float* %1288 to <8 x float>*
  %1290 = load <8 x float>, <8 x float>* %1289, align 1, !tbaa !12
  %1291 = add nuw nsw i64 %1222, 56
  %1292 = getelementptr inbounds float, float* %5, i64 %1291
  %1293 = bitcast float* %1292 to <8 x float>*
  %1294 = load <8 x float>, <8 x float>* %1293, align 1, !tbaa !12
  %1295 = add nuw nsw i64 %1222, 64
  %1296 = getelementptr inbounds float, float* %5, i64 %1295
  %1297 = bitcast float* %1296 to <8 x float>*
  %1298 = load <8 x float>, <8 x float>* %1297, align 1, !tbaa !12
  %1299 = add nuw nsw i64 %1222, 72
  %1300 = getelementptr inbounds float, float* %5, i64 %1299
  %1301 = bitcast float* %1300 to <8 x float>*
  %1302 = load <8 x float>, <8 x float>* %1301, align 1, !tbaa !12
  %1303 = trunc i64 %1222 to i32
  %1304 = add nsw i32 %1081, %1303
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds float, float* %3, i64 %1305
  %1307 = bitcast float* %1306 to <8 x float>*
  %1308 = load <8 x float>, <8 x float>* %1307, align 1, !tbaa !12
  %1309 = add nsw i32 %1304, 8
  %1310 = sext i32 %1309 to i64
  %1311 = getelementptr inbounds float, float* %3, i64 %1310
  %1312 = bitcast float* %1311 to <8 x float>*
  %1313 = load <8 x float>, <8 x float>* %1312, align 1, !tbaa !12
  %1314 = add nsw i32 %1304, 16
  %1315 = sext i32 %1314 to i64
  %1316 = getelementptr inbounds float, float* %3, i64 %1315
  %1317 = bitcast float* %1316 to <8 x float>*
  %1318 = load <8 x float>, <8 x float>* %1317, align 1, !tbaa !12
  %1319 = add nsw i32 %1304, 24
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds float, float* %3, i64 %1320
  %1322 = bitcast float* %1321 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = add nsw i32 %1304, 32
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds float, float* %3, i64 %1325
  %1327 = bitcast float* %1326 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = add nsw i32 %1304, 40
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds float, float* %3, i64 %1330
  %1332 = bitcast float* %1331 to <8 x float>*
  %1333 = load <8 x float>, <8 x float>* %1332, align 1, !tbaa !12
  %1334 = add nsw i32 %1304, 48
  %1335 = sext i32 %1334 to i64
  %1336 = getelementptr inbounds float, float* %3, i64 %1335
  %1337 = bitcast float* %1336 to <8 x float>*
  %1338 = load <8 x float>, <8 x float>* %1337, align 1, !tbaa !12
  %1339 = add nsw i32 %1304, 56
  %1340 = sext i32 %1339 to i64
  %1341 = getelementptr inbounds float, float* %3, i64 %1340
  %1342 = bitcast float* %1341 to <8 x float>*
  %1343 = load <8 x float>, <8 x float>* %1342, align 1, !tbaa !12
  %1344 = add nsw i32 %1304, 64
  %1345 = sext i32 %1344 to i64
  %1346 = getelementptr inbounds float, float* %3, i64 %1345
  %1347 = bitcast float* %1346 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = add nsw i32 %1304, 72
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds float, float* %3, i64 %1350
  %1352 = bitcast float* %1351 to <8 x float>*
  %1353 = load <8 x float>, <8 x float>* %1352, align 1, !tbaa !12
  %1354 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1308, <8 x float> %65, <8 x float> %1266) #10
  %1355 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1313, <8 x float> %65, <8 x float> %1270) #10
  %1356 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1318, <8 x float> %65, <8 x float> %1274) #10
  %1357 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1323, <8 x float> %65, <8 x float> %1278) #10
  %1358 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1328, <8 x float> %65, <8 x float> %1282) #10
  %1359 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1333, <8 x float> %65, <8 x float> %1286) #10
  %1360 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1338, <8 x float> %65, <8 x float> %1290) #10
  %1361 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1343, <8 x float> %65, <8 x float> %1294) #10
  %1362 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1348, <8 x float> %65, <8 x float> %1298) #10
  %1363 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1353, <8 x float> %65, <8 x float> %1302) #10
  store <8 x float> %1354, <8 x float>* %1265, align 1, !tbaa !12
  store <8 x float> %1355, <8 x float>* %1269, align 1, !tbaa !12
  store <8 x float> %1356, <8 x float>* %1273, align 1, !tbaa !12
  store <8 x float> %1357, <8 x float>* %1277, align 1, !tbaa !12
  store <8 x float> %1358, <8 x float>* %1281, align 1, !tbaa !12
  store <8 x float> %1359, <8 x float>* %1285, align 1, !tbaa !12
  store <8 x float> %1360, <8 x float>* %1289, align 1, !tbaa !12
  store <8 x float> %1361, <8 x float>* %1293, align 1, !tbaa !12
  store <8 x float> %1362, <8 x float>* %1297, align 1, !tbaa !12
  store <8 x float> %1363, <8 x float>* %1301, align 1, !tbaa !12
  %1364 = add nuw nsw i64 %1222, 80
  %1365 = icmp ult i64 %1364, %1079
  br i1 %1365, label %1221, label %1216
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 189
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui10_uk9.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
