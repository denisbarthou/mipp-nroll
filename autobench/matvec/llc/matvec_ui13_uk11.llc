; ModuleID = 'codes/matvec_ui13_uk11.cpp'
source_filename = "codes/matvec_ui13_uk11.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui13_uk11.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 104
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 88
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1931, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1931
  %21 = phi i64 [ %1932, %1931 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %1931

78:                                               ; preds = %20
  %79 = zext i32 %76 to i64
  %80 = trunc i64 %21 to i32
  %81 = mul nsw i32 %76, %80
  br label %88

82:                                               ; preds = %88
  br i1 %77, label %83, label %454

83:                                               ; preds = %82
  %84 = trunc i64 %26 to i32
  %85 = mul nsw i32 %76, %84
  %86 = sext i32 %85 to i64
  %87 = zext i32 %76 to i64
  br label %281

88:                                               ; preds = %78, %88
  %89 = phi i64 [ 0, %78 ], [ %273, %88 ]
  %90 = getelementptr inbounds float, float* %5, i64 %89
  %91 = getelementptr inbounds float, float* %90, i64 8
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %3, i64 %89
  %94 = getelementptr inbounds float, float* %93, i64 8
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %90, i64 16
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %93, i64 16
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %90, i64 24
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %93, i64 24
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %90, i64 32
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %93, i64 32
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %90, i64 40
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %93, i64 40
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %90, i64 48
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %93, i64 48
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %90, i64 56
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %93, i64 56
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %90, i64 64
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %93, i64 64
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %90, i64 72
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %93, i64 72
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %90, i64 80
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %93, i64 80
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %90, i64 88
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %93, i64 88
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %90, i64 96
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = getelementptr inbounds float, float* %93, i64 96
  %139 = bitcast float* %138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %139, i32 0, i32 1, i32 1)
  %140 = getelementptr inbounds float, float* %90, i64 104
  %141 = bitcast float* %140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %141, i32 0, i32 1, i32 1)
  %142 = getelementptr inbounds float, float* %93, i64 104
  %143 = bitcast float* %142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %143, i32 0, i32 1, i32 1)
  %144 = bitcast float* %90 to <8 x float>*
  %145 = load <8 x float>, <8 x float>* %144, align 1, !tbaa !12
  %146 = add nuw nsw i64 %89, 8
  %147 = getelementptr inbounds float, float* %5, i64 %146
  %148 = bitcast float* %147 to <8 x float>*
  %149 = load <8 x float>, <8 x float>* %148, align 1, !tbaa !12
  %150 = add nuw nsw i64 %89, 16
  %151 = getelementptr inbounds float, float* %5, i64 %150
  %152 = bitcast float* %151 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = add nuw nsw i64 %89, 24
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nuw nsw i64 %89, 32
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = add nuw nsw i64 %89, 40
  %163 = getelementptr inbounds float, float* %5, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = add nuw nsw i64 %89, 48
  %167 = getelementptr inbounds float, float* %5, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = add nuw nsw i64 %89, 56
  %171 = getelementptr inbounds float, float* %5, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = add nuw nsw i64 %89, 64
  %175 = getelementptr inbounds float, float* %5, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nuw nsw i64 %89, 72
  %179 = getelementptr inbounds float, float* %5, i64 %178
  %180 = bitcast float* %179 to <8 x float>*
  %181 = load <8 x float>, <8 x float>* %180, align 1, !tbaa !12
  %182 = add nuw nsw i64 %89, 80
  %183 = getelementptr inbounds float, float* %5, i64 %182
  %184 = bitcast float* %183 to <8 x float>*
  %185 = load <8 x float>, <8 x float>* %184, align 1, !tbaa !12
  %186 = add nuw nsw i64 %89, 88
  %187 = getelementptr inbounds float, float* %5, i64 %186
  %188 = bitcast float* %187 to <8 x float>*
  %189 = load <8 x float>, <8 x float>* %188, align 1, !tbaa !12
  %190 = add nuw nsw i64 %89, 96
  %191 = getelementptr inbounds float, float* %5, i64 %190
  %192 = bitcast float* %191 to <8 x float>*
  %193 = load <8 x float>, <8 x float>* %192, align 1, !tbaa !12
  %194 = trunc i64 %89 to i32
  %195 = add nsw i32 %81, %194
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds float, float* %3, i64 %196
  %198 = bitcast float* %197 to <8 x float>*
  %199 = load <8 x float>, <8 x float>* %198, align 1, !tbaa !12
  %200 = add nsw i32 %195, 8
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds float, float* %3, i64 %201
  %203 = bitcast float* %202 to <8 x float>*
  %204 = load <8 x float>, <8 x float>* %203, align 1, !tbaa !12
  %205 = add nsw i32 %195, 16
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds float, float* %3, i64 %206
  %208 = bitcast float* %207 to <8 x float>*
  %209 = load <8 x float>, <8 x float>* %208, align 1, !tbaa !12
  %210 = add nsw i32 %195, 24
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds float, float* %3, i64 %211
  %213 = bitcast float* %212 to <8 x float>*
  %214 = load <8 x float>, <8 x float>* %213, align 1, !tbaa !12
  %215 = add nsw i32 %195, 32
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds float, float* %3, i64 %216
  %218 = bitcast float* %217 to <8 x float>*
  %219 = load <8 x float>, <8 x float>* %218, align 1, !tbaa !12
  %220 = add nsw i32 %195, 40
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds float, float* %3, i64 %221
  %223 = bitcast float* %222 to <8 x float>*
  %224 = load <8 x float>, <8 x float>* %223, align 1, !tbaa !12
  %225 = add nsw i32 %195, 48
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds float, float* %3, i64 %226
  %228 = bitcast float* %227 to <8 x float>*
  %229 = load <8 x float>, <8 x float>* %228, align 1, !tbaa !12
  %230 = add nsw i32 %195, 56
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds float, float* %3, i64 %231
  %233 = bitcast float* %232 to <8 x float>*
  %234 = load <8 x float>, <8 x float>* %233, align 1, !tbaa !12
  %235 = add nsw i32 %195, 64
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds float, float* %3, i64 %236
  %238 = bitcast float* %237 to <8 x float>*
  %239 = load <8 x float>, <8 x float>* %238, align 1, !tbaa !12
  %240 = add nsw i32 %195, 72
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds float, float* %3, i64 %241
  %243 = bitcast float* %242 to <8 x float>*
  %244 = load <8 x float>, <8 x float>* %243, align 1, !tbaa !12
  %245 = add nsw i32 %195, 80
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds float, float* %3, i64 %246
  %248 = bitcast float* %247 to <8 x float>*
  %249 = load <8 x float>, <8 x float>* %248, align 1, !tbaa !12
  %250 = add nsw i32 %195, 88
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds float, float* %3, i64 %251
  %253 = bitcast float* %252 to <8 x float>*
  %254 = load <8 x float>, <8 x float>* %253, align 1, !tbaa !12
  %255 = add nsw i32 %195, 96
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds float, float* %3, i64 %256
  %258 = bitcast float* %257 to <8 x float>*
  %259 = load <8 x float>, <8 x float>* %258, align 1, !tbaa !12
  %260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %199, <8 x float> %25, <8 x float> %145) #10
  %261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %204, <8 x float> %25, <8 x float> %149) #10
  %262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %209, <8 x float> %25, <8 x float> %153) #10
  %263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %214, <8 x float> %25, <8 x float> %157) #10
  %264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %219, <8 x float> %25, <8 x float> %161) #10
  %265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %224, <8 x float> %25, <8 x float> %165) #10
  %266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %229, <8 x float> %25, <8 x float> %169) #10
  %267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %234, <8 x float> %25, <8 x float> %173) #10
  %268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %239, <8 x float> %25, <8 x float> %177) #10
  %269 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %244, <8 x float> %25, <8 x float> %181) #10
  %270 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %249, <8 x float> %25, <8 x float> %185) #10
  %271 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %254, <8 x float> %25, <8 x float> %189) #10
  %272 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %259, <8 x float> %25, <8 x float> %193) #10
  store <8 x float> %260, <8 x float>* %144, align 1, !tbaa !12
  store <8 x float> %261, <8 x float>* %148, align 1, !tbaa !12
  store <8 x float> %262, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %263, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %264, <8 x float>* %160, align 1, !tbaa !12
  store <8 x float> %265, <8 x float>* %164, align 1, !tbaa !12
  store <8 x float> %266, <8 x float>* %168, align 1, !tbaa !12
  store <8 x float> %267, <8 x float>* %172, align 1, !tbaa !12
  store <8 x float> %268, <8 x float>* %176, align 1, !tbaa !12
  store <8 x float> %269, <8 x float>* %180, align 1, !tbaa !12
  store <8 x float> %270, <8 x float>* %184, align 1, !tbaa !12
  store <8 x float> %271, <8 x float>* %188, align 1, !tbaa !12
  store <8 x float> %272, <8 x float>* %192, align 1, !tbaa !12
  %273 = add nuw nsw i64 %89, 104
  %274 = icmp ult i64 %273, %79
  br i1 %274, label %88, label %82

275:                                              ; preds = %281
  br i1 %77, label %276, label %454

276:                                              ; preds = %275
  %277 = trunc i64 %31 to i32
  %278 = mul nsw i32 %76, %277
  %279 = sext i32 %278 to i64
  %280 = zext i32 %76 to i64
  br label %461

281:                                              ; preds = %83, %281
  %282 = phi i64 [ 0, %83 ], [ %452, %281 ]
  %283 = getelementptr inbounds float, float* %5, i64 %282
  %284 = getelementptr inbounds float, float* %283, i64 8
  %285 = bitcast float* %284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %285, i32 0, i32 1, i32 1)
  %286 = getelementptr inbounds float, float* %3, i64 %282
  %287 = getelementptr inbounds float, float* %286, i64 8
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %283, i64 16
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %286, i64 16
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %283, i64 24
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %286, i64 24
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %283, i64 32
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %286, i64 32
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = getelementptr inbounds float, float* %283, i64 40
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = getelementptr inbounds float, float* %286, i64 40
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %283, i64 48
  %306 = bitcast float* %305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %306, i32 0, i32 1, i32 1)
  %307 = getelementptr inbounds float, float* %286, i64 48
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %283, i64 56
  %310 = bitcast float* %309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %310, i32 0, i32 1, i32 1)
  %311 = getelementptr inbounds float, float* %286, i64 56
  %312 = bitcast float* %311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %312, i32 0, i32 1, i32 1)
  %313 = getelementptr inbounds float, float* %283, i64 64
  %314 = bitcast float* %313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %314, i32 0, i32 1, i32 1)
  %315 = getelementptr inbounds float, float* %286, i64 64
  %316 = bitcast float* %315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %316, i32 0, i32 1, i32 1)
  %317 = getelementptr inbounds float, float* %283, i64 72
  %318 = bitcast float* %317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %318, i32 0, i32 1, i32 1)
  %319 = getelementptr inbounds float, float* %286, i64 72
  %320 = bitcast float* %319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %320, i32 0, i32 1, i32 1)
  %321 = getelementptr inbounds float, float* %283, i64 80
  %322 = bitcast float* %321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %322, i32 0, i32 1, i32 1)
  %323 = getelementptr inbounds float, float* %286, i64 80
  %324 = bitcast float* %323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %324, i32 0, i32 1, i32 1)
  %325 = getelementptr inbounds float, float* %283, i64 88
  %326 = bitcast float* %325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %326, i32 0, i32 1, i32 1)
  %327 = getelementptr inbounds float, float* %286, i64 88
  %328 = bitcast float* %327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %328, i32 0, i32 1, i32 1)
  %329 = getelementptr inbounds float, float* %283, i64 96
  %330 = bitcast float* %329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %330, i32 0, i32 1, i32 1)
  %331 = getelementptr inbounds float, float* %286, i64 96
  %332 = bitcast float* %331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %332, i32 0, i32 1, i32 1)
  %333 = getelementptr inbounds float, float* %283, i64 104
  %334 = bitcast float* %333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %334, i32 0, i32 1, i32 1)
  %335 = getelementptr inbounds float, float* %286, i64 104
  %336 = bitcast float* %335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %336, i32 0, i32 1, i32 1)
  %337 = bitcast float* %283 to <8 x float>*
  %338 = load <8 x float>, <8 x float>* %337, align 1, !tbaa !12
  %339 = add nuw nsw i64 %282, 8
  %340 = getelementptr inbounds float, float* %5, i64 %339
  %341 = bitcast float* %340 to <8 x float>*
  %342 = load <8 x float>, <8 x float>* %341, align 1, !tbaa !12
  %343 = add nuw nsw i64 %282, 16
  %344 = getelementptr inbounds float, float* %5, i64 %343
  %345 = bitcast float* %344 to <8 x float>*
  %346 = load <8 x float>, <8 x float>* %345, align 1, !tbaa !12
  %347 = add nuw nsw i64 %282, 24
  %348 = getelementptr inbounds float, float* %5, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %350 = load <8 x float>, <8 x float>* %349, align 1, !tbaa !12
  %351 = add nuw nsw i64 %282, 32
  %352 = getelementptr inbounds float, float* %5, i64 %351
  %353 = bitcast float* %352 to <8 x float>*
  %354 = load <8 x float>, <8 x float>* %353, align 1, !tbaa !12
  %355 = add nuw nsw i64 %282, 40
  %356 = getelementptr inbounds float, float* %5, i64 %355
  %357 = bitcast float* %356 to <8 x float>*
  %358 = load <8 x float>, <8 x float>* %357, align 1, !tbaa !12
  %359 = add nuw nsw i64 %282, 48
  %360 = getelementptr inbounds float, float* %5, i64 %359
  %361 = bitcast float* %360 to <8 x float>*
  %362 = load <8 x float>, <8 x float>* %361, align 1, !tbaa !12
  %363 = add nuw nsw i64 %282, 56
  %364 = getelementptr inbounds float, float* %5, i64 %363
  %365 = bitcast float* %364 to <8 x float>*
  %366 = load <8 x float>, <8 x float>* %365, align 1, !tbaa !12
  %367 = add nuw nsw i64 %282, 64
  %368 = getelementptr inbounds float, float* %5, i64 %367
  %369 = bitcast float* %368 to <8 x float>*
  %370 = load <8 x float>, <8 x float>* %369, align 1, !tbaa !12
  %371 = add nuw nsw i64 %282, 72
  %372 = getelementptr inbounds float, float* %5, i64 %371
  %373 = bitcast float* %372 to <8 x float>*
  %374 = load <8 x float>, <8 x float>* %373, align 1, !tbaa !12
  %375 = add nuw nsw i64 %282, 80
  %376 = getelementptr inbounds float, float* %5, i64 %375
  %377 = bitcast float* %376 to <8 x float>*
  %378 = load <8 x float>, <8 x float>* %377, align 1, !tbaa !12
  %379 = add nuw nsw i64 %282, 88
  %380 = getelementptr inbounds float, float* %5, i64 %379
  %381 = bitcast float* %380 to <8 x float>*
  %382 = load <8 x float>, <8 x float>* %381, align 1, !tbaa !12
  %383 = add nuw nsw i64 %282, 96
  %384 = getelementptr inbounds float, float* %5, i64 %383
  %385 = bitcast float* %384 to <8 x float>*
  %386 = load <8 x float>, <8 x float>* %385, align 1, !tbaa !12
  %387 = add nsw i64 %282, %86
  %388 = getelementptr inbounds float, float* %3, i64 %387
  %389 = bitcast float* %388 to <8 x float>*
  %390 = load <8 x float>, <8 x float>* %389, align 1, !tbaa !12
  %391 = add nsw i64 %387, 8
  %392 = getelementptr inbounds float, float* %3, i64 %391
  %393 = bitcast float* %392 to <8 x float>*
  %394 = load <8 x float>, <8 x float>* %393, align 1, !tbaa !12
  %395 = add nsw i64 %387, 16
  %396 = getelementptr inbounds float, float* %3, i64 %395
  %397 = bitcast float* %396 to <8 x float>*
  %398 = load <8 x float>, <8 x float>* %397, align 1, !tbaa !12
  %399 = add nsw i64 %387, 24
  %400 = getelementptr inbounds float, float* %3, i64 %399
  %401 = bitcast float* %400 to <8 x float>*
  %402 = load <8 x float>, <8 x float>* %401, align 1, !tbaa !12
  %403 = add nsw i64 %387, 32
  %404 = getelementptr inbounds float, float* %3, i64 %403
  %405 = bitcast float* %404 to <8 x float>*
  %406 = load <8 x float>, <8 x float>* %405, align 1, !tbaa !12
  %407 = add nsw i64 %387, 40
  %408 = getelementptr inbounds float, float* %3, i64 %407
  %409 = bitcast float* %408 to <8 x float>*
  %410 = load <8 x float>, <8 x float>* %409, align 1, !tbaa !12
  %411 = add nsw i64 %387, 48
  %412 = getelementptr inbounds float, float* %3, i64 %411
  %413 = bitcast float* %412 to <8 x float>*
  %414 = load <8 x float>, <8 x float>* %413, align 1, !tbaa !12
  %415 = add nsw i64 %387, 56
  %416 = getelementptr inbounds float, float* %3, i64 %415
  %417 = bitcast float* %416 to <8 x float>*
  %418 = load <8 x float>, <8 x float>* %417, align 1, !tbaa !12
  %419 = add nsw i64 %387, 64
  %420 = getelementptr inbounds float, float* %3, i64 %419
  %421 = bitcast float* %420 to <8 x float>*
  %422 = load <8 x float>, <8 x float>* %421, align 1, !tbaa !12
  %423 = add nsw i64 %387, 72
  %424 = getelementptr inbounds float, float* %3, i64 %423
  %425 = bitcast float* %424 to <8 x float>*
  %426 = load <8 x float>, <8 x float>* %425, align 1, !tbaa !12
  %427 = add nsw i64 %387, 80
  %428 = getelementptr inbounds float, float* %3, i64 %427
  %429 = bitcast float* %428 to <8 x float>*
  %430 = load <8 x float>, <8 x float>* %429, align 1, !tbaa !12
  %431 = add nsw i64 %387, 88
  %432 = getelementptr inbounds float, float* %3, i64 %431
  %433 = bitcast float* %432 to <8 x float>*
  %434 = load <8 x float>, <8 x float>* %433, align 1, !tbaa !12
  %435 = add nsw i64 %387, 96
  %436 = getelementptr inbounds float, float* %3, i64 %435
  %437 = bitcast float* %436 to <8 x float>*
  %438 = load <8 x float>, <8 x float>* %437, align 1, !tbaa !12
  %439 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %390, <8 x float> %30, <8 x float> %338) #10
  %440 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %394, <8 x float> %30, <8 x float> %342) #10
  %441 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %398, <8 x float> %30, <8 x float> %346) #10
  %442 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %402, <8 x float> %30, <8 x float> %350) #10
  %443 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %406, <8 x float> %30, <8 x float> %354) #10
  %444 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %410, <8 x float> %30, <8 x float> %358) #10
  %445 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %414, <8 x float> %30, <8 x float> %362) #10
  %446 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %418, <8 x float> %30, <8 x float> %366) #10
  %447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %422, <8 x float> %30, <8 x float> %370) #10
  %448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %426, <8 x float> %30, <8 x float> %374) #10
  %449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %430, <8 x float> %30, <8 x float> %378) #10
  %450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %434, <8 x float> %30, <8 x float> %382) #10
  %451 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %438, <8 x float> %30, <8 x float> %386) #10
  store <8 x float> %439, <8 x float>* %337, align 1, !tbaa !12
  store <8 x float> %440, <8 x float>* %341, align 1, !tbaa !12
  store <8 x float> %441, <8 x float>* %345, align 1, !tbaa !12
  store <8 x float> %442, <8 x float>* %349, align 1, !tbaa !12
  store <8 x float> %443, <8 x float>* %353, align 1, !tbaa !12
  store <8 x float> %444, <8 x float>* %357, align 1, !tbaa !12
  store <8 x float> %445, <8 x float>* %361, align 1, !tbaa !12
  store <8 x float> %446, <8 x float>* %365, align 1, !tbaa !12
  store <8 x float> %447, <8 x float>* %369, align 1, !tbaa !12
  store <8 x float> %448, <8 x float>* %373, align 1, !tbaa !12
  store <8 x float> %449, <8 x float>* %377, align 1, !tbaa !12
  store <8 x float> %450, <8 x float>* %381, align 1, !tbaa !12
  store <8 x float> %451, <8 x float>* %385, align 1, !tbaa !12
  %452 = add nuw nsw i64 %282, 104
  %453 = icmp ult i64 %452, %87
  br i1 %453, label %281, label %275

454:                                              ; preds = %461, %82, %275
  %455 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %456 = icmp sgt i32 %455, 0
  br i1 %456, label %457, label %1931

457:                                              ; preds = %454
  %458 = zext i32 %455 to i64
  %459 = trunc i64 %36 to i32
  %460 = mul nsw i32 %455, %459
  br label %640

461:                                              ; preds = %276, %461
  %462 = phi i64 [ 0, %276 ], [ %632, %461 ]
  %463 = getelementptr inbounds float, float* %5, i64 %462
  %464 = getelementptr inbounds float, float* %463, i64 8
  %465 = bitcast float* %464 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %465, i32 0, i32 1, i32 1)
  %466 = getelementptr inbounds float, float* %3, i64 %462
  %467 = getelementptr inbounds float, float* %466, i64 8
  %468 = bitcast float* %467 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %468, i32 0, i32 1, i32 1)
  %469 = getelementptr inbounds float, float* %463, i64 16
  %470 = bitcast float* %469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %470, i32 0, i32 1, i32 1)
  %471 = getelementptr inbounds float, float* %466, i64 16
  %472 = bitcast float* %471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %472, i32 0, i32 1, i32 1)
  %473 = getelementptr inbounds float, float* %463, i64 24
  %474 = bitcast float* %473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %474, i32 0, i32 1, i32 1)
  %475 = getelementptr inbounds float, float* %466, i64 24
  %476 = bitcast float* %475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %476, i32 0, i32 1, i32 1)
  %477 = getelementptr inbounds float, float* %463, i64 32
  %478 = bitcast float* %477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %478, i32 0, i32 1, i32 1)
  %479 = getelementptr inbounds float, float* %466, i64 32
  %480 = bitcast float* %479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %480, i32 0, i32 1, i32 1)
  %481 = getelementptr inbounds float, float* %463, i64 40
  %482 = bitcast float* %481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %482, i32 0, i32 1, i32 1)
  %483 = getelementptr inbounds float, float* %466, i64 40
  %484 = bitcast float* %483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %484, i32 0, i32 1, i32 1)
  %485 = getelementptr inbounds float, float* %463, i64 48
  %486 = bitcast float* %485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %486, i32 0, i32 1, i32 1)
  %487 = getelementptr inbounds float, float* %466, i64 48
  %488 = bitcast float* %487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %488, i32 0, i32 1, i32 1)
  %489 = getelementptr inbounds float, float* %463, i64 56
  %490 = bitcast float* %489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %490, i32 0, i32 1, i32 1)
  %491 = getelementptr inbounds float, float* %466, i64 56
  %492 = bitcast float* %491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %492, i32 0, i32 1, i32 1)
  %493 = getelementptr inbounds float, float* %463, i64 64
  %494 = bitcast float* %493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %494, i32 0, i32 1, i32 1)
  %495 = getelementptr inbounds float, float* %466, i64 64
  %496 = bitcast float* %495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %496, i32 0, i32 1, i32 1)
  %497 = getelementptr inbounds float, float* %463, i64 72
  %498 = bitcast float* %497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %498, i32 0, i32 1, i32 1)
  %499 = getelementptr inbounds float, float* %466, i64 72
  %500 = bitcast float* %499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %500, i32 0, i32 1, i32 1)
  %501 = getelementptr inbounds float, float* %463, i64 80
  %502 = bitcast float* %501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %502, i32 0, i32 1, i32 1)
  %503 = getelementptr inbounds float, float* %466, i64 80
  %504 = bitcast float* %503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %504, i32 0, i32 1, i32 1)
  %505 = getelementptr inbounds float, float* %463, i64 88
  %506 = bitcast float* %505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %506, i32 0, i32 1, i32 1)
  %507 = getelementptr inbounds float, float* %466, i64 88
  %508 = bitcast float* %507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %508, i32 0, i32 1, i32 1)
  %509 = getelementptr inbounds float, float* %463, i64 96
  %510 = bitcast float* %509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %510, i32 0, i32 1, i32 1)
  %511 = getelementptr inbounds float, float* %466, i64 96
  %512 = bitcast float* %511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %512, i32 0, i32 1, i32 1)
  %513 = getelementptr inbounds float, float* %463, i64 104
  %514 = bitcast float* %513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %514, i32 0, i32 1, i32 1)
  %515 = getelementptr inbounds float, float* %466, i64 104
  %516 = bitcast float* %515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %516, i32 0, i32 1, i32 1)
  %517 = bitcast float* %463 to <8 x float>*
  %518 = load <8 x float>, <8 x float>* %517, align 1, !tbaa !12
  %519 = add nuw nsw i64 %462, 8
  %520 = getelementptr inbounds float, float* %5, i64 %519
  %521 = bitcast float* %520 to <8 x float>*
  %522 = load <8 x float>, <8 x float>* %521, align 1, !tbaa !12
  %523 = add nuw nsw i64 %462, 16
  %524 = getelementptr inbounds float, float* %5, i64 %523
  %525 = bitcast float* %524 to <8 x float>*
  %526 = load <8 x float>, <8 x float>* %525, align 1, !tbaa !12
  %527 = add nuw nsw i64 %462, 24
  %528 = getelementptr inbounds float, float* %5, i64 %527
  %529 = bitcast float* %528 to <8 x float>*
  %530 = load <8 x float>, <8 x float>* %529, align 1, !tbaa !12
  %531 = add nuw nsw i64 %462, 32
  %532 = getelementptr inbounds float, float* %5, i64 %531
  %533 = bitcast float* %532 to <8 x float>*
  %534 = load <8 x float>, <8 x float>* %533, align 1, !tbaa !12
  %535 = add nuw nsw i64 %462, 40
  %536 = getelementptr inbounds float, float* %5, i64 %535
  %537 = bitcast float* %536 to <8 x float>*
  %538 = load <8 x float>, <8 x float>* %537, align 1, !tbaa !12
  %539 = add nuw nsw i64 %462, 48
  %540 = getelementptr inbounds float, float* %5, i64 %539
  %541 = bitcast float* %540 to <8 x float>*
  %542 = load <8 x float>, <8 x float>* %541, align 1, !tbaa !12
  %543 = add nuw nsw i64 %462, 56
  %544 = getelementptr inbounds float, float* %5, i64 %543
  %545 = bitcast float* %544 to <8 x float>*
  %546 = load <8 x float>, <8 x float>* %545, align 1, !tbaa !12
  %547 = add nuw nsw i64 %462, 64
  %548 = getelementptr inbounds float, float* %5, i64 %547
  %549 = bitcast float* %548 to <8 x float>*
  %550 = load <8 x float>, <8 x float>* %549, align 1, !tbaa !12
  %551 = add nuw nsw i64 %462, 72
  %552 = getelementptr inbounds float, float* %5, i64 %551
  %553 = bitcast float* %552 to <8 x float>*
  %554 = load <8 x float>, <8 x float>* %553, align 1, !tbaa !12
  %555 = add nuw nsw i64 %462, 80
  %556 = getelementptr inbounds float, float* %5, i64 %555
  %557 = bitcast float* %556 to <8 x float>*
  %558 = load <8 x float>, <8 x float>* %557, align 1, !tbaa !12
  %559 = add nuw nsw i64 %462, 88
  %560 = getelementptr inbounds float, float* %5, i64 %559
  %561 = bitcast float* %560 to <8 x float>*
  %562 = load <8 x float>, <8 x float>* %561, align 1, !tbaa !12
  %563 = add nuw nsw i64 %462, 96
  %564 = getelementptr inbounds float, float* %5, i64 %563
  %565 = bitcast float* %564 to <8 x float>*
  %566 = load <8 x float>, <8 x float>* %565, align 1, !tbaa !12
  %567 = add nsw i64 %462, %279
  %568 = getelementptr inbounds float, float* %3, i64 %567
  %569 = bitcast float* %568 to <8 x float>*
  %570 = load <8 x float>, <8 x float>* %569, align 1, !tbaa !12
  %571 = add nsw i64 %567, 8
  %572 = getelementptr inbounds float, float* %3, i64 %571
  %573 = bitcast float* %572 to <8 x float>*
  %574 = load <8 x float>, <8 x float>* %573, align 1, !tbaa !12
  %575 = add nsw i64 %567, 16
  %576 = getelementptr inbounds float, float* %3, i64 %575
  %577 = bitcast float* %576 to <8 x float>*
  %578 = load <8 x float>, <8 x float>* %577, align 1, !tbaa !12
  %579 = add nsw i64 %567, 24
  %580 = getelementptr inbounds float, float* %3, i64 %579
  %581 = bitcast float* %580 to <8 x float>*
  %582 = load <8 x float>, <8 x float>* %581, align 1, !tbaa !12
  %583 = add nsw i64 %567, 32
  %584 = getelementptr inbounds float, float* %3, i64 %583
  %585 = bitcast float* %584 to <8 x float>*
  %586 = load <8 x float>, <8 x float>* %585, align 1, !tbaa !12
  %587 = add nsw i64 %567, 40
  %588 = getelementptr inbounds float, float* %3, i64 %587
  %589 = bitcast float* %588 to <8 x float>*
  %590 = load <8 x float>, <8 x float>* %589, align 1, !tbaa !12
  %591 = add nsw i64 %567, 48
  %592 = getelementptr inbounds float, float* %3, i64 %591
  %593 = bitcast float* %592 to <8 x float>*
  %594 = load <8 x float>, <8 x float>* %593, align 1, !tbaa !12
  %595 = add nsw i64 %567, 56
  %596 = getelementptr inbounds float, float* %3, i64 %595
  %597 = bitcast float* %596 to <8 x float>*
  %598 = load <8 x float>, <8 x float>* %597, align 1, !tbaa !12
  %599 = add nsw i64 %567, 64
  %600 = getelementptr inbounds float, float* %3, i64 %599
  %601 = bitcast float* %600 to <8 x float>*
  %602 = load <8 x float>, <8 x float>* %601, align 1, !tbaa !12
  %603 = add nsw i64 %567, 72
  %604 = getelementptr inbounds float, float* %3, i64 %603
  %605 = bitcast float* %604 to <8 x float>*
  %606 = load <8 x float>, <8 x float>* %605, align 1, !tbaa !12
  %607 = add nsw i64 %567, 80
  %608 = getelementptr inbounds float, float* %3, i64 %607
  %609 = bitcast float* %608 to <8 x float>*
  %610 = load <8 x float>, <8 x float>* %609, align 1, !tbaa !12
  %611 = add nsw i64 %567, 88
  %612 = getelementptr inbounds float, float* %3, i64 %611
  %613 = bitcast float* %612 to <8 x float>*
  %614 = load <8 x float>, <8 x float>* %613, align 1, !tbaa !12
  %615 = add nsw i64 %567, 96
  %616 = getelementptr inbounds float, float* %3, i64 %615
  %617 = bitcast float* %616 to <8 x float>*
  %618 = load <8 x float>, <8 x float>* %617, align 1, !tbaa !12
  %619 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %570, <8 x float> %35, <8 x float> %518) #10
  %620 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %574, <8 x float> %35, <8 x float> %522) #10
  %621 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %578, <8 x float> %35, <8 x float> %526) #10
  %622 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %582, <8 x float> %35, <8 x float> %530) #10
  %623 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %586, <8 x float> %35, <8 x float> %534) #10
  %624 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %590, <8 x float> %35, <8 x float> %538) #10
  %625 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %594, <8 x float> %35, <8 x float> %542) #10
  %626 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %598, <8 x float> %35, <8 x float> %546) #10
  %627 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %602, <8 x float> %35, <8 x float> %550) #10
  %628 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %606, <8 x float> %35, <8 x float> %554) #10
  %629 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %610, <8 x float> %35, <8 x float> %558) #10
  %630 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %614, <8 x float> %35, <8 x float> %562) #10
  %631 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %618, <8 x float> %35, <8 x float> %566) #10
  store <8 x float> %619, <8 x float>* %517, align 1, !tbaa !12
  store <8 x float> %620, <8 x float>* %521, align 1, !tbaa !12
  store <8 x float> %621, <8 x float>* %525, align 1, !tbaa !12
  store <8 x float> %622, <8 x float>* %529, align 1, !tbaa !12
  store <8 x float> %623, <8 x float>* %533, align 1, !tbaa !12
  store <8 x float> %624, <8 x float>* %537, align 1, !tbaa !12
  store <8 x float> %625, <8 x float>* %541, align 1, !tbaa !12
  store <8 x float> %626, <8 x float>* %545, align 1, !tbaa !12
  store <8 x float> %627, <8 x float>* %549, align 1, !tbaa !12
  store <8 x float> %628, <8 x float>* %553, align 1, !tbaa !12
  store <8 x float> %629, <8 x float>* %557, align 1, !tbaa !12
  store <8 x float> %630, <8 x float>* %561, align 1, !tbaa !12
  store <8 x float> %631, <8 x float>* %565, align 1, !tbaa !12
  %632 = add nuw nsw i64 %462, 104
  %633 = icmp ult i64 %632, %280
  br i1 %633, label %461, label %454

634:                                              ; preds = %640
  br i1 %456, label %635, label %1006

635:                                              ; preds = %634
  %636 = trunc i64 %41 to i32
  %637 = mul nsw i32 %455, %636
  %638 = sext i32 %637 to i64
  %639 = zext i32 %455 to i64
  br label %833

640:                                              ; preds = %457, %640
  %641 = phi i64 [ 0, %457 ], [ %825, %640 ]
  %642 = getelementptr inbounds float, float* %5, i64 %641
  %643 = getelementptr inbounds float, float* %642, i64 8
  %644 = bitcast float* %643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %644, i32 0, i32 1, i32 1)
  %645 = getelementptr inbounds float, float* %3, i64 %641
  %646 = getelementptr inbounds float, float* %645, i64 8
  %647 = bitcast float* %646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %647, i32 0, i32 1, i32 1)
  %648 = getelementptr inbounds float, float* %642, i64 16
  %649 = bitcast float* %648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %649, i32 0, i32 1, i32 1)
  %650 = getelementptr inbounds float, float* %645, i64 16
  %651 = bitcast float* %650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %651, i32 0, i32 1, i32 1)
  %652 = getelementptr inbounds float, float* %642, i64 24
  %653 = bitcast float* %652 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %653, i32 0, i32 1, i32 1)
  %654 = getelementptr inbounds float, float* %645, i64 24
  %655 = bitcast float* %654 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %655, i32 0, i32 1, i32 1)
  %656 = getelementptr inbounds float, float* %642, i64 32
  %657 = bitcast float* %656 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %657, i32 0, i32 1, i32 1)
  %658 = getelementptr inbounds float, float* %645, i64 32
  %659 = bitcast float* %658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %659, i32 0, i32 1, i32 1)
  %660 = getelementptr inbounds float, float* %642, i64 40
  %661 = bitcast float* %660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %661, i32 0, i32 1, i32 1)
  %662 = getelementptr inbounds float, float* %645, i64 40
  %663 = bitcast float* %662 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %663, i32 0, i32 1, i32 1)
  %664 = getelementptr inbounds float, float* %642, i64 48
  %665 = bitcast float* %664 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %665, i32 0, i32 1, i32 1)
  %666 = getelementptr inbounds float, float* %645, i64 48
  %667 = bitcast float* %666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %667, i32 0, i32 1, i32 1)
  %668 = getelementptr inbounds float, float* %642, i64 56
  %669 = bitcast float* %668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %669, i32 0, i32 1, i32 1)
  %670 = getelementptr inbounds float, float* %645, i64 56
  %671 = bitcast float* %670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %671, i32 0, i32 1, i32 1)
  %672 = getelementptr inbounds float, float* %642, i64 64
  %673 = bitcast float* %672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %673, i32 0, i32 1, i32 1)
  %674 = getelementptr inbounds float, float* %645, i64 64
  %675 = bitcast float* %674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %675, i32 0, i32 1, i32 1)
  %676 = getelementptr inbounds float, float* %642, i64 72
  %677 = bitcast float* %676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %677, i32 0, i32 1, i32 1)
  %678 = getelementptr inbounds float, float* %645, i64 72
  %679 = bitcast float* %678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %679, i32 0, i32 1, i32 1)
  %680 = getelementptr inbounds float, float* %642, i64 80
  %681 = bitcast float* %680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %681, i32 0, i32 1, i32 1)
  %682 = getelementptr inbounds float, float* %645, i64 80
  %683 = bitcast float* %682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %683, i32 0, i32 1, i32 1)
  %684 = getelementptr inbounds float, float* %642, i64 88
  %685 = bitcast float* %684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %685, i32 0, i32 1, i32 1)
  %686 = getelementptr inbounds float, float* %645, i64 88
  %687 = bitcast float* %686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %687, i32 0, i32 1, i32 1)
  %688 = getelementptr inbounds float, float* %642, i64 96
  %689 = bitcast float* %688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %689, i32 0, i32 1, i32 1)
  %690 = getelementptr inbounds float, float* %645, i64 96
  %691 = bitcast float* %690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %691, i32 0, i32 1, i32 1)
  %692 = getelementptr inbounds float, float* %642, i64 104
  %693 = bitcast float* %692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %693, i32 0, i32 1, i32 1)
  %694 = getelementptr inbounds float, float* %645, i64 104
  %695 = bitcast float* %694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %695, i32 0, i32 1, i32 1)
  %696 = bitcast float* %642 to <8 x float>*
  %697 = load <8 x float>, <8 x float>* %696, align 1, !tbaa !12
  %698 = add nuw nsw i64 %641, 8
  %699 = getelementptr inbounds float, float* %5, i64 %698
  %700 = bitcast float* %699 to <8 x float>*
  %701 = load <8 x float>, <8 x float>* %700, align 1, !tbaa !12
  %702 = add nuw nsw i64 %641, 16
  %703 = getelementptr inbounds float, float* %5, i64 %702
  %704 = bitcast float* %703 to <8 x float>*
  %705 = load <8 x float>, <8 x float>* %704, align 1, !tbaa !12
  %706 = add nuw nsw i64 %641, 24
  %707 = getelementptr inbounds float, float* %5, i64 %706
  %708 = bitcast float* %707 to <8 x float>*
  %709 = load <8 x float>, <8 x float>* %708, align 1, !tbaa !12
  %710 = add nuw nsw i64 %641, 32
  %711 = getelementptr inbounds float, float* %5, i64 %710
  %712 = bitcast float* %711 to <8 x float>*
  %713 = load <8 x float>, <8 x float>* %712, align 1, !tbaa !12
  %714 = add nuw nsw i64 %641, 40
  %715 = getelementptr inbounds float, float* %5, i64 %714
  %716 = bitcast float* %715 to <8 x float>*
  %717 = load <8 x float>, <8 x float>* %716, align 1, !tbaa !12
  %718 = add nuw nsw i64 %641, 48
  %719 = getelementptr inbounds float, float* %5, i64 %718
  %720 = bitcast float* %719 to <8 x float>*
  %721 = load <8 x float>, <8 x float>* %720, align 1, !tbaa !12
  %722 = add nuw nsw i64 %641, 56
  %723 = getelementptr inbounds float, float* %5, i64 %722
  %724 = bitcast float* %723 to <8 x float>*
  %725 = load <8 x float>, <8 x float>* %724, align 1, !tbaa !12
  %726 = add nuw nsw i64 %641, 64
  %727 = getelementptr inbounds float, float* %5, i64 %726
  %728 = bitcast float* %727 to <8 x float>*
  %729 = load <8 x float>, <8 x float>* %728, align 1, !tbaa !12
  %730 = add nuw nsw i64 %641, 72
  %731 = getelementptr inbounds float, float* %5, i64 %730
  %732 = bitcast float* %731 to <8 x float>*
  %733 = load <8 x float>, <8 x float>* %732, align 1, !tbaa !12
  %734 = add nuw nsw i64 %641, 80
  %735 = getelementptr inbounds float, float* %5, i64 %734
  %736 = bitcast float* %735 to <8 x float>*
  %737 = load <8 x float>, <8 x float>* %736, align 1, !tbaa !12
  %738 = add nuw nsw i64 %641, 88
  %739 = getelementptr inbounds float, float* %5, i64 %738
  %740 = bitcast float* %739 to <8 x float>*
  %741 = load <8 x float>, <8 x float>* %740, align 1, !tbaa !12
  %742 = add nuw nsw i64 %641, 96
  %743 = getelementptr inbounds float, float* %5, i64 %742
  %744 = bitcast float* %743 to <8 x float>*
  %745 = load <8 x float>, <8 x float>* %744, align 1, !tbaa !12
  %746 = trunc i64 %641 to i32
  %747 = add nsw i32 %460, %746
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds float, float* %3, i64 %748
  %750 = bitcast float* %749 to <8 x float>*
  %751 = load <8 x float>, <8 x float>* %750, align 1, !tbaa !12
  %752 = add nsw i32 %747, 8
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds float, float* %3, i64 %753
  %755 = bitcast float* %754 to <8 x float>*
  %756 = load <8 x float>, <8 x float>* %755, align 1, !tbaa !12
  %757 = add nsw i32 %747, 16
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds float, float* %3, i64 %758
  %760 = bitcast float* %759 to <8 x float>*
  %761 = load <8 x float>, <8 x float>* %760, align 1, !tbaa !12
  %762 = add nsw i32 %747, 24
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds float, float* %3, i64 %763
  %765 = bitcast float* %764 to <8 x float>*
  %766 = load <8 x float>, <8 x float>* %765, align 1, !tbaa !12
  %767 = add nsw i32 %747, 32
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds float, float* %3, i64 %768
  %770 = bitcast float* %769 to <8 x float>*
  %771 = load <8 x float>, <8 x float>* %770, align 1, !tbaa !12
  %772 = add nsw i32 %747, 40
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds float, float* %3, i64 %773
  %775 = bitcast float* %774 to <8 x float>*
  %776 = load <8 x float>, <8 x float>* %775, align 1, !tbaa !12
  %777 = add nsw i32 %747, 48
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds float, float* %3, i64 %778
  %780 = bitcast float* %779 to <8 x float>*
  %781 = load <8 x float>, <8 x float>* %780, align 1, !tbaa !12
  %782 = add nsw i32 %747, 56
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds float, float* %3, i64 %783
  %785 = bitcast float* %784 to <8 x float>*
  %786 = load <8 x float>, <8 x float>* %785, align 1, !tbaa !12
  %787 = add nsw i32 %747, 64
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds float, float* %3, i64 %788
  %790 = bitcast float* %789 to <8 x float>*
  %791 = load <8 x float>, <8 x float>* %790, align 1, !tbaa !12
  %792 = add nsw i32 %747, 72
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds float, float* %3, i64 %793
  %795 = bitcast float* %794 to <8 x float>*
  %796 = load <8 x float>, <8 x float>* %795, align 1, !tbaa !12
  %797 = add nsw i32 %747, 80
  %798 = sext i32 %797 to i64
  %799 = getelementptr inbounds float, float* %3, i64 %798
  %800 = bitcast float* %799 to <8 x float>*
  %801 = load <8 x float>, <8 x float>* %800, align 1, !tbaa !12
  %802 = add nsw i32 %747, 88
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds float, float* %3, i64 %803
  %805 = bitcast float* %804 to <8 x float>*
  %806 = load <8 x float>, <8 x float>* %805, align 1, !tbaa !12
  %807 = add nsw i32 %747, 96
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds float, float* %3, i64 %808
  %810 = bitcast float* %809 to <8 x float>*
  %811 = load <8 x float>, <8 x float>* %810, align 1, !tbaa !12
  %812 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %751, <8 x float> %40, <8 x float> %697) #10
  %813 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %756, <8 x float> %40, <8 x float> %701) #10
  %814 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %761, <8 x float> %40, <8 x float> %705) #10
  %815 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %766, <8 x float> %40, <8 x float> %709) #10
  %816 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %771, <8 x float> %40, <8 x float> %713) #10
  %817 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %776, <8 x float> %40, <8 x float> %717) #10
  %818 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %781, <8 x float> %40, <8 x float> %721) #10
  %819 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %786, <8 x float> %40, <8 x float> %725) #10
  %820 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %791, <8 x float> %40, <8 x float> %729) #10
  %821 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %796, <8 x float> %40, <8 x float> %733) #10
  %822 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %801, <8 x float> %40, <8 x float> %737) #10
  %823 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %806, <8 x float> %40, <8 x float> %741) #10
  %824 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %811, <8 x float> %40, <8 x float> %745) #10
  store <8 x float> %812, <8 x float>* %696, align 1, !tbaa !12
  store <8 x float> %813, <8 x float>* %700, align 1, !tbaa !12
  store <8 x float> %814, <8 x float>* %704, align 1, !tbaa !12
  store <8 x float> %815, <8 x float>* %708, align 1, !tbaa !12
  store <8 x float> %816, <8 x float>* %712, align 1, !tbaa !12
  store <8 x float> %817, <8 x float>* %716, align 1, !tbaa !12
  store <8 x float> %818, <8 x float>* %720, align 1, !tbaa !12
  store <8 x float> %819, <8 x float>* %724, align 1, !tbaa !12
  store <8 x float> %820, <8 x float>* %728, align 1, !tbaa !12
  store <8 x float> %821, <8 x float>* %732, align 1, !tbaa !12
  store <8 x float> %822, <8 x float>* %736, align 1, !tbaa !12
  store <8 x float> %823, <8 x float>* %740, align 1, !tbaa !12
  store <8 x float> %824, <8 x float>* %744, align 1, !tbaa !12
  %825 = add nuw nsw i64 %641, 104
  %826 = icmp ult i64 %825, %458
  br i1 %826, label %640, label %634

827:                                              ; preds = %833
  br i1 %456, label %828, label %1006

828:                                              ; preds = %827
  %829 = trunc i64 %46 to i32
  %830 = mul nsw i32 %455, %829
  %831 = sext i32 %830 to i64
  %832 = zext i32 %455 to i64
  br label %1013

833:                                              ; preds = %635, %833
  %834 = phi i64 [ 0, %635 ], [ %1004, %833 ]
  %835 = getelementptr inbounds float, float* %5, i64 %834
  %836 = getelementptr inbounds float, float* %835, i64 8
  %837 = bitcast float* %836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %837, i32 0, i32 1, i32 1)
  %838 = getelementptr inbounds float, float* %3, i64 %834
  %839 = getelementptr inbounds float, float* %838, i64 8
  %840 = bitcast float* %839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %840, i32 0, i32 1, i32 1)
  %841 = getelementptr inbounds float, float* %835, i64 16
  %842 = bitcast float* %841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %842, i32 0, i32 1, i32 1)
  %843 = getelementptr inbounds float, float* %838, i64 16
  %844 = bitcast float* %843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %844, i32 0, i32 1, i32 1)
  %845 = getelementptr inbounds float, float* %835, i64 24
  %846 = bitcast float* %845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %846, i32 0, i32 1, i32 1)
  %847 = getelementptr inbounds float, float* %838, i64 24
  %848 = bitcast float* %847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %848, i32 0, i32 1, i32 1)
  %849 = getelementptr inbounds float, float* %835, i64 32
  %850 = bitcast float* %849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %850, i32 0, i32 1, i32 1)
  %851 = getelementptr inbounds float, float* %838, i64 32
  %852 = bitcast float* %851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %852, i32 0, i32 1, i32 1)
  %853 = getelementptr inbounds float, float* %835, i64 40
  %854 = bitcast float* %853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %854, i32 0, i32 1, i32 1)
  %855 = getelementptr inbounds float, float* %838, i64 40
  %856 = bitcast float* %855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %856, i32 0, i32 1, i32 1)
  %857 = getelementptr inbounds float, float* %835, i64 48
  %858 = bitcast float* %857 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %858, i32 0, i32 1, i32 1)
  %859 = getelementptr inbounds float, float* %838, i64 48
  %860 = bitcast float* %859 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %860, i32 0, i32 1, i32 1)
  %861 = getelementptr inbounds float, float* %835, i64 56
  %862 = bitcast float* %861 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %862, i32 0, i32 1, i32 1)
  %863 = getelementptr inbounds float, float* %838, i64 56
  %864 = bitcast float* %863 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %864, i32 0, i32 1, i32 1)
  %865 = getelementptr inbounds float, float* %835, i64 64
  %866 = bitcast float* %865 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %866, i32 0, i32 1, i32 1)
  %867 = getelementptr inbounds float, float* %838, i64 64
  %868 = bitcast float* %867 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %868, i32 0, i32 1, i32 1)
  %869 = getelementptr inbounds float, float* %835, i64 72
  %870 = bitcast float* %869 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %870, i32 0, i32 1, i32 1)
  %871 = getelementptr inbounds float, float* %838, i64 72
  %872 = bitcast float* %871 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %872, i32 0, i32 1, i32 1)
  %873 = getelementptr inbounds float, float* %835, i64 80
  %874 = bitcast float* %873 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %874, i32 0, i32 1, i32 1)
  %875 = getelementptr inbounds float, float* %838, i64 80
  %876 = bitcast float* %875 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %876, i32 0, i32 1, i32 1)
  %877 = getelementptr inbounds float, float* %835, i64 88
  %878 = bitcast float* %877 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %878, i32 0, i32 1, i32 1)
  %879 = getelementptr inbounds float, float* %838, i64 88
  %880 = bitcast float* %879 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %880, i32 0, i32 1, i32 1)
  %881 = getelementptr inbounds float, float* %835, i64 96
  %882 = bitcast float* %881 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %882, i32 0, i32 1, i32 1)
  %883 = getelementptr inbounds float, float* %838, i64 96
  %884 = bitcast float* %883 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %884, i32 0, i32 1, i32 1)
  %885 = getelementptr inbounds float, float* %835, i64 104
  %886 = bitcast float* %885 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %886, i32 0, i32 1, i32 1)
  %887 = getelementptr inbounds float, float* %838, i64 104
  %888 = bitcast float* %887 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %888, i32 0, i32 1, i32 1)
  %889 = bitcast float* %835 to <8 x float>*
  %890 = load <8 x float>, <8 x float>* %889, align 1, !tbaa !12
  %891 = add nuw nsw i64 %834, 8
  %892 = getelementptr inbounds float, float* %5, i64 %891
  %893 = bitcast float* %892 to <8 x float>*
  %894 = load <8 x float>, <8 x float>* %893, align 1, !tbaa !12
  %895 = add nuw nsw i64 %834, 16
  %896 = getelementptr inbounds float, float* %5, i64 %895
  %897 = bitcast float* %896 to <8 x float>*
  %898 = load <8 x float>, <8 x float>* %897, align 1, !tbaa !12
  %899 = add nuw nsw i64 %834, 24
  %900 = getelementptr inbounds float, float* %5, i64 %899
  %901 = bitcast float* %900 to <8 x float>*
  %902 = load <8 x float>, <8 x float>* %901, align 1, !tbaa !12
  %903 = add nuw nsw i64 %834, 32
  %904 = getelementptr inbounds float, float* %5, i64 %903
  %905 = bitcast float* %904 to <8 x float>*
  %906 = load <8 x float>, <8 x float>* %905, align 1, !tbaa !12
  %907 = add nuw nsw i64 %834, 40
  %908 = getelementptr inbounds float, float* %5, i64 %907
  %909 = bitcast float* %908 to <8 x float>*
  %910 = load <8 x float>, <8 x float>* %909, align 1, !tbaa !12
  %911 = add nuw nsw i64 %834, 48
  %912 = getelementptr inbounds float, float* %5, i64 %911
  %913 = bitcast float* %912 to <8 x float>*
  %914 = load <8 x float>, <8 x float>* %913, align 1, !tbaa !12
  %915 = add nuw nsw i64 %834, 56
  %916 = getelementptr inbounds float, float* %5, i64 %915
  %917 = bitcast float* %916 to <8 x float>*
  %918 = load <8 x float>, <8 x float>* %917, align 1, !tbaa !12
  %919 = add nuw nsw i64 %834, 64
  %920 = getelementptr inbounds float, float* %5, i64 %919
  %921 = bitcast float* %920 to <8 x float>*
  %922 = load <8 x float>, <8 x float>* %921, align 1, !tbaa !12
  %923 = add nuw nsw i64 %834, 72
  %924 = getelementptr inbounds float, float* %5, i64 %923
  %925 = bitcast float* %924 to <8 x float>*
  %926 = load <8 x float>, <8 x float>* %925, align 1, !tbaa !12
  %927 = add nuw nsw i64 %834, 80
  %928 = getelementptr inbounds float, float* %5, i64 %927
  %929 = bitcast float* %928 to <8 x float>*
  %930 = load <8 x float>, <8 x float>* %929, align 1, !tbaa !12
  %931 = add nuw nsw i64 %834, 88
  %932 = getelementptr inbounds float, float* %5, i64 %931
  %933 = bitcast float* %932 to <8 x float>*
  %934 = load <8 x float>, <8 x float>* %933, align 1, !tbaa !12
  %935 = add nuw nsw i64 %834, 96
  %936 = getelementptr inbounds float, float* %5, i64 %935
  %937 = bitcast float* %936 to <8 x float>*
  %938 = load <8 x float>, <8 x float>* %937, align 1, !tbaa !12
  %939 = add nsw i64 %834, %638
  %940 = getelementptr inbounds float, float* %3, i64 %939
  %941 = bitcast float* %940 to <8 x float>*
  %942 = load <8 x float>, <8 x float>* %941, align 1, !tbaa !12
  %943 = add nsw i64 %939, 8
  %944 = getelementptr inbounds float, float* %3, i64 %943
  %945 = bitcast float* %944 to <8 x float>*
  %946 = load <8 x float>, <8 x float>* %945, align 1, !tbaa !12
  %947 = add nsw i64 %939, 16
  %948 = getelementptr inbounds float, float* %3, i64 %947
  %949 = bitcast float* %948 to <8 x float>*
  %950 = load <8 x float>, <8 x float>* %949, align 1, !tbaa !12
  %951 = add nsw i64 %939, 24
  %952 = getelementptr inbounds float, float* %3, i64 %951
  %953 = bitcast float* %952 to <8 x float>*
  %954 = load <8 x float>, <8 x float>* %953, align 1, !tbaa !12
  %955 = add nsw i64 %939, 32
  %956 = getelementptr inbounds float, float* %3, i64 %955
  %957 = bitcast float* %956 to <8 x float>*
  %958 = load <8 x float>, <8 x float>* %957, align 1, !tbaa !12
  %959 = add nsw i64 %939, 40
  %960 = getelementptr inbounds float, float* %3, i64 %959
  %961 = bitcast float* %960 to <8 x float>*
  %962 = load <8 x float>, <8 x float>* %961, align 1, !tbaa !12
  %963 = add nsw i64 %939, 48
  %964 = getelementptr inbounds float, float* %3, i64 %963
  %965 = bitcast float* %964 to <8 x float>*
  %966 = load <8 x float>, <8 x float>* %965, align 1, !tbaa !12
  %967 = add nsw i64 %939, 56
  %968 = getelementptr inbounds float, float* %3, i64 %967
  %969 = bitcast float* %968 to <8 x float>*
  %970 = load <8 x float>, <8 x float>* %969, align 1, !tbaa !12
  %971 = add nsw i64 %939, 64
  %972 = getelementptr inbounds float, float* %3, i64 %971
  %973 = bitcast float* %972 to <8 x float>*
  %974 = load <8 x float>, <8 x float>* %973, align 1, !tbaa !12
  %975 = add nsw i64 %939, 72
  %976 = getelementptr inbounds float, float* %3, i64 %975
  %977 = bitcast float* %976 to <8 x float>*
  %978 = load <8 x float>, <8 x float>* %977, align 1, !tbaa !12
  %979 = add nsw i64 %939, 80
  %980 = getelementptr inbounds float, float* %3, i64 %979
  %981 = bitcast float* %980 to <8 x float>*
  %982 = load <8 x float>, <8 x float>* %981, align 1, !tbaa !12
  %983 = add nsw i64 %939, 88
  %984 = getelementptr inbounds float, float* %3, i64 %983
  %985 = bitcast float* %984 to <8 x float>*
  %986 = load <8 x float>, <8 x float>* %985, align 1, !tbaa !12
  %987 = add nsw i64 %939, 96
  %988 = getelementptr inbounds float, float* %3, i64 %987
  %989 = bitcast float* %988 to <8 x float>*
  %990 = load <8 x float>, <8 x float>* %989, align 1, !tbaa !12
  %991 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %942, <8 x float> %45, <8 x float> %890) #10
  %992 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %946, <8 x float> %45, <8 x float> %894) #10
  %993 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %950, <8 x float> %45, <8 x float> %898) #10
  %994 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %954, <8 x float> %45, <8 x float> %902) #10
  %995 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %958, <8 x float> %45, <8 x float> %906) #10
  %996 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %962, <8 x float> %45, <8 x float> %910) #10
  %997 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %966, <8 x float> %45, <8 x float> %914) #10
  %998 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %970, <8 x float> %45, <8 x float> %918) #10
  %999 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %974, <8 x float> %45, <8 x float> %922) #10
  %1000 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %978, <8 x float> %45, <8 x float> %926) #10
  %1001 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %982, <8 x float> %45, <8 x float> %930) #10
  %1002 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %986, <8 x float> %45, <8 x float> %934) #10
  %1003 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %990, <8 x float> %45, <8 x float> %938) #10
  store <8 x float> %991, <8 x float>* %889, align 1, !tbaa !12
  store <8 x float> %992, <8 x float>* %893, align 1, !tbaa !12
  store <8 x float> %993, <8 x float>* %897, align 1, !tbaa !12
  store <8 x float> %994, <8 x float>* %901, align 1, !tbaa !12
  store <8 x float> %995, <8 x float>* %905, align 1, !tbaa !12
  store <8 x float> %996, <8 x float>* %909, align 1, !tbaa !12
  store <8 x float> %997, <8 x float>* %913, align 1, !tbaa !12
  store <8 x float> %998, <8 x float>* %917, align 1, !tbaa !12
  store <8 x float> %999, <8 x float>* %921, align 1, !tbaa !12
  store <8 x float> %1000, <8 x float>* %925, align 1, !tbaa !12
  store <8 x float> %1001, <8 x float>* %929, align 1, !tbaa !12
  store <8 x float> %1002, <8 x float>* %933, align 1, !tbaa !12
  store <8 x float> %1003, <8 x float>* %937, align 1, !tbaa !12
  %1004 = add nuw nsw i64 %834, 104
  %1005 = icmp ult i64 %1004, %639
  br i1 %1005, label %833, label %827

1006:                                             ; preds = %1013, %634, %827
  %1007 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1008 = icmp sgt i32 %1007, 0
  br i1 %1008, label %1009, label %1931

1009:                                             ; preds = %1006
  %1010 = zext i32 %1007 to i64
  %1011 = trunc i64 %51 to i32
  %1012 = mul nsw i32 %1007, %1011
  br label %1192

1013:                                             ; preds = %828, %1013
  %1014 = phi i64 [ 0, %828 ], [ %1184, %1013 ]
  %1015 = getelementptr inbounds float, float* %5, i64 %1014
  %1016 = getelementptr inbounds float, float* %1015, i64 8
  %1017 = bitcast float* %1016 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1017, i32 0, i32 1, i32 1)
  %1018 = getelementptr inbounds float, float* %3, i64 %1014
  %1019 = getelementptr inbounds float, float* %1018, i64 8
  %1020 = bitcast float* %1019 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1020, i32 0, i32 1, i32 1)
  %1021 = getelementptr inbounds float, float* %1015, i64 16
  %1022 = bitcast float* %1021 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1022, i32 0, i32 1, i32 1)
  %1023 = getelementptr inbounds float, float* %1018, i64 16
  %1024 = bitcast float* %1023 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1024, i32 0, i32 1, i32 1)
  %1025 = getelementptr inbounds float, float* %1015, i64 24
  %1026 = bitcast float* %1025 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1026, i32 0, i32 1, i32 1)
  %1027 = getelementptr inbounds float, float* %1018, i64 24
  %1028 = bitcast float* %1027 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1028, i32 0, i32 1, i32 1)
  %1029 = getelementptr inbounds float, float* %1015, i64 32
  %1030 = bitcast float* %1029 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1030, i32 0, i32 1, i32 1)
  %1031 = getelementptr inbounds float, float* %1018, i64 32
  %1032 = bitcast float* %1031 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1032, i32 0, i32 1, i32 1)
  %1033 = getelementptr inbounds float, float* %1015, i64 40
  %1034 = bitcast float* %1033 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1034, i32 0, i32 1, i32 1)
  %1035 = getelementptr inbounds float, float* %1018, i64 40
  %1036 = bitcast float* %1035 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1036, i32 0, i32 1, i32 1)
  %1037 = getelementptr inbounds float, float* %1015, i64 48
  %1038 = bitcast float* %1037 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1038, i32 0, i32 1, i32 1)
  %1039 = getelementptr inbounds float, float* %1018, i64 48
  %1040 = bitcast float* %1039 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1040, i32 0, i32 1, i32 1)
  %1041 = getelementptr inbounds float, float* %1015, i64 56
  %1042 = bitcast float* %1041 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1042, i32 0, i32 1, i32 1)
  %1043 = getelementptr inbounds float, float* %1018, i64 56
  %1044 = bitcast float* %1043 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1044, i32 0, i32 1, i32 1)
  %1045 = getelementptr inbounds float, float* %1015, i64 64
  %1046 = bitcast float* %1045 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1046, i32 0, i32 1, i32 1)
  %1047 = getelementptr inbounds float, float* %1018, i64 64
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = getelementptr inbounds float, float* %1015, i64 72
  %1050 = bitcast float* %1049 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1050, i32 0, i32 1, i32 1)
  %1051 = getelementptr inbounds float, float* %1018, i64 72
  %1052 = bitcast float* %1051 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1052, i32 0, i32 1, i32 1)
  %1053 = getelementptr inbounds float, float* %1015, i64 80
  %1054 = bitcast float* %1053 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1054, i32 0, i32 1, i32 1)
  %1055 = getelementptr inbounds float, float* %1018, i64 80
  %1056 = bitcast float* %1055 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1056, i32 0, i32 1, i32 1)
  %1057 = getelementptr inbounds float, float* %1015, i64 88
  %1058 = bitcast float* %1057 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1058, i32 0, i32 1, i32 1)
  %1059 = getelementptr inbounds float, float* %1018, i64 88
  %1060 = bitcast float* %1059 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1060, i32 0, i32 1, i32 1)
  %1061 = getelementptr inbounds float, float* %1015, i64 96
  %1062 = bitcast float* %1061 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1062, i32 0, i32 1, i32 1)
  %1063 = getelementptr inbounds float, float* %1018, i64 96
  %1064 = bitcast float* %1063 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1064, i32 0, i32 1, i32 1)
  %1065 = getelementptr inbounds float, float* %1015, i64 104
  %1066 = bitcast float* %1065 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1066, i32 0, i32 1, i32 1)
  %1067 = getelementptr inbounds float, float* %1018, i64 104
  %1068 = bitcast float* %1067 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1068, i32 0, i32 1, i32 1)
  %1069 = bitcast float* %1015 to <8 x float>*
  %1070 = load <8 x float>, <8 x float>* %1069, align 1, !tbaa !12
  %1071 = add nuw nsw i64 %1014, 8
  %1072 = getelementptr inbounds float, float* %5, i64 %1071
  %1073 = bitcast float* %1072 to <8 x float>*
  %1074 = load <8 x float>, <8 x float>* %1073, align 1, !tbaa !12
  %1075 = add nuw nsw i64 %1014, 16
  %1076 = getelementptr inbounds float, float* %5, i64 %1075
  %1077 = bitcast float* %1076 to <8 x float>*
  %1078 = load <8 x float>, <8 x float>* %1077, align 1, !tbaa !12
  %1079 = add nuw nsw i64 %1014, 24
  %1080 = getelementptr inbounds float, float* %5, i64 %1079
  %1081 = bitcast float* %1080 to <8 x float>*
  %1082 = load <8 x float>, <8 x float>* %1081, align 1, !tbaa !12
  %1083 = add nuw nsw i64 %1014, 32
  %1084 = getelementptr inbounds float, float* %5, i64 %1083
  %1085 = bitcast float* %1084 to <8 x float>*
  %1086 = load <8 x float>, <8 x float>* %1085, align 1, !tbaa !12
  %1087 = add nuw nsw i64 %1014, 40
  %1088 = getelementptr inbounds float, float* %5, i64 %1087
  %1089 = bitcast float* %1088 to <8 x float>*
  %1090 = load <8 x float>, <8 x float>* %1089, align 1, !tbaa !12
  %1091 = add nuw nsw i64 %1014, 48
  %1092 = getelementptr inbounds float, float* %5, i64 %1091
  %1093 = bitcast float* %1092 to <8 x float>*
  %1094 = load <8 x float>, <8 x float>* %1093, align 1, !tbaa !12
  %1095 = add nuw nsw i64 %1014, 56
  %1096 = getelementptr inbounds float, float* %5, i64 %1095
  %1097 = bitcast float* %1096 to <8 x float>*
  %1098 = load <8 x float>, <8 x float>* %1097, align 1, !tbaa !12
  %1099 = add nuw nsw i64 %1014, 64
  %1100 = getelementptr inbounds float, float* %5, i64 %1099
  %1101 = bitcast float* %1100 to <8 x float>*
  %1102 = load <8 x float>, <8 x float>* %1101, align 1, !tbaa !12
  %1103 = add nuw nsw i64 %1014, 72
  %1104 = getelementptr inbounds float, float* %5, i64 %1103
  %1105 = bitcast float* %1104 to <8 x float>*
  %1106 = load <8 x float>, <8 x float>* %1105, align 1, !tbaa !12
  %1107 = add nuw nsw i64 %1014, 80
  %1108 = getelementptr inbounds float, float* %5, i64 %1107
  %1109 = bitcast float* %1108 to <8 x float>*
  %1110 = load <8 x float>, <8 x float>* %1109, align 1, !tbaa !12
  %1111 = add nuw nsw i64 %1014, 88
  %1112 = getelementptr inbounds float, float* %5, i64 %1111
  %1113 = bitcast float* %1112 to <8 x float>*
  %1114 = load <8 x float>, <8 x float>* %1113, align 1, !tbaa !12
  %1115 = add nuw nsw i64 %1014, 96
  %1116 = getelementptr inbounds float, float* %5, i64 %1115
  %1117 = bitcast float* %1116 to <8 x float>*
  %1118 = load <8 x float>, <8 x float>* %1117, align 1, !tbaa !12
  %1119 = add nsw i64 %1014, %831
  %1120 = getelementptr inbounds float, float* %3, i64 %1119
  %1121 = bitcast float* %1120 to <8 x float>*
  %1122 = load <8 x float>, <8 x float>* %1121, align 1, !tbaa !12
  %1123 = add nsw i64 %1119, 8
  %1124 = getelementptr inbounds float, float* %3, i64 %1123
  %1125 = bitcast float* %1124 to <8 x float>*
  %1126 = load <8 x float>, <8 x float>* %1125, align 1, !tbaa !12
  %1127 = add nsw i64 %1119, 16
  %1128 = getelementptr inbounds float, float* %3, i64 %1127
  %1129 = bitcast float* %1128 to <8 x float>*
  %1130 = load <8 x float>, <8 x float>* %1129, align 1, !tbaa !12
  %1131 = add nsw i64 %1119, 24
  %1132 = getelementptr inbounds float, float* %3, i64 %1131
  %1133 = bitcast float* %1132 to <8 x float>*
  %1134 = load <8 x float>, <8 x float>* %1133, align 1, !tbaa !12
  %1135 = add nsw i64 %1119, 32
  %1136 = getelementptr inbounds float, float* %3, i64 %1135
  %1137 = bitcast float* %1136 to <8 x float>*
  %1138 = load <8 x float>, <8 x float>* %1137, align 1, !tbaa !12
  %1139 = add nsw i64 %1119, 40
  %1140 = getelementptr inbounds float, float* %3, i64 %1139
  %1141 = bitcast float* %1140 to <8 x float>*
  %1142 = load <8 x float>, <8 x float>* %1141, align 1, !tbaa !12
  %1143 = add nsw i64 %1119, 48
  %1144 = getelementptr inbounds float, float* %3, i64 %1143
  %1145 = bitcast float* %1144 to <8 x float>*
  %1146 = load <8 x float>, <8 x float>* %1145, align 1, !tbaa !12
  %1147 = add nsw i64 %1119, 56
  %1148 = getelementptr inbounds float, float* %3, i64 %1147
  %1149 = bitcast float* %1148 to <8 x float>*
  %1150 = load <8 x float>, <8 x float>* %1149, align 1, !tbaa !12
  %1151 = add nsw i64 %1119, 64
  %1152 = getelementptr inbounds float, float* %3, i64 %1151
  %1153 = bitcast float* %1152 to <8 x float>*
  %1154 = load <8 x float>, <8 x float>* %1153, align 1, !tbaa !12
  %1155 = add nsw i64 %1119, 72
  %1156 = getelementptr inbounds float, float* %3, i64 %1155
  %1157 = bitcast float* %1156 to <8 x float>*
  %1158 = load <8 x float>, <8 x float>* %1157, align 1, !tbaa !12
  %1159 = add nsw i64 %1119, 80
  %1160 = getelementptr inbounds float, float* %3, i64 %1159
  %1161 = bitcast float* %1160 to <8 x float>*
  %1162 = load <8 x float>, <8 x float>* %1161, align 1, !tbaa !12
  %1163 = add nsw i64 %1119, 88
  %1164 = getelementptr inbounds float, float* %3, i64 %1163
  %1165 = bitcast float* %1164 to <8 x float>*
  %1166 = load <8 x float>, <8 x float>* %1165, align 1, !tbaa !12
  %1167 = add nsw i64 %1119, 96
  %1168 = getelementptr inbounds float, float* %3, i64 %1167
  %1169 = bitcast float* %1168 to <8 x float>*
  %1170 = load <8 x float>, <8 x float>* %1169, align 1, !tbaa !12
  %1171 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1122, <8 x float> %50, <8 x float> %1070) #10
  %1172 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1126, <8 x float> %50, <8 x float> %1074) #10
  %1173 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1130, <8 x float> %50, <8 x float> %1078) #10
  %1174 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1134, <8 x float> %50, <8 x float> %1082) #10
  %1175 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1138, <8 x float> %50, <8 x float> %1086) #10
  %1176 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1142, <8 x float> %50, <8 x float> %1090) #10
  %1177 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1146, <8 x float> %50, <8 x float> %1094) #10
  %1178 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1150, <8 x float> %50, <8 x float> %1098) #10
  %1179 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1154, <8 x float> %50, <8 x float> %1102) #10
  %1180 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1158, <8 x float> %50, <8 x float> %1106) #10
  %1181 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1162, <8 x float> %50, <8 x float> %1110) #10
  %1182 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1166, <8 x float> %50, <8 x float> %1114) #10
  %1183 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1170, <8 x float> %50, <8 x float> %1118) #10
  store <8 x float> %1171, <8 x float>* %1069, align 1, !tbaa !12
  store <8 x float> %1172, <8 x float>* %1073, align 1, !tbaa !12
  store <8 x float> %1173, <8 x float>* %1077, align 1, !tbaa !12
  store <8 x float> %1174, <8 x float>* %1081, align 1, !tbaa !12
  store <8 x float> %1175, <8 x float>* %1085, align 1, !tbaa !12
  store <8 x float> %1176, <8 x float>* %1089, align 1, !tbaa !12
  store <8 x float> %1177, <8 x float>* %1093, align 1, !tbaa !12
  store <8 x float> %1178, <8 x float>* %1097, align 1, !tbaa !12
  store <8 x float> %1179, <8 x float>* %1101, align 1, !tbaa !12
  store <8 x float> %1180, <8 x float>* %1105, align 1, !tbaa !12
  store <8 x float> %1181, <8 x float>* %1109, align 1, !tbaa !12
  store <8 x float> %1182, <8 x float>* %1113, align 1, !tbaa !12
  store <8 x float> %1183, <8 x float>* %1117, align 1, !tbaa !12
  %1184 = add nuw nsw i64 %1014, 104
  %1185 = icmp ult i64 %1184, %832
  br i1 %1185, label %1013, label %1006

1186:                                             ; preds = %1192
  br i1 %1008, label %1187, label %1558

1187:                                             ; preds = %1186
  %1188 = trunc i64 %56 to i32
  %1189 = mul nsw i32 %1007, %1188
  %1190 = sext i32 %1189 to i64
  %1191 = zext i32 %1007 to i64
  br label %1385

1192:                                             ; preds = %1009, %1192
  %1193 = phi i64 [ 0, %1009 ], [ %1377, %1192 ]
  %1194 = getelementptr inbounds float, float* %5, i64 %1193
  %1195 = getelementptr inbounds float, float* %1194, i64 8
  %1196 = bitcast float* %1195 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1196, i32 0, i32 1, i32 1)
  %1197 = getelementptr inbounds float, float* %3, i64 %1193
  %1198 = getelementptr inbounds float, float* %1197, i64 8
  %1199 = bitcast float* %1198 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1199, i32 0, i32 1, i32 1)
  %1200 = getelementptr inbounds float, float* %1194, i64 16
  %1201 = bitcast float* %1200 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1201, i32 0, i32 1, i32 1)
  %1202 = getelementptr inbounds float, float* %1197, i64 16
  %1203 = bitcast float* %1202 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1203, i32 0, i32 1, i32 1)
  %1204 = getelementptr inbounds float, float* %1194, i64 24
  %1205 = bitcast float* %1204 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1205, i32 0, i32 1, i32 1)
  %1206 = getelementptr inbounds float, float* %1197, i64 24
  %1207 = bitcast float* %1206 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1207, i32 0, i32 1, i32 1)
  %1208 = getelementptr inbounds float, float* %1194, i64 32
  %1209 = bitcast float* %1208 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1209, i32 0, i32 1, i32 1)
  %1210 = getelementptr inbounds float, float* %1197, i64 32
  %1211 = bitcast float* %1210 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1211, i32 0, i32 1, i32 1)
  %1212 = getelementptr inbounds float, float* %1194, i64 40
  %1213 = bitcast float* %1212 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1213, i32 0, i32 1, i32 1)
  %1214 = getelementptr inbounds float, float* %1197, i64 40
  %1215 = bitcast float* %1214 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1215, i32 0, i32 1, i32 1)
  %1216 = getelementptr inbounds float, float* %1194, i64 48
  %1217 = bitcast float* %1216 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1217, i32 0, i32 1, i32 1)
  %1218 = getelementptr inbounds float, float* %1197, i64 48
  %1219 = bitcast float* %1218 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1219, i32 0, i32 1, i32 1)
  %1220 = getelementptr inbounds float, float* %1194, i64 56
  %1221 = bitcast float* %1220 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1221, i32 0, i32 1, i32 1)
  %1222 = getelementptr inbounds float, float* %1197, i64 56
  %1223 = bitcast float* %1222 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1223, i32 0, i32 1, i32 1)
  %1224 = getelementptr inbounds float, float* %1194, i64 64
  %1225 = bitcast float* %1224 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1225, i32 0, i32 1, i32 1)
  %1226 = getelementptr inbounds float, float* %1197, i64 64
  %1227 = bitcast float* %1226 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1227, i32 0, i32 1, i32 1)
  %1228 = getelementptr inbounds float, float* %1194, i64 72
  %1229 = bitcast float* %1228 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1229, i32 0, i32 1, i32 1)
  %1230 = getelementptr inbounds float, float* %1197, i64 72
  %1231 = bitcast float* %1230 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1231, i32 0, i32 1, i32 1)
  %1232 = getelementptr inbounds float, float* %1194, i64 80
  %1233 = bitcast float* %1232 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1233, i32 0, i32 1, i32 1)
  %1234 = getelementptr inbounds float, float* %1197, i64 80
  %1235 = bitcast float* %1234 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1235, i32 0, i32 1, i32 1)
  %1236 = getelementptr inbounds float, float* %1194, i64 88
  %1237 = bitcast float* %1236 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1237, i32 0, i32 1, i32 1)
  %1238 = getelementptr inbounds float, float* %1197, i64 88
  %1239 = bitcast float* %1238 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1239, i32 0, i32 1, i32 1)
  %1240 = getelementptr inbounds float, float* %1194, i64 96
  %1241 = bitcast float* %1240 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1241, i32 0, i32 1, i32 1)
  %1242 = getelementptr inbounds float, float* %1197, i64 96
  %1243 = bitcast float* %1242 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1243, i32 0, i32 1, i32 1)
  %1244 = getelementptr inbounds float, float* %1194, i64 104
  %1245 = bitcast float* %1244 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1245, i32 0, i32 1, i32 1)
  %1246 = getelementptr inbounds float, float* %1197, i64 104
  %1247 = bitcast float* %1246 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1247, i32 0, i32 1, i32 1)
  %1248 = bitcast float* %1194 to <8 x float>*
  %1249 = load <8 x float>, <8 x float>* %1248, align 1, !tbaa !12
  %1250 = add nuw nsw i64 %1193, 8
  %1251 = getelementptr inbounds float, float* %5, i64 %1250
  %1252 = bitcast float* %1251 to <8 x float>*
  %1253 = load <8 x float>, <8 x float>* %1252, align 1, !tbaa !12
  %1254 = add nuw nsw i64 %1193, 16
  %1255 = getelementptr inbounds float, float* %5, i64 %1254
  %1256 = bitcast float* %1255 to <8 x float>*
  %1257 = load <8 x float>, <8 x float>* %1256, align 1, !tbaa !12
  %1258 = add nuw nsw i64 %1193, 24
  %1259 = getelementptr inbounds float, float* %5, i64 %1258
  %1260 = bitcast float* %1259 to <8 x float>*
  %1261 = load <8 x float>, <8 x float>* %1260, align 1, !tbaa !12
  %1262 = add nuw nsw i64 %1193, 32
  %1263 = getelementptr inbounds float, float* %5, i64 %1262
  %1264 = bitcast float* %1263 to <8 x float>*
  %1265 = load <8 x float>, <8 x float>* %1264, align 1, !tbaa !12
  %1266 = add nuw nsw i64 %1193, 40
  %1267 = getelementptr inbounds float, float* %5, i64 %1266
  %1268 = bitcast float* %1267 to <8 x float>*
  %1269 = load <8 x float>, <8 x float>* %1268, align 1, !tbaa !12
  %1270 = add nuw nsw i64 %1193, 48
  %1271 = getelementptr inbounds float, float* %5, i64 %1270
  %1272 = bitcast float* %1271 to <8 x float>*
  %1273 = load <8 x float>, <8 x float>* %1272, align 1, !tbaa !12
  %1274 = add nuw nsw i64 %1193, 56
  %1275 = getelementptr inbounds float, float* %5, i64 %1274
  %1276 = bitcast float* %1275 to <8 x float>*
  %1277 = load <8 x float>, <8 x float>* %1276, align 1, !tbaa !12
  %1278 = add nuw nsw i64 %1193, 64
  %1279 = getelementptr inbounds float, float* %5, i64 %1278
  %1280 = bitcast float* %1279 to <8 x float>*
  %1281 = load <8 x float>, <8 x float>* %1280, align 1, !tbaa !12
  %1282 = add nuw nsw i64 %1193, 72
  %1283 = getelementptr inbounds float, float* %5, i64 %1282
  %1284 = bitcast float* %1283 to <8 x float>*
  %1285 = load <8 x float>, <8 x float>* %1284, align 1, !tbaa !12
  %1286 = add nuw nsw i64 %1193, 80
  %1287 = getelementptr inbounds float, float* %5, i64 %1286
  %1288 = bitcast float* %1287 to <8 x float>*
  %1289 = load <8 x float>, <8 x float>* %1288, align 1, !tbaa !12
  %1290 = add nuw nsw i64 %1193, 88
  %1291 = getelementptr inbounds float, float* %5, i64 %1290
  %1292 = bitcast float* %1291 to <8 x float>*
  %1293 = load <8 x float>, <8 x float>* %1292, align 1, !tbaa !12
  %1294 = add nuw nsw i64 %1193, 96
  %1295 = getelementptr inbounds float, float* %5, i64 %1294
  %1296 = bitcast float* %1295 to <8 x float>*
  %1297 = load <8 x float>, <8 x float>* %1296, align 1, !tbaa !12
  %1298 = trunc i64 %1193 to i32
  %1299 = add nsw i32 %1012, %1298
  %1300 = sext i32 %1299 to i64
  %1301 = getelementptr inbounds float, float* %3, i64 %1300
  %1302 = bitcast float* %1301 to <8 x float>*
  %1303 = load <8 x float>, <8 x float>* %1302, align 1, !tbaa !12
  %1304 = add nsw i32 %1299, 8
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds float, float* %3, i64 %1305
  %1307 = bitcast float* %1306 to <8 x float>*
  %1308 = load <8 x float>, <8 x float>* %1307, align 1, !tbaa !12
  %1309 = add nsw i32 %1299, 16
  %1310 = sext i32 %1309 to i64
  %1311 = getelementptr inbounds float, float* %3, i64 %1310
  %1312 = bitcast float* %1311 to <8 x float>*
  %1313 = load <8 x float>, <8 x float>* %1312, align 1, !tbaa !12
  %1314 = add nsw i32 %1299, 24
  %1315 = sext i32 %1314 to i64
  %1316 = getelementptr inbounds float, float* %3, i64 %1315
  %1317 = bitcast float* %1316 to <8 x float>*
  %1318 = load <8 x float>, <8 x float>* %1317, align 1, !tbaa !12
  %1319 = add nsw i32 %1299, 32
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds float, float* %3, i64 %1320
  %1322 = bitcast float* %1321 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = add nsw i32 %1299, 40
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds float, float* %3, i64 %1325
  %1327 = bitcast float* %1326 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = add nsw i32 %1299, 48
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds float, float* %3, i64 %1330
  %1332 = bitcast float* %1331 to <8 x float>*
  %1333 = load <8 x float>, <8 x float>* %1332, align 1, !tbaa !12
  %1334 = add nsw i32 %1299, 56
  %1335 = sext i32 %1334 to i64
  %1336 = getelementptr inbounds float, float* %3, i64 %1335
  %1337 = bitcast float* %1336 to <8 x float>*
  %1338 = load <8 x float>, <8 x float>* %1337, align 1, !tbaa !12
  %1339 = add nsw i32 %1299, 64
  %1340 = sext i32 %1339 to i64
  %1341 = getelementptr inbounds float, float* %3, i64 %1340
  %1342 = bitcast float* %1341 to <8 x float>*
  %1343 = load <8 x float>, <8 x float>* %1342, align 1, !tbaa !12
  %1344 = add nsw i32 %1299, 72
  %1345 = sext i32 %1344 to i64
  %1346 = getelementptr inbounds float, float* %3, i64 %1345
  %1347 = bitcast float* %1346 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = add nsw i32 %1299, 80
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds float, float* %3, i64 %1350
  %1352 = bitcast float* %1351 to <8 x float>*
  %1353 = load <8 x float>, <8 x float>* %1352, align 1, !tbaa !12
  %1354 = add nsw i32 %1299, 88
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds float, float* %3, i64 %1355
  %1357 = bitcast float* %1356 to <8 x float>*
  %1358 = load <8 x float>, <8 x float>* %1357, align 1, !tbaa !12
  %1359 = add nsw i32 %1299, 96
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds float, float* %3, i64 %1360
  %1362 = bitcast float* %1361 to <8 x float>*
  %1363 = load <8 x float>, <8 x float>* %1362, align 1, !tbaa !12
  %1364 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1303, <8 x float> %55, <8 x float> %1249) #10
  %1365 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1308, <8 x float> %55, <8 x float> %1253) #10
  %1366 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1313, <8 x float> %55, <8 x float> %1257) #10
  %1367 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1318, <8 x float> %55, <8 x float> %1261) #10
  %1368 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1323, <8 x float> %55, <8 x float> %1265) #10
  %1369 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1328, <8 x float> %55, <8 x float> %1269) #10
  %1370 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1333, <8 x float> %55, <8 x float> %1273) #10
  %1371 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1338, <8 x float> %55, <8 x float> %1277) #10
  %1372 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1343, <8 x float> %55, <8 x float> %1281) #10
  %1373 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1348, <8 x float> %55, <8 x float> %1285) #10
  %1374 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1353, <8 x float> %55, <8 x float> %1289) #10
  %1375 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1358, <8 x float> %55, <8 x float> %1293) #10
  %1376 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1363, <8 x float> %55, <8 x float> %1297) #10
  store <8 x float> %1364, <8 x float>* %1248, align 1, !tbaa !12
  store <8 x float> %1365, <8 x float>* %1252, align 1, !tbaa !12
  store <8 x float> %1366, <8 x float>* %1256, align 1, !tbaa !12
  store <8 x float> %1367, <8 x float>* %1260, align 1, !tbaa !12
  store <8 x float> %1368, <8 x float>* %1264, align 1, !tbaa !12
  store <8 x float> %1369, <8 x float>* %1268, align 1, !tbaa !12
  store <8 x float> %1370, <8 x float>* %1272, align 1, !tbaa !12
  store <8 x float> %1371, <8 x float>* %1276, align 1, !tbaa !12
  store <8 x float> %1372, <8 x float>* %1280, align 1, !tbaa !12
  store <8 x float> %1373, <8 x float>* %1284, align 1, !tbaa !12
  store <8 x float> %1374, <8 x float>* %1288, align 1, !tbaa !12
  store <8 x float> %1375, <8 x float>* %1292, align 1, !tbaa !12
  store <8 x float> %1376, <8 x float>* %1296, align 1, !tbaa !12
  %1377 = add nuw nsw i64 %1193, 104
  %1378 = icmp ult i64 %1377, %1010
  br i1 %1378, label %1192, label %1186

1379:                                             ; preds = %1385
  br i1 %1008, label %1380, label %1558

1380:                                             ; preds = %1379
  %1381 = trunc i64 %61 to i32
  %1382 = mul nsw i32 %1007, %1381
  %1383 = sext i32 %1382 to i64
  %1384 = zext i32 %1007 to i64
  br label %1565

1385:                                             ; preds = %1187, %1385
  %1386 = phi i64 [ 0, %1187 ], [ %1556, %1385 ]
  %1387 = getelementptr inbounds float, float* %5, i64 %1386
  %1388 = getelementptr inbounds float, float* %1387, i64 8
  %1389 = bitcast float* %1388 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1389, i32 0, i32 1, i32 1)
  %1390 = getelementptr inbounds float, float* %3, i64 %1386
  %1391 = getelementptr inbounds float, float* %1390, i64 8
  %1392 = bitcast float* %1391 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1392, i32 0, i32 1, i32 1)
  %1393 = getelementptr inbounds float, float* %1387, i64 16
  %1394 = bitcast float* %1393 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1394, i32 0, i32 1, i32 1)
  %1395 = getelementptr inbounds float, float* %1390, i64 16
  %1396 = bitcast float* %1395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1396, i32 0, i32 1, i32 1)
  %1397 = getelementptr inbounds float, float* %1387, i64 24
  %1398 = bitcast float* %1397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1398, i32 0, i32 1, i32 1)
  %1399 = getelementptr inbounds float, float* %1390, i64 24
  %1400 = bitcast float* %1399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1400, i32 0, i32 1, i32 1)
  %1401 = getelementptr inbounds float, float* %1387, i64 32
  %1402 = bitcast float* %1401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1402, i32 0, i32 1, i32 1)
  %1403 = getelementptr inbounds float, float* %1390, i64 32
  %1404 = bitcast float* %1403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1404, i32 0, i32 1, i32 1)
  %1405 = getelementptr inbounds float, float* %1387, i64 40
  %1406 = bitcast float* %1405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1406, i32 0, i32 1, i32 1)
  %1407 = getelementptr inbounds float, float* %1390, i64 40
  %1408 = bitcast float* %1407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1408, i32 0, i32 1, i32 1)
  %1409 = getelementptr inbounds float, float* %1387, i64 48
  %1410 = bitcast float* %1409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1410, i32 0, i32 1, i32 1)
  %1411 = getelementptr inbounds float, float* %1390, i64 48
  %1412 = bitcast float* %1411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1412, i32 0, i32 1, i32 1)
  %1413 = getelementptr inbounds float, float* %1387, i64 56
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %1390, i64 56
  %1416 = bitcast float* %1415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1416, i32 0, i32 1, i32 1)
  %1417 = getelementptr inbounds float, float* %1387, i64 64
  %1418 = bitcast float* %1417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1418, i32 0, i32 1, i32 1)
  %1419 = getelementptr inbounds float, float* %1390, i64 64
  %1420 = bitcast float* %1419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1420, i32 0, i32 1, i32 1)
  %1421 = getelementptr inbounds float, float* %1387, i64 72
  %1422 = bitcast float* %1421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1422, i32 0, i32 1, i32 1)
  %1423 = getelementptr inbounds float, float* %1390, i64 72
  %1424 = bitcast float* %1423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1424, i32 0, i32 1, i32 1)
  %1425 = getelementptr inbounds float, float* %1387, i64 80
  %1426 = bitcast float* %1425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1426, i32 0, i32 1, i32 1)
  %1427 = getelementptr inbounds float, float* %1390, i64 80
  %1428 = bitcast float* %1427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1428, i32 0, i32 1, i32 1)
  %1429 = getelementptr inbounds float, float* %1387, i64 88
  %1430 = bitcast float* %1429 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1430, i32 0, i32 1, i32 1)
  %1431 = getelementptr inbounds float, float* %1390, i64 88
  %1432 = bitcast float* %1431 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1432, i32 0, i32 1, i32 1)
  %1433 = getelementptr inbounds float, float* %1387, i64 96
  %1434 = bitcast float* %1433 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1434, i32 0, i32 1, i32 1)
  %1435 = getelementptr inbounds float, float* %1390, i64 96
  %1436 = bitcast float* %1435 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1436, i32 0, i32 1, i32 1)
  %1437 = getelementptr inbounds float, float* %1387, i64 104
  %1438 = bitcast float* %1437 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1438, i32 0, i32 1, i32 1)
  %1439 = getelementptr inbounds float, float* %1390, i64 104
  %1440 = bitcast float* %1439 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1440, i32 0, i32 1, i32 1)
  %1441 = bitcast float* %1387 to <8 x float>*
  %1442 = load <8 x float>, <8 x float>* %1441, align 1, !tbaa !12
  %1443 = add nuw nsw i64 %1386, 8
  %1444 = getelementptr inbounds float, float* %5, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nuw nsw i64 %1386, 16
  %1448 = getelementptr inbounds float, float* %5, i64 %1447
  %1449 = bitcast float* %1448 to <8 x float>*
  %1450 = load <8 x float>, <8 x float>* %1449, align 1, !tbaa !12
  %1451 = add nuw nsw i64 %1386, 24
  %1452 = getelementptr inbounds float, float* %5, i64 %1451
  %1453 = bitcast float* %1452 to <8 x float>*
  %1454 = load <8 x float>, <8 x float>* %1453, align 1, !tbaa !12
  %1455 = add nuw nsw i64 %1386, 32
  %1456 = getelementptr inbounds float, float* %5, i64 %1455
  %1457 = bitcast float* %1456 to <8 x float>*
  %1458 = load <8 x float>, <8 x float>* %1457, align 1, !tbaa !12
  %1459 = add nuw nsw i64 %1386, 40
  %1460 = getelementptr inbounds float, float* %5, i64 %1459
  %1461 = bitcast float* %1460 to <8 x float>*
  %1462 = load <8 x float>, <8 x float>* %1461, align 1, !tbaa !12
  %1463 = add nuw nsw i64 %1386, 48
  %1464 = getelementptr inbounds float, float* %5, i64 %1463
  %1465 = bitcast float* %1464 to <8 x float>*
  %1466 = load <8 x float>, <8 x float>* %1465, align 1, !tbaa !12
  %1467 = add nuw nsw i64 %1386, 56
  %1468 = getelementptr inbounds float, float* %5, i64 %1467
  %1469 = bitcast float* %1468 to <8 x float>*
  %1470 = load <8 x float>, <8 x float>* %1469, align 1, !tbaa !12
  %1471 = add nuw nsw i64 %1386, 64
  %1472 = getelementptr inbounds float, float* %5, i64 %1471
  %1473 = bitcast float* %1472 to <8 x float>*
  %1474 = load <8 x float>, <8 x float>* %1473, align 1, !tbaa !12
  %1475 = add nuw nsw i64 %1386, 72
  %1476 = getelementptr inbounds float, float* %5, i64 %1475
  %1477 = bitcast float* %1476 to <8 x float>*
  %1478 = load <8 x float>, <8 x float>* %1477, align 1, !tbaa !12
  %1479 = add nuw nsw i64 %1386, 80
  %1480 = getelementptr inbounds float, float* %5, i64 %1479
  %1481 = bitcast float* %1480 to <8 x float>*
  %1482 = load <8 x float>, <8 x float>* %1481, align 1, !tbaa !12
  %1483 = add nuw nsw i64 %1386, 88
  %1484 = getelementptr inbounds float, float* %5, i64 %1483
  %1485 = bitcast float* %1484 to <8 x float>*
  %1486 = load <8 x float>, <8 x float>* %1485, align 1, !tbaa !12
  %1487 = add nuw nsw i64 %1386, 96
  %1488 = getelementptr inbounds float, float* %5, i64 %1487
  %1489 = bitcast float* %1488 to <8 x float>*
  %1490 = load <8 x float>, <8 x float>* %1489, align 1, !tbaa !12
  %1491 = add nsw i64 %1386, %1190
  %1492 = getelementptr inbounds float, float* %3, i64 %1491
  %1493 = bitcast float* %1492 to <8 x float>*
  %1494 = load <8 x float>, <8 x float>* %1493, align 1, !tbaa !12
  %1495 = add nsw i64 %1491, 8
  %1496 = getelementptr inbounds float, float* %3, i64 %1495
  %1497 = bitcast float* %1496 to <8 x float>*
  %1498 = load <8 x float>, <8 x float>* %1497, align 1, !tbaa !12
  %1499 = add nsw i64 %1491, 16
  %1500 = getelementptr inbounds float, float* %3, i64 %1499
  %1501 = bitcast float* %1500 to <8 x float>*
  %1502 = load <8 x float>, <8 x float>* %1501, align 1, !tbaa !12
  %1503 = add nsw i64 %1491, 24
  %1504 = getelementptr inbounds float, float* %3, i64 %1503
  %1505 = bitcast float* %1504 to <8 x float>*
  %1506 = load <8 x float>, <8 x float>* %1505, align 1, !tbaa !12
  %1507 = add nsw i64 %1491, 32
  %1508 = getelementptr inbounds float, float* %3, i64 %1507
  %1509 = bitcast float* %1508 to <8 x float>*
  %1510 = load <8 x float>, <8 x float>* %1509, align 1, !tbaa !12
  %1511 = add nsw i64 %1491, 40
  %1512 = getelementptr inbounds float, float* %3, i64 %1511
  %1513 = bitcast float* %1512 to <8 x float>*
  %1514 = load <8 x float>, <8 x float>* %1513, align 1, !tbaa !12
  %1515 = add nsw i64 %1491, 48
  %1516 = getelementptr inbounds float, float* %3, i64 %1515
  %1517 = bitcast float* %1516 to <8 x float>*
  %1518 = load <8 x float>, <8 x float>* %1517, align 1, !tbaa !12
  %1519 = add nsw i64 %1491, 56
  %1520 = getelementptr inbounds float, float* %3, i64 %1519
  %1521 = bitcast float* %1520 to <8 x float>*
  %1522 = load <8 x float>, <8 x float>* %1521, align 1, !tbaa !12
  %1523 = add nsw i64 %1491, 64
  %1524 = getelementptr inbounds float, float* %3, i64 %1523
  %1525 = bitcast float* %1524 to <8 x float>*
  %1526 = load <8 x float>, <8 x float>* %1525, align 1, !tbaa !12
  %1527 = add nsw i64 %1491, 72
  %1528 = getelementptr inbounds float, float* %3, i64 %1527
  %1529 = bitcast float* %1528 to <8 x float>*
  %1530 = load <8 x float>, <8 x float>* %1529, align 1, !tbaa !12
  %1531 = add nsw i64 %1491, 80
  %1532 = getelementptr inbounds float, float* %3, i64 %1531
  %1533 = bitcast float* %1532 to <8 x float>*
  %1534 = load <8 x float>, <8 x float>* %1533, align 1, !tbaa !12
  %1535 = add nsw i64 %1491, 88
  %1536 = getelementptr inbounds float, float* %3, i64 %1535
  %1537 = bitcast float* %1536 to <8 x float>*
  %1538 = load <8 x float>, <8 x float>* %1537, align 1, !tbaa !12
  %1539 = add nsw i64 %1491, 96
  %1540 = getelementptr inbounds float, float* %3, i64 %1539
  %1541 = bitcast float* %1540 to <8 x float>*
  %1542 = load <8 x float>, <8 x float>* %1541, align 1, !tbaa !12
  %1543 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1494, <8 x float> %60, <8 x float> %1442) #10
  %1544 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1498, <8 x float> %60, <8 x float> %1446) #10
  %1545 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1502, <8 x float> %60, <8 x float> %1450) #10
  %1546 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1506, <8 x float> %60, <8 x float> %1454) #10
  %1547 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1510, <8 x float> %60, <8 x float> %1458) #10
  %1548 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1514, <8 x float> %60, <8 x float> %1462) #10
  %1549 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1518, <8 x float> %60, <8 x float> %1466) #10
  %1550 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1522, <8 x float> %60, <8 x float> %1470) #10
  %1551 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1526, <8 x float> %60, <8 x float> %1474) #10
  %1552 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1530, <8 x float> %60, <8 x float> %1478) #10
  %1553 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1534, <8 x float> %60, <8 x float> %1482) #10
  %1554 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1538, <8 x float> %60, <8 x float> %1486) #10
  %1555 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1542, <8 x float> %60, <8 x float> %1490) #10
  store <8 x float> %1543, <8 x float>* %1441, align 1, !tbaa !12
  store <8 x float> %1544, <8 x float>* %1445, align 1, !tbaa !12
  store <8 x float> %1545, <8 x float>* %1449, align 1, !tbaa !12
  store <8 x float> %1546, <8 x float>* %1453, align 1, !tbaa !12
  store <8 x float> %1547, <8 x float>* %1457, align 1, !tbaa !12
  store <8 x float> %1548, <8 x float>* %1461, align 1, !tbaa !12
  store <8 x float> %1549, <8 x float>* %1465, align 1, !tbaa !12
  store <8 x float> %1550, <8 x float>* %1469, align 1, !tbaa !12
  store <8 x float> %1551, <8 x float>* %1473, align 1, !tbaa !12
  store <8 x float> %1552, <8 x float>* %1477, align 1, !tbaa !12
  store <8 x float> %1553, <8 x float>* %1481, align 1, !tbaa !12
  store <8 x float> %1554, <8 x float>* %1485, align 1, !tbaa !12
  store <8 x float> %1555, <8 x float>* %1489, align 1, !tbaa !12
  %1556 = add nuw nsw i64 %1386, 104
  %1557 = icmp ult i64 %1556, %1191
  br i1 %1557, label %1385, label %1379

1558:                                             ; preds = %1565, %1186, %1379
  %1559 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1560 = icmp sgt i32 %1559, 0
  br i1 %1560, label %1561, label %1931

1561:                                             ; preds = %1558
  %1562 = zext i32 %1559 to i64
  %1563 = trunc i64 %66 to i32
  %1564 = mul nsw i32 %1559, %1563
  br label %1744

1565:                                             ; preds = %1380, %1565
  %1566 = phi i64 [ 0, %1380 ], [ %1736, %1565 ]
  %1567 = getelementptr inbounds float, float* %5, i64 %1566
  %1568 = getelementptr inbounds float, float* %1567, i64 8
  %1569 = bitcast float* %1568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1569, i32 0, i32 1, i32 1)
  %1570 = getelementptr inbounds float, float* %3, i64 %1566
  %1571 = getelementptr inbounds float, float* %1570, i64 8
  %1572 = bitcast float* %1571 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1572, i32 0, i32 1, i32 1)
  %1573 = getelementptr inbounds float, float* %1567, i64 16
  %1574 = bitcast float* %1573 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1574, i32 0, i32 1, i32 1)
  %1575 = getelementptr inbounds float, float* %1570, i64 16
  %1576 = bitcast float* %1575 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1576, i32 0, i32 1, i32 1)
  %1577 = getelementptr inbounds float, float* %1567, i64 24
  %1578 = bitcast float* %1577 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1578, i32 0, i32 1, i32 1)
  %1579 = getelementptr inbounds float, float* %1570, i64 24
  %1580 = bitcast float* %1579 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1580, i32 0, i32 1, i32 1)
  %1581 = getelementptr inbounds float, float* %1567, i64 32
  %1582 = bitcast float* %1581 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1582, i32 0, i32 1, i32 1)
  %1583 = getelementptr inbounds float, float* %1570, i64 32
  %1584 = bitcast float* %1583 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1584, i32 0, i32 1, i32 1)
  %1585 = getelementptr inbounds float, float* %1567, i64 40
  %1586 = bitcast float* %1585 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1586, i32 0, i32 1, i32 1)
  %1587 = getelementptr inbounds float, float* %1570, i64 40
  %1588 = bitcast float* %1587 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1588, i32 0, i32 1, i32 1)
  %1589 = getelementptr inbounds float, float* %1567, i64 48
  %1590 = bitcast float* %1589 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1590, i32 0, i32 1, i32 1)
  %1591 = getelementptr inbounds float, float* %1570, i64 48
  %1592 = bitcast float* %1591 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1592, i32 0, i32 1, i32 1)
  %1593 = getelementptr inbounds float, float* %1567, i64 56
  %1594 = bitcast float* %1593 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1594, i32 0, i32 1, i32 1)
  %1595 = getelementptr inbounds float, float* %1570, i64 56
  %1596 = bitcast float* %1595 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1596, i32 0, i32 1, i32 1)
  %1597 = getelementptr inbounds float, float* %1567, i64 64
  %1598 = bitcast float* %1597 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1598, i32 0, i32 1, i32 1)
  %1599 = getelementptr inbounds float, float* %1570, i64 64
  %1600 = bitcast float* %1599 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1600, i32 0, i32 1, i32 1)
  %1601 = getelementptr inbounds float, float* %1567, i64 72
  %1602 = bitcast float* %1601 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1602, i32 0, i32 1, i32 1)
  %1603 = getelementptr inbounds float, float* %1570, i64 72
  %1604 = bitcast float* %1603 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1604, i32 0, i32 1, i32 1)
  %1605 = getelementptr inbounds float, float* %1567, i64 80
  %1606 = bitcast float* %1605 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1606, i32 0, i32 1, i32 1)
  %1607 = getelementptr inbounds float, float* %1570, i64 80
  %1608 = bitcast float* %1607 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1608, i32 0, i32 1, i32 1)
  %1609 = getelementptr inbounds float, float* %1567, i64 88
  %1610 = bitcast float* %1609 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1610, i32 0, i32 1, i32 1)
  %1611 = getelementptr inbounds float, float* %1570, i64 88
  %1612 = bitcast float* %1611 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1612, i32 0, i32 1, i32 1)
  %1613 = getelementptr inbounds float, float* %1567, i64 96
  %1614 = bitcast float* %1613 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1614, i32 0, i32 1, i32 1)
  %1615 = getelementptr inbounds float, float* %1570, i64 96
  %1616 = bitcast float* %1615 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1616, i32 0, i32 1, i32 1)
  %1617 = getelementptr inbounds float, float* %1567, i64 104
  %1618 = bitcast float* %1617 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1618, i32 0, i32 1, i32 1)
  %1619 = getelementptr inbounds float, float* %1570, i64 104
  %1620 = bitcast float* %1619 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1620, i32 0, i32 1, i32 1)
  %1621 = bitcast float* %1567 to <8 x float>*
  %1622 = load <8 x float>, <8 x float>* %1621, align 1, !tbaa !12
  %1623 = add nuw nsw i64 %1566, 8
  %1624 = getelementptr inbounds float, float* %5, i64 %1623
  %1625 = bitcast float* %1624 to <8 x float>*
  %1626 = load <8 x float>, <8 x float>* %1625, align 1, !tbaa !12
  %1627 = add nuw nsw i64 %1566, 16
  %1628 = getelementptr inbounds float, float* %5, i64 %1627
  %1629 = bitcast float* %1628 to <8 x float>*
  %1630 = load <8 x float>, <8 x float>* %1629, align 1, !tbaa !12
  %1631 = add nuw nsw i64 %1566, 24
  %1632 = getelementptr inbounds float, float* %5, i64 %1631
  %1633 = bitcast float* %1632 to <8 x float>*
  %1634 = load <8 x float>, <8 x float>* %1633, align 1, !tbaa !12
  %1635 = add nuw nsw i64 %1566, 32
  %1636 = getelementptr inbounds float, float* %5, i64 %1635
  %1637 = bitcast float* %1636 to <8 x float>*
  %1638 = load <8 x float>, <8 x float>* %1637, align 1, !tbaa !12
  %1639 = add nuw nsw i64 %1566, 40
  %1640 = getelementptr inbounds float, float* %5, i64 %1639
  %1641 = bitcast float* %1640 to <8 x float>*
  %1642 = load <8 x float>, <8 x float>* %1641, align 1, !tbaa !12
  %1643 = add nuw nsw i64 %1566, 48
  %1644 = getelementptr inbounds float, float* %5, i64 %1643
  %1645 = bitcast float* %1644 to <8 x float>*
  %1646 = load <8 x float>, <8 x float>* %1645, align 1, !tbaa !12
  %1647 = add nuw nsw i64 %1566, 56
  %1648 = getelementptr inbounds float, float* %5, i64 %1647
  %1649 = bitcast float* %1648 to <8 x float>*
  %1650 = load <8 x float>, <8 x float>* %1649, align 1, !tbaa !12
  %1651 = add nuw nsw i64 %1566, 64
  %1652 = getelementptr inbounds float, float* %5, i64 %1651
  %1653 = bitcast float* %1652 to <8 x float>*
  %1654 = load <8 x float>, <8 x float>* %1653, align 1, !tbaa !12
  %1655 = add nuw nsw i64 %1566, 72
  %1656 = getelementptr inbounds float, float* %5, i64 %1655
  %1657 = bitcast float* %1656 to <8 x float>*
  %1658 = load <8 x float>, <8 x float>* %1657, align 1, !tbaa !12
  %1659 = add nuw nsw i64 %1566, 80
  %1660 = getelementptr inbounds float, float* %5, i64 %1659
  %1661 = bitcast float* %1660 to <8 x float>*
  %1662 = load <8 x float>, <8 x float>* %1661, align 1, !tbaa !12
  %1663 = add nuw nsw i64 %1566, 88
  %1664 = getelementptr inbounds float, float* %5, i64 %1663
  %1665 = bitcast float* %1664 to <8 x float>*
  %1666 = load <8 x float>, <8 x float>* %1665, align 1, !tbaa !12
  %1667 = add nuw nsw i64 %1566, 96
  %1668 = getelementptr inbounds float, float* %5, i64 %1667
  %1669 = bitcast float* %1668 to <8 x float>*
  %1670 = load <8 x float>, <8 x float>* %1669, align 1, !tbaa !12
  %1671 = add nsw i64 %1566, %1383
  %1672 = getelementptr inbounds float, float* %3, i64 %1671
  %1673 = bitcast float* %1672 to <8 x float>*
  %1674 = load <8 x float>, <8 x float>* %1673, align 1, !tbaa !12
  %1675 = add nsw i64 %1671, 8
  %1676 = getelementptr inbounds float, float* %3, i64 %1675
  %1677 = bitcast float* %1676 to <8 x float>*
  %1678 = load <8 x float>, <8 x float>* %1677, align 1, !tbaa !12
  %1679 = add nsw i64 %1671, 16
  %1680 = getelementptr inbounds float, float* %3, i64 %1679
  %1681 = bitcast float* %1680 to <8 x float>*
  %1682 = load <8 x float>, <8 x float>* %1681, align 1, !tbaa !12
  %1683 = add nsw i64 %1671, 24
  %1684 = getelementptr inbounds float, float* %3, i64 %1683
  %1685 = bitcast float* %1684 to <8 x float>*
  %1686 = load <8 x float>, <8 x float>* %1685, align 1, !tbaa !12
  %1687 = add nsw i64 %1671, 32
  %1688 = getelementptr inbounds float, float* %3, i64 %1687
  %1689 = bitcast float* %1688 to <8 x float>*
  %1690 = load <8 x float>, <8 x float>* %1689, align 1, !tbaa !12
  %1691 = add nsw i64 %1671, 40
  %1692 = getelementptr inbounds float, float* %3, i64 %1691
  %1693 = bitcast float* %1692 to <8 x float>*
  %1694 = load <8 x float>, <8 x float>* %1693, align 1, !tbaa !12
  %1695 = add nsw i64 %1671, 48
  %1696 = getelementptr inbounds float, float* %3, i64 %1695
  %1697 = bitcast float* %1696 to <8 x float>*
  %1698 = load <8 x float>, <8 x float>* %1697, align 1, !tbaa !12
  %1699 = add nsw i64 %1671, 56
  %1700 = getelementptr inbounds float, float* %3, i64 %1699
  %1701 = bitcast float* %1700 to <8 x float>*
  %1702 = load <8 x float>, <8 x float>* %1701, align 1, !tbaa !12
  %1703 = add nsw i64 %1671, 64
  %1704 = getelementptr inbounds float, float* %3, i64 %1703
  %1705 = bitcast float* %1704 to <8 x float>*
  %1706 = load <8 x float>, <8 x float>* %1705, align 1, !tbaa !12
  %1707 = add nsw i64 %1671, 72
  %1708 = getelementptr inbounds float, float* %3, i64 %1707
  %1709 = bitcast float* %1708 to <8 x float>*
  %1710 = load <8 x float>, <8 x float>* %1709, align 1, !tbaa !12
  %1711 = add nsw i64 %1671, 80
  %1712 = getelementptr inbounds float, float* %3, i64 %1711
  %1713 = bitcast float* %1712 to <8 x float>*
  %1714 = load <8 x float>, <8 x float>* %1713, align 1, !tbaa !12
  %1715 = add nsw i64 %1671, 88
  %1716 = getelementptr inbounds float, float* %3, i64 %1715
  %1717 = bitcast float* %1716 to <8 x float>*
  %1718 = load <8 x float>, <8 x float>* %1717, align 1, !tbaa !12
  %1719 = add nsw i64 %1671, 96
  %1720 = getelementptr inbounds float, float* %3, i64 %1719
  %1721 = bitcast float* %1720 to <8 x float>*
  %1722 = load <8 x float>, <8 x float>* %1721, align 1, !tbaa !12
  %1723 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1674, <8 x float> %65, <8 x float> %1622) #10
  %1724 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1678, <8 x float> %65, <8 x float> %1626) #10
  %1725 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1682, <8 x float> %65, <8 x float> %1630) #10
  %1726 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1686, <8 x float> %65, <8 x float> %1634) #10
  %1727 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1690, <8 x float> %65, <8 x float> %1638) #10
  %1728 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1694, <8 x float> %65, <8 x float> %1642) #10
  %1729 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1698, <8 x float> %65, <8 x float> %1646) #10
  %1730 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1702, <8 x float> %65, <8 x float> %1650) #10
  %1731 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1706, <8 x float> %65, <8 x float> %1654) #10
  %1732 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1710, <8 x float> %65, <8 x float> %1658) #10
  %1733 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1714, <8 x float> %65, <8 x float> %1662) #10
  %1734 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1718, <8 x float> %65, <8 x float> %1666) #10
  %1735 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1722, <8 x float> %65, <8 x float> %1670) #10
  store <8 x float> %1723, <8 x float>* %1621, align 1, !tbaa !12
  store <8 x float> %1724, <8 x float>* %1625, align 1, !tbaa !12
  store <8 x float> %1725, <8 x float>* %1629, align 1, !tbaa !12
  store <8 x float> %1726, <8 x float>* %1633, align 1, !tbaa !12
  store <8 x float> %1727, <8 x float>* %1637, align 1, !tbaa !12
  store <8 x float> %1728, <8 x float>* %1641, align 1, !tbaa !12
  store <8 x float> %1729, <8 x float>* %1645, align 1, !tbaa !12
  store <8 x float> %1730, <8 x float>* %1649, align 1, !tbaa !12
  store <8 x float> %1731, <8 x float>* %1653, align 1, !tbaa !12
  store <8 x float> %1732, <8 x float>* %1657, align 1, !tbaa !12
  store <8 x float> %1733, <8 x float>* %1661, align 1, !tbaa !12
  store <8 x float> %1734, <8 x float>* %1665, align 1, !tbaa !12
  store <8 x float> %1735, <8 x float>* %1669, align 1, !tbaa !12
  %1736 = add nuw nsw i64 %1566, 104
  %1737 = icmp ult i64 %1736, %1384
  br i1 %1737, label %1565, label %1558

1738:                                             ; preds = %1744
  br i1 %1560, label %1739, label %1931

1739:                                             ; preds = %1738
  %1740 = trunc i64 %71 to i32
  %1741 = mul nsw i32 %1559, %1740
  %1742 = sext i32 %1741 to i64
  %1743 = zext i32 %1559 to i64
  br label %1936

1744:                                             ; preds = %1561, %1744
  %1745 = phi i64 [ 0, %1561 ], [ %1929, %1744 ]
  %1746 = getelementptr inbounds float, float* %5, i64 %1745
  %1747 = getelementptr inbounds float, float* %1746, i64 8
  %1748 = bitcast float* %1747 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1748, i32 0, i32 1, i32 1)
  %1749 = getelementptr inbounds float, float* %3, i64 %1745
  %1750 = getelementptr inbounds float, float* %1749, i64 8
  %1751 = bitcast float* %1750 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1751, i32 0, i32 1, i32 1)
  %1752 = getelementptr inbounds float, float* %1746, i64 16
  %1753 = bitcast float* %1752 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1753, i32 0, i32 1, i32 1)
  %1754 = getelementptr inbounds float, float* %1749, i64 16
  %1755 = bitcast float* %1754 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1755, i32 0, i32 1, i32 1)
  %1756 = getelementptr inbounds float, float* %1746, i64 24
  %1757 = bitcast float* %1756 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1757, i32 0, i32 1, i32 1)
  %1758 = getelementptr inbounds float, float* %1749, i64 24
  %1759 = bitcast float* %1758 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1759, i32 0, i32 1, i32 1)
  %1760 = getelementptr inbounds float, float* %1746, i64 32
  %1761 = bitcast float* %1760 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1761, i32 0, i32 1, i32 1)
  %1762 = getelementptr inbounds float, float* %1749, i64 32
  %1763 = bitcast float* %1762 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1763, i32 0, i32 1, i32 1)
  %1764 = getelementptr inbounds float, float* %1746, i64 40
  %1765 = bitcast float* %1764 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1765, i32 0, i32 1, i32 1)
  %1766 = getelementptr inbounds float, float* %1749, i64 40
  %1767 = bitcast float* %1766 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1767, i32 0, i32 1, i32 1)
  %1768 = getelementptr inbounds float, float* %1746, i64 48
  %1769 = bitcast float* %1768 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1769, i32 0, i32 1, i32 1)
  %1770 = getelementptr inbounds float, float* %1749, i64 48
  %1771 = bitcast float* %1770 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1771, i32 0, i32 1, i32 1)
  %1772 = getelementptr inbounds float, float* %1746, i64 56
  %1773 = bitcast float* %1772 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1773, i32 0, i32 1, i32 1)
  %1774 = getelementptr inbounds float, float* %1749, i64 56
  %1775 = bitcast float* %1774 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1775, i32 0, i32 1, i32 1)
  %1776 = getelementptr inbounds float, float* %1746, i64 64
  %1777 = bitcast float* %1776 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1777, i32 0, i32 1, i32 1)
  %1778 = getelementptr inbounds float, float* %1749, i64 64
  %1779 = bitcast float* %1778 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1779, i32 0, i32 1, i32 1)
  %1780 = getelementptr inbounds float, float* %1746, i64 72
  %1781 = bitcast float* %1780 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1781, i32 0, i32 1, i32 1)
  %1782 = getelementptr inbounds float, float* %1749, i64 72
  %1783 = bitcast float* %1782 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1783, i32 0, i32 1, i32 1)
  %1784 = getelementptr inbounds float, float* %1746, i64 80
  %1785 = bitcast float* %1784 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1785, i32 0, i32 1, i32 1)
  %1786 = getelementptr inbounds float, float* %1749, i64 80
  %1787 = bitcast float* %1786 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1787, i32 0, i32 1, i32 1)
  %1788 = getelementptr inbounds float, float* %1746, i64 88
  %1789 = bitcast float* %1788 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1789, i32 0, i32 1, i32 1)
  %1790 = getelementptr inbounds float, float* %1749, i64 88
  %1791 = bitcast float* %1790 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1791, i32 0, i32 1, i32 1)
  %1792 = getelementptr inbounds float, float* %1746, i64 96
  %1793 = bitcast float* %1792 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1793, i32 0, i32 1, i32 1)
  %1794 = getelementptr inbounds float, float* %1749, i64 96
  %1795 = bitcast float* %1794 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1795, i32 0, i32 1, i32 1)
  %1796 = getelementptr inbounds float, float* %1746, i64 104
  %1797 = bitcast float* %1796 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1797, i32 0, i32 1, i32 1)
  %1798 = getelementptr inbounds float, float* %1749, i64 104
  %1799 = bitcast float* %1798 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1799, i32 0, i32 1, i32 1)
  %1800 = bitcast float* %1746 to <8 x float>*
  %1801 = load <8 x float>, <8 x float>* %1800, align 1, !tbaa !12
  %1802 = add nuw nsw i64 %1745, 8
  %1803 = getelementptr inbounds float, float* %5, i64 %1802
  %1804 = bitcast float* %1803 to <8 x float>*
  %1805 = load <8 x float>, <8 x float>* %1804, align 1, !tbaa !12
  %1806 = add nuw nsw i64 %1745, 16
  %1807 = getelementptr inbounds float, float* %5, i64 %1806
  %1808 = bitcast float* %1807 to <8 x float>*
  %1809 = load <8 x float>, <8 x float>* %1808, align 1, !tbaa !12
  %1810 = add nuw nsw i64 %1745, 24
  %1811 = getelementptr inbounds float, float* %5, i64 %1810
  %1812 = bitcast float* %1811 to <8 x float>*
  %1813 = load <8 x float>, <8 x float>* %1812, align 1, !tbaa !12
  %1814 = add nuw nsw i64 %1745, 32
  %1815 = getelementptr inbounds float, float* %5, i64 %1814
  %1816 = bitcast float* %1815 to <8 x float>*
  %1817 = load <8 x float>, <8 x float>* %1816, align 1, !tbaa !12
  %1818 = add nuw nsw i64 %1745, 40
  %1819 = getelementptr inbounds float, float* %5, i64 %1818
  %1820 = bitcast float* %1819 to <8 x float>*
  %1821 = load <8 x float>, <8 x float>* %1820, align 1, !tbaa !12
  %1822 = add nuw nsw i64 %1745, 48
  %1823 = getelementptr inbounds float, float* %5, i64 %1822
  %1824 = bitcast float* %1823 to <8 x float>*
  %1825 = load <8 x float>, <8 x float>* %1824, align 1, !tbaa !12
  %1826 = add nuw nsw i64 %1745, 56
  %1827 = getelementptr inbounds float, float* %5, i64 %1826
  %1828 = bitcast float* %1827 to <8 x float>*
  %1829 = load <8 x float>, <8 x float>* %1828, align 1, !tbaa !12
  %1830 = add nuw nsw i64 %1745, 64
  %1831 = getelementptr inbounds float, float* %5, i64 %1830
  %1832 = bitcast float* %1831 to <8 x float>*
  %1833 = load <8 x float>, <8 x float>* %1832, align 1, !tbaa !12
  %1834 = add nuw nsw i64 %1745, 72
  %1835 = getelementptr inbounds float, float* %5, i64 %1834
  %1836 = bitcast float* %1835 to <8 x float>*
  %1837 = load <8 x float>, <8 x float>* %1836, align 1, !tbaa !12
  %1838 = add nuw nsw i64 %1745, 80
  %1839 = getelementptr inbounds float, float* %5, i64 %1838
  %1840 = bitcast float* %1839 to <8 x float>*
  %1841 = load <8 x float>, <8 x float>* %1840, align 1, !tbaa !12
  %1842 = add nuw nsw i64 %1745, 88
  %1843 = getelementptr inbounds float, float* %5, i64 %1842
  %1844 = bitcast float* %1843 to <8 x float>*
  %1845 = load <8 x float>, <8 x float>* %1844, align 1, !tbaa !12
  %1846 = add nuw nsw i64 %1745, 96
  %1847 = getelementptr inbounds float, float* %5, i64 %1846
  %1848 = bitcast float* %1847 to <8 x float>*
  %1849 = load <8 x float>, <8 x float>* %1848, align 1, !tbaa !12
  %1850 = trunc i64 %1745 to i32
  %1851 = add nsw i32 %1564, %1850
  %1852 = sext i32 %1851 to i64
  %1853 = getelementptr inbounds float, float* %3, i64 %1852
  %1854 = bitcast float* %1853 to <8 x float>*
  %1855 = load <8 x float>, <8 x float>* %1854, align 1, !tbaa !12
  %1856 = add nsw i32 %1851, 8
  %1857 = sext i32 %1856 to i64
  %1858 = getelementptr inbounds float, float* %3, i64 %1857
  %1859 = bitcast float* %1858 to <8 x float>*
  %1860 = load <8 x float>, <8 x float>* %1859, align 1, !tbaa !12
  %1861 = add nsw i32 %1851, 16
  %1862 = sext i32 %1861 to i64
  %1863 = getelementptr inbounds float, float* %3, i64 %1862
  %1864 = bitcast float* %1863 to <8 x float>*
  %1865 = load <8 x float>, <8 x float>* %1864, align 1, !tbaa !12
  %1866 = add nsw i32 %1851, 24
  %1867 = sext i32 %1866 to i64
  %1868 = getelementptr inbounds float, float* %3, i64 %1867
  %1869 = bitcast float* %1868 to <8 x float>*
  %1870 = load <8 x float>, <8 x float>* %1869, align 1, !tbaa !12
  %1871 = add nsw i32 %1851, 32
  %1872 = sext i32 %1871 to i64
  %1873 = getelementptr inbounds float, float* %3, i64 %1872
  %1874 = bitcast float* %1873 to <8 x float>*
  %1875 = load <8 x float>, <8 x float>* %1874, align 1, !tbaa !12
  %1876 = add nsw i32 %1851, 40
  %1877 = sext i32 %1876 to i64
  %1878 = getelementptr inbounds float, float* %3, i64 %1877
  %1879 = bitcast float* %1878 to <8 x float>*
  %1880 = load <8 x float>, <8 x float>* %1879, align 1, !tbaa !12
  %1881 = add nsw i32 %1851, 48
  %1882 = sext i32 %1881 to i64
  %1883 = getelementptr inbounds float, float* %3, i64 %1882
  %1884 = bitcast float* %1883 to <8 x float>*
  %1885 = load <8 x float>, <8 x float>* %1884, align 1, !tbaa !12
  %1886 = add nsw i32 %1851, 56
  %1887 = sext i32 %1886 to i64
  %1888 = getelementptr inbounds float, float* %3, i64 %1887
  %1889 = bitcast float* %1888 to <8 x float>*
  %1890 = load <8 x float>, <8 x float>* %1889, align 1, !tbaa !12
  %1891 = add nsw i32 %1851, 64
  %1892 = sext i32 %1891 to i64
  %1893 = getelementptr inbounds float, float* %3, i64 %1892
  %1894 = bitcast float* %1893 to <8 x float>*
  %1895 = load <8 x float>, <8 x float>* %1894, align 1, !tbaa !12
  %1896 = add nsw i32 %1851, 72
  %1897 = sext i32 %1896 to i64
  %1898 = getelementptr inbounds float, float* %3, i64 %1897
  %1899 = bitcast float* %1898 to <8 x float>*
  %1900 = load <8 x float>, <8 x float>* %1899, align 1, !tbaa !12
  %1901 = add nsw i32 %1851, 80
  %1902 = sext i32 %1901 to i64
  %1903 = getelementptr inbounds float, float* %3, i64 %1902
  %1904 = bitcast float* %1903 to <8 x float>*
  %1905 = load <8 x float>, <8 x float>* %1904, align 1, !tbaa !12
  %1906 = add nsw i32 %1851, 88
  %1907 = sext i32 %1906 to i64
  %1908 = getelementptr inbounds float, float* %3, i64 %1907
  %1909 = bitcast float* %1908 to <8 x float>*
  %1910 = load <8 x float>, <8 x float>* %1909, align 1, !tbaa !12
  %1911 = add nsw i32 %1851, 96
  %1912 = sext i32 %1911 to i64
  %1913 = getelementptr inbounds float, float* %3, i64 %1912
  %1914 = bitcast float* %1913 to <8 x float>*
  %1915 = load <8 x float>, <8 x float>* %1914, align 1, !tbaa !12
  %1916 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1855, <8 x float> %70, <8 x float> %1801) #10
  %1917 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1860, <8 x float> %70, <8 x float> %1805) #10
  %1918 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1865, <8 x float> %70, <8 x float> %1809) #10
  %1919 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1870, <8 x float> %70, <8 x float> %1813) #10
  %1920 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1875, <8 x float> %70, <8 x float> %1817) #10
  %1921 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1880, <8 x float> %70, <8 x float> %1821) #10
  %1922 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1885, <8 x float> %70, <8 x float> %1825) #10
  %1923 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1890, <8 x float> %70, <8 x float> %1829) #10
  %1924 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1895, <8 x float> %70, <8 x float> %1833) #10
  %1925 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1900, <8 x float> %70, <8 x float> %1837) #10
  %1926 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1905, <8 x float> %70, <8 x float> %1841) #10
  %1927 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1910, <8 x float> %70, <8 x float> %1845) #10
  %1928 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1915, <8 x float> %70, <8 x float> %1849) #10
  store <8 x float> %1916, <8 x float>* %1800, align 1, !tbaa !12
  store <8 x float> %1917, <8 x float>* %1804, align 1, !tbaa !12
  store <8 x float> %1918, <8 x float>* %1808, align 1, !tbaa !12
  store <8 x float> %1919, <8 x float>* %1812, align 1, !tbaa !12
  store <8 x float> %1920, <8 x float>* %1816, align 1, !tbaa !12
  store <8 x float> %1921, <8 x float>* %1820, align 1, !tbaa !12
  store <8 x float> %1922, <8 x float>* %1824, align 1, !tbaa !12
  store <8 x float> %1923, <8 x float>* %1828, align 1, !tbaa !12
  store <8 x float> %1924, <8 x float>* %1832, align 1, !tbaa !12
  store <8 x float> %1925, <8 x float>* %1836, align 1, !tbaa !12
  store <8 x float> %1926, <8 x float>* %1840, align 1, !tbaa !12
  store <8 x float> %1927, <8 x float>* %1844, align 1, !tbaa !12
  store <8 x float> %1928, <8 x float>* %1848, align 1, !tbaa !12
  %1929 = add nuw nsw i64 %1745, 104
  %1930 = icmp ult i64 %1929, %1562
  br i1 %1930, label %1744, label %1738

1931:                                             ; preds = %1936, %454, %20, %1006, %1558, %1738
  %1932 = add nuw nsw i64 %21, 11
  %1933 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1934 = sext i32 %1933 to i64
  %1935 = icmp slt i64 %1932, %1934
  br i1 %1935, label %20, label %8

1936:                                             ; preds = %1739, %1936
  %1937 = phi i64 [ 0, %1739 ], [ %2107, %1936 ]
  %1938 = getelementptr inbounds float, float* %5, i64 %1937
  %1939 = getelementptr inbounds float, float* %1938, i64 8
  %1940 = bitcast float* %1939 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1940, i32 0, i32 1, i32 1)
  %1941 = getelementptr inbounds float, float* %3, i64 %1937
  %1942 = getelementptr inbounds float, float* %1941, i64 8
  %1943 = bitcast float* %1942 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1943, i32 0, i32 1, i32 1)
  %1944 = getelementptr inbounds float, float* %1938, i64 16
  %1945 = bitcast float* %1944 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1945, i32 0, i32 1, i32 1)
  %1946 = getelementptr inbounds float, float* %1941, i64 16
  %1947 = bitcast float* %1946 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1947, i32 0, i32 1, i32 1)
  %1948 = getelementptr inbounds float, float* %1938, i64 24
  %1949 = bitcast float* %1948 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1949, i32 0, i32 1, i32 1)
  %1950 = getelementptr inbounds float, float* %1941, i64 24
  %1951 = bitcast float* %1950 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1951, i32 0, i32 1, i32 1)
  %1952 = getelementptr inbounds float, float* %1938, i64 32
  %1953 = bitcast float* %1952 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1953, i32 0, i32 1, i32 1)
  %1954 = getelementptr inbounds float, float* %1941, i64 32
  %1955 = bitcast float* %1954 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1955, i32 0, i32 1, i32 1)
  %1956 = getelementptr inbounds float, float* %1938, i64 40
  %1957 = bitcast float* %1956 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1957, i32 0, i32 1, i32 1)
  %1958 = getelementptr inbounds float, float* %1941, i64 40
  %1959 = bitcast float* %1958 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1959, i32 0, i32 1, i32 1)
  %1960 = getelementptr inbounds float, float* %1938, i64 48
  %1961 = bitcast float* %1960 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1961, i32 0, i32 1, i32 1)
  %1962 = getelementptr inbounds float, float* %1941, i64 48
  %1963 = bitcast float* %1962 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1963, i32 0, i32 1, i32 1)
  %1964 = getelementptr inbounds float, float* %1938, i64 56
  %1965 = bitcast float* %1964 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1965, i32 0, i32 1, i32 1)
  %1966 = getelementptr inbounds float, float* %1941, i64 56
  %1967 = bitcast float* %1966 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1967, i32 0, i32 1, i32 1)
  %1968 = getelementptr inbounds float, float* %1938, i64 64
  %1969 = bitcast float* %1968 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1969, i32 0, i32 1, i32 1)
  %1970 = getelementptr inbounds float, float* %1941, i64 64
  %1971 = bitcast float* %1970 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1971, i32 0, i32 1, i32 1)
  %1972 = getelementptr inbounds float, float* %1938, i64 72
  %1973 = bitcast float* %1972 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1973, i32 0, i32 1, i32 1)
  %1974 = getelementptr inbounds float, float* %1941, i64 72
  %1975 = bitcast float* %1974 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1975, i32 0, i32 1, i32 1)
  %1976 = getelementptr inbounds float, float* %1938, i64 80
  %1977 = bitcast float* %1976 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1977, i32 0, i32 1, i32 1)
  %1978 = getelementptr inbounds float, float* %1941, i64 80
  %1979 = bitcast float* %1978 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1979, i32 0, i32 1, i32 1)
  %1980 = getelementptr inbounds float, float* %1938, i64 88
  %1981 = bitcast float* %1980 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1981, i32 0, i32 1, i32 1)
  %1982 = getelementptr inbounds float, float* %1941, i64 88
  %1983 = bitcast float* %1982 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1983, i32 0, i32 1, i32 1)
  %1984 = getelementptr inbounds float, float* %1938, i64 96
  %1985 = bitcast float* %1984 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1985, i32 0, i32 1, i32 1)
  %1986 = getelementptr inbounds float, float* %1941, i64 96
  %1987 = bitcast float* %1986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1987, i32 0, i32 1, i32 1)
  %1988 = getelementptr inbounds float, float* %1938, i64 104
  %1989 = bitcast float* %1988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1989, i32 0, i32 1, i32 1)
  %1990 = getelementptr inbounds float, float* %1941, i64 104
  %1991 = bitcast float* %1990 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1991, i32 0, i32 1, i32 1)
  %1992 = bitcast float* %1938 to <8 x float>*
  %1993 = load <8 x float>, <8 x float>* %1992, align 1, !tbaa !12
  %1994 = add nuw nsw i64 %1937, 8
  %1995 = getelementptr inbounds float, float* %5, i64 %1994
  %1996 = bitcast float* %1995 to <8 x float>*
  %1997 = load <8 x float>, <8 x float>* %1996, align 1, !tbaa !12
  %1998 = add nuw nsw i64 %1937, 16
  %1999 = getelementptr inbounds float, float* %5, i64 %1998
  %2000 = bitcast float* %1999 to <8 x float>*
  %2001 = load <8 x float>, <8 x float>* %2000, align 1, !tbaa !12
  %2002 = add nuw nsw i64 %1937, 24
  %2003 = getelementptr inbounds float, float* %5, i64 %2002
  %2004 = bitcast float* %2003 to <8 x float>*
  %2005 = load <8 x float>, <8 x float>* %2004, align 1, !tbaa !12
  %2006 = add nuw nsw i64 %1937, 32
  %2007 = getelementptr inbounds float, float* %5, i64 %2006
  %2008 = bitcast float* %2007 to <8 x float>*
  %2009 = load <8 x float>, <8 x float>* %2008, align 1, !tbaa !12
  %2010 = add nuw nsw i64 %1937, 40
  %2011 = getelementptr inbounds float, float* %5, i64 %2010
  %2012 = bitcast float* %2011 to <8 x float>*
  %2013 = load <8 x float>, <8 x float>* %2012, align 1, !tbaa !12
  %2014 = add nuw nsw i64 %1937, 48
  %2015 = getelementptr inbounds float, float* %5, i64 %2014
  %2016 = bitcast float* %2015 to <8 x float>*
  %2017 = load <8 x float>, <8 x float>* %2016, align 1, !tbaa !12
  %2018 = add nuw nsw i64 %1937, 56
  %2019 = getelementptr inbounds float, float* %5, i64 %2018
  %2020 = bitcast float* %2019 to <8 x float>*
  %2021 = load <8 x float>, <8 x float>* %2020, align 1, !tbaa !12
  %2022 = add nuw nsw i64 %1937, 64
  %2023 = getelementptr inbounds float, float* %5, i64 %2022
  %2024 = bitcast float* %2023 to <8 x float>*
  %2025 = load <8 x float>, <8 x float>* %2024, align 1, !tbaa !12
  %2026 = add nuw nsw i64 %1937, 72
  %2027 = getelementptr inbounds float, float* %5, i64 %2026
  %2028 = bitcast float* %2027 to <8 x float>*
  %2029 = load <8 x float>, <8 x float>* %2028, align 1, !tbaa !12
  %2030 = add nuw nsw i64 %1937, 80
  %2031 = getelementptr inbounds float, float* %5, i64 %2030
  %2032 = bitcast float* %2031 to <8 x float>*
  %2033 = load <8 x float>, <8 x float>* %2032, align 1, !tbaa !12
  %2034 = add nuw nsw i64 %1937, 88
  %2035 = getelementptr inbounds float, float* %5, i64 %2034
  %2036 = bitcast float* %2035 to <8 x float>*
  %2037 = load <8 x float>, <8 x float>* %2036, align 1, !tbaa !12
  %2038 = add nuw nsw i64 %1937, 96
  %2039 = getelementptr inbounds float, float* %5, i64 %2038
  %2040 = bitcast float* %2039 to <8 x float>*
  %2041 = load <8 x float>, <8 x float>* %2040, align 1, !tbaa !12
  %2042 = add nsw i64 %1937, %1742
  %2043 = getelementptr inbounds float, float* %3, i64 %2042
  %2044 = bitcast float* %2043 to <8 x float>*
  %2045 = load <8 x float>, <8 x float>* %2044, align 1, !tbaa !12
  %2046 = add nsw i64 %2042, 8
  %2047 = getelementptr inbounds float, float* %3, i64 %2046
  %2048 = bitcast float* %2047 to <8 x float>*
  %2049 = load <8 x float>, <8 x float>* %2048, align 1, !tbaa !12
  %2050 = add nsw i64 %2042, 16
  %2051 = getelementptr inbounds float, float* %3, i64 %2050
  %2052 = bitcast float* %2051 to <8 x float>*
  %2053 = load <8 x float>, <8 x float>* %2052, align 1, !tbaa !12
  %2054 = add nsw i64 %2042, 24
  %2055 = getelementptr inbounds float, float* %3, i64 %2054
  %2056 = bitcast float* %2055 to <8 x float>*
  %2057 = load <8 x float>, <8 x float>* %2056, align 1, !tbaa !12
  %2058 = add nsw i64 %2042, 32
  %2059 = getelementptr inbounds float, float* %3, i64 %2058
  %2060 = bitcast float* %2059 to <8 x float>*
  %2061 = load <8 x float>, <8 x float>* %2060, align 1, !tbaa !12
  %2062 = add nsw i64 %2042, 40
  %2063 = getelementptr inbounds float, float* %3, i64 %2062
  %2064 = bitcast float* %2063 to <8 x float>*
  %2065 = load <8 x float>, <8 x float>* %2064, align 1, !tbaa !12
  %2066 = add nsw i64 %2042, 48
  %2067 = getelementptr inbounds float, float* %3, i64 %2066
  %2068 = bitcast float* %2067 to <8 x float>*
  %2069 = load <8 x float>, <8 x float>* %2068, align 1, !tbaa !12
  %2070 = add nsw i64 %2042, 56
  %2071 = getelementptr inbounds float, float* %3, i64 %2070
  %2072 = bitcast float* %2071 to <8 x float>*
  %2073 = load <8 x float>, <8 x float>* %2072, align 1, !tbaa !12
  %2074 = add nsw i64 %2042, 64
  %2075 = getelementptr inbounds float, float* %3, i64 %2074
  %2076 = bitcast float* %2075 to <8 x float>*
  %2077 = load <8 x float>, <8 x float>* %2076, align 1, !tbaa !12
  %2078 = add nsw i64 %2042, 72
  %2079 = getelementptr inbounds float, float* %3, i64 %2078
  %2080 = bitcast float* %2079 to <8 x float>*
  %2081 = load <8 x float>, <8 x float>* %2080, align 1, !tbaa !12
  %2082 = add nsw i64 %2042, 80
  %2083 = getelementptr inbounds float, float* %3, i64 %2082
  %2084 = bitcast float* %2083 to <8 x float>*
  %2085 = load <8 x float>, <8 x float>* %2084, align 1, !tbaa !12
  %2086 = add nsw i64 %2042, 88
  %2087 = getelementptr inbounds float, float* %3, i64 %2086
  %2088 = bitcast float* %2087 to <8 x float>*
  %2089 = load <8 x float>, <8 x float>* %2088, align 1, !tbaa !12
  %2090 = add nsw i64 %2042, 96
  %2091 = getelementptr inbounds float, float* %3, i64 %2090
  %2092 = bitcast float* %2091 to <8 x float>*
  %2093 = load <8 x float>, <8 x float>* %2092, align 1, !tbaa !12
  %2094 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2045, <8 x float> %75, <8 x float> %1993) #10
  %2095 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2049, <8 x float> %75, <8 x float> %1997) #10
  %2096 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2053, <8 x float> %75, <8 x float> %2001) #10
  %2097 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2057, <8 x float> %75, <8 x float> %2005) #10
  %2098 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2061, <8 x float> %75, <8 x float> %2009) #10
  %2099 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2065, <8 x float> %75, <8 x float> %2013) #10
  %2100 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2069, <8 x float> %75, <8 x float> %2017) #10
  %2101 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2073, <8 x float> %75, <8 x float> %2021) #10
  %2102 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2077, <8 x float> %75, <8 x float> %2025) #10
  %2103 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2081, <8 x float> %75, <8 x float> %2029) #10
  %2104 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2085, <8 x float> %75, <8 x float> %2033) #10
  %2105 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2089, <8 x float> %75, <8 x float> %2037) #10
  %2106 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2093, <8 x float> %75, <8 x float> %2041) #10
  store <8 x float> %2094, <8 x float>* %1992, align 1, !tbaa !12
  store <8 x float> %2095, <8 x float>* %1996, align 1, !tbaa !12
  store <8 x float> %2096, <8 x float>* %2000, align 1, !tbaa !12
  store <8 x float> %2097, <8 x float>* %2004, align 1, !tbaa !12
  store <8 x float> %2098, <8 x float>* %2008, align 1, !tbaa !12
  store <8 x float> %2099, <8 x float>* %2012, align 1, !tbaa !12
  store <8 x float> %2100, <8 x float>* %2016, align 1, !tbaa !12
  store <8 x float> %2101, <8 x float>* %2020, align 1, !tbaa !12
  store <8 x float> %2102, <8 x float>* %2024, align 1, !tbaa !12
  store <8 x float> %2103, <8 x float>* %2028, align 1, !tbaa !12
  store <8 x float> %2104, <8 x float>* %2032, align 1, !tbaa !12
  store <8 x float> %2105, <8 x float>* %2036, align 1, !tbaa !12
  store <8 x float> %2106, <8 x float>* %2040, align 1, !tbaa !12
  %2107 = add nuw nsw i64 %1937, 104
  %2108 = icmp ult i64 %2107, %1743
  br i1 %2108, label %1936, label %1931
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 297
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui13_uk11.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
