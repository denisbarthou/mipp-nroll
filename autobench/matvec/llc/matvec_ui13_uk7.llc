; ModuleID = 'codes/matvec_ui13_uk7.cpp'
source_filename = "codes/matvec_ui13_uk7.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui13_uk7.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 104
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 56
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1166, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1166
  %21 = phi i64 [ %1167, %1166 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %1166

58:                                               ; preds = %20
  %59 = zext i32 %56 to i64
  %60 = trunc i64 %21 to i32
  %61 = mul nsw i32 %56, %60
  br label %68

62:                                               ; preds = %68
  br i1 %57, label %63, label %434

63:                                               ; preds = %62
  %64 = trunc i64 %26 to i32
  %65 = mul nsw i32 %56, %64
  %66 = sext i32 %65 to i64
  %67 = zext i32 %56 to i64
  br label %261

68:                                               ; preds = %58, %68
  %69 = phi i64 [ 0, %58 ], [ %253, %68 ]
  %70 = getelementptr inbounds float, float* %5, i64 %69
  %71 = getelementptr inbounds float, float* %70, i64 8
  %72 = bitcast float* %71 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %72, i32 0, i32 1, i32 1)
  %73 = getelementptr inbounds float, float* %3, i64 %69
  %74 = getelementptr inbounds float, float* %73, i64 8
  %75 = bitcast float* %74 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %75, i32 0, i32 1, i32 1)
  %76 = getelementptr inbounds float, float* %70, i64 16
  %77 = bitcast float* %76 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %77, i32 0, i32 1, i32 1)
  %78 = getelementptr inbounds float, float* %73, i64 16
  %79 = bitcast float* %78 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %79, i32 0, i32 1, i32 1)
  %80 = getelementptr inbounds float, float* %70, i64 24
  %81 = bitcast float* %80 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %81, i32 0, i32 1, i32 1)
  %82 = getelementptr inbounds float, float* %73, i64 24
  %83 = bitcast float* %82 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %83, i32 0, i32 1, i32 1)
  %84 = getelementptr inbounds float, float* %70, i64 32
  %85 = bitcast float* %84 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %85, i32 0, i32 1, i32 1)
  %86 = getelementptr inbounds float, float* %73, i64 32
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %70, i64 40
  %89 = bitcast float* %88 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %89, i32 0, i32 1, i32 1)
  %90 = getelementptr inbounds float, float* %73, i64 40
  %91 = bitcast float* %90 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %91, i32 0, i32 1, i32 1)
  %92 = getelementptr inbounds float, float* %70, i64 48
  %93 = bitcast float* %92 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %93, i32 0, i32 1, i32 1)
  %94 = getelementptr inbounds float, float* %73, i64 48
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %70, i64 56
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %73, i64 56
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %70, i64 64
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %73, i64 64
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %70, i64 72
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %73, i64 72
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %70, i64 80
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %73, i64 80
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %70, i64 88
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %73, i64 88
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %70, i64 96
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %73, i64 96
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %70, i64 104
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %73, i64 104
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = bitcast float* %70 to <8 x float>*
  %125 = load <8 x float>, <8 x float>* %124, align 1, !tbaa !12
  %126 = add nuw nsw i64 %69, 8
  %127 = getelementptr inbounds float, float* %5, i64 %126
  %128 = bitcast float* %127 to <8 x float>*
  %129 = load <8 x float>, <8 x float>* %128, align 1, !tbaa !12
  %130 = add nuw nsw i64 %69, 16
  %131 = getelementptr inbounds float, float* %5, i64 %130
  %132 = bitcast float* %131 to <8 x float>*
  %133 = load <8 x float>, <8 x float>* %132, align 1, !tbaa !12
  %134 = add nuw nsw i64 %69, 24
  %135 = getelementptr inbounds float, float* %5, i64 %134
  %136 = bitcast float* %135 to <8 x float>*
  %137 = load <8 x float>, <8 x float>* %136, align 1, !tbaa !12
  %138 = add nuw nsw i64 %69, 32
  %139 = getelementptr inbounds float, float* %5, i64 %138
  %140 = bitcast float* %139 to <8 x float>*
  %141 = load <8 x float>, <8 x float>* %140, align 1, !tbaa !12
  %142 = add nuw nsw i64 %69, 40
  %143 = getelementptr inbounds float, float* %5, i64 %142
  %144 = bitcast float* %143 to <8 x float>*
  %145 = load <8 x float>, <8 x float>* %144, align 1, !tbaa !12
  %146 = add nuw nsw i64 %69, 48
  %147 = getelementptr inbounds float, float* %5, i64 %146
  %148 = bitcast float* %147 to <8 x float>*
  %149 = load <8 x float>, <8 x float>* %148, align 1, !tbaa !12
  %150 = add nuw nsw i64 %69, 56
  %151 = getelementptr inbounds float, float* %5, i64 %150
  %152 = bitcast float* %151 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = add nuw nsw i64 %69, 64
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nuw nsw i64 %69, 72
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = add nuw nsw i64 %69, 80
  %163 = getelementptr inbounds float, float* %5, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = add nuw nsw i64 %69, 88
  %167 = getelementptr inbounds float, float* %5, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = add nuw nsw i64 %69, 96
  %171 = getelementptr inbounds float, float* %5, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = trunc i64 %69 to i32
  %175 = add nsw i32 %61, %174
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds float, float* %3, i64 %176
  %178 = bitcast float* %177 to <8 x float>*
  %179 = load <8 x float>, <8 x float>* %178, align 1, !tbaa !12
  %180 = add nsw i32 %175, 8
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds float, float* %3, i64 %181
  %183 = bitcast float* %182 to <8 x float>*
  %184 = load <8 x float>, <8 x float>* %183, align 1, !tbaa !12
  %185 = add nsw i32 %175, 16
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds float, float* %3, i64 %186
  %188 = bitcast float* %187 to <8 x float>*
  %189 = load <8 x float>, <8 x float>* %188, align 1, !tbaa !12
  %190 = add nsw i32 %175, 24
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds float, float* %3, i64 %191
  %193 = bitcast float* %192 to <8 x float>*
  %194 = load <8 x float>, <8 x float>* %193, align 1, !tbaa !12
  %195 = add nsw i32 %175, 32
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds float, float* %3, i64 %196
  %198 = bitcast float* %197 to <8 x float>*
  %199 = load <8 x float>, <8 x float>* %198, align 1, !tbaa !12
  %200 = add nsw i32 %175, 40
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds float, float* %3, i64 %201
  %203 = bitcast float* %202 to <8 x float>*
  %204 = load <8 x float>, <8 x float>* %203, align 1, !tbaa !12
  %205 = add nsw i32 %175, 48
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds float, float* %3, i64 %206
  %208 = bitcast float* %207 to <8 x float>*
  %209 = load <8 x float>, <8 x float>* %208, align 1, !tbaa !12
  %210 = add nsw i32 %175, 56
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds float, float* %3, i64 %211
  %213 = bitcast float* %212 to <8 x float>*
  %214 = load <8 x float>, <8 x float>* %213, align 1, !tbaa !12
  %215 = add nsw i32 %175, 64
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds float, float* %3, i64 %216
  %218 = bitcast float* %217 to <8 x float>*
  %219 = load <8 x float>, <8 x float>* %218, align 1, !tbaa !12
  %220 = add nsw i32 %175, 72
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds float, float* %3, i64 %221
  %223 = bitcast float* %222 to <8 x float>*
  %224 = load <8 x float>, <8 x float>* %223, align 1, !tbaa !12
  %225 = add nsw i32 %175, 80
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds float, float* %3, i64 %226
  %228 = bitcast float* %227 to <8 x float>*
  %229 = load <8 x float>, <8 x float>* %228, align 1, !tbaa !12
  %230 = add nsw i32 %175, 88
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds float, float* %3, i64 %231
  %233 = bitcast float* %232 to <8 x float>*
  %234 = load <8 x float>, <8 x float>* %233, align 1, !tbaa !12
  %235 = add nsw i32 %175, 96
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds float, float* %3, i64 %236
  %238 = bitcast float* %237 to <8 x float>*
  %239 = load <8 x float>, <8 x float>* %238, align 1, !tbaa !12
  %240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %179, <8 x float> %25, <8 x float> %125) #10
  %241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %184, <8 x float> %25, <8 x float> %129) #10
  %242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %189, <8 x float> %25, <8 x float> %133) #10
  %243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %194, <8 x float> %25, <8 x float> %137) #10
  %244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %199, <8 x float> %25, <8 x float> %141) #10
  %245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %204, <8 x float> %25, <8 x float> %145) #10
  %246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %209, <8 x float> %25, <8 x float> %149) #10
  %247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %214, <8 x float> %25, <8 x float> %153) #10
  %248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %219, <8 x float> %25, <8 x float> %157) #10
  %249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %224, <8 x float> %25, <8 x float> %161) #10
  %250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %229, <8 x float> %25, <8 x float> %165) #10
  %251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %234, <8 x float> %25, <8 x float> %169) #10
  %252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %239, <8 x float> %25, <8 x float> %173) #10
  store <8 x float> %240, <8 x float>* %124, align 1, !tbaa !12
  store <8 x float> %241, <8 x float>* %128, align 1, !tbaa !12
  store <8 x float> %242, <8 x float>* %132, align 1, !tbaa !12
  store <8 x float> %243, <8 x float>* %136, align 1, !tbaa !12
  store <8 x float> %244, <8 x float>* %140, align 1, !tbaa !12
  store <8 x float> %245, <8 x float>* %144, align 1, !tbaa !12
  store <8 x float> %246, <8 x float>* %148, align 1, !tbaa !12
  store <8 x float> %247, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %248, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %249, <8 x float>* %160, align 1, !tbaa !12
  store <8 x float> %250, <8 x float>* %164, align 1, !tbaa !12
  store <8 x float> %251, <8 x float>* %168, align 1, !tbaa !12
  store <8 x float> %252, <8 x float>* %172, align 1, !tbaa !12
  %253 = add nuw nsw i64 %69, 104
  %254 = icmp ult i64 %253, %59
  br i1 %254, label %68, label %62

255:                                              ; preds = %261
  br i1 %57, label %256, label %434

256:                                              ; preds = %255
  %257 = trunc i64 %31 to i32
  %258 = mul nsw i32 %56, %257
  %259 = sext i32 %258 to i64
  %260 = zext i32 %56 to i64
  br label %441

261:                                              ; preds = %63, %261
  %262 = phi i64 [ 0, %63 ], [ %432, %261 ]
  %263 = getelementptr inbounds float, float* %5, i64 %262
  %264 = getelementptr inbounds float, float* %263, i64 8
  %265 = bitcast float* %264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %265, i32 0, i32 1, i32 1)
  %266 = getelementptr inbounds float, float* %3, i64 %262
  %267 = getelementptr inbounds float, float* %266, i64 8
  %268 = bitcast float* %267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %268, i32 0, i32 1, i32 1)
  %269 = getelementptr inbounds float, float* %263, i64 16
  %270 = bitcast float* %269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %270, i32 0, i32 1, i32 1)
  %271 = getelementptr inbounds float, float* %266, i64 16
  %272 = bitcast float* %271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %272, i32 0, i32 1, i32 1)
  %273 = getelementptr inbounds float, float* %263, i64 24
  %274 = bitcast float* %273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %274, i32 0, i32 1, i32 1)
  %275 = getelementptr inbounds float, float* %266, i64 24
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %276, i32 0, i32 1, i32 1)
  %277 = getelementptr inbounds float, float* %263, i64 32
  %278 = bitcast float* %277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %278, i32 0, i32 1, i32 1)
  %279 = getelementptr inbounds float, float* %266, i64 32
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %263, i64 40
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %266, i64 40
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %263, i64 48
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %266, i64 48
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %263, i64 56
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %266, i64 56
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %263, i64 64
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %266, i64 64
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %263, i64 72
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %266, i64 72
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = getelementptr inbounds float, float* %263, i64 80
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = getelementptr inbounds float, float* %266, i64 80
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %263, i64 88
  %306 = bitcast float* %305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %306, i32 0, i32 1, i32 1)
  %307 = getelementptr inbounds float, float* %266, i64 88
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %263, i64 96
  %310 = bitcast float* %309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %310, i32 0, i32 1, i32 1)
  %311 = getelementptr inbounds float, float* %266, i64 96
  %312 = bitcast float* %311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %312, i32 0, i32 1, i32 1)
  %313 = getelementptr inbounds float, float* %263, i64 104
  %314 = bitcast float* %313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %314, i32 0, i32 1, i32 1)
  %315 = getelementptr inbounds float, float* %266, i64 104
  %316 = bitcast float* %315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %316, i32 0, i32 1, i32 1)
  %317 = bitcast float* %263 to <8 x float>*
  %318 = load <8 x float>, <8 x float>* %317, align 1, !tbaa !12
  %319 = add nuw nsw i64 %262, 8
  %320 = getelementptr inbounds float, float* %5, i64 %319
  %321 = bitcast float* %320 to <8 x float>*
  %322 = load <8 x float>, <8 x float>* %321, align 1, !tbaa !12
  %323 = add nuw nsw i64 %262, 16
  %324 = getelementptr inbounds float, float* %5, i64 %323
  %325 = bitcast float* %324 to <8 x float>*
  %326 = load <8 x float>, <8 x float>* %325, align 1, !tbaa !12
  %327 = add nuw nsw i64 %262, 24
  %328 = getelementptr inbounds float, float* %5, i64 %327
  %329 = bitcast float* %328 to <8 x float>*
  %330 = load <8 x float>, <8 x float>* %329, align 1, !tbaa !12
  %331 = add nuw nsw i64 %262, 32
  %332 = getelementptr inbounds float, float* %5, i64 %331
  %333 = bitcast float* %332 to <8 x float>*
  %334 = load <8 x float>, <8 x float>* %333, align 1, !tbaa !12
  %335 = add nuw nsw i64 %262, 40
  %336 = getelementptr inbounds float, float* %5, i64 %335
  %337 = bitcast float* %336 to <8 x float>*
  %338 = load <8 x float>, <8 x float>* %337, align 1, !tbaa !12
  %339 = add nuw nsw i64 %262, 48
  %340 = getelementptr inbounds float, float* %5, i64 %339
  %341 = bitcast float* %340 to <8 x float>*
  %342 = load <8 x float>, <8 x float>* %341, align 1, !tbaa !12
  %343 = add nuw nsw i64 %262, 56
  %344 = getelementptr inbounds float, float* %5, i64 %343
  %345 = bitcast float* %344 to <8 x float>*
  %346 = load <8 x float>, <8 x float>* %345, align 1, !tbaa !12
  %347 = add nuw nsw i64 %262, 64
  %348 = getelementptr inbounds float, float* %5, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %350 = load <8 x float>, <8 x float>* %349, align 1, !tbaa !12
  %351 = add nuw nsw i64 %262, 72
  %352 = getelementptr inbounds float, float* %5, i64 %351
  %353 = bitcast float* %352 to <8 x float>*
  %354 = load <8 x float>, <8 x float>* %353, align 1, !tbaa !12
  %355 = add nuw nsw i64 %262, 80
  %356 = getelementptr inbounds float, float* %5, i64 %355
  %357 = bitcast float* %356 to <8 x float>*
  %358 = load <8 x float>, <8 x float>* %357, align 1, !tbaa !12
  %359 = add nuw nsw i64 %262, 88
  %360 = getelementptr inbounds float, float* %5, i64 %359
  %361 = bitcast float* %360 to <8 x float>*
  %362 = load <8 x float>, <8 x float>* %361, align 1, !tbaa !12
  %363 = add nuw nsw i64 %262, 96
  %364 = getelementptr inbounds float, float* %5, i64 %363
  %365 = bitcast float* %364 to <8 x float>*
  %366 = load <8 x float>, <8 x float>* %365, align 1, !tbaa !12
  %367 = add nsw i64 %262, %66
  %368 = getelementptr inbounds float, float* %3, i64 %367
  %369 = bitcast float* %368 to <8 x float>*
  %370 = load <8 x float>, <8 x float>* %369, align 1, !tbaa !12
  %371 = add nsw i64 %367, 8
  %372 = getelementptr inbounds float, float* %3, i64 %371
  %373 = bitcast float* %372 to <8 x float>*
  %374 = load <8 x float>, <8 x float>* %373, align 1, !tbaa !12
  %375 = add nsw i64 %367, 16
  %376 = getelementptr inbounds float, float* %3, i64 %375
  %377 = bitcast float* %376 to <8 x float>*
  %378 = load <8 x float>, <8 x float>* %377, align 1, !tbaa !12
  %379 = add nsw i64 %367, 24
  %380 = getelementptr inbounds float, float* %3, i64 %379
  %381 = bitcast float* %380 to <8 x float>*
  %382 = load <8 x float>, <8 x float>* %381, align 1, !tbaa !12
  %383 = add nsw i64 %367, 32
  %384 = getelementptr inbounds float, float* %3, i64 %383
  %385 = bitcast float* %384 to <8 x float>*
  %386 = load <8 x float>, <8 x float>* %385, align 1, !tbaa !12
  %387 = add nsw i64 %367, 40
  %388 = getelementptr inbounds float, float* %3, i64 %387
  %389 = bitcast float* %388 to <8 x float>*
  %390 = load <8 x float>, <8 x float>* %389, align 1, !tbaa !12
  %391 = add nsw i64 %367, 48
  %392 = getelementptr inbounds float, float* %3, i64 %391
  %393 = bitcast float* %392 to <8 x float>*
  %394 = load <8 x float>, <8 x float>* %393, align 1, !tbaa !12
  %395 = add nsw i64 %367, 56
  %396 = getelementptr inbounds float, float* %3, i64 %395
  %397 = bitcast float* %396 to <8 x float>*
  %398 = load <8 x float>, <8 x float>* %397, align 1, !tbaa !12
  %399 = add nsw i64 %367, 64
  %400 = getelementptr inbounds float, float* %3, i64 %399
  %401 = bitcast float* %400 to <8 x float>*
  %402 = load <8 x float>, <8 x float>* %401, align 1, !tbaa !12
  %403 = add nsw i64 %367, 72
  %404 = getelementptr inbounds float, float* %3, i64 %403
  %405 = bitcast float* %404 to <8 x float>*
  %406 = load <8 x float>, <8 x float>* %405, align 1, !tbaa !12
  %407 = add nsw i64 %367, 80
  %408 = getelementptr inbounds float, float* %3, i64 %407
  %409 = bitcast float* %408 to <8 x float>*
  %410 = load <8 x float>, <8 x float>* %409, align 1, !tbaa !12
  %411 = add nsw i64 %367, 88
  %412 = getelementptr inbounds float, float* %3, i64 %411
  %413 = bitcast float* %412 to <8 x float>*
  %414 = load <8 x float>, <8 x float>* %413, align 1, !tbaa !12
  %415 = add nsw i64 %367, 96
  %416 = getelementptr inbounds float, float* %3, i64 %415
  %417 = bitcast float* %416 to <8 x float>*
  %418 = load <8 x float>, <8 x float>* %417, align 1, !tbaa !12
  %419 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %370, <8 x float> %30, <8 x float> %318) #10
  %420 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %374, <8 x float> %30, <8 x float> %322) #10
  %421 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %378, <8 x float> %30, <8 x float> %326) #10
  %422 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %382, <8 x float> %30, <8 x float> %330) #10
  %423 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %386, <8 x float> %30, <8 x float> %334) #10
  %424 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %390, <8 x float> %30, <8 x float> %338) #10
  %425 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %394, <8 x float> %30, <8 x float> %342) #10
  %426 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %398, <8 x float> %30, <8 x float> %346) #10
  %427 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %402, <8 x float> %30, <8 x float> %350) #10
  %428 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %406, <8 x float> %30, <8 x float> %354) #10
  %429 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %410, <8 x float> %30, <8 x float> %358) #10
  %430 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %414, <8 x float> %30, <8 x float> %362) #10
  %431 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %418, <8 x float> %30, <8 x float> %366) #10
  store <8 x float> %419, <8 x float>* %317, align 1, !tbaa !12
  store <8 x float> %420, <8 x float>* %321, align 1, !tbaa !12
  store <8 x float> %421, <8 x float>* %325, align 1, !tbaa !12
  store <8 x float> %422, <8 x float>* %329, align 1, !tbaa !12
  store <8 x float> %423, <8 x float>* %333, align 1, !tbaa !12
  store <8 x float> %424, <8 x float>* %337, align 1, !tbaa !12
  store <8 x float> %425, <8 x float>* %341, align 1, !tbaa !12
  store <8 x float> %426, <8 x float>* %345, align 1, !tbaa !12
  store <8 x float> %427, <8 x float>* %349, align 1, !tbaa !12
  store <8 x float> %428, <8 x float>* %353, align 1, !tbaa !12
  store <8 x float> %429, <8 x float>* %357, align 1, !tbaa !12
  store <8 x float> %430, <8 x float>* %361, align 1, !tbaa !12
  store <8 x float> %431, <8 x float>* %365, align 1, !tbaa !12
  %432 = add nuw nsw i64 %262, 104
  %433 = icmp ult i64 %432, %67
  br i1 %433, label %261, label %255

434:                                              ; preds = %441, %62, %255
  %435 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %436 = icmp sgt i32 %435, 0
  br i1 %436, label %437, label %1166

437:                                              ; preds = %434
  %438 = zext i32 %435 to i64
  %439 = trunc i64 %36 to i32
  %440 = mul nsw i32 %435, %439
  br label %620

441:                                              ; preds = %256, %441
  %442 = phi i64 [ 0, %256 ], [ %612, %441 ]
  %443 = getelementptr inbounds float, float* %5, i64 %442
  %444 = getelementptr inbounds float, float* %443, i64 8
  %445 = bitcast float* %444 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %445, i32 0, i32 1, i32 1)
  %446 = getelementptr inbounds float, float* %3, i64 %442
  %447 = getelementptr inbounds float, float* %446, i64 8
  %448 = bitcast float* %447 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %448, i32 0, i32 1, i32 1)
  %449 = getelementptr inbounds float, float* %443, i64 16
  %450 = bitcast float* %449 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %450, i32 0, i32 1, i32 1)
  %451 = getelementptr inbounds float, float* %446, i64 16
  %452 = bitcast float* %451 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %452, i32 0, i32 1, i32 1)
  %453 = getelementptr inbounds float, float* %443, i64 24
  %454 = bitcast float* %453 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %454, i32 0, i32 1, i32 1)
  %455 = getelementptr inbounds float, float* %446, i64 24
  %456 = bitcast float* %455 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %456, i32 0, i32 1, i32 1)
  %457 = getelementptr inbounds float, float* %443, i64 32
  %458 = bitcast float* %457 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %458, i32 0, i32 1, i32 1)
  %459 = getelementptr inbounds float, float* %446, i64 32
  %460 = bitcast float* %459 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %460, i32 0, i32 1, i32 1)
  %461 = getelementptr inbounds float, float* %443, i64 40
  %462 = bitcast float* %461 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %462, i32 0, i32 1, i32 1)
  %463 = getelementptr inbounds float, float* %446, i64 40
  %464 = bitcast float* %463 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %464, i32 0, i32 1, i32 1)
  %465 = getelementptr inbounds float, float* %443, i64 48
  %466 = bitcast float* %465 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %466, i32 0, i32 1, i32 1)
  %467 = getelementptr inbounds float, float* %446, i64 48
  %468 = bitcast float* %467 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %468, i32 0, i32 1, i32 1)
  %469 = getelementptr inbounds float, float* %443, i64 56
  %470 = bitcast float* %469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %470, i32 0, i32 1, i32 1)
  %471 = getelementptr inbounds float, float* %446, i64 56
  %472 = bitcast float* %471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %472, i32 0, i32 1, i32 1)
  %473 = getelementptr inbounds float, float* %443, i64 64
  %474 = bitcast float* %473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %474, i32 0, i32 1, i32 1)
  %475 = getelementptr inbounds float, float* %446, i64 64
  %476 = bitcast float* %475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %476, i32 0, i32 1, i32 1)
  %477 = getelementptr inbounds float, float* %443, i64 72
  %478 = bitcast float* %477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %478, i32 0, i32 1, i32 1)
  %479 = getelementptr inbounds float, float* %446, i64 72
  %480 = bitcast float* %479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %480, i32 0, i32 1, i32 1)
  %481 = getelementptr inbounds float, float* %443, i64 80
  %482 = bitcast float* %481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %482, i32 0, i32 1, i32 1)
  %483 = getelementptr inbounds float, float* %446, i64 80
  %484 = bitcast float* %483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %484, i32 0, i32 1, i32 1)
  %485 = getelementptr inbounds float, float* %443, i64 88
  %486 = bitcast float* %485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %486, i32 0, i32 1, i32 1)
  %487 = getelementptr inbounds float, float* %446, i64 88
  %488 = bitcast float* %487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %488, i32 0, i32 1, i32 1)
  %489 = getelementptr inbounds float, float* %443, i64 96
  %490 = bitcast float* %489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %490, i32 0, i32 1, i32 1)
  %491 = getelementptr inbounds float, float* %446, i64 96
  %492 = bitcast float* %491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %492, i32 0, i32 1, i32 1)
  %493 = getelementptr inbounds float, float* %443, i64 104
  %494 = bitcast float* %493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %494, i32 0, i32 1, i32 1)
  %495 = getelementptr inbounds float, float* %446, i64 104
  %496 = bitcast float* %495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %496, i32 0, i32 1, i32 1)
  %497 = bitcast float* %443 to <8 x float>*
  %498 = load <8 x float>, <8 x float>* %497, align 1, !tbaa !12
  %499 = add nuw nsw i64 %442, 8
  %500 = getelementptr inbounds float, float* %5, i64 %499
  %501 = bitcast float* %500 to <8 x float>*
  %502 = load <8 x float>, <8 x float>* %501, align 1, !tbaa !12
  %503 = add nuw nsw i64 %442, 16
  %504 = getelementptr inbounds float, float* %5, i64 %503
  %505 = bitcast float* %504 to <8 x float>*
  %506 = load <8 x float>, <8 x float>* %505, align 1, !tbaa !12
  %507 = add nuw nsw i64 %442, 24
  %508 = getelementptr inbounds float, float* %5, i64 %507
  %509 = bitcast float* %508 to <8 x float>*
  %510 = load <8 x float>, <8 x float>* %509, align 1, !tbaa !12
  %511 = add nuw nsw i64 %442, 32
  %512 = getelementptr inbounds float, float* %5, i64 %511
  %513 = bitcast float* %512 to <8 x float>*
  %514 = load <8 x float>, <8 x float>* %513, align 1, !tbaa !12
  %515 = add nuw nsw i64 %442, 40
  %516 = getelementptr inbounds float, float* %5, i64 %515
  %517 = bitcast float* %516 to <8 x float>*
  %518 = load <8 x float>, <8 x float>* %517, align 1, !tbaa !12
  %519 = add nuw nsw i64 %442, 48
  %520 = getelementptr inbounds float, float* %5, i64 %519
  %521 = bitcast float* %520 to <8 x float>*
  %522 = load <8 x float>, <8 x float>* %521, align 1, !tbaa !12
  %523 = add nuw nsw i64 %442, 56
  %524 = getelementptr inbounds float, float* %5, i64 %523
  %525 = bitcast float* %524 to <8 x float>*
  %526 = load <8 x float>, <8 x float>* %525, align 1, !tbaa !12
  %527 = add nuw nsw i64 %442, 64
  %528 = getelementptr inbounds float, float* %5, i64 %527
  %529 = bitcast float* %528 to <8 x float>*
  %530 = load <8 x float>, <8 x float>* %529, align 1, !tbaa !12
  %531 = add nuw nsw i64 %442, 72
  %532 = getelementptr inbounds float, float* %5, i64 %531
  %533 = bitcast float* %532 to <8 x float>*
  %534 = load <8 x float>, <8 x float>* %533, align 1, !tbaa !12
  %535 = add nuw nsw i64 %442, 80
  %536 = getelementptr inbounds float, float* %5, i64 %535
  %537 = bitcast float* %536 to <8 x float>*
  %538 = load <8 x float>, <8 x float>* %537, align 1, !tbaa !12
  %539 = add nuw nsw i64 %442, 88
  %540 = getelementptr inbounds float, float* %5, i64 %539
  %541 = bitcast float* %540 to <8 x float>*
  %542 = load <8 x float>, <8 x float>* %541, align 1, !tbaa !12
  %543 = add nuw nsw i64 %442, 96
  %544 = getelementptr inbounds float, float* %5, i64 %543
  %545 = bitcast float* %544 to <8 x float>*
  %546 = load <8 x float>, <8 x float>* %545, align 1, !tbaa !12
  %547 = add nsw i64 %442, %259
  %548 = getelementptr inbounds float, float* %3, i64 %547
  %549 = bitcast float* %548 to <8 x float>*
  %550 = load <8 x float>, <8 x float>* %549, align 1, !tbaa !12
  %551 = add nsw i64 %547, 8
  %552 = getelementptr inbounds float, float* %3, i64 %551
  %553 = bitcast float* %552 to <8 x float>*
  %554 = load <8 x float>, <8 x float>* %553, align 1, !tbaa !12
  %555 = add nsw i64 %547, 16
  %556 = getelementptr inbounds float, float* %3, i64 %555
  %557 = bitcast float* %556 to <8 x float>*
  %558 = load <8 x float>, <8 x float>* %557, align 1, !tbaa !12
  %559 = add nsw i64 %547, 24
  %560 = getelementptr inbounds float, float* %3, i64 %559
  %561 = bitcast float* %560 to <8 x float>*
  %562 = load <8 x float>, <8 x float>* %561, align 1, !tbaa !12
  %563 = add nsw i64 %547, 32
  %564 = getelementptr inbounds float, float* %3, i64 %563
  %565 = bitcast float* %564 to <8 x float>*
  %566 = load <8 x float>, <8 x float>* %565, align 1, !tbaa !12
  %567 = add nsw i64 %547, 40
  %568 = getelementptr inbounds float, float* %3, i64 %567
  %569 = bitcast float* %568 to <8 x float>*
  %570 = load <8 x float>, <8 x float>* %569, align 1, !tbaa !12
  %571 = add nsw i64 %547, 48
  %572 = getelementptr inbounds float, float* %3, i64 %571
  %573 = bitcast float* %572 to <8 x float>*
  %574 = load <8 x float>, <8 x float>* %573, align 1, !tbaa !12
  %575 = add nsw i64 %547, 56
  %576 = getelementptr inbounds float, float* %3, i64 %575
  %577 = bitcast float* %576 to <8 x float>*
  %578 = load <8 x float>, <8 x float>* %577, align 1, !tbaa !12
  %579 = add nsw i64 %547, 64
  %580 = getelementptr inbounds float, float* %3, i64 %579
  %581 = bitcast float* %580 to <8 x float>*
  %582 = load <8 x float>, <8 x float>* %581, align 1, !tbaa !12
  %583 = add nsw i64 %547, 72
  %584 = getelementptr inbounds float, float* %3, i64 %583
  %585 = bitcast float* %584 to <8 x float>*
  %586 = load <8 x float>, <8 x float>* %585, align 1, !tbaa !12
  %587 = add nsw i64 %547, 80
  %588 = getelementptr inbounds float, float* %3, i64 %587
  %589 = bitcast float* %588 to <8 x float>*
  %590 = load <8 x float>, <8 x float>* %589, align 1, !tbaa !12
  %591 = add nsw i64 %547, 88
  %592 = getelementptr inbounds float, float* %3, i64 %591
  %593 = bitcast float* %592 to <8 x float>*
  %594 = load <8 x float>, <8 x float>* %593, align 1, !tbaa !12
  %595 = add nsw i64 %547, 96
  %596 = getelementptr inbounds float, float* %3, i64 %595
  %597 = bitcast float* %596 to <8 x float>*
  %598 = load <8 x float>, <8 x float>* %597, align 1, !tbaa !12
  %599 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %550, <8 x float> %35, <8 x float> %498) #10
  %600 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %554, <8 x float> %35, <8 x float> %502) #10
  %601 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %558, <8 x float> %35, <8 x float> %506) #10
  %602 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %562, <8 x float> %35, <8 x float> %510) #10
  %603 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %566, <8 x float> %35, <8 x float> %514) #10
  %604 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %570, <8 x float> %35, <8 x float> %518) #10
  %605 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %574, <8 x float> %35, <8 x float> %522) #10
  %606 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %578, <8 x float> %35, <8 x float> %526) #10
  %607 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %582, <8 x float> %35, <8 x float> %530) #10
  %608 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %586, <8 x float> %35, <8 x float> %534) #10
  %609 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %590, <8 x float> %35, <8 x float> %538) #10
  %610 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %594, <8 x float> %35, <8 x float> %542) #10
  %611 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %598, <8 x float> %35, <8 x float> %546) #10
  store <8 x float> %599, <8 x float>* %497, align 1, !tbaa !12
  store <8 x float> %600, <8 x float>* %501, align 1, !tbaa !12
  store <8 x float> %601, <8 x float>* %505, align 1, !tbaa !12
  store <8 x float> %602, <8 x float>* %509, align 1, !tbaa !12
  store <8 x float> %603, <8 x float>* %513, align 1, !tbaa !12
  store <8 x float> %604, <8 x float>* %517, align 1, !tbaa !12
  store <8 x float> %605, <8 x float>* %521, align 1, !tbaa !12
  store <8 x float> %606, <8 x float>* %525, align 1, !tbaa !12
  store <8 x float> %607, <8 x float>* %529, align 1, !tbaa !12
  store <8 x float> %608, <8 x float>* %533, align 1, !tbaa !12
  store <8 x float> %609, <8 x float>* %537, align 1, !tbaa !12
  store <8 x float> %610, <8 x float>* %541, align 1, !tbaa !12
  store <8 x float> %611, <8 x float>* %545, align 1, !tbaa !12
  %612 = add nuw nsw i64 %442, 104
  %613 = icmp ult i64 %612, %260
  br i1 %613, label %441, label %434

614:                                              ; preds = %620
  br i1 %436, label %615, label %986

615:                                              ; preds = %614
  %616 = trunc i64 %41 to i32
  %617 = mul nsw i32 %435, %616
  %618 = sext i32 %617 to i64
  %619 = zext i32 %435 to i64
  br label %813

620:                                              ; preds = %437, %620
  %621 = phi i64 [ 0, %437 ], [ %805, %620 ]
  %622 = getelementptr inbounds float, float* %5, i64 %621
  %623 = getelementptr inbounds float, float* %622, i64 8
  %624 = bitcast float* %623 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %624, i32 0, i32 1, i32 1)
  %625 = getelementptr inbounds float, float* %3, i64 %621
  %626 = getelementptr inbounds float, float* %625, i64 8
  %627 = bitcast float* %626 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %627, i32 0, i32 1, i32 1)
  %628 = getelementptr inbounds float, float* %622, i64 16
  %629 = bitcast float* %628 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %629, i32 0, i32 1, i32 1)
  %630 = getelementptr inbounds float, float* %625, i64 16
  %631 = bitcast float* %630 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %631, i32 0, i32 1, i32 1)
  %632 = getelementptr inbounds float, float* %622, i64 24
  %633 = bitcast float* %632 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %633, i32 0, i32 1, i32 1)
  %634 = getelementptr inbounds float, float* %625, i64 24
  %635 = bitcast float* %634 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %635, i32 0, i32 1, i32 1)
  %636 = getelementptr inbounds float, float* %622, i64 32
  %637 = bitcast float* %636 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %637, i32 0, i32 1, i32 1)
  %638 = getelementptr inbounds float, float* %625, i64 32
  %639 = bitcast float* %638 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %639, i32 0, i32 1, i32 1)
  %640 = getelementptr inbounds float, float* %622, i64 40
  %641 = bitcast float* %640 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %641, i32 0, i32 1, i32 1)
  %642 = getelementptr inbounds float, float* %625, i64 40
  %643 = bitcast float* %642 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %643, i32 0, i32 1, i32 1)
  %644 = getelementptr inbounds float, float* %622, i64 48
  %645 = bitcast float* %644 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %645, i32 0, i32 1, i32 1)
  %646 = getelementptr inbounds float, float* %625, i64 48
  %647 = bitcast float* %646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %647, i32 0, i32 1, i32 1)
  %648 = getelementptr inbounds float, float* %622, i64 56
  %649 = bitcast float* %648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %649, i32 0, i32 1, i32 1)
  %650 = getelementptr inbounds float, float* %625, i64 56
  %651 = bitcast float* %650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %651, i32 0, i32 1, i32 1)
  %652 = getelementptr inbounds float, float* %622, i64 64
  %653 = bitcast float* %652 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %653, i32 0, i32 1, i32 1)
  %654 = getelementptr inbounds float, float* %625, i64 64
  %655 = bitcast float* %654 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %655, i32 0, i32 1, i32 1)
  %656 = getelementptr inbounds float, float* %622, i64 72
  %657 = bitcast float* %656 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %657, i32 0, i32 1, i32 1)
  %658 = getelementptr inbounds float, float* %625, i64 72
  %659 = bitcast float* %658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %659, i32 0, i32 1, i32 1)
  %660 = getelementptr inbounds float, float* %622, i64 80
  %661 = bitcast float* %660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %661, i32 0, i32 1, i32 1)
  %662 = getelementptr inbounds float, float* %625, i64 80
  %663 = bitcast float* %662 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %663, i32 0, i32 1, i32 1)
  %664 = getelementptr inbounds float, float* %622, i64 88
  %665 = bitcast float* %664 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %665, i32 0, i32 1, i32 1)
  %666 = getelementptr inbounds float, float* %625, i64 88
  %667 = bitcast float* %666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %667, i32 0, i32 1, i32 1)
  %668 = getelementptr inbounds float, float* %622, i64 96
  %669 = bitcast float* %668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %669, i32 0, i32 1, i32 1)
  %670 = getelementptr inbounds float, float* %625, i64 96
  %671 = bitcast float* %670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %671, i32 0, i32 1, i32 1)
  %672 = getelementptr inbounds float, float* %622, i64 104
  %673 = bitcast float* %672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %673, i32 0, i32 1, i32 1)
  %674 = getelementptr inbounds float, float* %625, i64 104
  %675 = bitcast float* %674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %675, i32 0, i32 1, i32 1)
  %676 = bitcast float* %622 to <8 x float>*
  %677 = load <8 x float>, <8 x float>* %676, align 1, !tbaa !12
  %678 = add nuw nsw i64 %621, 8
  %679 = getelementptr inbounds float, float* %5, i64 %678
  %680 = bitcast float* %679 to <8 x float>*
  %681 = load <8 x float>, <8 x float>* %680, align 1, !tbaa !12
  %682 = add nuw nsw i64 %621, 16
  %683 = getelementptr inbounds float, float* %5, i64 %682
  %684 = bitcast float* %683 to <8 x float>*
  %685 = load <8 x float>, <8 x float>* %684, align 1, !tbaa !12
  %686 = add nuw nsw i64 %621, 24
  %687 = getelementptr inbounds float, float* %5, i64 %686
  %688 = bitcast float* %687 to <8 x float>*
  %689 = load <8 x float>, <8 x float>* %688, align 1, !tbaa !12
  %690 = add nuw nsw i64 %621, 32
  %691 = getelementptr inbounds float, float* %5, i64 %690
  %692 = bitcast float* %691 to <8 x float>*
  %693 = load <8 x float>, <8 x float>* %692, align 1, !tbaa !12
  %694 = add nuw nsw i64 %621, 40
  %695 = getelementptr inbounds float, float* %5, i64 %694
  %696 = bitcast float* %695 to <8 x float>*
  %697 = load <8 x float>, <8 x float>* %696, align 1, !tbaa !12
  %698 = add nuw nsw i64 %621, 48
  %699 = getelementptr inbounds float, float* %5, i64 %698
  %700 = bitcast float* %699 to <8 x float>*
  %701 = load <8 x float>, <8 x float>* %700, align 1, !tbaa !12
  %702 = add nuw nsw i64 %621, 56
  %703 = getelementptr inbounds float, float* %5, i64 %702
  %704 = bitcast float* %703 to <8 x float>*
  %705 = load <8 x float>, <8 x float>* %704, align 1, !tbaa !12
  %706 = add nuw nsw i64 %621, 64
  %707 = getelementptr inbounds float, float* %5, i64 %706
  %708 = bitcast float* %707 to <8 x float>*
  %709 = load <8 x float>, <8 x float>* %708, align 1, !tbaa !12
  %710 = add nuw nsw i64 %621, 72
  %711 = getelementptr inbounds float, float* %5, i64 %710
  %712 = bitcast float* %711 to <8 x float>*
  %713 = load <8 x float>, <8 x float>* %712, align 1, !tbaa !12
  %714 = add nuw nsw i64 %621, 80
  %715 = getelementptr inbounds float, float* %5, i64 %714
  %716 = bitcast float* %715 to <8 x float>*
  %717 = load <8 x float>, <8 x float>* %716, align 1, !tbaa !12
  %718 = add nuw nsw i64 %621, 88
  %719 = getelementptr inbounds float, float* %5, i64 %718
  %720 = bitcast float* %719 to <8 x float>*
  %721 = load <8 x float>, <8 x float>* %720, align 1, !tbaa !12
  %722 = add nuw nsw i64 %621, 96
  %723 = getelementptr inbounds float, float* %5, i64 %722
  %724 = bitcast float* %723 to <8 x float>*
  %725 = load <8 x float>, <8 x float>* %724, align 1, !tbaa !12
  %726 = trunc i64 %621 to i32
  %727 = add nsw i32 %440, %726
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds float, float* %3, i64 %728
  %730 = bitcast float* %729 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = add nsw i32 %727, 8
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds float, float* %3, i64 %733
  %735 = bitcast float* %734 to <8 x float>*
  %736 = load <8 x float>, <8 x float>* %735, align 1, !tbaa !12
  %737 = add nsw i32 %727, 16
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds float, float* %3, i64 %738
  %740 = bitcast float* %739 to <8 x float>*
  %741 = load <8 x float>, <8 x float>* %740, align 1, !tbaa !12
  %742 = add nsw i32 %727, 24
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds float, float* %3, i64 %743
  %745 = bitcast float* %744 to <8 x float>*
  %746 = load <8 x float>, <8 x float>* %745, align 1, !tbaa !12
  %747 = add nsw i32 %727, 32
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds float, float* %3, i64 %748
  %750 = bitcast float* %749 to <8 x float>*
  %751 = load <8 x float>, <8 x float>* %750, align 1, !tbaa !12
  %752 = add nsw i32 %727, 40
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds float, float* %3, i64 %753
  %755 = bitcast float* %754 to <8 x float>*
  %756 = load <8 x float>, <8 x float>* %755, align 1, !tbaa !12
  %757 = add nsw i32 %727, 48
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds float, float* %3, i64 %758
  %760 = bitcast float* %759 to <8 x float>*
  %761 = load <8 x float>, <8 x float>* %760, align 1, !tbaa !12
  %762 = add nsw i32 %727, 56
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds float, float* %3, i64 %763
  %765 = bitcast float* %764 to <8 x float>*
  %766 = load <8 x float>, <8 x float>* %765, align 1, !tbaa !12
  %767 = add nsw i32 %727, 64
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds float, float* %3, i64 %768
  %770 = bitcast float* %769 to <8 x float>*
  %771 = load <8 x float>, <8 x float>* %770, align 1, !tbaa !12
  %772 = add nsw i32 %727, 72
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds float, float* %3, i64 %773
  %775 = bitcast float* %774 to <8 x float>*
  %776 = load <8 x float>, <8 x float>* %775, align 1, !tbaa !12
  %777 = add nsw i32 %727, 80
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds float, float* %3, i64 %778
  %780 = bitcast float* %779 to <8 x float>*
  %781 = load <8 x float>, <8 x float>* %780, align 1, !tbaa !12
  %782 = add nsw i32 %727, 88
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds float, float* %3, i64 %783
  %785 = bitcast float* %784 to <8 x float>*
  %786 = load <8 x float>, <8 x float>* %785, align 1, !tbaa !12
  %787 = add nsw i32 %727, 96
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds float, float* %3, i64 %788
  %790 = bitcast float* %789 to <8 x float>*
  %791 = load <8 x float>, <8 x float>* %790, align 1, !tbaa !12
  %792 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %731, <8 x float> %40, <8 x float> %677) #10
  %793 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %736, <8 x float> %40, <8 x float> %681) #10
  %794 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %741, <8 x float> %40, <8 x float> %685) #10
  %795 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %746, <8 x float> %40, <8 x float> %689) #10
  %796 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %751, <8 x float> %40, <8 x float> %693) #10
  %797 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %756, <8 x float> %40, <8 x float> %697) #10
  %798 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %761, <8 x float> %40, <8 x float> %701) #10
  %799 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %766, <8 x float> %40, <8 x float> %705) #10
  %800 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %771, <8 x float> %40, <8 x float> %709) #10
  %801 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %776, <8 x float> %40, <8 x float> %713) #10
  %802 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %781, <8 x float> %40, <8 x float> %717) #10
  %803 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %786, <8 x float> %40, <8 x float> %721) #10
  %804 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %791, <8 x float> %40, <8 x float> %725) #10
  store <8 x float> %792, <8 x float>* %676, align 1, !tbaa !12
  store <8 x float> %793, <8 x float>* %680, align 1, !tbaa !12
  store <8 x float> %794, <8 x float>* %684, align 1, !tbaa !12
  store <8 x float> %795, <8 x float>* %688, align 1, !tbaa !12
  store <8 x float> %796, <8 x float>* %692, align 1, !tbaa !12
  store <8 x float> %797, <8 x float>* %696, align 1, !tbaa !12
  store <8 x float> %798, <8 x float>* %700, align 1, !tbaa !12
  store <8 x float> %799, <8 x float>* %704, align 1, !tbaa !12
  store <8 x float> %800, <8 x float>* %708, align 1, !tbaa !12
  store <8 x float> %801, <8 x float>* %712, align 1, !tbaa !12
  store <8 x float> %802, <8 x float>* %716, align 1, !tbaa !12
  store <8 x float> %803, <8 x float>* %720, align 1, !tbaa !12
  store <8 x float> %804, <8 x float>* %724, align 1, !tbaa !12
  %805 = add nuw nsw i64 %621, 104
  %806 = icmp ult i64 %805, %438
  br i1 %806, label %620, label %614

807:                                              ; preds = %813
  br i1 %436, label %808, label %986

808:                                              ; preds = %807
  %809 = trunc i64 %46 to i32
  %810 = mul nsw i32 %435, %809
  %811 = sext i32 %810 to i64
  %812 = zext i32 %435 to i64
  br label %993

813:                                              ; preds = %615, %813
  %814 = phi i64 [ 0, %615 ], [ %984, %813 ]
  %815 = getelementptr inbounds float, float* %5, i64 %814
  %816 = getelementptr inbounds float, float* %815, i64 8
  %817 = bitcast float* %816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %817, i32 0, i32 1, i32 1)
  %818 = getelementptr inbounds float, float* %3, i64 %814
  %819 = getelementptr inbounds float, float* %818, i64 8
  %820 = bitcast float* %819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %820, i32 0, i32 1, i32 1)
  %821 = getelementptr inbounds float, float* %815, i64 16
  %822 = bitcast float* %821 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %822, i32 0, i32 1, i32 1)
  %823 = getelementptr inbounds float, float* %818, i64 16
  %824 = bitcast float* %823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %824, i32 0, i32 1, i32 1)
  %825 = getelementptr inbounds float, float* %815, i64 24
  %826 = bitcast float* %825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %826, i32 0, i32 1, i32 1)
  %827 = getelementptr inbounds float, float* %818, i64 24
  %828 = bitcast float* %827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %828, i32 0, i32 1, i32 1)
  %829 = getelementptr inbounds float, float* %815, i64 32
  %830 = bitcast float* %829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %830, i32 0, i32 1, i32 1)
  %831 = getelementptr inbounds float, float* %818, i64 32
  %832 = bitcast float* %831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %832, i32 0, i32 1, i32 1)
  %833 = getelementptr inbounds float, float* %815, i64 40
  %834 = bitcast float* %833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %834, i32 0, i32 1, i32 1)
  %835 = getelementptr inbounds float, float* %818, i64 40
  %836 = bitcast float* %835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %836, i32 0, i32 1, i32 1)
  %837 = getelementptr inbounds float, float* %815, i64 48
  %838 = bitcast float* %837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %838, i32 0, i32 1, i32 1)
  %839 = getelementptr inbounds float, float* %818, i64 48
  %840 = bitcast float* %839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %840, i32 0, i32 1, i32 1)
  %841 = getelementptr inbounds float, float* %815, i64 56
  %842 = bitcast float* %841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %842, i32 0, i32 1, i32 1)
  %843 = getelementptr inbounds float, float* %818, i64 56
  %844 = bitcast float* %843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %844, i32 0, i32 1, i32 1)
  %845 = getelementptr inbounds float, float* %815, i64 64
  %846 = bitcast float* %845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %846, i32 0, i32 1, i32 1)
  %847 = getelementptr inbounds float, float* %818, i64 64
  %848 = bitcast float* %847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %848, i32 0, i32 1, i32 1)
  %849 = getelementptr inbounds float, float* %815, i64 72
  %850 = bitcast float* %849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %850, i32 0, i32 1, i32 1)
  %851 = getelementptr inbounds float, float* %818, i64 72
  %852 = bitcast float* %851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %852, i32 0, i32 1, i32 1)
  %853 = getelementptr inbounds float, float* %815, i64 80
  %854 = bitcast float* %853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %854, i32 0, i32 1, i32 1)
  %855 = getelementptr inbounds float, float* %818, i64 80
  %856 = bitcast float* %855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %856, i32 0, i32 1, i32 1)
  %857 = getelementptr inbounds float, float* %815, i64 88
  %858 = bitcast float* %857 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %858, i32 0, i32 1, i32 1)
  %859 = getelementptr inbounds float, float* %818, i64 88
  %860 = bitcast float* %859 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %860, i32 0, i32 1, i32 1)
  %861 = getelementptr inbounds float, float* %815, i64 96
  %862 = bitcast float* %861 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %862, i32 0, i32 1, i32 1)
  %863 = getelementptr inbounds float, float* %818, i64 96
  %864 = bitcast float* %863 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %864, i32 0, i32 1, i32 1)
  %865 = getelementptr inbounds float, float* %815, i64 104
  %866 = bitcast float* %865 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %866, i32 0, i32 1, i32 1)
  %867 = getelementptr inbounds float, float* %818, i64 104
  %868 = bitcast float* %867 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %868, i32 0, i32 1, i32 1)
  %869 = bitcast float* %815 to <8 x float>*
  %870 = load <8 x float>, <8 x float>* %869, align 1, !tbaa !12
  %871 = add nuw nsw i64 %814, 8
  %872 = getelementptr inbounds float, float* %5, i64 %871
  %873 = bitcast float* %872 to <8 x float>*
  %874 = load <8 x float>, <8 x float>* %873, align 1, !tbaa !12
  %875 = add nuw nsw i64 %814, 16
  %876 = getelementptr inbounds float, float* %5, i64 %875
  %877 = bitcast float* %876 to <8 x float>*
  %878 = load <8 x float>, <8 x float>* %877, align 1, !tbaa !12
  %879 = add nuw nsw i64 %814, 24
  %880 = getelementptr inbounds float, float* %5, i64 %879
  %881 = bitcast float* %880 to <8 x float>*
  %882 = load <8 x float>, <8 x float>* %881, align 1, !tbaa !12
  %883 = add nuw nsw i64 %814, 32
  %884 = getelementptr inbounds float, float* %5, i64 %883
  %885 = bitcast float* %884 to <8 x float>*
  %886 = load <8 x float>, <8 x float>* %885, align 1, !tbaa !12
  %887 = add nuw nsw i64 %814, 40
  %888 = getelementptr inbounds float, float* %5, i64 %887
  %889 = bitcast float* %888 to <8 x float>*
  %890 = load <8 x float>, <8 x float>* %889, align 1, !tbaa !12
  %891 = add nuw nsw i64 %814, 48
  %892 = getelementptr inbounds float, float* %5, i64 %891
  %893 = bitcast float* %892 to <8 x float>*
  %894 = load <8 x float>, <8 x float>* %893, align 1, !tbaa !12
  %895 = add nuw nsw i64 %814, 56
  %896 = getelementptr inbounds float, float* %5, i64 %895
  %897 = bitcast float* %896 to <8 x float>*
  %898 = load <8 x float>, <8 x float>* %897, align 1, !tbaa !12
  %899 = add nuw nsw i64 %814, 64
  %900 = getelementptr inbounds float, float* %5, i64 %899
  %901 = bitcast float* %900 to <8 x float>*
  %902 = load <8 x float>, <8 x float>* %901, align 1, !tbaa !12
  %903 = add nuw nsw i64 %814, 72
  %904 = getelementptr inbounds float, float* %5, i64 %903
  %905 = bitcast float* %904 to <8 x float>*
  %906 = load <8 x float>, <8 x float>* %905, align 1, !tbaa !12
  %907 = add nuw nsw i64 %814, 80
  %908 = getelementptr inbounds float, float* %5, i64 %907
  %909 = bitcast float* %908 to <8 x float>*
  %910 = load <8 x float>, <8 x float>* %909, align 1, !tbaa !12
  %911 = add nuw nsw i64 %814, 88
  %912 = getelementptr inbounds float, float* %5, i64 %911
  %913 = bitcast float* %912 to <8 x float>*
  %914 = load <8 x float>, <8 x float>* %913, align 1, !tbaa !12
  %915 = add nuw nsw i64 %814, 96
  %916 = getelementptr inbounds float, float* %5, i64 %915
  %917 = bitcast float* %916 to <8 x float>*
  %918 = load <8 x float>, <8 x float>* %917, align 1, !tbaa !12
  %919 = add nsw i64 %814, %618
  %920 = getelementptr inbounds float, float* %3, i64 %919
  %921 = bitcast float* %920 to <8 x float>*
  %922 = load <8 x float>, <8 x float>* %921, align 1, !tbaa !12
  %923 = add nsw i64 %919, 8
  %924 = getelementptr inbounds float, float* %3, i64 %923
  %925 = bitcast float* %924 to <8 x float>*
  %926 = load <8 x float>, <8 x float>* %925, align 1, !tbaa !12
  %927 = add nsw i64 %919, 16
  %928 = getelementptr inbounds float, float* %3, i64 %927
  %929 = bitcast float* %928 to <8 x float>*
  %930 = load <8 x float>, <8 x float>* %929, align 1, !tbaa !12
  %931 = add nsw i64 %919, 24
  %932 = getelementptr inbounds float, float* %3, i64 %931
  %933 = bitcast float* %932 to <8 x float>*
  %934 = load <8 x float>, <8 x float>* %933, align 1, !tbaa !12
  %935 = add nsw i64 %919, 32
  %936 = getelementptr inbounds float, float* %3, i64 %935
  %937 = bitcast float* %936 to <8 x float>*
  %938 = load <8 x float>, <8 x float>* %937, align 1, !tbaa !12
  %939 = add nsw i64 %919, 40
  %940 = getelementptr inbounds float, float* %3, i64 %939
  %941 = bitcast float* %940 to <8 x float>*
  %942 = load <8 x float>, <8 x float>* %941, align 1, !tbaa !12
  %943 = add nsw i64 %919, 48
  %944 = getelementptr inbounds float, float* %3, i64 %943
  %945 = bitcast float* %944 to <8 x float>*
  %946 = load <8 x float>, <8 x float>* %945, align 1, !tbaa !12
  %947 = add nsw i64 %919, 56
  %948 = getelementptr inbounds float, float* %3, i64 %947
  %949 = bitcast float* %948 to <8 x float>*
  %950 = load <8 x float>, <8 x float>* %949, align 1, !tbaa !12
  %951 = add nsw i64 %919, 64
  %952 = getelementptr inbounds float, float* %3, i64 %951
  %953 = bitcast float* %952 to <8 x float>*
  %954 = load <8 x float>, <8 x float>* %953, align 1, !tbaa !12
  %955 = add nsw i64 %919, 72
  %956 = getelementptr inbounds float, float* %3, i64 %955
  %957 = bitcast float* %956 to <8 x float>*
  %958 = load <8 x float>, <8 x float>* %957, align 1, !tbaa !12
  %959 = add nsw i64 %919, 80
  %960 = getelementptr inbounds float, float* %3, i64 %959
  %961 = bitcast float* %960 to <8 x float>*
  %962 = load <8 x float>, <8 x float>* %961, align 1, !tbaa !12
  %963 = add nsw i64 %919, 88
  %964 = getelementptr inbounds float, float* %3, i64 %963
  %965 = bitcast float* %964 to <8 x float>*
  %966 = load <8 x float>, <8 x float>* %965, align 1, !tbaa !12
  %967 = add nsw i64 %919, 96
  %968 = getelementptr inbounds float, float* %3, i64 %967
  %969 = bitcast float* %968 to <8 x float>*
  %970 = load <8 x float>, <8 x float>* %969, align 1, !tbaa !12
  %971 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %922, <8 x float> %45, <8 x float> %870) #10
  %972 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %926, <8 x float> %45, <8 x float> %874) #10
  %973 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %930, <8 x float> %45, <8 x float> %878) #10
  %974 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %934, <8 x float> %45, <8 x float> %882) #10
  %975 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %938, <8 x float> %45, <8 x float> %886) #10
  %976 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %942, <8 x float> %45, <8 x float> %890) #10
  %977 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %946, <8 x float> %45, <8 x float> %894) #10
  %978 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %950, <8 x float> %45, <8 x float> %898) #10
  %979 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %954, <8 x float> %45, <8 x float> %902) #10
  %980 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %958, <8 x float> %45, <8 x float> %906) #10
  %981 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %962, <8 x float> %45, <8 x float> %910) #10
  %982 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %966, <8 x float> %45, <8 x float> %914) #10
  %983 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %970, <8 x float> %45, <8 x float> %918) #10
  store <8 x float> %971, <8 x float>* %869, align 1, !tbaa !12
  store <8 x float> %972, <8 x float>* %873, align 1, !tbaa !12
  store <8 x float> %973, <8 x float>* %877, align 1, !tbaa !12
  store <8 x float> %974, <8 x float>* %881, align 1, !tbaa !12
  store <8 x float> %975, <8 x float>* %885, align 1, !tbaa !12
  store <8 x float> %976, <8 x float>* %889, align 1, !tbaa !12
  store <8 x float> %977, <8 x float>* %893, align 1, !tbaa !12
  store <8 x float> %978, <8 x float>* %897, align 1, !tbaa !12
  store <8 x float> %979, <8 x float>* %901, align 1, !tbaa !12
  store <8 x float> %980, <8 x float>* %905, align 1, !tbaa !12
  store <8 x float> %981, <8 x float>* %909, align 1, !tbaa !12
  store <8 x float> %982, <8 x float>* %913, align 1, !tbaa !12
  store <8 x float> %983, <8 x float>* %917, align 1, !tbaa !12
  %984 = add nuw nsw i64 %814, 104
  %985 = icmp ult i64 %984, %619
  br i1 %985, label %813, label %807

986:                                              ; preds = %993, %614, %807
  %987 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %988 = icmp sgt i32 %987, 0
  br i1 %988, label %989, label %1166

989:                                              ; preds = %986
  %990 = zext i32 %987 to i64
  %991 = trunc i64 %51 to i32
  %992 = mul nsw i32 %987, %991
  br label %1171

993:                                              ; preds = %808, %993
  %994 = phi i64 [ 0, %808 ], [ %1164, %993 ]
  %995 = getelementptr inbounds float, float* %5, i64 %994
  %996 = getelementptr inbounds float, float* %995, i64 8
  %997 = bitcast float* %996 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %997, i32 0, i32 1, i32 1)
  %998 = getelementptr inbounds float, float* %3, i64 %994
  %999 = getelementptr inbounds float, float* %998, i64 8
  %1000 = bitcast float* %999 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1000, i32 0, i32 1, i32 1)
  %1001 = getelementptr inbounds float, float* %995, i64 16
  %1002 = bitcast float* %1001 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1002, i32 0, i32 1, i32 1)
  %1003 = getelementptr inbounds float, float* %998, i64 16
  %1004 = bitcast float* %1003 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1004, i32 0, i32 1, i32 1)
  %1005 = getelementptr inbounds float, float* %995, i64 24
  %1006 = bitcast float* %1005 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1006, i32 0, i32 1, i32 1)
  %1007 = getelementptr inbounds float, float* %998, i64 24
  %1008 = bitcast float* %1007 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1008, i32 0, i32 1, i32 1)
  %1009 = getelementptr inbounds float, float* %995, i64 32
  %1010 = bitcast float* %1009 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1010, i32 0, i32 1, i32 1)
  %1011 = getelementptr inbounds float, float* %998, i64 32
  %1012 = bitcast float* %1011 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1012, i32 0, i32 1, i32 1)
  %1013 = getelementptr inbounds float, float* %995, i64 40
  %1014 = bitcast float* %1013 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1014, i32 0, i32 1, i32 1)
  %1015 = getelementptr inbounds float, float* %998, i64 40
  %1016 = bitcast float* %1015 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1016, i32 0, i32 1, i32 1)
  %1017 = getelementptr inbounds float, float* %995, i64 48
  %1018 = bitcast float* %1017 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1018, i32 0, i32 1, i32 1)
  %1019 = getelementptr inbounds float, float* %998, i64 48
  %1020 = bitcast float* %1019 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1020, i32 0, i32 1, i32 1)
  %1021 = getelementptr inbounds float, float* %995, i64 56
  %1022 = bitcast float* %1021 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1022, i32 0, i32 1, i32 1)
  %1023 = getelementptr inbounds float, float* %998, i64 56
  %1024 = bitcast float* %1023 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1024, i32 0, i32 1, i32 1)
  %1025 = getelementptr inbounds float, float* %995, i64 64
  %1026 = bitcast float* %1025 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1026, i32 0, i32 1, i32 1)
  %1027 = getelementptr inbounds float, float* %998, i64 64
  %1028 = bitcast float* %1027 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1028, i32 0, i32 1, i32 1)
  %1029 = getelementptr inbounds float, float* %995, i64 72
  %1030 = bitcast float* %1029 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1030, i32 0, i32 1, i32 1)
  %1031 = getelementptr inbounds float, float* %998, i64 72
  %1032 = bitcast float* %1031 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1032, i32 0, i32 1, i32 1)
  %1033 = getelementptr inbounds float, float* %995, i64 80
  %1034 = bitcast float* %1033 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1034, i32 0, i32 1, i32 1)
  %1035 = getelementptr inbounds float, float* %998, i64 80
  %1036 = bitcast float* %1035 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1036, i32 0, i32 1, i32 1)
  %1037 = getelementptr inbounds float, float* %995, i64 88
  %1038 = bitcast float* %1037 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1038, i32 0, i32 1, i32 1)
  %1039 = getelementptr inbounds float, float* %998, i64 88
  %1040 = bitcast float* %1039 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1040, i32 0, i32 1, i32 1)
  %1041 = getelementptr inbounds float, float* %995, i64 96
  %1042 = bitcast float* %1041 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1042, i32 0, i32 1, i32 1)
  %1043 = getelementptr inbounds float, float* %998, i64 96
  %1044 = bitcast float* %1043 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1044, i32 0, i32 1, i32 1)
  %1045 = getelementptr inbounds float, float* %995, i64 104
  %1046 = bitcast float* %1045 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1046, i32 0, i32 1, i32 1)
  %1047 = getelementptr inbounds float, float* %998, i64 104
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = bitcast float* %995 to <8 x float>*
  %1050 = load <8 x float>, <8 x float>* %1049, align 1, !tbaa !12
  %1051 = add nuw nsw i64 %994, 8
  %1052 = getelementptr inbounds float, float* %5, i64 %1051
  %1053 = bitcast float* %1052 to <8 x float>*
  %1054 = load <8 x float>, <8 x float>* %1053, align 1, !tbaa !12
  %1055 = add nuw nsw i64 %994, 16
  %1056 = getelementptr inbounds float, float* %5, i64 %1055
  %1057 = bitcast float* %1056 to <8 x float>*
  %1058 = load <8 x float>, <8 x float>* %1057, align 1, !tbaa !12
  %1059 = add nuw nsw i64 %994, 24
  %1060 = getelementptr inbounds float, float* %5, i64 %1059
  %1061 = bitcast float* %1060 to <8 x float>*
  %1062 = load <8 x float>, <8 x float>* %1061, align 1, !tbaa !12
  %1063 = add nuw nsw i64 %994, 32
  %1064 = getelementptr inbounds float, float* %5, i64 %1063
  %1065 = bitcast float* %1064 to <8 x float>*
  %1066 = load <8 x float>, <8 x float>* %1065, align 1, !tbaa !12
  %1067 = add nuw nsw i64 %994, 40
  %1068 = getelementptr inbounds float, float* %5, i64 %1067
  %1069 = bitcast float* %1068 to <8 x float>*
  %1070 = load <8 x float>, <8 x float>* %1069, align 1, !tbaa !12
  %1071 = add nuw nsw i64 %994, 48
  %1072 = getelementptr inbounds float, float* %5, i64 %1071
  %1073 = bitcast float* %1072 to <8 x float>*
  %1074 = load <8 x float>, <8 x float>* %1073, align 1, !tbaa !12
  %1075 = add nuw nsw i64 %994, 56
  %1076 = getelementptr inbounds float, float* %5, i64 %1075
  %1077 = bitcast float* %1076 to <8 x float>*
  %1078 = load <8 x float>, <8 x float>* %1077, align 1, !tbaa !12
  %1079 = add nuw nsw i64 %994, 64
  %1080 = getelementptr inbounds float, float* %5, i64 %1079
  %1081 = bitcast float* %1080 to <8 x float>*
  %1082 = load <8 x float>, <8 x float>* %1081, align 1, !tbaa !12
  %1083 = add nuw nsw i64 %994, 72
  %1084 = getelementptr inbounds float, float* %5, i64 %1083
  %1085 = bitcast float* %1084 to <8 x float>*
  %1086 = load <8 x float>, <8 x float>* %1085, align 1, !tbaa !12
  %1087 = add nuw nsw i64 %994, 80
  %1088 = getelementptr inbounds float, float* %5, i64 %1087
  %1089 = bitcast float* %1088 to <8 x float>*
  %1090 = load <8 x float>, <8 x float>* %1089, align 1, !tbaa !12
  %1091 = add nuw nsw i64 %994, 88
  %1092 = getelementptr inbounds float, float* %5, i64 %1091
  %1093 = bitcast float* %1092 to <8 x float>*
  %1094 = load <8 x float>, <8 x float>* %1093, align 1, !tbaa !12
  %1095 = add nuw nsw i64 %994, 96
  %1096 = getelementptr inbounds float, float* %5, i64 %1095
  %1097 = bitcast float* %1096 to <8 x float>*
  %1098 = load <8 x float>, <8 x float>* %1097, align 1, !tbaa !12
  %1099 = add nsw i64 %994, %811
  %1100 = getelementptr inbounds float, float* %3, i64 %1099
  %1101 = bitcast float* %1100 to <8 x float>*
  %1102 = load <8 x float>, <8 x float>* %1101, align 1, !tbaa !12
  %1103 = add nsw i64 %1099, 8
  %1104 = getelementptr inbounds float, float* %3, i64 %1103
  %1105 = bitcast float* %1104 to <8 x float>*
  %1106 = load <8 x float>, <8 x float>* %1105, align 1, !tbaa !12
  %1107 = add nsw i64 %1099, 16
  %1108 = getelementptr inbounds float, float* %3, i64 %1107
  %1109 = bitcast float* %1108 to <8 x float>*
  %1110 = load <8 x float>, <8 x float>* %1109, align 1, !tbaa !12
  %1111 = add nsw i64 %1099, 24
  %1112 = getelementptr inbounds float, float* %3, i64 %1111
  %1113 = bitcast float* %1112 to <8 x float>*
  %1114 = load <8 x float>, <8 x float>* %1113, align 1, !tbaa !12
  %1115 = add nsw i64 %1099, 32
  %1116 = getelementptr inbounds float, float* %3, i64 %1115
  %1117 = bitcast float* %1116 to <8 x float>*
  %1118 = load <8 x float>, <8 x float>* %1117, align 1, !tbaa !12
  %1119 = add nsw i64 %1099, 40
  %1120 = getelementptr inbounds float, float* %3, i64 %1119
  %1121 = bitcast float* %1120 to <8 x float>*
  %1122 = load <8 x float>, <8 x float>* %1121, align 1, !tbaa !12
  %1123 = add nsw i64 %1099, 48
  %1124 = getelementptr inbounds float, float* %3, i64 %1123
  %1125 = bitcast float* %1124 to <8 x float>*
  %1126 = load <8 x float>, <8 x float>* %1125, align 1, !tbaa !12
  %1127 = add nsw i64 %1099, 56
  %1128 = getelementptr inbounds float, float* %3, i64 %1127
  %1129 = bitcast float* %1128 to <8 x float>*
  %1130 = load <8 x float>, <8 x float>* %1129, align 1, !tbaa !12
  %1131 = add nsw i64 %1099, 64
  %1132 = getelementptr inbounds float, float* %3, i64 %1131
  %1133 = bitcast float* %1132 to <8 x float>*
  %1134 = load <8 x float>, <8 x float>* %1133, align 1, !tbaa !12
  %1135 = add nsw i64 %1099, 72
  %1136 = getelementptr inbounds float, float* %3, i64 %1135
  %1137 = bitcast float* %1136 to <8 x float>*
  %1138 = load <8 x float>, <8 x float>* %1137, align 1, !tbaa !12
  %1139 = add nsw i64 %1099, 80
  %1140 = getelementptr inbounds float, float* %3, i64 %1139
  %1141 = bitcast float* %1140 to <8 x float>*
  %1142 = load <8 x float>, <8 x float>* %1141, align 1, !tbaa !12
  %1143 = add nsw i64 %1099, 88
  %1144 = getelementptr inbounds float, float* %3, i64 %1143
  %1145 = bitcast float* %1144 to <8 x float>*
  %1146 = load <8 x float>, <8 x float>* %1145, align 1, !tbaa !12
  %1147 = add nsw i64 %1099, 96
  %1148 = getelementptr inbounds float, float* %3, i64 %1147
  %1149 = bitcast float* %1148 to <8 x float>*
  %1150 = load <8 x float>, <8 x float>* %1149, align 1, !tbaa !12
  %1151 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1102, <8 x float> %50, <8 x float> %1050) #10
  %1152 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1106, <8 x float> %50, <8 x float> %1054) #10
  %1153 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1110, <8 x float> %50, <8 x float> %1058) #10
  %1154 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1114, <8 x float> %50, <8 x float> %1062) #10
  %1155 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1118, <8 x float> %50, <8 x float> %1066) #10
  %1156 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1122, <8 x float> %50, <8 x float> %1070) #10
  %1157 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1126, <8 x float> %50, <8 x float> %1074) #10
  %1158 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1130, <8 x float> %50, <8 x float> %1078) #10
  %1159 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1134, <8 x float> %50, <8 x float> %1082) #10
  %1160 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1138, <8 x float> %50, <8 x float> %1086) #10
  %1161 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1142, <8 x float> %50, <8 x float> %1090) #10
  %1162 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1146, <8 x float> %50, <8 x float> %1094) #10
  %1163 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1150, <8 x float> %50, <8 x float> %1098) #10
  store <8 x float> %1151, <8 x float>* %1049, align 1, !tbaa !12
  store <8 x float> %1152, <8 x float>* %1053, align 1, !tbaa !12
  store <8 x float> %1153, <8 x float>* %1057, align 1, !tbaa !12
  store <8 x float> %1154, <8 x float>* %1061, align 1, !tbaa !12
  store <8 x float> %1155, <8 x float>* %1065, align 1, !tbaa !12
  store <8 x float> %1156, <8 x float>* %1069, align 1, !tbaa !12
  store <8 x float> %1157, <8 x float>* %1073, align 1, !tbaa !12
  store <8 x float> %1158, <8 x float>* %1077, align 1, !tbaa !12
  store <8 x float> %1159, <8 x float>* %1081, align 1, !tbaa !12
  store <8 x float> %1160, <8 x float>* %1085, align 1, !tbaa !12
  store <8 x float> %1161, <8 x float>* %1089, align 1, !tbaa !12
  store <8 x float> %1162, <8 x float>* %1093, align 1, !tbaa !12
  store <8 x float> %1163, <8 x float>* %1097, align 1, !tbaa !12
  %1164 = add nuw nsw i64 %994, 104
  %1165 = icmp ult i64 %1164, %812
  br i1 %1165, label %993, label %986

1166:                                             ; preds = %1171, %20, %434, %986
  %1167 = add nuw nsw i64 %21, 7
  %1168 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1169 = sext i32 %1168 to i64
  %1170 = icmp slt i64 %1167, %1169
  br i1 %1170, label %20, label %8

1171:                                             ; preds = %989, %1171
  %1172 = phi i64 [ 0, %989 ], [ %1356, %1171 ]
  %1173 = getelementptr inbounds float, float* %5, i64 %1172
  %1174 = getelementptr inbounds float, float* %1173, i64 8
  %1175 = bitcast float* %1174 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1175, i32 0, i32 1, i32 1)
  %1176 = getelementptr inbounds float, float* %3, i64 %1172
  %1177 = getelementptr inbounds float, float* %1176, i64 8
  %1178 = bitcast float* %1177 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1178, i32 0, i32 1, i32 1)
  %1179 = getelementptr inbounds float, float* %1173, i64 16
  %1180 = bitcast float* %1179 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1180, i32 0, i32 1, i32 1)
  %1181 = getelementptr inbounds float, float* %1176, i64 16
  %1182 = bitcast float* %1181 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1182, i32 0, i32 1, i32 1)
  %1183 = getelementptr inbounds float, float* %1173, i64 24
  %1184 = bitcast float* %1183 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1184, i32 0, i32 1, i32 1)
  %1185 = getelementptr inbounds float, float* %1176, i64 24
  %1186 = bitcast float* %1185 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1186, i32 0, i32 1, i32 1)
  %1187 = getelementptr inbounds float, float* %1173, i64 32
  %1188 = bitcast float* %1187 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1188, i32 0, i32 1, i32 1)
  %1189 = getelementptr inbounds float, float* %1176, i64 32
  %1190 = bitcast float* %1189 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1190, i32 0, i32 1, i32 1)
  %1191 = getelementptr inbounds float, float* %1173, i64 40
  %1192 = bitcast float* %1191 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1192, i32 0, i32 1, i32 1)
  %1193 = getelementptr inbounds float, float* %1176, i64 40
  %1194 = bitcast float* %1193 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1194, i32 0, i32 1, i32 1)
  %1195 = getelementptr inbounds float, float* %1173, i64 48
  %1196 = bitcast float* %1195 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1196, i32 0, i32 1, i32 1)
  %1197 = getelementptr inbounds float, float* %1176, i64 48
  %1198 = bitcast float* %1197 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1198, i32 0, i32 1, i32 1)
  %1199 = getelementptr inbounds float, float* %1173, i64 56
  %1200 = bitcast float* %1199 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1200, i32 0, i32 1, i32 1)
  %1201 = getelementptr inbounds float, float* %1176, i64 56
  %1202 = bitcast float* %1201 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1202, i32 0, i32 1, i32 1)
  %1203 = getelementptr inbounds float, float* %1173, i64 64
  %1204 = bitcast float* %1203 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1204, i32 0, i32 1, i32 1)
  %1205 = getelementptr inbounds float, float* %1176, i64 64
  %1206 = bitcast float* %1205 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1206, i32 0, i32 1, i32 1)
  %1207 = getelementptr inbounds float, float* %1173, i64 72
  %1208 = bitcast float* %1207 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1208, i32 0, i32 1, i32 1)
  %1209 = getelementptr inbounds float, float* %1176, i64 72
  %1210 = bitcast float* %1209 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1210, i32 0, i32 1, i32 1)
  %1211 = getelementptr inbounds float, float* %1173, i64 80
  %1212 = bitcast float* %1211 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1212, i32 0, i32 1, i32 1)
  %1213 = getelementptr inbounds float, float* %1176, i64 80
  %1214 = bitcast float* %1213 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1214, i32 0, i32 1, i32 1)
  %1215 = getelementptr inbounds float, float* %1173, i64 88
  %1216 = bitcast float* %1215 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1216, i32 0, i32 1, i32 1)
  %1217 = getelementptr inbounds float, float* %1176, i64 88
  %1218 = bitcast float* %1217 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1218, i32 0, i32 1, i32 1)
  %1219 = getelementptr inbounds float, float* %1173, i64 96
  %1220 = bitcast float* %1219 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1220, i32 0, i32 1, i32 1)
  %1221 = getelementptr inbounds float, float* %1176, i64 96
  %1222 = bitcast float* %1221 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1222, i32 0, i32 1, i32 1)
  %1223 = getelementptr inbounds float, float* %1173, i64 104
  %1224 = bitcast float* %1223 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1224, i32 0, i32 1, i32 1)
  %1225 = getelementptr inbounds float, float* %1176, i64 104
  %1226 = bitcast float* %1225 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1226, i32 0, i32 1, i32 1)
  %1227 = bitcast float* %1173 to <8 x float>*
  %1228 = load <8 x float>, <8 x float>* %1227, align 1, !tbaa !12
  %1229 = add nuw nsw i64 %1172, 8
  %1230 = getelementptr inbounds float, float* %5, i64 %1229
  %1231 = bitcast float* %1230 to <8 x float>*
  %1232 = load <8 x float>, <8 x float>* %1231, align 1, !tbaa !12
  %1233 = add nuw nsw i64 %1172, 16
  %1234 = getelementptr inbounds float, float* %5, i64 %1233
  %1235 = bitcast float* %1234 to <8 x float>*
  %1236 = load <8 x float>, <8 x float>* %1235, align 1, !tbaa !12
  %1237 = add nuw nsw i64 %1172, 24
  %1238 = getelementptr inbounds float, float* %5, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nuw nsw i64 %1172, 32
  %1242 = getelementptr inbounds float, float* %5, i64 %1241
  %1243 = bitcast float* %1242 to <8 x float>*
  %1244 = load <8 x float>, <8 x float>* %1243, align 1, !tbaa !12
  %1245 = add nuw nsw i64 %1172, 40
  %1246 = getelementptr inbounds float, float* %5, i64 %1245
  %1247 = bitcast float* %1246 to <8 x float>*
  %1248 = load <8 x float>, <8 x float>* %1247, align 1, !tbaa !12
  %1249 = add nuw nsw i64 %1172, 48
  %1250 = getelementptr inbounds float, float* %5, i64 %1249
  %1251 = bitcast float* %1250 to <8 x float>*
  %1252 = load <8 x float>, <8 x float>* %1251, align 1, !tbaa !12
  %1253 = add nuw nsw i64 %1172, 56
  %1254 = getelementptr inbounds float, float* %5, i64 %1253
  %1255 = bitcast float* %1254 to <8 x float>*
  %1256 = load <8 x float>, <8 x float>* %1255, align 1, !tbaa !12
  %1257 = add nuw nsw i64 %1172, 64
  %1258 = getelementptr inbounds float, float* %5, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nuw nsw i64 %1172, 72
  %1262 = getelementptr inbounds float, float* %5, i64 %1261
  %1263 = bitcast float* %1262 to <8 x float>*
  %1264 = load <8 x float>, <8 x float>* %1263, align 1, !tbaa !12
  %1265 = add nuw nsw i64 %1172, 80
  %1266 = getelementptr inbounds float, float* %5, i64 %1265
  %1267 = bitcast float* %1266 to <8 x float>*
  %1268 = load <8 x float>, <8 x float>* %1267, align 1, !tbaa !12
  %1269 = add nuw nsw i64 %1172, 88
  %1270 = getelementptr inbounds float, float* %5, i64 %1269
  %1271 = bitcast float* %1270 to <8 x float>*
  %1272 = load <8 x float>, <8 x float>* %1271, align 1, !tbaa !12
  %1273 = add nuw nsw i64 %1172, 96
  %1274 = getelementptr inbounds float, float* %5, i64 %1273
  %1275 = bitcast float* %1274 to <8 x float>*
  %1276 = load <8 x float>, <8 x float>* %1275, align 1, !tbaa !12
  %1277 = trunc i64 %1172 to i32
  %1278 = add nsw i32 %992, %1277
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds float, float* %3, i64 %1279
  %1281 = bitcast float* %1280 to <8 x float>*
  %1282 = load <8 x float>, <8 x float>* %1281, align 1, !tbaa !12
  %1283 = add nsw i32 %1278, 8
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds float, float* %3, i64 %1284
  %1286 = bitcast float* %1285 to <8 x float>*
  %1287 = load <8 x float>, <8 x float>* %1286, align 1, !tbaa !12
  %1288 = add nsw i32 %1278, 16
  %1289 = sext i32 %1288 to i64
  %1290 = getelementptr inbounds float, float* %3, i64 %1289
  %1291 = bitcast float* %1290 to <8 x float>*
  %1292 = load <8 x float>, <8 x float>* %1291, align 1, !tbaa !12
  %1293 = add nsw i32 %1278, 24
  %1294 = sext i32 %1293 to i64
  %1295 = getelementptr inbounds float, float* %3, i64 %1294
  %1296 = bitcast float* %1295 to <8 x float>*
  %1297 = load <8 x float>, <8 x float>* %1296, align 1, !tbaa !12
  %1298 = add nsw i32 %1278, 32
  %1299 = sext i32 %1298 to i64
  %1300 = getelementptr inbounds float, float* %3, i64 %1299
  %1301 = bitcast float* %1300 to <8 x float>*
  %1302 = load <8 x float>, <8 x float>* %1301, align 1, !tbaa !12
  %1303 = add nsw i32 %1278, 40
  %1304 = sext i32 %1303 to i64
  %1305 = getelementptr inbounds float, float* %3, i64 %1304
  %1306 = bitcast float* %1305 to <8 x float>*
  %1307 = load <8 x float>, <8 x float>* %1306, align 1, !tbaa !12
  %1308 = add nsw i32 %1278, 48
  %1309 = sext i32 %1308 to i64
  %1310 = getelementptr inbounds float, float* %3, i64 %1309
  %1311 = bitcast float* %1310 to <8 x float>*
  %1312 = load <8 x float>, <8 x float>* %1311, align 1, !tbaa !12
  %1313 = add nsw i32 %1278, 56
  %1314 = sext i32 %1313 to i64
  %1315 = getelementptr inbounds float, float* %3, i64 %1314
  %1316 = bitcast float* %1315 to <8 x float>*
  %1317 = load <8 x float>, <8 x float>* %1316, align 1, !tbaa !12
  %1318 = add nsw i32 %1278, 64
  %1319 = sext i32 %1318 to i64
  %1320 = getelementptr inbounds float, float* %3, i64 %1319
  %1321 = bitcast float* %1320 to <8 x float>*
  %1322 = load <8 x float>, <8 x float>* %1321, align 1, !tbaa !12
  %1323 = add nsw i32 %1278, 72
  %1324 = sext i32 %1323 to i64
  %1325 = getelementptr inbounds float, float* %3, i64 %1324
  %1326 = bitcast float* %1325 to <8 x float>*
  %1327 = load <8 x float>, <8 x float>* %1326, align 1, !tbaa !12
  %1328 = add nsw i32 %1278, 80
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds float, float* %3, i64 %1329
  %1331 = bitcast float* %1330 to <8 x float>*
  %1332 = load <8 x float>, <8 x float>* %1331, align 1, !tbaa !12
  %1333 = add nsw i32 %1278, 88
  %1334 = sext i32 %1333 to i64
  %1335 = getelementptr inbounds float, float* %3, i64 %1334
  %1336 = bitcast float* %1335 to <8 x float>*
  %1337 = load <8 x float>, <8 x float>* %1336, align 1, !tbaa !12
  %1338 = add nsw i32 %1278, 96
  %1339 = sext i32 %1338 to i64
  %1340 = getelementptr inbounds float, float* %3, i64 %1339
  %1341 = bitcast float* %1340 to <8 x float>*
  %1342 = load <8 x float>, <8 x float>* %1341, align 1, !tbaa !12
  %1343 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1282, <8 x float> %55, <8 x float> %1228) #10
  %1344 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1287, <8 x float> %55, <8 x float> %1232) #10
  %1345 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1292, <8 x float> %55, <8 x float> %1236) #10
  %1346 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1297, <8 x float> %55, <8 x float> %1240) #10
  %1347 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1302, <8 x float> %55, <8 x float> %1244) #10
  %1348 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1307, <8 x float> %55, <8 x float> %1248) #10
  %1349 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1312, <8 x float> %55, <8 x float> %1252) #10
  %1350 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1317, <8 x float> %55, <8 x float> %1256) #10
  %1351 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1322, <8 x float> %55, <8 x float> %1260) #10
  %1352 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1327, <8 x float> %55, <8 x float> %1264) #10
  %1353 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1332, <8 x float> %55, <8 x float> %1268) #10
  %1354 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1337, <8 x float> %55, <8 x float> %1272) #10
  %1355 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1342, <8 x float> %55, <8 x float> %1276) #10
  store <8 x float> %1343, <8 x float>* %1227, align 1, !tbaa !12
  store <8 x float> %1344, <8 x float>* %1231, align 1, !tbaa !12
  store <8 x float> %1345, <8 x float>* %1235, align 1, !tbaa !12
  store <8 x float> %1346, <8 x float>* %1239, align 1, !tbaa !12
  store <8 x float> %1347, <8 x float>* %1243, align 1, !tbaa !12
  store <8 x float> %1348, <8 x float>* %1247, align 1, !tbaa !12
  store <8 x float> %1349, <8 x float>* %1251, align 1, !tbaa !12
  store <8 x float> %1350, <8 x float>* %1255, align 1, !tbaa !12
  store <8 x float> %1351, <8 x float>* %1259, align 1, !tbaa !12
  store <8 x float> %1352, <8 x float>* %1263, align 1, !tbaa !12
  store <8 x float> %1353, <8 x float>* %1267, align 1, !tbaa !12
  store <8 x float> %1354, <8 x float>* %1271, align 1, !tbaa !12
  store <8 x float> %1355, <8 x float>* %1275, align 1, !tbaa !12
  %1356 = add nuw nsw i64 %1172, 104
  %1357 = icmp ult i64 %1356, %990
  br i1 %1357, label %1171, label %1166
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 189
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui13_uk7.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
