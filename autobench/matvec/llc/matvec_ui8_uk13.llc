; ModuleID = 'codes/matvec_ui8_uk13.cpp'
source_filename = "codes/matvec_ui8_uk13.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui8_uk13.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = sdiv i32 %1, 64
  %3 = shl nsw i32 %2, 6
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 104
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1489, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1489
  %21 = phi i64 [ %1490, %1489 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %1489

88:                                               ; preds = %20
  %89 = zext i32 %86 to i64
  %90 = trunc i64 %21 to i32
  %91 = mul nsw i32 %86, %90
  br label %98

92:                                               ; preds = %98
  br i1 %87, label %93, label %557

93:                                               ; preds = %92
  %94 = trunc i64 %26 to i32
  %95 = mul nsw i32 %86, %94
  %96 = sext i32 %95 to i64
  %97 = zext i32 %86 to i64
  br label %221

98:                                               ; preds = %88, %98
  %99 = phi i64 [ 0, %88 ], [ %213, %98 ]
  %100 = getelementptr inbounds float, float* %5, i64 %99
  %101 = getelementptr inbounds float, float* %100, i64 8
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %3, i64 %99
  %104 = getelementptr inbounds float, float* %103, i64 8
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %100, i64 16
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %103, i64 16
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %100, i64 24
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %103, i64 24
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %100, i64 32
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %103, i64 32
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %100, i64 40
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %103, i64 40
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %100, i64 48
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %103, i64 48
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %100, i64 56
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %103, i64 56
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %100, i64 64
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %103, i64 64
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = bitcast float* %100 to <8 x float>*
  %135 = load <8 x float>, <8 x float>* %134, align 1, !tbaa !12
  %136 = or i64 %99, 8
  %137 = getelementptr inbounds float, float* %5, i64 %136
  %138 = bitcast float* %137 to <8 x float>*
  %139 = load <8 x float>, <8 x float>* %138, align 1, !tbaa !12
  %140 = or i64 %99, 16
  %141 = getelementptr inbounds float, float* %5, i64 %140
  %142 = bitcast float* %141 to <8 x float>*
  %143 = load <8 x float>, <8 x float>* %142, align 1, !tbaa !12
  %144 = or i64 %99, 24
  %145 = getelementptr inbounds float, float* %5, i64 %144
  %146 = bitcast float* %145 to <8 x float>*
  %147 = load <8 x float>, <8 x float>* %146, align 1, !tbaa !12
  %148 = or i64 %99, 32
  %149 = getelementptr inbounds float, float* %5, i64 %148
  %150 = bitcast float* %149 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = or i64 %99, 40
  %153 = getelementptr inbounds float, float* %5, i64 %152
  %154 = bitcast float* %153 to <8 x float>*
  %155 = load <8 x float>, <8 x float>* %154, align 1, !tbaa !12
  %156 = or i64 %99, 48
  %157 = getelementptr inbounds float, float* %5, i64 %156
  %158 = bitcast float* %157 to <8 x float>*
  %159 = load <8 x float>, <8 x float>* %158, align 1, !tbaa !12
  %160 = or i64 %99, 56
  %161 = getelementptr inbounds float, float* %5, i64 %160
  %162 = bitcast float* %161 to <8 x float>*
  %163 = load <8 x float>, <8 x float>* %162, align 1, !tbaa !12
  %164 = trunc i64 %99 to i32
  %165 = add nsw i32 %91, %164
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds float, float* %3, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = add nsw i32 %165, 8
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds float, float* %3, i64 %171
  %173 = bitcast float* %172 to <8 x float>*
  %174 = load <8 x float>, <8 x float>* %173, align 1, !tbaa !12
  %175 = add nsw i32 %165, 16
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds float, float* %3, i64 %176
  %178 = bitcast float* %177 to <8 x float>*
  %179 = load <8 x float>, <8 x float>* %178, align 1, !tbaa !12
  %180 = add nsw i32 %165, 24
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds float, float* %3, i64 %181
  %183 = bitcast float* %182 to <8 x float>*
  %184 = load <8 x float>, <8 x float>* %183, align 1, !tbaa !12
  %185 = add nsw i32 %165, 32
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds float, float* %3, i64 %186
  %188 = bitcast float* %187 to <8 x float>*
  %189 = load <8 x float>, <8 x float>* %188, align 1, !tbaa !12
  %190 = add nsw i32 %165, 40
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds float, float* %3, i64 %191
  %193 = bitcast float* %192 to <8 x float>*
  %194 = load <8 x float>, <8 x float>* %193, align 1, !tbaa !12
  %195 = add nsw i32 %165, 48
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds float, float* %3, i64 %196
  %198 = bitcast float* %197 to <8 x float>*
  %199 = load <8 x float>, <8 x float>* %198, align 1, !tbaa !12
  %200 = add nsw i32 %165, 56
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds float, float* %3, i64 %201
  %203 = bitcast float* %202 to <8 x float>*
  %204 = load <8 x float>, <8 x float>* %203, align 1, !tbaa !12
  %205 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %169, <8 x float> %25, <8 x float> %135) #10
  %206 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %174, <8 x float> %25, <8 x float> %139) #10
  %207 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %179, <8 x float> %25, <8 x float> %143) #10
  %208 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %184, <8 x float> %25, <8 x float> %147) #10
  %209 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %189, <8 x float> %25, <8 x float> %151) #10
  %210 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %194, <8 x float> %25, <8 x float> %155) #10
  %211 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %199, <8 x float> %25, <8 x float> %159) #10
  %212 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %204, <8 x float> %25, <8 x float> %163) #10
  store <8 x float> %205, <8 x float>* %134, align 1, !tbaa !12
  store <8 x float> %206, <8 x float>* %138, align 1, !tbaa !12
  store <8 x float> %207, <8 x float>* %142, align 1, !tbaa !12
  store <8 x float> %208, <8 x float>* %146, align 1, !tbaa !12
  store <8 x float> %209, <8 x float>* %150, align 1, !tbaa !12
  store <8 x float> %210, <8 x float>* %154, align 1, !tbaa !12
  store <8 x float> %211, <8 x float>* %158, align 1, !tbaa !12
  store <8 x float> %212, <8 x float>* %162, align 1, !tbaa !12
  %213 = add nuw nsw i64 %99, 64
  %214 = icmp ult i64 %213, %89
  br i1 %214, label %98, label %92

215:                                              ; preds = %221
  br i1 %87, label %216, label %557

216:                                              ; preds = %215
  %217 = trunc i64 %31 to i32
  %218 = mul nsw i32 %86, %217
  %219 = sext i32 %218 to i64
  %220 = zext i32 %86 to i64
  br label %335

221:                                              ; preds = %93, %221
  %222 = phi i64 [ 0, %93 ], [ %327, %221 ]
  %223 = getelementptr inbounds float, float* %5, i64 %222
  %224 = getelementptr inbounds float, float* %223, i64 8
  %225 = bitcast float* %224 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %225, i32 0, i32 1, i32 1)
  %226 = getelementptr inbounds float, float* %3, i64 %222
  %227 = getelementptr inbounds float, float* %226, i64 8
  %228 = bitcast float* %227 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %228, i32 0, i32 1, i32 1)
  %229 = getelementptr inbounds float, float* %223, i64 16
  %230 = bitcast float* %229 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %230, i32 0, i32 1, i32 1)
  %231 = getelementptr inbounds float, float* %226, i64 16
  %232 = bitcast float* %231 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %232, i32 0, i32 1, i32 1)
  %233 = getelementptr inbounds float, float* %223, i64 24
  %234 = bitcast float* %233 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %234, i32 0, i32 1, i32 1)
  %235 = getelementptr inbounds float, float* %226, i64 24
  %236 = bitcast float* %235 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %236, i32 0, i32 1, i32 1)
  %237 = getelementptr inbounds float, float* %223, i64 32
  %238 = bitcast float* %237 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %238, i32 0, i32 1, i32 1)
  %239 = getelementptr inbounds float, float* %226, i64 32
  %240 = bitcast float* %239 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %240, i32 0, i32 1, i32 1)
  %241 = getelementptr inbounds float, float* %223, i64 40
  %242 = bitcast float* %241 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %242, i32 0, i32 1, i32 1)
  %243 = getelementptr inbounds float, float* %226, i64 40
  %244 = bitcast float* %243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %244, i32 0, i32 1, i32 1)
  %245 = getelementptr inbounds float, float* %223, i64 48
  %246 = bitcast float* %245 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %246, i32 0, i32 1, i32 1)
  %247 = getelementptr inbounds float, float* %226, i64 48
  %248 = bitcast float* %247 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %248, i32 0, i32 1, i32 1)
  %249 = getelementptr inbounds float, float* %223, i64 56
  %250 = bitcast float* %249 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %250, i32 0, i32 1, i32 1)
  %251 = getelementptr inbounds float, float* %226, i64 56
  %252 = bitcast float* %251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %252, i32 0, i32 1, i32 1)
  %253 = getelementptr inbounds float, float* %223, i64 64
  %254 = bitcast float* %253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %254, i32 0, i32 1, i32 1)
  %255 = getelementptr inbounds float, float* %226, i64 64
  %256 = bitcast float* %255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %256, i32 0, i32 1, i32 1)
  %257 = bitcast float* %223 to <8 x float>*
  %258 = load <8 x float>, <8 x float>* %257, align 1, !tbaa !12
  %259 = or i64 %222, 8
  %260 = getelementptr inbounds float, float* %5, i64 %259
  %261 = bitcast float* %260 to <8 x float>*
  %262 = load <8 x float>, <8 x float>* %261, align 1, !tbaa !12
  %263 = or i64 %222, 16
  %264 = getelementptr inbounds float, float* %5, i64 %263
  %265 = bitcast float* %264 to <8 x float>*
  %266 = load <8 x float>, <8 x float>* %265, align 1, !tbaa !12
  %267 = or i64 %222, 24
  %268 = getelementptr inbounds float, float* %5, i64 %267
  %269 = bitcast float* %268 to <8 x float>*
  %270 = load <8 x float>, <8 x float>* %269, align 1, !tbaa !12
  %271 = or i64 %222, 32
  %272 = getelementptr inbounds float, float* %5, i64 %271
  %273 = bitcast float* %272 to <8 x float>*
  %274 = load <8 x float>, <8 x float>* %273, align 1, !tbaa !12
  %275 = or i64 %222, 40
  %276 = getelementptr inbounds float, float* %5, i64 %275
  %277 = bitcast float* %276 to <8 x float>*
  %278 = load <8 x float>, <8 x float>* %277, align 1, !tbaa !12
  %279 = or i64 %222, 48
  %280 = getelementptr inbounds float, float* %5, i64 %279
  %281 = bitcast float* %280 to <8 x float>*
  %282 = load <8 x float>, <8 x float>* %281, align 1, !tbaa !12
  %283 = or i64 %222, 56
  %284 = getelementptr inbounds float, float* %5, i64 %283
  %285 = bitcast float* %284 to <8 x float>*
  %286 = load <8 x float>, <8 x float>* %285, align 1, !tbaa !12
  %287 = add nsw i64 %222, %96
  %288 = getelementptr inbounds float, float* %3, i64 %287
  %289 = bitcast float* %288 to <8 x float>*
  %290 = load <8 x float>, <8 x float>* %289, align 1, !tbaa !12
  %291 = add nsw i64 %287, 8
  %292 = getelementptr inbounds float, float* %3, i64 %291
  %293 = bitcast float* %292 to <8 x float>*
  %294 = load <8 x float>, <8 x float>* %293, align 1, !tbaa !12
  %295 = add nsw i64 %287, 16
  %296 = getelementptr inbounds float, float* %3, i64 %295
  %297 = bitcast float* %296 to <8 x float>*
  %298 = load <8 x float>, <8 x float>* %297, align 1, !tbaa !12
  %299 = add nsw i64 %287, 24
  %300 = getelementptr inbounds float, float* %3, i64 %299
  %301 = bitcast float* %300 to <8 x float>*
  %302 = load <8 x float>, <8 x float>* %301, align 1, !tbaa !12
  %303 = add nsw i64 %287, 32
  %304 = getelementptr inbounds float, float* %3, i64 %303
  %305 = bitcast float* %304 to <8 x float>*
  %306 = load <8 x float>, <8 x float>* %305, align 1, !tbaa !12
  %307 = add nsw i64 %287, 40
  %308 = getelementptr inbounds float, float* %3, i64 %307
  %309 = bitcast float* %308 to <8 x float>*
  %310 = load <8 x float>, <8 x float>* %309, align 1, !tbaa !12
  %311 = add nsw i64 %287, 48
  %312 = getelementptr inbounds float, float* %3, i64 %311
  %313 = bitcast float* %312 to <8 x float>*
  %314 = load <8 x float>, <8 x float>* %313, align 1, !tbaa !12
  %315 = add nsw i64 %287, 56
  %316 = getelementptr inbounds float, float* %3, i64 %315
  %317 = bitcast float* %316 to <8 x float>*
  %318 = load <8 x float>, <8 x float>* %317, align 1, !tbaa !12
  %319 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %290, <8 x float> %30, <8 x float> %258) #10
  %320 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %294, <8 x float> %30, <8 x float> %262) #10
  %321 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %298, <8 x float> %30, <8 x float> %266) #10
  %322 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %302, <8 x float> %30, <8 x float> %270) #10
  %323 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %306, <8 x float> %30, <8 x float> %274) #10
  %324 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %310, <8 x float> %30, <8 x float> %278) #10
  %325 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %314, <8 x float> %30, <8 x float> %282) #10
  %326 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %318, <8 x float> %30, <8 x float> %286) #10
  store <8 x float> %319, <8 x float>* %257, align 1, !tbaa !12
  store <8 x float> %320, <8 x float>* %261, align 1, !tbaa !12
  store <8 x float> %321, <8 x float>* %265, align 1, !tbaa !12
  store <8 x float> %322, <8 x float>* %269, align 1, !tbaa !12
  store <8 x float> %323, <8 x float>* %273, align 1, !tbaa !12
  store <8 x float> %324, <8 x float>* %277, align 1, !tbaa !12
  store <8 x float> %325, <8 x float>* %281, align 1, !tbaa !12
  store <8 x float> %326, <8 x float>* %285, align 1, !tbaa !12
  %327 = add nuw nsw i64 %222, 64
  %328 = icmp ult i64 %327, %97
  br i1 %328, label %221, label %215

329:                                              ; preds = %335
  br i1 %87, label %330, label %557

330:                                              ; preds = %329
  %331 = trunc i64 %36 to i32
  %332 = mul nsw i32 %86, %331
  %333 = sext i32 %332 to i64
  %334 = zext i32 %86 to i64
  br label %449

335:                                              ; preds = %216, %335
  %336 = phi i64 [ 0, %216 ], [ %441, %335 ]
  %337 = getelementptr inbounds float, float* %5, i64 %336
  %338 = getelementptr inbounds float, float* %337, i64 8
  %339 = bitcast float* %338 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %339, i32 0, i32 1, i32 1)
  %340 = getelementptr inbounds float, float* %3, i64 %336
  %341 = getelementptr inbounds float, float* %340, i64 8
  %342 = bitcast float* %341 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %342, i32 0, i32 1, i32 1)
  %343 = getelementptr inbounds float, float* %337, i64 16
  %344 = bitcast float* %343 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %344, i32 0, i32 1, i32 1)
  %345 = getelementptr inbounds float, float* %340, i64 16
  %346 = bitcast float* %345 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %346, i32 0, i32 1, i32 1)
  %347 = getelementptr inbounds float, float* %337, i64 24
  %348 = bitcast float* %347 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %348, i32 0, i32 1, i32 1)
  %349 = getelementptr inbounds float, float* %340, i64 24
  %350 = bitcast float* %349 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %350, i32 0, i32 1, i32 1)
  %351 = getelementptr inbounds float, float* %337, i64 32
  %352 = bitcast float* %351 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %352, i32 0, i32 1, i32 1)
  %353 = getelementptr inbounds float, float* %340, i64 32
  %354 = bitcast float* %353 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %354, i32 0, i32 1, i32 1)
  %355 = getelementptr inbounds float, float* %337, i64 40
  %356 = bitcast float* %355 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %356, i32 0, i32 1, i32 1)
  %357 = getelementptr inbounds float, float* %340, i64 40
  %358 = bitcast float* %357 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %358, i32 0, i32 1, i32 1)
  %359 = getelementptr inbounds float, float* %337, i64 48
  %360 = bitcast float* %359 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %360, i32 0, i32 1, i32 1)
  %361 = getelementptr inbounds float, float* %340, i64 48
  %362 = bitcast float* %361 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %362, i32 0, i32 1, i32 1)
  %363 = getelementptr inbounds float, float* %337, i64 56
  %364 = bitcast float* %363 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %364, i32 0, i32 1, i32 1)
  %365 = getelementptr inbounds float, float* %340, i64 56
  %366 = bitcast float* %365 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %366, i32 0, i32 1, i32 1)
  %367 = getelementptr inbounds float, float* %337, i64 64
  %368 = bitcast float* %367 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %368, i32 0, i32 1, i32 1)
  %369 = getelementptr inbounds float, float* %340, i64 64
  %370 = bitcast float* %369 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %370, i32 0, i32 1, i32 1)
  %371 = bitcast float* %337 to <8 x float>*
  %372 = load <8 x float>, <8 x float>* %371, align 1, !tbaa !12
  %373 = or i64 %336, 8
  %374 = getelementptr inbounds float, float* %5, i64 %373
  %375 = bitcast float* %374 to <8 x float>*
  %376 = load <8 x float>, <8 x float>* %375, align 1, !tbaa !12
  %377 = or i64 %336, 16
  %378 = getelementptr inbounds float, float* %5, i64 %377
  %379 = bitcast float* %378 to <8 x float>*
  %380 = load <8 x float>, <8 x float>* %379, align 1, !tbaa !12
  %381 = or i64 %336, 24
  %382 = getelementptr inbounds float, float* %5, i64 %381
  %383 = bitcast float* %382 to <8 x float>*
  %384 = load <8 x float>, <8 x float>* %383, align 1, !tbaa !12
  %385 = or i64 %336, 32
  %386 = getelementptr inbounds float, float* %5, i64 %385
  %387 = bitcast float* %386 to <8 x float>*
  %388 = load <8 x float>, <8 x float>* %387, align 1, !tbaa !12
  %389 = or i64 %336, 40
  %390 = getelementptr inbounds float, float* %5, i64 %389
  %391 = bitcast float* %390 to <8 x float>*
  %392 = load <8 x float>, <8 x float>* %391, align 1, !tbaa !12
  %393 = or i64 %336, 48
  %394 = getelementptr inbounds float, float* %5, i64 %393
  %395 = bitcast float* %394 to <8 x float>*
  %396 = load <8 x float>, <8 x float>* %395, align 1, !tbaa !12
  %397 = or i64 %336, 56
  %398 = getelementptr inbounds float, float* %5, i64 %397
  %399 = bitcast float* %398 to <8 x float>*
  %400 = load <8 x float>, <8 x float>* %399, align 1, !tbaa !12
  %401 = add nsw i64 %336, %219
  %402 = getelementptr inbounds float, float* %3, i64 %401
  %403 = bitcast float* %402 to <8 x float>*
  %404 = load <8 x float>, <8 x float>* %403, align 1, !tbaa !12
  %405 = add nsw i64 %401, 8
  %406 = getelementptr inbounds float, float* %3, i64 %405
  %407 = bitcast float* %406 to <8 x float>*
  %408 = load <8 x float>, <8 x float>* %407, align 1, !tbaa !12
  %409 = add nsw i64 %401, 16
  %410 = getelementptr inbounds float, float* %3, i64 %409
  %411 = bitcast float* %410 to <8 x float>*
  %412 = load <8 x float>, <8 x float>* %411, align 1, !tbaa !12
  %413 = add nsw i64 %401, 24
  %414 = getelementptr inbounds float, float* %3, i64 %413
  %415 = bitcast float* %414 to <8 x float>*
  %416 = load <8 x float>, <8 x float>* %415, align 1, !tbaa !12
  %417 = add nsw i64 %401, 32
  %418 = getelementptr inbounds float, float* %3, i64 %417
  %419 = bitcast float* %418 to <8 x float>*
  %420 = load <8 x float>, <8 x float>* %419, align 1, !tbaa !12
  %421 = add nsw i64 %401, 40
  %422 = getelementptr inbounds float, float* %3, i64 %421
  %423 = bitcast float* %422 to <8 x float>*
  %424 = load <8 x float>, <8 x float>* %423, align 1, !tbaa !12
  %425 = add nsw i64 %401, 48
  %426 = getelementptr inbounds float, float* %3, i64 %425
  %427 = bitcast float* %426 to <8 x float>*
  %428 = load <8 x float>, <8 x float>* %427, align 1, !tbaa !12
  %429 = add nsw i64 %401, 56
  %430 = getelementptr inbounds float, float* %3, i64 %429
  %431 = bitcast float* %430 to <8 x float>*
  %432 = load <8 x float>, <8 x float>* %431, align 1, !tbaa !12
  %433 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %404, <8 x float> %35, <8 x float> %372) #10
  %434 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %408, <8 x float> %35, <8 x float> %376) #10
  %435 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %412, <8 x float> %35, <8 x float> %380) #10
  %436 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %416, <8 x float> %35, <8 x float> %384) #10
  %437 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %420, <8 x float> %35, <8 x float> %388) #10
  %438 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %424, <8 x float> %35, <8 x float> %392) #10
  %439 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %428, <8 x float> %35, <8 x float> %396) #10
  %440 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %432, <8 x float> %35, <8 x float> %400) #10
  store <8 x float> %433, <8 x float>* %371, align 1, !tbaa !12
  store <8 x float> %434, <8 x float>* %375, align 1, !tbaa !12
  store <8 x float> %435, <8 x float>* %379, align 1, !tbaa !12
  store <8 x float> %436, <8 x float>* %383, align 1, !tbaa !12
  store <8 x float> %437, <8 x float>* %387, align 1, !tbaa !12
  store <8 x float> %438, <8 x float>* %391, align 1, !tbaa !12
  store <8 x float> %439, <8 x float>* %395, align 1, !tbaa !12
  store <8 x float> %440, <8 x float>* %399, align 1, !tbaa !12
  %441 = add nuw nsw i64 %336, 64
  %442 = icmp ult i64 %441, %220
  br i1 %442, label %335, label %329

443:                                              ; preds = %449
  br i1 %87, label %444, label %557

444:                                              ; preds = %443
  %445 = trunc i64 %41 to i32
  %446 = mul nsw i32 %86, %445
  %447 = sext i32 %446 to i64
  %448 = zext i32 %86 to i64
  br label %564

449:                                              ; preds = %330, %449
  %450 = phi i64 [ 0, %330 ], [ %555, %449 ]
  %451 = getelementptr inbounds float, float* %5, i64 %450
  %452 = getelementptr inbounds float, float* %451, i64 8
  %453 = bitcast float* %452 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %453, i32 0, i32 1, i32 1)
  %454 = getelementptr inbounds float, float* %3, i64 %450
  %455 = getelementptr inbounds float, float* %454, i64 8
  %456 = bitcast float* %455 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %456, i32 0, i32 1, i32 1)
  %457 = getelementptr inbounds float, float* %451, i64 16
  %458 = bitcast float* %457 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %458, i32 0, i32 1, i32 1)
  %459 = getelementptr inbounds float, float* %454, i64 16
  %460 = bitcast float* %459 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %460, i32 0, i32 1, i32 1)
  %461 = getelementptr inbounds float, float* %451, i64 24
  %462 = bitcast float* %461 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %462, i32 0, i32 1, i32 1)
  %463 = getelementptr inbounds float, float* %454, i64 24
  %464 = bitcast float* %463 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %464, i32 0, i32 1, i32 1)
  %465 = getelementptr inbounds float, float* %451, i64 32
  %466 = bitcast float* %465 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %466, i32 0, i32 1, i32 1)
  %467 = getelementptr inbounds float, float* %454, i64 32
  %468 = bitcast float* %467 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %468, i32 0, i32 1, i32 1)
  %469 = getelementptr inbounds float, float* %451, i64 40
  %470 = bitcast float* %469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %470, i32 0, i32 1, i32 1)
  %471 = getelementptr inbounds float, float* %454, i64 40
  %472 = bitcast float* %471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %472, i32 0, i32 1, i32 1)
  %473 = getelementptr inbounds float, float* %451, i64 48
  %474 = bitcast float* %473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %474, i32 0, i32 1, i32 1)
  %475 = getelementptr inbounds float, float* %454, i64 48
  %476 = bitcast float* %475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %476, i32 0, i32 1, i32 1)
  %477 = getelementptr inbounds float, float* %451, i64 56
  %478 = bitcast float* %477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %478, i32 0, i32 1, i32 1)
  %479 = getelementptr inbounds float, float* %454, i64 56
  %480 = bitcast float* %479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %480, i32 0, i32 1, i32 1)
  %481 = getelementptr inbounds float, float* %451, i64 64
  %482 = bitcast float* %481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %482, i32 0, i32 1, i32 1)
  %483 = getelementptr inbounds float, float* %454, i64 64
  %484 = bitcast float* %483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %484, i32 0, i32 1, i32 1)
  %485 = bitcast float* %451 to <8 x float>*
  %486 = load <8 x float>, <8 x float>* %485, align 1, !tbaa !12
  %487 = or i64 %450, 8
  %488 = getelementptr inbounds float, float* %5, i64 %487
  %489 = bitcast float* %488 to <8 x float>*
  %490 = load <8 x float>, <8 x float>* %489, align 1, !tbaa !12
  %491 = or i64 %450, 16
  %492 = getelementptr inbounds float, float* %5, i64 %491
  %493 = bitcast float* %492 to <8 x float>*
  %494 = load <8 x float>, <8 x float>* %493, align 1, !tbaa !12
  %495 = or i64 %450, 24
  %496 = getelementptr inbounds float, float* %5, i64 %495
  %497 = bitcast float* %496 to <8 x float>*
  %498 = load <8 x float>, <8 x float>* %497, align 1, !tbaa !12
  %499 = or i64 %450, 32
  %500 = getelementptr inbounds float, float* %5, i64 %499
  %501 = bitcast float* %500 to <8 x float>*
  %502 = load <8 x float>, <8 x float>* %501, align 1, !tbaa !12
  %503 = or i64 %450, 40
  %504 = getelementptr inbounds float, float* %5, i64 %503
  %505 = bitcast float* %504 to <8 x float>*
  %506 = load <8 x float>, <8 x float>* %505, align 1, !tbaa !12
  %507 = or i64 %450, 48
  %508 = getelementptr inbounds float, float* %5, i64 %507
  %509 = bitcast float* %508 to <8 x float>*
  %510 = load <8 x float>, <8 x float>* %509, align 1, !tbaa !12
  %511 = or i64 %450, 56
  %512 = getelementptr inbounds float, float* %5, i64 %511
  %513 = bitcast float* %512 to <8 x float>*
  %514 = load <8 x float>, <8 x float>* %513, align 1, !tbaa !12
  %515 = add nsw i64 %450, %333
  %516 = getelementptr inbounds float, float* %3, i64 %515
  %517 = bitcast float* %516 to <8 x float>*
  %518 = load <8 x float>, <8 x float>* %517, align 1, !tbaa !12
  %519 = add nsw i64 %515, 8
  %520 = getelementptr inbounds float, float* %3, i64 %519
  %521 = bitcast float* %520 to <8 x float>*
  %522 = load <8 x float>, <8 x float>* %521, align 1, !tbaa !12
  %523 = add nsw i64 %515, 16
  %524 = getelementptr inbounds float, float* %3, i64 %523
  %525 = bitcast float* %524 to <8 x float>*
  %526 = load <8 x float>, <8 x float>* %525, align 1, !tbaa !12
  %527 = add nsw i64 %515, 24
  %528 = getelementptr inbounds float, float* %3, i64 %527
  %529 = bitcast float* %528 to <8 x float>*
  %530 = load <8 x float>, <8 x float>* %529, align 1, !tbaa !12
  %531 = add nsw i64 %515, 32
  %532 = getelementptr inbounds float, float* %3, i64 %531
  %533 = bitcast float* %532 to <8 x float>*
  %534 = load <8 x float>, <8 x float>* %533, align 1, !tbaa !12
  %535 = add nsw i64 %515, 40
  %536 = getelementptr inbounds float, float* %3, i64 %535
  %537 = bitcast float* %536 to <8 x float>*
  %538 = load <8 x float>, <8 x float>* %537, align 1, !tbaa !12
  %539 = add nsw i64 %515, 48
  %540 = getelementptr inbounds float, float* %3, i64 %539
  %541 = bitcast float* %540 to <8 x float>*
  %542 = load <8 x float>, <8 x float>* %541, align 1, !tbaa !12
  %543 = add nsw i64 %515, 56
  %544 = getelementptr inbounds float, float* %3, i64 %543
  %545 = bitcast float* %544 to <8 x float>*
  %546 = load <8 x float>, <8 x float>* %545, align 1, !tbaa !12
  %547 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %518, <8 x float> %40, <8 x float> %486) #10
  %548 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %522, <8 x float> %40, <8 x float> %490) #10
  %549 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %526, <8 x float> %40, <8 x float> %494) #10
  %550 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %530, <8 x float> %40, <8 x float> %498) #10
  %551 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %534, <8 x float> %40, <8 x float> %502) #10
  %552 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %538, <8 x float> %40, <8 x float> %506) #10
  %553 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %542, <8 x float> %40, <8 x float> %510) #10
  %554 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %546, <8 x float> %40, <8 x float> %514) #10
  store <8 x float> %547, <8 x float>* %485, align 1, !tbaa !12
  store <8 x float> %548, <8 x float>* %489, align 1, !tbaa !12
  store <8 x float> %549, <8 x float>* %493, align 1, !tbaa !12
  store <8 x float> %550, <8 x float>* %497, align 1, !tbaa !12
  store <8 x float> %551, <8 x float>* %501, align 1, !tbaa !12
  store <8 x float> %552, <8 x float>* %505, align 1, !tbaa !12
  store <8 x float> %553, <8 x float>* %509, align 1, !tbaa !12
  store <8 x float> %554, <8 x float>* %513, align 1, !tbaa !12
  %555 = add nuw nsw i64 %450, 64
  %556 = icmp ult i64 %555, %334
  br i1 %556, label %449, label %443

557:                                              ; preds = %564, %92, %215, %329, %443
  %558 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %559 = icmp sgt i32 %558, 0
  br i1 %559, label %560, label %1489

560:                                              ; preds = %557
  %561 = zext i32 %558 to i64
  %562 = trunc i64 %46 to i32
  %563 = mul nsw i32 %558, %562
  br label %678

564:                                              ; preds = %444, %564
  %565 = phi i64 [ 0, %444 ], [ %670, %564 ]
  %566 = getelementptr inbounds float, float* %5, i64 %565
  %567 = getelementptr inbounds float, float* %566, i64 8
  %568 = bitcast float* %567 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %568, i32 0, i32 1, i32 1)
  %569 = getelementptr inbounds float, float* %3, i64 %565
  %570 = getelementptr inbounds float, float* %569, i64 8
  %571 = bitcast float* %570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %571, i32 0, i32 1, i32 1)
  %572 = getelementptr inbounds float, float* %566, i64 16
  %573 = bitcast float* %572 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %573, i32 0, i32 1, i32 1)
  %574 = getelementptr inbounds float, float* %569, i64 16
  %575 = bitcast float* %574 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %575, i32 0, i32 1, i32 1)
  %576 = getelementptr inbounds float, float* %566, i64 24
  %577 = bitcast float* %576 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %577, i32 0, i32 1, i32 1)
  %578 = getelementptr inbounds float, float* %569, i64 24
  %579 = bitcast float* %578 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %579, i32 0, i32 1, i32 1)
  %580 = getelementptr inbounds float, float* %566, i64 32
  %581 = bitcast float* %580 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %581, i32 0, i32 1, i32 1)
  %582 = getelementptr inbounds float, float* %569, i64 32
  %583 = bitcast float* %582 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %583, i32 0, i32 1, i32 1)
  %584 = getelementptr inbounds float, float* %566, i64 40
  %585 = bitcast float* %584 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %585, i32 0, i32 1, i32 1)
  %586 = getelementptr inbounds float, float* %569, i64 40
  %587 = bitcast float* %586 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %587, i32 0, i32 1, i32 1)
  %588 = getelementptr inbounds float, float* %566, i64 48
  %589 = bitcast float* %588 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %589, i32 0, i32 1, i32 1)
  %590 = getelementptr inbounds float, float* %569, i64 48
  %591 = bitcast float* %590 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %591, i32 0, i32 1, i32 1)
  %592 = getelementptr inbounds float, float* %566, i64 56
  %593 = bitcast float* %592 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %593, i32 0, i32 1, i32 1)
  %594 = getelementptr inbounds float, float* %569, i64 56
  %595 = bitcast float* %594 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %595, i32 0, i32 1, i32 1)
  %596 = getelementptr inbounds float, float* %566, i64 64
  %597 = bitcast float* %596 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %597, i32 0, i32 1, i32 1)
  %598 = getelementptr inbounds float, float* %569, i64 64
  %599 = bitcast float* %598 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %599, i32 0, i32 1, i32 1)
  %600 = bitcast float* %566 to <8 x float>*
  %601 = load <8 x float>, <8 x float>* %600, align 1, !tbaa !12
  %602 = or i64 %565, 8
  %603 = getelementptr inbounds float, float* %5, i64 %602
  %604 = bitcast float* %603 to <8 x float>*
  %605 = load <8 x float>, <8 x float>* %604, align 1, !tbaa !12
  %606 = or i64 %565, 16
  %607 = getelementptr inbounds float, float* %5, i64 %606
  %608 = bitcast float* %607 to <8 x float>*
  %609 = load <8 x float>, <8 x float>* %608, align 1, !tbaa !12
  %610 = or i64 %565, 24
  %611 = getelementptr inbounds float, float* %5, i64 %610
  %612 = bitcast float* %611 to <8 x float>*
  %613 = load <8 x float>, <8 x float>* %612, align 1, !tbaa !12
  %614 = or i64 %565, 32
  %615 = getelementptr inbounds float, float* %5, i64 %614
  %616 = bitcast float* %615 to <8 x float>*
  %617 = load <8 x float>, <8 x float>* %616, align 1, !tbaa !12
  %618 = or i64 %565, 40
  %619 = getelementptr inbounds float, float* %5, i64 %618
  %620 = bitcast float* %619 to <8 x float>*
  %621 = load <8 x float>, <8 x float>* %620, align 1, !tbaa !12
  %622 = or i64 %565, 48
  %623 = getelementptr inbounds float, float* %5, i64 %622
  %624 = bitcast float* %623 to <8 x float>*
  %625 = load <8 x float>, <8 x float>* %624, align 1, !tbaa !12
  %626 = or i64 %565, 56
  %627 = getelementptr inbounds float, float* %5, i64 %626
  %628 = bitcast float* %627 to <8 x float>*
  %629 = load <8 x float>, <8 x float>* %628, align 1, !tbaa !12
  %630 = add nsw i64 %565, %447
  %631 = getelementptr inbounds float, float* %3, i64 %630
  %632 = bitcast float* %631 to <8 x float>*
  %633 = load <8 x float>, <8 x float>* %632, align 1, !tbaa !12
  %634 = add nsw i64 %630, 8
  %635 = getelementptr inbounds float, float* %3, i64 %634
  %636 = bitcast float* %635 to <8 x float>*
  %637 = load <8 x float>, <8 x float>* %636, align 1, !tbaa !12
  %638 = add nsw i64 %630, 16
  %639 = getelementptr inbounds float, float* %3, i64 %638
  %640 = bitcast float* %639 to <8 x float>*
  %641 = load <8 x float>, <8 x float>* %640, align 1, !tbaa !12
  %642 = add nsw i64 %630, 24
  %643 = getelementptr inbounds float, float* %3, i64 %642
  %644 = bitcast float* %643 to <8 x float>*
  %645 = load <8 x float>, <8 x float>* %644, align 1, !tbaa !12
  %646 = add nsw i64 %630, 32
  %647 = getelementptr inbounds float, float* %3, i64 %646
  %648 = bitcast float* %647 to <8 x float>*
  %649 = load <8 x float>, <8 x float>* %648, align 1, !tbaa !12
  %650 = add nsw i64 %630, 40
  %651 = getelementptr inbounds float, float* %3, i64 %650
  %652 = bitcast float* %651 to <8 x float>*
  %653 = load <8 x float>, <8 x float>* %652, align 1, !tbaa !12
  %654 = add nsw i64 %630, 48
  %655 = getelementptr inbounds float, float* %3, i64 %654
  %656 = bitcast float* %655 to <8 x float>*
  %657 = load <8 x float>, <8 x float>* %656, align 1, !tbaa !12
  %658 = add nsw i64 %630, 56
  %659 = getelementptr inbounds float, float* %3, i64 %658
  %660 = bitcast float* %659 to <8 x float>*
  %661 = load <8 x float>, <8 x float>* %660, align 1, !tbaa !12
  %662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %633, <8 x float> %45, <8 x float> %601) #10
  %663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %637, <8 x float> %45, <8 x float> %605) #10
  %664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %641, <8 x float> %45, <8 x float> %609) #10
  %665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %645, <8 x float> %45, <8 x float> %613) #10
  %666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %649, <8 x float> %45, <8 x float> %617) #10
  %667 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %653, <8 x float> %45, <8 x float> %621) #10
  %668 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %657, <8 x float> %45, <8 x float> %625) #10
  %669 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %661, <8 x float> %45, <8 x float> %629) #10
  store <8 x float> %662, <8 x float>* %600, align 1, !tbaa !12
  store <8 x float> %663, <8 x float>* %604, align 1, !tbaa !12
  store <8 x float> %664, <8 x float>* %608, align 1, !tbaa !12
  store <8 x float> %665, <8 x float>* %612, align 1, !tbaa !12
  store <8 x float> %666, <8 x float>* %616, align 1, !tbaa !12
  store <8 x float> %667, <8 x float>* %620, align 1, !tbaa !12
  store <8 x float> %668, <8 x float>* %624, align 1, !tbaa !12
  store <8 x float> %669, <8 x float>* %628, align 1, !tbaa !12
  %670 = add nuw nsw i64 %565, 64
  %671 = icmp ult i64 %670, %448
  br i1 %671, label %564, label %557

672:                                              ; preds = %678
  br i1 %559, label %673, label %1137

673:                                              ; preds = %672
  %674 = trunc i64 %51 to i32
  %675 = mul nsw i32 %558, %674
  %676 = sext i32 %675 to i64
  %677 = zext i32 %558 to i64
  br label %801

678:                                              ; preds = %560, %678
  %679 = phi i64 [ 0, %560 ], [ %793, %678 ]
  %680 = getelementptr inbounds float, float* %5, i64 %679
  %681 = getelementptr inbounds float, float* %680, i64 8
  %682 = bitcast float* %681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %682, i32 0, i32 1, i32 1)
  %683 = getelementptr inbounds float, float* %3, i64 %679
  %684 = getelementptr inbounds float, float* %683, i64 8
  %685 = bitcast float* %684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %685, i32 0, i32 1, i32 1)
  %686 = getelementptr inbounds float, float* %680, i64 16
  %687 = bitcast float* %686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %687, i32 0, i32 1, i32 1)
  %688 = getelementptr inbounds float, float* %683, i64 16
  %689 = bitcast float* %688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %689, i32 0, i32 1, i32 1)
  %690 = getelementptr inbounds float, float* %680, i64 24
  %691 = bitcast float* %690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %691, i32 0, i32 1, i32 1)
  %692 = getelementptr inbounds float, float* %683, i64 24
  %693 = bitcast float* %692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %693, i32 0, i32 1, i32 1)
  %694 = getelementptr inbounds float, float* %680, i64 32
  %695 = bitcast float* %694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %695, i32 0, i32 1, i32 1)
  %696 = getelementptr inbounds float, float* %683, i64 32
  %697 = bitcast float* %696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %697, i32 0, i32 1, i32 1)
  %698 = getelementptr inbounds float, float* %680, i64 40
  %699 = bitcast float* %698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %699, i32 0, i32 1, i32 1)
  %700 = getelementptr inbounds float, float* %683, i64 40
  %701 = bitcast float* %700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %701, i32 0, i32 1, i32 1)
  %702 = getelementptr inbounds float, float* %680, i64 48
  %703 = bitcast float* %702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %703, i32 0, i32 1, i32 1)
  %704 = getelementptr inbounds float, float* %683, i64 48
  %705 = bitcast float* %704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %705, i32 0, i32 1, i32 1)
  %706 = getelementptr inbounds float, float* %680, i64 56
  %707 = bitcast float* %706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %707, i32 0, i32 1, i32 1)
  %708 = getelementptr inbounds float, float* %683, i64 56
  %709 = bitcast float* %708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %709, i32 0, i32 1, i32 1)
  %710 = getelementptr inbounds float, float* %680, i64 64
  %711 = bitcast float* %710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %711, i32 0, i32 1, i32 1)
  %712 = getelementptr inbounds float, float* %683, i64 64
  %713 = bitcast float* %712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %713, i32 0, i32 1, i32 1)
  %714 = bitcast float* %680 to <8 x float>*
  %715 = load <8 x float>, <8 x float>* %714, align 1, !tbaa !12
  %716 = or i64 %679, 8
  %717 = getelementptr inbounds float, float* %5, i64 %716
  %718 = bitcast float* %717 to <8 x float>*
  %719 = load <8 x float>, <8 x float>* %718, align 1, !tbaa !12
  %720 = or i64 %679, 16
  %721 = getelementptr inbounds float, float* %5, i64 %720
  %722 = bitcast float* %721 to <8 x float>*
  %723 = load <8 x float>, <8 x float>* %722, align 1, !tbaa !12
  %724 = or i64 %679, 24
  %725 = getelementptr inbounds float, float* %5, i64 %724
  %726 = bitcast float* %725 to <8 x float>*
  %727 = load <8 x float>, <8 x float>* %726, align 1, !tbaa !12
  %728 = or i64 %679, 32
  %729 = getelementptr inbounds float, float* %5, i64 %728
  %730 = bitcast float* %729 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = or i64 %679, 40
  %733 = getelementptr inbounds float, float* %5, i64 %732
  %734 = bitcast float* %733 to <8 x float>*
  %735 = load <8 x float>, <8 x float>* %734, align 1, !tbaa !12
  %736 = or i64 %679, 48
  %737 = getelementptr inbounds float, float* %5, i64 %736
  %738 = bitcast float* %737 to <8 x float>*
  %739 = load <8 x float>, <8 x float>* %738, align 1, !tbaa !12
  %740 = or i64 %679, 56
  %741 = getelementptr inbounds float, float* %5, i64 %740
  %742 = bitcast float* %741 to <8 x float>*
  %743 = load <8 x float>, <8 x float>* %742, align 1, !tbaa !12
  %744 = trunc i64 %679 to i32
  %745 = add nsw i32 %563, %744
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds float, float* %3, i64 %746
  %748 = bitcast float* %747 to <8 x float>*
  %749 = load <8 x float>, <8 x float>* %748, align 1, !tbaa !12
  %750 = add nsw i32 %745, 8
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds float, float* %3, i64 %751
  %753 = bitcast float* %752 to <8 x float>*
  %754 = load <8 x float>, <8 x float>* %753, align 1, !tbaa !12
  %755 = add nsw i32 %745, 16
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds float, float* %3, i64 %756
  %758 = bitcast float* %757 to <8 x float>*
  %759 = load <8 x float>, <8 x float>* %758, align 1, !tbaa !12
  %760 = add nsw i32 %745, 24
  %761 = sext i32 %760 to i64
  %762 = getelementptr inbounds float, float* %3, i64 %761
  %763 = bitcast float* %762 to <8 x float>*
  %764 = load <8 x float>, <8 x float>* %763, align 1, !tbaa !12
  %765 = add nsw i32 %745, 32
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds float, float* %3, i64 %766
  %768 = bitcast float* %767 to <8 x float>*
  %769 = load <8 x float>, <8 x float>* %768, align 1, !tbaa !12
  %770 = add nsw i32 %745, 40
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds float, float* %3, i64 %771
  %773 = bitcast float* %772 to <8 x float>*
  %774 = load <8 x float>, <8 x float>* %773, align 1, !tbaa !12
  %775 = add nsw i32 %745, 48
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds float, float* %3, i64 %776
  %778 = bitcast float* %777 to <8 x float>*
  %779 = load <8 x float>, <8 x float>* %778, align 1, !tbaa !12
  %780 = add nsw i32 %745, 56
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds float, float* %3, i64 %781
  %783 = bitcast float* %782 to <8 x float>*
  %784 = load <8 x float>, <8 x float>* %783, align 1, !tbaa !12
  %785 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %749, <8 x float> %50, <8 x float> %715) #10
  %786 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %754, <8 x float> %50, <8 x float> %719) #10
  %787 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %759, <8 x float> %50, <8 x float> %723) #10
  %788 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %764, <8 x float> %50, <8 x float> %727) #10
  %789 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %769, <8 x float> %50, <8 x float> %731) #10
  %790 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %774, <8 x float> %50, <8 x float> %735) #10
  %791 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %779, <8 x float> %50, <8 x float> %739) #10
  %792 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %784, <8 x float> %50, <8 x float> %743) #10
  store <8 x float> %785, <8 x float>* %714, align 1, !tbaa !12
  store <8 x float> %786, <8 x float>* %718, align 1, !tbaa !12
  store <8 x float> %787, <8 x float>* %722, align 1, !tbaa !12
  store <8 x float> %788, <8 x float>* %726, align 1, !tbaa !12
  store <8 x float> %789, <8 x float>* %730, align 1, !tbaa !12
  store <8 x float> %790, <8 x float>* %734, align 1, !tbaa !12
  store <8 x float> %791, <8 x float>* %738, align 1, !tbaa !12
  store <8 x float> %792, <8 x float>* %742, align 1, !tbaa !12
  %793 = add nuw nsw i64 %679, 64
  %794 = icmp ult i64 %793, %561
  br i1 %794, label %678, label %672

795:                                              ; preds = %801
  br i1 %559, label %796, label %1137

796:                                              ; preds = %795
  %797 = trunc i64 %56 to i32
  %798 = mul nsw i32 %558, %797
  %799 = sext i32 %798 to i64
  %800 = zext i32 %558 to i64
  br label %915

801:                                              ; preds = %673, %801
  %802 = phi i64 [ 0, %673 ], [ %907, %801 ]
  %803 = getelementptr inbounds float, float* %5, i64 %802
  %804 = getelementptr inbounds float, float* %803, i64 8
  %805 = bitcast float* %804 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %805, i32 0, i32 1, i32 1)
  %806 = getelementptr inbounds float, float* %3, i64 %802
  %807 = getelementptr inbounds float, float* %806, i64 8
  %808 = bitcast float* %807 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %808, i32 0, i32 1, i32 1)
  %809 = getelementptr inbounds float, float* %803, i64 16
  %810 = bitcast float* %809 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %810, i32 0, i32 1, i32 1)
  %811 = getelementptr inbounds float, float* %806, i64 16
  %812 = bitcast float* %811 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %812, i32 0, i32 1, i32 1)
  %813 = getelementptr inbounds float, float* %803, i64 24
  %814 = bitcast float* %813 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %814, i32 0, i32 1, i32 1)
  %815 = getelementptr inbounds float, float* %806, i64 24
  %816 = bitcast float* %815 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %816, i32 0, i32 1, i32 1)
  %817 = getelementptr inbounds float, float* %803, i64 32
  %818 = bitcast float* %817 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %818, i32 0, i32 1, i32 1)
  %819 = getelementptr inbounds float, float* %806, i64 32
  %820 = bitcast float* %819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %820, i32 0, i32 1, i32 1)
  %821 = getelementptr inbounds float, float* %803, i64 40
  %822 = bitcast float* %821 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %822, i32 0, i32 1, i32 1)
  %823 = getelementptr inbounds float, float* %806, i64 40
  %824 = bitcast float* %823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %824, i32 0, i32 1, i32 1)
  %825 = getelementptr inbounds float, float* %803, i64 48
  %826 = bitcast float* %825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %826, i32 0, i32 1, i32 1)
  %827 = getelementptr inbounds float, float* %806, i64 48
  %828 = bitcast float* %827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %828, i32 0, i32 1, i32 1)
  %829 = getelementptr inbounds float, float* %803, i64 56
  %830 = bitcast float* %829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %830, i32 0, i32 1, i32 1)
  %831 = getelementptr inbounds float, float* %806, i64 56
  %832 = bitcast float* %831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %832, i32 0, i32 1, i32 1)
  %833 = getelementptr inbounds float, float* %803, i64 64
  %834 = bitcast float* %833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %834, i32 0, i32 1, i32 1)
  %835 = getelementptr inbounds float, float* %806, i64 64
  %836 = bitcast float* %835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %836, i32 0, i32 1, i32 1)
  %837 = bitcast float* %803 to <8 x float>*
  %838 = load <8 x float>, <8 x float>* %837, align 1, !tbaa !12
  %839 = or i64 %802, 8
  %840 = getelementptr inbounds float, float* %5, i64 %839
  %841 = bitcast float* %840 to <8 x float>*
  %842 = load <8 x float>, <8 x float>* %841, align 1, !tbaa !12
  %843 = or i64 %802, 16
  %844 = getelementptr inbounds float, float* %5, i64 %843
  %845 = bitcast float* %844 to <8 x float>*
  %846 = load <8 x float>, <8 x float>* %845, align 1, !tbaa !12
  %847 = or i64 %802, 24
  %848 = getelementptr inbounds float, float* %5, i64 %847
  %849 = bitcast float* %848 to <8 x float>*
  %850 = load <8 x float>, <8 x float>* %849, align 1, !tbaa !12
  %851 = or i64 %802, 32
  %852 = getelementptr inbounds float, float* %5, i64 %851
  %853 = bitcast float* %852 to <8 x float>*
  %854 = load <8 x float>, <8 x float>* %853, align 1, !tbaa !12
  %855 = or i64 %802, 40
  %856 = getelementptr inbounds float, float* %5, i64 %855
  %857 = bitcast float* %856 to <8 x float>*
  %858 = load <8 x float>, <8 x float>* %857, align 1, !tbaa !12
  %859 = or i64 %802, 48
  %860 = getelementptr inbounds float, float* %5, i64 %859
  %861 = bitcast float* %860 to <8 x float>*
  %862 = load <8 x float>, <8 x float>* %861, align 1, !tbaa !12
  %863 = or i64 %802, 56
  %864 = getelementptr inbounds float, float* %5, i64 %863
  %865 = bitcast float* %864 to <8 x float>*
  %866 = load <8 x float>, <8 x float>* %865, align 1, !tbaa !12
  %867 = add nsw i64 %802, %676
  %868 = getelementptr inbounds float, float* %3, i64 %867
  %869 = bitcast float* %868 to <8 x float>*
  %870 = load <8 x float>, <8 x float>* %869, align 1, !tbaa !12
  %871 = add nsw i64 %867, 8
  %872 = getelementptr inbounds float, float* %3, i64 %871
  %873 = bitcast float* %872 to <8 x float>*
  %874 = load <8 x float>, <8 x float>* %873, align 1, !tbaa !12
  %875 = add nsw i64 %867, 16
  %876 = getelementptr inbounds float, float* %3, i64 %875
  %877 = bitcast float* %876 to <8 x float>*
  %878 = load <8 x float>, <8 x float>* %877, align 1, !tbaa !12
  %879 = add nsw i64 %867, 24
  %880 = getelementptr inbounds float, float* %3, i64 %879
  %881 = bitcast float* %880 to <8 x float>*
  %882 = load <8 x float>, <8 x float>* %881, align 1, !tbaa !12
  %883 = add nsw i64 %867, 32
  %884 = getelementptr inbounds float, float* %3, i64 %883
  %885 = bitcast float* %884 to <8 x float>*
  %886 = load <8 x float>, <8 x float>* %885, align 1, !tbaa !12
  %887 = add nsw i64 %867, 40
  %888 = getelementptr inbounds float, float* %3, i64 %887
  %889 = bitcast float* %888 to <8 x float>*
  %890 = load <8 x float>, <8 x float>* %889, align 1, !tbaa !12
  %891 = add nsw i64 %867, 48
  %892 = getelementptr inbounds float, float* %3, i64 %891
  %893 = bitcast float* %892 to <8 x float>*
  %894 = load <8 x float>, <8 x float>* %893, align 1, !tbaa !12
  %895 = add nsw i64 %867, 56
  %896 = getelementptr inbounds float, float* %3, i64 %895
  %897 = bitcast float* %896 to <8 x float>*
  %898 = load <8 x float>, <8 x float>* %897, align 1, !tbaa !12
  %899 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %870, <8 x float> %55, <8 x float> %838) #10
  %900 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %874, <8 x float> %55, <8 x float> %842) #10
  %901 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %878, <8 x float> %55, <8 x float> %846) #10
  %902 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %882, <8 x float> %55, <8 x float> %850) #10
  %903 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %886, <8 x float> %55, <8 x float> %854) #10
  %904 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %890, <8 x float> %55, <8 x float> %858) #10
  %905 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %894, <8 x float> %55, <8 x float> %862) #10
  %906 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %898, <8 x float> %55, <8 x float> %866) #10
  store <8 x float> %899, <8 x float>* %837, align 1, !tbaa !12
  store <8 x float> %900, <8 x float>* %841, align 1, !tbaa !12
  store <8 x float> %901, <8 x float>* %845, align 1, !tbaa !12
  store <8 x float> %902, <8 x float>* %849, align 1, !tbaa !12
  store <8 x float> %903, <8 x float>* %853, align 1, !tbaa !12
  store <8 x float> %904, <8 x float>* %857, align 1, !tbaa !12
  store <8 x float> %905, <8 x float>* %861, align 1, !tbaa !12
  store <8 x float> %906, <8 x float>* %865, align 1, !tbaa !12
  %907 = add nuw nsw i64 %802, 64
  %908 = icmp ult i64 %907, %677
  br i1 %908, label %801, label %795

909:                                              ; preds = %915
  br i1 %559, label %910, label %1137

910:                                              ; preds = %909
  %911 = trunc i64 %61 to i32
  %912 = mul nsw i32 %558, %911
  %913 = sext i32 %912 to i64
  %914 = zext i32 %558 to i64
  br label %1029

915:                                              ; preds = %796, %915
  %916 = phi i64 [ 0, %796 ], [ %1021, %915 ]
  %917 = getelementptr inbounds float, float* %5, i64 %916
  %918 = getelementptr inbounds float, float* %917, i64 8
  %919 = bitcast float* %918 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %919, i32 0, i32 1, i32 1)
  %920 = getelementptr inbounds float, float* %3, i64 %916
  %921 = getelementptr inbounds float, float* %920, i64 8
  %922 = bitcast float* %921 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %922, i32 0, i32 1, i32 1)
  %923 = getelementptr inbounds float, float* %917, i64 16
  %924 = bitcast float* %923 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %924, i32 0, i32 1, i32 1)
  %925 = getelementptr inbounds float, float* %920, i64 16
  %926 = bitcast float* %925 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %926, i32 0, i32 1, i32 1)
  %927 = getelementptr inbounds float, float* %917, i64 24
  %928 = bitcast float* %927 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %928, i32 0, i32 1, i32 1)
  %929 = getelementptr inbounds float, float* %920, i64 24
  %930 = bitcast float* %929 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %930, i32 0, i32 1, i32 1)
  %931 = getelementptr inbounds float, float* %917, i64 32
  %932 = bitcast float* %931 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %932, i32 0, i32 1, i32 1)
  %933 = getelementptr inbounds float, float* %920, i64 32
  %934 = bitcast float* %933 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %934, i32 0, i32 1, i32 1)
  %935 = getelementptr inbounds float, float* %917, i64 40
  %936 = bitcast float* %935 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %936, i32 0, i32 1, i32 1)
  %937 = getelementptr inbounds float, float* %920, i64 40
  %938 = bitcast float* %937 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %938, i32 0, i32 1, i32 1)
  %939 = getelementptr inbounds float, float* %917, i64 48
  %940 = bitcast float* %939 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %940, i32 0, i32 1, i32 1)
  %941 = getelementptr inbounds float, float* %920, i64 48
  %942 = bitcast float* %941 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %942, i32 0, i32 1, i32 1)
  %943 = getelementptr inbounds float, float* %917, i64 56
  %944 = bitcast float* %943 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %944, i32 0, i32 1, i32 1)
  %945 = getelementptr inbounds float, float* %920, i64 56
  %946 = bitcast float* %945 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %946, i32 0, i32 1, i32 1)
  %947 = getelementptr inbounds float, float* %917, i64 64
  %948 = bitcast float* %947 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %948, i32 0, i32 1, i32 1)
  %949 = getelementptr inbounds float, float* %920, i64 64
  %950 = bitcast float* %949 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %950, i32 0, i32 1, i32 1)
  %951 = bitcast float* %917 to <8 x float>*
  %952 = load <8 x float>, <8 x float>* %951, align 1, !tbaa !12
  %953 = or i64 %916, 8
  %954 = getelementptr inbounds float, float* %5, i64 %953
  %955 = bitcast float* %954 to <8 x float>*
  %956 = load <8 x float>, <8 x float>* %955, align 1, !tbaa !12
  %957 = or i64 %916, 16
  %958 = getelementptr inbounds float, float* %5, i64 %957
  %959 = bitcast float* %958 to <8 x float>*
  %960 = load <8 x float>, <8 x float>* %959, align 1, !tbaa !12
  %961 = or i64 %916, 24
  %962 = getelementptr inbounds float, float* %5, i64 %961
  %963 = bitcast float* %962 to <8 x float>*
  %964 = load <8 x float>, <8 x float>* %963, align 1, !tbaa !12
  %965 = or i64 %916, 32
  %966 = getelementptr inbounds float, float* %5, i64 %965
  %967 = bitcast float* %966 to <8 x float>*
  %968 = load <8 x float>, <8 x float>* %967, align 1, !tbaa !12
  %969 = or i64 %916, 40
  %970 = getelementptr inbounds float, float* %5, i64 %969
  %971 = bitcast float* %970 to <8 x float>*
  %972 = load <8 x float>, <8 x float>* %971, align 1, !tbaa !12
  %973 = or i64 %916, 48
  %974 = getelementptr inbounds float, float* %5, i64 %973
  %975 = bitcast float* %974 to <8 x float>*
  %976 = load <8 x float>, <8 x float>* %975, align 1, !tbaa !12
  %977 = or i64 %916, 56
  %978 = getelementptr inbounds float, float* %5, i64 %977
  %979 = bitcast float* %978 to <8 x float>*
  %980 = load <8 x float>, <8 x float>* %979, align 1, !tbaa !12
  %981 = add nsw i64 %916, %799
  %982 = getelementptr inbounds float, float* %3, i64 %981
  %983 = bitcast float* %982 to <8 x float>*
  %984 = load <8 x float>, <8 x float>* %983, align 1, !tbaa !12
  %985 = add nsw i64 %981, 8
  %986 = getelementptr inbounds float, float* %3, i64 %985
  %987 = bitcast float* %986 to <8 x float>*
  %988 = load <8 x float>, <8 x float>* %987, align 1, !tbaa !12
  %989 = add nsw i64 %981, 16
  %990 = getelementptr inbounds float, float* %3, i64 %989
  %991 = bitcast float* %990 to <8 x float>*
  %992 = load <8 x float>, <8 x float>* %991, align 1, !tbaa !12
  %993 = add nsw i64 %981, 24
  %994 = getelementptr inbounds float, float* %3, i64 %993
  %995 = bitcast float* %994 to <8 x float>*
  %996 = load <8 x float>, <8 x float>* %995, align 1, !tbaa !12
  %997 = add nsw i64 %981, 32
  %998 = getelementptr inbounds float, float* %3, i64 %997
  %999 = bitcast float* %998 to <8 x float>*
  %1000 = load <8 x float>, <8 x float>* %999, align 1, !tbaa !12
  %1001 = add nsw i64 %981, 40
  %1002 = getelementptr inbounds float, float* %3, i64 %1001
  %1003 = bitcast float* %1002 to <8 x float>*
  %1004 = load <8 x float>, <8 x float>* %1003, align 1, !tbaa !12
  %1005 = add nsw i64 %981, 48
  %1006 = getelementptr inbounds float, float* %3, i64 %1005
  %1007 = bitcast float* %1006 to <8 x float>*
  %1008 = load <8 x float>, <8 x float>* %1007, align 1, !tbaa !12
  %1009 = add nsw i64 %981, 56
  %1010 = getelementptr inbounds float, float* %3, i64 %1009
  %1011 = bitcast float* %1010 to <8 x float>*
  %1012 = load <8 x float>, <8 x float>* %1011, align 1, !tbaa !12
  %1013 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %984, <8 x float> %60, <8 x float> %952) #10
  %1014 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %988, <8 x float> %60, <8 x float> %956) #10
  %1015 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %992, <8 x float> %60, <8 x float> %960) #10
  %1016 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %996, <8 x float> %60, <8 x float> %964) #10
  %1017 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1000, <8 x float> %60, <8 x float> %968) #10
  %1018 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1004, <8 x float> %60, <8 x float> %972) #10
  %1019 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1008, <8 x float> %60, <8 x float> %976) #10
  %1020 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1012, <8 x float> %60, <8 x float> %980) #10
  store <8 x float> %1013, <8 x float>* %951, align 1, !tbaa !12
  store <8 x float> %1014, <8 x float>* %955, align 1, !tbaa !12
  store <8 x float> %1015, <8 x float>* %959, align 1, !tbaa !12
  store <8 x float> %1016, <8 x float>* %963, align 1, !tbaa !12
  store <8 x float> %1017, <8 x float>* %967, align 1, !tbaa !12
  store <8 x float> %1018, <8 x float>* %971, align 1, !tbaa !12
  store <8 x float> %1019, <8 x float>* %975, align 1, !tbaa !12
  store <8 x float> %1020, <8 x float>* %979, align 1, !tbaa !12
  %1021 = add nuw nsw i64 %916, 64
  %1022 = icmp ult i64 %1021, %800
  br i1 %1022, label %915, label %909

1023:                                             ; preds = %1029
  br i1 %559, label %1024, label %1137

1024:                                             ; preds = %1023
  %1025 = trunc i64 %66 to i32
  %1026 = mul nsw i32 %558, %1025
  %1027 = sext i32 %1026 to i64
  %1028 = zext i32 %558 to i64
  br label %1144

1029:                                             ; preds = %910, %1029
  %1030 = phi i64 [ 0, %910 ], [ %1135, %1029 ]
  %1031 = getelementptr inbounds float, float* %5, i64 %1030
  %1032 = getelementptr inbounds float, float* %1031, i64 8
  %1033 = bitcast float* %1032 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1033, i32 0, i32 1, i32 1)
  %1034 = getelementptr inbounds float, float* %3, i64 %1030
  %1035 = getelementptr inbounds float, float* %1034, i64 8
  %1036 = bitcast float* %1035 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1036, i32 0, i32 1, i32 1)
  %1037 = getelementptr inbounds float, float* %1031, i64 16
  %1038 = bitcast float* %1037 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1038, i32 0, i32 1, i32 1)
  %1039 = getelementptr inbounds float, float* %1034, i64 16
  %1040 = bitcast float* %1039 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1040, i32 0, i32 1, i32 1)
  %1041 = getelementptr inbounds float, float* %1031, i64 24
  %1042 = bitcast float* %1041 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1042, i32 0, i32 1, i32 1)
  %1043 = getelementptr inbounds float, float* %1034, i64 24
  %1044 = bitcast float* %1043 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1044, i32 0, i32 1, i32 1)
  %1045 = getelementptr inbounds float, float* %1031, i64 32
  %1046 = bitcast float* %1045 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1046, i32 0, i32 1, i32 1)
  %1047 = getelementptr inbounds float, float* %1034, i64 32
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = getelementptr inbounds float, float* %1031, i64 40
  %1050 = bitcast float* %1049 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1050, i32 0, i32 1, i32 1)
  %1051 = getelementptr inbounds float, float* %1034, i64 40
  %1052 = bitcast float* %1051 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1052, i32 0, i32 1, i32 1)
  %1053 = getelementptr inbounds float, float* %1031, i64 48
  %1054 = bitcast float* %1053 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1054, i32 0, i32 1, i32 1)
  %1055 = getelementptr inbounds float, float* %1034, i64 48
  %1056 = bitcast float* %1055 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1056, i32 0, i32 1, i32 1)
  %1057 = getelementptr inbounds float, float* %1031, i64 56
  %1058 = bitcast float* %1057 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1058, i32 0, i32 1, i32 1)
  %1059 = getelementptr inbounds float, float* %1034, i64 56
  %1060 = bitcast float* %1059 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1060, i32 0, i32 1, i32 1)
  %1061 = getelementptr inbounds float, float* %1031, i64 64
  %1062 = bitcast float* %1061 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1062, i32 0, i32 1, i32 1)
  %1063 = getelementptr inbounds float, float* %1034, i64 64
  %1064 = bitcast float* %1063 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1064, i32 0, i32 1, i32 1)
  %1065 = bitcast float* %1031 to <8 x float>*
  %1066 = load <8 x float>, <8 x float>* %1065, align 1, !tbaa !12
  %1067 = or i64 %1030, 8
  %1068 = getelementptr inbounds float, float* %5, i64 %1067
  %1069 = bitcast float* %1068 to <8 x float>*
  %1070 = load <8 x float>, <8 x float>* %1069, align 1, !tbaa !12
  %1071 = or i64 %1030, 16
  %1072 = getelementptr inbounds float, float* %5, i64 %1071
  %1073 = bitcast float* %1072 to <8 x float>*
  %1074 = load <8 x float>, <8 x float>* %1073, align 1, !tbaa !12
  %1075 = or i64 %1030, 24
  %1076 = getelementptr inbounds float, float* %5, i64 %1075
  %1077 = bitcast float* %1076 to <8 x float>*
  %1078 = load <8 x float>, <8 x float>* %1077, align 1, !tbaa !12
  %1079 = or i64 %1030, 32
  %1080 = getelementptr inbounds float, float* %5, i64 %1079
  %1081 = bitcast float* %1080 to <8 x float>*
  %1082 = load <8 x float>, <8 x float>* %1081, align 1, !tbaa !12
  %1083 = or i64 %1030, 40
  %1084 = getelementptr inbounds float, float* %5, i64 %1083
  %1085 = bitcast float* %1084 to <8 x float>*
  %1086 = load <8 x float>, <8 x float>* %1085, align 1, !tbaa !12
  %1087 = or i64 %1030, 48
  %1088 = getelementptr inbounds float, float* %5, i64 %1087
  %1089 = bitcast float* %1088 to <8 x float>*
  %1090 = load <8 x float>, <8 x float>* %1089, align 1, !tbaa !12
  %1091 = or i64 %1030, 56
  %1092 = getelementptr inbounds float, float* %5, i64 %1091
  %1093 = bitcast float* %1092 to <8 x float>*
  %1094 = load <8 x float>, <8 x float>* %1093, align 1, !tbaa !12
  %1095 = add nsw i64 %1030, %913
  %1096 = getelementptr inbounds float, float* %3, i64 %1095
  %1097 = bitcast float* %1096 to <8 x float>*
  %1098 = load <8 x float>, <8 x float>* %1097, align 1, !tbaa !12
  %1099 = add nsw i64 %1095, 8
  %1100 = getelementptr inbounds float, float* %3, i64 %1099
  %1101 = bitcast float* %1100 to <8 x float>*
  %1102 = load <8 x float>, <8 x float>* %1101, align 1, !tbaa !12
  %1103 = add nsw i64 %1095, 16
  %1104 = getelementptr inbounds float, float* %3, i64 %1103
  %1105 = bitcast float* %1104 to <8 x float>*
  %1106 = load <8 x float>, <8 x float>* %1105, align 1, !tbaa !12
  %1107 = add nsw i64 %1095, 24
  %1108 = getelementptr inbounds float, float* %3, i64 %1107
  %1109 = bitcast float* %1108 to <8 x float>*
  %1110 = load <8 x float>, <8 x float>* %1109, align 1, !tbaa !12
  %1111 = add nsw i64 %1095, 32
  %1112 = getelementptr inbounds float, float* %3, i64 %1111
  %1113 = bitcast float* %1112 to <8 x float>*
  %1114 = load <8 x float>, <8 x float>* %1113, align 1, !tbaa !12
  %1115 = add nsw i64 %1095, 40
  %1116 = getelementptr inbounds float, float* %3, i64 %1115
  %1117 = bitcast float* %1116 to <8 x float>*
  %1118 = load <8 x float>, <8 x float>* %1117, align 1, !tbaa !12
  %1119 = add nsw i64 %1095, 48
  %1120 = getelementptr inbounds float, float* %3, i64 %1119
  %1121 = bitcast float* %1120 to <8 x float>*
  %1122 = load <8 x float>, <8 x float>* %1121, align 1, !tbaa !12
  %1123 = add nsw i64 %1095, 56
  %1124 = getelementptr inbounds float, float* %3, i64 %1123
  %1125 = bitcast float* %1124 to <8 x float>*
  %1126 = load <8 x float>, <8 x float>* %1125, align 1, !tbaa !12
  %1127 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1098, <8 x float> %65, <8 x float> %1066) #10
  %1128 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1102, <8 x float> %65, <8 x float> %1070) #10
  %1129 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1106, <8 x float> %65, <8 x float> %1074) #10
  %1130 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1110, <8 x float> %65, <8 x float> %1078) #10
  %1131 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1114, <8 x float> %65, <8 x float> %1082) #10
  %1132 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1118, <8 x float> %65, <8 x float> %1086) #10
  %1133 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1122, <8 x float> %65, <8 x float> %1090) #10
  %1134 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1126, <8 x float> %65, <8 x float> %1094) #10
  store <8 x float> %1127, <8 x float>* %1065, align 1, !tbaa !12
  store <8 x float> %1128, <8 x float>* %1069, align 1, !tbaa !12
  store <8 x float> %1129, <8 x float>* %1073, align 1, !tbaa !12
  store <8 x float> %1130, <8 x float>* %1077, align 1, !tbaa !12
  store <8 x float> %1131, <8 x float>* %1081, align 1, !tbaa !12
  store <8 x float> %1132, <8 x float>* %1085, align 1, !tbaa !12
  store <8 x float> %1133, <8 x float>* %1089, align 1, !tbaa !12
  store <8 x float> %1134, <8 x float>* %1093, align 1, !tbaa !12
  %1135 = add nuw nsw i64 %1030, 64
  %1136 = icmp ult i64 %1135, %914
  br i1 %1136, label %1029, label %1023

1137:                                             ; preds = %1144, %672, %795, %909, %1023
  %1138 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1139 = icmp sgt i32 %1138, 0
  br i1 %1139, label %1140, label %1489

1140:                                             ; preds = %1137
  %1141 = zext i32 %1138 to i64
  %1142 = trunc i64 %71 to i32
  %1143 = mul nsw i32 %1138, %1142
  br label %1258

1144:                                             ; preds = %1024, %1144
  %1145 = phi i64 [ 0, %1024 ], [ %1250, %1144 ]
  %1146 = getelementptr inbounds float, float* %5, i64 %1145
  %1147 = getelementptr inbounds float, float* %1146, i64 8
  %1148 = bitcast float* %1147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1148, i32 0, i32 1, i32 1)
  %1149 = getelementptr inbounds float, float* %3, i64 %1145
  %1150 = getelementptr inbounds float, float* %1149, i64 8
  %1151 = bitcast float* %1150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1151, i32 0, i32 1, i32 1)
  %1152 = getelementptr inbounds float, float* %1146, i64 16
  %1153 = bitcast float* %1152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1153, i32 0, i32 1, i32 1)
  %1154 = getelementptr inbounds float, float* %1149, i64 16
  %1155 = bitcast float* %1154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1155, i32 0, i32 1, i32 1)
  %1156 = getelementptr inbounds float, float* %1146, i64 24
  %1157 = bitcast float* %1156 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1157, i32 0, i32 1, i32 1)
  %1158 = getelementptr inbounds float, float* %1149, i64 24
  %1159 = bitcast float* %1158 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1159, i32 0, i32 1, i32 1)
  %1160 = getelementptr inbounds float, float* %1146, i64 32
  %1161 = bitcast float* %1160 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1161, i32 0, i32 1, i32 1)
  %1162 = getelementptr inbounds float, float* %1149, i64 32
  %1163 = bitcast float* %1162 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1163, i32 0, i32 1, i32 1)
  %1164 = getelementptr inbounds float, float* %1146, i64 40
  %1165 = bitcast float* %1164 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1165, i32 0, i32 1, i32 1)
  %1166 = getelementptr inbounds float, float* %1149, i64 40
  %1167 = bitcast float* %1166 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1167, i32 0, i32 1, i32 1)
  %1168 = getelementptr inbounds float, float* %1146, i64 48
  %1169 = bitcast float* %1168 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1169, i32 0, i32 1, i32 1)
  %1170 = getelementptr inbounds float, float* %1149, i64 48
  %1171 = bitcast float* %1170 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1171, i32 0, i32 1, i32 1)
  %1172 = getelementptr inbounds float, float* %1146, i64 56
  %1173 = bitcast float* %1172 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1173, i32 0, i32 1, i32 1)
  %1174 = getelementptr inbounds float, float* %1149, i64 56
  %1175 = bitcast float* %1174 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1175, i32 0, i32 1, i32 1)
  %1176 = getelementptr inbounds float, float* %1146, i64 64
  %1177 = bitcast float* %1176 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1177, i32 0, i32 1, i32 1)
  %1178 = getelementptr inbounds float, float* %1149, i64 64
  %1179 = bitcast float* %1178 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1179, i32 0, i32 1, i32 1)
  %1180 = bitcast float* %1146 to <8 x float>*
  %1181 = load <8 x float>, <8 x float>* %1180, align 1, !tbaa !12
  %1182 = or i64 %1145, 8
  %1183 = getelementptr inbounds float, float* %5, i64 %1182
  %1184 = bitcast float* %1183 to <8 x float>*
  %1185 = load <8 x float>, <8 x float>* %1184, align 1, !tbaa !12
  %1186 = or i64 %1145, 16
  %1187 = getelementptr inbounds float, float* %5, i64 %1186
  %1188 = bitcast float* %1187 to <8 x float>*
  %1189 = load <8 x float>, <8 x float>* %1188, align 1, !tbaa !12
  %1190 = or i64 %1145, 24
  %1191 = getelementptr inbounds float, float* %5, i64 %1190
  %1192 = bitcast float* %1191 to <8 x float>*
  %1193 = load <8 x float>, <8 x float>* %1192, align 1, !tbaa !12
  %1194 = or i64 %1145, 32
  %1195 = getelementptr inbounds float, float* %5, i64 %1194
  %1196 = bitcast float* %1195 to <8 x float>*
  %1197 = load <8 x float>, <8 x float>* %1196, align 1, !tbaa !12
  %1198 = or i64 %1145, 40
  %1199 = getelementptr inbounds float, float* %5, i64 %1198
  %1200 = bitcast float* %1199 to <8 x float>*
  %1201 = load <8 x float>, <8 x float>* %1200, align 1, !tbaa !12
  %1202 = or i64 %1145, 48
  %1203 = getelementptr inbounds float, float* %5, i64 %1202
  %1204 = bitcast float* %1203 to <8 x float>*
  %1205 = load <8 x float>, <8 x float>* %1204, align 1, !tbaa !12
  %1206 = or i64 %1145, 56
  %1207 = getelementptr inbounds float, float* %5, i64 %1206
  %1208 = bitcast float* %1207 to <8 x float>*
  %1209 = load <8 x float>, <8 x float>* %1208, align 1, !tbaa !12
  %1210 = add nsw i64 %1145, %1027
  %1211 = getelementptr inbounds float, float* %3, i64 %1210
  %1212 = bitcast float* %1211 to <8 x float>*
  %1213 = load <8 x float>, <8 x float>* %1212, align 1, !tbaa !12
  %1214 = add nsw i64 %1210, 8
  %1215 = getelementptr inbounds float, float* %3, i64 %1214
  %1216 = bitcast float* %1215 to <8 x float>*
  %1217 = load <8 x float>, <8 x float>* %1216, align 1, !tbaa !12
  %1218 = add nsw i64 %1210, 16
  %1219 = getelementptr inbounds float, float* %3, i64 %1218
  %1220 = bitcast float* %1219 to <8 x float>*
  %1221 = load <8 x float>, <8 x float>* %1220, align 1, !tbaa !12
  %1222 = add nsw i64 %1210, 24
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i64 %1210, 32
  %1227 = getelementptr inbounds float, float* %3, i64 %1226
  %1228 = bitcast float* %1227 to <8 x float>*
  %1229 = load <8 x float>, <8 x float>* %1228, align 1, !tbaa !12
  %1230 = add nsw i64 %1210, 40
  %1231 = getelementptr inbounds float, float* %3, i64 %1230
  %1232 = bitcast float* %1231 to <8 x float>*
  %1233 = load <8 x float>, <8 x float>* %1232, align 1, !tbaa !12
  %1234 = add nsw i64 %1210, 48
  %1235 = getelementptr inbounds float, float* %3, i64 %1234
  %1236 = bitcast float* %1235 to <8 x float>*
  %1237 = load <8 x float>, <8 x float>* %1236, align 1, !tbaa !12
  %1238 = add nsw i64 %1210, 56
  %1239 = getelementptr inbounds float, float* %3, i64 %1238
  %1240 = bitcast float* %1239 to <8 x float>*
  %1241 = load <8 x float>, <8 x float>* %1240, align 1, !tbaa !12
  %1242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1213, <8 x float> %70, <8 x float> %1181) #10
  %1243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1217, <8 x float> %70, <8 x float> %1185) #10
  %1244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1221, <8 x float> %70, <8 x float> %1189) #10
  %1245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %70, <8 x float> %1193) #10
  %1246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1229, <8 x float> %70, <8 x float> %1197) #10
  %1247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1233, <8 x float> %70, <8 x float> %1201) #10
  %1248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1237, <8 x float> %70, <8 x float> %1205) #10
  %1249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1241, <8 x float> %70, <8 x float> %1209) #10
  store <8 x float> %1242, <8 x float>* %1180, align 1, !tbaa !12
  store <8 x float> %1243, <8 x float>* %1184, align 1, !tbaa !12
  store <8 x float> %1244, <8 x float>* %1188, align 1, !tbaa !12
  store <8 x float> %1245, <8 x float>* %1192, align 1, !tbaa !12
  store <8 x float> %1246, <8 x float>* %1196, align 1, !tbaa !12
  store <8 x float> %1247, <8 x float>* %1200, align 1, !tbaa !12
  store <8 x float> %1248, <8 x float>* %1204, align 1, !tbaa !12
  store <8 x float> %1249, <8 x float>* %1208, align 1, !tbaa !12
  %1250 = add nuw nsw i64 %1145, 64
  %1251 = icmp ult i64 %1250, %1028
  br i1 %1251, label %1144, label %1137

1252:                                             ; preds = %1258
  br i1 %1139, label %1253, label %1489

1253:                                             ; preds = %1252
  %1254 = trunc i64 %76 to i32
  %1255 = mul nsw i32 %1138, %1254
  %1256 = sext i32 %1255 to i64
  %1257 = zext i32 %1138 to i64
  br label %1381

1258:                                             ; preds = %1140, %1258
  %1259 = phi i64 [ 0, %1140 ], [ %1373, %1258 ]
  %1260 = getelementptr inbounds float, float* %5, i64 %1259
  %1261 = getelementptr inbounds float, float* %1260, i64 8
  %1262 = bitcast float* %1261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1262, i32 0, i32 1, i32 1)
  %1263 = getelementptr inbounds float, float* %3, i64 %1259
  %1264 = getelementptr inbounds float, float* %1263, i64 8
  %1265 = bitcast float* %1264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1265, i32 0, i32 1, i32 1)
  %1266 = getelementptr inbounds float, float* %1260, i64 16
  %1267 = bitcast float* %1266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1267, i32 0, i32 1, i32 1)
  %1268 = getelementptr inbounds float, float* %1263, i64 16
  %1269 = bitcast float* %1268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1269, i32 0, i32 1, i32 1)
  %1270 = getelementptr inbounds float, float* %1260, i64 24
  %1271 = bitcast float* %1270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1271, i32 0, i32 1, i32 1)
  %1272 = getelementptr inbounds float, float* %1263, i64 24
  %1273 = bitcast float* %1272 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1273, i32 0, i32 1, i32 1)
  %1274 = getelementptr inbounds float, float* %1260, i64 32
  %1275 = bitcast float* %1274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1275, i32 0, i32 1, i32 1)
  %1276 = getelementptr inbounds float, float* %1263, i64 32
  %1277 = bitcast float* %1276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1277, i32 0, i32 1, i32 1)
  %1278 = getelementptr inbounds float, float* %1260, i64 40
  %1279 = bitcast float* %1278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1279, i32 0, i32 1, i32 1)
  %1280 = getelementptr inbounds float, float* %1263, i64 40
  %1281 = bitcast float* %1280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1281, i32 0, i32 1, i32 1)
  %1282 = getelementptr inbounds float, float* %1260, i64 48
  %1283 = bitcast float* %1282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1283, i32 0, i32 1, i32 1)
  %1284 = getelementptr inbounds float, float* %1263, i64 48
  %1285 = bitcast float* %1284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1285, i32 0, i32 1, i32 1)
  %1286 = getelementptr inbounds float, float* %1260, i64 56
  %1287 = bitcast float* %1286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1287, i32 0, i32 1, i32 1)
  %1288 = getelementptr inbounds float, float* %1263, i64 56
  %1289 = bitcast float* %1288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1289, i32 0, i32 1, i32 1)
  %1290 = getelementptr inbounds float, float* %1260, i64 64
  %1291 = bitcast float* %1290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1291, i32 0, i32 1, i32 1)
  %1292 = getelementptr inbounds float, float* %1263, i64 64
  %1293 = bitcast float* %1292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1293, i32 0, i32 1, i32 1)
  %1294 = bitcast float* %1260 to <8 x float>*
  %1295 = load <8 x float>, <8 x float>* %1294, align 1, !tbaa !12
  %1296 = or i64 %1259, 8
  %1297 = getelementptr inbounds float, float* %5, i64 %1296
  %1298 = bitcast float* %1297 to <8 x float>*
  %1299 = load <8 x float>, <8 x float>* %1298, align 1, !tbaa !12
  %1300 = or i64 %1259, 16
  %1301 = getelementptr inbounds float, float* %5, i64 %1300
  %1302 = bitcast float* %1301 to <8 x float>*
  %1303 = load <8 x float>, <8 x float>* %1302, align 1, !tbaa !12
  %1304 = or i64 %1259, 24
  %1305 = getelementptr inbounds float, float* %5, i64 %1304
  %1306 = bitcast float* %1305 to <8 x float>*
  %1307 = load <8 x float>, <8 x float>* %1306, align 1, !tbaa !12
  %1308 = or i64 %1259, 32
  %1309 = getelementptr inbounds float, float* %5, i64 %1308
  %1310 = bitcast float* %1309 to <8 x float>*
  %1311 = load <8 x float>, <8 x float>* %1310, align 1, !tbaa !12
  %1312 = or i64 %1259, 40
  %1313 = getelementptr inbounds float, float* %5, i64 %1312
  %1314 = bitcast float* %1313 to <8 x float>*
  %1315 = load <8 x float>, <8 x float>* %1314, align 1, !tbaa !12
  %1316 = or i64 %1259, 48
  %1317 = getelementptr inbounds float, float* %5, i64 %1316
  %1318 = bitcast float* %1317 to <8 x float>*
  %1319 = load <8 x float>, <8 x float>* %1318, align 1, !tbaa !12
  %1320 = or i64 %1259, 56
  %1321 = getelementptr inbounds float, float* %5, i64 %1320
  %1322 = bitcast float* %1321 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = trunc i64 %1259 to i32
  %1325 = add nsw i32 %1143, %1324
  %1326 = sext i32 %1325 to i64
  %1327 = getelementptr inbounds float, float* %3, i64 %1326
  %1328 = bitcast float* %1327 to <8 x float>*
  %1329 = load <8 x float>, <8 x float>* %1328, align 1, !tbaa !12
  %1330 = add nsw i32 %1325, 8
  %1331 = sext i32 %1330 to i64
  %1332 = getelementptr inbounds float, float* %3, i64 %1331
  %1333 = bitcast float* %1332 to <8 x float>*
  %1334 = load <8 x float>, <8 x float>* %1333, align 1, !tbaa !12
  %1335 = add nsw i32 %1325, 16
  %1336 = sext i32 %1335 to i64
  %1337 = getelementptr inbounds float, float* %3, i64 %1336
  %1338 = bitcast float* %1337 to <8 x float>*
  %1339 = load <8 x float>, <8 x float>* %1338, align 1, !tbaa !12
  %1340 = add nsw i32 %1325, 24
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds float, float* %3, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nsw i32 %1325, 32
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds float, float* %3, i64 %1346
  %1348 = bitcast float* %1347 to <8 x float>*
  %1349 = load <8 x float>, <8 x float>* %1348, align 1, !tbaa !12
  %1350 = add nsw i32 %1325, 40
  %1351 = sext i32 %1350 to i64
  %1352 = getelementptr inbounds float, float* %3, i64 %1351
  %1353 = bitcast float* %1352 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = add nsw i32 %1325, 48
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds float, float* %3, i64 %1356
  %1358 = bitcast float* %1357 to <8 x float>*
  %1359 = load <8 x float>, <8 x float>* %1358, align 1, !tbaa !12
  %1360 = add nsw i32 %1325, 56
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds float, float* %3, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1329, <8 x float> %75, <8 x float> %1295) #10
  %1366 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1334, <8 x float> %75, <8 x float> %1299) #10
  %1367 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1339, <8 x float> %75, <8 x float> %1303) #10
  %1368 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1344, <8 x float> %75, <8 x float> %1307) #10
  %1369 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1349, <8 x float> %75, <8 x float> %1311) #10
  %1370 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1354, <8 x float> %75, <8 x float> %1315) #10
  %1371 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1359, <8 x float> %75, <8 x float> %1319) #10
  %1372 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1364, <8 x float> %75, <8 x float> %1323) #10
  store <8 x float> %1365, <8 x float>* %1294, align 1, !tbaa !12
  store <8 x float> %1366, <8 x float>* %1298, align 1, !tbaa !12
  store <8 x float> %1367, <8 x float>* %1302, align 1, !tbaa !12
  store <8 x float> %1368, <8 x float>* %1306, align 1, !tbaa !12
  store <8 x float> %1369, <8 x float>* %1310, align 1, !tbaa !12
  store <8 x float> %1370, <8 x float>* %1314, align 1, !tbaa !12
  store <8 x float> %1371, <8 x float>* %1318, align 1, !tbaa !12
  store <8 x float> %1372, <8 x float>* %1322, align 1, !tbaa !12
  %1373 = add nuw nsw i64 %1259, 64
  %1374 = icmp ult i64 %1373, %1141
  br i1 %1374, label %1258, label %1252

1375:                                             ; preds = %1381
  br i1 %1139, label %1376, label %1489

1376:                                             ; preds = %1375
  %1377 = trunc i64 %81 to i32
  %1378 = mul nsw i32 %1138, %1377
  %1379 = sext i32 %1378 to i64
  %1380 = zext i32 %1138 to i64
  br label %1494

1381:                                             ; preds = %1253, %1381
  %1382 = phi i64 [ 0, %1253 ], [ %1487, %1381 ]
  %1383 = getelementptr inbounds float, float* %5, i64 %1382
  %1384 = getelementptr inbounds float, float* %1383, i64 8
  %1385 = bitcast float* %1384 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1385, i32 0, i32 1, i32 1)
  %1386 = getelementptr inbounds float, float* %3, i64 %1382
  %1387 = getelementptr inbounds float, float* %1386, i64 8
  %1388 = bitcast float* %1387 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1388, i32 0, i32 1, i32 1)
  %1389 = getelementptr inbounds float, float* %1383, i64 16
  %1390 = bitcast float* %1389 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1390, i32 0, i32 1, i32 1)
  %1391 = getelementptr inbounds float, float* %1386, i64 16
  %1392 = bitcast float* %1391 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1392, i32 0, i32 1, i32 1)
  %1393 = getelementptr inbounds float, float* %1383, i64 24
  %1394 = bitcast float* %1393 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1394, i32 0, i32 1, i32 1)
  %1395 = getelementptr inbounds float, float* %1386, i64 24
  %1396 = bitcast float* %1395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1396, i32 0, i32 1, i32 1)
  %1397 = getelementptr inbounds float, float* %1383, i64 32
  %1398 = bitcast float* %1397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1398, i32 0, i32 1, i32 1)
  %1399 = getelementptr inbounds float, float* %1386, i64 32
  %1400 = bitcast float* %1399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1400, i32 0, i32 1, i32 1)
  %1401 = getelementptr inbounds float, float* %1383, i64 40
  %1402 = bitcast float* %1401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1402, i32 0, i32 1, i32 1)
  %1403 = getelementptr inbounds float, float* %1386, i64 40
  %1404 = bitcast float* %1403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1404, i32 0, i32 1, i32 1)
  %1405 = getelementptr inbounds float, float* %1383, i64 48
  %1406 = bitcast float* %1405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1406, i32 0, i32 1, i32 1)
  %1407 = getelementptr inbounds float, float* %1386, i64 48
  %1408 = bitcast float* %1407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1408, i32 0, i32 1, i32 1)
  %1409 = getelementptr inbounds float, float* %1383, i64 56
  %1410 = bitcast float* %1409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1410, i32 0, i32 1, i32 1)
  %1411 = getelementptr inbounds float, float* %1386, i64 56
  %1412 = bitcast float* %1411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1412, i32 0, i32 1, i32 1)
  %1413 = getelementptr inbounds float, float* %1383, i64 64
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %1386, i64 64
  %1416 = bitcast float* %1415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1416, i32 0, i32 1, i32 1)
  %1417 = bitcast float* %1383 to <8 x float>*
  %1418 = load <8 x float>, <8 x float>* %1417, align 1, !tbaa !12
  %1419 = or i64 %1382, 8
  %1420 = getelementptr inbounds float, float* %5, i64 %1419
  %1421 = bitcast float* %1420 to <8 x float>*
  %1422 = load <8 x float>, <8 x float>* %1421, align 1, !tbaa !12
  %1423 = or i64 %1382, 16
  %1424 = getelementptr inbounds float, float* %5, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = or i64 %1382, 24
  %1428 = getelementptr inbounds float, float* %5, i64 %1427
  %1429 = bitcast float* %1428 to <8 x float>*
  %1430 = load <8 x float>, <8 x float>* %1429, align 1, !tbaa !12
  %1431 = or i64 %1382, 32
  %1432 = getelementptr inbounds float, float* %5, i64 %1431
  %1433 = bitcast float* %1432 to <8 x float>*
  %1434 = load <8 x float>, <8 x float>* %1433, align 1, !tbaa !12
  %1435 = or i64 %1382, 40
  %1436 = getelementptr inbounds float, float* %5, i64 %1435
  %1437 = bitcast float* %1436 to <8 x float>*
  %1438 = load <8 x float>, <8 x float>* %1437, align 1, !tbaa !12
  %1439 = or i64 %1382, 48
  %1440 = getelementptr inbounds float, float* %5, i64 %1439
  %1441 = bitcast float* %1440 to <8 x float>*
  %1442 = load <8 x float>, <8 x float>* %1441, align 1, !tbaa !12
  %1443 = or i64 %1382, 56
  %1444 = getelementptr inbounds float, float* %5, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nsw i64 %1382, %1256
  %1448 = getelementptr inbounds float, float* %3, i64 %1447
  %1449 = bitcast float* %1448 to <8 x float>*
  %1450 = load <8 x float>, <8 x float>* %1449, align 1, !tbaa !12
  %1451 = add nsw i64 %1447, 8
  %1452 = getelementptr inbounds float, float* %3, i64 %1451
  %1453 = bitcast float* %1452 to <8 x float>*
  %1454 = load <8 x float>, <8 x float>* %1453, align 1, !tbaa !12
  %1455 = add nsw i64 %1447, 16
  %1456 = getelementptr inbounds float, float* %3, i64 %1455
  %1457 = bitcast float* %1456 to <8 x float>*
  %1458 = load <8 x float>, <8 x float>* %1457, align 1, !tbaa !12
  %1459 = add nsw i64 %1447, 24
  %1460 = getelementptr inbounds float, float* %3, i64 %1459
  %1461 = bitcast float* %1460 to <8 x float>*
  %1462 = load <8 x float>, <8 x float>* %1461, align 1, !tbaa !12
  %1463 = add nsw i64 %1447, 32
  %1464 = getelementptr inbounds float, float* %3, i64 %1463
  %1465 = bitcast float* %1464 to <8 x float>*
  %1466 = load <8 x float>, <8 x float>* %1465, align 1, !tbaa !12
  %1467 = add nsw i64 %1447, 40
  %1468 = getelementptr inbounds float, float* %3, i64 %1467
  %1469 = bitcast float* %1468 to <8 x float>*
  %1470 = load <8 x float>, <8 x float>* %1469, align 1, !tbaa !12
  %1471 = add nsw i64 %1447, 48
  %1472 = getelementptr inbounds float, float* %3, i64 %1471
  %1473 = bitcast float* %1472 to <8 x float>*
  %1474 = load <8 x float>, <8 x float>* %1473, align 1, !tbaa !12
  %1475 = add nsw i64 %1447, 56
  %1476 = getelementptr inbounds float, float* %3, i64 %1475
  %1477 = bitcast float* %1476 to <8 x float>*
  %1478 = load <8 x float>, <8 x float>* %1477, align 1, !tbaa !12
  %1479 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1450, <8 x float> %80, <8 x float> %1418) #10
  %1480 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1454, <8 x float> %80, <8 x float> %1422) #10
  %1481 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1458, <8 x float> %80, <8 x float> %1426) #10
  %1482 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1462, <8 x float> %80, <8 x float> %1430) #10
  %1483 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1466, <8 x float> %80, <8 x float> %1434) #10
  %1484 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1470, <8 x float> %80, <8 x float> %1438) #10
  %1485 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1474, <8 x float> %80, <8 x float> %1442) #10
  %1486 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1478, <8 x float> %80, <8 x float> %1446) #10
  store <8 x float> %1479, <8 x float>* %1417, align 1, !tbaa !12
  store <8 x float> %1480, <8 x float>* %1421, align 1, !tbaa !12
  store <8 x float> %1481, <8 x float>* %1425, align 1, !tbaa !12
  store <8 x float> %1482, <8 x float>* %1429, align 1, !tbaa !12
  store <8 x float> %1483, <8 x float>* %1433, align 1, !tbaa !12
  store <8 x float> %1484, <8 x float>* %1437, align 1, !tbaa !12
  store <8 x float> %1485, <8 x float>* %1441, align 1, !tbaa !12
  store <8 x float> %1486, <8 x float>* %1445, align 1, !tbaa !12
  %1487 = add nuw nsw i64 %1382, 64
  %1488 = icmp ult i64 %1487, %1257
  br i1 %1488, label %1381, label %1375

1489:                                             ; preds = %1494, %20, %557, %1137, %1252, %1375
  %1490 = add nuw nsw i64 %21, 13
  %1491 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1492 = sext i32 %1491 to i64
  %1493 = icmp slt i64 %1490, %1492
  br i1 %1493, label %20, label %8

1494:                                             ; preds = %1376, %1494
  %1495 = phi i64 [ 0, %1376 ], [ %1600, %1494 ]
  %1496 = getelementptr inbounds float, float* %5, i64 %1495
  %1497 = getelementptr inbounds float, float* %1496, i64 8
  %1498 = bitcast float* %1497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1498, i32 0, i32 1, i32 1)
  %1499 = getelementptr inbounds float, float* %3, i64 %1495
  %1500 = getelementptr inbounds float, float* %1499, i64 8
  %1501 = bitcast float* %1500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1501, i32 0, i32 1, i32 1)
  %1502 = getelementptr inbounds float, float* %1496, i64 16
  %1503 = bitcast float* %1502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1503, i32 0, i32 1, i32 1)
  %1504 = getelementptr inbounds float, float* %1499, i64 16
  %1505 = bitcast float* %1504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1505, i32 0, i32 1, i32 1)
  %1506 = getelementptr inbounds float, float* %1496, i64 24
  %1507 = bitcast float* %1506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1507, i32 0, i32 1, i32 1)
  %1508 = getelementptr inbounds float, float* %1499, i64 24
  %1509 = bitcast float* %1508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1509, i32 0, i32 1, i32 1)
  %1510 = getelementptr inbounds float, float* %1496, i64 32
  %1511 = bitcast float* %1510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1511, i32 0, i32 1, i32 1)
  %1512 = getelementptr inbounds float, float* %1499, i64 32
  %1513 = bitcast float* %1512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1513, i32 0, i32 1, i32 1)
  %1514 = getelementptr inbounds float, float* %1496, i64 40
  %1515 = bitcast float* %1514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1515, i32 0, i32 1, i32 1)
  %1516 = getelementptr inbounds float, float* %1499, i64 40
  %1517 = bitcast float* %1516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1517, i32 0, i32 1, i32 1)
  %1518 = getelementptr inbounds float, float* %1496, i64 48
  %1519 = bitcast float* %1518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1519, i32 0, i32 1, i32 1)
  %1520 = getelementptr inbounds float, float* %1499, i64 48
  %1521 = bitcast float* %1520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1521, i32 0, i32 1, i32 1)
  %1522 = getelementptr inbounds float, float* %1496, i64 56
  %1523 = bitcast float* %1522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1523, i32 0, i32 1, i32 1)
  %1524 = getelementptr inbounds float, float* %1499, i64 56
  %1525 = bitcast float* %1524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1525, i32 0, i32 1, i32 1)
  %1526 = getelementptr inbounds float, float* %1496, i64 64
  %1527 = bitcast float* %1526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1527, i32 0, i32 1, i32 1)
  %1528 = getelementptr inbounds float, float* %1499, i64 64
  %1529 = bitcast float* %1528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1529, i32 0, i32 1, i32 1)
  %1530 = bitcast float* %1496 to <8 x float>*
  %1531 = load <8 x float>, <8 x float>* %1530, align 1, !tbaa !12
  %1532 = or i64 %1495, 8
  %1533 = getelementptr inbounds float, float* %5, i64 %1532
  %1534 = bitcast float* %1533 to <8 x float>*
  %1535 = load <8 x float>, <8 x float>* %1534, align 1, !tbaa !12
  %1536 = or i64 %1495, 16
  %1537 = getelementptr inbounds float, float* %5, i64 %1536
  %1538 = bitcast float* %1537 to <8 x float>*
  %1539 = load <8 x float>, <8 x float>* %1538, align 1, !tbaa !12
  %1540 = or i64 %1495, 24
  %1541 = getelementptr inbounds float, float* %5, i64 %1540
  %1542 = bitcast float* %1541 to <8 x float>*
  %1543 = load <8 x float>, <8 x float>* %1542, align 1, !tbaa !12
  %1544 = or i64 %1495, 32
  %1545 = getelementptr inbounds float, float* %5, i64 %1544
  %1546 = bitcast float* %1545 to <8 x float>*
  %1547 = load <8 x float>, <8 x float>* %1546, align 1, !tbaa !12
  %1548 = or i64 %1495, 40
  %1549 = getelementptr inbounds float, float* %5, i64 %1548
  %1550 = bitcast float* %1549 to <8 x float>*
  %1551 = load <8 x float>, <8 x float>* %1550, align 1, !tbaa !12
  %1552 = or i64 %1495, 48
  %1553 = getelementptr inbounds float, float* %5, i64 %1552
  %1554 = bitcast float* %1553 to <8 x float>*
  %1555 = load <8 x float>, <8 x float>* %1554, align 1, !tbaa !12
  %1556 = or i64 %1495, 56
  %1557 = getelementptr inbounds float, float* %5, i64 %1556
  %1558 = bitcast float* %1557 to <8 x float>*
  %1559 = load <8 x float>, <8 x float>* %1558, align 1, !tbaa !12
  %1560 = add nsw i64 %1495, %1379
  %1561 = getelementptr inbounds float, float* %3, i64 %1560
  %1562 = bitcast float* %1561 to <8 x float>*
  %1563 = load <8 x float>, <8 x float>* %1562, align 1, !tbaa !12
  %1564 = add nsw i64 %1560, 8
  %1565 = getelementptr inbounds float, float* %3, i64 %1564
  %1566 = bitcast float* %1565 to <8 x float>*
  %1567 = load <8 x float>, <8 x float>* %1566, align 1, !tbaa !12
  %1568 = add nsw i64 %1560, 16
  %1569 = getelementptr inbounds float, float* %3, i64 %1568
  %1570 = bitcast float* %1569 to <8 x float>*
  %1571 = load <8 x float>, <8 x float>* %1570, align 1, !tbaa !12
  %1572 = add nsw i64 %1560, 24
  %1573 = getelementptr inbounds float, float* %3, i64 %1572
  %1574 = bitcast float* %1573 to <8 x float>*
  %1575 = load <8 x float>, <8 x float>* %1574, align 1, !tbaa !12
  %1576 = add nsw i64 %1560, 32
  %1577 = getelementptr inbounds float, float* %3, i64 %1576
  %1578 = bitcast float* %1577 to <8 x float>*
  %1579 = load <8 x float>, <8 x float>* %1578, align 1, !tbaa !12
  %1580 = add nsw i64 %1560, 40
  %1581 = getelementptr inbounds float, float* %3, i64 %1580
  %1582 = bitcast float* %1581 to <8 x float>*
  %1583 = load <8 x float>, <8 x float>* %1582, align 1, !tbaa !12
  %1584 = add nsw i64 %1560, 48
  %1585 = getelementptr inbounds float, float* %3, i64 %1584
  %1586 = bitcast float* %1585 to <8 x float>*
  %1587 = load <8 x float>, <8 x float>* %1586, align 1, !tbaa !12
  %1588 = add nsw i64 %1560, 56
  %1589 = getelementptr inbounds float, float* %3, i64 %1588
  %1590 = bitcast float* %1589 to <8 x float>*
  %1591 = load <8 x float>, <8 x float>* %1590, align 1, !tbaa !12
  %1592 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1563, <8 x float> %85, <8 x float> %1531) #10
  %1593 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1567, <8 x float> %85, <8 x float> %1535) #10
  %1594 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1571, <8 x float> %85, <8 x float> %1539) #10
  %1595 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1575, <8 x float> %85, <8 x float> %1543) #10
  %1596 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1579, <8 x float> %85, <8 x float> %1547) #10
  %1597 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1583, <8 x float> %85, <8 x float> %1551) #10
  %1598 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1587, <8 x float> %85, <8 x float> %1555) #10
  %1599 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1591, <8 x float> %85, <8 x float> %1559) #10
  store <8 x float> %1592, <8 x float>* %1530, align 1, !tbaa !12
  store <8 x float> %1593, <8 x float>* %1534, align 1, !tbaa !12
  store <8 x float> %1594, <8 x float>* %1538, align 1, !tbaa !12
  store <8 x float> %1595, <8 x float>* %1542, align 1, !tbaa !12
  store <8 x float> %1596, <8 x float>* %1546, align 1, !tbaa !12
  store <8 x float> %1597, <8 x float>* %1550, align 1, !tbaa !12
  store <8 x float> %1598, <8 x float>* %1554, align 1, !tbaa !12
  store <8 x float> %1599, <8 x float>* %1558, align 1, !tbaa !12
  %1600 = add nuw nsw i64 %1495, 64
  %1601 = icmp ult i64 %1600, %1380
  br i1 %1601, label %1494, label %1489
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 221
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui8_uk13.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
