; ModuleID = 'codes/matvec_ui12_uk10.cpp'
source_filename = "codes/matvec_ui12_uk10.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui12_uk10.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 96
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 80
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1613, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1613
  %21 = phi i64 [ %1614, %1613 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %1613

73:                                               ; preds = %20
  %74 = zext i32 %71 to i64
  %75 = trunc i64 %21 to i32
  %76 = mul nsw i32 %71, %75
  br label %83

77:                                               ; preds = %83
  br i1 %72, label %78, label %422

78:                                               ; preds = %77
  %79 = trunc i64 %26 to i32
  %80 = mul nsw i32 %71, %79
  %81 = sext i32 %80 to i64
  %82 = zext i32 %71 to i64
  br label %262

83:                                               ; preds = %73, %83
  %84 = phi i64 [ 0, %73 ], [ %254, %83 ]
  %85 = getelementptr inbounds float, float* %5, i64 %84
  %86 = getelementptr inbounds float, float* %85, i64 8
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %3, i64 %84
  %89 = getelementptr inbounds float, float* %88, i64 8
  %90 = bitcast float* %89 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %90, i32 0, i32 1, i32 1)
  %91 = getelementptr inbounds float, float* %85, i64 16
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %88, i64 16
  %94 = bitcast float* %93 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %94, i32 0, i32 1, i32 1)
  %95 = getelementptr inbounds float, float* %85, i64 24
  %96 = bitcast float* %95 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %96, i32 0, i32 1, i32 1)
  %97 = getelementptr inbounds float, float* %88, i64 24
  %98 = bitcast float* %97 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %98, i32 0, i32 1, i32 1)
  %99 = getelementptr inbounds float, float* %85, i64 32
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %88, i64 32
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %85, i64 40
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %88, i64 40
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %85, i64 48
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %88, i64 48
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %85, i64 56
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %88, i64 56
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %85, i64 64
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %88, i64 64
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %85, i64 72
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %88, i64 72
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %85, i64 80
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %88, i64 80
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %85, i64 88
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %88, i64 88
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %85, i64 96
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %88, i64 96
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = bitcast float* %85 to <8 x float>*
  %136 = load <8 x float>, <8 x float>* %135, align 1, !tbaa !12
  %137 = or i64 %84, 8
  %138 = getelementptr inbounds float, float* %5, i64 %137
  %139 = bitcast float* %138 to <8 x float>*
  %140 = load <8 x float>, <8 x float>* %139, align 1, !tbaa !12
  %141 = or i64 %84, 16
  %142 = getelementptr inbounds float, float* %5, i64 %141
  %143 = bitcast float* %142 to <8 x float>*
  %144 = load <8 x float>, <8 x float>* %143, align 1, !tbaa !12
  %145 = or i64 %84, 24
  %146 = getelementptr inbounds float, float* %5, i64 %145
  %147 = bitcast float* %146 to <8 x float>*
  %148 = load <8 x float>, <8 x float>* %147, align 1, !tbaa !12
  %149 = add nuw nsw i64 %84, 32
  %150 = getelementptr inbounds float, float* %5, i64 %149
  %151 = bitcast float* %150 to <8 x float>*
  %152 = load <8 x float>, <8 x float>* %151, align 1, !tbaa !12
  %153 = add nuw nsw i64 %84, 40
  %154 = getelementptr inbounds float, float* %5, i64 %153
  %155 = bitcast float* %154 to <8 x float>*
  %156 = load <8 x float>, <8 x float>* %155, align 1, !tbaa !12
  %157 = add nuw nsw i64 %84, 48
  %158 = getelementptr inbounds float, float* %5, i64 %157
  %159 = bitcast float* %158 to <8 x float>*
  %160 = load <8 x float>, <8 x float>* %159, align 1, !tbaa !12
  %161 = add nuw nsw i64 %84, 56
  %162 = getelementptr inbounds float, float* %5, i64 %161
  %163 = bitcast float* %162 to <8 x float>*
  %164 = load <8 x float>, <8 x float>* %163, align 1, !tbaa !12
  %165 = add nuw nsw i64 %84, 64
  %166 = getelementptr inbounds float, float* %5, i64 %165
  %167 = bitcast float* %166 to <8 x float>*
  %168 = load <8 x float>, <8 x float>* %167, align 1, !tbaa !12
  %169 = add nuw nsw i64 %84, 72
  %170 = getelementptr inbounds float, float* %5, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nuw nsw i64 %84, 80
  %174 = getelementptr inbounds float, float* %5, i64 %173
  %175 = bitcast float* %174 to <8 x float>*
  %176 = load <8 x float>, <8 x float>* %175, align 1, !tbaa !12
  %177 = add nuw nsw i64 %84, 88
  %178 = getelementptr inbounds float, float* %5, i64 %177
  %179 = bitcast float* %178 to <8 x float>*
  %180 = load <8 x float>, <8 x float>* %179, align 1, !tbaa !12
  %181 = trunc i64 %84 to i32
  %182 = add nsw i32 %76, %181
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds float, float* %3, i64 %183
  %185 = bitcast float* %184 to <8 x float>*
  %186 = load <8 x float>, <8 x float>* %185, align 1, !tbaa !12
  %187 = add nsw i32 %182, 8
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds float, float* %3, i64 %188
  %190 = bitcast float* %189 to <8 x float>*
  %191 = load <8 x float>, <8 x float>* %190, align 1, !tbaa !12
  %192 = add nsw i32 %182, 16
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds float, float* %3, i64 %193
  %195 = bitcast float* %194 to <8 x float>*
  %196 = load <8 x float>, <8 x float>* %195, align 1, !tbaa !12
  %197 = add nsw i32 %182, 24
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds float, float* %3, i64 %198
  %200 = bitcast float* %199 to <8 x float>*
  %201 = load <8 x float>, <8 x float>* %200, align 1, !tbaa !12
  %202 = add nsw i32 %182, 32
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds float, float* %3, i64 %203
  %205 = bitcast float* %204 to <8 x float>*
  %206 = load <8 x float>, <8 x float>* %205, align 1, !tbaa !12
  %207 = add nsw i32 %182, 40
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds float, float* %3, i64 %208
  %210 = bitcast float* %209 to <8 x float>*
  %211 = load <8 x float>, <8 x float>* %210, align 1, !tbaa !12
  %212 = add nsw i32 %182, 48
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds float, float* %3, i64 %213
  %215 = bitcast float* %214 to <8 x float>*
  %216 = load <8 x float>, <8 x float>* %215, align 1, !tbaa !12
  %217 = add nsw i32 %182, 56
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds float, float* %3, i64 %218
  %220 = bitcast float* %219 to <8 x float>*
  %221 = load <8 x float>, <8 x float>* %220, align 1, !tbaa !12
  %222 = add nsw i32 %182, 64
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds float, float* %3, i64 %223
  %225 = bitcast float* %224 to <8 x float>*
  %226 = load <8 x float>, <8 x float>* %225, align 1, !tbaa !12
  %227 = add nsw i32 %182, 72
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds float, float* %3, i64 %228
  %230 = bitcast float* %229 to <8 x float>*
  %231 = load <8 x float>, <8 x float>* %230, align 1, !tbaa !12
  %232 = add nsw i32 %182, 80
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds float, float* %3, i64 %233
  %235 = bitcast float* %234 to <8 x float>*
  %236 = load <8 x float>, <8 x float>* %235, align 1, !tbaa !12
  %237 = add nsw i32 %182, 88
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds float, float* %3, i64 %238
  %240 = bitcast float* %239 to <8 x float>*
  %241 = load <8 x float>, <8 x float>* %240, align 1, !tbaa !12
  %242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %186, <8 x float> %25, <8 x float> %136) #10
  %243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %191, <8 x float> %25, <8 x float> %140) #10
  %244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %196, <8 x float> %25, <8 x float> %144) #10
  %245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %201, <8 x float> %25, <8 x float> %148) #10
  %246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %206, <8 x float> %25, <8 x float> %152) #10
  %247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %211, <8 x float> %25, <8 x float> %156) #10
  %248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %216, <8 x float> %25, <8 x float> %160) #10
  %249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %221, <8 x float> %25, <8 x float> %164) #10
  %250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %226, <8 x float> %25, <8 x float> %168) #10
  %251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %231, <8 x float> %25, <8 x float> %172) #10
  %252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %236, <8 x float> %25, <8 x float> %176) #10
  %253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %241, <8 x float> %25, <8 x float> %180) #10
  store <8 x float> %242, <8 x float>* %135, align 1, !tbaa !12
  store <8 x float> %243, <8 x float>* %139, align 1, !tbaa !12
  store <8 x float> %244, <8 x float>* %143, align 1, !tbaa !12
  store <8 x float> %245, <8 x float>* %147, align 1, !tbaa !12
  store <8 x float> %246, <8 x float>* %151, align 1, !tbaa !12
  store <8 x float> %247, <8 x float>* %155, align 1, !tbaa !12
  store <8 x float> %248, <8 x float>* %159, align 1, !tbaa !12
  store <8 x float> %249, <8 x float>* %163, align 1, !tbaa !12
  store <8 x float> %250, <8 x float>* %167, align 1, !tbaa !12
  store <8 x float> %251, <8 x float>* %171, align 1, !tbaa !12
  store <8 x float> %252, <8 x float>* %175, align 1, !tbaa !12
  store <8 x float> %253, <8 x float>* %179, align 1, !tbaa !12
  %254 = add nuw nsw i64 %84, 96
  %255 = icmp ult i64 %254, %74
  br i1 %255, label %83, label %77

256:                                              ; preds = %262
  br i1 %72, label %257, label %422

257:                                              ; preds = %256
  %258 = trunc i64 %31 to i32
  %259 = mul nsw i32 %71, %258
  %260 = sext i32 %259 to i64
  %261 = zext i32 %71 to i64
  br label %429

262:                                              ; preds = %78, %262
  %263 = phi i64 [ 0, %78 ], [ %420, %262 ]
  %264 = getelementptr inbounds float, float* %5, i64 %263
  %265 = getelementptr inbounds float, float* %264, i64 8
  %266 = bitcast float* %265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %266, i32 0, i32 1, i32 1)
  %267 = getelementptr inbounds float, float* %3, i64 %263
  %268 = getelementptr inbounds float, float* %267, i64 8
  %269 = bitcast float* %268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %269, i32 0, i32 1, i32 1)
  %270 = getelementptr inbounds float, float* %264, i64 16
  %271 = bitcast float* %270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %271, i32 0, i32 1, i32 1)
  %272 = getelementptr inbounds float, float* %267, i64 16
  %273 = bitcast float* %272 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %273, i32 0, i32 1, i32 1)
  %274 = getelementptr inbounds float, float* %264, i64 24
  %275 = bitcast float* %274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %275, i32 0, i32 1, i32 1)
  %276 = getelementptr inbounds float, float* %267, i64 24
  %277 = bitcast float* %276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %277, i32 0, i32 1, i32 1)
  %278 = getelementptr inbounds float, float* %264, i64 32
  %279 = bitcast float* %278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %279, i32 0, i32 1, i32 1)
  %280 = getelementptr inbounds float, float* %267, i64 32
  %281 = bitcast float* %280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %281, i32 0, i32 1, i32 1)
  %282 = getelementptr inbounds float, float* %264, i64 40
  %283 = bitcast float* %282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %283, i32 0, i32 1, i32 1)
  %284 = getelementptr inbounds float, float* %267, i64 40
  %285 = bitcast float* %284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %285, i32 0, i32 1, i32 1)
  %286 = getelementptr inbounds float, float* %264, i64 48
  %287 = bitcast float* %286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %287, i32 0, i32 1, i32 1)
  %288 = getelementptr inbounds float, float* %267, i64 48
  %289 = bitcast float* %288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %289, i32 0, i32 1, i32 1)
  %290 = getelementptr inbounds float, float* %264, i64 56
  %291 = bitcast float* %290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %291, i32 0, i32 1, i32 1)
  %292 = getelementptr inbounds float, float* %267, i64 56
  %293 = bitcast float* %292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %293, i32 0, i32 1, i32 1)
  %294 = getelementptr inbounds float, float* %264, i64 64
  %295 = bitcast float* %294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %295, i32 0, i32 1, i32 1)
  %296 = getelementptr inbounds float, float* %267, i64 64
  %297 = bitcast float* %296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %297, i32 0, i32 1, i32 1)
  %298 = getelementptr inbounds float, float* %264, i64 72
  %299 = bitcast float* %298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %299, i32 0, i32 1, i32 1)
  %300 = getelementptr inbounds float, float* %267, i64 72
  %301 = bitcast float* %300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %301, i32 0, i32 1, i32 1)
  %302 = getelementptr inbounds float, float* %264, i64 80
  %303 = bitcast float* %302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %303, i32 0, i32 1, i32 1)
  %304 = getelementptr inbounds float, float* %267, i64 80
  %305 = bitcast float* %304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %305, i32 0, i32 1, i32 1)
  %306 = getelementptr inbounds float, float* %264, i64 88
  %307 = bitcast float* %306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %307, i32 0, i32 1, i32 1)
  %308 = getelementptr inbounds float, float* %267, i64 88
  %309 = bitcast float* %308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %309, i32 0, i32 1, i32 1)
  %310 = getelementptr inbounds float, float* %264, i64 96
  %311 = bitcast float* %310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %311, i32 0, i32 1, i32 1)
  %312 = getelementptr inbounds float, float* %267, i64 96
  %313 = bitcast float* %312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %313, i32 0, i32 1, i32 1)
  %314 = bitcast float* %264 to <8 x float>*
  %315 = load <8 x float>, <8 x float>* %314, align 1, !tbaa !12
  %316 = or i64 %263, 8
  %317 = getelementptr inbounds float, float* %5, i64 %316
  %318 = bitcast float* %317 to <8 x float>*
  %319 = load <8 x float>, <8 x float>* %318, align 1, !tbaa !12
  %320 = or i64 %263, 16
  %321 = getelementptr inbounds float, float* %5, i64 %320
  %322 = bitcast float* %321 to <8 x float>*
  %323 = load <8 x float>, <8 x float>* %322, align 1, !tbaa !12
  %324 = or i64 %263, 24
  %325 = getelementptr inbounds float, float* %5, i64 %324
  %326 = bitcast float* %325 to <8 x float>*
  %327 = load <8 x float>, <8 x float>* %326, align 1, !tbaa !12
  %328 = add nuw nsw i64 %263, 32
  %329 = getelementptr inbounds float, float* %5, i64 %328
  %330 = bitcast float* %329 to <8 x float>*
  %331 = load <8 x float>, <8 x float>* %330, align 1, !tbaa !12
  %332 = add nuw nsw i64 %263, 40
  %333 = getelementptr inbounds float, float* %5, i64 %332
  %334 = bitcast float* %333 to <8 x float>*
  %335 = load <8 x float>, <8 x float>* %334, align 1, !tbaa !12
  %336 = add nuw nsw i64 %263, 48
  %337 = getelementptr inbounds float, float* %5, i64 %336
  %338 = bitcast float* %337 to <8 x float>*
  %339 = load <8 x float>, <8 x float>* %338, align 1, !tbaa !12
  %340 = add nuw nsw i64 %263, 56
  %341 = getelementptr inbounds float, float* %5, i64 %340
  %342 = bitcast float* %341 to <8 x float>*
  %343 = load <8 x float>, <8 x float>* %342, align 1, !tbaa !12
  %344 = add nuw nsw i64 %263, 64
  %345 = getelementptr inbounds float, float* %5, i64 %344
  %346 = bitcast float* %345 to <8 x float>*
  %347 = load <8 x float>, <8 x float>* %346, align 1, !tbaa !12
  %348 = add nuw nsw i64 %263, 72
  %349 = getelementptr inbounds float, float* %5, i64 %348
  %350 = bitcast float* %349 to <8 x float>*
  %351 = load <8 x float>, <8 x float>* %350, align 1, !tbaa !12
  %352 = add nuw nsw i64 %263, 80
  %353 = getelementptr inbounds float, float* %5, i64 %352
  %354 = bitcast float* %353 to <8 x float>*
  %355 = load <8 x float>, <8 x float>* %354, align 1, !tbaa !12
  %356 = add nuw nsw i64 %263, 88
  %357 = getelementptr inbounds float, float* %5, i64 %356
  %358 = bitcast float* %357 to <8 x float>*
  %359 = load <8 x float>, <8 x float>* %358, align 1, !tbaa !12
  %360 = add nsw i64 %263, %81
  %361 = getelementptr inbounds float, float* %3, i64 %360
  %362 = bitcast float* %361 to <8 x float>*
  %363 = load <8 x float>, <8 x float>* %362, align 1, !tbaa !12
  %364 = add nsw i64 %360, 8
  %365 = getelementptr inbounds float, float* %3, i64 %364
  %366 = bitcast float* %365 to <8 x float>*
  %367 = load <8 x float>, <8 x float>* %366, align 1, !tbaa !12
  %368 = add nsw i64 %360, 16
  %369 = getelementptr inbounds float, float* %3, i64 %368
  %370 = bitcast float* %369 to <8 x float>*
  %371 = load <8 x float>, <8 x float>* %370, align 1, !tbaa !12
  %372 = add nsw i64 %360, 24
  %373 = getelementptr inbounds float, float* %3, i64 %372
  %374 = bitcast float* %373 to <8 x float>*
  %375 = load <8 x float>, <8 x float>* %374, align 1, !tbaa !12
  %376 = add nsw i64 %360, 32
  %377 = getelementptr inbounds float, float* %3, i64 %376
  %378 = bitcast float* %377 to <8 x float>*
  %379 = load <8 x float>, <8 x float>* %378, align 1, !tbaa !12
  %380 = add nsw i64 %360, 40
  %381 = getelementptr inbounds float, float* %3, i64 %380
  %382 = bitcast float* %381 to <8 x float>*
  %383 = load <8 x float>, <8 x float>* %382, align 1, !tbaa !12
  %384 = add nsw i64 %360, 48
  %385 = getelementptr inbounds float, float* %3, i64 %384
  %386 = bitcast float* %385 to <8 x float>*
  %387 = load <8 x float>, <8 x float>* %386, align 1, !tbaa !12
  %388 = add nsw i64 %360, 56
  %389 = getelementptr inbounds float, float* %3, i64 %388
  %390 = bitcast float* %389 to <8 x float>*
  %391 = load <8 x float>, <8 x float>* %390, align 1, !tbaa !12
  %392 = add nsw i64 %360, 64
  %393 = getelementptr inbounds float, float* %3, i64 %392
  %394 = bitcast float* %393 to <8 x float>*
  %395 = load <8 x float>, <8 x float>* %394, align 1, !tbaa !12
  %396 = add nsw i64 %360, 72
  %397 = getelementptr inbounds float, float* %3, i64 %396
  %398 = bitcast float* %397 to <8 x float>*
  %399 = load <8 x float>, <8 x float>* %398, align 1, !tbaa !12
  %400 = add nsw i64 %360, 80
  %401 = getelementptr inbounds float, float* %3, i64 %400
  %402 = bitcast float* %401 to <8 x float>*
  %403 = load <8 x float>, <8 x float>* %402, align 1, !tbaa !12
  %404 = add nsw i64 %360, 88
  %405 = getelementptr inbounds float, float* %3, i64 %404
  %406 = bitcast float* %405 to <8 x float>*
  %407 = load <8 x float>, <8 x float>* %406, align 1, !tbaa !12
  %408 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %363, <8 x float> %30, <8 x float> %315) #10
  %409 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %367, <8 x float> %30, <8 x float> %319) #10
  %410 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %371, <8 x float> %30, <8 x float> %323) #10
  %411 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %375, <8 x float> %30, <8 x float> %327) #10
  %412 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %379, <8 x float> %30, <8 x float> %331) #10
  %413 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %383, <8 x float> %30, <8 x float> %335) #10
  %414 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %387, <8 x float> %30, <8 x float> %339) #10
  %415 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %391, <8 x float> %30, <8 x float> %343) #10
  %416 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %395, <8 x float> %30, <8 x float> %347) #10
  %417 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %399, <8 x float> %30, <8 x float> %351) #10
  %418 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %403, <8 x float> %30, <8 x float> %355) #10
  %419 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %407, <8 x float> %30, <8 x float> %359) #10
  store <8 x float> %408, <8 x float>* %314, align 1, !tbaa !12
  store <8 x float> %409, <8 x float>* %318, align 1, !tbaa !12
  store <8 x float> %410, <8 x float>* %322, align 1, !tbaa !12
  store <8 x float> %411, <8 x float>* %326, align 1, !tbaa !12
  store <8 x float> %412, <8 x float>* %330, align 1, !tbaa !12
  store <8 x float> %413, <8 x float>* %334, align 1, !tbaa !12
  store <8 x float> %414, <8 x float>* %338, align 1, !tbaa !12
  store <8 x float> %415, <8 x float>* %342, align 1, !tbaa !12
  store <8 x float> %416, <8 x float>* %346, align 1, !tbaa !12
  store <8 x float> %417, <8 x float>* %350, align 1, !tbaa !12
  store <8 x float> %418, <8 x float>* %354, align 1, !tbaa !12
  store <8 x float> %419, <8 x float>* %358, align 1, !tbaa !12
  %420 = add nuw nsw i64 %263, 96
  %421 = icmp ult i64 %420, %82
  br i1 %421, label %262, label %256

422:                                              ; preds = %429, %77, %256
  %423 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %424 = icmp sgt i32 %423, 0
  br i1 %424, label %425, label %1613

425:                                              ; preds = %422
  %426 = zext i32 %423 to i64
  %427 = trunc i64 %36 to i32
  %428 = mul nsw i32 %423, %427
  br label %595

429:                                              ; preds = %257, %429
  %430 = phi i64 [ 0, %257 ], [ %587, %429 ]
  %431 = getelementptr inbounds float, float* %5, i64 %430
  %432 = getelementptr inbounds float, float* %431, i64 8
  %433 = bitcast float* %432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %433, i32 0, i32 1, i32 1)
  %434 = getelementptr inbounds float, float* %3, i64 %430
  %435 = getelementptr inbounds float, float* %434, i64 8
  %436 = bitcast float* %435 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %436, i32 0, i32 1, i32 1)
  %437 = getelementptr inbounds float, float* %431, i64 16
  %438 = bitcast float* %437 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %438, i32 0, i32 1, i32 1)
  %439 = getelementptr inbounds float, float* %434, i64 16
  %440 = bitcast float* %439 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %440, i32 0, i32 1, i32 1)
  %441 = getelementptr inbounds float, float* %431, i64 24
  %442 = bitcast float* %441 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %442, i32 0, i32 1, i32 1)
  %443 = getelementptr inbounds float, float* %434, i64 24
  %444 = bitcast float* %443 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %444, i32 0, i32 1, i32 1)
  %445 = getelementptr inbounds float, float* %431, i64 32
  %446 = bitcast float* %445 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %446, i32 0, i32 1, i32 1)
  %447 = getelementptr inbounds float, float* %434, i64 32
  %448 = bitcast float* %447 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %448, i32 0, i32 1, i32 1)
  %449 = getelementptr inbounds float, float* %431, i64 40
  %450 = bitcast float* %449 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %450, i32 0, i32 1, i32 1)
  %451 = getelementptr inbounds float, float* %434, i64 40
  %452 = bitcast float* %451 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %452, i32 0, i32 1, i32 1)
  %453 = getelementptr inbounds float, float* %431, i64 48
  %454 = bitcast float* %453 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %454, i32 0, i32 1, i32 1)
  %455 = getelementptr inbounds float, float* %434, i64 48
  %456 = bitcast float* %455 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %456, i32 0, i32 1, i32 1)
  %457 = getelementptr inbounds float, float* %431, i64 56
  %458 = bitcast float* %457 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %458, i32 0, i32 1, i32 1)
  %459 = getelementptr inbounds float, float* %434, i64 56
  %460 = bitcast float* %459 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %460, i32 0, i32 1, i32 1)
  %461 = getelementptr inbounds float, float* %431, i64 64
  %462 = bitcast float* %461 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %462, i32 0, i32 1, i32 1)
  %463 = getelementptr inbounds float, float* %434, i64 64
  %464 = bitcast float* %463 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %464, i32 0, i32 1, i32 1)
  %465 = getelementptr inbounds float, float* %431, i64 72
  %466 = bitcast float* %465 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %466, i32 0, i32 1, i32 1)
  %467 = getelementptr inbounds float, float* %434, i64 72
  %468 = bitcast float* %467 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %468, i32 0, i32 1, i32 1)
  %469 = getelementptr inbounds float, float* %431, i64 80
  %470 = bitcast float* %469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %470, i32 0, i32 1, i32 1)
  %471 = getelementptr inbounds float, float* %434, i64 80
  %472 = bitcast float* %471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %472, i32 0, i32 1, i32 1)
  %473 = getelementptr inbounds float, float* %431, i64 88
  %474 = bitcast float* %473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %474, i32 0, i32 1, i32 1)
  %475 = getelementptr inbounds float, float* %434, i64 88
  %476 = bitcast float* %475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %476, i32 0, i32 1, i32 1)
  %477 = getelementptr inbounds float, float* %431, i64 96
  %478 = bitcast float* %477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %478, i32 0, i32 1, i32 1)
  %479 = getelementptr inbounds float, float* %434, i64 96
  %480 = bitcast float* %479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %480, i32 0, i32 1, i32 1)
  %481 = bitcast float* %431 to <8 x float>*
  %482 = load <8 x float>, <8 x float>* %481, align 1, !tbaa !12
  %483 = or i64 %430, 8
  %484 = getelementptr inbounds float, float* %5, i64 %483
  %485 = bitcast float* %484 to <8 x float>*
  %486 = load <8 x float>, <8 x float>* %485, align 1, !tbaa !12
  %487 = or i64 %430, 16
  %488 = getelementptr inbounds float, float* %5, i64 %487
  %489 = bitcast float* %488 to <8 x float>*
  %490 = load <8 x float>, <8 x float>* %489, align 1, !tbaa !12
  %491 = or i64 %430, 24
  %492 = getelementptr inbounds float, float* %5, i64 %491
  %493 = bitcast float* %492 to <8 x float>*
  %494 = load <8 x float>, <8 x float>* %493, align 1, !tbaa !12
  %495 = add nuw nsw i64 %430, 32
  %496 = getelementptr inbounds float, float* %5, i64 %495
  %497 = bitcast float* %496 to <8 x float>*
  %498 = load <8 x float>, <8 x float>* %497, align 1, !tbaa !12
  %499 = add nuw nsw i64 %430, 40
  %500 = getelementptr inbounds float, float* %5, i64 %499
  %501 = bitcast float* %500 to <8 x float>*
  %502 = load <8 x float>, <8 x float>* %501, align 1, !tbaa !12
  %503 = add nuw nsw i64 %430, 48
  %504 = getelementptr inbounds float, float* %5, i64 %503
  %505 = bitcast float* %504 to <8 x float>*
  %506 = load <8 x float>, <8 x float>* %505, align 1, !tbaa !12
  %507 = add nuw nsw i64 %430, 56
  %508 = getelementptr inbounds float, float* %5, i64 %507
  %509 = bitcast float* %508 to <8 x float>*
  %510 = load <8 x float>, <8 x float>* %509, align 1, !tbaa !12
  %511 = add nuw nsw i64 %430, 64
  %512 = getelementptr inbounds float, float* %5, i64 %511
  %513 = bitcast float* %512 to <8 x float>*
  %514 = load <8 x float>, <8 x float>* %513, align 1, !tbaa !12
  %515 = add nuw nsw i64 %430, 72
  %516 = getelementptr inbounds float, float* %5, i64 %515
  %517 = bitcast float* %516 to <8 x float>*
  %518 = load <8 x float>, <8 x float>* %517, align 1, !tbaa !12
  %519 = add nuw nsw i64 %430, 80
  %520 = getelementptr inbounds float, float* %5, i64 %519
  %521 = bitcast float* %520 to <8 x float>*
  %522 = load <8 x float>, <8 x float>* %521, align 1, !tbaa !12
  %523 = add nuw nsw i64 %430, 88
  %524 = getelementptr inbounds float, float* %5, i64 %523
  %525 = bitcast float* %524 to <8 x float>*
  %526 = load <8 x float>, <8 x float>* %525, align 1, !tbaa !12
  %527 = add nsw i64 %430, %260
  %528 = getelementptr inbounds float, float* %3, i64 %527
  %529 = bitcast float* %528 to <8 x float>*
  %530 = load <8 x float>, <8 x float>* %529, align 1, !tbaa !12
  %531 = add nsw i64 %527, 8
  %532 = getelementptr inbounds float, float* %3, i64 %531
  %533 = bitcast float* %532 to <8 x float>*
  %534 = load <8 x float>, <8 x float>* %533, align 1, !tbaa !12
  %535 = add nsw i64 %527, 16
  %536 = getelementptr inbounds float, float* %3, i64 %535
  %537 = bitcast float* %536 to <8 x float>*
  %538 = load <8 x float>, <8 x float>* %537, align 1, !tbaa !12
  %539 = add nsw i64 %527, 24
  %540 = getelementptr inbounds float, float* %3, i64 %539
  %541 = bitcast float* %540 to <8 x float>*
  %542 = load <8 x float>, <8 x float>* %541, align 1, !tbaa !12
  %543 = add nsw i64 %527, 32
  %544 = getelementptr inbounds float, float* %3, i64 %543
  %545 = bitcast float* %544 to <8 x float>*
  %546 = load <8 x float>, <8 x float>* %545, align 1, !tbaa !12
  %547 = add nsw i64 %527, 40
  %548 = getelementptr inbounds float, float* %3, i64 %547
  %549 = bitcast float* %548 to <8 x float>*
  %550 = load <8 x float>, <8 x float>* %549, align 1, !tbaa !12
  %551 = add nsw i64 %527, 48
  %552 = getelementptr inbounds float, float* %3, i64 %551
  %553 = bitcast float* %552 to <8 x float>*
  %554 = load <8 x float>, <8 x float>* %553, align 1, !tbaa !12
  %555 = add nsw i64 %527, 56
  %556 = getelementptr inbounds float, float* %3, i64 %555
  %557 = bitcast float* %556 to <8 x float>*
  %558 = load <8 x float>, <8 x float>* %557, align 1, !tbaa !12
  %559 = add nsw i64 %527, 64
  %560 = getelementptr inbounds float, float* %3, i64 %559
  %561 = bitcast float* %560 to <8 x float>*
  %562 = load <8 x float>, <8 x float>* %561, align 1, !tbaa !12
  %563 = add nsw i64 %527, 72
  %564 = getelementptr inbounds float, float* %3, i64 %563
  %565 = bitcast float* %564 to <8 x float>*
  %566 = load <8 x float>, <8 x float>* %565, align 1, !tbaa !12
  %567 = add nsw i64 %527, 80
  %568 = getelementptr inbounds float, float* %3, i64 %567
  %569 = bitcast float* %568 to <8 x float>*
  %570 = load <8 x float>, <8 x float>* %569, align 1, !tbaa !12
  %571 = add nsw i64 %527, 88
  %572 = getelementptr inbounds float, float* %3, i64 %571
  %573 = bitcast float* %572 to <8 x float>*
  %574 = load <8 x float>, <8 x float>* %573, align 1, !tbaa !12
  %575 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %530, <8 x float> %35, <8 x float> %482) #10
  %576 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %534, <8 x float> %35, <8 x float> %486) #10
  %577 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %538, <8 x float> %35, <8 x float> %490) #10
  %578 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %542, <8 x float> %35, <8 x float> %494) #10
  %579 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %546, <8 x float> %35, <8 x float> %498) #10
  %580 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %550, <8 x float> %35, <8 x float> %502) #10
  %581 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %554, <8 x float> %35, <8 x float> %506) #10
  %582 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %558, <8 x float> %35, <8 x float> %510) #10
  %583 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %562, <8 x float> %35, <8 x float> %514) #10
  %584 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %566, <8 x float> %35, <8 x float> %518) #10
  %585 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %570, <8 x float> %35, <8 x float> %522) #10
  %586 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %574, <8 x float> %35, <8 x float> %526) #10
  store <8 x float> %575, <8 x float>* %481, align 1, !tbaa !12
  store <8 x float> %576, <8 x float>* %485, align 1, !tbaa !12
  store <8 x float> %577, <8 x float>* %489, align 1, !tbaa !12
  store <8 x float> %578, <8 x float>* %493, align 1, !tbaa !12
  store <8 x float> %579, <8 x float>* %497, align 1, !tbaa !12
  store <8 x float> %580, <8 x float>* %501, align 1, !tbaa !12
  store <8 x float> %581, <8 x float>* %505, align 1, !tbaa !12
  store <8 x float> %582, <8 x float>* %509, align 1, !tbaa !12
  store <8 x float> %583, <8 x float>* %513, align 1, !tbaa !12
  store <8 x float> %584, <8 x float>* %517, align 1, !tbaa !12
  store <8 x float> %585, <8 x float>* %521, align 1, !tbaa !12
  store <8 x float> %586, <8 x float>* %525, align 1, !tbaa !12
  %587 = add nuw nsw i64 %430, 96
  %588 = icmp ult i64 %587, %261
  br i1 %588, label %429, label %422

589:                                              ; preds = %595
  br i1 %424, label %590, label %934

590:                                              ; preds = %589
  %591 = trunc i64 %41 to i32
  %592 = mul nsw i32 %423, %591
  %593 = sext i32 %592 to i64
  %594 = zext i32 %423 to i64
  br label %774

595:                                              ; preds = %425, %595
  %596 = phi i64 [ 0, %425 ], [ %766, %595 ]
  %597 = getelementptr inbounds float, float* %5, i64 %596
  %598 = getelementptr inbounds float, float* %597, i64 8
  %599 = bitcast float* %598 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %599, i32 0, i32 1, i32 1)
  %600 = getelementptr inbounds float, float* %3, i64 %596
  %601 = getelementptr inbounds float, float* %600, i64 8
  %602 = bitcast float* %601 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %602, i32 0, i32 1, i32 1)
  %603 = getelementptr inbounds float, float* %597, i64 16
  %604 = bitcast float* %603 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %604, i32 0, i32 1, i32 1)
  %605 = getelementptr inbounds float, float* %600, i64 16
  %606 = bitcast float* %605 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %606, i32 0, i32 1, i32 1)
  %607 = getelementptr inbounds float, float* %597, i64 24
  %608 = bitcast float* %607 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %608, i32 0, i32 1, i32 1)
  %609 = getelementptr inbounds float, float* %600, i64 24
  %610 = bitcast float* %609 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %610, i32 0, i32 1, i32 1)
  %611 = getelementptr inbounds float, float* %597, i64 32
  %612 = bitcast float* %611 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %612, i32 0, i32 1, i32 1)
  %613 = getelementptr inbounds float, float* %600, i64 32
  %614 = bitcast float* %613 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %614, i32 0, i32 1, i32 1)
  %615 = getelementptr inbounds float, float* %597, i64 40
  %616 = bitcast float* %615 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %616, i32 0, i32 1, i32 1)
  %617 = getelementptr inbounds float, float* %600, i64 40
  %618 = bitcast float* %617 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %618, i32 0, i32 1, i32 1)
  %619 = getelementptr inbounds float, float* %597, i64 48
  %620 = bitcast float* %619 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %620, i32 0, i32 1, i32 1)
  %621 = getelementptr inbounds float, float* %600, i64 48
  %622 = bitcast float* %621 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %622, i32 0, i32 1, i32 1)
  %623 = getelementptr inbounds float, float* %597, i64 56
  %624 = bitcast float* %623 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %624, i32 0, i32 1, i32 1)
  %625 = getelementptr inbounds float, float* %600, i64 56
  %626 = bitcast float* %625 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %626, i32 0, i32 1, i32 1)
  %627 = getelementptr inbounds float, float* %597, i64 64
  %628 = bitcast float* %627 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %628, i32 0, i32 1, i32 1)
  %629 = getelementptr inbounds float, float* %600, i64 64
  %630 = bitcast float* %629 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %630, i32 0, i32 1, i32 1)
  %631 = getelementptr inbounds float, float* %597, i64 72
  %632 = bitcast float* %631 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %632, i32 0, i32 1, i32 1)
  %633 = getelementptr inbounds float, float* %600, i64 72
  %634 = bitcast float* %633 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %634, i32 0, i32 1, i32 1)
  %635 = getelementptr inbounds float, float* %597, i64 80
  %636 = bitcast float* %635 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %636, i32 0, i32 1, i32 1)
  %637 = getelementptr inbounds float, float* %600, i64 80
  %638 = bitcast float* %637 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %638, i32 0, i32 1, i32 1)
  %639 = getelementptr inbounds float, float* %597, i64 88
  %640 = bitcast float* %639 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %640, i32 0, i32 1, i32 1)
  %641 = getelementptr inbounds float, float* %600, i64 88
  %642 = bitcast float* %641 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %642, i32 0, i32 1, i32 1)
  %643 = getelementptr inbounds float, float* %597, i64 96
  %644 = bitcast float* %643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %644, i32 0, i32 1, i32 1)
  %645 = getelementptr inbounds float, float* %600, i64 96
  %646 = bitcast float* %645 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %646, i32 0, i32 1, i32 1)
  %647 = bitcast float* %597 to <8 x float>*
  %648 = load <8 x float>, <8 x float>* %647, align 1, !tbaa !12
  %649 = or i64 %596, 8
  %650 = getelementptr inbounds float, float* %5, i64 %649
  %651 = bitcast float* %650 to <8 x float>*
  %652 = load <8 x float>, <8 x float>* %651, align 1, !tbaa !12
  %653 = or i64 %596, 16
  %654 = getelementptr inbounds float, float* %5, i64 %653
  %655 = bitcast float* %654 to <8 x float>*
  %656 = load <8 x float>, <8 x float>* %655, align 1, !tbaa !12
  %657 = or i64 %596, 24
  %658 = getelementptr inbounds float, float* %5, i64 %657
  %659 = bitcast float* %658 to <8 x float>*
  %660 = load <8 x float>, <8 x float>* %659, align 1, !tbaa !12
  %661 = add nuw nsw i64 %596, 32
  %662 = getelementptr inbounds float, float* %5, i64 %661
  %663 = bitcast float* %662 to <8 x float>*
  %664 = load <8 x float>, <8 x float>* %663, align 1, !tbaa !12
  %665 = add nuw nsw i64 %596, 40
  %666 = getelementptr inbounds float, float* %5, i64 %665
  %667 = bitcast float* %666 to <8 x float>*
  %668 = load <8 x float>, <8 x float>* %667, align 1, !tbaa !12
  %669 = add nuw nsw i64 %596, 48
  %670 = getelementptr inbounds float, float* %5, i64 %669
  %671 = bitcast float* %670 to <8 x float>*
  %672 = load <8 x float>, <8 x float>* %671, align 1, !tbaa !12
  %673 = add nuw nsw i64 %596, 56
  %674 = getelementptr inbounds float, float* %5, i64 %673
  %675 = bitcast float* %674 to <8 x float>*
  %676 = load <8 x float>, <8 x float>* %675, align 1, !tbaa !12
  %677 = add nuw nsw i64 %596, 64
  %678 = getelementptr inbounds float, float* %5, i64 %677
  %679 = bitcast float* %678 to <8 x float>*
  %680 = load <8 x float>, <8 x float>* %679, align 1, !tbaa !12
  %681 = add nuw nsw i64 %596, 72
  %682 = getelementptr inbounds float, float* %5, i64 %681
  %683 = bitcast float* %682 to <8 x float>*
  %684 = load <8 x float>, <8 x float>* %683, align 1, !tbaa !12
  %685 = add nuw nsw i64 %596, 80
  %686 = getelementptr inbounds float, float* %5, i64 %685
  %687 = bitcast float* %686 to <8 x float>*
  %688 = load <8 x float>, <8 x float>* %687, align 1, !tbaa !12
  %689 = add nuw nsw i64 %596, 88
  %690 = getelementptr inbounds float, float* %5, i64 %689
  %691 = bitcast float* %690 to <8 x float>*
  %692 = load <8 x float>, <8 x float>* %691, align 1, !tbaa !12
  %693 = trunc i64 %596 to i32
  %694 = add nsw i32 %428, %693
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds float, float* %3, i64 %695
  %697 = bitcast float* %696 to <8 x float>*
  %698 = load <8 x float>, <8 x float>* %697, align 1, !tbaa !12
  %699 = add nsw i32 %694, 8
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds float, float* %3, i64 %700
  %702 = bitcast float* %701 to <8 x float>*
  %703 = load <8 x float>, <8 x float>* %702, align 1, !tbaa !12
  %704 = add nsw i32 %694, 16
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds float, float* %3, i64 %705
  %707 = bitcast float* %706 to <8 x float>*
  %708 = load <8 x float>, <8 x float>* %707, align 1, !tbaa !12
  %709 = add nsw i32 %694, 24
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds float, float* %3, i64 %710
  %712 = bitcast float* %711 to <8 x float>*
  %713 = load <8 x float>, <8 x float>* %712, align 1, !tbaa !12
  %714 = add nsw i32 %694, 32
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds float, float* %3, i64 %715
  %717 = bitcast float* %716 to <8 x float>*
  %718 = load <8 x float>, <8 x float>* %717, align 1, !tbaa !12
  %719 = add nsw i32 %694, 40
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds float, float* %3, i64 %720
  %722 = bitcast float* %721 to <8 x float>*
  %723 = load <8 x float>, <8 x float>* %722, align 1, !tbaa !12
  %724 = add nsw i32 %694, 48
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds float, float* %3, i64 %725
  %727 = bitcast float* %726 to <8 x float>*
  %728 = load <8 x float>, <8 x float>* %727, align 1, !tbaa !12
  %729 = add nsw i32 %694, 56
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds float, float* %3, i64 %730
  %732 = bitcast float* %731 to <8 x float>*
  %733 = load <8 x float>, <8 x float>* %732, align 1, !tbaa !12
  %734 = add nsw i32 %694, 64
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds float, float* %3, i64 %735
  %737 = bitcast float* %736 to <8 x float>*
  %738 = load <8 x float>, <8 x float>* %737, align 1, !tbaa !12
  %739 = add nsw i32 %694, 72
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds float, float* %3, i64 %740
  %742 = bitcast float* %741 to <8 x float>*
  %743 = load <8 x float>, <8 x float>* %742, align 1, !tbaa !12
  %744 = add nsw i32 %694, 80
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds float, float* %3, i64 %745
  %747 = bitcast float* %746 to <8 x float>*
  %748 = load <8 x float>, <8 x float>* %747, align 1, !tbaa !12
  %749 = add nsw i32 %694, 88
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds float, float* %3, i64 %750
  %752 = bitcast float* %751 to <8 x float>*
  %753 = load <8 x float>, <8 x float>* %752, align 1, !tbaa !12
  %754 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %698, <8 x float> %40, <8 x float> %648) #10
  %755 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %703, <8 x float> %40, <8 x float> %652) #10
  %756 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %708, <8 x float> %40, <8 x float> %656) #10
  %757 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %713, <8 x float> %40, <8 x float> %660) #10
  %758 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %718, <8 x float> %40, <8 x float> %664) #10
  %759 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %723, <8 x float> %40, <8 x float> %668) #10
  %760 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %728, <8 x float> %40, <8 x float> %672) #10
  %761 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %733, <8 x float> %40, <8 x float> %676) #10
  %762 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %738, <8 x float> %40, <8 x float> %680) #10
  %763 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %743, <8 x float> %40, <8 x float> %684) #10
  %764 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %748, <8 x float> %40, <8 x float> %688) #10
  %765 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %753, <8 x float> %40, <8 x float> %692) #10
  store <8 x float> %754, <8 x float>* %647, align 1, !tbaa !12
  store <8 x float> %755, <8 x float>* %651, align 1, !tbaa !12
  store <8 x float> %756, <8 x float>* %655, align 1, !tbaa !12
  store <8 x float> %757, <8 x float>* %659, align 1, !tbaa !12
  store <8 x float> %758, <8 x float>* %663, align 1, !tbaa !12
  store <8 x float> %759, <8 x float>* %667, align 1, !tbaa !12
  store <8 x float> %760, <8 x float>* %671, align 1, !tbaa !12
  store <8 x float> %761, <8 x float>* %675, align 1, !tbaa !12
  store <8 x float> %762, <8 x float>* %679, align 1, !tbaa !12
  store <8 x float> %763, <8 x float>* %683, align 1, !tbaa !12
  store <8 x float> %764, <8 x float>* %687, align 1, !tbaa !12
  store <8 x float> %765, <8 x float>* %691, align 1, !tbaa !12
  %766 = add nuw nsw i64 %596, 96
  %767 = icmp ult i64 %766, %426
  br i1 %767, label %595, label %589

768:                                              ; preds = %774
  br i1 %424, label %769, label %934

769:                                              ; preds = %768
  %770 = trunc i64 %46 to i32
  %771 = mul nsw i32 %423, %770
  %772 = sext i32 %771 to i64
  %773 = zext i32 %423 to i64
  br label %941

774:                                              ; preds = %590, %774
  %775 = phi i64 [ 0, %590 ], [ %932, %774 ]
  %776 = getelementptr inbounds float, float* %5, i64 %775
  %777 = getelementptr inbounds float, float* %776, i64 8
  %778 = bitcast float* %777 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %778, i32 0, i32 1, i32 1)
  %779 = getelementptr inbounds float, float* %3, i64 %775
  %780 = getelementptr inbounds float, float* %779, i64 8
  %781 = bitcast float* %780 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %781, i32 0, i32 1, i32 1)
  %782 = getelementptr inbounds float, float* %776, i64 16
  %783 = bitcast float* %782 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %783, i32 0, i32 1, i32 1)
  %784 = getelementptr inbounds float, float* %779, i64 16
  %785 = bitcast float* %784 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %785, i32 0, i32 1, i32 1)
  %786 = getelementptr inbounds float, float* %776, i64 24
  %787 = bitcast float* %786 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %787, i32 0, i32 1, i32 1)
  %788 = getelementptr inbounds float, float* %779, i64 24
  %789 = bitcast float* %788 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %789, i32 0, i32 1, i32 1)
  %790 = getelementptr inbounds float, float* %776, i64 32
  %791 = bitcast float* %790 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %791, i32 0, i32 1, i32 1)
  %792 = getelementptr inbounds float, float* %779, i64 32
  %793 = bitcast float* %792 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %793, i32 0, i32 1, i32 1)
  %794 = getelementptr inbounds float, float* %776, i64 40
  %795 = bitcast float* %794 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %795, i32 0, i32 1, i32 1)
  %796 = getelementptr inbounds float, float* %779, i64 40
  %797 = bitcast float* %796 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %797, i32 0, i32 1, i32 1)
  %798 = getelementptr inbounds float, float* %776, i64 48
  %799 = bitcast float* %798 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %799, i32 0, i32 1, i32 1)
  %800 = getelementptr inbounds float, float* %779, i64 48
  %801 = bitcast float* %800 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %801, i32 0, i32 1, i32 1)
  %802 = getelementptr inbounds float, float* %776, i64 56
  %803 = bitcast float* %802 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %803, i32 0, i32 1, i32 1)
  %804 = getelementptr inbounds float, float* %779, i64 56
  %805 = bitcast float* %804 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %805, i32 0, i32 1, i32 1)
  %806 = getelementptr inbounds float, float* %776, i64 64
  %807 = bitcast float* %806 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %807, i32 0, i32 1, i32 1)
  %808 = getelementptr inbounds float, float* %779, i64 64
  %809 = bitcast float* %808 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %809, i32 0, i32 1, i32 1)
  %810 = getelementptr inbounds float, float* %776, i64 72
  %811 = bitcast float* %810 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %811, i32 0, i32 1, i32 1)
  %812 = getelementptr inbounds float, float* %779, i64 72
  %813 = bitcast float* %812 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %813, i32 0, i32 1, i32 1)
  %814 = getelementptr inbounds float, float* %776, i64 80
  %815 = bitcast float* %814 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %815, i32 0, i32 1, i32 1)
  %816 = getelementptr inbounds float, float* %779, i64 80
  %817 = bitcast float* %816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %817, i32 0, i32 1, i32 1)
  %818 = getelementptr inbounds float, float* %776, i64 88
  %819 = bitcast float* %818 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %819, i32 0, i32 1, i32 1)
  %820 = getelementptr inbounds float, float* %779, i64 88
  %821 = bitcast float* %820 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %821, i32 0, i32 1, i32 1)
  %822 = getelementptr inbounds float, float* %776, i64 96
  %823 = bitcast float* %822 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %823, i32 0, i32 1, i32 1)
  %824 = getelementptr inbounds float, float* %779, i64 96
  %825 = bitcast float* %824 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %825, i32 0, i32 1, i32 1)
  %826 = bitcast float* %776 to <8 x float>*
  %827 = load <8 x float>, <8 x float>* %826, align 1, !tbaa !12
  %828 = or i64 %775, 8
  %829 = getelementptr inbounds float, float* %5, i64 %828
  %830 = bitcast float* %829 to <8 x float>*
  %831 = load <8 x float>, <8 x float>* %830, align 1, !tbaa !12
  %832 = or i64 %775, 16
  %833 = getelementptr inbounds float, float* %5, i64 %832
  %834 = bitcast float* %833 to <8 x float>*
  %835 = load <8 x float>, <8 x float>* %834, align 1, !tbaa !12
  %836 = or i64 %775, 24
  %837 = getelementptr inbounds float, float* %5, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nuw nsw i64 %775, 32
  %841 = getelementptr inbounds float, float* %5, i64 %840
  %842 = bitcast float* %841 to <8 x float>*
  %843 = load <8 x float>, <8 x float>* %842, align 1, !tbaa !12
  %844 = add nuw nsw i64 %775, 40
  %845 = getelementptr inbounds float, float* %5, i64 %844
  %846 = bitcast float* %845 to <8 x float>*
  %847 = load <8 x float>, <8 x float>* %846, align 1, !tbaa !12
  %848 = add nuw nsw i64 %775, 48
  %849 = getelementptr inbounds float, float* %5, i64 %848
  %850 = bitcast float* %849 to <8 x float>*
  %851 = load <8 x float>, <8 x float>* %850, align 1, !tbaa !12
  %852 = add nuw nsw i64 %775, 56
  %853 = getelementptr inbounds float, float* %5, i64 %852
  %854 = bitcast float* %853 to <8 x float>*
  %855 = load <8 x float>, <8 x float>* %854, align 1, !tbaa !12
  %856 = add nuw nsw i64 %775, 64
  %857 = getelementptr inbounds float, float* %5, i64 %856
  %858 = bitcast float* %857 to <8 x float>*
  %859 = load <8 x float>, <8 x float>* %858, align 1, !tbaa !12
  %860 = add nuw nsw i64 %775, 72
  %861 = getelementptr inbounds float, float* %5, i64 %860
  %862 = bitcast float* %861 to <8 x float>*
  %863 = load <8 x float>, <8 x float>* %862, align 1, !tbaa !12
  %864 = add nuw nsw i64 %775, 80
  %865 = getelementptr inbounds float, float* %5, i64 %864
  %866 = bitcast float* %865 to <8 x float>*
  %867 = load <8 x float>, <8 x float>* %866, align 1, !tbaa !12
  %868 = add nuw nsw i64 %775, 88
  %869 = getelementptr inbounds float, float* %5, i64 %868
  %870 = bitcast float* %869 to <8 x float>*
  %871 = load <8 x float>, <8 x float>* %870, align 1, !tbaa !12
  %872 = add nsw i64 %775, %593
  %873 = getelementptr inbounds float, float* %3, i64 %872
  %874 = bitcast float* %873 to <8 x float>*
  %875 = load <8 x float>, <8 x float>* %874, align 1, !tbaa !12
  %876 = add nsw i64 %872, 8
  %877 = getelementptr inbounds float, float* %3, i64 %876
  %878 = bitcast float* %877 to <8 x float>*
  %879 = load <8 x float>, <8 x float>* %878, align 1, !tbaa !12
  %880 = add nsw i64 %872, 16
  %881 = getelementptr inbounds float, float* %3, i64 %880
  %882 = bitcast float* %881 to <8 x float>*
  %883 = load <8 x float>, <8 x float>* %882, align 1, !tbaa !12
  %884 = add nsw i64 %872, 24
  %885 = getelementptr inbounds float, float* %3, i64 %884
  %886 = bitcast float* %885 to <8 x float>*
  %887 = load <8 x float>, <8 x float>* %886, align 1, !tbaa !12
  %888 = add nsw i64 %872, 32
  %889 = getelementptr inbounds float, float* %3, i64 %888
  %890 = bitcast float* %889 to <8 x float>*
  %891 = load <8 x float>, <8 x float>* %890, align 1, !tbaa !12
  %892 = add nsw i64 %872, 40
  %893 = getelementptr inbounds float, float* %3, i64 %892
  %894 = bitcast float* %893 to <8 x float>*
  %895 = load <8 x float>, <8 x float>* %894, align 1, !tbaa !12
  %896 = add nsw i64 %872, 48
  %897 = getelementptr inbounds float, float* %3, i64 %896
  %898 = bitcast float* %897 to <8 x float>*
  %899 = load <8 x float>, <8 x float>* %898, align 1, !tbaa !12
  %900 = add nsw i64 %872, 56
  %901 = getelementptr inbounds float, float* %3, i64 %900
  %902 = bitcast float* %901 to <8 x float>*
  %903 = load <8 x float>, <8 x float>* %902, align 1, !tbaa !12
  %904 = add nsw i64 %872, 64
  %905 = getelementptr inbounds float, float* %3, i64 %904
  %906 = bitcast float* %905 to <8 x float>*
  %907 = load <8 x float>, <8 x float>* %906, align 1, !tbaa !12
  %908 = add nsw i64 %872, 72
  %909 = getelementptr inbounds float, float* %3, i64 %908
  %910 = bitcast float* %909 to <8 x float>*
  %911 = load <8 x float>, <8 x float>* %910, align 1, !tbaa !12
  %912 = add nsw i64 %872, 80
  %913 = getelementptr inbounds float, float* %3, i64 %912
  %914 = bitcast float* %913 to <8 x float>*
  %915 = load <8 x float>, <8 x float>* %914, align 1, !tbaa !12
  %916 = add nsw i64 %872, 88
  %917 = getelementptr inbounds float, float* %3, i64 %916
  %918 = bitcast float* %917 to <8 x float>*
  %919 = load <8 x float>, <8 x float>* %918, align 1, !tbaa !12
  %920 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %875, <8 x float> %45, <8 x float> %827) #10
  %921 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %879, <8 x float> %45, <8 x float> %831) #10
  %922 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %883, <8 x float> %45, <8 x float> %835) #10
  %923 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %887, <8 x float> %45, <8 x float> %839) #10
  %924 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %891, <8 x float> %45, <8 x float> %843) #10
  %925 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %895, <8 x float> %45, <8 x float> %847) #10
  %926 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %899, <8 x float> %45, <8 x float> %851) #10
  %927 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %903, <8 x float> %45, <8 x float> %855) #10
  %928 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %907, <8 x float> %45, <8 x float> %859) #10
  %929 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %911, <8 x float> %45, <8 x float> %863) #10
  %930 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %915, <8 x float> %45, <8 x float> %867) #10
  %931 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %919, <8 x float> %45, <8 x float> %871) #10
  store <8 x float> %920, <8 x float>* %826, align 1, !tbaa !12
  store <8 x float> %921, <8 x float>* %830, align 1, !tbaa !12
  store <8 x float> %922, <8 x float>* %834, align 1, !tbaa !12
  store <8 x float> %923, <8 x float>* %838, align 1, !tbaa !12
  store <8 x float> %924, <8 x float>* %842, align 1, !tbaa !12
  store <8 x float> %925, <8 x float>* %846, align 1, !tbaa !12
  store <8 x float> %926, <8 x float>* %850, align 1, !tbaa !12
  store <8 x float> %927, <8 x float>* %854, align 1, !tbaa !12
  store <8 x float> %928, <8 x float>* %858, align 1, !tbaa !12
  store <8 x float> %929, <8 x float>* %862, align 1, !tbaa !12
  store <8 x float> %930, <8 x float>* %866, align 1, !tbaa !12
  store <8 x float> %931, <8 x float>* %870, align 1, !tbaa !12
  %932 = add nuw nsw i64 %775, 96
  %933 = icmp ult i64 %932, %594
  br i1 %933, label %774, label %768

934:                                              ; preds = %941, %589, %768
  %935 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %936 = icmp sgt i32 %935, 0
  br i1 %936, label %937, label %1613

937:                                              ; preds = %934
  %938 = zext i32 %935 to i64
  %939 = trunc i64 %51 to i32
  %940 = mul nsw i32 %935, %939
  br label %1107

941:                                              ; preds = %769, %941
  %942 = phi i64 [ 0, %769 ], [ %1099, %941 ]
  %943 = getelementptr inbounds float, float* %5, i64 %942
  %944 = getelementptr inbounds float, float* %943, i64 8
  %945 = bitcast float* %944 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %945, i32 0, i32 1, i32 1)
  %946 = getelementptr inbounds float, float* %3, i64 %942
  %947 = getelementptr inbounds float, float* %946, i64 8
  %948 = bitcast float* %947 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %948, i32 0, i32 1, i32 1)
  %949 = getelementptr inbounds float, float* %943, i64 16
  %950 = bitcast float* %949 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %950, i32 0, i32 1, i32 1)
  %951 = getelementptr inbounds float, float* %946, i64 16
  %952 = bitcast float* %951 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %952, i32 0, i32 1, i32 1)
  %953 = getelementptr inbounds float, float* %943, i64 24
  %954 = bitcast float* %953 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %954, i32 0, i32 1, i32 1)
  %955 = getelementptr inbounds float, float* %946, i64 24
  %956 = bitcast float* %955 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %956, i32 0, i32 1, i32 1)
  %957 = getelementptr inbounds float, float* %943, i64 32
  %958 = bitcast float* %957 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %958, i32 0, i32 1, i32 1)
  %959 = getelementptr inbounds float, float* %946, i64 32
  %960 = bitcast float* %959 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %960, i32 0, i32 1, i32 1)
  %961 = getelementptr inbounds float, float* %943, i64 40
  %962 = bitcast float* %961 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %962, i32 0, i32 1, i32 1)
  %963 = getelementptr inbounds float, float* %946, i64 40
  %964 = bitcast float* %963 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %964, i32 0, i32 1, i32 1)
  %965 = getelementptr inbounds float, float* %943, i64 48
  %966 = bitcast float* %965 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %966, i32 0, i32 1, i32 1)
  %967 = getelementptr inbounds float, float* %946, i64 48
  %968 = bitcast float* %967 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %968, i32 0, i32 1, i32 1)
  %969 = getelementptr inbounds float, float* %943, i64 56
  %970 = bitcast float* %969 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %970, i32 0, i32 1, i32 1)
  %971 = getelementptr inbounds float, float* %946, i64 56
  %972 = bitcast float* %971 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %972, i32 0, i32 1, i32 1)
  %973 = getelementptr inbounds float, float* %943, i64 64
  %974 = bitcast float* %973 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %974, i32 0, i32 1, i32 1)
  %975 = getelementptr inbounds float, float* %946, i64 64
  %976 = bitcast float* %975 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %976, i32 0, i32 1, i32 1)
  %977 = getelementptr inbounds float, float* %943, i64 72
  %978 = bitcast float* %977 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %978, i32 0, i32 1, i32 1)
  %979 = getelementptr inbounds float, float* %946, i64 72
  %980 = bitcast float* %979 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %980, i32 0, i32 1, i32 1)
  %981 = getelementptr inbounds float, float* %943, i64 80
  %982 = bitcast float* %981 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %982, i32 0, i32 1, i32 1)
  %983 = getelementptr inbounds float, float* %946, i64 80
  %984 = bitcast float* %983 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %984, i32 0, i32 1, i32 1)
  %985 = getelementptr inbounds float, float* %943, i64 88
  %986 = bitcast float* %985 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %986, i32 0, i32 1, i32 1)
  %987 = getelementptr inbounds float, float* %946, i64 88
  %988 = bitcast float* %987 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %988, i32 0, i32 1, i32 1)
  %989 = getelementptr inbounds float, float* %943, i64 96
  %990 = bitcast float* %989 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %990, i32 0, i32 1, i32 1)
  %991 = getelementptr inbounds float, float* %946, i64 96
  %992 = bitcast float* %991 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %992, i32 0, i32 1, i32 1)
  %993 = bitcast float* %943 to <8 x float>*
  %994 = load <8 x float>, <8 x float>* %993, align 1, !tbaa !12
  %995 = or i64 %942, 8
  %996 = getelementptr inbounds float, float* %5, i64 %995
  %997 = bitcast float* %996 to <8 x float>*
  %998 = load <8 x float>, <8 x float>* %997, align 1, !tbaa !12
  %999 = or i64 %942, 16
  %1000 = getelementptr inbounds float, float* %5, i64 %999
  %1001 = bitcast float* %1000 to <8 x float>*
  %1002 = load <8 x float>, <8 x float>* %1001, align 1, !tbaa !12
  %1003 = or i64 %942, 24
  %1004 = getelementptr inbounds float, float* %5, i64 %1003
  %1005 = bitcast float* %1004 to <8 x float>*
  %1006 = load <8 x float>, <8 x float>* %1005, align 1, !tbaa !12
  %1007 = add nuw nsw i64 %942, 32
  %1008 = getelementptr inbounds float, float* %5, i64 %1007
  %1009 = bitcast float* %1008 to <8 x float>*
  %1010 = load <8 x float>, <8 x float>* %1009, align 1, !tbaa !12
  %1011 = add nuw nsw i64 %942, 40
  %1012 = getelementptr inbounds float, float* %5, i64 %1011
  %1013 = bitcast float* %1012 to <8 x float>*
  %1014 = load <8 x float>, <8 x float>* %1013, align 1, !tbaa !12
  %1015 = add nuw nsw i64 %942, 48
  %1016 = getelementptr inbounds float, float* %5, i64 %1015
  %1017 = bitcast float* %1016 to <8 x float>*
  %1018 = load <8 x float>, <8 x float>* %1017, align 1, !tbaa !12
  %1019 = add nuw nsw i64 %942, 56
  %1020 = getelementptr inbounds float, float* %5, i64 %1019
  %1021 = bitcast float* %1020 to <8 x float>*
  %1022 = load <8 x float>, <8 x float>* %1021, align 1, !tbaa !12
  %1023 = add nuw nsw i64 %942, 64
  %1024 = getelementptr inbounds float, float* %5, i64 %1023
  %1025 = bitcast float* %1024 to <8 x float>*
  %1026 = load <8 x float>, <8 x float>* %1025, align 1, !tbaa !12
  %1027 = add nuw nsw i64 %942, 72
  %1028 = getelementptr inbounds float, float* %5, i64 %1027
  %1029 = bitcast float* %1028 to <8 x float>*
  %1030 = load <8 x float>, <8 x float>* %1029, align 1, !tbaa !12
  %1031 = add nuw nsw i64 %942, 80
  %1032 = getelementptr inbounds float, float* %5, i64 %1031
  %1033 = bitcast float* %1032 to <8 x float>*
  %1034 = load <8 x float>, <8 x float>* %1033, align 1, !tbaa !12
  %1035 = add nuw nsw i64 %942, 88
  %1036 = getelementptr inbounds float, float* %5, i64 %1035
  %1037 = bitcast float* %1036 to <8 x float>*
  %1038 = load <8 x float>, <8 x float>* %1037, align 1, !tbaa !12
  %1039 = add nsw i64 %942, %772
  %1040 = getelementptr inbounds float, float* %3, i64 %1039
  %1041 = bitcast float* %1040 to <8 x float>*
  %1042 = load <8 x float>, <8 x float>* %1041, align 1, !tbaa !12
  %1043 = add nsw i64 %1039, 8
  %1044 = getelementptr inbounds float, float* %3, i64 %1043
  %1045 = bitcast float* %1044 to <8 x float>*
  %1046 = load <8 x float>, <8 x float>* %1045, align 1, !tbaa !12
  %1047 = add nsw i64 %1039, 16
  %1048 = getelementptr inbounds float, float* %3, i64 %1047
  %1049 = bitcast float* %1048 to <8 x float>*
  %1050 = load <8 x float>, <8 x float>* %1049, align 1, !tbaa !12
  %1051 = add nsw i64 %1039, 24
  %1052 = getelementptr inbounds float, float* %3, i64 %1051
  %1053 = bitcast float* %1052 to <8 x float>*
  %1054 = load <8 x float>, <8 x float>* %1053, align 1, !tbaa !12
  %1055 = add nsw i64 %1039, 32
  %1056 = getelementptr inbounds float, float* %3, i64 %1055
  %1057 = bitcast float* %1056 to <8 x float>*
  %1058 = load <8 x float>, <8 x float>* %1057, align 1, !tbaa !12
  %1059 = add nsw i64 %1039, 40
  %1060 = getelementptr inbounds float, float* %3, i64 %1059
  %1061 = bitcast float* %1060 to <8 x float>*
  %1062 = load <8 x float>, <8 x float>* %1061, align 1, !tbaa !12
  %1063 = add nsw i64 %1039, 48
  %1064 = getelementptr inbounds float, float* %3, i64 %1063
  %1065 = bitcast float* %1064 to <8 x float>*
  %1066 = load <8 x float>, <8 x float>* %1065, align 1, !tbaa !12
  %1067 = add nsw i64 %1039, 56
  %1068 = getelementptr inbounds float, float* %3, i64 %1067
  %1069 = bitcast float* %1068 to <8 x float>*
  %1070 = load <8 x float>, <8 x float>* %1069, align 1, !tbaa !12
  %1071 = add nsw i64 %1039, 64
  %1072 = getelementptr inbounds float, float* %3, i64 %1071
  %1073 = bitcast float* %1072 to <8 x float>*
  %1074 = load <8 x float>, <8 x float>* %1073, align 1, !tbaa !12
  %1075 = add nsw i64 %1039, 72
  %1076 = getelementptr inbounds float, float* %3, i64 %1075
  %1077 = bitcast float* %1076 to <8 x float>*
  %1078 = load <8 x float>, <8 x float>* %1077, align 1, !tbaa !12
  %1079 = add nsw i64 %1039, 80
  %1080 = getelementptr inbounds float, float* %3, i64 %1079
  %1081 = bitcast float* %1080 to <8 x float>*
  %1082 = load <8 x float>, <8 x float>* %1081, align 1, !tbaa !12
  %1083 = add nsw i64 %1039, 88
  %1084 = getelementptr inbounds float, float* %3, i64 %1083
  %1085 = bitcast float* %1084 to <8 x float>*
  %1086 = load <8 x float>, <8 x float>* %1085, align 1, !tbaa !12
  %1087 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1042, <8 x float> %50, <8 x float> %994) #10
  %1088 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1046, <8 x float> %50, <8 x float> %998) #10
  %1089 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1050, <8 x float> %50, <8 x float> %1002) #10
  %1090 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1054, <8 x float> %50, <8 x float> %1006) #10
  %1091 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1058, <8 x float> %50, <8 x float> %1010) #10
  %1092 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1062, <8 x float> %50, <8 x float> %1014) #10
  %1093 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1066, <8 x float> %50, <8 x float> %1018) #10
  %1094 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1070, <8 x float> %50, <8 x float> %1022) #10
  %1095 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1074, <8 x float> %50, <8 x float> %1026) #10
  %1096 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1078, <8 x float> %50, <8 x float> %1030) #10
  %1097 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1082, <8 x float> %50, <8 x float> %1034) #10
  %1098 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1086, <8 x float> %50, <8 x float> %1038) #10
  store <8 x float> %1087, <8 x float>* %993, align 1, !tbaa !12
  store <8 x float> %1088, <8 x float>* %997, align 1, !tbaa !12
  store <8 x float> %1089, <8 x float>* %1001, align 1, !tbaa !12
  store <8 x float> %1090, <8 x float>* %1005, align 1, !tbaa !12
  store <8 x float> %1091, <8 x float>* %1009, align 1, !tbaa !12
  store <8 x float> %1092, <8 x float>* %1013, align 1, !tbaa !12
  store <8 x float> %1093, <8 x float>* %1017, align 1, !tbaa !12
  store <8 x float> %1094, <8 x float>* %1021, align 1, !tbaa !12
  store <8 x float> %1095, <8 x float>* %1025, align 1, !tbaa !12
  store <8 x float> %1096, <8 x float>* %1029, align 1, !tbaa !12
  store <8 x float> %1097, <8 x float>* %1033, align 1, !tbaa !12
  store <8 x float> %1098, <8 x float>* %1037, align 1, !tbaa !12
  %1099 = add nuw nsw i64 %942, 96
  %1100 = icmp ult i64 %1099, %773
  br i1 %1100, label %941, label %934

1101:                                             ; preds = %1107
  br i1 %936, label %1102, label %1446

1102:                                             ; preds = %1101
  %1103 = trunc i64 %56 to i32
  %1104 = mul nsw i32 %935, %1103
  %1105 = sext i32 %1104 to i64
  %1106 = zext i32 %935 to i64
  br label %1286

1107:                                             ; preds = %937, %1107
  %1108 = phi i64 [ 0, %937 ], [ %1278, %1107 ]
  %1109 = getelementptr inbounds float, float* %5, i64 %1108
  %1110 = getelementptr inbounds float, float* %1109, i64 8
  %1111 = bitcast float* %1110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1111, i32 0, i32 1, i32 1)
  %1112 = getelementptr inbounds float, float* %3, i64 %1108
  %1113 = getelementptr inbounds float, float* %1112, i64 8
  %1114 = bitcast float* %1113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1114, i32 0, i32 1, i32 1)
  %1115 = getelementptr inbounds float, float* %1109, i64 16
  %1116 = bitcast float* %1115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1116, i32 0, i32 1, i32 1)
  %1117 = getelementptr inbounds float, float* %1112, i64 16
  %1118 = bitcast float* %1117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1118, i32 0, i32 1, i32 1)
  %1119 = getelementptr inbounds float, float* %1109, i64 24
  %1120 = bitcast float* %1119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1120, i32 0, i32 1, i32 1)
  %1121 = getelementptr inbounds float, float* %1112, i64 24
  %1122 = bitcast float* %1121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1122, i32 0, i32 1, i32 1)
  %1123 = getelementptr inbounds float, float* %1109, i64 32
  %1124 = bitcast float* %1123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1124, i32 0, i32 1, i32 1)
  %1125 = getelementptr inbounds float, float* %1112, i64 32
  %1126 = bitcast float* %1125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1126, i32 0, i32 1, i32 1)
  %1127 = getelementptr inbounds float, float* %1109, i64 40
  %1128 = bitcast float* %1127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1128, i32 0, i32 1, i32 1)
  %1129 = getelementptr inbounds float, float* %1112, i64 40
  %1130 = bitcast float* %1129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1130, i32 0, i32 1, i32 1)
  %1131 = getelementptr inbounds float, float* %1109, i64 48
  %1132 = bitcast float* %1131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1132, i32 0, i32 1, i32 1)
  %1133 = getelementptr inbounds float, float* %1112, i64 48
  %1134 = bitcast float* %1133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1134, i32 0, i32 1, i32 1)
  %1135 = getelementptr inbounds float, float* %1109, i64 56
  %1136 = bitcast float* %1135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1136, i32 0, i32 1, i32 1)
  %1137 = getelementptr inbounds float, float* %1112, i64 56
  %1138 = bitcast float* %1137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1138, i32 0, i32 1, i32 1)
  %1139 = getelementptr inbounds float, float* %1109, i64 64
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = getelementptr inbounds float, float* %1112, i64 64
  %1142 = bitcast float* %1141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1142, i32 0, i32 1, i32 1)
  %1143 = getelementptr inbounds float, float* %1109, i64 72
  %1144 = bitcast float* %1143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1144, i32 0, i32 1, i32 1)
  %1145 = getelementptr inbounds float, float* %1112, i64 72
  %1146 = bitcast float* %1145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1146, i32 0, i32 1, i32 1)
  %1147 = getelementptr inbounds float, float* %1109, i64 80
  %1148 = bitcast float* %1147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1148, i32 0, i32 1, i32 1)
  %1149 = getelementptr inbounds float, float* %1112, i64 80
  %1150 = bitcast float* %1149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1150, i32 0, i32 1, i32 1)
  %1151 = getelementptr inbounds float, float* %1109, i64 88
  %1152 = bitcast float* %1151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1152, i32 0, i32 1, i32 1)
  %1153 = getelementptr inbounds float, float* %1112, i64 88
  %1154 = bitcast float* %1153 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1154, i32 0, i32 1, i32 1)
  %1155 = getelementptr inbounds float, float* %1109, i64 96
  %1156 = bitcast float* %1155 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1156, i32 0, i32 1, i32 1)
  %1157 = getelementptr inbounds float, float* %1112, i64 96
  %1158 = bitcast float* %1157 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1158, i32 0, i32 1, i32 1)
  %1159 = bitcast float* %1109 to <8 x float>*
  %1160 = load <8 x float>, <8 x float>* %1159, align 1, !tbaa !12
  %1161 = or i64 %1108, 8
  %1162 = getelementptr inbounds float, float* %5, i64 %1161
  %1163 = bitcast float* %1162 to <8 x float>*
  %1164 = load <8 x float>, <8 x float>* %1163, align 1, !tbaa !12
  %1165 = or i64 %1108, 16
  %1166 = getelementptr inbounds float, float* %5, i64 %1165
  %1167 = bitcast float* %1166 to <8 x float>*
  %1168 = load <8 x float>, <8 x float>* %1167, align 1, !tbaa !12
  %1169 = or i64 %1108, 24
  %1170 = getelementptr inbounds float, float* %5, i64 %1169
  %1171 = bitcast float* %1170 to <8 x float>*
  %1172 = load <8 x float>, <8 x float>* %1171, align 1, !tbaa !12
  %1173 = add nuw nsw i64 %1108, 32
  %1174 = getelementptr inbounds float, float* %5, i64 %1173
  %1175 = bitcast float* %1174 to <8 x float>*
  %1176 = load <8 x float>, <8 x float>* %1175, align 1, !tbaa !12
  %1177 = add nuw nsw i64 %1108, 40
  %1178 = getelementptr inbounds float, float* %5, i64 %1177
  %1179 = bitcast float* %1178 to <8 x float>*
  %1180 = load <8 x float>, <8 x float>* %1179, align 1, !tbaa !12
  %1181 = add nuw nsw i64 %1108, 48
  %1182 = getelementptr inbounds float, float* %5, i64 %1181
  %1183 = bitcast float* %1182 to <8 x float>*
  %1184 = load <8 x float>, <8 x float>* %1183, align 1, !tbaa !12
  %1185 = add nuw nsw i64 %1108, 56
  %1186 = getelementptr inbounds float, float* %5, i64 %1185
  %1187 = bitcast float* %1186 to <8 x float>*
  %1188 = load <8 x float>, <8 x float>* %1187, align 1, !tbaa !12
  %1189 = add nuw nsw i64 %1108, 64
  %1190 = getelementptr inbounds float, float* %5, i64 %1189
  %1191 = bitcast float* %1190 to <8 x float>*
  %1192 = load <8 x float>, <8 x float>* %1191, align 1, !tbaa !12
  %1193 = add nuw nsw i64 %1108, 72
  %1194 = getelementptr inbounds float, float* %5, i64 %1193
  %1195 = bitcast float* %1194 to <8 x float>*
  %1196 = load <8 x float>, <8 x float>* %1195, align 1, !tbaa !12
  %1197 = add nuw nsw i64 %1108, 80
  %1198 = getelementptr inbounds float, float* %5, i64 %1197
  %1199 = bitcast float* %1198 to <8 x float>*
  %1200 = load <8 x float>, <8 x float>* %1199, align 1, !tbaa !12
  %1201 = add nuw nsw i64 %1108, 88
  %1202 = getelementptr inbounds float, float* %5, i64 %1201
  %1203 = bitcast float* %1202 to <8 x float>*
  %1204 = load <8 x float>, <8 x float>* %1203, align 1, !tbaa !12
  %1205 = trunc i64 %1108 to i32
  %1206 = add nsw i32 %940, %1205
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds float, float* %3, i64 %1207
  %1209 = bitcast float* %1208 to <8 x float>*
  %1210 = load <8 x float>, <8 x float>* %1209, align 1, !tbaa !12
  %1211 = add nsw i32 %1206, 8
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds float, float* %3, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nsw i32 %1206, 16
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i32 %1206, 24
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i32 %1206, 32
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i32 %1206, 40
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i32 %1206, 48
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i32 %1206, 56
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nsw i32 %1206, 64
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds float, float* %3, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = add nsw i32 %1206, 72
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds float, float* %3, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = add nsw i32 %1206, 80
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds float, float* %3, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nsw i32 %1206, 88
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds float, float* %3, i64 %1262
  %1264 = bitcast float* %1263 to <8 x float>*
  %1265 = load <8 x float>, <8 x float>* %1264, align 1, !tbaa !12
  %1266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1210, <8 x float> %55, <8 x float> %1160) #10
  %1267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1215, <8 x float> %55, <8 x float> %1164) #10
  %1268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %55, <8 x float> %1168) #10
  %1269 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %55, <8 x float> %1172) #10
  %1270 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %55, <8 x float> %1176) #10
  %1271 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %55, <8 x float> %1180) #10
  %1272 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %55, <8 x float> %1184) #10
  %1273 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %55, <8 x float> %1188) #10
  %1274 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1250, <8 x float> %55, <8 x float> %1192) #10
  %1275 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1255, <8 x float> %55, <8 x float> %1196) #10
  %1276 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1260, <8 x float> %55, <8 x float> %1200) #10
  %1277 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1265, <8 x float> %55, <8 x float> %1204) #10
  store <8 x float> %1266, <8 x float>* %1159, align 1, !tbaa !12
  store <8 x float> %1267, <8 x float>* %1163, align 1, !tbaa !12
  store <8 x float> %1268, <8 x float>* %1167, align 1, !tbaa !12
  store <8 x float> %1269, <8 x float>* %1171, align 1, !tbaa !12
  store <8 x float> %1270, <8 x float>* %1175, align 1, !tbaa !12
  store <8 x float> %1271, <8 x float>* %1179, align 1, !tbaa !12
  store <8 x float> %1272, <8 x float>* %1183, align 1, !tbaa !12
  store <8 x float> %1273, <8 x float>* %1187, align 1, !tbaa !12
  store <8 x float> %1274, <8 x float>* %1191, align 1, !tbaa !12
  store <8 x float> %1275, <8 x float>* %1195, align 1, !tbaa !12
  store <8 x float> %1276, <8 x float>* %1199, align 1, !tbaa !12
  store <8 x float> %1277, <8 x float>* %1203, align 1, !tbaa !12
  %1278 = add nuw nsw i64 %1108, 96
  %1279 = icmp ult i64 %1278, %938
  br i1 %1279, label %1107, label %1101

1280:                                             ; preds = %1286
  br i1 %936, label %1281, label %1446

1281:                                             ; preds = %1280
  %1282 = trunc i64 %61 to i32
  %1283 = mul nsw i32 %935, %1282
  %1284 = sext i32 %1283 to i64
  %1285 = zext i32 %935 to i64
  br label %1453

1286:                                             ; preds = %1102, %1286
  %1287 = phi i64 [ 0, %1102 ], [ %1444, %1286 ]
  %1288 = getelementptr inbounds float, float* %5, i64 %1287
  %1289 = getelementptr inbounds float, float* %1288, i64 8
  %1290 = bitcast float* %1289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1290, i32 0, i32 1, i32 1)
  %1291 = getelementptr inbounds float, float* %3, i64 %1287
  %1292 = getelementptr inbounds float, float* %1291, i64 8
  %1293 = bitcast float* %1292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1293, i32 0, i32 1, i32 1)
  %1294 = getelementptr inbounds float, float* %1288, i64 16
  %1295 = bitcast float* %1294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1295, i32 0, i32 1, i32 1)
  %1296 = getelementptr inbounds float, float* %1291, i64 16
  %1297 = bitcast float* %1296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1297, i32 0, i32 1, i32 1)
  %1298 = getelementptr inbounds float, float* %1288, i64 24
  %1299 = bitcast float* %1298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1299, i32 0, i32 1, i32 1)
  %1300 = getelementptr inbounds float, float* %1291, i64 24
  %1301 = bitcast float* %1300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1301, i32 0, i32 1, i32 1)
  %1302 = getelementptr inbounds float, float* %1288, i64 32
  %1303 = bitcast float* %1302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1303, i32 0, i32 1, i32 1)
  %1304 = getelementptr inbounds float, float* %1291, i64 32
  %1305 = bitcast float* %1304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1305, i32 0, i32 1, i32 1)
  %1306 = getelementptr inbounds float, float* %1288, i64 40
  %1307 = bitcast float* %1306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1307, i32 0, i32 1, i32 1)
  %1308 = getelementptr inbounds float, float* %1291, i64 40
  %1309 = bitcast float* %1308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1309, i32 0, i32 1, i32 1)
  %1310 = getelementptr inbounds float, float* %1288, i64 48
  %1311 = bitcast float* %1310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1311, i32 0, i32 1, i32 1)
  %1312 = getelementptr inbounds float, float* %1291, i64 48
  %1313 = bitcast float* %1312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1313, i32 0, i32 1, i32 1)
  %1314 = getelementptr inbounds float, float* %1288, i64 56
  %1315 = bitcast float* %1314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1315, i32 0, i32 1, i32 1)
  %1316 = getelementptr inbounds float, float* %1291, i64 56
  %1317 = bitcast float* %1316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1317, i32 0, i32 1, i32 1)
  %1318 = getelementptr inbounds float, float* %1288, i64 64
  %1319 = bitcast float* %1318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1319, i32 0, i32 1, i32 1)
  %1320 = getelementptr inbounds float, float* %1291, i64 64
  %1321 = bitcast float* %1320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1321, i32 0, i32 1, i32 1)
  %1322 = getelementptr inbounds float, float* %1288, i64 72
  %1323 = bitcast float* %1322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1323, i32 0, i32 1, i32 1)
  %1324 = getelementptr inbounds float, float* %1291, i64 72
  %1325 = bitcast float* %1324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1325, i32 0, i32 1, i32 1)
  %1326 = getelementptr inbounds float, float* %1288, i64 80
  %1327 = bitcast float* %1326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1327, i32 0, i32 1, i32 1)
  %1328 = getelementptr inbounds float, float* %1291, i64 80
  %1329 = bitcast float* %1328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1329, i32 0, i32 1, i32 1)
  %1330 = getelementptr inbounds float, float* %1288, i64 88
  %1331 = bitcast float* %1330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1331, i32 0, i32 1, i32 1)
  %1332 = getelementptr inbounds float, float* %1291, i64 88
  %1333 = bitcast float* %1332 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1333, i32 0, i32 1, i32 1)
  %1334 = getelementptr inbounds float, float* %1288, i64 96
  %1335 = bitcast float* %1334 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1335, i32 0, i32 1, i32 1)
  %1336 = getelementptr inbounds float, float* %1291, i64 96
  %1337 = bitcast float* %1336 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1337, i32 0, i32 1, i32 1)
  %1338 = bitcast float* %1288 to <8 x float>*
  %1339 = load <8 x float>, <8 x float>* %1338, align 1, !tbaa !12
  %1340 = or i64 %1287, 8
  %1341 = getelementptr inbounds float, float* %5, i64 %1340
  %1342 = bitcast float* %1341 to <8 x float>*
  %1343 = load <8 x float>, <8 x float>* %1342, align 1, !tbaa !12
  %1344 = or i64 %1287, 16
  %1345 = getelementptr inbounds float, float* %5, i64 %1344
  %1346 = bitcast float* %1345 to <8 x float>*
  %1347 = load <8 x float>, <8 x float>* %1346, align 1, !tbaa !12
  %1348 = or i64 %1287, 24
  %1349 = getelementptr inbounds float, float* %5, i64 %1348
  %1350 = bitcast float* %1349 to <8 x float>*
  %1351 = load <8 x float>, <8 x float>* %1350, align 1, !tbaa !12
  %1352 = add nuw nsw i64 %1287, 32
  %1353 = getelementptr inbounds float, float* %5, i64 %1352
  %1354 = bitcast float* %1353 to <8 x float>*
  %1355 = load <8 x float>, <8 x float>* %1354, align 1, !tbaa !12
  %1356 = add nuw nsw i64 %1287, 40
  %1357 = getelementptr inbounds float, float* %5, i64 %1356
  %1358 = bitcast float* %1357 to <8 x float>*
  %1359 = load <8 x float>, <8 x float>* %1358, align 1, !tbaa !12
  %1360 = add nuw nsw i64 %1287, 48
  %1361 = getelementptr inbounds float, float* %5, i64 %1360
  %1362 = bitcast float* %1361 to <8 x float>*
  %1363 = load <8 x float>, <8 x float>* %1362, align 1, !tbaa !12
  %1364 = add nuw nsw i64 %1287, 56
  %1365 = getelementptr inbounds float, float* %5, i64 %1364
  %1366 = bitcast float* %1365 to <8 x float>*
  %1367 = load <8 x float>, <8 x float>* %1366, align 1, !tbaa !12
  %1368 = add nuw nsw i64 %1287, 64
  %1369 = getelementptr inbounds float, float* %5, i64 %1368
  %1370 = bitcast float* %1369 to <8 x float>*
  %1371 = load <8 x float>, <8 x float>* %1370, align 1, !tbaa !12
  %1372 = add nuw nsw i64 %1287, 72
  %1373 = getelementptr inbounds float, float* %5, i64 %1372
  %1374 = bitcast float* %1373 to <8 x float>*
  %1375 = load <8 x float>, <8 x float>* %1374, align 1, !tbaa !12
  %1376 = add nuw nsw i64 %1287, 80
  %1377 = getelementptr inbounds float, float* %5, i64 %1376
  %1378 = bitcast float* %1377 to <8 x float>*
  %1379 = load <8 x float>, <8 x float>* %1378, align 1, !tbaa !12
  %1380 = add nuw nsw i64 %1287, 88
  %1381 = getelementptr inbounds float, float* %5, i64 %1380
  %1382 = bitcast float* %1381 to <8 x float>*
  %1383 = load <8 x float>, <8 x float>* %1382, align 1, !tbaa !12
  %1384 = add nsw i64 %1287, %1105
  %1385 = getelementptr inbounds float, float* %3, i64 %1384
  %1386 = bitcast float* %1385 to <8 x float>*
  %1387 = load <8 x float>, <8 x float>* %1386, align 1, !tbaa !12
  %1388 = add nsw i64 %1384, 8
  %1389 = getelementptr inbounds float, float* %3, i64 %1388
  %1390 = bitcast float* %1389 to <8 x float>*
  %1391 = load <8 x float>, <8 x float>* %1390, align 1, !tbaa !12
  %1392 = add nsw i64 %1384, 16
  %1393 = getelementptr inbounds float, float* %3, i64 %1392
  %1394 = bitcast float* %1393 to <8 x float>*
  %1395 = load <8 x float>, <8 x float>* %1394, align 1, !tbaa !12
  %1396 = add nsw i64 %1384, 24
  %1397 = getelementptr inbounds float, float* %3, i64 %1396
  %1398 = bitcast float* %1397 to <8 x float>*
  %1399 = load <8 x float>, <8 x float>* %1398, align 1, !tbaa !12
  %1400 = add nsw i64 %1384, 32
  %1401 = getelementptr inbounds float, float* %3, i64 %1400
  %1402 = bitcast float* %1401 to <8 x float>*
  %1403 = load <8 x float>, <8 x float>* %1402, align 1, !tbaa !12
  %1404 = add nsw i64 %1384, 40
  %1405 = getelementptr inbounds float, float* %3, i64 %1404
  %1406 = bitcast float* %1405 to <8 x float>*
  %1407 = load <8 x float>, <8 x float>* %1406, align 1, !tbaa !12
  %1408 = add nsw i64 %1384, 48
  %1409 = getelementptr inbounds float, float* %3, i64 %1408
  %1410 = bitcast float* %1409 to <8 x float>*
  %1411 = load <8 x float>, <8 x float>* %1410, align 1, !tbaa !12
  %1412 = add nsw i64 %1384, 56
  %1413 = getelementptr inbounds float, float* %3, i64 %1412
  %1414 = bitcast float* %1413 to <8 x float>*
  %1415 = load <8 x float>, <8 x float>* %1414, align 1, !tbaa !12
  %1416 = add nsw i64 %1384, 64
  %1417 = getelementptr inbounds float, float* %3, i64 %1416
  %1418 = bitcast float* %1417 to <8 x float>*
  %1419 = load <8 x float>, <8 x float>* %1418, align 1, !tbaa !12
  %1420 = add nsw i64 %1384, 72
  %1421 = getelementptr inbounds float, float* %3, i64 %1420
  %1422 = bitcast float* %1421 to <8 x float>*
  %1423 = load <8 x float>, <8 x float>* %1422, align 1, !tbaa !12
  %1424 = add nsw i64 %1384, 80
  %1425 = getelementptr inbounds float, float* %3, i64 %1424
  %1426 = bitcast float* %1425 to <8 x float>*
  %1427 = load <8 x float>, <8 x float>* %1426, align 1, !tbaa !12
  %1428 = add nsw i64 %1384, 88
  %1429 = getelementptr inbounds float, float* %3, i64 %1428
  %1430 = bitcast float* %1429 to <8 x float>*
  %1431 = load <8 x float>, <8 x float>* %1430, align 1, !tbaa !12
  %1432 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1387, <8 x float> %60, <8 x float> %1339) #10
  %1433 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1391, <8 x float> %60, <8 x float> %1343) #10
  %1434 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1395, <8 x float> %60, <8 x float> %1347) #10
  %1435 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1399, <8 x float> %60, <8 x float> %1351) #10
  %1436 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1403, <8 x float> %60, <8 x float> %1355) #10
  %1437 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1407, <8 x float> %60, <8 x float> %1359) #10
  %1438 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1411, <8 x float> %60, <8 x float> %1363) #10
  %1439 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1415, <8 x float> %60, <8 x float> %1367) #10
  %1440 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1419, <8 x float> %60, <8 x float> %1371) #10
  %1441 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1423, <8 x float> %60, <8 x float> %1375) #10
  %1442 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1427, <8 x float> %60, <8 x float> %1379) #10
  %1443 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1431, <8 x float> %60, <8 x float> %1383) #10
  store <8 x float> %1432, <8 x float>* %1338, align 1, !tbaa !12
  store <8 x float> %1433, <8 x float>* %1342, align 1, !tbaa !12
  store <8 x float> %1434, <8 x float>* %1346, align 1, !tbaa !12
  store <8 x float> %1435, <8 x float>* %1350, align 1, !tbaa !12
  store <8 x float> %1436, <8 x float>* %1354, align 1, !tbaa !12
  store <8 x float> %1437, <8 x float>* %1358, align 1, !tbaa !12
  store <8 x float> %1438, <8 x float>* %1362, align 1, !tbaa !12
  store <8 x float> %1439, <8 x float>* %1366, align 1, !tbaa !12
  store <8 x float> %1440, <8 x float>* %1370, align 1, !tbaa !12
  store <8 x float> %1441, <8 x float>* %1374, align 1, !tbaa !12
  store <8 x float> %1442, <8 x float>* %1378, align 1, !tbaa !12
  store <8 x float> %1443, <8 x float>* %1382, align 1, !tbaa !12
  %1444 = add nuw nsw i64 %1287, 96
  %1445 = icmp ult i64 %1444, %1106
  br i1 %1445, label %1286, label %1280

1446:                                             ; preds = %1453, %1101, %1280
  %1447 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1448 = icmp sgt i32 %1447, 0
  br i1 %1448, label %1449, label %1613

1449:                                             ; preds = %1446
  %1450 = zext i32 %1447 to i64
  %1451 = trunc i64 %66 to i32
  %1452 = mul nsw i32 %1447, %1451
  br label %1618

1453:                                             ; preds = %1281, %1453
  %1454 = phi i64 [ 0, %1281 ], [ %1611, %1453 ]
  %1455 = getelementptr inbounds float, float* %5, i64 %1454
  %1456 = getelementptr inbounds float, float* %1455, i64 8
  %1457 = bitcast float* %1456 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1457, i32 0, i32 1, i32 1)
  %1458 = getelementptr inbounds float, float* %3, i64 %1454
  %1459 = getelementptr inbounds float, float* %1458, i64 8
  %1460 = bitcast float* %1459 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1460, i32 0, i32 1, i32 1)
  %1461 = getelementptr inbounds float, float* %1455, i64 16
  %1462 = bitcast float* %1461 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1462, i32 0, i32 1, i32 1)
  %1463 = getelementptr inbounds float, float* %1458, i64 16
  %1464 = bitcast float* %1463 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1464, i32 0, i32 1, i32 1)
  %1465 = getelementptr inbounds float, float* %1455, i64 24
  %1466 = bitcast float* %1465 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1466, i32 0, i32 1, i32 1)
  %1467 = getelementptr inbounds float, float* %1458, i64 24
  %1468 = bitcast float* %1467 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1468, i32 0, i32 1, i32 1)
  %1469 = getelementptr inbounds float, float* %1455, i64 32
  %1470 = bitcast float* %1469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1470, i32 0, i32 1, i32 1)
  %1471 = getelementptr inbounds float, float* %1458, i64 32
  %1472 = bitcast float* %1471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1472, i32 0, i32 1, i32 1)
  %1473 = getelementptr inbounds float, float* %1455, i64 40
  %1474 = bitcast float* %1473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1474, i32 0, i32 1, i32 1)
  %1475 = getelementptr inbounds float, float* %1458, i64 40
  %1476 = bitcast float* %1475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1476, i32 0, i32 1, i32 1)
  %1477 = getelementptr inbounds float, float* %1455, i64 48
  %1478 = bitcast float* %1477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1478, i32 0, i32 1, i32 1)
  %1479 = getelementptr inbounds float, float* %1458, i64 48
  %1480 = bitcast float* %1479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1480, i32 0, i32 1, i32 1)
  %1481 = getelementptr inbounds float, float* %1455, i64 56
  %1482 = bitcast float* %1481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1482, i32 0, i32 1, i32 1)
  %1483 = getelementptr inbounds float, float* %1458, i64 56
  %1484 = bitcast float* %1483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1484, i32 0, i32 1, i32 1)
  %1485 = getelementptr inbounds float, float* %1455, i64 64
  %1486 = bitcast float* %1485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1486, i32 0, i32 1, i32 1)
  %1487 = getelementptr inbounds float, float* %1458, i64 64
  %1488 = bitcast float* %1487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1488, i32 0, i32 1, i32 1)
  %1489 = getelementptr inbounds float, float* %1455, i64 72
  %1490 = bitcast float* %1489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1490, i32 0, i32 1, i32 1)
  %1491 = getelementptr inbounds float, float* %1458, i64 72
  %1492 = bitcast float* %1491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1492, i32 0, i32 1, i32 1)
  %1493 = getelementptr inbounds float, float* %1455, i64 80
  %1494 = bitcast float* %1493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1494, i32 0, i32 1, i32 1)
  %1495 = getelementptr inbounds float, float* %1458, i64 80
  %1496 = bitcast float* %1495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1496, i32 0, i32 1, i32 1)
  %1497 = getelementptr inbounds float, float* %1455, i64 88
  %1498 = bitcast float* %1497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1498, i32 0, i32 1, i32 1)
  %1499 = getelementptr inbounds float, float* %1458, i64 88
  %1500 = bitcast float* %1499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1500, i32 0, i32 1, i32 1)
  %1501 = getelementptr inbounds float, float* %1455, i64 96
  %1502 = bitcast float* %1501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1502, i32 0, i32 1, i32 1)
  %1503 = getelementptr inbounds float, float* %1458, i64 96
  %1504 = bitcast float* %1503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1504, i32 0, i32 1, i32 1)
  %1505 = bitcast float* %1455 to <8 x float>*
  %1506 = load <8 x float>, <8 x float>* %1505, align 1, !tbaa !12
  %1507 = or i64 %1454, 8
  %1508 = getelementptr inbounds float, float* %5, i64 %1507
  %1509 = bitcast float* %1508 to <8 x float>*
  %1510 = load <8 x float>, <8 x float>* %1509, align 1, !tbaa !12
  %1511 = or i64 %1454, 16
  %1512 = getelementptr inbounds float, float* %5, i64 %1511
  %1513 = bitcast float* %1512 to <8 x float>*
  %1514 = load <8 x float>, <8 x float>* %1513, align 1, !tbaa !12
  %1515 = or i64 %1454, 24
  %1516 = getelementptr inbounds float, float* %5, i64 %1515
  %1517 = bitcast float* %1516 to <8 x float>*
  %1518 = load <8 x float>, <8 x float>* %1517, align 1, !tbaa !12
  %1519 = add nuw nsw i64 %1454, 32
  %1520 = getelementptr inbounds float, float* %5, i64 %1519
  %1521 = bitcast float* %1520 to <8 x float>*
  %1522 = load <8 x float>, <8 x float>* %1521, align 1, !tbaa !12
  %1523 = add nuw nsw i64 %1454, 40
  %1524 = getelementptr inbounds float, float* %5, i64 %1523
  %1525 = bitcast float* %1524 to <8 x float>*
  %1526 = load <8 x float>, <8 x float>* %1525, align 1, !tbaa !12
  %1527 = add nuw nsw i64 %1454, 48
  %1528 = getelementptr inbounds float, float* %5, i64 %1527
  %1529 = bitcast float* %1528 to <8 x float>*
  %1530 = load <8 x float>, <8 x float>* %1529, align 1, !tbaa !12
  %1531 = add nuw nsw i64 %1454, 56
  %1532 = getelementptr inbounds float, float* %5, i64 %1531
  %1533 = bitcast float* %1532 to <8 x float>*
  %1534 = load <8 x float>, <8 x float>* %1533, align 1, !tbaa !12
  %1535 = add nuw nsw i64 %1454, 64
  %1536 = getelementptr inbounds float, float* %5, i64 %1535
  %1537 = bitcast float* %1536 to <8 x float>*
  %1538 = load <8 x float>, <8 x float>* %1537, align 1, !tbaa !12
  %1539 = add nuw nsw i64 %1454, 72
  %1540 = getelementptr inbounds float, float* %5, i64 %1539
  %1541 = bitcast float* %1540 to <8 x float>*
  %1542 = load <8 x float>, <8 x float>* %1541, align 1, !tbaa !12
  %1543 = add nuw nsw i64 %1454, 80
  %1544 = getelementptr inbounds float, float* %5, i64 %1543
  %1545 = bitcast float* %1544 to <8 x float>*
  %1546 = load <8 x float>, <8 x float>* %1545, align 1, !tbaa !12
  %1547 = add nuw nsw i64 %1454, 88
  %1548 = getelementptr inbounds float, float* %5, i64 %1547
  %1549 = bitcast float* %1548 to <8 x float>*
  %1550 = load <8 x float>, <8 x float>* %1549, align 1, !tbaa !12
  %1551 = add nsw i64 %1454, %1284
  %1552 = getelementptr inbounds float, float* %3, i64 %1551
  %1553 = bitcast float* %1552 to <8 x float>*
  %1554 = load <8 x float>, <8 x float>* %1553, align 1, !tbaa !12
  %1555 = add nsw i64 %1551, 8
  %1556 = getelementptr inbounds float, float* %3, i64 %1555
  %1557 = bitcast float* %1556 to <8 x float>*
  %1558 = load <8 x float>, <8 x float>* %1557, align 1, !tbaa !12
  %1559 = add nsw i64 %1551, 16
  %1560 = getelementptr inbounds float, float* %3, i64 %1559
  %1561 = bitcast float* %1560 to <8 x float>*
  %1562 = load <8 x float>, <8 x float>* %1561, align 1, !tbaa !12
  %1563 = add nsw i64 %1551, 24
  %1564 = getelementptr inbounds float, float* %3, i64 %1563
  %1565 = bitcast float* %1564 to <8 x float>*
  %1566 = load <8 x float>, <8 x float>* %1565, align 1, !tbaa !12
  %1567 = add nsw i64 %1551, 32
  %1568 = getelementptr inbounds float, float* %3, i64 %1567
  %1569 = bitcast float* %1568 to <8 x float>*
  %1570 = load <8 x float>, <8 x float>* %1569, align 1, !tbaa !12
  %1571 = add nsw i64 %1551, 40
  %1572 = getelementptr inbounds float, float* %3, i64 %1571
  %1573 = bitcast float* %1572 to <8 x float>*
  %1574 = load <8 x float>, <8 x float>* %1573, align 1, !tbaa !12
  %1575 = add nsw i64 %1551, 48
  %1576 = getelementptr inbounds float, float* %3, i64 %1575
  %1577 = bitcast float* %1576 to <8 x float>*
  %1578 = load <8 x float>, <8 x float>* %1577, align 1, !tbaa !12
  %1579 = add nsw i64 %1551, 56
  %1580 = getelementptr inbounds float, float* %3, i64 %1579
  %1581 = bitcast float* %1580 to <8 x float>*
  %1582 = load <8 x float>, <8 x float>* %1581, align 1, !tbaa !12
  %1583 = add nsw i64 %1551, 64
  %1584 = getelementptr inbounds float, float* %3, i64 %1583
  %1585 = bitcast float* %1584 to <8 x float>*
  %1586 = load <8 x float>, <8 x float>* %1585, align 1, !tbaa !12
  %1587 = add nsw i64 %1551, 72
  %1588 = getelementptr inbounds float, float* %3, i64 %1587
  %1589 = bitcast float* %1588 to <8 x float>*
  %1590 = load <8 x float>, <8 x float>* %1589, align 1, !tbaa !12
  %1591 = add nsw i64 %1551, 80
  %1592 = getelementptr inbounds float, float* %3, i64 %1591
  %1593 = bitcast float* %1592 to <8 x float>*
  %1594 = load <8 x float>, <8 x float>* %1593, align 1, !tbaa !12
  %1595 = add nsw i64 %1551, 88
  %1596 = getelementptr inbounds float, float* %3, i64 %1595
  %1597 = bitcast float* %1596 to <8 x float>*
  %1598 = load <8 x float>, <8 x float>* %1597, align 1, !tbaa !12
  %1599 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1554, <8 x float> %65, <8 x float> %1506) #10
  %1600 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1558, <8 x float> %65, <8 x float> %1510) #10
  %1601 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1562, <8 x float> %65, <8 x float> %1514) #10
  %1602 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1566, <8 x float> %65, <8 x float> %1518) #10
  %1603 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1570, <8 x float> %65, <8 x float> %1522) #10
  %1604 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1574, <8 x float> %65, <8 x float> %1526) #10
  %1605 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1578, <8 x float> %65, <8 x float> %1530) #10
  %1606 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1582, <8 x float> %65, <8 x float> %1534) #10
  %1607 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1586, <8 x float> %65, <8 x float> %1538) #10
  %1608 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1590, <8 x float> %65, <8 x float> %1542) #10
  %1609 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1594, <8 x float> %65, <8 x float> %1546) #10
  %1610 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1598, <8 x float> %65, <8 x float> %1550) #10
  store <8 x float> %1599, <8 x float>* %1505, align 1, !tbaa !12
  store <8 x float> %1600, <8 x float>* %1509, align 1, !tbaa !12
  store <8 x float> %1601, <8 x float>* %1513, align 1, !tbaa !12
  store <8 x float> %1602, <8 x float>* %1517, align 1, !tbaa !12
  store <8 x float> %1603, <8 x float>* %1521, align 1, !tbaa !12
  store <8 x float> %1604, <8 x float>* %1525, align 1, !tbaa !12
  store <8 x float> %1605, <8 x float>* %1529, align 1, !tbaa !12
  store <8 x float> %1606, <8 x float>* %1533, align 1, !tbaa !12
  store <8 x float> %1607, <8 x float>* %1537, align 1, !tbaa !12
  store <8 x float> %1608, <8 x float>* %1541, align 1, !tbaa !12
  store <8 x float> %1609, <8 x float>* %1545, align 1, !tbaa !12
  store <8 x float> %1610, <8 x float>* %1549, align 1, !tbaa !12
  %1611 = add nuw nsw i64 %1454, 96
  %1612 = icmp ult i64 %1611, %1285
  br i1 %1612, label %1453, label %1446

1613:                                             ; preds = %1618, %422, %20, %934, %1446
  %1614 = add nuw nsw i64 %21, 10
  %1615 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1616 = sext i32 %1615 to i64
  %1617 = icmp slt i64 %1614, %1616
  br i1 %1617, label %20, label %8

1618:                                             ; preds = %1449, %1618
  %1619 = phi i64 [ 0, %1449 ], [ %1789, %1618 ]
  %1620 = getelementptr inbounds float, float* %5, i64 %1619
  %1621 = getelementptr inbounds float, float* %1620, i64 8
  %1622 = bitcast float* %1621 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1622, i32 0, i32 1, i32 1)
  %1623 = getelementptr inbounds float, float* %3, i64 %1619
  %1624 = getelementptr inbounds float, float* %1623, i64 8
  %1625 = bitcast float* %1624 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1625, i32 0, i32 1, i32 1)
  %1626 = getelementptr inbounds float, float* %1620, i64 16
  %1627 = bitcast float* %1626 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1627, i32 0, i32 1, i32 1)
  %1628 = getelementptr inbounds float, float* %1623, i64 16
  %1629 = bitcast float* %1628 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1629, i32 0, i32 1, i32 1)
  %1630 = getelementptr inbounds float, float* %1620, i64 24
  %1631 = bitcast float* %1630 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1631, i32 0, i32 1, i32 1)
  %1632 = getelementptr inbounds float, float* %1623, i64 24
  %1633 = bitcast float* %1632 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1633, i32 0, i32 1, i32 1)
  %1634 = getelementptr inbounds float, float* %1620, i64 32
  %1635 = bitcast float* %1634 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1635, i32 0, i32 1, i32 1)
  %1636 = getelementptr inbounds float, float* %1623, i64 32
  %1637 = bitcast float* %1636 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1637, i32 0, i32 1, i32 1)
  %1638 = getelementptr inbounds float, float* %1620, i64 40
  %1639 = bitcast float* %1638 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1639, i32 0, i32 1, i32 1)
  %1640 = getelementptr inbounds float, float* %1623, i64 40
  %1641 = bitcast float* %1640 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1641, i32 0, i32 1, i32 1)
  %1642 = getelementptr inbounds float, float* %1620, i64 48
  %1643 = bitcast float* %1642 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1643, i32 0, i32 1, i32 1)
  %1644 = getelementptr inbounds float, float* %1623, i64 48
  %1645 = bitcast float* %1644 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1645, i32 0, i32 1, i32 1)
  %1646 = getelementptr inbounds float, float* %1620, i64 56
  %1647 = bitcast float* %1646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1647, i32 0, i32 1, i32 1)
  %1648 = getelementptr inbounds float, float* %1623, i64 56
  %1649 = bitcast float* %1648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1649, i32 0, i32 1, i32 1)
  %1650 = getelementptr inbounds float, float* %1620, i64 64
  %1651 = bitcast float* %1650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1651, i32 0, i32 1, i32 1)
  %1652 = getelementptr inbounds float, float* %1623, i64 64
  %1653 = bitcast float* %1652 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1653, i32 0, i32 1, i32 1)
  %1654 = getelementptr inbounds float, float* %1620, i64 72
  %1655 = bitcast float* %1654 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1655, i32 0, i32 1, i32 1)
  %1656 = getelementptr inbounds float, float* %1623, i64 72
  %1657 = bitcast float* %1656 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1657, i32 0, i32 1, i32 1)
  %1658 = getelementptr inbounds float, float* %1620, i64 80
  %1659 = bitcast float* %1658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1659, i32 0, i32 1, i32 1)
  %1660 = getelementptr inbounds float, float* %1623, i64 80
  %1661 = bitcast float* %1660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1661, i32 0, i32 1, i32 1)
  %1662 = getelementptr inbounds float, float* %1620, i64 88
  %1663 = bitcast float* %1662 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1663, i32 0, i32 1, i32 1)
  %1664 = getelementptr inbounds float, float* %1623, i64 88
  %1665 = bitcast float* %1664 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1665, i32 0, i32 1, i32 1)
  %1666 = getelementptr inbounds float, float* %1620, i64 96
  %1667 = bitcast float* %1666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1667, i32 0, i32 1, i32 1)
  %1668 = getelementptr inbounds float, float* %1623, i64 96
  %1669 = bitcast float* %1668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1669, i32 0, i32 1, i32 1)
  %1670 = bitcast float* %1620 to <8 x float>*
  %1671 = load <8 x float>, <8 x float>* %1670, align 1, !tbaa !12
  %1672 = or i64 %1619, 8
  %1673 = getelementptr inbounds float, float* %5, i64 %1672
  %1674 = bitcast float* %1673 to <8 x float>*
  %1675 = load <8 x float>, <8 x float>* %1674, align 1, !tbaa !12
  %1676 = or i64 %1619, 16
  %1677 = getelementptr inbounds float, float* %5, i64 %1676
  %1678 = bitcast float* %1677 to <8 x float>*
  %1679 = load <8 x float>, <8 x float>* %1678, align 1, !tbaa !12
  %1680 = or i64 %1619, 24
  %1681 = getelementptr inbounds float, float* %5, i64 %1680
  %1682 = bitcast float* %1681 to <8 x float>*
  %1683 = load <8 x float>, <8 x float>* %1682, align 1, !tbaa !12
  %1684 = add nuw nsw i64 %1619, 32
  %1685 = getelementptr inbounds float, float* %5, i64 %1684
  %1686 = bitcast float* %1685 to <8 x float>*
  %1687 = load <8 x float>, <8 x float>* %1686, align 1, !tbaa !12
  %1688 = add nuw nsw i64 %1619, 40
  %1689 = getelementptr inbounds float, float* %5, i64 %1688
  %1690 = bitcast float* %1689 to <8 x float>*
  %1691 = load <8 x float>, <8 x float>* %1690, align 1, !tbaa !12
  %1692 = add nuw nsw i64 %1619, 48
  %1693 = getelementptr inbounds float, float* %5, i64 %1692
  %1694 = bitcast float* %1693 to <8 x float>*
  %1695 = load <8 x float>, <8 x float>* %1694, align 1, !tbaa !12
  %1696 = add nuw nsw i64 %1619, 56
  %1697 = getelementptr inbounds float, float* %5, i64 %1696
  %1698 = bitcast float* %1697 to <8 x float>*
  %1699 = load <8 x float>, <8 x float>* %1698, align 1, !tbaa !12
  %1700 = add nuw nsw i64 %1619, 64
  %1701 = getelementptr inbounds float, float* %5, i64 %1700
  %1702 = bitcast float* %1701 to <8 x float>*
  %1703 = load <8 x float>, <8 x float>* %1702, align 1, !tbaa !12
  %1704 = add nuw nsw i64 %1619, 72
  %1705 = getelementptr inbounds float, float* %5, i64 %1704
  %1706 = bitcast float* %1705 to <8 x float>*
  %1707 = load <8 x float>, <8 x float>* %1706, align 1, !tbaa !12
  %1708 = add nuw nsw i64 %1619, 80
  %1709 = getelementptr inbounds float, float* %5, i64 %1708
  %1710 = bitcast float* %1709 to <8 x float>*
  %1711 = load <8 x float>, <8 x float>* %1710, align 1, !tbaa !12
  %1712 = add nuw nsw i64 %1619, 88
  %1713 = getelementptr inbounds float, float* %5, i64 %1712
  %1714 = bitcast float* %1713 to <8 x float>*
  %1715 = load <8 x float>, <8 x float>* %1714, align 1, !tbaa !12
  %1716 = trunc i64 %1619 to i32
  %1717 = add nsw i32 %1452, %1716
  %1718 = sext i32 %1717 to i64
  %1719 = getelementptr inbounds float, float* %3, i64 %1718
  %1720 = bitcast float* %1719 to <8 x float>*
  %1721 = load <8 x float>, <8 x float>* %1720, align 1, !tbaa !12
  %1722 = add nsw i32 %1717, 8
  %1723 = sext i32 %1722 to i64
  %1724 = getelementptr inbounds float, float* %3, i64 %1723
  %1725 = bitcast float* %1724 to <8 x float>*
  %1726 = load <8 x float>, <8 x float>* %1725, align 1, !tbaa !12
  %1727 = add nsw i32 %1717, 16
  %1728 = sext i32 %1727 to i64
  %1729 = getelementptr inbounds float, float* %3, i64 %1728
  %1730 = bitcast float* %1729 to <8 x float>*
  %1731 = load <8 x float>, <8 x float>* %1730, align 1, !tbaa !12
  %1732 = add nsw i32 %1717, 24
  %1733 = sext i32 %1732 to i64
  %1734 = getelementptr inbounds float, float* %3, i64 %1733
  %1735 = bitcast float* %1734 to <8 x float>*
  %1736 = load <8 x float>, <8 x float>* %1735, align 1, !tbaa !12
  %1737 = add nsw i32 %1717, 32
  %1738 = sext i32 %1737 to i64
  %1739 = getelementptr inbounds float, float* %3, i64 %1738
  %1740 = bitcast float* %1739 to <8 x float>*
  %1741 = load <8 x float>, <8 x float>* %1740, align 1, !tbaa !12
  %1742 = add nsw i32 %1717, 40
  %1743 = sext i32 %1742 to i64
  %1744 = getelementptr inbounds float, float* %3, i64 %1743
  %1745 = bitcast float* %1744 to <8 x float>*
  %1746 = load <8 x float>, <8 x float>* %1745, align 1, !tbaa !12
  %1747 = add nsw i32 %1717, 48
  %1748 = sext i32 %1747 to i64
  %1749 = getelementptr inbounds float, float* %3, i64 %1748
  %1750 = bitcast float* %1749 to <8 x float>*
  %1751 = load <8 x float>, <8 x float>* %1750, align 1, !tbaa !12
  %1752 = add nsw i32 %1717, 56
  %1753 = sext i32 %1752 to i64
  %1754 = getelementptr inbounds float, float* %3, i64 %1753
  %1755 = bitcast float* %1754 to <8 x float>*
  %1756 = load <8 x float>, <8 x float>* %1755, align 1, !tbaa !12
  %1757 = add nsw i32 %1717, 64
  %1758 = sext i32 %1757 to i64
  %1759 = getelementptr inbounds float, float* %3, i64 %1758
  %1760 = bitcast float* %1759 to <8 x float>*
  %1761 = load <8 x float>, <8 x float>* %1760, align 1, !tbaa !12
  %1762 = add nsw i32 %1717, 72
  %1763 = sext i32 %1762 to i64
  %1764 = getelementptr inbounds float, float* %3, i64 %1763
  %1765 = bitcast float* %1764 to <8 x float>*
  %1766 = load <8 x float>, <8 x float>* %1765, align 1, !tbaa !12
  %1767 = add nsw i32 %1717, 80
  %1768 = sext i32 %1767 to i64
  %1769 = getelementptr inbounds float, float* %3, i64 %1768
  %1770 = bitcast float* %1769 to <8 x float>*
  %1771 = load <8 x float>, <8 x float>* %1770, align 1, !tbaa !12
  %1772 = add nsw i32 %1717, 88
  %1773 = sext i32 %1772 to i64
  %1774 = getelementptr inbounds float, float* %3, i64 %1773
  %1775 = bitcast float* %1774 to <8 x float>*
  %1776 = load <8 x float>, <8 x float>* %1775, align 1, !tbaa !12
  %1777 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1721, <8 x float> %70, <8 x float> %1671) #10
  %1778 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1726, <8 x float> %70, <8 x float> %1675) #10
  %1779 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1731, <8 x float> %70, <8 x float> %1679) #10
  %1780 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1736, <8 x float> %70, <8 x float> %1683) #10
  %1781 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1741, <8 x float> %70, <8 x float> %1687) #10
  %1782 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1746, <8 x float> %70, <8 x float> %1691) #10
  %1783 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1751, <8 x float> %70, <8 x float> %1695) #10
  %1784 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1756, <8 x float> %70, <8 x float> %1699) #10
  %1785 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1761, <8 x float> %70, <8 x float> %1703) #10
  %1786 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1766, <8 x float> %70, <8 x float> %1707) #10
  %1787 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1771, <8 x float> %70, <8 x float> %1711) #10
  %1788 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1776, <8 x float> %70, <8 x float> %1715) #10
  store <8 x float> %1777, <8 x float>* %1670, align 1, !tbaa !12
  store <8 x float> %1778, <8 x float>* %1674, align 1, !tbaa !12
  store <8 x float> %1779, <8 x float>* %1678, align 1, !tbaa !12
  store <8 x float> %1780, <8 x float>* %1682, align 1, !tbaa !12
  store <8 x float> %1781, <8 x float>* %1686, align 1, !tbaa !12
  store <8 x float> %1782, <8 x float>* %1690, align 1, !tbaa !12
  store <8 x float> %1783, <8 x float>* %1694, align 1, !tbaa !12
  store <8 x float> %1784, <8 x float>* %1698, align 1, !tbaa !12
  store <8 x float> %1785, <8 x float>* %1702, align 1, !tbaa !12
  store <8 x float> %1786, <8 x float>* %1706, align 1, !tbaa !12
  store <8 x float> %1787, <8 x float>* %1710, align 1, !tbaa !12
  store <8 x float> %1788, <8 x float>* %1714, align 1, !tbaa !12
  %1789 = add nuw nsw i64 %1619, 96
  %1790 = icmp ult i64 %1789, %1450
  br i1 %1790, label %1618, label %1613
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 250
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui12_uk10.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
