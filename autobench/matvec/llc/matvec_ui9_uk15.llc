; ModuleID = 'codes/matvec_ui9_uk15.cpp'
source_filename = "codes/matvec_ui9_uk15.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui9_uk15.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 72
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 120
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1923, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1923
  %21 = phi i64 [ %1924, %1923 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = add nuw nsw i64 %21, 13
  %87 = getelementptr inbounds float, float* %4, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !18
  %89 = insertelement <8 x float> undef, float %88, i32 0
  %90 = shufflevector <8 x float> %89, <8 x float> undef, <8 x i32> zeroinitializer
  %91 = add nuw nsw i64 %21, 14
  %92 = getelementptr inbounds float, float* %4, i64 %91
  %93 = load float, float* %92, align 4, !tbaa !18
  %94 = insertelement <8 x float> undef, float %93, i32 0
  %95 = shufflevector <8 x float> %94, <8 x float> undef, <8 x i32> zeroinitializer
  %96 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %1923

98:                                               ; preds = %20
  %99 = zext i32 %96 to i64
  %100 = trunc i64 %21 to i32
  %101 = mul nsw i32 %96, %100
  br label %108

102:                                              ; preds = %108
  br i1 %97, label %103, label %493

103:                                              ; preds = %102
  %104 = trunc i64 %26 to i32
  %105 = mul nsw i32 %96, %104
  %106 = sext i32 %105 to i64
  %107 = zext i32 %96 to i64
  br label %245

108:                                              ; preds = %98, %108
  %109 = phi i64 [ 0, %98 ], [ %237, %108 ]
  %110 = getelementptr inbounds float, float* %5, i64 %109
  %111 = getelementptr inbounds float, float* %110, i64 8
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %3, i64 %109
  %114 = getelementptr inbounds float, float* %113, i64 8
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %110, i64 16
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %113, i64 16
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %110, i64 24
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %113, i64 24
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %110, i64 32
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %113, i64 32
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %110, i64 40
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %113, i64 40
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %110, i64 48
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %113, i64 48
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %110, i64 56
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = getelementptr inbounds float, float* %113, i64 56
  %139 = bitcast float* %138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %139, i32 0, i32 1, i32 1)
  %140 = getelementptr inbounds float, float* %110, i64 64
  %141 = bitcast float* %140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %141, i32 0, i32 1, i32 1)
  %142 = getelementptr inbounds float, float* %113, i64 64
  %143 = bitcast float* %142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %143, i32 0, i32 1, i32 1)
  %144 = getelementptr inbounds float, float* %110, i64 72
  %145 = bitcast float* %144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %145, i32 0, i32 1, i32 1)
  %146 = getelementptr inbounds float, float* %113, i64 72
  %147 = bitcast float* %146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %147, i32 0, i32 1, i32 1)
  %148 = bitcast float* %110 to <8 x float>*
  %149 = load <8 x float>, <8 x float>* %148, align 1, !tbaa !12
  %150 = add nuw nsw i64 %109, 8
  %151 = getelementptr inbounds float, float* %5, i64 %150
  %152 = bitcast float* %151 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = add nuw nsw i64 %109, 16
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nuw nsw i64 %109, 24
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = add nuw nsw i64 %109, 32
  %163 = getelementptr inbounds float, float* %5, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = add nuw nsw i64 %109, 40
  %167 = getelementptr inbounds float, float* %5, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = add nuw nsw i64 %109, 48
  %171 = getelementptr inbounds float, float* %5, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = add nuw nsw i64 %109, 56
  %175 = getelementptr inbounds float, float* %5, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nuw nsw i64 %109, 64
  %179 = getelementptr inbounds float, float* %5, i64 %178
  %180 = bitcast float* %179 to <8 x float>*
  %181 = load <8 x float>, <8 x float>* %180, align 1, !tbaa !12
  %182 = trunc i64 %109 to i32
  %183 = add nsw i32 %101, %182
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds float, float* %3, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = add nsw i32 %183, 8
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %3, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nsw i32 %183, 16
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %3, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = add nsw i32 %183, 24
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %3, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nsw i32 %183, 32
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = add nsw i32 %183, 40
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nsw i32 %183, 48
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %3, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %217 = load <8 x float>, <8 x float>* %216, align 1, !tbaa !12
  %218 = add nsw i32 %183, 56
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %3, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %222 = load <8 x float>, <8 x float>* %221, align 1, !tbaa !12
  %223 = add nsw i32 %183, 64
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %3, i64 %224
  %226 = bitcast float* %225 to <8 x float>*
  %227 = load <8 x float>, <8 x float>* %226, align 1, !tbaa !12
  %228 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %187, <8 x float> %25, <8 x float> %149) #10
  %229 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %192, <8 x float> %25, <8 x float> %153) #10
  %230 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %197, <8 x float> %25, <8 x float> %157) #10
  %231 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %202, <8 x float> %25, <8 x float> %161) #10
  %232 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %165) #10
  %233 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %169) #10
  %234 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %217, <8 x float> %25, <8 x float> %173) #10
  %235 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %222, <8 x float> %25, <8 x float> %177) #10
  %236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %227, <8 x float> %25, <8 x float> %181) #10
  store <8 x float> %228, <8 x float>* %148, align 1, !tbaa !12
  store <8 x float> %229, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %230, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %231, <8 x float>* %160, align 1, !tbaa !12
  store <8 x float> %232, <8 x float>* %164, align 1, !tbaa !12
  store <8 x float> %233, <8 x float>* %168, align 1, !tbaa !12
  store <8 x float> %234, <8 x float>* %172, align 1, !tbaa !12
  store <8 x float> %235, <8 x float>* %176, align 1, !tbaa !12
  store <8 x float> %236, <8 x float>* %180, align 1, !tbaa !12
  %237 = add nuw nsw i64 %109, 72
  %238 = icmp ult i64 %237, %99
  br i1 %238, label %108, label %102

239:                                              ; preds = %245
  br i1 %97, label %240, label %493

240:                                              ; preds = %239
  %241 = trunc i64 %31 to i32
  %242 = mul nsw i32 %96, %241
  %243 = sext i32 %242 to i64
  %244 = zext i32 %96 to i64
  br label %372

245:                                              ; preds = %103, %245
  %246 = phi i64 [ 0, %103 ], [ %364, %245 ]
  %247 = getelementptr inbounds float, float* %5, i64 %246
  %248 = getelementptr inbounds float, float* %247, i64 8
  %249 = bitcast float* %248 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %249, i32 0, i32 1, i32 1)
  %250 = getelementptr inbounds float, float* %3, i64 %246
  %251 = getelementptr inbounds float, float* %250, i64 8
  %252 = bitcast float* %251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %252, i32 0, i32 1, i32 1)
  %253 = getelementptr inbounds float, float* %247, i64 16
  %254 = bitcast float* %253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %254, i32 0, i32 1, i32 1)
  %255 = getelementptr inbounds float, float* %250, i64 16
  %256 = bitcast float* %255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %256, i32 0, i32 1, i32 1)
  %257 = getelementptr inbounds float, float* %247, i64 24
  %258 = bitcast float* %257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %258, i32 0, i32 1, i32 1)
  %259 = getelementptr inbounds float, float* %250, i64 24
  %260 = bitcast float* %259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %260, i32 0, i32 1, i32 1)
  %261 = getelementptr inbounds float, float* %247, i64 32
  %262 = bitcast float* %261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %262, i32 0, i32 1, i32 1)
  %263 = getelementptr inbounds float, float* %250, i64 32
  %264 = bitcast float* %263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %264, i32 0, i32 1, i32 1)
  %265 = getelementptr inbounds float, float* %247, i64 40
  %266 = bitcast float* %265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %266, i32 0, i32 1, i32 1)
  %267 = getelementptr inbounds float, float* %250, i64 40
  %268 = bitcast float* %267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %268, i32 0, i32 1, i32 1)
  %269 = getelementptr inbounds float, float* %247, i64 48
  %270 = bitcast float* %269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %270, i32 0, i32 1, i32 1)
  %271 = getelementptr inbounds float, float* %250, i64 48
  %272 = bitcast float* %271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %272, i32 0, i32 1, i32 1)
  %273 = getelementptr inbounds float, float* %247, i64 56
  %274 = bitcast float* %273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %274, i32 0, i32 1, i32 1)
  %275 = getelementptr inbounds float, float* %250, i64 56
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %276, i32 0, i32 1, i32 1)
  %277 = getelementptr inbounds float, float* %247, i64 64
  %278 = bitcast float* %277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %278, i32 0, i32 1, i32 1)
  %279 = getelementptr inbounds float, float* %250, i64 64
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %247, i64 72
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %250, i64 72
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = bitcast float* %247 to <8 x float>*
  %286 = load <8 x float>, <8 x float>* %285, align 1, !tbaa !12
  %287 = add nuw nsw i64 %246, 8
  %288 = getelementptr inbounds float, float* %5, i64 %287
  %289 = bitcast float* %288 to <8 x float>*
  %290 = load <8 x float>, <8 x float>* %289, align 1, !tbaa !12
  %291 = add nuw nsw i64 %246, 16
  %292 = getelementptr inbounds float, float* %5, i64 %291
  %293 = bitcast float* %292 to <8 x float>*
  %294 = load <8 x float>, <8 x float>* %293, align 1, !tbaa !12
  %295 = add nuw nsw i64 %246, 24
  %296 = getelementptr inbounds float, float* %5, i64 %295
  %297 = bitcast float* %296 to <8 x float>*
  %298 = load <8 x float>, <8 x float>* %297, align 1, !tbaa !12
  %299 = add nuw nsw i64 %246, 32
  %300 = getelementptr inbounds float, float* %5, i64 %299
  %301 = bitcast float* %300 to <8 x float>*
  %302 = load <8 x float>, <8 x float>* %301, align 1, !tbaa !12
  %303 = add nuw nsw i64 %246, 40
  %304 = getelementptr inbounds float, float* %5, i64 %303
  %305 = bitcast float* %304 to <8 x float>*
  %306 = load <8 x float>, <8 x float>* %305, align 1, !tbaa !12
  %307 = add nuw nsw i64 %246, 48
  %308 = getelementptr inbounds float, float* %5, i64 %307
  %309 = bitcast float* %308 to <8 x float>*
  %310 = load <8 x float>, <8 x float>* %309, align 1, !tbaa !12
  %311 = add nuw nsw i64 %246, 56
  %312 = getelementptr inbounds float, float* %5, i64 %311
  %313 = bitcast float* %312 to <8 x float>*
  %314 = load <8 x float>, <8 x float>* %313, align 1, !tbaa !12
  %315 = add nuw nsw i64 %246, 64
  %316 = getelementptr inbounds float, float* %5, i64 %315
  %317 = bitcast float* %316 to <8 x float>*
  %318 = load <8 x float>, <8 x float>* %317, align 1, !tbaa !12
  %319 = add nsw i64 %246, %106
  %320 = getelementptr inbounds float, float* %3, i64 %319
  %321 = bitcast float* %320 to <8 x float>*
  %322 = load <8 x float>, <8 x float>* %321, align 1, !tbaa !12
  %323 = add nsw i64 %319, 8
  %324 = getelementptr inbounds float, float* %3, i64 %323
  %325 = bitcast float* %324 to <8 x float>*
  %326 = load <8 x float>, <8 x float>* %325, align 1, !tbaa !12
  %327 = add nsw i64 %319, 16
  %328 = getelementptr inbounds float, float* %3, i64 %327
  %329 = bitcast float* %328 to <8 x float>*
  %330 = load <8 x float>, <8 x float>* %329, align 1, !tbaa !12
  %331 = add nsw i64 %319, 24
  %332 = getelementptr inbounds float, float* %3, i64 %331
  %333 = bitcast float* %332 to <8 x float>*
  %334 = load <8 x float>, <8 x float>* %333, align 1, !tbaa !12
  %335 = add nsw i64 %319, 32
  %336 = getelementptr inbounds float, float* %3, i64 %335
  %337 = bitcast float* %336 to <8 x float>*
  %338 = load <8 x float>, <8 x float>* %337, align 1, !tbaa !12
  %339 = add nsw i64 %319, 40
  %340 = getelementptr inbounds float, float* %3, i64 %339
  %341 = bitcast float* %340 to <8 x float>*
  %342 = load <8 x float>, <8 x float>* %341, align 1, !tbaa !12
  %343 = add nsw i64 %319, 48
  %344 = getelementptr inbounds float, float* %3, i64 %343
  %345 = bitcast float* %344 to <8 x float>*
  %346 = load <8 x float>, <8 x float>* %345, align 1, !tbaa !12
  %347 = add nsw i64 %319, 56
  %348 = getelementptr inbounds float, float* %3, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %350 = load <8 x float>, <8 x float>* %349, align 1, !tbaa !12
  %351 = add nsw i64 %319, 64
  %352 = getelementptr inbounds float, float* %3, i64 %351
  %353 = bitcast float* %352 to <8 x float>*
  %354 = load <8 x float>, <8 x float>* %353, align 1, !tbaa !12
  %355 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %322, <8 x float> %30, <8 x float> %286) #10
  %356 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %326, <8 x float> %30, <8 x float> %290) #10
  %357 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %330, <8 x float> %30, <8 x float> %294) #10
  %358 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %334, <8 x float> %30, <8 x float> %298) #10
  %359 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %338, <8 x float> %30, <8 x float> %302) #10
  %360 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %342, <8 x float> %30, <8 x float> %306) #10
  %361 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %346, <8 x float> %30, <8 x float> %310) #10
  %362 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %350, <8 x float> %30, <8 x float> %314) #10
  %363 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %354, <8 x float> %30, <8 x float> %318) #10
  store <8 x float> %355, <8 x float>* %285, align 1, !tbaa !12
  store <8 x float> %356, <8 x float>* %289, align 1, !tbaa !12
  store <8 x float> %357, <8 x float>* %293, align 1, !tbaa !12
  store <8 x float> %358, <8 x float>* %297, align 1, !tbaa !12
  store <8 x float> %359, <8 x float>* %301, align 1, !tbaa !12
  store <8 x float> %360, <8 x float>* %305, align 1, !tbaa !12
  store <8 x float> %361, <8 x float>* %309, align 1, !tbaa !12
  store <8 x float> %362, <8 x float>* %313, align 1, !tbaa !12
  store <8 x float> %363, <8 x float>* %317, align 1, !tbaa !12
  %364 = add nuw nsw i64 %246, 72
  %365 = icmp ult i64 %364, %107
  br i1 %365, label %245, label %239

366:                                              ; preds = %372
  br i1 %97, label %367, label %493

367:                                              ; preds = %366
  %368 = trunc i64 %36 to i32
  %369 = mul nsw i32 %96, %368
  %370 = sext i32 %369 to i64
  %371 = zext i32 %96 to i64
  br label %500

372:                                              ; preds = %240, %372
  %373 = phi i64 [ 0, %240 ], [ %491, %372 ]
  %374 = getelementptr inbounds float, float* %5, i64 %373
  %375 = getelementptr inbounds float, float* %374, i64 8
  %376 = bitcast float* %375 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %376, i32 0, i32 1, i32 1)
  %377 = getelementptr inbounds float, float* %3, i64 %373
  %378 = getelementptr inbounds float, float* %377, i64 8
  %379 = bitcast float* %378 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %379, i32 0, i32 1, i32 1)
  %380 = getelementptr inbounds float, float* %374, i64 16
  %381 = bitcast float* %380 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %381, i32 0, i32 1, i32 1)
  %382 = getelementptr inbounds float, float* %377, i64 16
  %383 = bitcast float* %382 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %383, i32 0, i32 1, i32 1)
  %384 = getelementptr inbounds float, float* %374, i64 24
  %385 = bitcast float* %384 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %385, i32 0, i32 1, i32 1)
  %386 = getelementptr inbounds float, float* %377, i64 24
  %387 = bitcast float* %386 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %387, i32 0, i32 1, i32 1)
  %388 = getelementptr inbounds float, float* %374, i64 32
  %389 = bitcast float* %388 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %389, i32 0, i32 1, i32 1)
  %390 = getelementptr inbounds float, float* %377, i64 32
  %391 = bitcast float* %390 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %391, i32 0, i32 1, i32 1)
  %392 = getelementptr inbounds float, float* %374, i64 40
  %393 = bitcast float* %392 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %393, i32 0, i32 1, i32 1)
  %394 = getelementptr inbounds float, float* %377, i64 40
  %395 = bitcast float* %394 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %395, i32 0, i32 1, i32 1)
  %396 = getelementptr inbounds float, float* %374, i64 48
  %397 = bitcast float* %396 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %397, i32 0, i32 1, i32 1)
  %398 = getelementptr inbounds float, float* %377, i64 48
  %399 = bitcast float* %398 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %399, i32 0, i32 1, i32 1)
  %400 = getelementptr inbounds float, float* %374, i64 56
  %401 = bitcast float* %400 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %401, i32 0, i32 1, i32 1)
  %402 = getelementptr inbounds float, float* %377, i64 56
  %403 = bitcast float* %402 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %403, i32 0, i32 1, i32 1)
  %404 = getelementptr inbounds float, float* %374, i64 64
  %405 = bitcast float* %404 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %405, i32 0, i32 1, i32 1)
  %406 = getelementptr inbounds float, float* %377, i64 64
  %407 = bitcast float* %406 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %407, i32 0, i32 1, i32 1)
  %408 = getelementptr inbounds float, float* %374, i64 72
  %409 = bitcast float* %408 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %409, i32 0, i32 1, i32 1)
  %410 = getelementptr inbounds float, float* %377, i64 72
  %411 = bitcast float* %410 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %411, i32 0, i32 1, i32 1)
  %412 = bitcast float* %374 to <8 x float>*
  %413 = load <8 x float>, <8 x float>* %412, align 1, !tbaa !12
  %414 = add nuw nsw i64 %373, 8
  %415 = getelementptr inbounds float, float* %5, i64 %414
  %416 = bitcast float* %415 to <8 x float>*
  %417 = load <8 x float>, <8 x float>* %416, align 1, !tbaa !12
  %418 = add nuw nsw i64 %373, 16
  %419 = getelementptr inbounds float, float* %5, i64 %418
  %420 = bitcast float* %419 to <8 x float>*
  %421 = load <8 x float>, <8 x float>* %420, align 1, !tbaa !12
  %422 = add nuw nsw i64 %373, 24
  %423 = getelementptr inbounds float, float* %5, i64 %422
  %424 = bitcast float* %423 to <8 x float>*
  %425 = load <8 x float>, <8 x float>* %424, align 1, !tbaa !12
  %426 = add nuw nsw i64 %373, 32
  %427 = getelementptr inbounds float, float* %5, i64 %426
  %428 = bitcast float* %427 to <8 x float>*
  %429 = load <8 x float>, <8 x float>* %428, align 1, !tbaa !12
  %430 = add nuw nsw i64 %373, 40
  %431 = getelementptr inbounds float, float* %5, i64 %430
  %432 = bitcast float* %431 to <8 x float>*
  %433 = load <8 x float>, <8 x float>* %432, align 1, !tbaa !12
  %434 = add nuw nsw i64 %373, 48
  %435 = getelementptr inbounds float, float* %5, i64 %434
  %436 = bitcast float* %435 to <8 x float>*
  %437 = load <8 x float>, <8 x float>* %436, align 1, !tbaa !12
  %438 = add nuw nsw i64 %373, 56
  %439 = getelementptr inbounds float, float* %5, i64 %438
  %440 = bitcast float* %439 to <8 x float>*
  %441 = load <8 x float>, <8 x float>* %440, align 1, !tbaa !12
  %442 = add nuw nsw i64 %373, 64
  %443 = getelementptr inbounds float, float* %5, i64 %442
  %444 = bitcast float* %443 to <8 x float>*
  %445 = load <8 x float>, <8 x float>* %444, align 1, !tbaa !12
  %446 = add nsw i64 %373, %243
  %447 = getelementptr inbounds float, float* %3, i64 %446
  %448 = bitcast float* %447 to <8 x float>*
  %449 = load <8 x float>, <8 x float>* %448, align 1, !tbaa !12
  %450 = add nsw i64 %446, 8
  %451 = getelementptr inbounds float, float* %3, i64 %450
  %452 = bitcast float* %451 to <8 x float>*
  %453 = load <8 x float>, <8 x float>* %452, align 1, !tbaa !12
  %454 = add nsw i64 %446, 16
  %455 = getelementptr inbounds float, float* %3, i64 %454
  %456 = bitcast float* %455 to <8 x float>*
  %457 = load <8 x float>, <8 x float>* %456, align 1, !tbaa !12
  %458 = add nsw i64 %446, 24
  %459 = getelementptr inbounds float, float* %3, i64 %458
  %460 = bitcast float* %459 to <8 x float>*
  %461 = load <8 x float>, <8 x float>* %460, align 1, !tbaa !12
  %462 = add nsw i64 %446, 32
  %463 = getelementptr inbounds float, float* %3, i64 %462
  %464 = bitcast float* %463 to <8 x float>*
  %465 = load <8 x float>, <8 x float>* %464, align 1, !tbaa !12
  %466 = add nsw i64 %446, 40
  %467 = getelementptr inbounds float, float* %3, i64 %466
  %468 = bitcast float* %467 to <8 x float>*
  %469 = load <8 x float>, <8 x float>* %468, align 1, !tbaa !12
  %470 = add nsw i64 %446, 48
  %471 = getelementptr inbounds float, float* %3, i64 %470
  %472 = bitcast float* %471 to <8 x float>*
  %473 = load <8 x float>, <8 x float>* %472, align 1, !tbaa !12
  %474 = add nsw i64 %446, 56
  %475 = getelementptr inbounds float, float* %3, i64 %474
  %476 = bitcast float* %475 to <8 x float>*
  %477 = load <8 x float>, <8 x float>* %476, align 1, !tbaa !12
  %478 = add nsw i64 %446, 64
  %479 = getelementptr inbounds float, float* %3, i64 %478
  %480 = bitcast float* %479 to <8 x float>*
  %481 = load <8 x float>, <8 x float>* %480, align 1, !tbaa !12
  %482 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %449, <8 x float> %35, <8 x float> %413) #10
  %483 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %453, <8 x float> %35, <8 x float> %417) #10
  %484 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %457, <8 x float> %35, <8 x float> %421) #10
  %485 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %461, <8 x float> %35, <8 x float> %425) #10
  %486 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %465, <8 x float> %35, <8 x float> %429) #10
  %487 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %469, <8 x float> %35, <8 x float> %433) #10
  %488 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %473, <8 x float> %35, <8 x float> %437) #10
  %489 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %477, <8 x float> %35, <8 x float> %441) #10
  %490 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %481, <8 x float> %35, <8 x float> %445) #10
  store <8 x float> %482, <8 x float>* %412, align 1, !tbaa !12
  store <8 x float> %483, <8 x float>* %416, align 1, !tbaa !12
  store <8 x float> %484, <8 x float>* %420, align 1, !tbaa !12
  store <8 x float> %485, <8 x float>* %424, align 1, !tbaa !12
  store <8 x float> %486, <8 x float>* %428, align 1, !tbaa !12
  store <8 x float> %487, <8 x float>* %432, align 1, !tbaa !12
  store <8 x float> %488, <8 x float>* %436, align 1, !tbaa !12
  store <8 x float> %489, <8 x float>* %440, align 1, !tbaa !12
  store <8 x float> %490, <8 x float>* %444, align 1, !tbaa !12
  %491 = add nuw nsw i64 %373, 72
  %492 = icmp ult i64 %491, %244
  br i1 %492, label %372, label %366

493:                                              ; preds = %500, %102, %239, %366
  %494 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %495 = icmp sgt i32 %494, 0
  br i1 %495, label %496, label %1923

496:                                              ; preds = %493
  %497 = zext i32 %494 to i64
  %498 = trunc i64 %41 to i32
  %499 = mul nsw i32 %494, %498
  br label %627

500:                                              ; preds = %367, %500
  %501 = phi i64 [ 0, %367 ], [ %619, %500 ]
  %502 = getelementptr inbounds float, float* %5, i64 %501
  %503 = getelementptr inbounds float, float* %502, i64 8
  %504 = bitcast float* %503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %504, i32 0, i32 1, i32 1)
  %505 = getelementptr inbounds float, float* %3, i64 %501
  %506 = getelementptr inbounds float, float* %505, i64 8
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %502, i64 16
  %509 = bitcast float* %508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %509, i32 0, i32 1, i32 1)
  %510 = getelementptr inbounds float, float* %505, i64 16
  %511 = bitcast float* %510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %511, i32 0, i32 1, i32 1)
  %512 = getelementptr inbounds float, float* %502, i64 24
  %513 = bitcast float* %512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %513, i32 0, i32 1, i32 1)
  %514 = getelementptr inbounds float, float* %505, i64 24
  %515 = bitcast float* %514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %515, i32 0, i32 1, i32 1)
  %516 = getelementptr inbounds float, float* %502, i64 32
  %517 = bitcast float* %516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %517, i32 0, i32 1, i32 1)
  %518 = getelementptr inbounds float, float* %505, i64 32
  %519 = bitcast float* %518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %519, i32 0, i32 1, i32 1)
  %520 = getelementptr inbounds float, float* %502, i64 40
  %521 = bitcast float* %520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %521, i32 0, i32 1, i32 1)
  %522 = getelementptr inbounds float, float* %505, i64 40
  %523 = bitcast float* %522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %523, i32 0, i32 1, i32 1)
  %524 = getelementptr inbounds float, float* %502, i64 48
  %525 = bitcast float* %524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %525, i32 0, i32 1, i32 1)
  %526 = getelementptr inbounds float, float* %505, i64 48
  %527 = bitcast float* %526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %527, i32 0, i32 1, i32 1)
  %528 = getelementptr inbounds float, float* %502, i64 56
  %529 = bitcast float* %528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %529, i32 0, i32 1, i32 1)
  %530 = getelementptr inbounds float, float* %505, i64 56
  %531 = bitcast float* %530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %531, i32 0, i32 1, i32 1)
  %532 = getelementptr inbounds float, float* %502, i64 64
  %533 = bitcast float* %532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %533, i32 0, i32 1, i32 1)
  %534 = getelementptr inbounds float, float* %505, i64 64
  %535 = bitcast float* %534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %535, i32 0, i32 1, i32 1)
  %536 = getelementptr inbounds float, float* %502, i64 72
  %537 = bitcast float* %536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %537, i32 0, i32 1, i32 1)
  %538 = getelementptr inbounds float, float* %505, i64 72
  %539 = bitcast float* %538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %539, i32 0, i32 1, i32 1)
  %540 = bitcast float* %502 to <8 x float>*
  %541 = load <8 x float>, <8 x float>* %540, align 1, !tbaa !12
  %542 = add nuw nsw i64 %501, 8
  %543 = getelementptr inbounds float, float* %5, i64 %542
  %544 = bitcast float* %543 to <8 x float>*
  %545 = load <8 x float>, <8 x float>* %544, align 1, !tbaa !12
  %546 = add nuw nsw i64 %501, 16
  %547 = getelementptr inbounds float, float* %5, i64 %546
  %548 = bitcast float* %547 to <8 x float>*
  %549 = load <8 x float>, <8 x float>* %548, align 1, !tbaa !12
  %550 = add nuw nsw i64 %501, 24
  %551 = getelementptr inbounds float, float* %5, i64 %550
  %552 = bitcast float* %551 to <8 x float>*
  %553 = load <8 x float>, <8 x float>* %552, align 1, !tbaa !12
  %554 = add nuw nsw i64 %501, 32
  %555 = getelementptr inbounds float, float* %5, i64 %554
  %556 = bitcast float* %555 to <8 x float>*
  %557 = load <8 x float>, <8 x float>* %556, align 1, !tbaa !12
  %558 = add nuw nsw i64 %501, 40
  %559 = getelementptr inbounds float, float* %5, i64 %558
  %560 = bitcast float* %559 to <8 x float>*
  %561 = load <8 x float>, <8 x float>* %560, align 1, !tbaa !12
  %562 = add nuw nsw i64 %501, 48
  %563 = getelementptr inbounds float, float* %5, i64 %562
  %564 = bitcast float* %563 to <8 x float>*
  %565 = load <8 x float>, <8 x float>* %564, align 1, !tbaa !12
  %566 = add nuw nsw i64 %501, 56
  %567 = getelementptr inbounds float, float* %5, i64 %566
  %568 = bitcast float* %567 to <8 x float>*
  %569 = load <8 x float>, <8 x float>* %568, align 1, !tbaa !12
  %570 = add nuw nsw i64 %501, 64
  %571 = getelementptr inbounds float, float* %5, i64 %570
  %572 = bitcast float* %571 to <8 x float>*
  %573 = load <8 x float>, <8 x float>* %572, align 1, !tbaa !12
  %574 = add nsw i64 %501, %370
  %575 = getelementptr inbounds float, float* %3, i64 %574
  %576 = bitcast float* %575 to <8 x float>*
  %577 = load <8 x float>, <8 x float>* %576, align 1, !tbaa !12
  %578 = add nsw i64 %574, 8
  %579 = getelementptr inbounds float, float* %3, i64 %578
  %580 = bitcast float* %579 to <8 x float>*
  %581 = load <8 x float>, <8 x float>* %580, align 1, !tbaa !12
  %582 = add nsw i64 %574, 16
  %583 = getelementptr inbounds float, float* %3, i64 %582
  %584 = bitcast float* %583 to <8 x float>*
  %585 = load <8 x float>, <8 x float>* %584, align 1, !tbaa !12
  %586 = add nsw i64 %574, 24
  %587 = getelementptr inbounds float, float* %3, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %589 = load <8 x float>, <8 x float>* %588, align 1, !tbaa !12
  %590 = add nsw i64 %574, 32
  %591 = getelementptr inbounds float, float* %3, i64 %590
  %592 = bitcast float* %591 to <8 x float>*
  %593 = load <8 x float>, <8 x float>* %592, align 1, !tbaa !12
  %594 = add nsw i64 %574, 40
  %595 = getelementptr inbounds float, float* %3, i64 %594
  %596 = bitcast float* %595 to <8 x float>*
  %597 = load <8 x float>, <8 x float>* %596, align 1, !tbaa !12
  %598 = add nsw i64 %574, 48
  %599 = getelementptr inbounds float, float* %3, i64 %598
  %600 = bitcast float* %599 to <8 x float>*
  %601 = load <8 x float>, <8 x float>* %600, align 1, !tbaa !12
  %602 = add nsw i64 %574, 56
  %603 = getelementptr inbounds float, float* %3, i64 %602
  %604 = bitcast float* %603 to <8 x float>*
  %605 = load <8 x float>, <8 x float>* %604, align 1, !tbaa !12
  %606 = add nsw i64 %574, 64
  %607 = getelementptr inbounds float, float* %3, i64 %606
  %608 = bitcast float* %607 to <8 x float>*
  %609 = load <8 x float>, <8 x float>* %608, align 1, !tbaa !12
  %610 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %577, <8 x float> %40, <8 x float> %541) #10
  %611 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %581, <8 x float> %40, <8 x float> %545) #10
  %612 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %585, <8 x float> %40, <8 x float> %549) #10
  %613 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %589, <8 x float> %40, <8 x float> %553) #10
  %614 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %593, <8 x float> %40, <8 x float> %557) #10
  %615 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %597, <8 x float> %40, <8 x float> %561) #10
  %616 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %601, <8 x float> %40, <8 x float> %565) #10
  %617 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %605, <8 x float> %40, <8 x float> %569) #10
  %618 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %609, <8 x float> %40, <8 x float> %573) #10
  store <8 x float> %610, <8 x float>* %540, align 1, !tbaa !12
  store <8 x float> %611, <8 x float>* %544, align 1, !tbaa !12
  store <8 x float> %612, <8 x float>* %548, align 1, !tbaa !12
  store <8 x float> %613, <8 x float>* %552, align 1, !tbaa !12
  store <8 x float> %614, <8 x float>* %556, align 1, !tbaa !12
  store <8 x float> %615, <8 x float>* %560, align 1, !tbaa !12
  store <8 x float> %616, <8 x float>* %564, align 1, !tbaa !12
  store <8 x float> %617, <8 x float>* %568, align 1, !tbaa !12
  store <8 x float> %618, <8 x float>* %572, align 1, !tbaa !12
  %619 = add nuw nsw i64 %501, 72
  %620 = icmp ult i64 %619, %371
  br i1 %620, label %500, label %493

621:                                              ; preds = %627
  br i1 %495, label %622, label %1012

622:                                              ; preds = %621
  %623 = trunc i64 %46 to i32
  %624 = mul nsw i32 %494, %623
  %625 = sext i32 %624 to i64
  %626 = zext i32 %494 to i64
  br label %764

627:                                              ; preds = %496, %627
  %628 = phi i64 [ 0, %496 ], [ %756, %627 ]
  %629 = getelementptr inbounds float, float* %5, i64 %628
  %630 = getelementptr inbounds float, float* %629, i64 8
  %631 = bitcast float* %630 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %631, i32 0, i32 1, i32 1)
  %632 = getelementptr inbounds float, float* %3, i64 %628
  %633 = getelementptr inbounds float, float* %632, i64 8
  %634 = bitcast float* %633 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %634, i32 0, i32 1, i32 1)
  %635 = getelementptr inbounds float, float* %629, i64 16
  %636 = bitcast float* %635 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %636, i32 0, i32 1, i32 1)
  %637 = getelementptr inbounds float, float* %632, i64 16
  %638 = bitcast float* %637 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %638, i32 0, i32 1, i32 1)
  %639 = getelementptr inbounds float, float* %629, i64 24
  %640 = bitcast float* %639 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %640, i32 0, i32 1, i32 1)
  %641 = getelementptr inbounds float, float* %632, i64 24
  %642 = bitcast float* %641 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %642, i32 0, i32 1, i32 1)
  %643 = getelementptr inbounds float, float* %629, i64 32
  %644 = bitcast float* %643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %644, i32 0, i32 1, i32 1)
  %645 = getelementptr inbounds float, float* %632, i64 32
  %646 = bitcast float* %645 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %646, i32 0, i32 1, i32 1)
  %647 = getelementptr inbounds float, float* %629, i64 40
  %648 = bitcast float* %647 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %648, i32 0, i32 1, i32 1)
  %649 = getelementptr inbounds float, float* %632, i64 40
  %650 = bitcast float* %649 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %650, i32 0, i32 1, i32 1)
  %651 = getelementptr inbounds float, float* %629, i64 48
  %652 = bitcast float* %651 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %652, i32 0, i32 1, i32 1)
  %653 = getelementptr inbounds float, float* %632, i64 48
  %654 = bitcast float* %653 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %654, i32 0, i32 1, i32 1)
  %655 = getelementptr inbounds float, float* %629, i64 56
  %656 = bitcast float* %655 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %656, i32 0, i32 1, i32 1)
  %657 = getelementptr inbounds float, float* %632, i64 56
  %658 = bitcast float* %657 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %658, i32 0, i32 1, i32 1)
  %659 = getelementptr inbounds float, float* %629, i64 64
  %660 = bitcast float* %659 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %660, i32 0, i32 1, i32 1)
  %661 = getelementptr inbounds float, float* %632, i64 64
  %662 = bitcast float* %661 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %662, i32 0, i32 1, i32 1)
  %663 = getelementptr inbounds float, float* %629, i64 72
  %664 = bitcast float* %663 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %664, i32 0, i32 1, i32 1)
  %665 = getelementptr inbounds float, float* %632, i64 72
  %666 = bitcast float* %665 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %666, i32 0, i32 1, i32 1)
  %667 = bitcast float* %629 to <8 x float>*
  %668 = load <8 x float>, <8 x float>* %667, align 1, !tbaa !12
  %669 = add nuw nsw i64 %628, 8
  %670 = getelementptr inbounds float, float* %5, i64 %669
  %671 = bitcast float* %670 to <8 x float>*
  %672 = load <8 x float>, <8 x float>* %671, align 1, !tbaa !12
  %673 = add nuw nsw i64 %628, 16
  %674 = getelementptr inbounds float, float* %5, i64 %673
  %675 = bitcast float* %674 to <8 x float>*
  %676 = load <8 x float>, <8 x float>* %675, align 1, !tbaa !12
  %677 = add nuw nsw i64 %628, 24
  %678 = getelementptr inbounds float, float* %5, i64 %677
  %679 = bitcast float* %678 to <8 x float>*
  %680 = load <8 x float>, <8 x float>* %679, align 1, !tbaa !12
  %681 = add nuw nsw i64 %628, 32
  %682 = getelementptr inbounds float, float* %5, i64 %681
  %683 = bitcast float* %682 to <8 x float>*
  %684 = load <8 x float>, <8 x float>* %683, align 1, !tbaa !12
  %685 = add nuw nsw i64 %628, 40
  %686 = getelementptr inbounds float, float* %5, i64 %685
  %687 = bitcast float* %686 to <8 x float>*
  %688 = load <8 x float>, <8 x float>* %687, align 1, !tbaa !12
  %689 = add nuw nsw i64 %628, 48
  %690 = getelementptr inbounds float, float* %5, i64 %689
  %691 = bitcast float* %690 to <8 x float>*
  %692 = load <8 x float>, <8 x float>* %691, align 1, !tbaa !12
  %693 = add nuw nsw i64 %628, 56
  %694 = getelementptr inbounds float, float* %5, i64 %693
  %695 = bitcast float* %694 to <8 x float>*
  %696 = load <8 x float>, <8 x float>* %695, align 1, !tbaa !12
  %697 = add nuw nsw i64 %628, 64
  %698 = getelementptr inbounds float, float* %5, i64 %697
  %699 = bitcast float* %698 to <8 x float>*
  %700 = load <8 x float>, <8 x float>* %699, align 1, !tbaa !12
  %701 = trunc i64 %628 to i32
  %702 = add nsw i32 %499, %701
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds float, float* %3, i64 %703
  %705 = bitcast float* %704 to <8 x float>*
  %706 = load <8 x float>, <8 x float>* %705, align 1, !tbaa !12
  %707 = add nsw i32 %702, 8
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds float, float* %3, i64 %708
  %710 = bitcast float* %709 to <8 x float>*
  %711 = load <8 x float>, <8 x float>* %710, align 1, !tbaa !12
  %712 = add nsw i32 %702, 16
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds float, float* %3, i64 %713
  %715 = bitcast float* %714 to <8 x float>*
  %716 = load <8 x float>, <8 x float>* %715, align 1, !tbaa !12
  %717 = add nsw i32 %702, 24
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds float, float* %3, i64 %718
  %720 = bitcast float* %719 to <8 x float>*
  %721 = load <8 x float>, <8 x float>* %720, align 1, !tbaa !12
  %722 = add nsw i32 %702, 32
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds float, float* %3, i64 %723
  %725 = bitcast float* %724 to <8 x float>*
  %726 = load <8 x float>, <8 x float>* %725, align 1, !tbaa !12
  %727 = add nsw i32 %702, 40
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds float, float* %3, i64 %728
  %730 = bitcast float* %729 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = add nsw i32 %702, 48
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds float, float* %3, i64 %733
  %735 = bitcast float* %734 to <8 x float>*
  %736 = load <8 x float>, <8 x float>* %735, align 1, !tbaa !12
  %737 = add nsw i32 %702, 56
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds float, float* %3, i64 %738
  %740 = bitcast float* %739 to <8 x float>*
  %741 = load <8 x float>, <8 x float>* %740, align 1, !tbaa !12
  %742 = add nsw i32 %702, 64
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds float, float* %3, i64 %743
  %745 = bitcast float* %744 to <8 x float>*
  %746 = load <8 x float>, <8 x float>* %745, align 1, !tbaa !12
  %747 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %706, <8 x float> %45, <8 x float> %668) #10
  %748 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %711, <8 x float> %45, <8 x float> %672) #10
  %749 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %716, <8 x float> %45, <8 x float> %676) #10
  %750 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %721, <8 x float> %45, <8 x float> %680) #10
  %751 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %726, <8 x float> %45, <8 x float> %684) #10
  %752 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %731, <8 x float> %45, <8 x float> %688) #10
  %753 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %736, <8 x float> %45, <8 x float> %692) #10
  %754 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %741, <8 x float> %45, <8 x float> %696) #10
  %755 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %746, <8 x float> %45, <8 x float> %700) #10
  store <8 x float> %747, <8 x float>* %667, align 1, !tbaa !12
  store <8 x float> %748, <8 x float>* %671, align 1, !tbaa !12
  store <8 x float> %749, <8 x float>* %675, align 1, !tbaa !12
  store <8 x float> %750, <8 x float>* %679, align 1, !tbaa !12
  store <8 x float> %751, <8 x float>* %683, align 1, !tbaa !12
  store <8 x float> %752, <8 x float>* %687, align 1, !tbaa !12
  store <8 x float> %753, <8 x float>* %691, align 1, !tbaa !12
  store <8 x float> %754, <8 x float>* %695, align 1, !tbaa !12
  store <8 x float> %755, <8 x float>* %699, align 1, !tbaa !12
  %756 = add nuw nsw i64 %628, 72
  %757 = icmp ult i64 %756, %497
  br i1 %757, label %627, label %621

758:                                              ; preds = %764
  br i1 %495, label %759, label %1012

759:                                              ; preds = %758
  %760 = trunc i64 %51 to i32
  %761 = mul nsw i32 %494, %760
  %762 = sext i32 %761 to i64
  %763 = zext i32 %494 to i64
  br label %891

764:                                              ; preds = %622, %764
  %765 = phi i64 [ 0, %622 ], [ %883, %764 ]
  %766 = getelementptr inbounds float, float* %5, i64 %765
  %767 = getelementptr inbounds float, float* %766, i64 8
  %768 = bitcast float* %767 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %768, i32 0, i32 1, i32 1)
  %769 = getelementptr inbounds float, float* %3, i64 %765
  %770 = getelementptr inbounds float, float* %769, i64 8
  %771 = bitcast float* %770 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %771, i32 0, i32 1, i32 1)
  %772 = getelementptr inbounds float, float* %766, i64 16
  %773 = bitcast float* %772 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %773, i32 0, i32 1, i32 1)
  %774 = getelementptr inbounds float, float* %769, i64 16
  %775 = bitcast float* %774 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %775, i32 0, i32 1, i32 1)
  %776 = getelementptr inbounds float, float* %766, i64 24
  %777 = bitcast float* %776 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %777, i32 0, i32 1, i32 1)
  %778 = getelementptr inbounds float, float* %769, i64 24
  %779 = bitcast float* %778 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %779, i32 0, i32 1, i32 1)
  %780 = getelementptr inbounds float, float* %766, i64 32
  %781 = bitcast float* %780 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %781, i32 0, i32 1, i32 1)
  %782 = getelementptr inbounds float, float* %769, i64 32
  %783 = bitcast float* %782 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %783, i32 0, i32 1, i32 1)
  %784 = getelementptr inbounds float, float* %766, i64 40
  %785 = bitcast float* %784 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %785, i32 0, i32 1, i32 1)
  %786 = getelementptr inbounds float, float* %769, i64 40
  %787 = bitcast float* %786 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %787, i32 0, i32 1, i32 1)
  %788 = getelementptr inbounds float, float* %766, i64 48
  %789 = bitcast float* %788 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %789, i32 0, i32 1, i32 1)
  %790 = getelementptr inbounds float, float* %769, i64 48
  %791 = bitcast float* %790 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %791, i32 0, i32 1, i32 1)
  %792 = getelementptr inbounds float, float* %766, i64 56
  %793 = bitcast float* %792 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %793, i32 0, i32 1, i32 1)
  %794 = getelementptr inbounds float, float* %769, i64 56
  %795 = bitcast float* %794 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %795, i32 0, i32 1, i32 1)
  %796 = getelementptr inbounds float, float* %766, i64 64
  %797 = bitcast float* %796 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %797, i32 0, i32 1, i32 1)
  %798 = getelementptr inbounds float, float* %769, i64 64
  %799 = bitcast float* %798 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %799, i32 0, i32 1, i32 1)
  %800 = getelementptr inbounds float, float* %766, i64 72
  %801 = bitcast float* %800 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %801, i32 0, i32 1, i32 1)
  %802 = getelementptr inbounds float, float* %769, i64 72
  %803 = bitcast float* %802 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %803, i32 0, i32 1, i32 1)
  %804 = bitcast float* %766 to <8 x float>*
  %805 = load <8 x float>, <8 x float>* %804, align 1, !tbaa !12
  %806 = add nuw nsw i64 %765, 8
  %807 = getelementptr inbounds float, float* %5, i64 %806
  %808 = bitcast float* %807 to <8 x float>*
  %809 = load <8 x float>, <8 x float>* %808, align 1, !tbaa !12
  %810 = add nuw nsw i64 %765, 16
  %811 = getelementptr inbounds float, float* %5, i64 %810
  %812 = bitcast float* %811 to <8 x float>*
  %813 = load <8 x float>, <8 x float>* %812, align 1, !tbaa !12
  %814 = add nuw nsw i64 %765, 24
  %815 = getelementptr inbounds float, float* %5, i64 %814
  %816 = bitcast float* %815 to <8 x float>*
  %817 = load <8 x float>, <8 x float>* %816, align 1, !tbaa !12
  %818 = add nuw nsw i64 %765, 32
  %819 = getelementptr inbounds float, float* %5, i64 %818
  %820 = bitcast float* %819 to <8 x float>*
  %821 = load <8 x float>, <8 x float>* %820, align 1, !tbaa !12
  %822 = add nuw nsw i64 %765, 40
  %823 = getelementptr inbounds float, float* %5, i64 %822
  %824 = bitcast float* %823 to <8 x float>*
  %825 = load <8 x float>, <8 x float>* %824, align 1, !tbaa !12
  %826 = add nuw nsw i64 %765, 48
  %827 = getelementptr inbounds float, float* %5, i64 %826
  %828 = bitcast float* %827 to <8 x float>*
  %829 = load <8 x float>, <8 x float>* %828, align 1, !tbaa !12
  %830 = add nuw nsw i64 %765, 56
  %831 = getelementptr inbounds float, float* %5, i64 %830
  %832 = bitcast float* %831 to <8 x float>*
  %833 = load <8 x float>, <8 x float>* %832, align 1, !tbaa !12
  %834 = add nuw nsw i64 %765, 64
  %835 = getelementptr inbounds float, float* %5, i64 %834
  %836 = bitcast float* %835 to <8 x float>*
  %837 = load <8 x float>, <8 x float>* %836, align 1, !tbaa !12
  %838 = add nsw i64 %765, %625
  %839 = getelementptr inbounds float, float* %3, i64 %838
  %840 = bitcast float* %839 to <8 x float>*
  %841 = load <8 x float>, <8 x float>* %840, align 1, !tbaa !12
  %842 = add nsw i64 %838, 8
  %843 = getelementptr inbounds float, float* %3, i64 %842
  %844 = bitcast float* %843 to <8 x float>*
  %845 = load <8 x float>, <8 x float>* %844, align 1, !tbaa !12
  %846 = add nsw i64 %838, 16
  %847 = getelementptr inbounds float, float* %3, i64 %846
  %848 = bitcast float* %847 to <8 x float>*
  %849 = load <8 x float>, <8 x float>* %848, align 1, !tbaa !12
  %850 = add nsw i64 %838, 24
  %851 = getelementptr inbounds float, float* %3, i64 %850
  %852 = bitcast float* %851 to <8 x float>*
  %853 = load <8 x float>, <8 x float>* %852, align 1, !tbaa !12
  %854 = add nsw i64 %838, 32
  %855 = getelementptr inbounds float, float* %3, i64 %854
  %856 = bitcast float* %855 to <8 x float>*
  %857 = load <8 x float>, <8 x float>* %856, align 1, !tbaa !12
  %858 = add nsw i64 %838, 40
  %859 = getelementptr inbounds float, float* %3, i64 %858
  %860 = bitcast float* %859 to <8 x float>*
  %861 = load <8 x float>, <8 x float>* %860, align 1, !tbaa !12
  %862 = add nsw i64 %838, 48
  %863 = getelementptr inbounds float, float* %3, i64 %862
  %864 = bitcast float* %863 to <8 x float>*
  %865 = load <8 x float>, <8 x float>* %864, align 1, !tbaa !12
  %866 = add nsw i64 %838, 56
  %867 = getelementptr inbounds float, float* %3, i64 %866
  %868 = bitcast float* %867 to <8 x float>*
  %869 = load <8 x float>, <8 x float>* %868, align 1, !tbaa !12
  %870 = add nsw i64 %838, 64
  %871 = getelementptr inbounds float, float* %3, i64 %870
  %872 = bitcast float* %871 to <8 x float>*
  %873 = load <8 x float>, <8 x float>* %872, align 1, !tbaa !12
  %874 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %841, <8 x float> %50, <8 x float> %805) #10
  %875 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %845, <8 x float> %50, <8 x float> %809) #10
  %876 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %849, <8 x float> %50, <8 x float> %813) #10
  %877 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %853, <8 x float> %50, <8 x float> %817) #10
  %878 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %857, <8 x float> %50, <8 x float> %821) #10
  %879 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %861, <8 x float> %50, <8 x float> %825) #10
  %880 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %865, <8 x float> %50, <8 x float> %829) #10
  %881 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %869, <8 x float> %50, <8 x float> %833) #10
  %882 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %873, <8 x float> %50, <8 x float> %837) #10
  store <8 x float> %874, <8 x float>* %804, align 1, !tbaa !12
  store <8 x float> %875, <8 x float>* %808, align 1, !tbaa !12
  store <8 x float> %876, <8 x float>* %812, align 1, !tbaa !12
  store <8 x float> %877, <8 x float>* %816, align 1, !tbaa !12
  store <8 x float> %878, <8 x float>* %820, align 1, !tbaa !12
  store <8 x float> %879, <8 x float>* %824, align 1, !tbaa !12
  store <8 x float> %880, <8 x float>* %828, align 1, !tbaa !12
  store <8 x float> %881, <8 x float>* %832, align 1, !tbaa !12
  store <8 x float> %882, <8 x float>* %836, align 1, !tbaa !12
  %883 = add nuw nsw i64 %765, 72
  %884 = icmp ult i64 %883, %626
  br i1 %884, label %764, label %758

885:                                              ; preds = %891
  br i1 %495, label %886, label %1012

886:                                              ; preds = %885
  %887 = trunc i64 %56 to i32
  %888 = mul nsw i32 %494, %887
  %889 = sext i32 %888 to i64
  %890 = zext i32 %494 to i64
  br label %1019

891:                                              ; preds = %759, %891
  %892 = phi i64 [ 0, %759 ], [ %1010, %891 ]
  %893 = getelementptr inbounds float, float* %5, i64 %892
  %894 = getelementptr inbounds float, float* %893, i64 8
  %895 = bitcast float* %894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %895, i32 0, i32 1, i32 1)
  %896 = getelementptr inbounds float, float* %3, i64 %892
  %897 = getelementptr inbounds float, float* %896, i64 8
  %898 = bitcast float* %897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %898, i32 0, i32 1, i32 1)
  %899 = getelementptr inbounds float, float* %893, i64 16
  %900 = bitcast float* %899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %900, i32 0, i32 1, i32 1)
  %901 = getelementptr inbounds float, float* %896, i64 16
  %902 = bitcast float* %901 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %902, i32 0, i32 1, i32 1)
  %903 = getelementptr inbounds float, float* %893, i64 24
  %904 = bitcast float* %903 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %904, i32 0, i32 1, i32 1)
  %905 = getelementptr inbounds float, float* %896, i64 24
  %906 = bitcast float* %905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %906, i32 0, i32 1, i32 1)
  %907 = getelementptr inbounds float, float* %893, i64 32
  %908 = bitcast float* %907 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %908, i32 0, i32 1, i32 1)
  %909 = getelementptr inbounds float, float* %896, i64 32
  %910 = bitcast float* %909 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %910, i32 0, i32 1, i32 1)
  %911 = getelementptr inbounds float, float* %893, i64 40
  %912 = bitcast float* %911 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %912, i32 0, i32 1, i32 1)
  %913 = getelementptr inbounds float, float* %896, i64 40
  %914 = bitcast float* %913 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %914, i32 0, i32 1, i32 1)
  %915 = getelementptr inbounds float, float* %893, i64 48
  %916 = bitcast float* %915 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %916, i32 0, i32 1, i32 1)
  %917 = getelementptr inbounds float, float* %896, i64 48
  %918 = bitcast float* %917 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %918, i32 0, i32 1, i32 1)
  %919 = getelementptr inbounds float, float* %893, i64 56
  %920 = bitcast float* %919 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %920, i32 0, i32 1, i32 1)
  %921 = getelementptr inbounds float, float* %896, i64 56
  %922 = bitcast float* %921 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %922, i32 0, i32 1, i32 1)
  %923 = getelementptr inbounds float, float* %893, i64 64
  %924 = bitcast float* %923 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %924, i32 0, i32 1, i32 1)
  %925 = getelementptr inbounds float, float* %896, i64 64
  %926 = bitcast float* %925 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %926, i32 0, i32 1, i32 1)
  %927 = getelementptr inbounds float, float* %893, i64 72
  %928 = bitcast float* %927 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %928, i32 0, i32 1, i32 1)
  %929 = getelementptr inbounds float, float* %896, i64 72
  %930 = bitcast float* %929 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %930, i32 0, i32 1, i32 1)
  %931 = bitcast float* %893 to <8 x float>*
  %932 = load <8 x float>, <8 x float>* %931, align 1, !tbaa !12
  %933 = add nuw nsw i64 %892, 8
  %934 = getelementptr inbounds float, float* %5, i64 %933
  %935 = bitcast float* %934 to <8 x float>*
  %936 = load <8 x float>, <8 x float>* %935, align 1, !tbaa !12
  %937 = add nuw nsw i64 %892, 16
  %938 = getelementptr inbounds float, float* %5, i64 %937
  %939 = bitcast float* %938 to <8 x float>*
  %940 = load <8 x float>, <8 x float>* %939, align 1, !tbaa !12
  %941 = add nuw nsw i64 %892, 24
  %942 = getelementptr inbounds float, float* %5, i64 %941
  %943 = bitcast float* %942 to <8 x float>*
  %944 = load <8 x float>, <8 x float>* %943, align 1, !tbaa !12
  %945 = add nuw nsw i64 %892, 32
  %946 = getelementptr inbounds float, float* %5, i64 %945
  %947 = bitcast float* %946 to <8 x float>*
  %948 = load <8 x float>, <8 x float>* %947, align 1, !tbaa !12
  %949 = add nuw nsw i64 %892, 40
  %950 = getelementptr inbounds float, float* %5, i64 %949
  %951 = bitcast float* %950 to <8 x float>*
  %952 = load <8 x float>, <8 x float>* %951, align 1, !tbaa !12
  %953 = add nuw nsw i64 %892, 48
  %954 = getelementptr inbounds float, float* %5, i64 %953
  %955 = bitcast float* %954 to <8 x float>*
  %956 = load <8 x float>, <8 x float>* %955, align 1, !tbaa !12
  %957 = add nuw nsw i64 %892, 56
  %958 = getelementptr inbounds float, float* %5, i64 %957
  %959 = bitcast float* %958 to <8 x float>*
  %960 = load <8 x float>, <8 x float>* %959, align 1, !tbaa !12
  %961 = add nuw nsw i64 %892, 64
  %962 = getelementptr inbounds float, float* %5, i64 %961
  %963 = bitcast float* %962 to <8 x float>*
  %964 = load <8 x float>, <8 x float>* %963, align 1, !tbaa !12
  %965 = add nsw i64 %892, %762
  %966 = getelementptr inbounds float, float* %3, i64 %965
  %967 = bitcast float* %966 to <8 x float>*
  %968 = load <8 x float>, <8 x float>* %967, align 1, !tbaa !12
  %969 = add nsw i64 %965, 8
  %970 = getelementptr inbounds float, float* %3, i64 %969
  %971 = bitcast float* %970 to <8 x float>*
  %972 = load <8 x float>, <8 x float>* %971, align 1, !tbaa !12
  %973 = add nsw i64 %965, 16
  %974 = getelementptr inbounds float, float* %3, i64 %973
  %975 = bitcast float* %974 to <8 x float>*
  %976 = load <8 x float>, <8 x float>* %975, align 1, !tbaa !12
  %977 = add nsw i64 %965, 24
  %978 = getelementptr inbounds float, float* %3, i64 %977
  %979 = bitcast float* %978 to <8 x float>*
  %980 = load <8 x float>, <8 x float>* %979, align 1, !tbaa !12
  %981 = add nsw i64 %965, 32
  %982 = getelementptr inbounds float, float* %3, i64 %981
  %983 = bitcast float* %982 to <8 x float>*
  %984 = load <8 x float>, <8 x float>* %983, align 1, !tbaa !12
  %985 = add nsw i64 %965, 40
  %986 = getelementptr inbounds float, float* %3, i64 %985
  %987 = bitcast float* %986 to <8 x float>*
  %988 = load <8 x float>, <8 x float>* %987, align 1, !tbaa !12
  %989 = add nsw i64 %965, 48
  %990 = getelementptr inbounds float, float* %3, i64 %989
  %991 = bitcast float* %990 to <8 x float>*
  %992 = load <8 x float>, <8 x float>* %991, align 1, !tbaa !12
  %993 = add nsw i64 %965, 56
  %994 = getelementptr inbounds float, float* %3, i64 %993
  %995 = bitcast float* %994 to <8 x float>*
  %996 = load <8 x float>, <8 x float>* %995, align 1, !tbaa !12
  %997 = add nsw i64 %965, 64
  %998 = getelementptr inbounds float, float* %3, i64 %997
  %999 = bitcast float* %998 to <8 x float>*
  %1000 = load <8 x float>, <8 x float>* %999, align 1, !tbaa !12
  %1001 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %968, <8 x float> %55, <8 x float> %932) #10
  %1002 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %972, <8 x float> %55, <8 x float> %936) #10
  %1003 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %976, <8 x float> %55, <8 x float> %940) #10
  %1004 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %980, <8 x float> %55, <8 x float> %944) #10
  %1005 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %984, <8 x float> %55, <8 x float> %948) #10
  %1006 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %988, <8 x float> %55, <8 x float> %952) #10
  %1007 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %992, <8 x float> %55, <8 x float> %956) #10
  %1008 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %996, <8 x float> %55, <8 x float> %960) #10
  %1009 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1000, <8 x float> %55, <8 x float> %964) #10
  store <8 x float> %1001, <8 x float>* %931, align 1, !tbaa !12
  store <8 x float> %1002, <8 x float>* %935, align 1, !tbaa !12
  store <8 x float> %1003, <8 x float>* %939, align 1, !tbaa !12
  store <8 x float> %1004, <8 x float>* %943, align 1, !tbaa !12
  store <8 x float> %1005, <8 x float>* %947, align 1, !tbaa !12
  store <8 x float> %1006, <8 x float>* %951, align 1, !tbaa !12
  store <8 x float> %1007, <8 x float>* %955, align 1, !tbaa !12
  store <8 x float> %1008, <8 x float>* %959, align 1, !tbaa !12
  store <8 x float> %1009, <8 x float>* %963, align 1, !tbaa !12
  %1010 = add nuw nsw i64 %892, 72
  %1011 = icmp ult i64 %1010, %763
  br i1 %1011, label %891, label %885

1012:                                             ; preds = %1019, %621, %758, %885
  %1013 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1014 = icmp sgt i32 %1013, 0
  br i1 %1014, label %1015, label %1923

1015:                                             ; preds = %1012
  %1016 = zext i32 %1013 to i64
  %1017 = trunc i64 %61 to i32
  %1018 = mul nsw i32 %1013, %1017
  br label %1146

1019:                                             ; preds = %886, %1019
  %1020 = phi i64 [ 0, %886 ], [ %1138, %1019 ]
  %1021 = getelementptr inbounds float, float* %5, i64 %1020
  %1022 = getelementptr inbounds float, float* %1021, i64 8
  %1023 = bitcast float* %1022 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1023, i32 0, i32 1, i32 1)
  %1024 = getelementptr inbounds float, float* %3, i64 %1020
  %1025 = getelementptr inbounds float, float* %1024, i64 8
  %1026 = bitcast float* %1025 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1026, i32 0, i32 1, i32 1)
  %1027 = getelementptr inbounds float, float* %1021, i64 16
  %1028 = bitcast float* %1027 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1028, i32 0, i32 1, i32 1)
  %1029 = getelementptr inbounds float, float* %1024, i64 16
  %1030 = bitcast float* %1029 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1030, i32 0, i32 1, i32 1)
  %1031 = getelementptr inbounds float, float* %1021, i64 24
  %1032 = bitcast float* %1031 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1032, i32 0, i32 1, i32 1)
  %1033 = getelementptr inbounds float, float* %1024, i64 24
  %1034 = bitcast float* %1033 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1034, i32 0, i32 1, i32 1)
  %1035 = getelementptr inbounds float, float* %1021, i64 32
  %1036 = bitcast float* %1035 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1036, i32 0, i32 1, i32 1)
  %1037 = getelementptr inbounds float, float* %1024, i64 32
  %1038 = bitcast float* %1037 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1038, i32 0, i32 1, i32 1)
  %1039 = getelementptr inbounds float, float* %1021, i64 40
  %1040 = bitcast float* %1039 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1040, i32 0, i32 1, i32 1)
  %1041 = getelementptr inbounds float, float* %1024, i64 40
  %1042 = bitcast float* %1041 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1042, i32 0, i32 1, i32 1)
  %1043 = getelementptr inbounds float, float* %1021, i64 48
  %1044 = bitcast float* %1043 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1044, i32 0, i32 1, i32 1)
  %1045 = getelementptr inbounds float, float* %1024, i64 48
  %1046 = bitcast float* %1045 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1046, i32 0, i32 1, i32 1)
  %1047 = getelementptr inbounds float, float* %1021, i64 56
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = getelementptr inbounds float, float* %1024, i64 56
  %1050 = bitcast float* %1049 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1050, i32 0, i32 1, i32 1)
  %1051 = getelementptr inbounds float, float* %1021, i64 64
  %1052 = bitcast float* %1051 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1052, i32 0, i32 1, i32 1)
  %1053 = getelementptr inbounds float, float* %1024, i64 64
  %1054 = bitcast float* %1053 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1054, i32 0, i32 1, i32 1)
  %1055 = getelementptr inbounds float, float* %1021, i64 72
  %1056 = bitcast float* %1055 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1056, i32 0, i32 1, i32 1)
  %1057 = getelementptr inbounds float, float* %1024, i64 72
  %1058 = bitcast float* %1057 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1058, i32 0, i32 1, i32 1)
  %1059 = bitcast float* %1021 to <8 x float>*
  %1060 = load <8 x float>, <8 x float>* %1059, align 1, !tbaa !12
  %1061 = add nuw nsw i64 %1020, 8
  %1062 = getelementptr inbounds float, float* %5, i64 %1061
  %1063 = bitcast float* %1062 to <8 x float>*
  %1064 = load <8 x float>, <8 x float>* %1063, align 1, !tbaa !12
  %1065 = add nuw nsw i64 %1020, 16
  %1066 = getelementptr inbounds float, float* %5, i64 %1065
  %1067 = bitcast float* %1066 to <8 x float>*
  %1068 = load <8 x float>, <8 x float>* %1067, align 1, !tbaa !12
  %1069 = add nuw nsw i64 %1020, 24
  %1070 = getelementptr inbounds float, float* %5, i64 %1069
  %1071 = bitcast float* %1070 to <8 x float>*
  %1072 = load <8 x float>, <8 x float>* %1071, align 1, !tbaa !12
  %1073 = add nuw nsw i64 %1020, 32
  %1074 = getelementptr inbounds float, float* %5, i64 %1073
  %1075 = bitcast float* %1074 to <8 x float>*
  %1076 = load <8 x float>, <8 x float>* %1075, align 1, !tbaa !12
  %1077 = add nuw nsw i64 %1020, 40
  %1078 = getelementptr inbounds float, float* %5, i64 %1077
  %1079 = bitcast float* %1078 to <8 x float>*
  %1080 = load <8 x float>, <8 x float>* %1079, align 1, !tbaa !12
  %1081 = add nuw nsw i64 %1020, 48
  %1082 = getelementptr inbounds float, float* %5, i64 %1081
  %1083 = bitcast float* %1082 to <8 x float>*
  %1084 = load <8 x float>, <8 x float>* %1083, align 1, !tbaa !12
  %1085 = add nuw nsw i64 %1020, 56
  %1086 = getelementptr inbounds float, float* %5, i64 %1085
  %1087 = bitcast float* %1086 to <8 x float>*
  %1088 = load <8 x float>, <8 x float>* %1087, align 1, !tbaa !12
  %1089 = add nuw nsw i64 %1020, 64
  %1090 = getelementptr inbounds float, float* %5, i64 %1089
  %1091 = bitcast float* %1090 to <8 x float>*
  %1092 = load <8 x float>, <8 x float>* %1091, align 1, !tbaa !12
  %1093 = add nsw i64 %1020, %889
  %1094 = getelementptr inbounds float, float* %3, i64 %1093
  %1095 = bitcast float* %1094 to <8 x float>*
  %1096 = load <8 x float>, <8 x float>* %1095, align 1, !tbaa !12
  %1097 = add nsw i64 %1093, 8
  %1098 = getelementptr inbounds float, float* %3, i64 %1097
  %1099 = bitcast float* %1098 to <8 x float>*
  %1100 = load <8 x float>, <8 x float>* %1099, align 1, !tbaa !12
  %1101 = add nsw i64 %1093, 16
  %1102 = getelementptr inbounds float, float* %3, i64 %1101
  %1103 = bitcast float* %1102 to <8 x float>*
  %1104 = load <8 x float>, <8 x float>* %1103, align 1, !tbaa !12
  %1105 = add nsw i64 %1093, 24
  %1106 = getelementptr inbounds float, float* %3, i64 %1105
  %1107 = bitcast float* %1106 to <8 x float>*
  %1108 = load <8 x float>, <8 x float>* %1107, align 1, !tbaa !12
  %1109 = add nsw i64 %1093, 32
  %1110 = getelementptr inbounds float, float* %3, i64 %1109
  %1111 = bitcast float* %1110 to <8 x float>*
  %1112 = load <8 x float>, <8 x float>* %1111, align 1, !tbaa !12
  %1113 = add nsw i64 %1093, 40
  %1114 = getelementptr inbounds float, float* %3, i64 %1113
  %1115 = bitcast float* %1114 to <8 x float>*
  %1116 = load <8 x float>, <8 x float>* %1115, align 1, !tbaa !12
  %1117 = add nsw i64 %1093, 48
  %1118 = getelementptr inbounds float, float* %3, i64 %1117
  %1119 = bitcast float* %1118 to <8 x float>*
  %1120 = load <8 x float>, <8 x float>* %1119, align 1, !tbaa !12
  %1121 = add nsw i64 %1093, 56
  %1122 = getelementptr inbounds float, float* %3, i64 %1121
  %1123 = bitcast float* %1122 to <8 x float>*
  %1124 = load <8 x float>, <8 x float>* %1123, align 1, !tbaa !12
  %1125 = add nsw i64 %1093, 64
  %1126 = getelementptr inbounds float, float* %3, i64 %1125
  %1127 = bitcast float* %1126 to <8 x float>*
  %1128 = load <8 x float>, <8 x float>* %1127, align 1, !tbaa !12
  %1129 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1096, <8 x float> %60, <8 x float> %1060) #10
  %1130 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1100, <8 x float> %60, <8 x float> %1064) #10
  %1131 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1104, <8 x float> %60, <8 x float> %1068) #10
  %1132 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1108, <8 x float> %60, <8 x float> %1072) #10
  %1133 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1112, <8 x float> %60, <8 x float> %1076) #10
  %1134 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1116, <8 x float> %60, <8 x float> %1080) #10
  %1135 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1120, <8 x float> %60, <8 x float> %1084) #10
  %1136 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1124, <8 x float> %60, <8 x float> %1088) #10
  %1137 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1128, <8 x float> %60, <8 x float> %1092) #10
  store <8 x float> %1129, <8 x float>* %1059, align 1, !tbaa !12
  store <8 x float> %1130, <8 x float>* %1063, align 1, !tbaa !12
  store <8 x float> %1131, <8 x float>* %1067, align 1, !tbaa !12
  store <8 x float> %1132, <8 x float>* %1071, align 1, !tbaa !12
  store <8 x float> %1133, <8 x float>* %1075, align 1, !tbaa !12
  store <8 x float> %1134, <8 x float>* %1079, align 1, !tbaa !12
  store <8 x float> %1135, <8 x float>* %1083, align 1, !tbaa !12
  store <8 x float> %1136, <8 x float>* %1087, align 1, !tbaa !12
  store <8 x float> %1137, <8 x float>* %1091, align 1, !tbaa !12
  %1138 = add nuw nsw i64 %1020, 72
  %1139 = icmp ult i64 %1138, %890
  br i1 %1139, label %1019, label %1012

1140:                                             ; preds = %1146
  br i1 %1014, label %1141, label %1531

1141:                                             ; preds = %1140
  %1142 = trunc i64 %66 to i32
  %1143 = mul nsw i32 %1013, %1142
  %1144 = sext i32 %1143 to i64
  %1145 = zext i32 %1013 to i64
  br label %1283

1146:                                             ; preds = %1015, %1146
  %1147 = phi i64 [ 0, %1015 ], [ %1275, %1146 ]
  %1148 = getelementptr inbounds float, float* %5, i64 %1147
  %1149 = getelementptr inbounds float, float* %1148, i64 8
  %1150 = bitcast float* %1149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1150, i32 0, i32 1, i32 1)
  %1151 = getelementptr inbounds float, float* %3, i64 %1147
  %1152 = getelementptr inbounds float, float* %1151, i64 8
  %1153 = bitcast float* %1152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1153, i32 0, i32 1, i32 1)
  %1154 = getelementptr inbounds float, float* %1148, i64 16
  %1155 = bitcast float* %1154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1155, i32 0, i32 1, i32 1)
  %1156 = getelementptr inbounds float, float* %1151, i64 16
  %1157 = bitcast float* %1156 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1157, i32 0, i32 1, i32 1)
  %1158 = getelementptr inbounds float, float* %1148, i64 24
  %1159 = bitcast float* %1158 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1159, i32 0, i32 1, i32 1)
  %1160 = getelementptr inbounds float, float* %1151, i64 24
  %1161 = bitcast float* %1160 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1161, i32 0, i32 1, i32 1)
  %1162 = getelementptr inbounds float, float* %1148, i64 32
  %1163 = bitcast float* %1162 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1163, i32 0, i32 1, i32 1)
  %1164 = getelementptr inbounds float, float* %1151, i64 32
  %1165 = bitcast float* %1164 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1165, i32 0, i32 1, i32 1)
  %1166 = getelementptr inbounds float, float* %1148, i64 40
  %1167 = bitcast float* %1166 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1167, i32 0, i32 1, i32 1)
  %1168 = getelementptr inbounds float, float* %1151, i64 40
  %1169 = bitcast float* %1168 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1169, i32 0, i32 1, i32 1)
  %1170 = getelementptr inbounds float, float* %1148, i64 48
  %1171 = bitcast float* %1170 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1171, i32 0, i32 1, i32 1)
  %1172 = getelementptr inbounds float, float* %1151, i64 48
  %1173 = bitcast float* %1172 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1173, i32 0, i32 1, i32 1)
  %1174 = getelementptr inbounds float, float* %1148, i64 56
  %1175 = bitcast float* %1174 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1175, i32 0, i32 1, i32 1)
  %1176 = getelementptr inbounds float, float* %1151, i64 56
  %1177 = bitcast float* %1176 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1177, i32 0, i32 1, i32 1)
  %1178 = getelementptr inbounds float, float* %1148, i64 64
  %1179 = bitcast float* %1178 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1179, i32 0, i32 1, i32 1)
  %1180 = getelementptr inbounds float, float* %1151, i64 64
  %1181 = bitcast float* %1180 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1181, i32 0, i32 1, i32 1)
  %1182 = getelementptr inbounds float, float* %1148, i64 72
  %1183 = bitcast float* %1182 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1183, i32 0, i32 1, i32 1)
  %1184 = getelementptr inbounds float, float* %1151, i64 72
  %1185 = bitcast float* %1184 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1185, i32 0, i32 1, i32 1)
  %1186 = bitcast float* %1148 to <8 x float>*
  %1187 = load <8 x float>, <8 x float>* %1186, align 1, !tbaa !12
  %1188 = add nuw nsw i64 %1147, 8
  %1189 = getelementptr inbounds float, float* %5, i64 %1188
  %1190 = bitcast float* %1189 to <8 x float>*
  %1191 = load <8 x float>, <8 x float>* %1190, align 1, !tbaa !12
  %1192 = add nuw nsw i64 %1147, 16
  %1193 = getelementptr inbounds float, float* %5, i64 %1192
  %1194 = bitcast float* %1193 to <8 x float>*
  %1195 = load <8 x float>, <8 x float>* %1194, align 1, !tbaa !12
  %1196 = add nuw nsw i64 %1147, 24
  %1197 = getelementptr inbounds float, float* %5, i64 %1196
  %1198 = bitcast float* %1197 to <8 x float>*
  %1199 = load <8 x float>, <8 x float>* %1198, align 1, !tbaa !12
  %1200 = add nuw nsw i64 %1147, 32
  %1201 = getelementptr inbounds float, float* %5, i64 %1200
  %1202 = bitcast float* %1201 to <8 x float>*
  %1203 = load <8 x float>, <8 x float>* %1202, align 1, !tbaa !12
  %1204 = add nuw nsw i64 %1147, 40
  %1205 = getelementptr inbounds float, float* %5, i64 %1204
  %1206 = bitcast float* %1205 to <8 x float>*
  %1207 = load <8 x float>, <8 x float>* %1206, align 1, !tbaa !12
  %1208 = add nuw nsw i64 %1147, 48
  %1209 = getelementptr inbounds float, float* %5, i64 %1208
  %1210 = bitcast float* %1209 to <8 x float>*
  %1211 = load <8 x float>, <8 x float>* %1210, align 1, !tbaa !12
  %1212 = add nuw nsw i64 %1147, 56
  %1213 = getelementptr inbounds float, float* %5, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nuw nsw i64 %1147, 64
  %1217 = getelementptr inbounds float, float* %5, i64 %1216
  %1218 = bitcast float* %1217 to <8 x float>*
  %1219 = load <8 x float>, <8 x float>* %1218, align 1, !tbaa !12
  %1220 = trunc i64 %1147 to i32
  %1221 = add nsw i32 %1018, %1220
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i32 %1221, 8
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i32 %1221, 16
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i32 %1221, 24
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i32 %1221, 32
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nsw i32 %1221, 40
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds float, float* %3, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = add nsw i32 %1221, 48
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds float, float* %3, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = add nsw i32 %1221, 56
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds float, float* %3, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nsw i32 %1221, 64
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds float, float* %3, i64 %1262
  %1264 = bitcast float* %1263 to <8 x float>*
  %1265 = load <8 x float>, <8 x float>* %1264, align 1, !tbaa !12
  %1266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %65, <8 x float> %1187) #10
  %1267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %65, <8 x float> %1191) #10
  %1268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %65, <8 x float> %1195) #10
  %1269 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %65, <8 x float> %1199) #10
  %1270 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %65, <8 x float> %1203) #10
  %1271 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1250, <8 x float> %65, <8 x float> %1207) #10
  %1272 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1255, <8 x float> %65, <8 x float> %1211) #10
  %1273 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1260, <8 x float> %65, <8 x float> %1215) #10
  %1274 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1265, <8 x float> %65, <8 x float> %1219) #10
  store <8 x float> %1266, <8 x float>* %1186, align 1, !tbaa !12
  store <8 x float> %1267, <8 x float>* %1190, align 1, !tbaa !12
  store <8 x float> %1268, <8 x float>* %1194, align 1, !tbaa !12
  store <8 x float> %1269, <8 x float>* %1198, align 1, !tbaa !12
  store <8 x float> %1270, <8 x float>* %1202, align 1, !tbaa !12
  store <8 x float> %1271, <8 x float>* %1206, align 1, !tbaa !12
  store <8 x float> %1272, <8 x float>* %1210, align 1, !tbaa !12
  store <8 x float> %1273, <8 x float>* %1214, align 1, !tbaa !12
  store <8 x float> %1274, <8 x float>* %1218, align 1, !tbaa !12
  %1275 = add nuw nsw i64 %1147, 72
  %1276 = icmp ult i64 %1275, %1016
  br i1 %1276, label %1146, label %1140

1277:                                             ; preds = %1283
  br i1 %1014, label %1278, label %1531

1278:                                             ; preds = %1277
  %1279 = trunc i64 %71 to i32
  %1280 = mul nsw i32 %1013, %1279
  %1281 = sext i32 %1280 to i64
  %1282 = zext i32 %1013 to i64
  br label %1410

1283:                                             ; preds = %1141, %1283
  %1284 = phi i64 [ 0, %1141 ], [ %1402, %1283 ]
  %1285 = getelementptr inbounds float, float* %5, i64 %1284
  %1286 = getelementptr inbounds float, float* %1285, i64 8
  %1287 = bitcast float* %1286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1287, i32 0, i32 1, i32 1)
  %1288 = getelementptr inbounds float, float* %3, i64 %1284
  %1289 = getelementptr inbounds float, float* %1288, i64 8
  %1290 = bitcast float* %1289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1290, i32 0, i32 1, i32 1)
  %1291 = getelementptr inbounds float, float* %1285, i64 16
  %1292 = bitcast float* %1291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1292, i32 0, i32 1, i32 1)
  %1293 = getelementptr inbounds float, float* %1288, i64 16
  %1294 = bitcast float* %1293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1294, i32 0, i32 1, i32 1)
  %1295 = getelementptr inbounds float, float* %1285, i64 24
  %1296 = bitcast float* %1295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1296, i32 0, i32 1, i32 1)
  %1297 = getelementptr inbounds float, float* %1288, i64 24
  %1298 = bitcast float* %1297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1298, i32 0, i32 1, i32 1)
  %1299 = getelementptr inbounds float, float* %1285, i64 32
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %1288, i64 32
  %1302 = bitcast float* %1301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1302, i32 0, i32 1, i32 1)
  %1303 = getelementptr inbounds float, float* %1285, i64 40
  %1304 = bitcast float* %1303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1304, i32 0, i32 1, i32 1)
  %1305 = getelementptr inbounds float, float* %1288, i64 40
  %1306 = bitcast float* %1305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1306, i32 0, i32 1, i32 1)
  %1307 = getelementptr inbounds float, float* %1285, i64 48
  %1308 = bitcast float* %1307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1308, i32 0, i32 1, i32 1)
  %1309 = getelementptr inbounds float, float* %1288, i64 48
  %1310 = bitcast float* %1309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1310, i32 0, i32 1, i32 1)
  %1311 = getelementptr inbounds float, float* %1285, i64 56
  %1312 = bitcast float* %1311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1312, i32 0, i32 1, i32 1)
  %1313 = getelementptr inbounds float, float* %1288, i64 56
  %1314 = bitcast float* %1313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1314, i32 0, i32 1, i32 1)
  %1315 = getelementptr inbounds float, float* %1285, i64 64
  %1316 = bitcast float* %1315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1316, i32 0, i32 1, i32 1)
  %1317 = getelementptr inbounds float, float* %1288, i64 64
  %1318 = bitcast float* %1317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1318, i32 0, i32 1, i32 1)
  %1319 = getelementptr inbounds float, float* %1285, i64 72
  %1320 = bitcast float* %1319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1320, i32 0, i32 1, i32 1)
  %1321 = getelementptr inbounds float, float* %1288, i64 72
  %1322 = bitcast float* %1321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1322, i32 0, i32 1, i32 1)
  %1323 = bitcast float* %1285 to <8 x float>*
  %1324 = load <8 x float>, <8 x float>* %1323, align 1, !tbaa !12
  %1325 = add nuw nsw i64 %1284, 8
  %1326 = getelementptr inbounds float, float* %5, i64 %1325
  %1327 = bitcast float* %1326 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = add nuw nsw i64 %1284, 16
  %1330 = getelementptr inbounds float, float* %5, i64 %1329
  %1331 = bitcast float* %1330 to <8 x float>*
  %1332 = load <8 x float>, <8 x float>* %1331, align 1, !tbaa !12
  %1333 = add nuw nsw i64 %1284, 24
  %1334 = getelementptr inbounds float, float* %5, i64 %1333
  %1335 = bitcast float* %1334 to <8 x float>*
  %1336 = load <8 x float>, <8 x float>* %1335, align 1, !tbaa !12
  %1337 = add nuw nsw i64 %1284, 32
  %1338 = getelementptr inbounds float, float* %5, i64 %1337
  %1339 = bitcast float* %1338 to <8 x float>*
  %1340 = load <8 x float>, <8 x float>* %1339, align 1, !tbaa !12
  %1341 = add nuw nsw i64 %1284, 40
  %1342 = getelementptr inbounds float, float* %5, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nuw nsw i64 %1284, 48
  %1346 = getelementptr inbounds float, float* %5, i64 %1345
  %1347 = bitcast float* %1346 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = add nuw nsw i64 %1284, 56
  %1350 = getelementptr inbounds float, float* %5, i64 %1349
  %1351 = bitcast float* %1350 to <8 x float>*
  %1352 = load <8 x float>, <8 x float>* %1351, align 1, !tbaa !12
  %1353 = add nuw nsw i64 %1284, 64
  %1354 = getelementptr inbounds float, float* %5, i64 %1353
  %1355 = bitcast float* %1354 to <8 x float>*
  %1356 = load <8 x float>, <8 x float>* %1355, align 1, !tbaa !12
  %1357 = add nsw i64 %1284, %1144
  %1358 = getelementptr inbounds float, float* %3, i64 %1357
  %1359 = bitcast float* %1358 to <8 x float>*
  %1360 = load <8 x float>, <8 x float>* %1359, align 1, !tbaa !12
  %1361 = add nsw i64 %1357, 8
  %1362 = getelementptr inbounds float, float* %3, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nsw i64 %1357, 16
  %1366 = getelementptr inbounds float, float* %3, i64 %1365
  %1367 = bitcast float* %1366 to <8 x float>*
  %1368 = load <8 x float>, <8 x float>* %1367, align 1, !tbaa !12
  %1369 = add nsw i64 %1357, 24
  %1370 = getelementptr inbounds float, float* %3, i64 %1369
  %1371 = bitcast float* %1370 to <8 x float>*
  %1372 = load <8 x float>, <8 x float>* %1371, align 1, !tbaa !12
  %1373 = add nsw i64 %1357, 32
  %1374 = getelementptr inbounds float, float* %3, i64 %1373
  %1375 = bitcast float* %1374 to <8 x float>*
  %1376 = load <8 x float>, <8 x float>* %1375, align 1, !tbaa !12
  %1377 = add nsw i64 %1357, 40
  %1378 = getelementptr inbounds float, float* %3, i64 %1377
  %1379 = bitcast float* %1378 to <8 x float>*
  %1380 = load <8 x float>, <8 x float>* %1379, align 1, !tbaa !12
  %1381 = add nsw i64 %1357, 48
  %1382 = getelementptr inbounds float, float* %3, i64 %1381
  %1383 = bitcast float* %1382 to <8 x float>*
  %1384 = load <8 x float>, <8 x float>* %1383, align 1, !tbaa !12
  %1385 = add nsw i64 %1357, 56
  %1386 = getelementptr inbounds float, float* %3, i64 %1385
  %1387 = bitcast float* %1386 to <8 x float>*
  %1388 = load <8 x float>, <8 x float>* %1387, align 1, !tbaa !12
  %1389 = add nsw i64 %1357, 64
  %1390 = getelementptr inbounds float, float* %3, i64 %1389
  %1391 = bitcast float* %1390 to <8 x float>*
  %1392 = load <8 x float>, <8 x float>* %1391, align 1, !tbaa !12
  %1393 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1360, <8 x float> %70, <8 x float> %1324) #10
  %1394 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1364, <8 x float> %70, <8 x float> %1328) #10
  %1395 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1368, <8 x float> %70, <8 x float> %1332) #10
  %1396 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1372, <8 x float> %70, <8 x float> %1336) #10
  %1397 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1376, <8 x float> %70, <8 x float> %1340) #10
  %1398 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1380, <8 x float> %70, <8 x float> %1344) #10
  %1399 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1384, <8 x float> %70, <8 x float> %1348) #10
  %1400 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1388, <8 x float> %70, <8 x float> %1352) #10
  %1401 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1392, <8 x float> %70, <8 x float> %1356) #10
  store <8 x float> %1393, <8 x float>* %1323, align 1, !tbaa !12
  store <8 x float> %1394, <8 x float>* %1327, align 1, !tbaa !12
  store <8 x float> %1395, <8 x float>* %1331, align 1, !tbaa !12
  store <8 x float> %1396, <8 x float>* %1335, align 1, !tbaa !12
  store <8 x float> %1397, <8 x float>* %1339, align 1, !tbaa !12
  store <8 x float> %1398, <8 x float>* %1343, align 1, !tbaa !12
  store <8 x float> %1399, <8 x float>* %1347, align 1, !tbaa !12
  store <8 x float> %1400, <8 x float>* %1351, align 1, !tbaa !12
  store <8 x float> %1401, <8 x float>* %1355, align 1, !tbaa !12
  %1402 = add nuw nsw i64 %1284, 72
  %1403 = icmp ult i64 %1402, %1145
  br i1 %1403, label %1283, label %1277

1404:                                             ; preds = %1410
  br i1 %1014, label %1405, label %1531

1405:                                             ; preds = %1404
  %1406 = trunc i64 %76 to i32
  %1407 = mul nsw i32 %1013, %1406
  %1408 = sext i32 %1407 to i64
  %1409 = zext i32 %1013 to i64
  br label %1538

1410:                                             ; preds = %1278, %1410
  %1411 = phi i64 [ 0, %1278 ], [ %1529, %1410 ]
  %1412 = getelementptr inbounds float, float* %5, i64 %1411
  %1413 = getelementptr inbounds float, float* %1412, i64 8
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %3, i64 %1411
  %1416 = getelementptr inbounds float, float* %1415, i64 8
  %1417 = bitcast float* %1416 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1417, i32 0, i32 1, i32 1)
  %1418 = getelementptr inbounds float, float* %1412, i64 16
  %1419 = bitcast float* %1418 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1419, i32 0, i32 1, i32 1)
  %1420 = getelementptr inbounds float, float* %1415, i64 16
  %1421 = bitcast float* %1420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1421, i32 0, i32 1, i32 1)
  %1422 = getelementptr inbounds float, float* %1412, i64 24
  %1423 = bitcast float* %1422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1423, i32 0, i32 1, i32 1)
  %1424 = getelementptr inbounds float, float* %1415, i64 24
  %1425 = bitcast float* %1424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1425, i32 0, i32 1, i32 1)
  %1426 = getelementptr inbounds float, float* %1412, i64 32
  %1427 = bitcast float* %1426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1427, i32 0, i32 1, i32 1)
  %1428 = getelementptr inbounds float, float* %1415, i64 32
  %1429 = bitcast float* %1428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1429, i32 0, i32 1, i32 1)
  %1430 = getelementptr inbounds float, float* %1412, i64 40
  %1431 = bitcast float* %1430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1431, i32 0, i32 1, i32 1)
  %1432 = getelementptr inbounds float, float* %1415, i64 40
  %1433 = bitcast float* %1432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1433, i32 0, i32 1, i32 1)
  %1434 = getelementptr inbounds float, float* %1412, i64 48
  %1435 = bitcast float* %1434 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1435, i32 0, i32 1, i32 1)
  %1436 = getelementptr inbounds float, float* %1415, i64 48
  %1437 = bitcast float* %1436 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1437, i32 0, i32 1, i32 1)
  %1438 = getelementptr inbounds float, float* %1412, i64 56
  %1439 = bitcast float* %1438 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1439, i32 0, i32 1, i32 1)
  %1440 = getelementptr inbounds float, float* %1415, i64 56
  %1441 = bitcast float* %1440 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1441, i32 0, i32 1, i32 1)
  %1442 = getelementptr inbounds float, float* %1412, i64 64
  %1443 = bitcast float* %1442 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1443, i32 0, i32 1, i32 1)
  %1444 = getelementptr inbounds float, float* %1415, i64 64
  %1445 = bitcast float* %1444 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1445, i32 0, i32 1, i32 1)
  %1446 = getelementptr inbounds float, float* %1412, i64 72
  %1447 = bitcast float* %1446 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1447, i32 0, i32 1, i32 1)
  %1448 = getelementptr inbounds float, float* %1415, i64 72
  %1449 = bitcast float* %1448 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1449, i32 0, i32 1, i32 1)
  %1450 = bitcast float* %1412 to <8 x float>*
  %1451 = load <8 x float>, <8 x float>* %1450, align 1, !tbaa !12
  %1452 = add nuw nsw i64 %1411, 8
  %1453 = getelementptr inbounds float, float* %5, i64 %1452
  %1454 = bitcast float* %1453 to <8 x float>*
  %1455 = load <8 x float>, <8 x float>* %1454, align 1, !tbaa !12
  %1456 = add nuw nsw i64 %1411, 16
  %1457 = getelementptr inbounds float, float* %5, i64 %1456
  %1458 = bitcast float* %1457 to <8 x float>*
  %1459 = load <8 x float>, <8 x float>* %1458, align 1, !tbaa !12
  %1460 = add nuw nsw i64 %1411, 24
  %1461 = getelementptr inbounds float, float* %5, i64 %1460
  %1462 = bitcast float* %1461 to <8 x float>*
  %1463 = load <8 x float>, <8 x float>* %1462, align 1, !tbaa !12
  %1464 = add nuw nsw i64 %1411, 32
  %1465 = getelementptr inbounds float, float* %5, i64 %1464
  %1466 = bitcast float* %1465 to <8 x float>*
  %1467 = load <8 x float>, <8 x float>* %1466, align 1, !tbaa !12
  %1468 = add nuw nsw i64 %1411, 40
  %1469 = getelementptr inbounds float, float* %5, i64 %1468
  %1470 = bitcast float* %1469 to <8 x float>*
  %1471 = load <8 x float>, <8 x float>* %1470, align 1, !tbaa !12
  %1472 = add nuw nsw i64 %1411, 48
  %1473 = getelementptr inbounds float, float* %5, i64 %1472
  %1474 = bitcast float* %1473 to <8 x float>*
  %1475 = load <8 x float>, <8 x float>* %1474, align 1, !tbaa !12
  %1476 = add nuw nsw i64 %1411, 56
  %1477 = getelementptr inbounds float, float* %5, i64 %1476
  %1478 = bitcast float* %1477 to <8 x float>*
  %1479 = load <8 x float>, <8 x float>* %1478, align 1, !tbaa !12
  %1480 = add nuw nsw i64 %1411, 64
  %1481 = getelementptr inbounds float, float* %5, i64 %1480
  %1482 = bitcast float* %1481 to <8 x float>*
  %1483 = load <8 x float>, <8 x float>* %1482, align 1, !tbaa !12
  %1484 = add nsw i64 %1411, %1281
  %1485 = getelementptr inbounds float, float* %3, i64 %1484
  %1486 = bitcast float* %1485 to <8 x float>*
  %1487 = load <8 x float>, <8 x float>* %1486, align 1, !tbaa !12
  %1488 = add nsw i64 %1484, 8
  %1489 = getelementptr inbounds float, float* %3, i64 %1488
  %1490 = bitcast float* %1489 to <8 x float>*
  %1491 = load <8 x float>, <8 x float>* %1490, align 1, !tbaa !12
  %1492 = add nsw i64 %1484, 16
  %1493 = getelementptr inbounds float, float* %3, i64 %1492
  %1494 = bitcast float* %1493 to <8 x float>*
  %1495 = load <8 x float>, <8 x float>* %1494, align 1, !tbaa !12
  %1496 = add nsw i64 %1484, 24
  %1497 = getelementptr inbounds float, float* %3, i64 %1496
  %1498 = bitcast float* %1497 to <8 x float>*
  %1499 = load <8 x float>, <8 x float>* %1498, align 1, !tbaa !12
  %1500 = add nsw i64 %1484, 32
  %1501 = getelementptr inbounds float, float* %3, i64 %1500
  %1502 = bitcast float* %1501 to <8 x float>*
  %1503 = load <8 x float>, <8 x float>* %1502, align 1, !tbaa !12
  %1504 = add nsw i64 %1484, 40
  %1505 = getelementptr inbounds float, float* %3, i64 %1504
  %1506 = bitcast float* %1505 to <8 x float>*
  %1507 = load <8 x float>, <8 x float>* %1506, align 1, !tbaa !12
  %1508 = add nsw i64 %1484, 48
  %1509 = getelementptr inbounds float, float* %3, i64 %1508
  %1510 = bitcast float* %1509 to <8 x float>*
  %1511 = load <8 x float>, <8 x float>* %1510, align 1, !tbaa !12
  %1512 = add nsw i64 %1484, 56
  %1513 = getelementptr inbounds float, float* %3, i64 %1512
  %1514 = bitcast float* %1513 to <8 x float>*
  %1515 = load <8 x float>, <8 x float>* %1514, align 1, !tbaa !12
  %1516 = add nsw i64 %1484, 64
  %1517 = getelementptr inbounds float, float* %3, i64 %1516
  %1518 = bitcast float* %1517 to <8 x float>*
  %1519 = load <8 x float>, <8 x float>* %1518, align 1, !tbaa !12
  %1520 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1487, <8 x float> %75, <8 x float> %1451) #10
  %1521 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1491, <8 x float> %75, <8 x float> %1455) #10
  %1522 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1495, <8 x float> %75, <8 x float> %1459) #10
  %1523 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1499, <8 x float> %75, <8 x float> %1463) #10
  %1524 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1503, <8 x float> %75, <8 x float> %1467) #10
  %1525 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1507, <8 x float> %75, <8 x float> %1471) #10
  %1526 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1511, <8 x float> %75, <8 x float> %1475) #10
  %1527 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1515, <8 x float> %75, <8 x float> %1479) #10
  %1528 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1519, <8 x float> %75, <8 x float> %1483) #10
  store <8 x float> %1520, <8 x float>* %1450, align 1, !tbaa !12
  store <8 x float> %1521, <8 x float>* %1454, align 1, !tbaa !12
  store <8 x float> %1522, <8 x float>* %1458, align 1, !tbaa !12
  store <8 x float> %1523, <8 x float>* %1462, align 1, !tbaa !12
  store <8 x float> %1524, <8 x float>* %1466, align 1, !tbaa !12
  store <8 x float> %1525, <8 x float>* %1470, align 1, !tbaa !12
  store <8 x float> %1526, <8 x float>* %1474, align 1, !tbaa !12
  store <8 x float> %1527, <8 x float>* %1478, align 1, !tbaa !12
  store <8 x float> %1528, <8 x float>* %1482, align 1, !tbaa !12
  %1529 = add nuw nsw i64 %1411, 72
  %1530 = icmp ult i64 %1529, %1282
  br i1 %1530, label %1410, label %1404

1531:                                             ; preds = %1538, %1140, %1277, %1404
  %1532 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1533 = icmp sgt i32 %1532, 0
  br i1 %1533, label %1534, label %1923

1534:                                             ; preds = %1531
  %1535 = zext i32 %1532 to i64
  %1536 = trunc i64 %81 to i32
  %1537 = mul nsw i32 %1532, %1536
  br label %1665

1538:                                             ; preds = %1405, %1538
  %1539 = phi i64 [ 0, %1405 ], [ %1657, %1538 ]
  %1540 = getelementptr inbounds float, float* %5, i64 %1539
  %1541 = getelementptr inbounds float, float* %1540, i64 8
  %1542 = bitcast float* %1541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1542, i32 0, i32 1, i32 1)
  %1543 = getelementptr inbounds float, float* %3, i64 %1539
  %1544 = getelementptr inbounds float, float* %1543, i64 8
  %1545 = bitcast float* %1544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1545, i32 0, i32 1, i32 1)
  %1546 = getelementptr inbounds float, float* %1540, i64 16
  %1547 = bitcast float* %1546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1547, i32 0, i32 1, i32 1)
  %1548 = getelementptr inbounds float, float* %1543, i64 16
  %1549 = bitcast float* %1548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1549, i32 0, i32 1, i32 1)
  %1550 = getelementptr inbounds float, float* %1540, i64 24
  %1551 = bitcast float* %1550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1551, i32 0, i32 1, i32 1)
  %1552 = getelementptr inbounds float, float* %1543, i64 24
  %1553 = bitcast float* %1552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1553, i32 0, i32 1, i32 1)
  %1554 = getelementptr inbounds float, float* %1540, i64 32
  %1555 = bitcast float* %1554 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1555, i32 0, i32 1, i32 1)
  %1556 = getelementptr inbounds float, float* %1543, i64 32
  %1557 = bitcast float* %1556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1557, i32 0, i32 1, i32 1)
  %1558 = getelementptr inbounds float, float* %1540, i64 40
  %1559 = bitcast float* %1558 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1559, i32 0, i32 1, i32 1)
  %1560 = getelementptr inbounds float, float* %1543, i64 40
  %1561 = bitcast float* %1560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1561, i32 0, i32 1, i32 1)
  %1562 = getelementptr inbounds float, float* %1540, i64 48
  %1563 = bitcast float* %1562 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1563, i32 0, i32 1, i32 1)
  %1564 = getelementptr inbounds float, float* %1543, i64 48
  %1565 = bitcast float* %1564 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1565, i32 0, i32 1, i32 1)
  %1566 = getelementptr inbounds float, float* %1540, i64 56
  %1567 = bitcast float* %1566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1567, i32 0, i32 1, i32 1)
  %1568 = getelementptr inbounds float, float* %1543, i64 56
  %1569 = bitcast float* %1568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1569, i32 0, i32 1, i32 1)
  %1570 = getelementptr inbounds float, float* %1540, i64 64
  %1571 = bitcast float* %1570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1571, i32 0, i32 1, i32 1)
  %1572 = getelementptr inbounds float, float* %1543, i64 64
  %1573 = bitcast float* %1572 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1573, i32 0, i32 1, i32 1)
  %1574 = getelementptr inbounds float, float* %1540, i64 72
  %1575 = bitcast float* %1574 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1575, i32 0, i32 1, i32 1)
  %1576 = getelementptr inbounds float, float* %1543, i64 72
  %1577 = bitcast float* %1576 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1577, i32 0, i32 1, i32 1)
  %1578 = bitcast float* %1540 to <8 x float>*
  %1579 = load <8 x float>, <8 x float>* %1578, align 1, !tbaa !12
  %1580 = add nuw nsw i64 %1539, 8
  %1581 = getelementptr inbounds float, float* %5, i64 %1580
  %1582 = bitcast float* %1581 to <8 x float>*
  %1583 = load <8 x float>, <8 x float>* %1582, align 1, !tbaa !12
  %1584 = add nuw nsw i64 %1539, 16
  %1585 = getelementptr inbounds float, float* %5, i64 %1584
  %1586 = bitcast float* %1585 to <8 x float>*
  %1587 = load <8 x float>, <8 x float>* %1586, align 1, !tbaa !12
  %1588 = add nuw nsw i64 %1539, 24
  %1589 = getelementptr inbounds float, float* %5, i64 %1588
  %1590 = bitcast float* %1589 to <8 x float>*
  %1591 = load <8 x float>, <8 x float>* %1590, align 1, !tbaa !12
  %1592 = add nuw nsw i64 %1539, 32
  %1593 = getelementptr inbounds float, float* %5, i64 %1592
  %1594 = bitcast float* %1593 to <8 x float>*
  %1595 = load <8 x float>, <8 x float>* %1594, align 1, !tbaa !12
  %1596 = add nuw nsw i64 %1539, 40
  %1597 = getelementptr inbounds float, float* %5, i64 %1596
  %1598 = bitcast float* %1597 to <8 x float>*
  %1599 = load <8 x float>, <8 x float>* %1598, align 1, !tbaa !12
  %1600 = add nuw nsw i64 %1539, 48
  %1601 = getelementptr inbounds float, float* %5, i64 %1600
  %1602 = bitcast float* %1601 to <8 x float>*
  %1603 = load <8 x float>, <8 x float>* %1602, align 1, !tbaa !12
  %1604 = add nuw nsw i64 %1539, 56
  %1605 = getelementptr inbounds float, float* %5, i64 %1604
  %1606 = bitcast float* %1605 to <8 x float>*
  %1607 = load <8 x float>, <8 x float>* %1606, align 1, !tbaa !12
  %1608 = add nuw nsw i64 %1539, 64
  %1609 = getelementptr inbounds float, float* %5, i64 %1608
  %1610 = bitcast float* %1609 to <8 x float>*
  %1611 = load <8 x float>, <8 x float>* %1610, align 1, !tbaa !12
  %1612 = add nsw i64 %1539, %1408
  %1613 = getelementptr inbounds float, float* %3, i64 %1612
  %1614 = bitcast float* %1613 to <8 x float>*
  %1615 = load <8 x float>, <8 x float>* %1614, align 1, !tbaa !12
  %1616 = add nsw i64 %1612, 8
  %1617 = getelementptr inbounds float, float* %3, i64 %1616
  %1618 = bitcast float* %1617 to <8 x float>*
  %1619 = load <8 x float>, <8 x float>* %1618, align 1, !tbaa !12
  %1620 = add nsw i64 %1612, 16
  %1621 = getelementptr inbounds float, float* %3, i64 %1620
  %1622 = bitcast float* %1621 to <8 x float>*
  %1623 = load <8 x float>, <8 x float>* %1622, align 1, !tbaa !12
  %1624 = add nsw i64 %1612, 24
  %1625 = getelementptr inbounds float, float* %3, i64 %1624
  %1626 = bitcast float* %1625 to <8 x float>*
  %1627 = load <8 x float>, <8 x float>* %1626, align 1, !tbaa !12
  %1628 = add nsw i64 %1612, 32
  %1629 = getelementptr inbounds float, float* %3, i64 %1628
  %1630 = bitcast float* %1629 to <8 x float>*
  %1631 = load <8 x float>, <8 x float>* %1630, align 1, !tbaa !12
  %1632 = add nsw i64 %1612, 40
  %1633 = getelementptr inbounds float, float* %3, i64 %1632
  %1634 = bitcast float* %1633 to <8 x float>*
  %1635 = load <8 x float>, <8 x float>* %1634, align 1, !tbaa !12
  %1636 = add nsw i64 %1612, 48
  %1637 = getelementptr inbounds float, float* %3, i64 %1636
  %1638 = bitcast float* %1637 to <8 x float>*
  %1639 = load <8 x float>, <8 x float>* %1638, align 1, !tbaa !12
  %1640 = add nsw i64 %1612, 56
  %1641 = getelementptr inbounds float, float* %3, i64 %1640
  %1642 = bitcast float* %1641 to <8 x float>*
  %1643 = load <8 x float>, <8 x float>* %1642, align 1, !tbaa !12
  %1644 = add nsw i64 %1612, 64
  %1645 = getelementptr inbounds float, float* %3, i64 %1644
  %1646 = bitcast float* %1645 to <8 x float>*
  %1647 = load <8 x float>, <8 x float>* %1646, align 1, !tbaa !12
  %1648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1615, <8 x float> %80, <8 x float> %1579) #10
  %1649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1619, <8 x float> %80, <8 x float> %1583) #10
  %1650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1623, <8 x float> %80, <8 x float> %1587) #10
  %1651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1627, <8 x float> %80, <8 x float> %1591) #10
  %1652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1631, <8 x float> %80, <8 x float> %1595) #10
  %1653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1635, <8 x float> %80, <8 x float> %1599) #10
  %1654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1639, <8 x float> %80, <8 x float> %1603) #10
  %1655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1643, <8 x float> %80, <8 x float> %1607) #10
  %1656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1647, <8 x float> %80, <8 x float> %1611) #10
  store <8 x float> %1648, <8 x float>* %1578, align 1, !tbaa !12
  store <8 x float> %1649, <8 x float>* %1582, align 1, !tbaa !12
  store <8 x float> %1650, <8 x float>* %1586, align 1, !tbaa !12
  store <8 x float> %1651, <8 x float>* %1590, align 1, !tbaa !12
  store <8 x float> %1652, <8 x float>* %1594, align 1, !tbaa !12
  store <8 x float> %1653, <8 x float>* %1598, align 1, !tbaa !12
  store <8 x float> %1654, <8 x float>* %1602, align 1, !tbaa !12
  store <8 x float> %1655, <8 x float>* %1606, align 1, !tbaa !12
  store <8 x float> %1656, <8 x float>* %1610, align 1, !tbaa !12
  %1657 = add nuw nsw i64 %1539, 72
  %1658 = icmp ult i64 %1657, %1409
  br i1 %1658, label %1538, label %1531

1659:                                             ; preds = %1665
  br i1 %1533, label %1660, label %1923

1660:                                             ; preds = %1659
  %1661 = trunc i64 %86 to i32
  %1662 = mul nsw i32 %1532, %1661
  %1663 = sext i32 %1662 to i64
  %1664 = zext i32 %1532 to i64
  br label %1802

1665:                                             ; preds = %1534, %1665
  %1666 = phi i64 [ 0, %1534 ], [ %1794, %1665 ]
  %1667 = getelementptr inbounds float, float* %5, i64 %1666
  %1668 = getelementptr inbounds float, float* %1667, i64 8
  %1669 = bitcast float* %1668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1669, i32 0, i32 1, i32 1)
  %1670 = getelementptr inbounds float, float* %3, i64 %1666
  %1671 = getelementptr inbounds float, float* %1670, i64 8
  %1672 = bitcast float* %1671 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1672, i32 0, i32 1, i32 1)
  %1673 = getelementptr inbounds float, float* %1667, i64 16
  %1674 = bitcast float* %1673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1674, i32 0, i32 1, i32 1)
  %1675 = getelementptr inbounds float, float* %1670, i64 16
  %1676 = bitcast float* %1675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1676, i32 0, i32 1, i32 1)
  %1677 = getelementptr inbounds float, float* %1667, i64 24
  %1678 = bitcast float* %1677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1678, i32 0, i32 1, i32 1)
  %1679 = getelementptr inbounds float, float* %1670, i64 24
  %1680 = bitcast float* %1679 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1680, i32 0, i32 1, i32 1)
  %1681 = getelementptr inbounds float, float* %1667, i64 32
  %1682 = bitcast float* %1681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1682, i32 0, i32 1, i32 1)
  %1683 = getelementptr inbounds float, float* %1670, i64 32
  %1684 = bitcast float* %1683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1684, i32 0, i32 1, i32 1)
  %1685 = getelementptr inbounds float, float* %1667, i64 40
  %1686 = bitcast float* %1685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1686, i32 0, i32 1, i32 1)
  %1687 = getelementptr inbounds float, float* %1670, i64 40
  %1688 = bitcast float* %1687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1688, i32 0, i32 1, i32 1)
  %1689 = getelementptr inbounds float, float* %1667, i64 48
  %1690 = bitcast float* %1689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1690, i32 0, i32 1, i32 1)
  %1691 = getelementptr inbounds float, float* %1670, i64 48
  %1692 = bitcast float* %1691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1692, i32 0, i32 1, i32 1)
  %1693 = getelementptr inbounds float, float* %1667, i64 56
  %1694 = bitcast float* %1693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1694, i32 0, i32 1, i32 1)
  %1695 = getelementptr inbounds float, float* %1670, i64 56
  %1696 = bitcast float* %1695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1696, i32 0, i32 1, i32 1)
  %1697 = getelementptr inbounds float, float* %1667, i64 64
  %1698 = bitcast float* %1697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1698, i32 0, i32 1, i32 1)
  %1699 = getelementptr inbounds float, float* %1670, i64 64
  %1700 = bitcast float* %1699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1700, i32 0, i32 1, i32 1)
  %1701 = getelementptr inbounds float, float* %1667, i64 72
  %1702 = bitcast float* %1701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1702, i32 0, i32 1, i32 1)
  %1703 = getelementptr inbounds float, float* %1670, i64 72
  %1704 = bitcast float* %1703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1704, i32 0, i32 1, i32 1)
  %1705 = bitcast float* %1667 to <8 x float>*
  %1706 = load <8 x float>, <8 x float>* %1705, align 1, !tbaa !12
  %1707 = add nuw nsw i64 %1666, 8
  %1708 = getelementptr inbounds float, float* %5, i64 %1707
  %1709 = bitcast float* %1708 to <8 x float>*
  %1710 = load <8 x float>, <8 x float>* %1709, align 1, !tbaa !12
  %1711 = add nuw nsw i64 %1666, 16
  %1712 = getelementptr inbounds float, float* %5, i64 %1711
  %1713 = bitcast float* %1712 to <8 x float>*
  %1714 = load <8 x float>, <8 x float>* %1713, align 1, !tbaa !12
  %1715 = add nuw nsw i64 %1666, 24
  %1716 = getelementptr inbounds float, float* %5, i64 %1715
  %1717 = bitcast float* %1716 to <8 x float>*
  %1718 = load <8 x float>, <8 x float>* %1717, align 1, !tbaa !12
  %1719 = add nuw nsw i64 %1666, 32
  %1720 = getelementptr inbounds float, float* %5, i64 %1719
  %1721 = bitcast float* %1720 to <8 x float>*
  %1722 = load <8 x float>, <8 x float>* %1721, align 1, !tbaa !12
  %1723 = add nuw nsw i64 %1666, 40
  %1724 = getelementptr inbounds float, float* %5, i64 %1723
  %1725 = bitcast float* %1724 to <8 x float>*
  %1726 = load <8 x float>, <8 x float>* %1725, align 1, !tbaa !12
  %1727 = add nuw nsw i64 %1666, 48
  %1728 = getelementptr inbounds float, float* %5, i64 %1727
  %1729 = bitcast float* %1728 to <8 x float>*
  %1730 = load <8 x float>, <8 x float>* %1729, align 1, !tbaa !12
  %1731 = add nuw nsw i64 %1666, 56
  %1732 = getelementptr inbounds float, float* %5, i64 %1731
  %1733 = bitcast float* %1732 to <8 x float>*
  %1734 = load <8 x float>, <8 x float>* %1733, align 1, !tbaa !12
  %1735 = add nuw nsw i64 %1666, 64
  %1736 = getelementptr inbounds float, float* %5, i64 %1735
  %1737 = bitcast float* %1736 to <8 x float>*
  %1738 = load <8 x float>, <8 x float>* %1737, align 1, !tbaa !12
  %1739 = trunc i64 %1666 to i32
  %1740 = add nsw i32 %1537, %1739
  %1741 = sext i32 %1740 to i64
  %1742 = getelementptr inbounds float, float* %3, i64 %1741
  %1743 = bitcast float* %1742 to <8 x float>*
  %1744 = load <8 x float>, <8 x float>* %1743, align 1, !tbaa !12
  %1745 = add nsw i32 %1740, 8
  %1746 = sext i32 %1745 to i64
  %1747 = getelementptr inbounds float, float* %3, i64 %1746
  %1748 = bitcast float* %1747 to <8 x float>*
  %1749 = load <8 x float>, <8 x float>* %1748, align 1, !tbaa !12
  %1750 = add nsw i32 %1740, 16
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds float, float* %3, i64 %1751
  %1753 = bitcast float* %1752 to <8 x float>*
  %1754 = load <8 x float>, <8 x float>* %1753, align 1, !tbaa !12
  %1755 = add nsw i32 %1740, 24
  %1756 = sext i32 %1755 to i64
  %1757 = getelementptr inbounds float, float* %3, i64 %1756
  %1758 = bitcast float* %1757 to <8 x float>*
  %1759 = load <8 x float>, <8 x float>* %1758, align 1, !tbaa !12
  %1760 = add nsw i32 %1740, 32
  %1761 = sext i32 %1760 to i64
  %1762 = getelementptr inbounds float, float* %3, i64 %1761
  %1763 = bitcast float* %1762 to <8 x float>*
  %1764 = load <8 x float>, <8 x float>* %1763, align 1, !tbaa !12
  %1765 = add nsw i32 %1740, 40
  %1766 = sext i32 %1765 to i64
  %1767 = getelementptr inbounds float, float* %3, i64 %1766
  %1768 = bitcast float* %1767 to <8 x float>*
  %1769 = load <8 x float>, <8 x float>* %1768, align 1, !tbaa !12
  %1770 = add nsw i32 %1740, 48
  %1771 = sext i32 %1770 to i64
  %1772 = getelementptr inbounds float, float* %3, i64 %1771
  %1773 = bitcast float* %1772 to <8 x float>*
  %1774 = load <8 x float>, <8 x float>* %1773, align 1, !tbaa !12
  %1775 = add nsw i32 %1740, 56
  %1776 = sext i32 %1775 to i64
  %1777 = getelementptr inbounds float, float* %3, i64 %1776
  %1778 = bitcast float* %1777 to <8 x float>*
  %1779 = load <8 x float>, <8 x float>* %1778, align 1, !tbaa !12
  %1780 = add nsw i32 %1740, 64
  %1781 = sext i32 %1780 to i64
  %1782 = getelementptr inbounds float, float* %3, i64 %1781
  %1783 = bitcast float* %1782 to <8 x float>*
  %1784 = load <8 x float>, <8 x float>* %1783, align 1, !tbaa !12
  %1785 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1744, <8 x float> %85, <8 x float> %1706) #10
  %1786 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1749, <8 x float> %85, <8 x float> %1710) #10
  %1787 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1754, <8 x float> %85, <8 x float> %1714) #10
  %1788 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1759, <8 x float> %85, <8 x float> %1718) #10
  %1789 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1764, <8 x float> %85, <8 x float> %1722) #10
  %1790 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1769, <8 x float> %85, <8 x float> %1726) #10
  %1791 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1774, <8 x float> %85, <8 x float> %1730) #10
  %1792 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1779, <8 x float> %85, <8 x float> %1734) #10
  %1793 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1784, <8 x float> %85, <8 x float> %1738) #10
  store <8 x float> %1785, <8 x float>* %1705, align 1, !tbaa !12
  store <8 x float> %1786, <8 x float>* %1709, align 1, !tbaa !12
  store <8 x float> %1787, <8 x float>* %1713, align 1, !tbaa !12
  store <8 x float> %1788, <8 x float>* %1717, align 1, !tbaa !12
  store <8 x float> %1789, <8 x float>* %1721, align 1, !tbaa !12
  store <8 x float> %1790, <8 x float>* %1725, align 1, !tbaa !12
  store <8 x float> %1791, <8 x float>* %1729, align 1, !tbaa !12
  store <8 x float> %1792, <8 x float>* %1733, align 1, !tbaa !12
  store <8 x float> %1793, <8 x float>* %1737, align 1, !tbaa !12
  %1794 = add nuw nsw i64 %1666, 72
  %1795 = icmp ult i64 %1794, %1535
  br i1 %1795, label %1665, label %1659

1796:                                             ; preds = %1802
  br i1 %1533, label %1797, label %1923

1797:                                             ; preds = %1796
  %1798 = trunc i64 %91 to i32
  %1799 = mul nsw i32 %1532, %1798
  %1800 = sext i32 %1799 to i64
  %1801 = zext i32 %1532 to i64
  br label %1928

1802:                                             ; preds = %1660, %1802
  %1803 = phi i64 [ 0, %1660 ], [ %1921, %1802 ]
  %1804 = getelementptr inbounds float, float* %5, i64 %1803
  %1805 = getelementptr inbounds float, float* %1804, i64 8
  %1806 = bitcast float* %1805 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1806, i32 0, i32 1, i32 1)
  %1807 = getelementptr inbounds float, float* %3, i64 %1803
  %1808 = getelementptr inbounds float, float* %1807, i64 8
  %1809 = bitcast float* %1808 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1809, i32 0, i32 1, i32 1)
  %1810 = getelementptr inbounds float, float* %1804, i64 16
  %1811 = bitcast float* %1810 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1811, i32 0, i32 1, i32 1)
  %1812 = getelementptr inbounds float, float* %1807, i64 16
  %1813 = bitcast float* %1812 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1813, i32 0, i32 1, i32 1)
  %1814 = getelementptr inbounds float, float* %1804, i64 24
  %1815 = bitcast float* %1814 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1815, i32 0, i32 1, i32 1)
  %1816 = getelementptr inbounds float, float* %1807, i64 24
  %1817 = bitcast float* %1816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1817, i32 0, i32 1, i32 1)
  %1818 = getelementptr inbounds float, float* %1804, i64 32
  %1819 = bitcast float* %1818 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1819, i32 0, i32 1, i32 1)
  %1820 = getelementptr inbounds float, float* %1807, i64 32
  %1821 = bitcast float* %1820 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1821, i32 0, i32 1, i32 1)
  %1822 = getelementptr inbounds float, float* %1804, i64 40
  %1823 = bitcast float* %1822 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1823, i32 0, i32 1, i32 1)
  %1824 = getelementptr inbounds float, float* %1807, i64 40
  %1825 = bitcast float* %1824 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1825, i32 0, i32 1, i32 1)
  %1826 = getelementptr inbounds float, float* %1804, i64 48
  %1827 = bitcast float* %1826 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1827, i32 0, i32 1, i32 1)
  %1828 = getelementptr inbounds float, float* %1807, i64 48
  %1829 = bitcast float* %1828 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1829, i32 0, i32 1, i32 1)
  %1830 = getelementptr inbounds float, float* %1804, i64 56
  %1831 = bitcast float* %1830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1831, i32 0, i32 1, i32 1)
  %1832 = getelementptr inbounds float, float* %1807, i64 56
  %1833 = bitcast float* %1832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1833, i32 0, i32 1, i32 1)
  %1834 = getelementptr inbounds float, float* %1804, i64 64
  %1835 = bitcast float* %1834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1835, i32 0, i32 1, i32 1)
  %1836 = getelementptr inbounds float, float* %1807, i64 64
  %1837 = bitcast float* %1836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1837, i32 0, i32 1, i32 1)
  %1838 = getelementptr inbounds float, float* %1804, i64 72
  %1839 = bitcast float* %1838 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1839, i32 0, i32 1, i32 1)
  %1840 = getelementptr inbounds float, float* %1807, i64 72
  %1841 = bitcast float* %1840 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1841, i32 0, i32 1, i32 1)
  %1842 = bitcast float* %1804 to <8 x float>*
  %1843 = load <8 x float>, <8 x float>* %1842, align 1, !tbaa !12
  %1844 = add nuw nsw i64 %1803, 8
  %1845 = getelementptr inbounds float, float* %5, i64 %1844
  %1846 = bitcast float* %1845 to <8 x float>*
  %1847 = load <8 x float>, <8 x float>* %1846, align 1, !tbaa !12
  %1848 = add nuw nsw i64 %1803, 16
  %1849 = getelementptr inbounds float, float* %5, i64 %1848
  %1850 = bitcast float* %1849 to <8 x float>*
  %1851 = load <8 x float>, <8 x float>* %1850, align 1, !tbaa !12
  %1852 = add nuw nsw i64 %1803, 24
  %1853 = getelementptr inbounds float, float* %5, i64 %1852
  %1854 = bitcast float* %1853 to <8 x float>*
  %1855 = load <8 x float>, <8 x float>* %1854, align 1, !tbaa !12
  %1856 = add nuw nsw i64 %1803, 32
  %1857 = getelementptr inbounds float, float* %5, i64 %1856
  %1858 = bitcast float* %1857 to <8 x float>*
  %1859 = load <8 x float>, <8 x float>* %1858, align 1, !tbaa !12
  %1860 = add nuw nsw i64 %1803, 40
  %1861 = getelementptr inbounds float, float* %5, i64 %1860
  %1862 = bitcast float* %1861 to <8 x float>*
  %1863 = load <8 x float>, <8 x float>* %1862, align 1, !tbaa !12
  %1864 = add nuw nsw i64 %1803, 48
  %1865 = getelementptr inbounds float, float* %5, i64 %1864
  %1866 = bitcast float* %1865 to <8 x float>*
  %1867 = load <8 x float>, <8 x float>* %1866, align 1, !tbaa !12
  %1868 = add nuw nsw i64 %1803, 56
  %1869 = getelementptr inbounds float, float* %5, i64 %1868
  %1870 = bitcast float* %1869 to <8 x float>*
  %1871 = load <8 x float>, <8 x float>* %1870, align 1, !tbaa !12
  %1872 = add nuw nsw i64 %1803, 64
  %1873 = getelementptr inbounds float, float* %5, i64 %1872
  %1874 = bitcast float* %1873 to <8 x float>*
  %1875 = load <8 x float>, <8 x float>* %1874, align 1, !tbaa !12
  %1876 = add nsw i64 %1803, %1663
  %1877 = getelementptr inbounds float, float* %3, i64 %1876
  %1878 = bitcast float* %1877 to <8 x float>*
  %1879 = load <8 x float>, <8 x float>* %1878, align 1, !tbaa !12
  %1880 = add nsw i64 %1876, 8
  %1881 = getelementptr inbounds float, float* %3, i64 %1880
  %1882 = bitcast float* %1881 to <8 x float>*
  %1883 = load <8 x float>, <8 x float>* %1882, align 1, !tbaa !12
  %1884 = add nsw i64 %1876, 16
  %1885 = getelementptr inbounds float, float* %3, i64 %1884
  %1886 = bitcast float* %1885 to <8 x float>*
  %1887 = load <8 x float>, <8 x float>* %1886, align 1, !tbaa !12
  %1888 = add nsw i64 %1876, 24
  %1889 = getelementptr inbounds float, float* %3, i64 %1888
  %1890 = bitcast float* %1889 to <8 x float>*
  %1891 = load <8 x float>, <8 x float>* %1890, align 1, !tbaa !12
  %1892 = add nsw i64 %1876, 32
  %1893 = getelementptr inbounds float, float* %3, i64 %1892
  %1894 = bitcast float* %1893 to <8 x float>*
  %1895 = load <8 x float>, <8 x float>* %1894, align 1, !tbaa !12
  %1896 = add nsw i64 %1876, 40
  %1897 = getelementptr inbounds float, float* %3, i64 %1896
  %1898 = bitcast float* %1897 to <8 x float>*
  %1899 = load <8 x float>, <8 x float>* %1898, align 1, !tbaa !12
  %1900 = add nsw i64 %1876, 48
  %1901 = getelementptr inbounds float, float* %3, i64 %1900
  %1902 = bitcast float* %1901 to <8 x float>*
  %1903 = load <8 x float>, <8 x float>* %1902, align 1, !tbaa !12
  %1904 = add nsw i64 %1876, 56
  %1905 = getelementptr inbounds float, float* %3, i64 %1904
  %1906 = bitcast float* %1905 to <8 x float>*
  %1907 = load <8 x float>, <8 x float>* %1906, align 1, !tbaa !12
  %1908 = add nsw i64 %1876, 64
  %1909 = getelementptr inbounds float, float* %3, i64 %1908
  %1910 = bitcast float* %1909 to <8 x float>*
  %1911 = load <8 x float>, <8 x float>* %1910, align 1, !tbaa !12
  %1912 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1879, <8 x float> %90, <8 x float> %1843) #10
  %1913 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1883, <8 x float> %90, <8 x float> %1847) #10
  %1914 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1887, <8 x float> %90, <8 x float> %1851) #10
  %1915 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1891, <8 x float> %90, <8 x float> %1855) #10
  %1916 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1895, <8 x float> %90, <8 x float> %1859) #10
  %1917 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1899, <8 x float> %90, <8 x float> %1863) #10
  %1918 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1903, <8 x float> %90, <8 x float> %1867) #10
  %1919 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1907, <8 x float> %90, <8 x float> %1871) #10
  %1920 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1911, <8 x float> %90, <8 x float> %1875) #10
  store <8 x float> %1912, <8 x float>* %1842, align 1, !tbaa !12
  store <8 x float> %1913, <8 x float>* %1846, align 1, !tbaa !12
  store <8 x float> %1914, <8 x float>* %1850, align 1, !tbaa !12
  store <8 x float> %1915, <8 x float>* %1854, align 1, !tbaa !12
  store <8 x float> %1916, <8 x float>* %1858, align 1, !tbaa !12
  store <8 x float> %1917, <8 x float>* %1862, align 1, !tbaa !12
  store <8 x float> %1918, <8 x float>* %1866, align 1, !tbaa !12
  store <8 x float> %1919, <8 x float>* %1870, align 1, !tbaa !12
  store <8 x float> %1920, <8 x float>* %1874, align 1, !tbaa !12
  %1921 = add nuw nsw i64 %1803, 72
  %1922 = icmp ult i64 %1921, %1664
  br i1 %1922, label %1802, label %1796

1923:                                             ; preds = %1928, %493, %20, %1012, %1531, %1659, %1796
  %1924 = add nuw nsw i64 %21, 15
  %1925 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1926 = sext i32 %1925 to i64
  %1927 = icmp slt i64 %1924, %1926
  br i1 %1927, label %20, label %8

1928:                                             ; preds = %1797, %1928
  %1929 = phi i64 [ 0, %1797 ], [ %2047, %1928 ]
  %1930 = getelementptr inbounds float, float* %5, i64 %1929
  %1931 = getelementptr inbounds float, float* %1930, i64 8
  %1932 = bitcast float* %1931 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1932, i32 0, i32 1, i32 1)
  %1933 = getelementptr inbounds float, float* %3, i64 %1929
  %1934 = getelementptr inbounds float, float* %1933, i64 8
  %1935 = bitcast float* %1934 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1935, i32 0, i32 1, i32 1)
  %1936 = getelementptr inbounds float, float* %1930, i64 16
  %1937 = bitcast float* %1936 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1937, i32 0, i32 1, i32 1)
  %1938 = getelementptr inbounds float, float* %1933, i64 16
  %1939 = bitcast float* %1938 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1939, i32 0, i32 1, i32 1)
  %1940 = getelementptr inbounds float, float* %1930, i64 24
  %1941 = bitcast float* %1940 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1941, i32 0, i32 1, i32 1)
  %1942 = getelementptr inbounds float, float* %1933, i64 24
  %1943 = bitcast float* %1942 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1943, i32 0, i32 1, i32 1)
  %1944 = getelementptr inbounds float, float* %1930, i64 32
  %1945 = bitcast float* %1944 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1945, i32 0, i32 1, i32 1)
  %1946 = getelementptr inbounds float, float* %1933, i64 32
  %1947 = bitcast float* %1946 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1947, i32 0, i32 1, i32 1)
  %1948 = getelementptr inbounds float, float* %1930, i64 40
  %1949 = bitcast float* %1948 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1949, i32 0, i32 1, i32 1)
  %1950 = getelementptr inbounds float, float* %1933, i64 40
  %1951 = bitcast float* %1950 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1951, i32 0, i32 1, i32 1)
  %1952 = getelementptr inbounds float, float* %1930, i64 48
  %1953 = bitcast float* %1952 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1953, i32 0, i32 1, i32 1)
  %1954 = getelementptr inbounds float, float* %1933, i64 48
  %1955 = bitcast float* %1954 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1955, i32 0, i32 1, i32 1)
  %1956 = getelementptr inbounds float, float* %1930, i64 56
  %1957 = bitcast float* %1956 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1957, i32 0, i32 1, i32 1)
  %1958 = getelementptr inbounds float, float* %1933, i64 56
  %1959 = bitcast float* %1958 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1959, i32 0, i32 1, i32 1)
  %1960 = getelementptr inbounds float, float* %1930, i64 64
  %1961 = bitcast float* %1960 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1961, i32 0, i32 1, i32 1)
  %1962 = getelementptr inbounds float, float* %1933, i64 64
  %1963 = bitcast float* %1962 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1963, i32 0, i32 1, i32 1)
  %1964 = getelementptr inbounds float, float* %1930, i64 72
  %1965 = bitcast float* %1964 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1965, i32 0, i32 1, i32 1)
  %1966 = getelementptr inbounds float, float* %1933, i64 72
  %1967 = bitcast float* %1966 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1967, i32 0, i32 1, i32 1)
  %1968 = bitcast float* %1930 to <8 x float>*
  %1969 = load <8 x float>, <8 x float>* %1968, align 1, !tbaa !12
  %1970 = add nuw nsw i64 %1929, 8
  %1971 = getelementptr inbounds float, float* %5, i64 %1970
  %1972 = bitcast float* %1971 to <8 x float>*
  %1973 = load <8 x float>, <8 x float>* %1972, align 1, !tbaa !12
  %1974 = add nuw nsw i64 %1929, 16
  %1975 = getelementptr inbounds float, float* %5, i64 %1974
  %1976 = bitcast float* %1975 to <8 x float>*
  %1977 = load <8 x float>, <8 x float>* %1976, align 1, !tbaa !12
  %1978 = add nuw nsw i64 %1929, 24
  %1979 = getelementptr inbounds float, float* %5, i64 %1978
  %1980 = bitcast float* %1979 to <8 x float>*
  %1981 = load <8 x float>, <8 x float>* %1980, align 1, !tbaa !12
  %1982 = add nuw nsw i64 %1929, 32
  %1983 = getelementptr inbounds float, float* %5, i64 %1982
  %1984 = bitcast float* %1983 to <8 x float>*
  %1985 = load <8 x float>, <8 x float>* %1984, align 1, !tbaa !12
  %1986 = add nuw nsw i64 %1929, 40
  %1987 = getelementptr inbounds float, float* %5, i64 %1986
  %1988 = bitcast float* %1987 to <8 x float>*
  %1989 = load <8 x float>, <8 x float>* %1988, align 1, !tbaa !12
  %1990 = add nuw nsw i64 %1929, 48
  %1991 = getelementptr inbounds float, float* %5, i64 %1990
  %1992 = bitcast float* %1991 to <8 x float>*
  %1993 = load <8 x float>, <8 x float>* %1992, align 1, !tbaa !12
  %1994 = add nuw nsw i64 %1929, 56
  %1995 = getelementptr inbounds float, float* %5, i64 %1994
  %1996 = bitcast float* %1995 to <8 x float>*
  %1997 = load <8 x float>, <8 x float>* %1996, align 1, !tbaa !12
  %1998 = add nuw nsw i64 %1929, 64
  %1999 = getelementptr inbounds float, float* %5, i64 %1998
  %2000 = bitcast float* %1999 to <8 x float>*
  %2001 = load <8 x float>, <8 x float>* %2000, align 1, !tbaa !12
  %2002 = add nsw i64 %1929, %1800
  %2003 = getelementptr inbounds float, float* %3, i64 %2002
  %2004 = bitcast float* %2003 to <8 x float>*
  %2005 = load <8 x float>, <8 x float>* %2004, align 1, !tbaa !12
  %2006 = add nsw i64 %2002, 8
  %2007 = getelementptr inbounds float, float* %3, i64 %2006
  %2008 = bitcast float* %2007 to <8 x float>*
  %2009 = load <8 x float>, <8 x float>* %2008, align 1, !tbaa !12
  %2010 = add nsw i64 %2002, 16
  %2011 = getelementptr inbounds float, float* %3, i64 %2010
  %2012 = bitcast float* %2011 to <8 x float>*
  %2013 = load <8 x float>, <8 x float>* %2012, align 1, !tbaa !12
  %2014 = add nsw i64 %2002, 24
  %2015 = getelementptr inbounds float, float* %3, i64 %2014
  %2016 = bitcast float* %2015 to <8 x float>*
  %2017 = load <8 x float>, <8 x float>* %2016, align 1, !tbaa !12
  %2018 = add nsw i64 %2002, 32
  %2019 = getelementptr inbounds float, float* %3, i64 %2018
  %2020 = bitcast float* %2019 to <8 x float>*
  %2021 = load <8 x float>, <8 x float>* %2020, align 1, !tbaa !12
  %2022 = add nsw i64 %2002, 40
  %2023 = getelementptr inbounds float, float* %3, i64 %2022
  %2024 = bitcast float* %2023 to <8 x float>*
  %2025 = load <8 x float>, <8 x float>* %2024, align 1, !tbaa !12
  %2026 = add nsw i64 %2002, 48
  %2027 = getelementptr inbounds float, float* %3, i64 %2026
  %2028 = bitcast float* %2027 to <8 x float>*
  %2029 = load <8 x float>, <8 x float>* %2028, align 1, !tbaa !12
  %2030 = add nsw i64 %2002, 56
  %2031 = getelementptr inbounds float, float* %3, i64 %2030
  %2032 = bitcast float* %2031 to <8 x float>*
  %2033 = load <8 x float>, <8 x float>* %2032, align 1, !tbaa !12
  %2034 = add nsw i64 %2002, 64
  %2035 = getelementptr inbounds float, float* %3, i64 %2034
  %2036 = bitcast float* %2035 to <8 x float>*
  %2037 = load <8 x float>, <8 x float>* %2036, align 1, !tbaa !12
  %2038 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2005, <8 x float> %95, <8 x float> %1969) #10
  %2039 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2009, <8 x float> %95, <8 x float> %1973) #10
  %2040 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2013, <8 x float> %95, <8 x float> %1977) #10
  %2041 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2017, <8 x float> %95, <8 x float> %1981) #10
  %2042 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2021, <8 x float> %95, <8 x float> %1985) #10
  %2043 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2025, <8 x float> %95, <8 x float> %1989) #10
  %2044 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2029, <8 x float> %95, <8 x float> %1993) #10
  %2045 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2033, <8 x float> %95, <8 x float> %1997) #10
  %2046 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2037, <8 x float> %95, <8 x float> %2001) #10
  store <8 x float> %2038, <8 x float>* %1968, align 1, !tbaa !12
  store <8 x float> %2039, <8 x float>* %1972, align 1, !tbaa !12
  store <8 x float> %2040, <8 x float>* %1976, align 1, !tbaa !12
  store <8 x float> %2041, <8 x float>* %1980, align 1, !tbaa !12
  store <8 x float> %2042, <8 x float>* %1984, align 1, !tbaa !12
  store <8 x float> %2043, <8 x float>* %1988, align 1, !tbaa !12
  store <8 x float> %2044, <8 x float>* %1992, align 1, !tbaa !12
  store <8 x float> %2045, <8 x float>* %1996, align 1, !tbaa !12
  store <8 x float> %2046, <8 x float>* %2000, align 1, !tbaa !12
  %2047 = add nuw nsw i64 %1929, 72
  %2048 = icmp ult i64 %2047, %1801
  br i1 %2048, label %1928, label %1923
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 285
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui9_uk15.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
