; ModuleID = 'codes/matvec_ui12_uk11.cpp'
source_filename = "codes/matvec_ui12_uk11.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui12_uk11.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 96
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 88
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1797, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1797
  %21 = phi i64 [ %1798, %1797 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %1797

78:                                               ; preds = %20
  %79 = zext i32 %76 to i64
  %80 = trunc i64 %21 to i32
  %81 = mul nsw i32 %76, %80
  br label %88

82:                                               ; preds = %88
  br i1 %77, label %83, label %427

83:                                               ; preds = %82
  %84 = trunc i64 %26 to i32
  %85 = mul nsw i32 %76, %84
  %86 = sext i32 %85 to i64
  %87 = zext i32 %76 to i64
  br label %267

88:                                               ; preds = %78, %88
  %89 = phi i64 [ 0, %78 ], [ %259, %88 ]
  %90 = getelementptr inbounds float, float* %5, i64 %89
  %91 = getelementptr inbounds float, float* %90, i64 8
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %3, i64 %89
  %94 = getelementptr inbounds float, float* %93, i64 8
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %90, i64 16
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %93, i64 16
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %90, i64 24
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %93, i64 24
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %90, i64 32
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %93, i64 32
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %90, i64 40
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %93, i64 40
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %90, i64 48
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %93, i64 48
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %90, i64 56
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %93, i64 56
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %90, i64 64
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %93, i64 64
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %90, i64 72
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %93, i64 72
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %90, i64 80
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %93, i64 80
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %90, i64 88
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %93, i64 88
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %90, i64 96
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = getelementptr inbounds float, float* %93, i64 96
  %139 = bitcast float* %138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %139, i32 0, i32 1, i32 1)
  %140 = bitcast float* %90 to <8 x float>*
  %141 = load <8 x float>, <8 x float>* %140, align 1, !tbaa !12
  %142 = or i64 %89, 8
  %143 = getelementptr inbounds float, float* %5, i64 %142
  %144 = bitcast float* %143 to <8 x float>*
  %145 = load <8 x float>, <8 x float>* %144, align 1, !tbaa !12
  %146 = or i64 %89, 16
  %147 = getelementptr inbounds float, float* %5, i64 %146
  %148 = bitcast float* %147 to <8 x float>*
  %149 = load <8 x float>, <8 x float>* %148, align 1, !tbaa !12
  %150 = or i64 %89, 24
  %151 = getelementptr inbounds float, float* %5, i64 %150
  %152 = bitcast float* %151 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = add nuw nsw i64 %89, 32
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nuw nsw i64 %89, 40
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = add nuw nsw i64 %89, 48
  %163 = getelementptr inbounds float, float* %5, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = add nuw nsw i64 %89, 56
  %167 = getelementptr inbounds float, float* %5, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = add nuw nsw i64 %89, 64
  %171 = getelementptr inbounds float, float* %5, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = add nuw nsw i64 %89, 72
  %175 = getelementptr inbounds float, float* %5, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nuw nsw i64 %89, 80
  %179 = getelementptr inbounds float, float* %5, i64 %178
  %180 = bitcast float* %179 to <8 x float>*
  %181 = load <8 x float>, <8 x float>* %180, align 1, !tbaa !12
  %182 = add nuw nsw i64 %89, 88
  %183 = getelementptr inbounds float, float* %5, i64 %182
  %184 = bitcast float* %183 to <8 x float>*
  %185 = load <8 x float>, <8 x float>* %184, align 1, !tbaa !12
  %186 = trunc i64 %89 to i32
  %187 = add nsw i32 %81, %186
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds float, float* %3, i64 %188
  %190 = bitcast float* %189 to <8 x float>*
  %191 = load <8 x float>, <8 x float>* %190, align 1, !tbaa !12
  %192 = add nsw i32 %187, 8
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds float, float* %3, i64 %193
  %195 = bitcast float* %194 to <8 x float>*
  %196 = load <8 x float>, <8 x float>* %195, align 1, !tbaa !12
  %197 = add nsw i32 %187, 16
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds float, float* %3, i64 %198
  %200 = bitcast float* %199 to <8 x float>*
  %201 = load <8 x float>, <8 x float>* %200, align 1, !tbaa !12
  %202 = add nsw i32 %187, 24
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds float, float* %3, i64 %203
  %205 = bitcast float* %204 to <8 x float>*
  %206 = load <8 x float>, <8 x float>* %205, align 1, !tbaa !12
  %207 = add nsw i32 %187, 32
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds float, float* %3, i64 %208
  %210 = bitcast float* %209 to <8 x float>*
  %211 = load <8 x float>, <8 x float>* %210, align 1, !tbaa !12
  %212 = add nsw i32 %187, 40
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds float, float* %3, i64 %213
  %215 = bitcast float* %214 to <8 x float>*
  %216 = load <8 x float>, <8 x float>* %215, align 1, !tbaa !12
  %217 = add nsw i32 %187, 48
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds float, float* %3, i64 %218
  %220 = bitcast float* %219 to <8 x float>*
  %221 = load <8 x float>, <8 x float>* %220, align 1, !tbaa !12
  %222 = add nsw i32 %187, 56
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds float, float* %3, i64 %223
  %225 = bitcast float* %224 to <8 x float>*
  %226 = load <8 x float>, <8 x float>* %225, align 1, !tbaa !12
  %227 = add nsw i32 %187, 64
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds float, float* %3, i64 %228
  %230 = bitcast float* %229 to <8 x float>*
  %231 = load <8 x float>, <8 x float>* %230, align 1, !tbaa !12
  %232 = add nsw i32 %187, 72
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds float, float* %3, i64 %233
  %235 = bitcast float* %234 to <8 x float>*
  %236 = load <8 x float>, <8 x float>* %235, align 1, !tbaa !12
  %237 = add nsw i32 %187, 80
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds float, float* %3, i64 %238
  %240 = bitcast float* %239 to <8 x float>*
  %241 = load <8 x float>, <8 x float>* %240, align 1, !tbaa !12
  %242 = add nsw i32 %187, 88
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float, float* %3, i64 %243
  %245 = bitcast float* %244 to <8 x float>*
  %246 = load <8 x float>, <8 x float>* %245, align 1, !tbaa !12
  %247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %191, <8 x float> %25, <8 x float> %141) #10
  %248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %196, <8 x float> %25, <8 x float> %145) #10
  %249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %201, <8 x float> %25, <8 x float> %149) #10
  %250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %206, <8 x float> %25, <8 x float> %153) #10
  %251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %211, <8 x float> %25, <8 x float> %157) #10
  %252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %216, <8 x float> %25, <8 x float> %161) #10
  %253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %221, <8 x float> %25, <8 x float> %165) #10
  %254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %226, <8 x float> %25, <8 x float> %169) #10
  %255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %231, <8 x float> %25, <8 x float> %173) #10
  %256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %236, <8 x float> %25, <8 x float> %177) #10
  %257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %241, <8 x float> %25, <8 x float> %181) #10
  %258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %246, <8 x float> %25, <8 x float> %185) #10
  store <8 x float> %247, <8 x float>* %140, align 1, !tbaa !12
  store <8 x float> %248, <8 x float>* %144, align 1, !tbaa !12
  store <8 x float> %249, <8 x float>* %148, align 1, !tbaa !12
  store <8 x float> %250, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %251, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %252, <8 x float>* %160, align 1, !tbaa !12
  store <8 x float> %253, <8 x float>* %164, align 1, !tbaa !12
  store <8 x float> %254, <8 x float>* %168, align 1, !tbaa !12
  store <8 x float> %255, <8 x float>* %172, align 1, !tbaa !12
  store <8 x float> %256, <8 x float>* %176, align 1, !tbaa !12
  store <8 x float> %257, <8 x float>* %180, align 1, !tbaa !12
  store <8 x float> %258, <8 x float>* %184, align 1, !tbaa !12
  %259 = add nuw nsw i64 %89, 96
  %260 = icmp ult i64 %259, %79
  br i1 %260, label %88, label %82

261:                                              ; preds = %267
  br i1 %77, label %262, label %427

262:                                              ; preds = %261
  %263 = trunc i64 %31 to i32
  %264 = mul nsw i32 %76, %263
  %265 = sext i32 %264 to i64
  %266 = zext i32 %76 to i64
  br label %434

267:                                              ; preds = %83, %267
  %268 = phi i64 [ 0, %83 ], [ %425, %267 ]
  %269 = getelementptr inbounds float, float* %5, i64 %268
  %270 = getelementptr inbounds float, float* %269, i64 8
  %271 = bitcast float* %270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %271, i32 0, i32 1, i32 1)
  %272 = getelementptr inbounds float, float* %3, i64 %268
  %273 = getelementptr inbounds float, float* %272, i64 8
  %274 = bitcast float* %273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %274, i32 0, i32 1, i32 1)
  %275 = getelementptr inbounds float, float* %269, i64 16
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %276, i32 0, i32 1, i32 1)
  %277 = getelementptr inbounds float, float* %272, i64 16
  %278 = bitcast float* %277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %278, i32 0, i32 1, i32 1)
  %279 = getelementptr inbounds float, float* %269, i64 24
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %272, i64 24
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %269, i64 32
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %272, i64 32
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %269, i64 40
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %272, i64 40
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %269, i64 48
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %272, i64 48
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %269, i64 56
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %272, i64 56
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %269, i64 64
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = getelementptr inbounds float, float* %272, i64 64
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = getelementptr inbounds float, float* %269, i64 72
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %272, i64 72
  %306 = bitcast float* %305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %306, i32 0, i32 1, i32 1)
  %307 = getelementptr inbounds float, float* %269, i64 80
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %272, i64 80
  %310 = bitcast float* %309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %310, i32 0, i32 1, i32 1)
  %311 = getelementptr inbounds float, float* %269, i64 88
  %312 = bitcast float* %311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %312, i32 0, i32 1, i32 1)
  %313 = getelementptr inbounds float, float* %272, i64 88
  %314 = bitcast float* %313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %314, i32 0, i32 1, i32 1)
  %315 = getelementptr inbounds float, float* %269, i64 96
  %316 = bitcast float* %315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %316, i32 0, i32 1, i32 1)
  %317 = getelementptr inbounds float, float* %272, i64 96
  %318 = bitcast float* %317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %318, i32 0, i32 1, i32 1)
  %319 = bitcast float* %269 to <8 x float>*
  %320 = load <8 x float>, <8 x float>* %319, align 1, !tbaa !12
  %321 = or i64 %268, 8
  %322 = getelementptr inbounds float, float* %5, i64 %321
  %323 = bitcast float* %322 to <8 x float>*
  %324 = load <8 x float>, <8 x float>* %323, align 1, !tbaa !12
  %325 = or i64 %268, 16
  %326 = getelementptr inbounds float, float* %5, i64 %325
  %327 = bitcast float* %326 to <8 x float>*
  %328 = load <8 x float>, <8 x float>* %327, align 1, !tbaa !12
  %329 = or i64 %268, 24
  %330 = getelementptr inbounds float, float* %5, i64 %329
  %331 = bitcast float* %330 to <8 x float>*
  %332 = load <8 x float>, <8 x float>* %331, align 1, !tbaa !12
  %333 = add nuw nsw i64 %268, 32
  %334 = getelementptr inbounds float, float* %5, i64 %333
  %335 = bitcast float* %334 to <8 x float>*
  %336 = load <8 x float>, <8 x float>* %335, align 1, !tbaa !12
  %337 = add nuw nsw i64 %268, 40
  %338 = getelementptr inbounds float, float* %5, i64 %337
  %339 = bitcast float* %338 to <8 x float>*
  %340 = load <8 x float>, <8 x float>* %339, align 1, !tbaa !12
  %341 = add nuw nsw i64 %268, 48
  %342 = getelementptr inbounds float, float* %5, i64 %341
  %343 = bitcast float* %342 to <8 x float>*
  %344 = load <8 x float>, <8 x float>* %343, align 1, !tbaa !12
  %345 = add nuw nsw i64 %268, 56
  %346 = getelementptr inbounds float, float* %5, i64 %345
  %347 = bitcast float* %346 to <8 x float>*
  %348 = load <8 x float>, <8 x float>* %347, align 1, !tbaa !12
  %349 = add nuw nsw i64 %268, 64
  %350 = getelementptr inbounds float, float* %5, i64 %349
  %351 = bitcast float* %350 to <8 x float>*
  %352 = load <8 x float>, <8 x float>* %351, align 1, !tbaa !12
  %353 = add nuw nsw i64 %268, 72
  %354 = getelementptr inbounds float, float* %5, i64 %353
  %355 = bitcast float* %354 to <8 x float>*
  %356 = load <8 x float>, <8 x float>* %355, align 1, !tbaa !12
  %357 = add nuw nsw i64 %268, 80
  %358 = getelementptr inbounds float, float* %5, i64 %357
  %359 = bitcast float* %358 to <8 x float>*
  %360 = load <8 x float>, <8 x float>* %359, align 1, !tbaa !12
  %361 = add nuw nsw i64 %268, 88
  %362 = getelementptr inbounds float, float* %5, i64 %361
  %363 = bitcast float* %362 to <8 x float>*
  %364 = load <8 x float>, <8 x float>* %363, align 1, !tbaa !12
  %365 = add nsw i64 %268, %86
  %366 = getelementptr inbounds float, float* %3, i64 %365
  %367 = bitcast float* %366 to <8 x float>*
  %368 = load <8 x float>, <8 x float>* %367, align 1, !tbaa !12
  %369 = add nsw i64 %365, 8
  %370 = getelementptr inbounds float, float* %3, i64 %369
  %371 = bitcast float* %370 to <8 x float>*
  %372 = load <8 x float>, <8 x float>* %371, align 1, !tbaa !12
  %373 = add nsw i64 %365, 16
  %374 = getelementptr inbounds float, float* %3, i64 %373
  %375 = bitcast float* %374 to <8 x float>*
  %376 = load <8 x float>, <8 x float>* %375, align 1, !tbaa !12
  %377 = add nsw i64 %365, 24
  %378 = getelementptr inbounds float, float* %3, i64 %377
  %379 = bitcast float* %378 to <8 x float>*
  %380 = load <8 x float>, <8 x float>* %379, align 1, !tbaa !12
  %381 = add nsw i64 %365, 32
  %382 = getelementptr inbounds float, float* %3, i64 %381
  %383 = bitcast float* %382 to <8 x float>*
  %384 = load <8 x float>, <8 x float>* %383, align 1, !tbaa !12
  %385 = add nsw i64 %365, 40
  %386 = getelementptr inbounds float, float* %3, i64 %385
  %387 = bitcast float* %386 to <8 x float>*
  %388 = load <8 x float>, <8 x float>* %387, align 1, !tbaa !12
  %389 = add nsw i64 %365, 48
  %390 = getelementptr inbounds float, float* %3, i64 %389
  %391 = bitcast float* %390 to <8 x float>*
  %392 = load <8 x float>, <8 x float>* %391, align 1, !tbaa !12
  %393 = add nsw i64 %365, 56
  %394 = getelementptr inbounds float, float* %3, i64 %393
  %395 = bitcast float* %394 to <8 x float>*
  %396 = load <8 x float>, <8 x float>* %395, align 1, !tbaa !12
  %397 = add nsw i64 %365, 64
  %398 = getelementptr inbounds float, float* %3, i64 %397
  %399 = bitcast float* %398 to <8 x float>*
  %400 = load <8 x float>, <8 x float>* %399, align 1, !tbaa !12
  %401 = add nsw i64 %365, 72
  %402 = getelementptr inbounds float, float* %3, i64 %401
  %403 = bitcast float* %402 to <8 x float>*
  %404 = load <8 x float>, <8 x float>* %403, align 1, !tbaa !12
  %405 = add nsw i64 %365, 80
  %406 = getelementptr inbounds float, float* %3, i64 %405
  %407 = bitcast float* %406 to <8 x float>*
  %408 = load <8 x float>, <8 x float>* %407, align 1, !tbaa !12
  %409 = add nsw i64 %365, 88
  %410 = getelementptr inbounds float, float* %3, i64 %409
  %411 = bitcast float* %410 to <8 x float>*
  %412 = load <8 x float>, <8 x float>* %411, align 1, !tbaa !12
  %413 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %368, <8 x float> %30, <8 x float> %320) #10
  %414 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %372, <8 x float> %30, <8 x float> %324) #10
  %415 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %376, <8 x float> %30, <8 x float> %328) #10
  %416 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %380, <8 x float> %30, <8 x float> %332) #10
  %417 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %384, <8 x float> %30, <8 x float> %336) #10
  %418 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %388, <8 x float> %30, <8 x float> %340) #10
  %419 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %392, <8 x float> %30, <8 x float> %344) #10
  %420 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %396, <8 x float> %30, <8 x float> %348) #10
  %421 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %400, <8 x float> %30, <8 x float> %352) #10
  %422 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %404, <8 x float> %30, <8 x float> %356) #10
  %423 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %408, <8 x float> %30, <8 x float> %360) #10
  %424 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %412, <8 x float> %30, <8 x float> %364) #10
  store <8 x float> %413, <8 x float>* %319, align 1, !tbaa !12
  store <8 x float> %414, <8 x float>* %323, align 1, !tbaa !12
  store <8 x float> %415, <8 x float>* %327, align 1, !tbaa !12
  store <8 x float> %416, <8 x float>* %331, align 1, !tbaa !12
  store <8 x float> %417, <8 x float>* %335, align 1, !tbaa !12
  store <8 x float> %418, <8 x float>* %339, align 1, !tbaa !12
  store <8 x float> %419, <8 x float>* %343, align 1, !tbaa !12
  store <8 x float> %420, <8 x float>* %347, align 1, !tbaa !12
  store <8 x float> %421, <8 x float>* %351, align 1, !tbaa !12
  store <8 x float> %422, <8 x float>* %355, align 1, !tbaa !12
  store <8 x float> %423, <8 x float>* %359, align 1, !tbaa !12
  store <8 x float> %424, <8 x float>* %363, align 1, !tbaa !12
  %425 = add nuw nsw i64 %268, 96
  %426 = icmp ult i64 %425, %87
  br i1 %426, label %267, label %261

427:                                              ; preds = %434, %82, %261
  %428 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %429 = icmp sgt i32 %428, 0
  br i1 %429, label %430, label %1797

430:                                              ; preds = %427
  %431 = zext i32 %428 to i64
  %432 = trunc i64 %36 to i32
  %433 = mul nsw i32 %428, %432
  br label %600

434:                                              ; preds = %262, %434
  %435 = phi i64 [ 0, %262 ], [ %592, %434 ]
  %436 = getelementptr inbounds float, float* %5, i64 %435
  %437 = getelementptr inbounds float, float* %436, i64 8
  %438 = bitcast float* %437 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %438, i32 0, i32 1, i32 1)
  %439 = getelementptr inbounds float, float* %3, i64 %435
  %440 = getelementptr inbounds float, float* %439, i64 8
  %441 = bitcast float* %440 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %441, i32 0, i32 1, i32 1)
  %442 = getelementptr inbounds float, float* %436, i64 16
  %443 = bitcast float* %442 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %443, i32 0, i32 1, i32 1)
  %444 = getelementptr inbounds float, float* %439, i64 16
  %445 = bitcast float* %444 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %445, i32 0, i32 1, i32 1)
  %446 = getelementptr inbounds float, float* %436, i64 24
  %447 = bitcast float* %446 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %447, i32 0, i32 1, i32 1)
  %448 = getelementptr inbounds float, float* %439, i64 24
  %449 = bitcast float* %448 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %449, i32 0, i32 1, i32 1)
  %450 = getelementptr inbounds float, float* %436, i64 32
  %451 = bitcast float* %450 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %451, i32 0, i32 1, i32 1)
  %452 = getelementptr inbounds float, float* %439, i64 32
  %453 = bitcast float* %452 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %453, i32 0, i32 1, i32 1)
  %454 = getelementptr inbounds float, float* %436, i64 40
  %455 = bitcast float* %454 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %455, i32 0, i32 1, i32 1)
  %456 = getelementptr inbounds float, float* %439, i64 40
  %457 = bitcast float* %456 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %457, i32 0, i32 1, i32 1)
  %458 = getelementptr inbounds float, float* %436, i64 48
  %459 = bitcast float* %458 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %459, i32 0, i32 1, i32 1)
  %460 = getelementptr inbounds float, float* %439, i64 48
  %461 = bitcast float* %460 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %461, i32 0, i32 1, i32 1)
  %462 = getelementptr inbounds float, float* %436, i64 56
  %463 = bitcast float* %462 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %463, i32 0, i32 1, i32 1)
  %464 = getelementptr inbounds float, float* %439, i64 56
  %465 = bitcast float* %464 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %465, i32 0, i32 1, i32 1)
  %466 = getelementptr inbounds float, float* %436, i64 64
  %467 = bitcast float* %466 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %467, i32 0, i32 1, i32 1)
  %468 = getelementptr inbounds float, float* %439, i64 64
  %469 = bitcast float* %468 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %469, i32 0, i32 1, i32 1)
  %470 = getelementptr inbounds float, float* %436, i64 72
  %471 = bitcast float* %470 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %471, i32 0, i32 1, i32 1)
  %472 = getelementptr inbounds float, float* %439, i64 72
  %473 = bitcast float* %472 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %473, i32 0, i32 1, i32 1)
  %474 = getelementptr inbounds float, float* %436, i64 80
  %475 = bitcast float* %474 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %475, i32 0, i32 1, i32 1)
  %476 = getelementptr inbounds float, float* %439, i64 80
  %477 = bitcast float* %476 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %477, i32 0, i32 1, i32 1)
  %478 = getelementptr inbounds float, float* %436, i64 88
  %479 = bitcast float* %478 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %479, i32 0, i32 1, i32 1)
  %480 = getelementptr inbounds float, float* %439, i64 88
  %481 = bitcast float* %480 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %481, i32 0, i32 1, i32 1)
  %482 = getelementptr inbounds float, float* %436, i64 96
  %483 = bitcast float* %482 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %483, i32 0, i32 1, i32 1)
  %484 = getelementptr inbounds float, float* %439, i64 96
  %485 = bitcast float* %484 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %485, i32 0, i32 1, i32 1)
  %486 = bitcast float* %436 to <8 x float>*
  %487 = load <8 x float>, <8 x float>* %486, align 1, !tbaa !12
  %488 = or i64 %435, 8
  %489 = getelementptr inbounds float, float* %5, i64 %488
  %490 = bitcast float* %489 to <8 x float>*
  %491 = load <8 x float>, <8 x float>* %490, align 1, !tbaa !12
  %492 = or i64 %435, 16
  %493 = getelementptr inbounds float, float* %5, i64 %492
  %494 = bitcast float* %493 to <8 x float>*
  %495 = load <8 x float>, <8 x float>* %494, align 1, !tbaa !12
  %496 = or i64 %435, 24
  %497 = getelementptr inbounds float, float* %5, i64 %496
  %498 = bitcast float* %497 to <8 x float>*
  %499 = load <8 x float>, <8 x float>* %498, align 1, !tbaa !12
  %500 = add nuw nsw i64 %435, 32
  %501 = getelementptr inbounds float, float* %5, i64 %500
  %502 = bitcast float* %501 to <8 x float>*
  %503 = load <8 x float>, <8 x float>* %502, align 1, !tbaa !12
  %504 = add nuw nsw i64 %435, 40
  %505 = getelementptr inbounds float, float* %5, i64 %504
  %506 = bitcast float* %505 to <8 x float>*
  %507 = load <8 x float>, <8 x float>* %506, align 1, !tbaa !12
  %508 = add nuw nsw i64 %435, 48
  %509 = getelementptr inbounds float, float* %5, i64 %508
  %510 = bitcast float* %509 to <8 x float>*
  %511 = load <8 x float>, <8 x float>* %510, align 1, !tbaa !12
  %512 = add nuw nsw i64 %435, 56
  %513 = getelementptr inbounds float, float* %5, i64 %512
  %514 = bitcast float* %513 to <8 x float>*
  %515 = load <8 x float>, <8 x float>* %514, align 1, !tbaa !12
  %516 = add nuw nsw i64 %435, 64
  %517 = getelementptr inbounds float, float* %5, i64 %516
  %518 = bitcast float* %517 to <8 x float>*
  %519 = load <8 x float>, <8 x float>* %518, align 1, !tbaa !12
  %520 = add nuw nsw i64 %435, 72
  %521 = getelementptr inbounds float, float* %5, i64 %520
  %522 = bitcast float* %521 to <8 x float>*
  %523 = load <8 x float>, <8 x float>* %522, align 1, !tbaa !12
  %524 = add nuw nsw i64 %435, 80
  %525 = getelementptr inbounds float, float* %5, i64 %524
  %526 = bitcast float* %525 to <8 x float>*
  %527 = load <8 x float>, <8 x float>* %526, align 1, !tbaa !12
  %528 = add nuw nsw i64 %435, 88
  %529 = getelementptr inbounds float, float* %5, i64 %528
  %530 = bitcast float* %529 to <8 x float>*
  %531 = load <8 x float>, <8 x float>* %530, align 1, !tbaa !12
  %532 = add nsw i64 %435, %265
  %533 = getelementptr inbounds float, float* %3, i64 %532
  %534 = bitcast float* %533 to <8 x float>*
  %535 = load <8 x float>, <8 x float>* %534, align 1, !tbaa !12
  %536 = add nsw i64 %532, 8
  %537 = getelementptr inbounds float, float* %3, i64 %536
  %538 = bitcast float* %537 to <8 x float>*
  %539 = load <8 x float>, <8 x float>* %538, align 1, !tbaa !12
  %540 = add nsw i64 %532, 16
  %541 = getelementptr inbounds float, float* %3, i64 %540
  %542 = bitcast float* %541 to <8 x float>*
  %543 = load <8 x float>, <8 x float>* %542, align 1, !tbaa !12
  %544 = add nsw i64 %532, 24
  %545 = getelementptr inbounds float, float* %3, i64 %544
  %546 = bitcast float* %545 to <8 x float>*
  %547 = load <8 x float>, <8 x float>* %546, align 1, !tbaa !12
  %548 = add nsw i64 %532, 32
  %549 = getelementptr inbounds float, float* %3, i64 %548
  %550 = bitcast float* %549 to <8 x float>*
  %551 = load <8 x float>, <8 x float>* %550, align 1, !tbaa !12
  %552 = add nsw i64 %532, 40
  %553 = getelementptr inbounds float, float* %3, i64 %552
  %554 = bitcast float* %553 to <8 x float>*
  %555 = load <8 x float>, <8 x float>* %554, align 1, !tbaa !12
  %556 = add nsw i64 %532, 48
  %557 = getelementptr inbounds float, float* %3, i64 %556
  %558 = bitcast float* %557 to <8 x float>*
  %559 = load <8 x float>, <8 x float>* %558, align 1, !tbaa !12
  %560 = add nsw i64 %532, 56
  %561 = getelementptr inbounds float, float* %3, i64 %560
  %562 = bitcast float* %561 to <8 x float>*
  %563 = load <8 x float>, <8 x float>* %562, align 1, !tbaa !12
  %564 = add nsw i64 %532, 64
  %565 = getelementptr inbounds float, float* %3, i64 %564
  %566 = bitcast float* %565 to <8 x float>*
  %567 = load <8 x float>, <8 x float>* %566, align 1, !tbaa !12
  %568 = add nsw i64 %532, 72
  %569 = getelementptr inbounds float, float* %3, i64 %568
  %570 = bitcast float* %569 to <8 x float>*
  %571 = load <8 x float>, <8 x float>* %570, align 1, !tbaa !12
  %572 = add nsw i64 %532, 80
  %573 = getelementptr inbounds float, float* %3, i64 %572
  %574 = bitcast float* %573 to <8 x float>*
  %575 = load <8 x float>, <8 x float>* %574, align 1, !tbaa !12
  %576 = add nsw i64 %532, 88
  %577 = getelementptr inbounds float, float* %3, i64 %576
  %578 = bitcast float* %577 to <8 x float>*
  %579 = load <8 x float>, <8 x float>* %578, align 1, !tbaa !12
  %580 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %535, <8 x float> %35, <8 x float> %487) #10
  %581 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %539, <8 x float> %35, <8 x float> %491) #10
  %582 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %543, <8 x float> %35, <8 x float> %495) #10
  %583 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %547, <8 x float> %35, <8 x float> %499) #10
  %584 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %551, <8 x float> %35, <8 x float> %503) #10
  %585 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %555, <8 x float> %35, <8 x float> %507) #10
  %586 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %559, <8 x float> %35, <8 x float> %511) #10
  %587 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %563, <8 x float> %35, <8 x float> %515) #10
  %588 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %567, <8 x float> %35, <8 x float> %519) #10
  %589 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %571, <8 x float> %35, <8 x float> %523) #10
  %590 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %575, <8 x float> %35, <8 x float> %527) #10
  %591 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %579, <8 x float> %35, <8 x float> %531) #10
  store <8 x float> %580, <8 x float>* %486, align 1, !tbaa !12
  store <8 x float> %581, <8 x float>* %490, align 1, !tbaa !12
  store <8 x float> %582, <8 x float>* %494, align 1, !tbaa !12
  store <8 x float> %583, <8 x float>* %498, align 1, !tbaa !12
  store <8 x float> %584, <8 x float>* %502, align 1, !tbaa !12
  store <8 x float> %585, <8 x float>* %506, align 1, !tbaa !12
  store <8 x float> %586, <8 x float>* %510, align 1, !tbaa !12
  store <8 x float> %587, <8 x float>* %514, align 1, !tbaa !12
  store <8 x float> %588, <8 x float>* %518, align 1, !tbaa !12
  store <8 x float> %589, <8 x float>* %522, align 1, !tbaa !12
  store <8 x float> %590, <8 x float>* %526, align 1, !tbaa !12
  store <8 x float> %591, <8 x float>* %530, align 1, !tbaa !12
  %592 = add nuw nsw i64 %435, 96
  %593 = icmp ult i64 %592, %266
  br i1 %593, label %434, label %427

594:                                              ; preds = %600
  br i1 %429, label %595, label %939

595:                                              ; preds = %594
  %596 = trunc i64 %41 to i32
  %597 = mul nsw i32 %428, %596
  %598 = sext i32 %597 to i64
  %599 = zext i32 %428 to i64
  br label %779

600:                                              ; preds = %430, %600
  %601 = phi i64 [ 0, %430 ], [ %771, %600 ]
  %602 = getelementptr inbounds float, float* %5, i64 %601
  %603 = getelementptr inbounds float, float* %602, i64 8
  %604 = bitcast float* %603 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %604, i32 0, i32 1, i32 1)
  %605 = getelementptr inbounds float, float* %3, i64 %601
  %606 = getelementptr inbounds float, float* %605, i64 8
  %607 = bitcast float* %606 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %607, i32 0, i32 1, i32 1)
  %608 = getelementptr inbounds float, float* %602, i64 16
  %609 = bitcast float* %608 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %609, i32 0, i32 1, i32 1)
  %610 = getelementptr inbounds float, float* %605, i64 16
  %611 = bitcast float* %610 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %611, i32 0, i32 1, i32 1)
  %612 = getelementptr inbounds float, float* %602, i64 24
  %613 = bitcast float* %612 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %613, i32 0, i32 1, i32 1)
  %614 = getelementptr inbounds float, float* %605, i64 24
  %615 = bitcast float* %614 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %615, i32 0, i32 1, i32 1)
  %616 = getelementptr inbounds float, float* %602, i64 32
  %617 = bitcast float* %616 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %617, i32 0, i32 1, i32 1)
  %618 = getelementptr inbounds float, float* %605, i64 32
  %619 = bitcast float* %618 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %619, i32 0, i32 1, i32 1)
  %620 = getelementptr inbounds float, float* %602, i64 40
  %621 = bitcast float* %620 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %621, i32 0, i32 1, i32 1)
  %622 = getelementptr inbounds float, float* %605, i64 40
  %623 = bitcast float* %622 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %623, i32 0, i32 1, i32 1)
  %624 = getelementptr inbounds float, float* %602, i64 48
  %625 = bitcast float* %624 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %625, i32 0, i32 1, i32 1)
  %626 = getelementptr inbounds float, float* %605, i64 48
  %627 = bitcast float* %626 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %627, i32 0, i32 1, i32 1)
  %628 = getelementptr inbounds float, float* %602, i64 56
  %629 = bitcast float* %628 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %629, i32 0, i32 1, i32 1)
  %630 = getelementptr inbounds float, float* %605, i64 56
  %631 = bitcast float* %630 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %631, i32 0, i32 1, i32 1)
  %632 = getelementptr inbounds float, float* %602, i64 64
  %633 = bitcast float* %632 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %633, i32 0, i32 1, i32 1)
  %634 = getelementptr inbounds float, float* %605, i64 64
  %635 = bitcast float* %634 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %635, i32 0, i32 1, i32 1)
  %636 = getelementptr inbounds float, float* %602, i64 72
  %637 = bitcast float* %636 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %637, i32 0, i32 1, i32 1)
  %638 = getelementptr inbounds float, float* %605, i64 72
  %639 = bitcast float* %638 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %639, i32 0, i32 1, i32 1)
  %640 = getelementptr inbounds float, float* %602, i64 80
  %641 = bitcast float* %640 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %641, i32 0, i32 1, i32 1)
  %642 = getelementptr inbounds float, float* %605, i64 80
  %643 = bitcast float* %642 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %643, i32 0, i32 1, i32 1)
  %644 = getelementptr inbounds float, float* %602, i64 88
  %645 = bitcast float* %644 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %645, i32 0, i32 1, i32 1)
  %646 = getelementptr inbounds float, float* %605, i64 88
  %647 = bitcast float* %646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %647, i32 0, i32 1, i32 1)
  %648 = getelementptr inbounds float, float* %602, i64 96
  %649 = bitcast float* %648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %649, i32 0, i32 1, i32 1)
  %650 = getelementptr inbounds float, float* %605, i64 96
  %651 = bitcast float* %650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %651, i32 0, i32 1, i32 1)
  %652 = bitcast float* %602 to <8 x float>*
  %653 = load <8 x float>, <8 x float>* %652, align 1, !tbaa !12
  %654 = or i64 %601, 8
  %655 = getelementptr inbounds float, float* %5, i64 %654
  %656 = bitcast float* %655 to <8 x float>*
  %657 = load <8 x float>, <8 x float>* %656, align 1, !tbaa !12
  %658 = or i64 %601, 16
  %659 = getelementptr inbounds float, float* %5, i64 %658
  %660 = bitcast float* %659 to <8 x float>*
  %661 = load <8 x float>, <8 x float>* %660, align 1, !tbaa !12
  %662 = or i64 %601, 24
  %663 = getelementptr inbounds float, float* %5, i64 %662
  %664 = bitcast float* %663 to <8 x float>*
  %665 = load <8 x float>, <8 x float>* %664, align 1, !tbaa !12
  %666 = add nuw nsw i64 %601, 32
  %667 = getelementptr inbounds float, float* %5, i64 %666
  %668 = bitcast float* %667 to <8 x float>*
  %669 = load <8 x float>, <8 x float>* %668, align 1, !tbaa !12
  %670 = add nuw nsw i64 %601, 40
  %671 = getelementptr inbounds float, float* %5, i64 %670
  %672 = bitcast float* %671 to <8 x float>*
  %673 = load <8 x float>, <8 x float>* %672, align 1, !tbaa !12
  %674 = add nuw nsw i64 %601, 48
  %675 = getelementptr inbounds float, float* %5, i64 %674
  %676 = bitcast float* %675 to <8 x float>*
  %677 = load <8 x float>, <8 x float>* %676, align 1, !tbaa !12
  %678 = add nuw nsw i64 %601, 56
  %679 = getelementptr inbounds float, float* %5, i64 %678
  %680 = bitcast float* %679 to <8 x float>*
  %681 = load <8 x float>, <8 x float>* %680, align 1, !tbaa !12
  %682 = add nuw nsw i64 %601, 64
  %683 = getelementptr inbounds float, float* %5, i64 %682
  %684 = bitcast float* %683 to <8 x float>*
  %685 = load <8 x float>, <8 x float>* %684, align 1, !tbaa !12
  %686 = add nuw nsw i64 %601, 72
  %687 = getelementptr inbounds float, float* %5, i64 %686
  %688 = bitcast float* %687 to <8 x float>*
  %689 = load <8 x float>, <8 x float>* %688, align 1, !tbaa !12
  %690 = add nuw nsw i64 %601, 80
  %691 = getelementptr inbounds float, float* %5, i64 %690
  %692 = bitcast float* %691 to <8 x float>*
  %693 = load <8 x float>, <8 x float>* %692, align 1, !tbaa !12
  %694 = add nuw nsw i64 %601, 88
  %695 = getelementptr inbounds float, float* %5, i64 %694
  %696 = bitcast float* %695 to <8 x float>*
  %697 = load <8 x float>, <8 x float>* %696, align 1, !tbaa !12
  %698 = trunc i64 %601 to i32
  %699 = add nsw i32 %433, %698
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds float, float* %3, i64 %700
  %702 = bitcast float* %701 to <8 x float>*
  %703 = load <8 x float>, <8 x float>* %702, align 1, !tbaa !12
  %704 = add nsw i32 %699, 8
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds float, float* %3, i64 %705
  %707 = bitcast float* %706 to <8 x float>*
  %708 = load <8 x float>, <8 x float>* %707, align 1, !tbaa !12
  %709 = add nsw i32 %699, 16
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds float, float* %3, i64 %710
  %712 = bitcast float* %711 to <8 x float>*
  %713 = load <8 x float>, <8 x float>* %712, align 1, !tbaa !12
  %714 = add nsw i32 %699, 24
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds float, float* %3, i64 %715
  %717 = bitcast float* %716 to <8 x float>*
  %718 = load <8 x float>, <8 x float>* %717, align 1, !tbaa !12
  %719 = add nsw i32 %699, 32
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds float, float* %3, i64 %720
  %722 = bitcast float* %721 to <8 x float>*
  %723 = load <8 x float>, <8 x float>* %722, align 1, !tbaa !12
  %724 = add nsw i32 %699, 40
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds float, float* %3, i64 %725
  %727 = bitcast float* %726 to <8 x float>*
  %728 = load <8 x float>, <8 x float>* %727, align 1, !tbaa !12
  %729 = add nsw i32 %699, 48
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds float, float* %3, i64 %730
  %732 = bitcast float* %731 to <8 x float>*
  %733 = load <8 x float>, <8 x float>* %732, align 1, !tbaa !12
  %734 = add nsw i32 %699, 56
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds float, float* %3, i64 %735
  %737 = bitcast float* %736 to <8 x float>*
  %738 = load <8 x float>, <8 x float>* %737, align 1, !tbaa !12
  %739 = add nsw i32 %699, 64
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds float, float* %3, i64 %740
  %742 = bitcast float* %741 to <8 x float>*
  %743 = load <8 x float>, <8 x float>* %742, align 1, !tbaa !12
  %744 = add nsw i32 %699, 72
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds float, float* %3, i64 %745
  %747 = bitcast float* %746 to <8 x float>*
  %748 = load <8 x float>, <8 x float>* %747, align 1, !tbaa !12
  %749 = add nsw i32 %699, 80
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds float, float* %3, i64 %750
  %752 = bitcast float* %751 to <8 x float>*
  %753 = load <8 x float>, <8 x float>* %752, align 1, !tbaa !12
  %754 = add nsw i32 %699, 88
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds float, float* %3, i64 %755
  %757 = bitcast float* %756 to <8 x float>*
  %758 = load <8 x float>, <8 x float>* %757, align 1, !tbaa !12
  %759 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %703, <8 x float> %40, <8 x float> %653) #10
  %760 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %708, <8 x float> %40, <8 x float> %657) #10
  %761 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %713, <8 x float> %40, <8 x float> %661) #10
  %762 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %718, <8 x float> %40, <8 x float> %665) #10
  %763 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %723, <8 x float> %40, <8 x float> %669) #10
  %764 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %728, <8 x float> %40, <8 x float> %673) #10
  %765 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %733, <8 x float> %40, <8 x float> %677) #10
  %766 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %738, <8 x float> %40, <8 x float> %681) #10
  %767 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %743, <8 x float> %40, <8 x float> %685) #10
  %768 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %748, <8 x float> %40, <8 x float> %689) #10
  %769 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %753, <8 x float> %40, <8 x float> %693) #10
  %770 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %758, <8 x float> %40, <8 x float> %697) #10
  store <8 x float> %759, <8 x float>* %652, align 1, !tbaa !12
  store <8 x float> %760, <8 x float>* %656, align 1, !tbaa !12
  store <8 x float> %761, <8 x float>* %660, align 1, !tbaa !12
  store <8 x float> %762, <8 x float>* %664, align 1, !tbaa !12
  store <8 x float> %763, <8 x float>* %668, align 1, !tbaa !12
  store <8 x float> %764, <8 x float>* %672, align 1, !tbaa !12
  store <8 x float> %765, <8 x float>* %676, align 1, !tbaa !12
  store <8 x float> %766, <8 x float>* %680, align 1, !tbaa !12
  store <8 x float> %767, <8 x float>* %684, align 1, !tbaa !12
  store <8 x float> %768, <8 x float>* %688, align 1, !tbaa !12
  store <8 x float> %769, <8 x float>* %692, align 1, !tbaa !12
  store <8 x float> %770, <8 x float>* %696, align 1, !tbaa !12
  %771 = add nuw nsw i64 %601, 96
  %772 = icmp ult i64 %771, %431
  br i1 %772, label %600, label %594

773:                                              ; preds = %779
  br i1 %429, label %774, label %939

774:                                              ; preds = %773
  %775 = trunc i64 %46 to i32
  %776 = mul nsw i32 %428, %775
  %777 = sext i32 %776 to i64
  %778 = zext i32 %428 to i64
  br label %946

779:                                              ; preds = %595, %779
  %780 = phi i64 [ 0, %595 ], [ %937, %779 ]
  %781 = getelementptr inbounds float, float* %5, i64 %780
  %782 = getelementptr inbounds float, float* %781, i64 8
  %783 = bitcast float* %782 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %783, i32 0, i32 1, i32 1)
  %784 = getelementptr inbounds float, float* %3, i64 %780
  %785 = getelementptr inbounds float, float* %784, i64 8
  %786 = bitcast float* %785 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %786, i32 0, i32 1, i32 1)
  %787 = getelementptr inbounds float, float* %781, i64 16
  %788 = bitcast float* %787 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %788, i32 0, i32 1, i32 1)
  %789 = getelementptr inbounds float, float* %784, i64 16
  %790 = bitcast float* %789 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %790, i32 0, i32 1, i32 1)
  %791 = getelementptr inbounds float, float* %781, i64 24
  %792 = bitcast float* %791 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %792, i32 0, i32 1, i32 1)
  %793 = getelementptr inbounds float, float* %784, i64 24
  %794 = bitcast float* %793 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %794, i32 0, i32 1, i32 1)
  %795 = getelementptr inbounds float, float* %781, i64 32
  %796 = bitcast float* %795 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %796, i32 0, i32 1, i32 1)
  %797 = getelementptr inbounds float, float* %784, i64 32
  %798 = bitcast float* %797 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %798, i32 0, i32 1, i32 1)
  %799 = getelementptr inbounds float, float* %781, i64 40
  %800 = bitcast float* %799 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %800, i32 0, i32 1, i32 1)
  %801 = getelementptr inbounds float, float* %784, i64 40
  %802 = bitcast float* %801 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %802, i32 0, i32 1, i32 1)
  %803 = getelementptr inbounds float, float* %781, i64 48
  %804 = bitcast float* %803 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %804, i32 0, i32 1, i32 1)
  %805 = getelementptr inbounds float, float* %784, i64 48
  %806 = bitcast float* %805 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %806, i32 0, i32 1, i32 1)
  %807 = getelementptr inbounds float, float* %781, i64 56
  %808 = bitcast float* %807 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %808, i32 0, i32 1, i32 1)
  %809 = getelementptr inbounds float, float* %784, i64 56
  %810 = bitcast float* %809 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %810, i32 0, i32 1, i32 1)
  %811 = getelementptr inbounds float, float* %781, i64 64
  %812 = bitcast float* %811 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %812, i32 0, i32 1, i32 1)
  %813 = getelementptr inbounds float, float* %784, i64 64
  %814 = bitcast float* %813 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %814, i32 0, i32 1, i32 1)
  %815 = getelementptr inbounds float, float* %781, i64 72
  %816 = bitcast float* %815 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %816, i32 0, i32 1, i32 1)
  %817 = getelementptr inbounds float, float* %784, i64 72
  %818 = bitcast float* %817 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %818, i32 0, i32 1, i32 1)
  %819 = getelementptr inbounds float, float* %781, i64 80
  %820 = bitcast float* %819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %820, i32 0, i32 1, i32 1)
  %821 = getelementptr inbounds float, float* %784, i64 80
  %822 = bitcast float* %821 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %822, i32 0, i32 1, i32 1)
  %823 = getelementptr inbounds float, float* %781, i64 88
  %824 = bitcast float* %823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %824, i32 0, i32 1, i32 1)
  %825 = getelementptr inbounds float, float* %784, i64 88
  %826 = bitcast float* %825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %826, i32 0, i32 1, i32 1)
  %827 = getelementptr inbounds float, float* %781, i64 96
  %828 = bitcast float* %827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %828, i32 0, i32 1, i32 1)
  %829 = getelementptr inbounds float, float* %784, i64 96
  %830 = bitcast float* %829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %830, i32 0, i32 1, i32 1)
  %831 = bitcast float* %781 to <8 x float>*
  %832 = load <8 x float>, <8 x float>* %831, align 1, !tbaa !12
  %833 = or i64 %780, 8
  %834 = getelementptr inbounds float, float* %5, i64 %833
  %835 = bitcast float* %834 to <8 x float>*
  %836 = load <8 x float>, <8 x float>* %835, align 1, !tbaa !12
  %837 = or i64 %780, 16
  %838 = getelementptr inbounds float, float* %5, i64 %837
  %839 = bitcast float* %838 to <8 x float>*
  %840 = load <8 x float>, <8 x float>* %839, align 1, !tbaa !12
  %841 = or i64 %780, 24
  %842 = getelementptr inbounds float, float* %5, i64 %841
  %843 = bitcast float* %842 to <8 x float>*
  %844 = load <8 x float>, <8 x float>* %843, align 1, !tbaa !12
  %845 = add nuw nsw i64 %780, 32
  %846 = getelementptr inbounds float, float* %5, i64 %845
  %847 = bitcast float* %846 to <8 x float>*
  %848 = load <8 x float>, <8 x float>* %847, align 1, !tbaa !12
  %849 = add nuw nsw i64 %780, 40
  %850 = getelementptr inbounds float, float* %5, i64 %849
  %851 = bitcast float* %850 to <8 x float>*
  %852 = load <8 x float>, <8 x float>* %851, align 1, !tbaa !12
  %853 = add nuw nsw i64 %780, 48
  %854 = getelementptr inbounds float, float* %5, i64 %853
  %855 = bitcast float* %854 to <8 x float>*
  %856 = load <8 x float>, <8 x float>* %855, align 1, !tbaa !12
  %857 = add nuw nsw i64 %780, 56
  %858 = getelementptr inbounds float, float* %5, i64 %857
  %859 = bitcast float* %858 to <8 x float>*
  %860 = load <8 x float>, <8 x float>* %859, align 1, !tbaa !12
  %861 = add nuw nsw i64 %780, 64
  %862 = getelementptr inbounds float, float* %5, i64 %861
  %863 = bitcast float* %862 to <8 x float>*
  %864 = load <8 x float>, <8 x float>* %863, align 1, !tbaa !12
  %865 = add nuw nsw i64 %780, 72
  %866 = getelementptr inbounds float, float* %5, i64 %865
  %867 = bitcast float* %866 to <8 x float>*
  %868 = load <8 x float>, <8 x float>* %867, align 1, !tbaa !12
  %869 = add nuw nsw i64 %780, 80
  %870 = getelementptr inbounds float, float* %5, i64 %869
  %871 = bitcast float* %870 to <8 x float>*
  %872 = load <8 x float>, <8 x float>* %871, align 1, !tbaa !12
  %873 = add nuw nsw i64 %780, 88
  %874 = getelementptr inbounds float, float* %5, i64 %873
  %875 = bitcast float* %874 to <8 x float>*
  %876 = load <8 x float>, <8 x float>* %875, align 1, !tbaa !12
  %877 = add nsw i64 %780, %598
  %878 = getelementptr inbounds float, float* %3, i64 %877
  %879 = bitcast float* %878 to <8 x float>*
  %880 = load <8 x float>, <8 x float>* %879, align 1, !tbaa !12
  %881 = add nsw i64 %877, 8
  %882 = getelementptr inbounds float, float* %3, i64 %881
  %883 = bitcast float* %882 to <8 x float>*
  %884 = load <8 x float>, <8 x float>* %883, align 1, !tbaa !12
  %885 = add nsw i64 %877, 16
  %886 = getelementptr inbounds float, float* %3, i64 %885
  %887 = bitcast float* %886 to <8 x float>*
  %888 = load <8 x float>, <8 x float>* %887, align 1, !tbaa !12
  %889 = add nsw i64 %877, 24
  %890 = getelementptr inbounds float, float* %3, i64 %889
  %891 = bitcast float* %890 to <8 x float>*
  %892 = load <8 x float>, <8 x float>* %891, align 1, !tbaa !12
  %893 = add nsw i64 %877, 32
  %894 = getelementptr inbounds float, float* %3, i64 %893
  %895 = bitcast float* %894 to <8 x float>*
  %896 = load <8 x float>, <8 x float>* %895, align 1, !tbaa !12
  %897 = add nsw i64 %877, 40
  %898 = getelementptr inbounds float, float* %3, i64 %897
  %899 = bitcast float* %898 to <8 x float>*
  %900 = load <8 x float>, <8 x float>* %899, align 1, !tbaa !12
  %901 = add nsw i64 %877, 48
  %902 = getelementptr inbounds float, float* %3, i64 %901
  %903 = bitcast float* %902 to <8 x float>*
  %904 = load <8 x float>, <8 x float>* %903, align 1, !tbaa !12
  %905 = add nsw i64 %877, 56
  %906 = getelementptr inbounds float, float* %3, i64 %905
  %907 = bitcast float* %906 to <8 x float>*
  %908 = load <8 x float>, <8 x float>* %907, align 1, !tbaa !12
  %909 = add nsw i64 %877, 64
  %910 = getelementptr inbounds float, float* %3, i64 %909
  %911 = bitcast float* %910 to <8 x float>*
  %912 = load <8 x float>, <8 x float>* %911, align 1, !tbaa !12
  %913 = add nsw i64 %877, 72
  %914 = getelementptr inbounds float, float* %3, i64 %913
  %915 = bitcast float* %914 to <8 x float>*
  %916 = load <8 x float>, <8 x float>* %915, align 1, !tbaa !12
  %917 = add nsw i64 %877, 80
  %918 = getelementptr inbounds float, float* %3, i64 %917
  %919 = bitcast float* %918 to <8 x float>*
  %920 = load <8 x float>, <8 x float>* %919, align 1, !tbaa !12
  %921 = add nsw i64 %877, 88
  %922 = getelementptr inbounds float, float* %3, i64 %921
  %923 = bitcast float* %922 to <8 x float>*
  %924 = load <8 x float>, <8 x float>* %923, align 1, !tbaa !12
  %925 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %880, <8 x float> %45, <8 x float> %832) #10
  %926 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %884, <8 x float> %45, <8 x float> %836) #10
  %927 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %888, <8 x float> %45, <8 x float> %840) #10
  %928 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %892, <8 x float> %45, <8 x float> %844) #10
  %929 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %896, <8 x float> %45, <8 x float> %848) #10
  %930 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %900, <8 x float> %45, <8 x float> %852) #10
  %931 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %904, <8 x float> %45, <8 x float> %856) #10
  %932 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %908, <8 x float> %45, <8 x float> %860) #10
  %933 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %912, <8 x float> %45, <8 x float> %864) #10
  %934 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %916, <8 x float> %45, <8 x float> %868) #10
  %935 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %920, <8 x float> %45, <8 x float> %872) #10
  %936 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %924, <8 x float> %45, <8 x float> %876) #10
  store <8 x float> %925, <8 x float>* %831, align 1, !tbaa !12
  store <8 x float> %926, <8 x float>* %835, align 1, !tbaa !12
  store <8 x float> %927, <8 x float>* %839, align 1, !tbaa !12
  store <8 x float> %928, <8 x float>* %843, align 1, !tbaa !12
  store <8 x float> %929, <8 x float>* %847, align 1, !tbaa !12
  store <8 x float> %930, <8 x float>* %851, align 1, !tbaa !12
  store <8 x float> %931, <8 x float>* %855, align 1, !tbaa !12
  store <8 x float> %932, <8 x float>* %859, align 1, !tbaa !12
  store <8 x float> %933, <8 x float>* %863, align 1, !tbaa !12
  store <8 x float> %934, <8 x float>* %867, align 1, !tbaa !12
  store <8 x float> %935, <8 x float>* %871, align 1, !tbaa !12
  store <8 x float> %936, <8 x float>* %875, align 1, !tbaa !12
  %937 = add nuw nsw i64 %780, 96
  %938 = icmp ult i64 %937, %599
  br i1 %938, label %779, label %773

939:                                              ; preds = %946, %594, %773
  %940 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %941 = icmp sgt i32 %940, 0
  br i1 %941, label %942, label %1797

942:                                              ; preds = %939
  %943 = zext i32 %940 to i64
  %944 = trunc i64 %51 to i32
  %945 = mul nsw i32 %940, %944
  br label %1112

946:                                              ; preds = %774, %946
  %947 = phi i64 [ 0, %774 ], [ %1104, %946 ]
  %948 = getelementptr inbounds float, float* %5, i64 %947
  %949 = getelementptr inbounds float, float* %948, i64 8
  %950 = bitcast float* %949 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %950, i32 0, i32 1, i32 1)
  %951 = getelementptr inbounds float, float* %3, i64 %947
  %952 = getelementptr inbounds float, float* %951, i64 8
  %953 = bitcast float* %952 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %953, i32 0, i32 1, i32 1)
  %954 = getelementptr inbounds float, float* %948, i64 16
  %955 = bitcast float* %954 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %955, i32 0, i32 1, i32 1)
  %956 = getelementptr inbounds float, float* %951, i64 16
  %957 = bitcast float* %956 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %957, i32 0, i32 1, i32 1)
  %958 = getelementptr inbounds float, float* %948, i64 24
  %959 = bitcast float* %958 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %959, i32 0, i32 1, i32 1)
  %960 = getelementptr inbounds float, float* %951, i64 24
  %961 = bitcast float* %960 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %961, i32 0, i32 1, i32 1)
  %962 = getelementptr inbounds float, float* %948, i64 32
  %963 = bitcast float* %962 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %963, i32 0, i32 1, i32 1)
  %964 = getelementptr inbounds float, float* %951, i64 32
  %965 = bitcast float* %964 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %965, i32 0, i32 1, i32 1)
  %966 = getelementptr inbounds float, float* %948, i64 40
  %967 = bitcast float* %966 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %967, i32 0, i32 1, i32 1)
  %968 = getelementptr inbounds float, float* %951, i64 40
  %969 = bitcast float* %968 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %969, i32 0, i32 1, i32 1)
  %970 = getelementptr inbounds float, float* %948, i64 48
  %971 = bitcast float* %970 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %971, i32 0, i32 1, i32 1)
  %972 = getelementptr inbounds float, float* %951, i64 48
  %973 = bitcast float* %972 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %973, i32 0, i32 1, i32 1)
  %974 = getelementptr inbounds float, float* %948, i64 56
  %975 = bitcast float* %974 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %975, i32 0, i32 1, i32 1)
  %976 = getelementptr inbounds float, float* %951, i64 56
  %977 = bitcast float* %976 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %977, i32 0, i32 1, i32 1)
  %978 = getelementptr inbounds float, float* %948, i64 64
  %979 = bitcast float* %978 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %979, i32 0, i32 1, i32 1)
  %980 = getelementptr inbounds float, float* %951, i64 64
  %981 = bitcast float* %980 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %981, i32 0, i32 1, i32 1)
  %982 = getelementptr inbounds float, float* %948, i64 72
  %983 = bitcast float* %982 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %983, i32 0, i32 1, i32 1)
  %984 = getelementptr inbounds float, float* %951, i64 72
  %985 = bitcast float* %984 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %985, i32 0, i32 1, i32 1)
  %986 = getelementptr inbounds float, float* %948, i64 80
  %987 = bitcast float* %986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %987, i32 0, i32 1, i32 1)
  %988 = getelementptr inbounds float, float* %951, i64 80
  %989 = bitcast float* %988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %989, i32 0, i32 1, i32 1)
  %990 = getelementptr inbounds float, float* %948, i64 88
  %991 = bitcast float* %990 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %991, i32 0, i32 1, i32 1)
  %992 = getelementptr inbounds float, float* %951, i64 88
  %993 = bitcast float* %992 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %993, i32 0, i32 1, i32 1)
  %994 = getelementptr inbounds float, float* %948, i64 96
  %995 = bitcast float* %994 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %995, i32 0, i32 1, i32 1)
  %996 = getelementptr inbounds float, float* %951, i64 96
  %997 = bitcast float* %996 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %997, i32 0, i32 1, i32 1)
  %998 = bitcast float* %948 to <8 x float>*
  %999 = load <8 x float>, <8 x float>* %998, align 1, !tbaa !12
  %1000 = or i64 %947, 8
  %1001 = getelementptr inbounds float, float* %5, i64 %1000
  %1002 = bitcast float* %1001 to <8 x float>*
  %1003 = load <8 x float>, <8 x float>* %1002, align 1, !tbaa !12
  %1004 = or i64 %947, 16
  %1005 = getelementptr inbounds float, float* %5, i64 %1004
  %1006 = bitcast float* %1005 to <8 x float>*
  %1007 = load <8 x float>, <8 x float>* %1006, align 1, !tbaa !12
  %1008 = or i64 %947, 24
  %1009 = getelementptr inbounds float, float* %5, i64 %1008
  %1010 = bitcast float* %1009 to <8 x float>*
  %1011 = load <8 x float>, <8 x float>* %1010, align 1, !tbaa !12
  %1012 = add nuw nsw i64 %947, 32
  %1013 = getelementptr inbounds float, float* %5, i64 %1012
  %1014 = bitcast float* %1013 to <8 x float>*
  %1015 = load <8 x float>, <8 x float>* %1014, align 1, !tbaa !12
  %1016 = add nuw nsw i64 %947, 40
  %1017 = getelementptr inbounds float, float* %5, i64 %1016
  %1018 = bitcast float* %1017 to <8 x float>*
  %1019 = load <8 x float>, <8 x float>* %1018, align 1, !tbaa !12
  %1020 = add nuw nsw i64 %947, 48
  %1021 = getelementptr inbounds float, float* %5, i64 %1020
  %1022 = bitcast float* %1021 to <8 x float>*
  %1023 = load <8 x float>, <8 x float>* %1022, align 1, !tbaa !12
  %1024 = add nuw nsw i64 %947, 56
  %1025 = getelementptr inbounds float, float* %5, i64 %1024
  %1026 = bitcast float* %1025 to <8 x float>*
  %1027 = load <8 x float>, <8 x float>* %1026, align 1, !tbaa !12
  %1028 = add nuw nsw i64 %947, 64
  %1029 = getelementptr inbounds float, float* %5, i64 %1028
  %1030 = bitcast float* %1029 to <8 x float>*
  %1031 = load <8 x float>, <8 x float>* %1030, align 1, !tbaa !12
  %1032 = add nuw nsw i64 %947, 72
  %1033 = getelementptr inbounds float, float* %5, i64 %1032
  %1034 = bitcast float* %1033 to <8 x float>*
  %1035 = load <8 x float>, <8 x float>* %1034, align 1, !tbaa !12
  %1036 = add nuw nsw i64 %947, 80
  %1037 = getelementptr inbounds float, float* %5, i64 %1036
  %1038 = bitcast float* %1037 to <8 x float>*
  %1039 = load <8 x float>, <8 x float>* %1038, align 1, !tbaa !12
  %1040 = add nuw nsw i64 %947, 88
  %1041 = getelementptr inbounds float, float* %5, i64 %1040
  %1042 = bitcast float* %1041 to <8 x float>*
  %1043 = load <8 x float>, <8 x float>* %1042, align 1, !tbaa !12
  %1044 = add nsw i64 %947, %777
  %1045 = getelementptr inbounds float, float* %3, i64 %1044
  %1046 = bitcast float* %1045 to <8 x float>*
  %1047 = load <8 x float>, <8 x float>* %1046, align 1, !tbaa !12
  %1048 = add nsw i64 %1044, 8
  %1049 = getelementptr inbounds float, float* %3, i64 %1048
  %1050 = bitcast float* %1049 to <8 x float>*
  %1051 = load <8 x float>, <8 x float>* %1050, align 1, !tbaa !12
  %1052 = add nsw i64 %1044, 16
  %1053 = getelementptr inbounds float, float* %3, i64 %1052
  %1054 = bitcast float* %1053 to <8 x float>*
  %1055 = load <8 x float>, <8 x float>* %1054, align 1, !tbaa !12
  %1056 = add nsw i64 %1044, 24
  %1057 = getelementptr inbounds float, float* %3, i64 %1056
  %1058 = bitcast float* %1057 to <8 x float>*
  %1059 = load <8 x float>, <8 x float>* %1058, align 1, !tbaa !12
  %1060 = add nsw i64 %1044, 32
  %1061 = getelementptr inbounds float, float* %3, i64 %1060
  %1062 = bitcast float* %1061 to <8 x float>*
  %1063 = load <8 x float>, <8 x float>* %1062, align 1, !tbaa !12
  %1064 = add nsw i64 %1044, 40
  %1065 = getelementptr inbounds float, float* %3, i64 %1064
  %1066 = bitcast float* %1065 to <8 x float>*
  %1067 = load <8 x float>, <8 x float>* %1066, align 1, !tbaa !12
  %1068 = add nsw i64 %1044, 48
  %1069 = getelementptr inbounds float, float* %3, i64 %1068
  %1070 = bitcast float* %1069 to <8 x float>*
  %1071 = load <8 x float>, <8 x float>* %1070, align 1, !tbaa !12
  %1072 = add nsw i64 %1044, 56
  %1073 = getelementptr inbounds float, float* %3, i64 %1072
  %1074 = bitcast float* %1073 to <8 x float>*
  %1075 = load <8 x float>, <8 x float>* %1074, align 1, !tbaa !12
  %1076 = add nsw i64 %1044, 64
  %1077 = getelementptr inbounds float, float* %3, i64 %1076
  %1078 = bitcast float* %1077 to <8 x float>*
  %1079 = load <8 x float>, <8 x float>* %1078, align 1, !tbaa !12
  %1080 = add nsw i64 %1044, 72
  %1081 = getelementptr inbounds float, float* %3, i64 %1080
  %1082 = bitcast float* %1081 to <8 x float>*
  %1083 = load <8 x float>, <8 x float>* %1082, align 1, !tbaa !12
  %1084 = add nsw i64 %1044, 80
  %1085 = getelementptr inbounds float, float* %3, i64 %1084
  %1086 = bitcast float* %1085 to <8 x float>*
  %1087 = load <8 x float>, <8 x float>* %1086, align 1, !tbaa !12
  %1088 = add nsw i64 %1044, 88
  %1089 = getelementptr inbounds float, float* %3, i64 %1088
  %1090 = bitcast float* %1089 to <8 x float>*
  %1091 = load <8 x float>, <8 x float>* %1090, align 1, !tbaa !12
  %1092 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1047, <8 x float> %50, <8 x float> %999) #10
  %1093 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1051, <8 x float> %50, <8 x float> %1003) #10
  %1094 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1055, <8 x float> %50, <8 x float> %1007) #10
  %1095 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1059, <8 x float> %50, <8 x float> %1011) #10
  %1096 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1063, <8 x float> %50, <8 x float> %1015) #10
  %1097 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1067, <8 x float> %50, <8 x float> %1019) #10
  %1098 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1071, <8 x float> %50, <8 x float> %1023) #10
  %1099 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1075, <8 x float> %50, <8 x float> %1027) #10
  %1100 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1079, <8 x float> %50, <8 x float> %1031) #10
  %1101 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1083, <8 x float> %50, <8 x float> %1035) #10
  %1102 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1087, <8 x float> %50, <8 x float> %1039) #10
  %1103 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1091, <8 x float> %50, <8 x float> %1043) #10
  store <8 x float> %1092, <8 x float>* %998, align 1, !tbaa !12
  store <8 x float> %1093, <8 x float>* %1002, align 1, !tbaa !12
  store <8 x float> %1094, <8 x float>* %1006, align 1, !tbaa !12
  store <8 x float> %1095, <8 x float>* %1010, align 1, !tbaa !12
  store <8 x float> %1096, <8 x float>* %1014, align 1, !tbaa !12
  store <8 x float> %1097, <8 x float>* %1018, align 1, !tbaa !12
  store <8 x float> %1098, <8 x float>* %1022, align 1, !tbaa !12
  store <8 x float> %1099, <8 x float>* %1026, align 1, !tbaa !12
  store <8 x float> %1100, <8 x float>* %1030, align 1, !tbaa !12
  store <8 x float> %1101, <8 x float>* %1034, align 1, !tbaa !12
  store <8 x float> %1102, <8 x float>* %1038, align 1, !tbaa !12
  store <8 x float> %1103, <8 x float>* %1042, align 1, !tbaa !12
  %1104 = add nuw nsw i64 %947, 96
  %1105 = icmp ult i64 %1104, %778
  br i1 %1105, label %946, label %939

1106:                                             ; preds = %1112
  br i1 %941, label %1107, label %1451

1107:                                             ; preds = %1106
  %1108 = trunc i64 %56 to i32
  %1109 = mul nsw i32 %940, %1108
  %1110 = sext i32 %1109 to i64
  %1111 = zext i32 %940 to i64
  br label %1291

1112:                                             ; preds = %942, %1112
  %1113 = phi i64 [ 0, %942 ], [ %1283, %1112 ]
  %1114 = getelementptr inbounds float, float* %5, i64 %1113
  %1115 = getelementptr inbounds float, float* %1114, i64 8
  %1116 = bitcast float* %1115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1116, i32 0, i32 1, i32 1)
  %1117 = getelementptr inbounds float, float* %3, i64 %1113
  %1118 = getelementptr inbounds float, float* %1117, i64 8
  %1119 = bitcast float* %1118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1119, i32 0, i32 1, i32 1)
  %1120 = getelementptr inbounds float, float* %1114, i64 16
  %1121 = bitcast float* %1120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1121, i32 0, i32 1, i32 1)
  %1122 = getelementptr inbounds float, float* %1117, i64 16
  %1123 = bitcast float* %1122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1123, i32 0, i32 1, i32 1)
  %1124 = getelementptr inbounds float, float* %1114, i64 24
  %1125 = bitcast float* %1124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1125, i32 0, i32 1, i32 1)
  %1126 = getelementptr inbounds float, float* %1117, i64 24
  %1127 = bitcast float* %1126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1127, i32 0, i32 1, i32 1)
  %1128 = getelementptr inbounds float, float* %1114, i64 32
  %1129 = bitcast float* %1128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1129, i32 0, i32 1, i32 1)
  %1130 = getelementptr inbounds float, float* %1117, i64 32
  %1131 = bitcast float* %1130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1131, i32 0, i32 1, i32 1)
  %1132 = getelementptr inbounds float, float* %1114, i64 40
  %1133 = bitcast float* %1132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1133, i32 0, i32 1, i32 1)
  %1134 = getelementptr inbounds float, float* %1117, i64 40
  %1135 = bitcast float* %1134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1135, i32 0, i32 1, i32 1)
  %1136 = getelementptr inbounds float, float* %1114, i64 48
  %1137 = bitcast float* %1136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1137, i32 0, i32 1, i32 1)
  %1138 = getelementptr inbounds float, float* %1117, i64 48
  %1139 = bitcast float* %1138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1139, i32 0, i32 1, i32 1)
  %1140 = getelementptr inbounds float, float* %1114, i64 56
  %1141 = bitcast float* %1140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1141, i32 0, i32 1, i32 1)
  %1142 = getelementptr inbounds float, float* %1117, i64 56
  %1143 = bitcast float* %1142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1143, i32 0, i32 1, i32 1)
  %1144 = getelementptr inbounds float, float* %1114, i64 64
  %1145 = bitcast float* %1144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1145, i32 0, i32 1, i32 1)
  %1146 = getelementptr inbounds float, float* %1117, i64 64
  %1147 = bitcast float* %1146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1147, i32 0, i32 1, i32 1)
  %1148 = getelementptr inbounds float, float* %1114, i64 72
  %1149 = bitcast float* %1148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1149, i32 0, i32 1, i32 1)
  %1150 = getelementptr inbounds float, float* %1117, i64 72
  %1151 = bitcast float* %1150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1151, i32 0, i32 1, i32 1)
  %1152 = getelementptr inbounds float, float* %1114, i64 80
  %1153 = bitcast float* %1152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1153, i32 0, i32 1, i32 1)
  %1154 = getelementptr inbounds float, float* %1117, i64 80
  %1155 = bitcast float* %1154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1155, i32 0, i32 1, i32 1)
  %1156 = getelementptr inbounds float, float* %1114, i64 88
  %1157 = bitcast float* %1156 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1157, i32 0, i32 1, i32 1)
  %1158 = getelementptr inbounds float, float* %1117, i64 88
  %1159 = bitcast float* %1158 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1159, i32 0, i32 1, i32 1)
  %1160 = getelementptr inbounds float, float* %1114, i64 96
  %1161 = bitcast float* %1160 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1161, i32 0, i32 1, i32 1)
  %1162 = getelementptr inbounds float, float* %1117, i64 96
  %1163 = bitcast float* %1162 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1163, i32 0, i32 1, i32 1)
  %1164 = bitcast float* %1114 to <8 x float>*
  %1165 = load <8 x float>, <8 x float>* %1164, align 1, !tbaa !12
  %1166 = or i64 %1113, 8
  %1167 = getelementptr inbounds float, float* %5, i64 %1166
  %1168 = bitcast float* %1167 to <8 x float>*
  %1169 = load <8 x float>, <8 x float>* %1168, align 1, !tbaa !12
  %1170 = or i64 %1113, 16
  %1171 = getelementptr inbounds float, float* %5, i64 %1170
  %1172 = bitcast float* %1171 to <8 x float>*
  %1173 = load <8 x float>, <8 x float>* %1172, align 1, !tbaa !12
  %1174 = or i64 %1113, 24
  %1175 = getelementptr inbounds float, float* %5, i64 %1174
  %1176 = bitcast float* %1175 to <8 x float>*
  %1177 = load <8 x float>, <8 x float>* %1176, align 1, !tbaa !12
  %1178 = add nuw nsw i64 %1113, 32
  %1179 = getelementptr inbounds float, float* %5, i64 %1178
  %1180 = bitcast float* %1179 to <8 x float>*
  %1181 = load <8 x float>, <8 x float>* %1180, align 1, !tbaa !12
  %1182 = add nuw nsw i64 %1113, 40
  %1183 = getelementptr inbounds float, float* %5, i64 %1182
  %1184 = bitcast float* %1183 to <8 x float>*
  %1185 = load <8 x float>, <8 x float>* %1184, align 1, !tbaa !12
  %1186 = add nuw nsw i64 %1113, 48
  %1187 = getelementptr inbounds float, float* %5, i64 %1186
  %1188 = bitcast float* %1187 to <8 x float>*
  %1189 = load <8 x float>, <8 x float>* %1188, align 1, !tbaa !12
  %1190 = add nuw nsw i64 %1113, 56
  %1191 = getelementptr inbounds float, float* %5, i64 %1190
  %1192 = bitcast float* %1191 to <8 x float>*
  %1193 = load <8 x float>, <8 x float>* %1192, align 1, !tbaa !12
  %1194 = add nuw nsw i64 %1113, 64
  %1195 = getelementptr inbounds float, float* %5, i64 %1194
  %1196 = bitcast float* %1195 to <8 x float>*
  %1197 = load <8 x float>, <8 x float>* %1196, align 1, !tbaa !12
  %1198 = add nuw nsw i64 %1113, 72
  %1199 = getelementptr inbounds float, float* %5, i64 %1198
  %1200 = bitcast float* %1199 to <8 x float>*
  %1201 = load <8 x float>, <8 x float>* %1200, align 1, !tbaa !12
  %1202 = add nuw nsw i64 %1113, 80
  %1203 = getelementptr inbounds float, float* %5, i64 %1202
  %1204 = bitcast float* %1203 to <8 x float>*
  %1205 = load <8 x float>, <8 x float>* %1204, align 1, !tbaa !12
  %1206 = add nuw nsw i64 %1113, 88
  %1207 = getelementptr inbounds float, float* %5, i64 %1206
  %1208 = bitcast float* %1207 to <8 x float>*
  %1209 = load <8 x float>, <8 x float>* %1208, align 1, !tbaa !12
  %1210 = trunc i64 %1113 to i32
  %1211 = add nsw i32 %945, %1210
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds float, float* %3, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nsw i32 %1211, 8
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i32 %1211, 16
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i32 %1211, 24
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i32 %1211, 32
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i32 %1211, 40
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i32 %1211, 48
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nsw i32 %1211, 56
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds float, float* %3, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = add nsw i32 %1211, 64
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds float, float* %3, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = add nsw i32 %1211, 72
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds float, float* %3, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nsw i32 %1211, 80
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds float, float* %3, i64 %1262
  %1264 = bitcast float* %1263 to <8 x float>*
  %1265 = load <8 x float>, <8 x float>* %1264, align 1, !tbaa !12
  %1266 = add nsw i32 %1211, 88
  %1267 = sext i32 %1266 to i64
  %1268 = getelementptr inbounds float, float* %3, i64 %1267
  %1269 = bitcast float* %1268 to <8 x float>*
  %1270 = load <8 x float>, <8 x float>* %1269, align 1, !tbaa !12
  %1271 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1215, <8 x float> %55, <8 x float> %1165) #10
  %1272 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %55, <8 x float> %1169) #10
  %1273 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %55, <8 x float> %1173) #10
  %1274 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %55, <8 x float> %1177) #10
  %1275 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %55, <8 x float> %1181) #10
  %1276 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %55, <8 x float> %1185) #10
  %1277 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %55, <8 x float> %1189) #10
  %1278 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1250, <8 x float> %55, <8 x float> %1193) #10
  %1279 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1255, <8 x float> %55, <8 x float> %1197) #10
  %1280 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1260, <8 x float> %55, <8 x float> %1201) #10
  %1281 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1265, <8 x float> %55, <8 x float> %1205) #10
  %1282 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1270, <8 x float> %55, <8 x float> %1209) #10
  store <8 x float> %1271, <8 x float>* %1164, align 1, !tbaa !12
  store <8 x float> %1272, <8 x float>* %1168, align 1, !tbaa !12
  store <8 x float> %1273, <8 x float>* %1172, align 1, !tbaa !12
  store <8 x float> %1274, <8 x float>* %1176, align 1, !tbaa !12
  store <8 x float> %1275, <8 x float>* %1180, align 1, !tbaa !12
  store <8 x float> %1276, <8 x float>* %1184, align 1, !tbaa !12
  store <8 x float> %1277, <8 x float>* %1188, align 1, !tbaa !12
  store <8 x float> %1278, <8 x float>* %1192, align 1, !tbaa !12
  store <8 x float> %1279, <8 x float>* %1196, align 1, !tbaa !12
  store <8 x float> %1280, <8 x float>* %1200, align 1, !tbaa !12
  store <8 x float> %1281, <8 x float>* %1204, align 1, !tbaa !12
  store <8 x float> %1282, <8 x float>* %1208, align 1, !tbaa !12
  %1283 = add nuw nsw i64 %1113, 96
  %1284 = icmp ult i64 %1283, %943
  br i1 %1284, label %1112, label %1106

1285:                                             ; preds = %1291
  br i1 %941, label %1286, label %1451

1286:                                             ; preds = %1285
  %1287 = trunc i64 %61 to i32
  %1288 = mul nsw i32 %940, %1287
  %1289 = sext i32 %1288 to i64
  %1290 = zext i32 %940 to i64
  br label %1458

1291:                                             ; preds = %1107, %1291
  %1292 = phi i64 [ 0, %1107 ], [ %1449, %1291 ]
  %1293 = getelementptr inbounds float, float* %5, i64 %1292
  %1294 = getelementptr inbounds float, float* %1293, i64 8
  %1295 = bitcast float* %1294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1295, i32 0, i32 1, i32 1)
  %1296 = getelementptr inbounds float, float* %3, i64 %1292
  %1297 = getelementptr inbounds float, float* %1296, i64 8
  %1298 = bitcast float* %1297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1298, i32 0, i32 1, i32 1)
  %1299 = getelementptr inbounds float, float* %1293, i64 16
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %1296, i64 16
  %1302 = bitcast float* %1301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1302, i32 0, i32 1, i32 1)
  %1303 = getelementptr inbounds float, float* %1293, i64 24
  %1304 = bitcast float* %1303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1304, i32 0, i32 1, i32 1)
  %1305 = getelementptr inbounds float, float* %1296, i64 24
  %1306 = bitcast float* %1305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1306, i32 0, i32 1, i32 1)
  %1307 = getelementptr inbounds float, float* %1293, i64 32
  %1308 = bitcast float* %1307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1308, i32 0, i32 1, i32 1)
  %1309 = getelementptr inbounds float, float* %1296, i64 32
  %1310 = bitcast float* %1309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1310, i32 0, i32 1, i32 1)
  %1311 = getelementptr inbounds float, float* %1293, i64 40
  %1312 = bitcast float* %1311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1312, i32 0, i32 1, i32 1)
  %1313 = getelementptr inbounds float, float* %1296, i64 40
  %1314 = bitcast float* %1313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1314, i32 0, i32 1, i32 1)
  %1315 = getelementptr inbounds float, float* %1293, i64 48
  %1316 = bitcast float* %1315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1316, i32 0, i32 1, i32 1)
  %1317 = getelementptr inbounds float, float* %1296, i64 48
  %1318 = bitcast float* %1317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1318, i32 0, i32 1, i32 1)
  %1319 = getelementptr inbounds float, float* %1293, i64 56
  %1320 = bitcast float* %1319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1320, i32 0, i32 1, i32 1)
  %1321 = getelementptr inbounds float, float* %1296, i64 56
  %1322 = bitcast float* %1321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1322, i32 0, i32 1, i32 1)
  %1323 = getelementptr inbounds float, float* %1293, i64 64
  %1324 = bitcast float* %1323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1324, i32 0, i32 1, i32 1)
  %1325 = getelementptr inbounds float, float* %1296, i64 64
  %1326 = bitcast float* %1325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1326, i32 0, i32 1, i32 1)
  %1327 = getelementptr inbounds float, float* %1293, i64 72
  %1328 = bitcast float* %1327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1328, i32 0, i32 1, i32 1)
  %1329 = getelementptr inbounds float, float* %1296, i64 72
  %1330 = bitcast float* %1329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1330, i32 0, i32 1, i32 1)
  %1331 = getelementptr inbounds float, float* %1293, i64 80
  %1332 = bitcast float* %1331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1332, i32 0, i32 1, i32 1)
  %1333 = getelementptr inbounds float, float* %1296, i64 80
  %1334 = bitcast float* %1333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1334, i32 0, i32 1, i32 1)
  %1335 = getelementptr inbounds float, float* %1293, i64 88
  %1336 = bitcast float* %1335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1336, i32 0, i32 1, i32 1)
  %1337 = getelementptr inbounds float, float* %1296, i64 88
  %1338 = bitcast float* %1337 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1338, i32 0, i32 1, i32 1)
  %1339 = getelementptr inbounds float, float* %1293, i64 96
  %1340 = bitcast float* %1339 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1340, i32 0, i32 1, i32 1)
  %1341 = getelementptr inbounds float, float* %1296, i64 96
  %1342 = bitcast float* %1341 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1342, i32 0, i32 1, i32 1)
  %1343 = bitcast float* %1293 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = or i64 %1292, 8
  %1346 = getelementptr inbounds float, float* %5, i64 %1345
  %1347 = bitcast float* %1346 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = or i64 %1292, 16
  %1350 = getelementptr inbounds float, float* %5, i64 %1349
  %1351 = bitcast float* %1350 to <8 x float>*
  %1352 = load <8 x float>, <8 x float>* %1351, align 1, !tbaa !12
  %1353 = or i64 %1292, 24
  %1354 = getelementptr inbounds float, float* %5, i64 %1353
  %1355 = bitcast float* %1354 to <8 x float>*
  %1356 = load <8 x float>, <8 x float>* %1355, align 1, !tbaa !12
  %1357 = add nuw nsw i64 %1292, 32
  %1358 = getelementptr inbounds float, float* %5, i64 %1357
  %1359 = bitcast float* %1358 to <8 x float>*
  %1360 = load <8 x float>, <8 x float>* %1359, align 1, !tbaa !12
  %1361 = add nuw nsw i64 %1292, 40
  %1362 = getelementptr inbounds float, float* %5, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nuw nsw i64 %1292, 48
  %1366 = getelementptr inbounds float, float* %5, i64 %1365
  %1367 = bitcast float* %1366 to <8 x float>*
  %1368 = load <8 x float>, <8 x float>* %1367, align 1, !tbaa !12
  %1369 = add nuw nsw i64 %1292, 56
  %1370 = getelementptr inbounds float, float* %5, i64 %1369
  %1371 = bitcast float* %1370 to <8 x float>*
  %1372 = load <8 x float>, <8 x float>* %1371, align 1, !tbaa !12
  %1373 = add nuw nsw i64 %1292, 64
  %1374 = getelementptr inbounds float, float* %5, i64 %1373
  %1375 = bitcast float* %1374 to <8 x float>*
  %1376 = load <8 x float>, <8 x float>* %1375, align 1, !tbaa !12
  %1377 = add nuw nsw i64 %1292, 72
  %1378 = getelementptr inbounds float, float* %5, i64 %1377
  %1379 = bitcast float* %1378 to <8 x float>*
  %1380 = load <8 x float>, <8 x float>* %1379, align 1, !tbaa !12
  %1381 = add nuw nsw i64 %1292, 80
  %1382 = getelementptr inbounds float, float* %5, i64 %1381
  %1383 = bitcast float* %1382 to <8 x float>*
  %1384 = load <8 x float>, <8 x float>* %1383, align 1, !tbaa !12
  %1385 = add nuw nsw i64 %1292, 88
  %1386 = getelementptr inbounds float, float* %5, i64 %1385
  %1387 = bitcast float* %1386 to <8 x float>*
  %1388 = load <8 x float>, <8 x float>* %1387, align 1, !tbaa !12
  %1389 = add nsw i64 %1292, %1110
  %1390 = getelementptr inbounds float, float* %3, i64 %1389
  %1391 = bitcast float* %1390 to <8 x float>*
  %1392 = load <8 x float>, <8 x float>* %1391, align 1, !tbaa !12
  %1393 = add nsw i64 %1389, 8
  %1394 = getelementptr inbounds float, float* %3, i64 %1393
  %1395 = bitcast float* %1394 to <8 x float>*
  %1396 = load <8 x float>, <8 x float>* %1395, align 1, !tbaa !12
  %1397 = add nsw i64 %1389, 16
  %1398 = getelementptr inbounds float, float* %3, i64 %1397
  %1399 = bitcast float* %1398 to <8 x float>*
  %1400 = load <8 x float>, <8 x float>* %1399, align 1, !tbaa !12
  %1401 = add nsw i64 %1389, 24
  %1402 = getelementptr inbounds float, float* %3, i64 %1401
  %1403 = bitcast float* %1402 to <8 x float>*
  %1404 = load <8 x float>, <8 x float>* %1403, align 1, !tbaa !12
  %1405 = add nsw i64 %1389, 32
  %1406 = getelementptr inbounds float, float* %3, i64 %1405
  %1407 = bitcast float* %1406 to <8 x float>*
  %1408 = load <8 x float>, <8 x float>* %1407, align 1, !tbaa !12
  %1409 = add nsw i64 %1389, 40
  %1410 = getelementptr inbounds float, float* %3, i64 %1409
  %1411 = bitcast float* %1410 to <8 x float>*
  %1412 = load <8 x float>, <8 x float>* %1411, align 1, !tbaa !12
  %1413 = add nsw i64 %1389, 48
  %1414 = getelementptr inbounds float, float* %3, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = add nsw i64 %1389, 56
  %1418 = getelementptr inbounds float, float* %3, i64 %1417
  %1419 = bitcast float* %1418 to <8 x float>*
  %1420 = load <8 x float>, <8 x float>* %1419, align 1, !tbaa !12
  %1421 = add nsw i64 %1389, 64
  %1422 = getelementptr inbounds float, float* %3, i64 %1421
  %1423 = bitcast float* %1422 to <8 x float>*
  %1424 = load <8 x float>, <8 x float>* %1423, align 1, !tbaa !12
  %1425 = add nsw i64 %1389, 72
  %1426 = getelementptr inbounds float, float* %3, i64 %1425
  %1427 = bitcast float* %1426 to <8 x float>*
  %1428 = load <8 x float>, <8 x float>* %1427, align 1, !tbaa !12
  %1429 = add nsw i64 %1389, 80
  %1430 = getelementptr inbounds float, float* %3, i64 %1429
  %1431 = bitcast float* %1430 to <8 x float>*
  %1432 = load <8 x float>, <8 x float>* %1431, align 1, !tbaa !12
  %1433 = add nsw i64 %1389, 88
  %1434 = getelementptr inbounds float, float* %3, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1392, <8 x float> %60, <8 x float> %1344) #10
  %1438 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1396, <8 x float> %60, <8 x float> %1348) #10
  %1439 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1400, <8 x float> %60, <8 x float> %1352) #10
  %1440 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1404, <8 x float> %60, <8 x float> %1356) #10
  %1441 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1408, <8 x float> %60, <8 x float> %1360) #10
  %1442 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1412, <8 x float> %60, <8 x float> %1364) #10
  %1443 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1416, <8 x float> %60, <8 x float> %1368) #10
  %1444 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1420, <8 x float> %60, <8 x float> %1372) #10
  %1445 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1424, <8 x float> %60, <8 x float> %1376) #10
  %1446 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1428, <8 x float> %60, <8 x float> %1380) #10
  %1447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1432, <8 x float> %60, <8 x float> %1384) #10
  %1448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1436, <8 x float> %60, <8 x float> %1388) #10
  store <8 x float> %1437, <8 x float>* %1343, align 1, !tbaa !12
  store <8 x float> %1438, <8 x float>* %1347, align 1, !tbaa !12
  store <8 x float> %1439, <8 x float>* %1351, align 1, !tbaa !12
  store <8 x float> %1440, <8 x float>* %1355, align 1, !tbaa !12
  store <8 x float> %1441, <8 x float>* %1359, align 1, !tbaa !12
  store <8 x float> %1442, <8 x float>* %1363, align 1, !tbaa !12
  store <8 x float> %1443, <8 x float>* %1367, align 1, !tbaa !12
  store <8 x float> %1444, <8 x float>* %1371, align 1, !tbaa !12
  store <8 x float> %1445, <8 x float>* %1375, align 1, !tbaa !12
  store <8 x float> %1446, <8 x float>* %1379, align 1, !tbaa !12
  store <8 x float> %1447, <8 x float>* %1383, align 1, !tbaa !12
  store <8 x float> %1448, <8 x float>* %1387, align 1, !tbaa !12
  %1449 = add nuw nsw i64 %1292, 96
  %1450 = icmp ult i64 %1449, %1111
  br i1 %1450, label %1291, label %1285

1451:                                             ; preds = %1458, %1106, %1285
  %1452 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1453 = icmp sgt i32 %1452, 0
  br i1 %1453, label %1454, label %1797

1454:                                             ; preds = %1451
  %1455 = zext i32 %1452 to i64
  %1456 = trunc i64 %66 to i32
  %1457 = mul nsw i32 %1452, %1456
  br label %1624

1458:                                             ; preds = %1286, %1458
  %1459 = phi i64 [ 0, %1286 ], [ %1616, %1458 ]
  %1460 = getelementptr inbounds float, float* %5, i64 %1459
  %1461 = getelementptr inbounds float, float* %1460, i64 8
  %1462 = bitcast float* %1461 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1462, i32 0, i32 1, i32 1)
  %1463 = getelementptr inbounds float, float* %3, i64 %1459
  %1464 = getelementptr inbounds float, float* %1463, i64 8
  %1465 = bitcast float* %1464 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1465, i32 0, i32 1, i32 1)
  %1466 = getelementptr inbounds float, float* %1460, i64 16
  %1467 = bitcast float* %1466 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1467, i32 0, i32 1, i32 1)
  %1468 = getelementptr inbounds float, float* %1463, i64 16
  %1469 = bitcast float* %1468 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1469, i32 0, i32 1, i32 1)
  %1470 = getelementptr inbounds float, float* %1460, i64 24
  %1471 = bitcast float* %1470 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1471, i32 0, i32 1, i32 1)
  %1472 = getelementptr inbounds float, float* %1463, i64 24
  %1473 = bitcast float* %1472 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1473, i32 0, i32 1, i32 1)
  %1474 = getelementptr inbounds float, float* %1460, i64 32
  %1475 = bitcast float* %1474 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1475, i32 0, i32 1, i32 1)
  %1476 = getelementptr inbounds float, float* %1463, i64 32
  %1477 = bitcast float* %1476 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1477, i32 0, i32 1, i32 1)
  %1478 = getelementptr inbounds float, float* %1460, i64 40
  %1479 = bitcast float* %1478 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1479, i32 0, i32 1, i32 1)
  %1480 = getelementptr inbounds float, float* %1463, i64 40
  %1481 = bitcast float* %1480 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1481, i32 0, i32 1, i32 1)
  %1482 = getelementptr inbounds float, float* %1460, i64 48
  %1483 = bitcast float* %1482 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1483, i32 0, i32 1, i32 1)
  %1484 = getelementptr inbounds float, float* %1463, i64 48
  %1485 = bitcast float* %1484 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1485, i32 0, i32 1, i32 1)
  %1486 = getelementptr inbounds float, float* %1460, i64 56
  %1487 = bitcast float* %1486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1487, i32 0, i32 1, i32 1)
  %1488 = getelementptr inbounds float, float* %1463, i64 56
  %1489 = bitcast float* %1488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1489, i32 0, i32 1, i32 1)
  %1490 = getelementptr inbounds float, float* %1460, i64 64
  %1491 = bitcast float* %1490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1491, i32 0, i32 1, i32 1)
  %1492 = getelementptr inbounds float, float* %1463, i64 64
  %1493 = bitcast float* %1492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1493, i32 0, i32 1, i32 1)
  %1494 = getelementptr inbounds float, float* %1460, i64 72
  %1495 = bitcast float* %1494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1495, i32 0, i32 1, i32 1)
  %1496 = getelementptr inbounds float, float* %1463, i64 72
  %1497 = bitcast float* %1496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1497, i32 0, i32 1, i32 1)
  %1498 = getelementptr inbounds float, float* %1460, i64 80
  %1499 = bitcast float* %1498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1499, i32 0, i32 1, i32 1)
  %1500 = getelementptr inbounds float, float* %1463, i64 80
  %1501 = bitcast float* %1500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1501, i32 0, i32 1, i32 1)
  %1502 = getelementptr inbounds float, float* %1460, i64 88
  %1503 = bitcast float* %1502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1503, i32 0, i32 1, i32 1)
  %1504 = getelementptr inbounds float, float* %1463, i64 88
  %1505 = bitcast float* %1504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1505, i32 0, i32 1, i32 1)
  %1506 = getelementptr inbounds float, float* %1460, i64 96
  %1507 = bitcast float* %1506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1507, i32 0, i32 1, i32 1)
  %1508 = getelementptr inbounds float, float* %1463, i64 96
  %1509 = bitcast float* %1508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1509, i32 0, i32 1, i32 1)
  %1510 = bitcast float* %1460 to <8 x float>*
  %1511 = load <8 x float>, <8 x float>* %1510, align 1, !tbaa !12
  %1512 = or i64 %1459, 8
  %1513 = getelementptr inbounds float, float* %5, i64 %1512
  %1514 = bitcast float* %1513 to <8 x float>*
  %1515 = load <8 x float>, <8 x float>* %1514, align 1, !tbaa !12
  %1516 = or i64 %1459, 16
  %1517 = getelementptr inbounds float, float* %5, i64 %1516
  %1518 = bitcast float* %1517 to <8 x float>*
  %1519 = load <8 x float>, <8 x float>* %1518, align 1, !tbaa !12
  %1520 = or i64 %1459, 24
  %1521 = getelementptr inbounds float, float* %5, i64 %1520
  %1522 = bitcast float* %1521 to <8 x float>*
  %1523 = load <8 x float>, <8 x float>* %1522, align 1, !tbaa !12
  %1524 = add nuw nsw i64 %1459, 32
  %1525 = getelementptr inbounds float, float* %5, i64 %1524
  %1526 = bitcast float* %1525 to <8 x float>*
  %1527 = load <8 x float>, <8 x float>* %1526, align 1, !tbaa !12
  %1528 = add nuw nsw i64 %1459, 40
  %1529 = getelementptr inbounds float, float* %5, i64 %1528
  %1530 = bitcast float* %1529 to <8 x float>*
  %1531 = load <8 x float>, <8 x float>* %1530, align 1, !tbaa !12
  %1532 = add nuw nsw i64 %1459, 48
  %1533 = getelementptr inbounds float, float* %5, i64 %1532
  %1534 = bitcast float* %1533 to <8 x float>*
  %1535 = load <8 x float>, <8 x float>* %1534, align 1, !tbaa !12
  %1536 = add nuw nsw i64 %1459, 56
  %1537 = getelementptr inbounds float, float* %5, i64 %1536
  %1538 = bitcast float* %1537 to <8 x float>*
  %1539 = load <8 x float>, <8 x float>* %1538, align 1, !tbaa !12
  %1540 = add nuw nsw i64 %1459, 64
  %1541 = getelementptr inbounds float, float* %5, i64 %1540
  %1542 = bitcast float* %1541 to <8 x float>*
  %1543 = load <8 x float>, <8 x float>* %1542, align 1, !tbaa !12
  %1544 = add nuw nsw i64 %1459, 72
  %1545 = getelementptr inbounds float, float* %5, i64 %1544
  %1546 = bitcast float* %1545 to <8 x float>*
  %1547 = load <8 x float>, <8 x float>* %1546, align 1, !tbaa !12
  %1548 = add nuw nsw i64 %1459, 80
  %1549 = getelementptr inbounds float, float* %5, i64 %1548
  %1550 = bitcast float* %1549 to <8 x float>*
  %1551 = load <8 x float>, <8 x float>* %1550, align 1, !tbaa !12
  %1552 = add nuw nsw i64 %1459, 88
  %1553 = getelementptr inbounds float, float* %5, i64 %1552
  %1554 = bitcast float* %1553 to <8 x float>*
  %1555 = load <8 x float>, <8 x float>* %1554, align 1, !tbaa !12
  %1556 = add nsw i64 %1459, %1289
  %1557 = getelementptr inbounds float, float* %3, i64 %1556
  %1558 = bitcast float* %1557 to <8 x float>*
  %1559 = load <8 x float>, <8 x float>* %1558, align 1, !tbaa !12
  %1560 = add nsw i64 %1556, 8
  %1561 = getelementptr inbounds float, float* %3, i64 %1560
  %1562 = bitcast float* %1561 to <8 x float>*
  %1563 = load <8 x float>, <8 x float>* %1562, align 1, !tbaa !12
  %1564 = add nsw i64 %1556, 16
  %1565 = getelementptr inbounds float, float* %3, i64 %1564
  %1566 = bitcast float* %1565 to <8 x float>*
  %1567 = load <8 x float>, <8 x float>* %1566, align 1, !tbaa !12
  %1568 = add nsw i64 %1556, 24
  %1569 = getelementptr inbounds float, float* %3, i64 %1568
  %1570 = bitcast float* %1569 to <8 x float>*
  %1571 = load <8 x float>, <8 x float>* %1570, align 1, !tbaa !12
  %1572 = add nsw i64 %1556, 32
  %1573 = getelementptr inbounds float, float* %3, i64 %1572
  %1574 = bitcast float* %1573 to <8 x float>*
  %1575 = load <8 x float>, <8 x float>* %1574, align 1, !tbaa !12
  %1576 = add nsw i64 %1556, 40
  %1577 = getelementptr inbounds float, float* %3, i64 %1576
  %1578 = bitcast float* %1577 to <8 x float>*
  %1579 = load <8 x float>, <8 x float>* %1578, align 1, !tbaa !12
  %1580 = add nsw i64 %1556, 48
  %1581 = getelementptr inbounds float, float* %3, i64 %1580
  %1582 = bitcast float* %1581 to <8 x float>*
  %1583 = load <8 x float>, <8 x float>* %1582, align 1, !tbaa !12
  %1584 = add nsw i64 %1556, 56
  %1585 = getelementptr inbounds float, float* %3, i64 %1584
  %1586 = bitcast float* %1585 to <8 x float>*
  %1587 = load <8 x float>, <8 x float>* %1586, align 1, !tbaa !12
  %1588 = add nsw i64 %1556, 64
  %1589 = getelementptr inbounds float, float* %3, i64 %1588
  %1590 = bitcast float* %1589 to <8 x float>*
  %1591 = load <8 x float>, <8 x float>* %1590, align 1, !tbaa !12
  %1592 = add nsw i64 %1556, 72
  %1593 = getelementptr inbounds float, float* %3, i64 %1592
  %1594 = bitcast float* %1593 to <8 x float>*
  %1595 = load <8 x float>, <8 x float>* %1594, align 1, !tbaa !12
  %1596 = add nsw i64 %1556, 80
  %1597 = getelementptr inbounds float, float* %3, i64 %1596
  %1598 = bitcast float* %1597 to <8 x float>*
  %1599 = load <8 x float>, <8 x float>* %1598, align 1, !tbaa !12
  %1600 = add nsw i64 %1556, 88
  %1601 = getelementptr inbounds float, float* %3, i64 %1600
  %1602 = bitcast float* %1601 to <8 x float>*
  %1603 = load <8 x float>, <8 x float>* %1602, align 1, !tbaa !12
  %1604 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1559, <8 x float> %65, <8 x float> %1511) #10
  %1605 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1563, <8 x float> %65, <8 x float> %1515) #10
  %1606 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1567, <8 x float> %65, <8 x float> %1519) #10
  %1607 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1571, <8 x float> %65, <8 x float> %1523) #10
  %1608 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1575, <8 x float> %65, <8 x float> %1527) #10
  %1609 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1579, <8 x float> %65, <8 x float> %1531) #10
  %1610 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1583, <8 x float> %65, <8 x float> %1535) #10
  %1611 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1587, <8 x float> %65, <8 x float> %1539) #10
  %1612 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1591, <8 x float> %65, <8 x float> %1543) #10
  %1613 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1595, <8 x float> %65, <8 x float> %1547) #10
  %1614 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1599, <8 x float> %65, <8 x float> %1551) #10
  %1615 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1603, <8 x float> %65, <8 x float> %1555) #10
  store <8 x float> %1604, <8 x float>* %1510, align 1, !tbaa !12
  store <8 x float> %1605, <8 x float>* %1514, align 1, !tbaa !12
  store <8 x float> %1606, <8 x float>* %1518, align 1, !tbaa !12
  store <8 x float> %1607, <8 x float>* %1522, align 1, !tbaa !12
  store <8 x float> %1608, <8 x float>* %1526, align 1, !tbaa !12
  store <8 x float> %1609, <8 x float>* %1530, align 1, !tbaa !12
  store <8 x float> %1610, <8 x float>* %1534, align 1, !tbaa !12
  store <8 x float> %1611, <8 x float>* %1538, align 1, !tbaa !12
  store <8 x float> %1612, <8 x float>* %1542, align 1, !tbaa !12
  store <8 x float> %1613, <8 x float>* %1546, align 1, !tbaa !12
  store <8 x float> %1614, <8 x float>* %1550, align 1, !tbaa !12
  store <8 x float> %1615, <8 x float>* %1554, align 1, !tbaa !12
  %1616 = add nuw nsw i64 %1459, 96
  %1617 = icmp ult i64 %1616, %1290
  br i1 %1617, label %1458, label %1451

1618:                                             ; preds = %1624
  br i1 %1453, label %1619, label %1797

1619:                                             ; preds = %1618
  %1620 = trunc i64 %71 to i32
  %1621 = mul nsw i32 %1452, %1620
  %1622 = sext i32 %1621 to i64
  %1623 = zext i32 %1452 to i64
  br label %1802

1624:                                             ; preds = %1454, %1624
  %1625 = phi i64 [ 0, %1454 ], [ %1795, %1624 ]
  %1626 = getelementptr inbounds float, float* %5, i64 %1625
  %1627 = getelementptr inbounds float, float* %1626, i64 8
  %1628 = bitcast float* %1627 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1628, i32 0, i32 1, i32 1)
  %1629 = getelementptr inbounds float, float* %3, i64 %1625
  %1630 = getelementptr inbounds float, float* %1629, i64 8
  %1631 = bitcast float* %1630 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1631, i32 0, i32 1, i32 1)
  %1632 = getelementptr inbounds float, float* %1626, i64 16
  %1633 = bitcast float* %1632 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1633, i32 0, i32 1, i32 1)
  %1634 = getelementptr inbounds float, float* %1629, i64 16
  %1635 = bitcast float* %1634 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1635, i32 0, i32 1, i32 1)
  %1636 = getelementptr inbounds float, float* %1626, i64 24
  %1637 = bitcast float* %1636 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1637, i32 0, i32 1, i32 1)
  %1638 = getelementptr inbounds float, float* %1629, i64 24
  %1639 = bitcast float* %1638 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1639, i32 0, i32 1, i32 1)
  %1640 = getelementptr inbounds float, float* %1626, i64 32
  %1641 = bitcast float* %1640 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1641, i32 0, i32 1, i32 1)
  %1642 = getelementptr inbounds float, float* %1629, i64 32
  %1643 = bitcast float* %1642 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1643, i32 0, i32 1, i32 1)
  %1644 = getelementptr inbounds float, float* %1626, i64 40
  %1645 = bitcast float* %1644 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1645, i32 0, i32 1, i32 1)
  %1646 = getelementptr inbounds float, float* %1629, i64 40
  %1647 = bitcast float* %1646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1647, i32 0, i32 1, i32 1)
  %1648 = getelementptr inbounds float, float* %1626, i64 48
  %1649 = bitcast float* %1648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1649, i32 0, i32 1, i32 1)
  %1650 = getelementptr inbounds float, float* %1629, i64 48
  %1651 = bitcast float* %1650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1651, i32 0, i32 1, i32 1)
  %1652 = getelementptr inbounds float, float* %1626, i64 56
  %1653 = bitcast float* %1652 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1653, i32 0, i32 1, i32 1)
  %1654 = getelementptr inbounds float, float* %1629, i64 56
  %1655 = bitcast float* %1654 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1655, i32 0, i32 1, i32 1)
  %1656 = getelementptr inbounds float, float* %1626, i64 64
  %1657 = bitcast float* %1656 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1657, i32 0, i32 1, i32 1)
  %1658 = getelementptr inbounds float, float* %1629, i64 64
  %1659 = bitcast float* %1658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1659, i32 0, i32 1, i32 1)
  %1660 = getelementptr inbounds float, float* %1626, i64 72
  %1661 = bitcast float* %1660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1661, i32 0, i32 1, i32 1)
  %1662 = getelementptr inbounds float, float* %1629, i64 72
  %1663 = bitcast float* %1662 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1663, i32 0, i32 1, i32 1)
  %1664 = getelementptr inbounds float, float* %1626, i64 80
  %1665 = bitcast float* %1664 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1665, i32 0, i32 1, i32 1)
  %1666 = getelementptr inbounds float, float* %1629, i64 80
  %1667 = bitcast float* %1666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1667, i32 0, i32 1, i32 1)
  %1668 = getelementptr inbounds float, float* %1626, i64 88
  %1669 = bitcast float* %1668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1669, i32 0, i32 1, i32 1)
  %1670 = getelementptr inbounds float, float* %1629, i64 88
  %1671 = bitcast float* %1670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1671, i32 0, i32 1, i32 1)
  %1672 = getelementptr inbounds float, float* %1626, i64 96
  %1673 = bitcast float* %1672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1673, i32 0, i32 1, i32 1)
  %1674 = getelementptr inbounds float, float* %1629, i64 96
  %1675 = bitcast float* %1674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1675, i32 0, i32 1, i32 1)
  %1676 = bitcast float* %1626 to <8 x float>*
  %1677 = load <8 x float>, <8 x float>* %1676, align 1, !tbaa !12
  %1678 = or i64 %1625, 8
  %1679 = getelementptr inbounds float, float* %5, i64 %1678
  %1680 = bitcast float* %1679 to <8 x float>*
  %1681 = load <8 x float>, <8 x float>* %1680, align 1, !tbaa !12
  %1682 = or i64 %1625, 16
  %1683 = getelementptr inbounds float, float* %5, i64 %1682
  %1684 = bitcast float* %1683 to <8 x float>*
  %1685 = load <8 x float>, <8 x float>* %1684, align 1, !tbaa !12
  %1686 = or i64 %1625, 24
  %1687 = getelementptr inbounds float, float* %5, i64 %1686
  %1688 = bitcast float* %1687 to <8 x float>*
  %1689 = load <8 x float>, <8 x float>* %1688, align 1, !tbaa !12
  %1690 = add nuw nsw i64 %1625, 32
  %1691 = getelementptr inbounds float, float* %5, i64 %1690
  %1692 = bitcast float* %1691 to <8 x float>*
  %1693 = load <8 x float>, <8 x float>* %1692, align 1, !tbaa !12
  %1694 = add nuw nsw i64 %1625, 40
  %1695 = getelementptr inbounds float, float* %5, i64 %1694
  %1696 = bitcast float* %1695 to <8 x float>*
  %1697 = load <8 x float>, <8 x float>* %1696, align 1, !tbaa !12
  %1698 = add nuw nsw i64 %1625, 48
  %1699 = getelementptr inbounds float, float* %5, i64 %1698
  %1700 = bitcast float* %1699 to <8 x float>*
  %1701 = load <8 x float>, <8 x float>* %1700, align 1, !tbaa !12
  %1702 = add nuw nsw i64 %1625, 56
  %1703 = getelementptr inbounds float, float* %5, i64 %1702
  %1704 = bitcast float* %1703 to <8 x float>*
  %1705 = load <8 x float>, <8 x float>* %1704, align 1, !tbaa !12
  %1706 = add nuw nsw i64 %1625, 64
  %1707 = getelementptr inbounds float, float* %5, i64 %1706
  %1708 = bitcast float* %1707 to <8 x float>*
  %1709 = load <8 x float>, <8 x float>* %1708, align 1, !tbaa !12
  %1710 = add nuw nsw i64 %1625, 72
  %1711 = getelementptr inbounds float, float* %5, i64 %1710
  %1712 = bitcast float* %1711 to <8 x float>*
  %1713 = load <8 x float>, <8 x float>* %1712, align 1, !tbaa !12
  %1714 = add nuw nsw i64 %1625, 80
  %1715 = getelementptr inbounds float, float* %5, i64 %1714
  %1716 = bitcast float* %1715 to <8 x float>*
  %1717 = load <8 x float>, <8 x float>* %1716, align 1, !tbaa !12
  %1718 = add nuw nsw i64 %1625, 88
  %1719 = getelementptr inbounds float, float* %5, i64 %1718
  %1720 = bitcast float* %1719 to <8 x float>*
  %1721 = load <8 x float>, <8 x float>* %1720, align 1, !tbaa !12
  %1722 = trunc i64 %1625 to i32
  %1723 = add nsw i32 %1457, %1722
  %1724 = sext i32 %1723 to i64
  %1725 = getelementptr inbounds float, float* %3, i64 %1724
  %1726 = bitcast float* %1725 to <8 x float>*
  %1727 = load <8 x float>, <8 x float>* %1726, align 1, !tbaa !12
  %1728 = add nsw i32 %1723, 8
  %1729 = sext i32 %1728 to i64
  %1730 = getelementptr inbounds float, float* %3, i64 %1729
  %1731 = bitcast float* %1730 to <8 x float>*
  %1732 = load <8 x float>, <8 x float>* %1731, align 1, !tbaa !12
  %1733 = add nsw i32 %1723, 16
  %1734 = sext i32 %1733 to i64
  %1735 = getelementptr inbounds float, float* %3, i64 %1734
  %1736 = bitcast float* %1735 to <8 x float>*
  %1737 = load <8 x float>, <8 x float>* %1736, align 1, !tbaa !12
  %1738 = add nsw i32 %1723, 24
  %1739 = sext i32 %1738 to i64
  %1740 = getelementptr inbounds float, float* %3, i64 %1739
  %1741 = bitcast float* %1740 to <8 x float>*
  %1742 = load <8 x float>, <8 x float>* %1741, align 1, !tbaa !12
  %1743 = add nsw i32 %1723, 32
  %1744 = sext i32 %1743 to i64
  %1745 = getelementptr inbounds float, float* %3, i64 %1744
  %1746 = bitcast float* %1745 to <8 x float>*
  %1747 = load <8 x float>, <8 x float>* %1746, align 1, !tbaa !12
  %1748 = add nsw i32 %1723, 40
  %1749 = sext i32 %1748 to i64
  %1750 = getelementptr inbounds float, float* %3, i64 %1749
  %1751 = bitcast float* %1750 to <8 x float>*
  %1752 = load <8 x float>, <8 x float>* %1751, align 1, !tbaa !12
  %1753 = add nsw i32 %1723, 48
  %1754 = sext i32 %1753 to i64
  %1755 = getelementptr inbounds float, float* %3, i64 %1754
  %1756 = bitcast float* %1755 to <8 x float>*
  %1757 = load <8 x float>, <8 x float>* %1756, align 1, !tbaa !12
  %1758 = add nsw i32 %1723, 56
  %1759 = sext i32 %1758 to i64
  %1760 = getelementptr inbounds float, float* %3, i64 %1759
  %1761 = bitcast float* %1760 to <8 x float>*
  %1762 = load <8 x float>, <8 x float>* %1761, align 1, !tbaa !12
  %1763 = add nsw i32 %1723, 64
  %1764 = sext i32 %1763 to i64
  %1765 = getelementptr inbounds float, float* %3, i64 %1764
  %1766 = bitcast float* %1765 to <8 x float>*
  %1767 = load <8 x float>, <8 x float>* %1766, align 1, !tbaa !12
  %1768 = add nsw i32 %1723, 72
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds float, float* %3, i64 %1769
  %1771 = bitcast float* %1770 to <8 x float>*
  %1772 = load <8 x float>, <8 x float>* %1771, align 1, !tbaa !12
  %1773 = add nsw i32 %1723, 80
  %1774 = sext i32 %1773 to i64
  %1775 = getelementptr inbounds float, float* %3, i64 %1774
  %1776 = bitcast float* %1775 to <8 x float>*
  %1777 = load <8 x float>, <8 x float>* %1776, align 1, !tbaa !12
  %1778 = add nsw i32 %1723, 88
  %1779 = sext i32 %1778 to i64
  %1780 = getelementptr inbounds float, float* %3, i64 %1779
  %1781 = bitcast float* %1780 to <8 x float>*
  %1782 = load <8 x float>, <8 x float>* %1781, align 1, !tbaa !12
  %1783 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1727, <8 x float> %70, <8 x float> %1677) #10
  %1784 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1732, <8 x float> %70, <8 x float> %1681) #10
  %1785 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1737, <8 x float> %70, <8 x float> %1685) #10
  %1786 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1742, <8 x float> %70, <8 x float> %1689) #10
  %1787 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1747, <8 x float> %70, <8 x float> %1693) #10
  %1788 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1752, <8 x float> %70, <8 x float> %1697) #10
  %1789 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1757, <8 x float> %70, <8 x float> %1701) #10
  %1790 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1762, <8 x float> %70, <8 x float> %1705) #10
  %1791 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1767, <8 x float> %70, <8 x float> %1709) #10
  %1792 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1772, <8 x float> %70, <8 x float> %1713) #10
  %1793 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1777, <8 x float> %70, <8 x float> %1717) #10
  %1794 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1782, <8 x float> %70, <8 x float> %1721) #10
  store <8 x float> %1783, <8 x float>* %1676, align 1, !tbaa !12
  store <8 x float> %1784, <8 x float>* %1680, align 1, !tbaa !12
  store <8 x float> %1785, <8 x float>* %1684, align 1, !tbaa !12
  store <8 x float> %1786, <8 x float>* %1688, align 1, !tbaa !12
  store <8 x float> %1787, <8 x float>* %1692, align 1, !tbaa !12
  store <8 x float> %1788, <8 x float>* %1696, align 1, !tbaa !12
  store <8 x float> %1789, <8 x float>* %1700, align 1, !tbaa !12
  store <8 x float> %1790, <8 x float>* %1704, align 1, !tbaa !12
  store <8 x float> %1791, <8 x float>* %1708, align 1, !tbaa !12
  store <8 x float> %1792, <8 x float>* %1712, align 1, !tbaa !12
  store <8 x float> %1793, <8 x float>* %1716, align 1, !tbaa !12
  store <8 x float> %1794, <8 x float>* %1720, align 1, !tbaa !12
  %1795 = add nuw nsw i64 %1625, 96
  %1796 = icmp ult i64 %1795, %1455
  br i1 %1796, label %1624, label %1618

1797:                                             ; preds = %1802, %427, %20, %939, %1451, %1618
  %1798 = add nuw nsw i64 %21, 11
  %1799 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1800 = sext i32 %1799 to i64
  %1801 = icmp slt i64 %1798, %1800
  br i1 %1801, label %20, label %8

1802:                                             ; preds = %1619, %1802
  %1803 = phi i64 [ 0, %1619 ], [ %1960, %1802 ]
  %1804 = getelementptr inbounds float, float* %5, i64 %1803
  %1805 = getelementptr inbounds float, float* %1804, i64 8
  %1806 = bitcast float* %1805 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1806, i32 0, i32 1, i32 1)
  %1807 = getelementptr inbounds float, float* %3, i64 %1803
  %1808 = getelementptr inbounds float, float* %1807, i64 8
  %1809 = bitcast float* %1808 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1809, i32 0, i32 1, i32 1)
  %1810 = getelementptr inbounds float, float* %1804, i64 16
  %1811 = bitcast float* %1810 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1811, i32 0, i32 1, i32 1)
  %1812 = getelementptr inbounds float, float* %1807, i64 16
  %1813 = bitcast float* %1812 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1813, i32 0, i32 1, i32 1)
  %1814 = getelementptr inbounds float, float* %1804, i64 24
  %1815 = bitcast float* %1814 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1815, i32 0, i32 1, i32 1)
  %1816 = getelementptr inbounds float, float* %1807, i64 24
  %1817 = bitcast float* %1816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1817, i32 0, i32 1, i32 1)
  %1818 = getelementptr inbounds float, float* %1804, i64 32
  %1819 = bitcast float* %1818 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1819, i32 0, i32 1, i32 1)
  %1820 = getelementptr inbounds float, float* %1807, i64 32
  %1821 = bitcast float* %1820 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1821, i32 0, i32 1, i32 1)
  %1822 = getelementptr inbounds float, float* %1804, i64 40
  %1823 = bitcast float* %1822 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1823, i32 0, i32 1, i32 1)
  %1824 = getelementptr inbounds float, float* %1807, i64 40
  %1825 = bitcast float* %1824 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1825, i32 0, i32 1, i32 1)
  %1826 = getelementptr inbounds float, float* %1804, i64 48
  %1827 = bitcast float* %1826 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1827, i32 0, i32 1, i32 1)
  %1828 = getelementptr inbounds float, float* %1807, i64 48
  %1829 = bitcast float* %1828 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1829, i32 0, i32 1, i32 1)
  %1830 = getelementptr inbounds float, float* %1804, i64 56
  %1831 = bitcast float* %1830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1831, i32 0, i32 1, i32 1)
  %1832 = getelementptr inbounds float, float* %1807, i64 56
  %1833 = bitcast float* %1832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1833, i32 0, i32 1, i32 1)
  %1834 = getelementptr inbounds float, float* %1804, i64 64
  %1835 = bitcast float* %1834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1835, i32 0, i32 1, i32 1)
  %1836 = getelementptr inbounds float, float* %1807, i64 64
  %1837 = bitcast float* %1836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1837, i32 0, i32 1, i32 1)
  %1838 = getelementptr inbounds float, float* %1804, i64 72
  %1839 = bitcast float* %1838 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1839, i32 0, i32 1, i32 1)
  %1840 = getelementptr inbounds float, float* %1807, i64 72
  %1841 = bitcast float* %1840 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1841, i32 0, i32 1, i32 1)
  %1842 = getelementptr inbounds float, float* %1804, i64 80
  %1843 = bitcast float* %1842 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1843, i32 0, i32 1, i32 1)
  %1844 = getelementptr inbounds float, float* %1807, i64 80
  %1845 = bitcast float* %1844 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1845, i32 0, i32 1, i32 1)
  %1846 = getelementptr inbounds float, float* %1804, i64 88
  %1847 = bitcast float* %1846 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1847, i32 0, i32 1, i32 1)
  %1848 = getelementptr inbounds float, float* %1807, i64 88
  %1849 = bitcast float* %1848 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1849, i32 0, i32 1, i32 1)
  %1850 = getelementptr inbounds float, float* %1804, i64 96
  %1851 = bitcast float* %1850 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1851, i32 0, i32 1, i32 1)
  %1852 = getelementptr inbounds float, float* %1807, i64 96
  %1853 = bitcast float* %1852 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1853, i32 0, i32 1, i32 1)
  %1854 = bitcast float* %1804 to <8 x float>*
  %1855 = load <8 x float>, <8 x float>* %1854, align 1, !tbaa !12
  %1856 = or i64 %1803, 8
  %1857 = getelementptr inbounds float, float* %5, i64 %1856
  %1858 = bitcast float* %1857 to <8 x float>*
  %1859 = load <8 x float>, <8 x float>* %1858, align 1, !tbaa !12
  %1860 = or i64 %1803, 16
  %1861 = getelementptr inbounds float, float* %5, i64 %1860
  %1862 = bitcast float* %1861 to <8 x float>*
  %1863 = load <8 x float>, <8 x float>* %1862, align 1, !tbaa !12
  %1864 = or i64 %1803, 24
  %1865 = getelementptr inbounds float, float* %5, i64 %1864
  %1866 = bitcast float* %1865 to <8 x float>*
  %1867 = load <8 x float>, <8 x float>* %1866, align 1, !tbaa !12
  %1868 = add nuw nsw i64 %1803, 32
  %1869 = getelementptr inbounds float, float* %5, i64 %1868
  %1870 = bitcast float* %1869 to <8 x float>*
  %1871 = load <8 x float>, <8 x float>* %1870, align 1, !tbaa !12
  %1872 = add nuw nsw i64 %1803, 40
  %1873 = getelementptr inbounds float, float* %5, i64 %1872
  %1874 = bitcast float* %1873 to <8 x float>*
  %1875 = load <8 x float>, <8 x float>* %1874, align 1, !tbaa !12
  %1876 = add nuw nsw i64 %1803, 48
  %1877 = getelementptr inbounds float, float* %5, i64 %1876
  %1878 = bitcast float* %1877 to <8 x float>*
  %1879 = load <8 x float>, <8 x float>* %1878, align 1, !tbaa !12
  %1880 = add nuw nsw i64 %1803, 56
  %1881 = getelementptr inbounds float, float* %5, i64 %1880
  %1882 = bitcast float* %1881 to <8 x float>*
  %1883 = load <8 x float>, <8 x float>* %1882, align 1, !tbaa !12
  %1884 = add nuw nsw i64 %1803, 64
  %1885 = getelementptr inbounds float, float* %5, i64 %1884
  %1886 = bitcast float* %1885 to <8 x float>*
  %1887 = load <8 x float>, <8 x float>* %1886, align 1, !tbaa !12
  %1888 = add nuw nsw i64 %1803, 72
  %1889 = getelementptr inbounds float, float* %5, i64 %1888
  %1890 = bitcast float* %1889 to <8 x float>*
  %1891 = load <8 x float>, <8 x float>* %1890, align 1, !tbaa !12
  %1892 = add nuw nsw i64 %1803, 80
  %1893 = getelementptr inbounds float, float* %5, i64 %1892
  %1894 = bitcast float* %1893 to <8 x float>*
  %1895 = load <8 x float>, <8 x float>* %1894, align 1, !tbaa !12
  %1896 = add nuw nsw i64 %1803, 88
  %1897 = getelementptr inbounds float, float* %5, i64 %1896
  %1898 = bitcast float* %1897 to <8 x float>*
  %1899 = load <8 x float>, <8 x float>* %1898, align 1, !tbaa !12
  %1900 = add nsw i64 %1803, %1622
  %1901 = getelementptr inbounds float, float* %3, i64 %1900
  %1902 = bitcast float* %1901 to <8 x float>*
  %1903 = load <8 x float>, <8 x float>* %1902, align 1, !tbaa !12
  %1904 = add nsw i64 %1900, 8
  %1905 = getelementptr inbounds float, float* %3, i64 %1904
  %1906 = bitcast float* %1905 to <8 x float>*
  %1907 = load <8 x float>, <8 x float>* %1906, align 1, !tbaa !12
  %1908 = add nsw i64 %1900, 16
  %1909 = getelementptr inbounds float, float* %3, i64 %1908
  %1910 = bitcast float* %1909 to <8 x float>*
  %1911 = load <8 x float>, <8 x float>* %1910, align 1, !tbaa !12
  %1912 = add nsw i64 %1900, 24
  %1913 = getelementptr inbounds float, float* %3, i64 %1912
  %1914 = bitcast float* %1913 to <8 x float>*
  %1915 = load <8 x float>, <8 x float>* %1914, align 1, !tbaa !12
  %1916 = add nsw i64 %1900, 32
  %1917 = getelementptr inbounds float, float* %3, i64 %1916
  %1918 = bitcast float* %1917 to <8 x float>*
  %1919 = load <8 x float>, <8 x float>* %1918, align 1, !tbaa !12
  %1920 = add nsw i64 %1900, 40
  %1921 = getelementptr inbounds float, float* %3, i64 %1920
  %1922 = bitcast float* %1921 to <8 x float>*
  %1923 = load <8 x float>, <8 x float>* %1922, align 1, !tbaa !12
  %1924 = add nsw i64 %1900, 48
  %1925 = getelementptr inbounds float, float* %3, i64 %1924
  %1926 = bitcast float* %1925 to <8 x float>*
  %1927 = load <8 x float>, <8 x float>* %1926, align 1, !tbaa !12
  %1928 = add nsw i64 %1900, 56
  %1929 = getelementptr inbounds float, float* %3, i64 %1928
  %1930 = bitcast float* %1929 to <8 x float>*
  %1931 = load <8 x float>, <8 x float>* %1930, align 1, !tbaa !12
  %1932 = add nsw i64 %1900, 64
  %1933 = getelementptr inbounds float, float* %3, i64 %1932
  %1934 = bitcast float* %1933 to <8 x float>*
  %1935 = load <8 x float>, <8 x float>* %1934, align 1, !tbaa !12
  %1936 = add nsw i64 %1900, 72
  %1937 = getelementptr inbounds float, float* %3, i64 %1936
  %1938 = bitcast float* %1937 to <8 x float>*
  %1939 = load <8 x float>, <8 x float>* %1938, align 1, !tbaa !12
  %1940 = add nsw i64 %1900, 80
  %1941 = getelementptr inbounds float, float* %3, i64 %1940
  %1942 = bitcast float* %1941 to <8 x float>*
  %1943 = load <8 x float>, <8 x float>* %1942, align 1, !tbaa !12
  %1944 = add nsw i64 %1900, 88
  %1945 = getelementptr inbounds float, float* %3, i64 %1944
  %1946 = bitcast float* %1945 to <8 x float>*
  %1947 = load <8 x float>, <8 x float>* %1946, align 1, !tbaa !12
  %1948 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1903, <8 x float> %75, <8 x float> %1855) #10
  %1949 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1907, <8 x float> %75, <8 x float> %1859) #10
  %1950 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1911, <8 x float> %75, <8 x float> %1863) #10
  %1951 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1915, <8 x float> %75, <8 x float> %1867) #10
  %1952 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1919, <8 x float> %75, <8 x float> %1871) #10
  %1953 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1923, <8 x float> %75, <8 x float> %1875) #10
  %1954 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1927, <8 x float> %75, <8 x float> %1879) #10
  %1955 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1931, <8 x float> %75, <8 x float> %1883) #10
  %1956 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1935, <8 x float> %75, <8 x float> %1887) #10
  %1957 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1939, <8 x float> %75, <8 x float> %1891) #10
  %1958 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1943, <8 x float> %75, <8 x float> %1895) #10
  %1959 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1947, <8 x float> %75, <8 x float> %1899) #10
  store <8 x float> %1948, <8 x float>* %1854, align 1, !tbaa !12
  store <8 x float> %1949, <8 x float>* %1858, align 1, !tbaa !12
  store <8 x float> %1950, <8 x float>* %1862, align 1, !tbaa !12
  store <8 x float> %1951, <8 x float>* %1866, align 1, !tbaa !12
  store <8 x float> %1952, <8 x float>* %1870, align 1, !tbaa !12
  store <8 x float> %1953, <8 x float>* %1874, align 1, !tbaa !12
  store <8 x float> %1954, <8 x float>* %1878, align 1, !tbaa !12
  store <8 x float> %1955, <8 x float>* %1882, align 1, !tbaa !12
  store <8 x float> %1956, <8 x float>* %1886, align 1, !tbaa !12
  store <8 x float> %1957, <8 x float>* %1890, align 1, !tbaa !12
  store <8 x float> %1958, <8 x float>* %1894, align 1, !tbaa !12
  store <8 x float> %1959, <8 x float>* %1898, align 1, !tbaa !12
  %1960 = add nuw nsw i64 %1803, 96
  %1961 = icmp ult i64 %1960, %1623
  br i1 %1961, label %1802, label %1797
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 275
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui12_uk11.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
