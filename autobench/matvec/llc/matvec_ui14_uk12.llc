; ModuleID = 'codes/matvec_ui14_uk12.cpp'
source_filename = "codes/matvec_ui14_uk12.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui14_uk12.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 112
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 96
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %2262, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %2262
  %21 = phi i64 [ %2263, %2262 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = or i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = or i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %2262

83:                                               ; preds = %20
  %84 = zext i32 %81 to i64
  %85 = trunc i64 %21 to i32
  %86 = mul nsw i32 %81, %85
  br label %93

87:                                               ; preds = %93
  br i1 %82, label %88, label %486

88:                                               ; preds = %87
  %89 = trunc i64 %26 to i32
  %90 = mul nsw i32 %81, %89
  %91 = sext i32 %90 to i64
  %92 = zext i32 %81 to i64
  br label %300

93:                                               ; preds = %83, %93
  %94 = phi i64 [ 0, %83 ], [ %292, %93 ]
  %95 = getelementptr inbounds float, float* %5, i64 %94
  %96 = getelementptr inbounds float, float* %95, i64 8
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %3, i64 %94
  %99 = getelementptr inbounds float, float* %98, i64 8
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %95, i64 16
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %98, i64 16
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %95, i64 24
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %98, i64 24
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %95, i64 32
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %98, i64 32
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %95, i64 40
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %98, i64 40
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %95, i64 48
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %98, i64 48
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %95, i64 56
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %98, i64 56
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %95, i64 64
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %98, i64 64
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %95, i64 72
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %98, i64 72
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %95, i64 80
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %98, i64 80
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = getelementptr inbounds float, float* %95, i64 88
  %138 = bitcast float* %137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %138, i32 0, i32 1, i32 1)
  %139 = getelementptr inbounds float, float* %98, i64 88
  %140 = bitcast float* %139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %140, i32 0, i32 1, i32 1)
  %141 = getelementptr inbounds float, float* %95, i64 96
  %142 = bitcast float* %141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %142, i32 0, i32 1, i32 1)
  %143 = getelementptr inbounds float, float* %98, i64 96
  %144 = bitcast float* %143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %144, i32 0, i32 1, i32 1)
  %145 = getelementptr inbounds float, float* %95, i64 104
  %146 = bitcast float* %145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %146, i32 0, i32 1, i32 1)
  %147 = getelementptr inbounds float, float* %98, i64 104
  %148 = bitcast float* %147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %148, i32 0, i32 1, i32 1)
  %149 = getelementptr inbounds float, float* %95, i64 112
  %150 = bitcast float* %149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %150, i32 0, i32 1, i32 1)
  %151 = getelementptr inbounds float, float* %98, i64 112
  %152 = bitcast float* %151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %152, i32 0, i32 1, i32 1)
  %153 = bitcast float* %95 to <8 x float>*
  %154 = load <8 x float>, <8 x float>* %153, align 1, !tbaa !12
  %155 = or i64 %94, 8
  %156 = getelementptr inbounds float, float* %5, i64 %155
  %157 = bitcast float* %156 to <8 x float>*
  %158 = load <8 x float>, <8 x float>* %157, align 1, !tbaa !12
  %159 = add nuw nsw i64 %94, 16
  %160 = getelementptr inbounds float, float* %5, i64 %159
  %161 = bitcast float* %160 to <8 x float>*
  %162 = load <8 x float>, <8 x float>* %161, align 1, !tbaa !12
  %163 = add nuw nsw i64 %94, 24
  %164 = getelementptr inbounds float, float* %5, i64 %163
  %165 = bitcast float* %164 to <8 x float>*
  %166 = load <8 x float>, <8 x float>* %165, align 1, !tbaa !12
  %167 = add nuw nsw i64 %94, 32
  %168 = getelementptr inbounds float, float* %5, i64 %167
  %169 = bitcast float* %168 to <8 x float>*
  %170 = load <8 x float>, <8 x float>* %169, align 1, !tbaa !12
  %171 = add nuw nsw i64 %94, 40
  %172 = getelementptr inbounds float, float* %5, i64 %171
  %173 = bitcast float* %172 to <8 x float>*
  %174 = load <8 x float>, <8 x float>* %173, align 1, !tbaa !12
  %175 = add nuw nsw i64 %94, 48
  %176 = getelementptr inbounds float, float* %5, i64 %175
  %177 = bitcast float* %176 to <8 x float>*
  %178 = load <8 x float>, <8 x float>* %177, align 1, !tbaa !12
  %179 = add nuw nsw i64 %94, 56
  %180 = getelementptr inbounds float, float* %5, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = add nuw nsw i64 %94, 64
  %184 = getelementptr inbounds float, float* %5, i64 %183
  %185 = bitcast float* %184 to <8 x float>*
  %186 = load <8 x float>, <8 x float>* %185, align 1, !tbaa !12
  %187 = add nuw nsw i64 %94, 72
  %188 = getelementptr inbounds float, float* %5, i64 %187
  %189 = bitcast float* %188 to <8 x float>*
  %190 = load <8 x float>, <8 x float>* %189, align 1, !tbaa !12
  %191 = add nuw nsw i64 %94, 80
  %192 = getelementptr inbounds float, float* %5, i64 %191
  %193 = bitcast float* %192 to <8 x float>*
  %194 = load <8 x float>, <8 x float>* %193, align 1, !tbaa !12
  %195 = add nuw nsw i64 %94, 88
  %196 = getelementptr inbounds float, float* %5, i64 %195
  %197 = bitcast float* %196 to <8 x float>*
  %198 = load <8 x float>, <8 x float>* %197, align 1, !tbaa !12
  %199 = add nuw nsw i64 %94, 96
  %200 = getelementptr inbounds float, float* %5, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nuw nsw i64 %94, 104
  %204 = getelementptr inbounds float, float* %5, i64 %203
  %205 = bitcast float* %204 to <8 x float>*
  %206 = load <8 x float>, <8 x float>* %205, align 1, !tbaa !12
  %207 = trunc i64 %94 to i32
  %208 = add nsw i32 %86, %207
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nsw i32 %208, 8
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %3, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %217 = load <8 x float>, <8 x float>* %216, align 1, !tbaa !12
  %218 = add nsw i32 %208, 16
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %3, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %222 = load <8 x float>, <8 x float>* %221, align 1, !tbaa !12
  %223 = add nsw i32 %208, 24
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %3, i64 %224
  %226 = bitcast float* %225 to <8 x float>*
  %227 = load <8 x float>, <8 x float>* %226, align 1, !tbaa !12
  %228 = add nsw i32 %208, 32
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float, float* %3, i64 %229
  %231 = bitcast float* %230 to <8 x float>*
  %232 = load <8 x float>, <8 x float>* %231, align 1, !tbaa !12
  %233 = add nsw i32 %208, 40
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float, float* %3, i64 %234
  %236 = bitcast float* %235 to <8 x float>*
  %237 = load <8 x float>, <8 x float>* %236, align 1, !tbaa !12
  %238 = add nsw i32 %208, 48
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float, float* %3, i64 %239
  %241 = bitcast float* %240 to <8 x float>*
  %242 = load <8 x float>, <8 x float>* %241, align 1, !tbaa !12
  %243 = add nsw i32 %208, 56
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %3, i64 %244
  %246 = bitcast float* %245 to <8 x float>*
  %247 = load <8 x float>, <8 x float>* %246, align 1, !tbaa !12
  %248 = add nsw i32 %208, 64
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds float, float* %3, i64 %249
  %251 = bitcast float* %250 to <8 x float>*
  %252 = load <8 x float>, <8 x float>* %251, align 1, !tbaa !12
  %253 = add nsw i32 %208, 72
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %3, i64 %254
  %256 = bitcast float* %255 to <8 x float>*
  %257 = load <8 x float>, <8 x float>* %256, align 1, !tbaa !12
  %258 = add nsw i32 %208, 80
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds float, float* %3, i64 %259
  %261 = bitcast float* %260 to <8 x float>*
  %262 = load <8 x float>, <8 x float>* %261, align 1, !tbaa !12
  %263 = add nsw i32 %208, 88
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds float, float* %3, i64 %264
  %266 = bitcast float* %265 to <8 x float>*
  %267 = load <8 x float>, <8 x float>* %266, align 1, !tbaa !12
  %268 = add nsw i32 %208, 96
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds float, float* %3, i64 %269
  %271 = bitcast float* %270 to <8 x float>*
  %272 = load <8 x float>, <8 x float>* %271, align 1, !tbaa !12
  %273 = add nsw i32 %208, 104
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds float, float* %3, i64 %274
  %276 = bitcast float* %275 to <8 x float>*
  %277 = load <8 x float>, <8 x float>* %276, align 1, !tbaa !12
  %278 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %154) #10
  %279 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %217, <8 x float> %25, <8 x float> %158) #10
  %280 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %222, <8 x float> %25, <8 x float> %162) #10
  %281 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %227, <8 x float> %25, <8 x float> %166) #10
  %282 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %232, <8 x float> %25, <8 x float> %170) #10
  %283 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %237, <8 x float> %25, <8 x float> %174) #10
  %284 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %242, <8 x float> %25, <8 x float> %178) #10
  %285 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %247, <8 x float> %25, <8 x float> %182) #10
  %286 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %252, <8 x float> %25, <8 x float> %186) #10
  %287 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %257, <8 x float> %25, <8 x float> %190) #10
  %288 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %262, <8 x float> %25, <8 x float> %194) #10
  %289 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %267, <8 x float> %25, <8 x float> %198) #10
  %290 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %272, <8 x float> %25, <8 x float> %202) #10
  %291 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %277, <8 x float> %25, <8 x float> %206) #10
  store <8 x float> %278, <8 x float>* %153, align 1, !tbaa !12
  store <8 x float> %279, <8 x float>* %157, align 1, !tbaa !12
  store <8 x float> %280, <8 x float>* %161, align 1, !tbaa !12
  store <8 x float> %281, <8 x float>* %165, align 1, !tbaa !12
  store <8 x float> %282, <8 x float>* %169, align 1, !tbaa !12
  store <8 x float> %283, <8 x float>* %173, align 1, !tbaa !12
  store <8 x float> %284, <8 x float>* %177, align 1, !tbaa !12
  store <8 x float> %285, <8 x float>* %181, align 1, !tbaa !12
  store <8 x float> %286, <8 x float>* %185, align 1, !tbaa !12
  store <8 x float> %287, <8 x float>* %189, align 1, !tbaa !12
  store <8 x float> %288, <8 x float>* %193, align 1, !tbaa !12
  store <8 x float> %289, <8 x float>* %197, align 1, !tbaa !12
  store <8 x float> %290, <8 x float>* %201, align 1, !tbaa !12
  store <8 x float> %291, <8 x float>* %205, align 1, !tbaa !12
  %292 = add nuw nsw i64 %94, 112
  %293 = icmp ult i64 %292, %84
  br i1 %293, label %93, label %87

294:                                              ; preds = %300
  br i1 %82, label %295, label %486

295:                                              ; preds = %294
  %296 = trunc i64 %31 to i32
  %297 = mul nsw i32 %81, %296
  %298 = sext i32 %297 to i64
  %299 = zext i32 %81 to i64
  br label %493

300:                                              ; preds = %88, %300
  %301 = phi i64 [ 0, %88 ], [ %484, %300 ]
  %302 = getelementptr inbounds float, float* %5, i64 %301
  %303 = getelementptr inbounds float, float* %302, i64 8
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %3, i64 %301
  %306 = getelementptr inbounds float, float* %305, i64 8
  %307 = bitcast float* %306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %307, i32 0, i32 1, i32 1)
  %308 = getelementptr inbounds float, float* %302, i64 16
  %309 = bitcast float* %308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %309, i32 0, i32 1, i32 1)
  %310 = getelementptr inbounds float, float* %305, i64 16
  %311 = bitcast float* %310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %311, i32 0, i32 1, i32 1)
  %312 = getelementptr inbounds float, float* %302, i64 24
  %313 = bitcast float* %312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %313, i32 0, i32 1, i32 1)
  %314 = getelementptr inbounds float, float* %305, i64 24
  %315 = bitcast float* %314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %315, i32 0, i32 1, i32 1)
  %316 = getelementptr inbounds float, float* %302, i64 32
  %317 = bitcast float* %316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %317, i32 0, i32 1, i32 1)
  %318 = getelementptr inbounds float, float* %305, i64 32
  %319 = bitcast float* %318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %319, i32 0, i32 1, i32 1)
  %320 = getelementptr inbounds float, float* %302, i64 40
  %321 = bitcast float* %320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %321, i32 0, i32 1, i32 1)
  %322 = getelementptr inbounds float, float* %305, i64 40
  %323 = bitcast float* %322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %323, i32 0, i32 1, i32 1)
  %324 = getelementptr inbounds float, float* %302, i64 48
  %325 = bitcast float* %324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %325, i32 0, i32 1, i32 1)
  %326 = getelementptr inbounds float, float* %305, i64 48
  %327 = bitcast float* %326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %327, i32 0, i32 1, i32 1)
  %328 = getelementptr inbounds float, float* %302, i64 56
  %329 = bitcast float* %328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %329, i32 0, i32 1, i32 1)
  %330 = getelementptr inbounds float, float* %305, i64 56
  %331 = bitcast float* %330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %331, i32 0, i32 1, i32 1)
  %332 = getelementptr inbounds float, float* %302, i64 64
  %333 = bitcast float* %332 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %333, i32 0, i32 1, i32 1)
  %334 = getelementptr inbounds float, float* %305, i64 64
  %335 = bitcast float* %334 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %335, i32 0, i32 1, i32 1)
  %336 = getelementptr inbounds float, float* %302, i64 72
  %337 = bitcast float* %336 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %337, i32 0, i32 1, i32 1)
  %338 = getelementptr inbounds float, float* %305, i64 72
  %339 = bitcast float* %338 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %339, i32 0, i32 1, i32 1)
  %340 = getelementptr inbounds float, float* %302, i64 80
  %341 = bitcast float* %340 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %341, i32 0, i32 1, i32 1)
  %342 = getelementptr inbounds float, float* %305, i64 80
  %343 = bitcast float* %342 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %343, i32 0, i32 1, i32 1)
  %344 = getelementptr inbounds float, float* %302, i64 88
  %345 = bitcast float* %344 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %345, i32 0, i32 1, i32 1)
  %346 = getelementptr inbounds float, float* %305, i64 88
  %347 = bitcast float* %346 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %347, i32 0, i32 1, i32 1)
  %348 = getelementptr inbounds float, float* %302, i64 96
  %349 = bitcast float* %348 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %349, i32 0, i32 1, i32 1)
  %350 = getelementptr inbounds float, float* %305, i64 96
  %351 = bitcast float* %350 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %351, i32 0, i32 1, i32 1)
  %352 = getelementptr inbounds float, float* %302, i64 104
  %353 = bitcast float* %352 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %353, i32 0, i32 1, i32 1)
  %354 = getelementptr inbounds float, float* %305, i64 104
  %355 = bitcast float* %354 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %355, i32 0, i32 1, i32 1)
  %356 = getelementptr inbounds float, float* %302, i64 112
  %357 = bitcast float* %356 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %357, i32 0, i32 1, i32 1)
  %358 = getelementptr inbounds float, float* %305, i64 112
  %359 = bitcast float* %358 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %359, i32 0, i32 1, i32 1)
  %360 = bitcast float* %302 to <8 x float>*
  %361 = load <8 x float>, <8 x float>* %360, align 1, !tbaa !12
  %362 = or i64 %301, 8
  %363 = getelementptr inbounds float, float* %5, i64 %362
  %364 = bitcast float* %363 to <8 x float>*
  %365 = load <8 x float>, <8 x float>* %364, align 1, !tbaa !12
  %366 = add nuw nsw i64 %301, 16
  %367 = getelementptr inbounds float, float* %5, i64 %366
  %368 = bitcast float* %367 to <8 x float>*
  %369 = load <8 x float>, <8 x float>* %368, align 1, !tbaa !12
  %370 = add nuw nsw i64 %301, 24
  %371 = getelementptr inbounds float, float* %5, i64 %370
  %372 = bitcast float* %371 to <8 x float>*
  %373 = load <8 x float>, <8 x float>* %372, align 1, !tbaa !12
  %374 = add nuw nsw i64 %301, 32
  %375 = getelementptr inbounds float, float* %5, i64 %374
  %376 = bitcast float* %375 to <8 x float>*
  %377 = load <8 x float>, <8 x float>* %376, align 1, !tbaa !12
  %378 = add nuw nsw i64 %301, 40
  %379 = getelementptr inbounds float, float* %5, i64 %378
  %380 = bitcast float* %379 to <8 x float>*
  %381 = load <8 x float>, <8 x float>* %380, align 1, !tbaa !12
  %382 = add nuw nsw i64 %301, 48
  %383 = getelementptr inbounds float, float* %5, i64 %382
  %384 = bitcast float* %383 to <8 x float>*
  %385 = load <8 x float>, <8 x float>* %384, align 1, !tbaa !12
  %386 = add nuw nsw i64 %301, 56
  %387 = getelementptr inbounds float, float* %5, i64 %386
  %388 = bitcast float* %387 to <8 x float>*
  %389 = load <8 x float>, <8 x float>* %388, align 1, !tbaa !12
  %390 = add nuw nsw i64 %301, 64
  %391 = getelementptr inbounds float, float* %5, i64 %390
  %392 = bitcast float* %391 to <8 x float>*
  %393 = load <8 x float>, <8 x float>* %392, align 1, !tbaa !12
  %394 = add nuw nsw i64 %301, 72
  %395 = getelementptr inbounds float, float* %5, i64 %394
  %396 = bitcast float* %395 to <8 x float>*
  %397 = load <8 x float>, <8 x float>* %396, align 1, !tbaa !12
  %398 = add nuw nsw i64 %301, 80
  %399 = getelementptr inbounds float, float* %5, i64 %398
  %400 = bitcast float* %399 to <8 x float>*
  %401 = load <8 x float>, <8 x float>* %400, align 1, !tbaa !12
  %402 = add nuw nsw i64 %301, 88
  %403 = getelementptr inbounds float, float* %5, i64 %402
  %404 = bitcast float* %403 to <8 x float>*
  %405 = load <8 x float>, <8 x float>* %404, align 1, !tbaa !12
  %406 = add nuw nsw i64 %301, 96
  %407 = getelementptr inbounds float, float* %5, i64 %406
  %408 = bitcast float* %407 to <8 x float>*
  %409 = load <8 x float>, <8 x float>* %408, align 1, !tbaa !12
  %410 = add nuw nsw i64 %301, 104
  %411 = getelementptr inbounds float, float* %5, i64 %410
  %412 = bitcast float* %411 to <8 x float>*
  %413 = load <8 x float>, <8 x float>* %412, align 1, !tbaa !12
  %414 = add nsw i64 %301, %91
  %415 = getelementptr inbounds float, float* %3, i64 %414
  %416 = bitcast float* %415 to <8 x float>*
  %417 = load <8 x float>, <8 x float>* %416, align 1, !tbaa !12
  %418 = add nsw i64 %414, 8
  %419 = getelementptr inbounds float, float* %3, i64 %418
  %420 = bitcast float* %419 to <8 x float>*
  %421 = load <8 x float>, <8 x float>* %420, align 1, !tbaa !12
  %422 = add nsw i64 %414, 16
  %423 = getelementptr inbounds float, float* %3, i64 %422
  %424 = bitcast float* %423 to <8 x float>*
  %425 = load <8 x float>, <8 x float>* %424, align 1, !tbaa !12
  %426 = add nsw i64 %414, 24
  %427 = getelementptr inbounds float, float* %3, i64 %426
  %428 = bitcast float* %427 to <8 x float>*
  %429 = load <8 x float>, <8 x float>* %428, align 1, !tbaa !12
  %430 = add nsw i64 %414, 32
  %431 = getelementptr inbounds float, float* %3, i64 %430
  %432 = bitcast float* %431 to <8 x float>*
  %433 = load <8 x float>, <8 x float>* %432, align 1, !tbaa !12
  %434 = add nsw i64 %414, 40
  %435 = getelementptr inbounds float, float* %3, i64 %434
  %436 = bitcast float* %435 to <8 x float>*
  %437 = load <8 x float>, <8 x float>* %436, align 1, !tbaa !12
  %438 = add nsw i64 %414, 48
  %439 = getelementptr inbounds float, float* %3, i64 %438
  %440 = bitcast float* %439 to <8 x float>*
  %441 = load <8 x float>, <8 x float>* %440, align 1, !tbaa !12
  %442 = add nsw i64 %414, 56
  %443 = getelementptr inbounds float, float* %3, i64 %442
  %444 = bitcast float* %443 to <8 x float>*
  %445 = load <8 x float>, <8 x float>* %444, align 1, !tbaa !12
  %446 = add nsw i64 %414, 64
  %447 = getelementptr inbounds float, float* %3, i64 %446
  %448 = bitcast float* %447 to <8 x float>*
  %449 = load <8 x float>, <8 x float>* %448, align 1, !tbaa !12
  %450 = add nsw i64 %414, 72
  %451 = getelementptr inbounds float, float* %3, i64 %450
  %452 = bitcast float* %451 to <8 x float>*
  %453 = load <8 x float>, <8 x float>* %452, align 1, !tbaa !12
  %454 = add nsw i64 %414, 80
  %455 = getelementptr inbounds float, float* %3, i64 %454
  %456 = bitcast float* %455 to <8 x float>*
  %457 = load <8 x float>, <8 x float>* %456, align 1, !tbaa !12
  %458 = add nsw i64 %414, 88
  %459 = getelementptr inbounds float, float* %3, i64 %458
  %460 = bitcast float* %459 to <8 x float>*
  %461 = load <8 x float>, <8 x float>* %460, align 1, !tbaa !12
  %462 = add nsw i64 %414, 96
  %463 = getelementptr inbounds float, float* %3, i64 %462
  %464 = bitcast float* %463 to <8 x float>*
  %465 = load <8 x float>, <8 x float>* %464, align 1, !tbaa !12
  %466 = add nsw i64 %414, 104
  %467 = getelementptr inbounds float, float* %3, i64 %466
  %468 = bitcast float* %467 to <8 x float>*
  %469 = load <8 x float>, <8 x float>* %468, align 1, !tbaa !12
  %470 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %417, <8 x float> %30, <8 x float> %361) #10
  %471 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %421, <8 x float> %30, <8 x float> %365) #10
  %472 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %425, <8 x float> %30, <8 x float> %369) #10
  %473 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %429, <8 x float> %30, <8 x float> %373) #10
  %474 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %433, <8 x float> %30, <8 x float> %377) #10
  %475 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %437, <8 x float> %30, <8 x float> %381) #10
  %476 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %441, <8 x float> %30, <8 x float> %385) #10
  %477 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %445, <8 x float> %30, <8 x float> %389) #10
  %478 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %449, <8 x float> %30, <8 x float> %393) #10
  %479 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %453, <8 x float> %30, <8 x float> %397) #10
  %480 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %457, <8 x float> %30, <8 x float> %401) #10
  %481 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %461, <8 x float> %30, <8 x float> %405) #10
  %482 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %465, <8 x float> %30, <8 x float> %409) #10
  %483 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %469, <8 x float> %30, <8 x float> %413) #10
  store <8 x float> %470, <8 x float>* %360, align 1, !tbaa !12
  store <8 x float> %471, <8 x float>* %364, align 1, !tbaa !12
  store <8 x float> %472, <8 x float>* %368, align 1, !tbaa !12
  store <8 x float> %473, <8 x float>* %372, align 1, !tbaa !12
  store <8 x float> %474, <8 x float>* %376, align 1, !tbaa !12
  store <8 x float> %475, <8 x float>* %380, align 1, !tbaa !12
  store <8 x float> %476, <8 x float>* %384, align 1, !tbaa !12
  store <8 x float> %477, <8 x float>* %388, align 1, !tbaa !12
  store <8 x float> %478, <8 x float>* %392, align 1, !tbaa !12
  store <8 x float> %479, <8 x float>* %396, align 1, !tbaa !12
  store <8 x float> %480, <8 x float>* %400, align 1, !tbaa !12
  store <8 x float> %481, <8 x float>* %404, align 1, !tbaa !12
  store <8 x float> %482, <8 x float>* %408, align 1, !tbaa !12
  store <8 x float> %483, <8 x float>* %412, align 1, !tbaa !12
  %484 = add nuw nsw i64 %301, 112
  %485 = icmp ult i64 %484, %92
  br i1 %485, label %300, label %294

486:                                              ; preds = %493, %87, %294
  %487 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %488 = icmp sgt i32 %487, 0
  br i1 %488, label %489, label %2262

489:                                              ; preds = %486
  %490 = zext i32 %487 to i64
  %491 = trunc i64 %36 to i32
  %492 = mul nsw i32 %487, %491
  br label %685

493:                                              ; preds = %295, %493
  %494 = phi i64 [ 0, %295 ], [ %677, %493 ]
  %495 = getelementptr inbounds float, float* %5, i64 %494
  %496 = getelementptr inbounds float, float* %495, i64 8
  %497 = bitcast float* %496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %497, i32 0, i32 1, i32 1)
  %498 = getelementptr inbounds float, float* %3, i64 %494
  %499 = getelementptr inbounds float, float* %498, i64 8
  %500 = bitcast float* %499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %500, i32 0, i32 1, i32 1)
  %501 = getelementptr inbounds float, float* %495, i64 16
  %502 = bitcast float* %501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %502, i32 0, i32 1, i32 1)
  %503 = getelementptr inbounds float, float* %498, i64 16
  %504 = bitcast float* %503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %504, i32 0, i32 1, i32 1)
  %505 = getelementptr inbounds float, float* %495, i64 24
  %506 = bitcast float* %505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %506, i32 0, i32 1, i32 1)
  %507 = getelementptr inbounds float, float* %498, i64 24
  %508 = bitcast float* %507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %508, i32 0, i32 1, i32 1)
  %509 = getelementptr inbounds float, float* %495, i64 32
  %510 = bitcast float* %509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %510, i32 0, i32 1, i32 1)
  %511 = getelementptr inbounds float, float* %498, i64 32
  %512 = bitcast float* %511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %512, i32 0, i32 1, i32 1)
  %513 = getelementptr inbounds float, float* %495, i64 40
  %514 = bitcast float* %513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %514, i32 0, i32 1, i32 1)
  %515 = getelementptr inbounds float, float* %498, i64 40
  %516 = bitcast float* %515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %516, i32 0, i32 1, i32 1)
  %517 = getelementptr inbounds float, float* %495, i64 48
  %518 = bitcast float* %517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %518, i32 0, i32 1, i32 1)
  %519 = getelementptr inbounds float, float* %498, i64 48
  %520 = bitcast float* %519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %520, i32 0, i32 1, i32 1)
  %521 = getelementptr inbounds float, float* %495, i64 56
  %522 = bitcast float* %521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %522, i32 0, i32 1, i32 1)
  %523 = getelementptr inbounds float, float* %498, i64 56
  %524 = bitcast float* %523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %524, i32 0, i32 1, i32 1)
  %525 = getelementptr inbounds float, float* %495, i64 64
  %526 = bitcast float* %525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %526, i32 0, i32 1, i32 1)
  %527 = getelementptr inbounds float, float* %498, i64 64
  %528 = bitcast float* %527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %528, i32 0, i32 1, i32 1)
  %529 = getelementptr inbounds float, float* %495, i64 72
  %530 = bitcast float* %529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %530, i32 0, i32 1, i32 1)
  %531 = getelementptr inbounds float, float* %498, i64 72
  %532 = bitcast float* %531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %532, i32 0, i32 1, i32 1)
  %533 = getelementptr inbounds float, float* %495, i64 80
  %534 = bitcast float* %533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %534, i32 0, i32 1, i32 1)
  %535 = getelementptr inbounds float, float* %498, i64 80
  %536 = bitcast float* %535 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %536, i32 0, i32 1, i32 1)
  %537 = getelementptr inbounds float, float* %495, i64 88
  %538 = bitcast float* %537 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %538, i32 0, i32 1, i32 1)
  %539 = getelementptr inbounds float, float* %498, i64 88
  %540 = bitcast float* %539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %540, i32 0, i32 1, i32 1)
  %541 = getelementptr inbounds float, float* %495, i64 96
  %542 = bitcast float* %541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %542, i32 0, i32 1, i32 1)
  %543 = getelementptr inbounds float, float* %498, i64 96
  %544 = bitcast float* %543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %544, i32 0, i32 1, i32 1)
  %545 = getelementptr inbounds float, float* %495, i64 104
  %546 = bitcast float* %545 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %546, i32 0, i32 1, i32 1)
  %547 = getelementptr inbounds float, float* %498, i64 104
  %548 = bitcast float* %547 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %548, i32 0, i32 1, i32 1)
  %549 = getelementptr inbounds float, float* %495, i64 112
  %550 = bitcast float* %549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %550, i32 0, i32 1, i32 1)
  %551 = getelementptr inbounds float, float* %498, i64 112
  %552 = bitcast float* %551 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %552, i32 0, i32 1, i32 1)
  %553 = bitcast float* %495 to <8 x float>*
  %554 = load <8 x float>, <8 x float>* %553, align 1, !tbaa !12
  %555 = or i64 %494, 8
  %556 = getelementptr inbounds float, float* %5, i64 %555
  %557 = bitcast float* %556 to <8 x float>*
  %558 = load <8 x float>, <8 x float>* %557, align 1, !tbaa !12
  %559 = add nuw nsw i64 %494, 16
  %560 = getelementptr inbounds float, float* %5, i64 %559
  %561 = bitcast float* %560 to <8 x float>*
  %562 = load <8 x float>, <8 x float>* %561, align 1, !tbaa !12
  %563 = add nuw nsw i64 %494, 24
  %564 = getelementptr inbounds float, float* %5, i64 %563
  %565 = bitcast float* %564 to <8 x float>*
  %566 = load <8 x float>, <8 x float>* %565, align 1, !tbaa !12
  %567 = add nuw nsw i64 %494, 32
  %568 = getelementptr inbounds float, float* %5, i64 %567
  %569 = bitcast float* %568 to <8 x float>*
  %570 = load <8 x float>, <8 x float>* %569, align 1, !tbaa !12
  %571 = add nuw nsw i64 %494, 40
  %572 = getelementptr inbounds float, float* %5, i64 %571
  %573 = bitcast float* %572 to <8 x float>*
  %574 = load <8 x float>, <8 x float>* %573, align 1, !tbaa !12
  %575 = add nuw nsw i64 %494, 48
  %576 = getelementptr inbounds float, float* %5, i64 %575
  %577 = bitcast float* %576 to <8 x float>*
  %578 = load <8 x float>, <8 x float>* %577, align 1, !tbaa !12
  %579 = add nuw nsw i64 %494, 56
  %580 = getelementptr inbounds float, float* %5, i64 %579
  %581 = bitcast float* %580 to <8 x float>*
  %582 = load <8 x float>, <8 x float>* %581, align 1, !tbaa !12
  %583 = add nuw nsw i64 %494, 64
  %584 = getelementptr inbounds float, float* %5, i64 %583
  %585 = bitcast float* %584 to <8 x float>*
  %586 = load <8 x float>, <8 x float>* %585, align 1, !tbaa !12
  %587 = add nuw nsw i64 %494, 72
  %588 = getelementptr inbounds float, float* %5, i64 %587
  %589 = bitcast float* %588 to <8 x float>*
  %590 = load <8 x float>, <8 x float>* %589, align 1, !tbaa !12
  %591 = add nuw nsw i64 %494, 80
  %592 = getelementptr inbounds float, float* %5, i64 %591
  %593 = bitcast float* %592 to <8 x float>*
  %594 = load <8 x float>, <8 x float>* %593, align 1, !tbaa !12
  %595 = add nuw nsw i64 %494, 88
  %596 = getelementptr inbounds float, float* %5, i64 %595
  %597 = bitcast float* %596 to <8 x float>*
  %598 = load <8 x float>, <8 x float>* %597, align 1, !tbaa !12
  %599 = add nuw nsw i64 %494, 96
  %600 = getelementptr inbounds float, float* %5, i64 %599
  %601 = bitcast float* %600 to <8 x float>*
  %602 = load <8 x float>, <8 x float>* %601, align 1, !tbaa !12
  %603 = add nuw nsw i64 %494, 104
  %604 = getelementptr inbounds float, float* %5, i64 %603
  %605 = bitcast float* %604 to <8 x float>*
  %606 = load <8 x float>, <8 x float>* %605, align 1, !tbaa !12
  %607 = add nsw i64 %494, %298
  %608 = getelementptr inbounds float, float* %3, i64 %607
  %609 = bitcast float* %608 to <8 x float>*
  %610 = load <8 x float>, <8 x float>* %609, align 1, !tbaa !12
  %611 = add nsw i64 %607, 8
  %612 = getelementptr inbounds float, float* %3, i64 %611
  %613 = bitcast float* %612 to <8 x float>*
  %614 = load <8 x float>, <8 x float>* %613, align 1, !tbaa !12
  %615 = add nsw i64 %607, 16
  %616 = getelementptr inbounds float, float* %3, i64 %615
  %617 = bitcast float* %616 to <8 x float>*
  %618 = load <8 x float>, <8 x float>* %617, align 1, !tbaa !12
  %619 = add nsw i64 %607, 24
  %620 = getelementptr inbounds float, float* %3, i64 %619
  %621 = bitcast float* %620 to <8 x float>*
  %622 = load <8 x float>, <8 x float>* %621, align 1, !tbaa !12
  %623 = add nsw i64 %607, 32
  %624 = getelementptr inbounds float, float* %3, i64 %623
  %625 = bitcast float* %624 to <8 x float>*
  %626 = load <8 x float>, <8 x float>* %625, align 1, !tbaa !12
  %627 = add nsw i64 %607, 40
  %628 = getelementptr inbounds float, float* %3, i64 %627
  %629 = bitcast float* %628 to <8 x float>*
  %630 = load <8 x float>, <8 x float>* %629, align 1, !tbaa !12
  %631 = add nsw i64 %607, 48
  %632 = getelementptr inbounds float, float* %3, i64 %631
  %633 = bitcast float* %632 to <8 x float>*
  %634 = load <8 x float>, <8 x float>* %633, align 1, !tbaa !12
  %635 = add nsw i64 %607, 56
  %636 = getelementptr inbounds float, float* %3, i64 %635
  %637 = bitcast float* %636 to <8 x float>*
  %638 = load <8 x float>, <8 x float>* %637, align 1, !tbaa !12
  %639 = add nsw i64 %607, 64
  %640 = getelementptr inbounds float, float* %3, i64 %639
  %641 = bitcast float* %640 to <8 x float>*
  %642 = load <8 x float>, <8 x float>* %641, align 1, !tbaa !12
  %643 = add nsw i64 %607, 72
  %644 = getelementptr inbounds float, float* %3, i64 %643
  %645 = bitcast float* %644 to <8 x float>*
  %646 = load <8 x float>, <8 x float>* %645, align 1, !tbaa !12
  %647 = add nsw i64 %607, 80
  %648 = getelementptr inbounds float, float* %3, i64 %647
  %649 = bitcast float* %648 to <8 x float>*
  %650 = load <8 x float>, <8 x float>* %649, align 1, !tbaa !12
  %651 = add nsw i64 %607, 88
  %652 = getelementptr inbounds float, float* %3, i64 %651
  %653 = bitcast float* %652 to <8 x float>*
  %654 = load <8 x float>, <8 x float>* %653, align 1, !tbaa !12
  %655 = add nsw i64 %607, 96
  %656 = getelementptr inbounds float, float* %3, i64 %655
  %657 = bitcast float* %656 to <8 x float>*
  %658 = load <8 x float>, <8 x float>* %657, align 1, !tbaa !12
  %659 = add nsw i64 %607, 104
  %660 = getelementptr inbounds float, float* %3, i64 %659
  %661 = bitcast float* %660 to <8 x float>*
  %662 = load <8 x float>, <8 x float>* %661, align 1, !tbaa !12
  %663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %610, <8 x float> %35, <8 x float> %554) #10
  %664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %614, <8 x float> %35, <8 x float> %558) #10
  %665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %618, <8 x float> %35, <8 x float> %562) #10
  %666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %622, <8 x float> %35, <8 x float> %566) #10
  %667 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %626, <8 x float> %35, <8 x float> %570) #10
  %668 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %630, <8 x float> %35, <8 x float> %574) #10
  %669 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %634, <8 x float> %35, <8 x float> %578) #10
  %670 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %638, <8 x float> %35, <8 x float> %582) #10
  %671 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %642, <8 x float> %35, <8 x float> %586) #10
  %672 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %646, <8 x float> %35, <8 x float> %590) #10
  %673 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %650, <8 x float> %35, <8 x float> %594) #10
  %674 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %654, <8 x float> %35, <8 x float> %598) #10
  %675 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %658, <8 x float> %35, <8 x float> %602) #10
  %676 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %662, <8 x float> %35, <8 x float> %606) #10
  store <8 x float> %663, <8 x float>* %553, align 1, !tbaa !12
  store <8 x float> %664, <8 x float>* %557, align 1, !tbaa !12
  store <8 x float> %665, <8 x float>* %561, align 1, !tbaa !12
  store <8 x float> %666, <8 x float>* %565, align 1, !tbaa !12
  store <8 x float> %667, <8 x float>* %569, align 1, !tbaa !12
  store <8 x float> %668, <8 x float>* %573, align 1, !tbaa !12
  store <8 x float> %669, <8 x float>* %577, align 1, !tbaa !12
  store <8 x float> %670, <8 x float>* %581, align 1, !tbaa !12
  store <8 x float> %671, <8 x float>* %585, align 1, !tbaa !12
  store <8 x float> %672, <8 x float>* %589, align 1, !tbaa !12
  store <8 x float> %673, <8 x float>* %593, align 1, !tbaa !12
  store <8 x float> %674, <8 x float>* %597, align 1, !tbaa !12
  store <8 x float> %675, <8 x float>* %601, align 1, !tbaa !12
  store <8 x float> %676, <8 x float>* %605, align 1, !tbaa !12
  %677 = add nuw nsw i64 %494, 112
  %678 = icmp ult i64 %677, %299
  br i1 %678, label %493, label %486

679:                                              ; preds = %685
  br i1 %488, label %680, label %1078

680:                                              ; preds = %679
  %681 = trunc i64 %41 to i32
  %682 = mul nsw i32 %487, %681
  %683 = sext i32 %682 to i64
  %684 = zext i32 %487 to i64
  br label %892

685:                                              ; preds = %489, %685
  %686 = phi i64 [ 0, %489 ], [ %884, %685 ]
  %687 = getelementptr inbounds float, float* %5, i64 %686
  %688 = getelementptr inbounds float, float* %687, i64 8
  %689 = bitcast float* %688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %689, i32 0, i32 1, i32 1)
  %690 = getelementptr inbounds float, float* %3, i64 %686
  %691 = getelementptr inbounds float, float* %690, i64 8
  %692 = bitcast float* %691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %692, i32 0, i32 1, i32 1)
  %693 = getelementptr inbounds float, float* %687, i64 16
  %694 = bitcast float* %693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %694, i32 0, i32 1, i32 1)
  %695 = getelementptr inbounds float, float* %690, i64 16
  %696 = bitcast float* %695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %696, i32 0, i32 1, i32 1)
  %697 = getelementptr inbounds float, float* %687, i64 24
  %698 = bitcast float* %697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %698, i32 0, i32 1, i32 1)
  %699 = getelementptr inbounds float, float* %690, i64 24
  %700 = bitcast float* %699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %700, i32 0, i32 1, i32 1)
  %701 = getelementptr inbounds float, float* %687, i64 32
  %702 = bitcast float* %701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %702, i32 0, i32 1, i32 1)
  %703 = getelementptr inbounds float, float* %690, i64 32
  %704 = bitcast float* %703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %704, i32 0, i32 1, i32 1)
  %705 = getelementptr inbounds float, float* %687, i64 40
  %706 = bitcast float* %705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %706, i32 0, i32 1, i32 1)
  %707 = getelementptr inbounds float, float* %690, i64 40
  %708 = bitcast float* %707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %708, i32 0, i32 1, i32 1)
  %709 = getelementptr inbounds float, float* %687, i64 48
  %710 = bitcast float* %709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %710, i32 0, i32 1, i32 1)
  %711 = getelementptr inbounds float, float* %690, i64 48
  %712 = bitcast float* %711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %712, i32 0, i32 1, i32 1)
  %713 = getelementptr inbounds float, float* %687, i64 56
  %714 = bitcast float* %713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %714, i32 0, i32 1, i32 1)
  %715 = getelementptr inbounds float, float* %690, i64 56
  %716 = bitcast float* %715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %716, i32 0, i32 1, i32 1)
  %717 = getelementptr inbounds float, float* %687, i64 64
  %718 = bitcast float* %717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %718, i32 0, i32 1, i32 1)
  %719 = getelementptr inbounds float, float* %690, i64 64
  %720 = bitcast float* %719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %720, i32 0, i32 1, i32 1)
  %721 = getelementptr inbounds float, float* %687, i64 72
  %722 = bitcast float* %721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %722, i32 0, i32 1, i32 1)
  %723 = getelementptr inbounds float, float* %690, i64 72
  %724 = bitcast float* %723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %724, i32 0, i32 1, i32 1)
  %725 = getelementptr inbounds float, float* %687, i64 80
  %726 = bitcast float* %725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %726, i32 0, i32 1, i32 1)
  %727 = getelementptr inbounds float, float* %690, i64 80
  %728 = bitcast float* %727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %728, i32 0, i32 1, i32 1)
  %729 = getelementptr inbounds float, float* %687, i64 88
  %730 = bitcast float* %729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %730, i32 0, i32 1, i32 1)
  %731 = getelementptr inbounds float, float* %690, i64 88
  %732 = bitcast float* %731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %732, i32 0, i32 1, i32 1)
  %733 = getelementptr inbounds float, float* %687, i64 96
  %734 = bitcast float* %733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %734, i32 0, i32 1, i32 1)
  %735 = getelementptr inbounds float, float* %690, i64 96
  %736 = bitcast float* %735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %736, i32 0, i32 1, i32 1)
  %737 = getelementptr inbounds float, float* %687, i64 104
  %738 = bitcast float* %737 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %738, i32 0, i32 1, i32 1)
  %739 = getelementptr inbounds float, float* %690, i64 104
  %740 = bitcast float* %739 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %740, i32 0, i32 1, i32 1)
  %741 = getelementptr inbounds float, float* %687, i64 112
  %742 = bitcast float* %741 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %742, i32 0, i32 1, i32 1)
  %743 = getelementptr inbounds float, float* %690, i64 112
  %744 = bitcast float* %743 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %744, i32 0, i32 1, i32 1)
  %745 = bitcast float* %687 to <8 x float>*
  %746 = load <8 x float>, <8 x float>* %745, align 1, !tbaa !12
  %747 = or i64 %686, 8
  %748 = getelementptr inbounds float, float* %5, i64 %747
  %749 = bitcast float* %748 to <8 x float>*
  %750 = load <8 x float>, <8 x float>* %749, align 1, !tbaa !12
  %751 = add nuw nsw i64 %686, 16
  %752 = getelementptr inbounds float, float* %5, i64 %751
  %753 = bitcast float* %752 to <8 x float>*
  %754 = load <8 x float>, <8 x float>* %753, align 1, !tbaa !12
  %755 = add nuw nsw i64 %686, 24
  %756 = getelementptr inbounds float, float* %5, i64 %755
  %757 = bitcast float* %756 to <8 x float>*
  %758 = load <8 x float>, <8 x float>* %757, align 1, !tbaa !12
  %759 = add nuw nsw i64 %686, 32
  %760 = getelementptr inbounds float, float* %5, i64 %759
  %761 = bitcast float* %760 to <8 x float>*
  %762 = load <8 x float>, <8 x float>* %761, align 1, !tbaa !12
  %763 = add nuw nsw i64 %686, 40
  %764 = getelementptr inbounds float, float* %5, i64 %763
  %765 = bitcast float* %764 to <8 x float>*
  %766 = load <8 x float>, <8 x float>* %765, align 1, !tbaa !12
  %767 = add nuw nsw i64 %686, 48
  %768 = getelementptr inbounds float, float* %5, i64 %767
  %769 = bitcast float* %768 to <8 x float>*
  %770 = load <8 x float>, <8 x float>* %769, align 1, !tbaa !12
  %771 = add nuw nsw i64 %686, 56
  %772 = getelementptr inbounds float, float* %5, i64 %771
  %773 = bitcast float* %772 to <8 x float>*
  %774 = load <8 x float>, <8 x float>* %773, align 1, !tbaa !12
  %775 = add nuw nsw i64 %686, 64
  %776 = getelementptr inbounds float, float* %5, i64 %775
  %777 = bitcast float* %776 to <8 x float>*
  %778 = load <8 x float>, <8 x float>* %777, align 1, !tbaa !12
  %779 = add nuw nsw i64 %686, 72
  %780 = getelementptr inbounds float, float* %5, i64 %779
  %781 = bitcast float* %780 to <8 x float>*
  %782 = load <8 x float>, <8 x float>* %781, align 1, !tbaa !12
  %783 = add nuw nsw i64 %686, 80
  %784 = getelementptr inbounds float, float* %5, i64 %783
  %785 = bitcast float* %784 to <8 x float>*
  %786 = load <8 x float>, <8 x float>* %785, align 1, !tbaa !12
  %787 = add nuw nsw i64 %686, 88
  %788 = getelementptr inbounds float, float* %5, i64 %787
  %789 = bitcast float* %788 to <8 x float>*
  %790 = load <8 x float>, <8 x float>* %789, align 1, !tbaa !12
  %791 = add nuw nsw i64 %686, 96
  %792 = getelementptr inbounds float, float* %5, i64 %791
  %793 = bitcast float* %792 to <8 x float>*
  %794 = load <8 x float>, <8 x float>* %793, align 1, !tbaa !12
  %795 = add nuw nsw i64 %686, 104
  %796 = getelementptr inbounds float, float* %5, i64 %795
  %797 = bitcast float* %796 to <8 x float>*
  %798 = load <8 x float>, <8 x float>* %797, align 1, !tbaa !12
  %799 = trunc i64 %686 to i32
  %800 = add nsw i32 %492, %799
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds float, float* %3, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nsw i32 %800, 8
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds float, float* %3, i64 %806
  %808 = bitcast float* %807 to <8 x float>*
  %809 = load <8 x float>, <8 x float>* %808, align 1, !tbaa !12
  %810 = add nsw i32 %800, 16
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds float, float* %3, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %814 = load <8 x float>, <8 x float>* %813, align 1, !tbaa !12
  %815 = add nsw i32 %800, 24
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds float, float* %3, i64 %816
  %818 = bitcast float* %817 to <8 x float>*
  %819 = load <8 x float>, <8 x float>* %818, align 1, !tbaa !12
  %820 = add nsw i32 %800, 32
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float, float* %3, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %824 = load <8 x float>, <8 x float>* %823, align 1, !tbaa !12
  %825 = add nsw i32 %800, 40
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds float, float* %3, i64 %826
  %828 = bitcast float* %827 to <8 x float>*
  %829 = load <8 x float>, <8 x float>* %828, align 1, !tbaa !12
  %830 = add nsw i32 %800, 48
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds float, float* %3, i64 %831
  %833 = bitcast float* %832 to <8 x float>*
  %834 = load <8 x float>, <8 x float>* %833, align 1, !tbaa !12
  %835 = add nsw i32 %800, 56
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float, float* %3, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nsw i32 %800, 64
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds float, float* %3, i64 %841
  %843 = bitcast float* %842 to <8 x float>*
  %844 = load <8 x float>, <8 x float>* %843, align 1, !tbaa !12
  %845 = add nsw i32 %800, 72
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds float, float* %3, i64 %846
  %848 = bitcast float* %847 to <8 x float>*
  %849 = load <8 x float>, <8 x float>* %848, align 1, !tbaa !12
  %850 = add nsw i32 %800, 80
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds float, float* %3, i64 %851
  %853 = bitcast float* %852 to <8 x float>*
  %854 = load <8 x float>, <8 x float>* %853, align 1, !tbaa !12
  %855 = add nsw i32 %800, 88
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds float, float* %3, i64 %856
  %858 = bitcast float* %857 to <8 x float>*
  %859 = load <8 x float>, <8 x float>* %858, align 1, !tbaa !12
  %860 = add nsw i32 %800, 96
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds float, float* %3, i64 %861
  %863 = bitcast float* %862 to <8 x float>*
  %864 = load <8 x float>, <8 x float>* %863, align 1, !tbaa !12
  %865 = add nsw i32 %800, 104
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds float, float* %3, i64 %866
  %868 = bitcast float* %867 to <8 x float>*
  %869 = load <8 x float>, <8 x float>* %868, align 1, !tbaa !12
  %870 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %804, <8 x float> %40, <8 x float> %746) #10
  %871 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %809, <8 x float> %40, <8 x float> %750) #10
  %872 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %814, <8 x float> %40, <8 x float> %754) #10
  %873 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %819, <8 x float> %40, <8 x float> %758) #10
  %874 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %824, <8 x float> %40, <8 x float> %762) #10
  %875 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %829, <8 x float> %40, <8 x float> %766) #10
  %876 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %834, <8 x float> %40, <8 x float> %770) #10
  %877 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %839, <8 x float> %40, <8 x float> %774) #10
  %878 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %844, <8 x float> %40, <8 x float> %778) #10
  %879 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %849, <8 x float> %40, <8 x float> %782) #10
  %880 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %854, <8 x float> %40, <8 x float> %786) #10
  %881 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %859, <8 x float> %40, <8 x float> %790) #10
  %882 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %864, <8 x float> %40, <8 x float> %794) #10
  %883 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %869, <8 x float> %40, <8 x float> %798) #10
  store <8 x float> %870, <8 x float>* %745, align 1, !tbaa !12
  store <8 x float> %871, <8 x float>* %749, align 1, !tbaa !12
  store <8 x float> %872, <8 x float>* %753, align 1, !tbaa !12
  store <8 x float> %873, <8 x float>* %757, align 1, !tbaa !12
  store <8 x float> %874, <8 x float>* %761, align 1, !tbaa !12
  store <8 x float> %875, <8 x float>* %765, align 1, !tbaa !12
  store <8 x float> %876, <8 x float>* %769, align 1, !tbaa !12
  store <8 x float> %877, <8 x float>* %773, align 1, !tbaa !12
  store <8 x float> %878, <8 x float>* %777, align 1, !tbaa !12
  store <8 x float> %879, <8 x float>* %781, align 1, !tbaa !12
  store <8 x float> %880, <8 x float>* %785, align 1, !tbaa !12
  store <8 x float> %881, <8 x float>* %789, align 1, !tbaa !12
  store <8 x float> %882, <8 x float>* %793, align 1, !tbaa !12
  store <8 x float> %883, <8 x float>* %797, align 1, !tbaa !12
  %884 = add nuw nsw i64 %686, 112
  %885 = icmp ult i64 %884, %490
  br i1 %885, label %685, label %679

886:                                              ; preds = %892
  br i1 %488, label %887, label %1078

887:                                              ; preds = %886
  %888 = trunc i64 %46 to i32
  %889 = mul nsw i32 %487, %888
  %890 = sext i32 %889 to i64
  %891 = zext i32 %487 to i64
  br label %1085

892:                                              ; preds = %680, %892
  %893 = phi i64 [ 0, %680 ], [ %1076, %892 ]
  %894 = getelementptr inbounds float, float* %5, i64 %893
  %895 = getelementptr inbounds float, float* %894, i64 8
  %896 = bitcast float* %895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %896, i32 0, i32 1, i32 1)
  %897 = getelementptr inbounds float, float* %3, i64 %893
  %898 = getelementptr inbounds float, float* %897, i64 8
  %899 = bitcast float* %898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %899, i32 0, i32 1, i32 1)
  %900 = getelementptr inbounds float, float* %894, i64 16
  %901 = bitcast float* %900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %901, i32 0, i32 1, i32 1)
  %902 = getelementptr inbounds float, float* %897, i64 16
  %903 = bitcast float* %902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %903, i32 0, i32 1, i32 1)
  %904 = getelementptr inbounds float, float* %894, i64 24
  %905 = bitcast float* %904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %905, i32 0, i32 1, i32 1)
  %906 = getelementptr inbounds float, float* %897, i64 24
  %907 = bitcast float* %906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %907, i32 0, i32 1, i32 1)
  %908 = getelementptr inbounds float, float* %894, i64 32
  %909 = bitcast float* %908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %909, i32 0, i32 1, i32 1)
  %910 = getelementptr inbounds float, float* %897, i64 32
  %911 = bitcast float* %910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %911, i32 0, i32 1, i32 1)
  %912 = getelementptr inbounds float, float* %894, i64 40
  %913 = bitcast float* %912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %913, i32 0, i32 1, i32 1)
  %914 = getelementptr inbounds float, float* %897, i64 40
  %915 = bitcast float* %914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %915, i32 0, i32 1, i32 1)
  %916 = getelementptr inbounds float, float* %894, i64 48
  %917 = bitcast float* %916 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %917, i32 0, i32 1, i32 1)
  %918 = getelementptr inbounds float, float* %897, i64 48
  %919 = bitcast float* %918 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %919, i32 0, i32 1, i32 1)
  %920 = getelementptr inbounds float, float* %894, i64 56
  %921 = bitcast float* %920 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %921, i32 0, i32 1, i32 1)
  %922 = getelementptr inbounds float, float* %897, i64 56
  %923 = bitcast float* %922 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %923, i32 0, i32 1, i32 1)
  %924 = getelementptr inbounds float, float* %894, i64 64
  %925 = bitcast float* %924 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %925, i32 0, i32 1, i32 1)
  %926 = getelementptr inbounds float, float* %897, i64 64
  %927 = bitcast float* %926 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %927, i32 0, i32 1, i32 1)
  %928 = getelementptr inbounds float, float* %894, i64 72
  %929 = bitcast float* %928 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %929, i32 0, i32 1, i32 1)
  %930 = getelementptr inbounds float, float* %897, i64 72
  %931 = bitcast float* %930 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %931, i32 0, i32 1, i32 1)
  %932 = getelementptr inbounds float, float* %894, i64 80
  %933 = bitcast float* %932 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %933, i32 0, i32 1, i32 1)
  %934 = getelementptr inbounds float, float* %897, i64 80
  %935 = bitcast float* %934 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %935, i32 0, i32 1, i32 1)
  %936 = getelementptr inbounds float, float* %894, i64 88
  %937 = bitcast float* %936 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %937, i32 0, i32 1, i32 1)
  %938 = getelementptr inbounds float, float* %897, i64 88
  %939 = bitcast float* %938 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %939, i32 0, i32 1, i32 1)
  %940 = getelementptr inbounds float, float* %894, i64 96
  %941 = bitcast float* %940 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %941, i32 0, i32 1, i32 1)
  %942 = getelementptr inbounds float, float* %897, i64 96
  %943 = bitcast float* %942 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %943, i32 0, i32 1, i32 1)
  %944 = getelementptr inbounds float, float* %894, i64 104
  %945 = bitcast float* %944 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %945, i32 0, i32 1, i32 1)
  %946 = getelementptr inbounds float, float* %897, i64 104
  %947 = bitcast float* %946 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %947, i32 0, i32 1, i32 1)
  %948 = getelementptr inbounds float, float* %894, i64 112
  %949 = bitcast float* %948 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %949, i32 0, i32 1, i32 1)
  %950 = getelementptr inbounds float, float* %897, i64 112
  %951 = bitcast float* %950 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %951, i32 0, i32 1, i32 1)
  %952 = bitcast float* %894 to <8 x float>*
  %953 = load <8 x float>, <8 x float>* %952, align 1, !tbaa !12
  %954 = or i64 %893, 8
  %955 = getelementptr inbounds float, float* %5, i64 %954
  %956 = bitcast float* %955 to <8 x float>*
  %957 = load <8 x float>, <8 x float>* %956, align 1, !tbaa !12
  %958 = add nuw nsw i64 %893, 16
  %959 = getelementptr inbounds float, float* %5, i64 %958
  %960 = bitcast float* %959 to <8 x float>*
  %961 = load <8 x float>, <8 x float>* %960, align 1, !tbaa !12
  %962 = add nuw nsw i64 %893, 24
  %963 = getelementptr inbounds float, float* %5, i64 %962
  %964 = bitcast float* %963 to <8 x float>*
  %965 = load <8 x float>, <8 x float>* %964, align 1, !tbaa !12
  %966 = add nuw nsw i64 %893, 32
  %967 = getelementptr inbounds float, float* %5, i64 %966
  %968 = bitcast float* %967 to <8 x float>*
  %969 = load <8 x float>, <8 x float>* %968, align 1, !tbaa !12
  %970 = add nuw nsw i64 %893, 40
  %971 = getelementptr inbounds float, float* %5, i64 %970
  %972 = bitcast float* %971 to <8 x float>*
  %973 = load <8 x float>, <8 x float>* %972, align 1, !tbaa !12
  %974 = add nuw nsw i64 %893, 48
  %975 = getelementptr inbounds float, float* %5, i64 %974
  %976 = bitcast float* %975 to <8 x float>*
  %977 = load <8 x float>, <8 x float>* %976, align 1, !tbaa !12
  %978 = add nuw nsw i64 %893, 56
  %979 = getelementptr inbounds float, float* %5, i64 %978
  %980 = bitcast float* %979 to <8 x float>*
  %981 = load <8 x float>, <8 x float>* %980, align 1, !tbaa !12
  %982 = add nuw nsw i64 %893, 64
  %983 = getelementptr inbounds float, float* %5, i64 %982
  %984 = bitcast float* %983 to <8 x float>*
  %985 = load <8 x float>, <8 x float>* %984, align 1, !tbaa !12
  %986 = add nuw nsw i64 %893, 72
  %987 = getelementptr inbounds float, float* %5, i64 %986
  %988 = bitcast float* %987 to <8 x float>*
  %989 = load <8 x float>, <8 x float>* %988, align 1, !tbaa !12
  %990 = add nuw nsw i64 %893, 80
  %991 = getelementptr inbounds float, float* %5, i64 %990
  %992 = bitcast float* %991 to <8 x float>*
  %993 = load <8 x float>, <8 x float>* %992, align 1, !tbaa !12
  %994 = add nuw nsw i64 %893, 88
  %995 = getelementptr inbounds float, float* %5, i64 %994
  %996 = bitcast float* %995 to <8 x float>*
  %997 = load <8 x float>, <8 x float>* %996, align 1, !tbaa !12
  %998 = add nuw nsw i64 %893, 96
  %999 = getelementptr inbounds float, float* %5, i64 %998
  %1000 = bitcast float* %999 to <8 x float>*
  %1001 = load <8 x float>, <8 x float>* %1000, align 1, !tbaa !12
  %1002 = add nuw nsw i64 %893, 104
  %1003 = getelementptr inbounds float, float* %5, i64 %1002
  %1004 = bitcast float* %1003 to <8 x float>*
  %1005 = load <8 x float>, <8 x float>* %1004, align 1, !tbaa !12
  %1006 = add nsw i64 %893, %683
  %1007 = getelementptr inbounds float, float* %3, i64 %1006
  %1008 = bitcast float* %1007 to <8 x float>*
  %1009 = load <8 x float>, <8 x float>* %1008, align 1, !tbaa !12
  %1010 = add nsw i64 %1006, 8
  %1011 = getelementptr inbounds float, float* %3, i64 %1010
  %1012 = bitcast float* %1011 to <8 x float>*
  %1013 = load <8 x float>, <8 x float>* %1012, align 1, !tbaa !12
  %1014 = add nsw i64 %1006, 16
  %1015 = getelementptr inbounds float, float* %3, i64 %1014
  %1016 = bitcast float* %1015 to <8 x float>*
  %1017 = load <8 x float>, <8 x float>* %1016, align 1, !tbaa !12
  %1018 = add nsw i64 %1006, 24
  %1019 = getelementptr inbounds float, float* %3, i64 %1018
  %1020 = bitcast float* %1019 to <8 x float>*
  %1021 = load <8 x float>, <8 x float>* %1020, align 1, !tbaa !12
  %1022 = add nsw i64 %1006, 32
  %1023 = getelementptr inbounds float, float* %3, i64 %1022
  %1024 = bitcast float* %1023 to <8 x float>*
  %1025 = load <8 x float>, <8 x float>* %1024, align 1, !tbaa !12
  %1026 = add nsw i64 %1006, 40
  %1027 = getelementptr inbounds float, float* %3, i64 %1026
  %1028 = bitcast float* %1027 to <8 x float>*
  %1029 = load <8 x float>, <8 x float>* %1028, align 1, !tbaa !12
  %1030 = add nsw i64 %1006, 48
  %1031 = getelementptr inbounds float, float* %3, i64 %1030
  %1032 = bitcast float* %1031 to <8 x float>*
  %1033 = load <8 x float>, <8 x float>* %1032, align 1, !tbaa !12
  %1034 = add nsw i64 %1006, 56
  %1035 = getelementptr inbounds float, float* %3, i64 %1034
  %1036 = bitcast float* %1035 to <8 x float>*
  %1037 = load <8 x float>, <8 x float>* %1036, align 1, !tbaa !12
  %1038 = add nsw i64 %1006, 64
  %1039 = getelementptr inbounds float, float* %3, i64 %1038
  %1040 = bitcast float* %1039 to <8 x float>*
  %1041 = load <8 x float>, <8 x float>* %1040, align 1, !tbaa !12
  %1042 = add nsw i64 %1006, 72
  %1043 = getelementptr inbounds float, float* %3, i64 %1042
  %1044 = bitcast float* %1043 to <8 x float>*
  %1045 = load <8 x float>, <8 x float>* %1044, align 1, !tbaa !12
  %1046 = add nsw i64 %1006, 80
  %1047 = getelementptr inbounds float, float* %3, i64 %1046
  %1048 = bitcast float* %1047 to <8 x float>*
  %1049 = load <8 x float>, <8 x float>* %1048, align 1, !tbaa !12
  %1050 = add nsw i64 %1006, 88
  %1051 = getelementptr inbounds float, float* %3, i64 %1050
  %1052 = bitcast float* %1051 to <8 x float>*
  %1053 = load <8 x float>, <8 x float>* %1052, align 1, !tbaa !12
  %1054 = add nsw i64 %1006, 96
  %1055 = getelementptr inbounds float, float* %3, i64 %1054
  %1056 = bitcast float* %1055 to <8 x float>*
  %1057 = load <8 x float>, <8 x float>* %1056, align 1, !tbaa !12
  %1058 = add nsw i64 %1006, 104
  %1059 = getelementptr inbounds float, float* %3, i64 %1058
  %1060 = bitcast float* %1059 to <8 x float>*
  %1061 = load <8 x float>, <8 x float>* %1060, align 1, !tbaa !12
  %1062 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1009, <8 x float> %45, <8 x float> %953) #10
  %1063 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1013, <8 x float> %45, <8 x float> %957) #10
  %1064 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1017, <8 x float> %45, <8 x float> %961) #10
  %1065 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1021, <8 x float> %45, <8 x float> %965) #10
  %1066 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1025, <8 x float> %45, <8 x float> %969) #10
  %1067 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1029, <8 x float> %45, <8 x float> %973) #10
  %1068 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1033, <8 x float> %45, <8 x float> %977) #10
  %1069 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1037, <8 x float> %45, <8 x float> %981) #10
  %1070 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1041, <8 x float> %45, <8 x float> %985) #10
  %1071 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1045, <8 x float> %45, <8 x float> %989) #10
  %1072 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1049, <8 x float> %45, <8 x float> %993) #10
  %1073 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1053, <8 x float> %45, <8 x float> %997) #10
  %1074 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1057, <8 x float> %45, <8 x float> %1001) #10
  %1075 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1061, <8 x float> %45, <8 x float> %1005) #10
  store <8 x float> %1062, <8 x float>* %952, align 1, !tbaa !12
  store <8 x float> %1063, <8 x float>* %956, align 1, !tbaa !12
  store <8 x float> %1064, <8 x float>* %960, align 1, !tbaa !12
  store <8 x float> %1065, <8 x float>* %964, align 1, !tbaa !12
  store <8 x float> %1066, <8 x float>* %968, align 1, !tbaa !12
  store <8 x float> %1067, <8 x float>* %972, align 1, !tbaa !12
  store <8 x float> %1068, <8 x float>* %976, align 1, !tbaa !12
  store <8 x float> %1069, <8 x float>* %980, align 1, !tbaa !12
  store <8 x float> %1070, <8 x float>* %984, align 1, !tbaa !12
  store <8 x float> %1071, <8 x float>* %988, align 1, !tbaa !12
  store <8 x float> %1072, <8 x float>* %992, align 1, !tbaa !12
  store <8 x float> %1073, <8 x float>* %996, align 1, !tbaa !12
  store <8 x float> %1074, <8 x float>* %1000, align 1, !tbaa !12
  store <8 x float> %1075, <8 x float>* %1004, align 1, !tbaa !12
  %1076 = add nuw nsw i64 %893, 112
  %1077 = icmp ult i64 %1076, %684
  br i1 %1077, label %892, label %886

1078:                                             ; preds = %1085, %679, %886
  %1079 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1080 = icmp sgt i32 %1079, 0
  br i1 %1080, label %1081, label %2262

1081:                                             ; preds = %1078
  %1082 = zext i32 %1079 to i64
  %1083 = trunc i64 %51 to i32
  %1084 = mul nsw i32 %1079, %1083
  br label %1277

1085:                                             ; preds = %887, %1085
  %1086 = phi i64 [ 0, %887 ], [ %1269, %1085 ]
  %1087 = getelementptr inbounds float, float* %5, i64 %1086
  %1088 = getelementptr inbounds float, float* %1087, i64 8
  %1089 = bitcast float* %1088 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1089, i32 0, i32 1, i32 1)
  %1090 = getelementptr inbounds float, float* %3, i64 %1086
  %1091 = getelementptr inbounds float, float* %1090, i64 8
  %1092 = bitcast float* %1091 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1092, i32 0, i32 1, i32 1)
  %1093 = getelementptr inbounds float, float* %1087, i64 16
  %1094 = bitcast float* %1093 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1094, i32 0, i32 1, i32 1)
  %1095 = getelementptr inbounds float, float* %1090, i64 16
  %1096 = bitcast float* %1095 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1096, i32 0, i32 1, i32 1)
  %1097 = getelementptr inbounds float, float* %1087, i64 24
  %1098 = bitcast float* %1097 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1098, i32 0, i32 1, i32 1)
  %1099 = getelementptr inbounds float, float* %1090, i64 24
  %1100 = bitcast float* %1099 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1100, i32 0, i32 1, i32 1)
  %1101 = getelementptr inbounds float, float* %1087, i64 32
  %1102 = bitcast float* %1101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1102, i32 0, i32 1, i32 1)
  %1103 = getelementptr inbounds float, float* %1090, i64 32
  %1104 = bitcast float* %1103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1104, i32 0, i32 1, i32 1)
  %1105 = getelementptr inbounds float, float* %1087, i64 40
  %1106 = bitcast float* %1105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1106, i32 0, i32 1, i32 1)
  %1107 = getelementptr inbounds float, float* %1090, i64 40
  %1108 = bitcast float* %1107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1108, i32 0, i32 1, i32 1)
  %1109 = getelementptr inbounds float, float* %1087, i64 48
  %1110 = bitcast float* %1109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1110, i32 0, i32 1, i32 1)
  %1111 = getelementptr inbounds float, float* %1090, i64 48
  %1112 = bitcast float* %1111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1112, i32 0, i32 1, i32 1)
  %1113 = getelementptr inbounds float, float* %1087, i64 56
  %1114 = bitcast float* %1113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1114, i32 0, i32 1, i32 1)
  %1115 = getelementptr inbounds float, float* %1090, i64 56
  %1116 = bitcast float* %1115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1116, i32 0, i32 1, i32 1)
  %1117 = getelementptr inbounds float, float* %1087, i64 64
  %1118 = bitcast float* %1117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1118, i32 0, i32 1, i32 1)
  %1119 = getelementptr inbounds float, float* %1090, i64 64
  %1120 = bitcast float* %1119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1120, i32 0, i32 1, i32 1)
  %1121 = getelementptr inbounds float, float* %1087, i64 72
  %1122 = bitcast float* %1121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1122, i32 0, i32 1, i32 1)
  %1123 = getelementptr inbounds float, float* %1090, i64 72
  %1124 = bitcast float* %1123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1124, i32 0, i32 1, i32 1)
  %1125 = getelementptr inbounds float, float* %1087, i64 80
  %1126 = bitcast float* %1125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1126, i32 0, i32 1, i32 1)
  %1127 = getelementptr inbounds float, float* %1090, i64 80
  %1128 = bitcast float* %1127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1128, i32 0, i32 1, i32 1)
  %1129 = getelementptr inbounds float, float* %1087, i64 88
  %1130 = bitcast float* %1129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1130, i32 0, i32 1, i32 1)
  %1131 = getelementptr inbounds float, float* %1090, i64 88
  %1132 = bitcast float* %1131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1132, i32 0, i32 1, i32 1)
  %1133 = getelementptr inbounds float, float* %1087, i64 96
  %1134 = bitcast float* %1133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1134, i32 0, i32 1, i32 1)
  %1135 = getelementptr inbounds float, float* %1090, i64 96
  %1136 = bitcast float* %1135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1136, i32 0, i32 1, i32 1)
  %1137 = getelementptr inbounds float, float* %1087, i64 104
  %1138 = bitcast float* %1137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1138, i32 0, i32 1, i32 1)
  %1139 = getelementptr inbounds float, float* %1090, i64 104
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = getelementptr inbounds float, float* %1087, i64 112
  %1142 = bitcast float* %1141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1142, i32 0, i32 1, i32 1)
  %1143 = getelementptr inbounds float, float* %1090, i64 112
  %1144 = bitcast float* %1143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1144, i32 0, i32 1, i32 1)
  %1145 = bitcast float* %1087 to <8 x float>*
  %1146 = load <8 x float>, <8 x float>* %1145, align 1, !tbaa !12
  %1147 = or i64 %1086, 8
  %1148 = getelementptr inbounds float, float* %5, i64 %1147
  %1149 = bitcast float* %1148 to <8 x float>*
  %1150 = load <8 x float>, <8 x float>* %1149, align 1, !tbaa !12
  %1151 = add nuw nsw i64 %1086, 16
  %1152 = getelementptr inbounds float, float* %5, i64 %1151
  %1153 = bitcast float* %1152 to <8 x float>*
  %1154 = load <8 x float>, <8 x float>* %1153, align 1, !tbaa !12
  %1155 = add nuw nsw i64 %1086, 24
  %1156 = getelementptr inbounds float, float* %5, i64 %1155
  %1157 = bitcast float* %1156 to <8 x float>*
  %1158 = load <8 x float>, <8 x float>* %1157, align 1, !tbaa !12
  %1159 = add nuw nsw i64 %1086, 32
  %1160 = getelementptr inbounds float, float* %5, i64 %1159
  %1161 = bitcast float* %1160 to <8 x float>*
  %1162 = load <8 x float>, <8 x float>* %1161, align 1, !tbaa !12
  %1163 = add nuw nsw i64 %1086, 40
  %1164 = getelementptr inbounds float, float* %5, i64 %1163
  %1165 = bitcast float* %1164 to <8 x float>*
  %1166 = load <8 x float>, <8 x float>* %1165, align 1, !tbaa !12
  %1167 = add nuw nsw i64 %1086, 48
  %1168 = getelementptr inbounds float, float* %5, i64 %1167
  %1169 = bitcast float* %1168 to <8 x float>*
  %1170 = load <8 x float>, <8 x float>* %1169, align 1, !tbaa !12
  %1171 = add nuw nsw i64 %1086, 56
  %1172 = getelementptr inbounds float, float* %5, i64 %1171
  %1173 = bitcast float* %1172 to <8 x float>*
  %1174 = load <8 x float>, <8 x float>* %1173, align 1, !tbaa !12
  %1175 = add nuw nsw i64 %1086, 64
  %1176 = getelementptr inbounds float, float* %5, i64 %1175
  %1177 = bitcast float* %1176 to <8 x float>*
  %1178 = load <8 x float>, <8 x float>* %1177, align 1, !tbaa !12
  %1179 = add nuw nsw i64 %1086, 72
  %1180 = getelementptr inbounds float, float* %5, i64 %1179
  %1181 = bitcast float* %1180 to <8 x float>*
  %1182 = load <8 x float>, <8 x float>* %1181, align 1, !tbaa !12
  %1183 = add nuw nsw i64 %1086, 80
  %1184 = getelementptr inbounds float, float* %5, i64 %1183
  %1185 = bitcast float* %1184 to <8 x float>*
  %1186 = load <8 x float>, <8 x float>* %1185, align 1, !tbaa !12
  %1187 = add nuw nsw i64 %1086, 88
  %1188 = getelementptr inbounds float, float* %5, i64 %1187
  %1189 = bitcast float* %1188 to <8 x float>*
  %1190 = load <8 x float>, <8 x float>* %1189, align 1, !tbaa !12
  %1191 = add nuw nsw i64 %1086, 96
  %1192 = getelementptr inbounds float, float* %5, i64 %1191
  %1193 = bitcast float* %1192 to <8 x float>*
  %1194 = load <8 x float>, <8 x float>* %1193, align 1, !tbaa !12
  %1195 = add nuw nsw i64 %1086, 104
  %1196 = getelementptr inbounds float, float* %5, i64 %1195
  %1197 = bitcast float* %1196 to <8 x float>*
  %1198 = load <8 x float>, <8 x float>* %1197, align 1, !tbaa !12
  %1199 = add nsw i64 %1086, %890
  %1200 = getelementptr inbounds float, float* %3, i64 %1199
  %1201 = bitcast float* %1200 to <8 x float>*
  %1202 = load <8 x float>, <8 x float>* %1201, align 1, !tbaa !12
  %1203 = add nsw i64 %1199, 8
  %1204 = getelementptr inbounds float, float* %3, i64 %1203
  %1205 = bitcast float* %1204 to <8 x float>*
  %1206 = load <8 x float>, <8 x float>* %1205, align 1, !tbaa !12
  %1207 = add nsw i64 %1199, 16
  %1208 = getelementptr inbounds float, float* %3, i64 %1207
  %1209 = bitcast float* %1208 to <8 x float>*
  %1210 = load <8 x float>, <8 x float>* %1209, align 1, !tbaa !12
  %1211 = add nsw i64 %1199, 24
  %1212 = getelementptr inbounds float, float* %3, i64 %1211
  %1213 = bitcast float* %1212 to <8 x float>*
  %1214 = load <8 x float>, <8 x float>* %1213, align 1, !tbaa !12
  %1215 = add nsw i64 %1199, 32
  %1216 = getelementptr inbounds float, float* %3, i64 %1215
  %1217 = bitcast float* %1216 to <8 x float>*
  %1218 = load <8 x float>, <8 x float>* %1217, align 1, !tbaa !12
  %1219 = add nsw i64 %1199, 40
  %1220 = getelementptr inbounds float, float* %3, i64 %1219
  %1221 = bitcast float* %1220 to <8 x float>*
  %1222 = load <8 x float>, <8 x float>* %1221, align 1, !tbaa !12
  %1223 = add nsw i64 %1199, 48
  %1224 = getelementptr inbounds float, float* %3, i64 %1223
  %1225 = bitcast float* %1224 to <8 x float>*
  %1226 = load <8 x float>, <8 x float>* %1225, align 1, !tbaa !12
  %1227 = add nsw i64 %1199, 56
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i64 %1199, 64
  %1232 = getelementptr inbounds float, float* %3, i64 %1231
  %1233 = bitcast float* %1232 to <8 x float>*
  %1234 = load <8 x float>, <8 x float>* %1233, align 1, !tbaa !12
  %1235 = add nsw i64 %1199, 72
  %1236 = getelementptr inbounds float, float* %3, i64 %1235
  %1237 = bitcast float* %1236 to <8 x float>*
  %1238 = load <8 x float>, <8 x float>* %1237, align 1, !tbaa !12
  %1239 = add nsw i64 %1199, 80
  %1240 = getelementptr inbounds float, float* %3, i64 %1239
  %1241 = bitcast float* %1240 to <8 x float>*
  %1242 = load <8 x float>, <8 x float>* %1241, align 1, !tbaa !12
  %1243 = add nsw i64 %1199, 88
  %1244 = getelementptr inbounds float, float* %3, i64 %1243
  %1245 = bitcast float* %1244 to <8 x float>*
  %1246 = load <8 x float>, <8 x float>* %1245, align 1, !tbaa !12
  %1247 = add nsw i64 %1199, 96
  %1248 = getelementptr inbounds float, float* %3, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = add nsw i64 %1199, 104
  %1252 = getelementptr inbounds float, float* %3, i64 %1251
  %1253 = bitcast float* %1252 to <8 x float>*
  %1254 = load <8 x float>, <8 x float>* %1253, align 1, !tbaa !12
  %1255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1202, <8 x float> %50, <8 x float> %1146) #10
  %1256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1206, <8 x float> %50, <8 x float> %1150) #10
  %1257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1210, <8 x float> %50, <8 x float> %1154) #10
  %1258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1214, <8 x float> %50, <8 x float> %1158) #10
  %1259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1218, <8 x float> %50, <8 x float> %1162) #10
  %1260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1222, <8 x float> %50, <8 x float> %1166) #10
  %1261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1226, <8 x float> %50, <8 x float> %1170) #10
  %1262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %50, <8 x float> %1174) #10
  %1263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1234, <8 x float> %50, <8 x float> %1178) #10
  %1264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1238, <8 x float> %50, <8 x float> %1182) #10
  %1265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1242, <8 x float> %50, <8 x float> %1186) #10
  %1266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1246, <8 x float> %50, <8 x float> %1190) #10
  %1267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1250, <8 x float> %50, <8 x float> %1194) #10
  %1268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1254, <8 x float> %50, <8 x float> %1198) #10
  store <8 x float> %1255, <8 x float>* %1145, align 1, !tbaa !12
  store <8 x float> %1256, <8 x float>* %1149, align 1, !tbaa !12
  store <8 x float> %1257, <8 x float>* %1153, align 1, !tbaa !12
  store <8 x float> %1258, <8 x float>* %1157, align 1, !tbaa !12
  store <8 x float> %1259, <8 x float>* %1161, align 1, !tbaa !12
  store <8 x float> %1260, <8 x float>* %1165, align 1, !tbaa !12
  store <8 x float> %1261, <8 x float>* %1169, align 1, !tbaa !12
  store <8 x float> %1262, <8 x float>* %1173, align 1, !tbaa !12
  store <8 x float> %1263, <8 x float>* %1177, align 1, !tbaa !12
  store <8 x float> %1264, <8 x float>* %1181, align 1, !tbaa !12
  store <8 x float> %1265, <8 x float>* %1185, align 1, !tbaa !12
  store <8 x float> %1266, <8 x float>* %1189, align 1, !tbaa !12
  store <8 x float> %1267, <8 x float>* %1193, align 1, !tbaa !12
  store <8 x float> %1268, <8 x float>* %1197, align 1, !tbaa !12
  %1269 = add nuw nsw i64 %1086, 112
  %1270 = icmp ult i64 %1269, %891
  br i1 %1270, label %1085, label %1078

1271:                                             ; preds = %1277
  br i1 %1080, label %1272, label %1670

1272:                                             ; preds = %1271
  %1273 = trunc i64 %56 to i32
  %1274 = mul nsw i32 %1079, %1273
  %1275 = sext i32 %1274 to i64
  %1276 = zext i32 %1079 to i64
  br label %1484

1277:                                             ; preds = %1081, %1277
  %1278 = phi i64 [ 0, %1081 ], [ %1476, %1277 ]
  %1279 = getelementptr inbounds float, float* %5, i64 %1278
  %1280 = getelementptr inbounds float, float* %1279, i64 8
  %1281 = bitcast float* %1280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1281, i32 0, i32 1, i32 1)
  %1282 = getelementptr inbounds float, float* %3, i64 %1278
  %1283 = getelementptr inbounds float, float* %1282, i64 8
  %1284 = bitcast float* %1283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1284, i32 0, i32 1, i32 1)
  %1285 = getelementptr inbounds float, float* %1279, i64 16
  %1286 = bitcast float* %1285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1286, i32 0, i32 1, i32 1)
  %1287 = getelementptr inbounds float, float* %1282, i64 16
  %1288 = bitcast float* %1287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1288, i32 0, i32 1, i32 1)
  %1289 = getelementptr inbounds float, float* %1279, i64 24
  %1290 = bitcast float* %1289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1290, i32 0, i32 1, i32 1)
  %1291 = getelementptr inbounds float, float* %1282, i64 24
  %1292 = bitcast float* %1291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1292, i32 0, i32 1, i32 1)
  %1293 = getelementptr inbounds float, float* %1279, i64 32
  %1294 = bitcast float* %1293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1294, i32 0, i32 1, i32 1)
  %1295 = getelementptr inbounds float, float* %1282, i64 32
  %1296 = bitcast float* %1295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1296, i32 0, i32 1, i32 1)
  %1297 = getelementptr inbounds float, float* %1279, i64 40
  %1298 = bitcast float* %1297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1298, i32 0, i32 1, i32 1)
  %1299 = getelementptr inbounds float, float* %1282, i64 40
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %1279, i64 48
  %1302 = bitcast float* %1301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1302, i32 0, i32 1, i32 1)
  %1303 = getelementptr inbounds float, float* %1282, i64 48
  %1304 = bitcast float* %1303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1304, i32 0, i32 1, i32 1)
  %1305 = getelementptr inbounds float, float* %1279, i64 56
  %1306 = bitcast float* %1305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1306, i32 0, i32 1, i32 1)
  %1307 = getelementptr inbounds float, float* %1282, i64 56
  %1308 = bitcast float* %1307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1308, i32 0, i32 1, i32 1)
  %1309 = getelementptr inbounds float, float* %1279, i64 64
  %1310 = bitcast float* %1309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1310, i32 0, i32 1, i32 1)
  %1311 = getelementptr inbounds float, float* %1282, i64 64
  %1312 = bitcast float* %1311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1312, i32 0, i32 1, i32 1)
  %1313 = getelementptr inbounds float, float* %1279, i64 72
  %1314 = bitcast float* %1313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1314, i32 0, i32 1, i32 1)
  %1315 = getelementptr inbounds float, float* %1282, i64 72
  %1316 = bitcast float* %1315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1316, i32 0, i32 1, i32 1)
  %1317 = getelementptr inbounds float, float* %1279, i64 80
  %1318 = bitcast float* %1317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1318, i32 0, i32 1, i32 1)
  %1319 = getelementptr inbounds float, float* %1282, i64 80
  %1320 = bitcast float* %1319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1320, i32 0, i32 1, i32 1)
  %1321 = getelementptr inbounds float, float* %1279, i64 88
  %1322 = bitcast float* %1321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1322, i32 0, i32 1, i32 1)
  %1323 = getelementptr inbounds float, float* %1282, i64 88
  %1324 = bitcast float* %1323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1324, i32 0, i32 1, i32 1)
  %1325 = getelementptr inbounds float, float* %1279, i64 96
  %1326 = bitcast float* %1325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1326, i32 0, i32 1, i32 1)
  %1327 = getelementptr inbounds float, float* %1282, i64 96
  %1328 = bitcast float* %1327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1328, i32 0, i32 1, i32 1)
  %1329 = getelementptr inbounds float, float* %1279, i64 104
  %1330 = bitcast float* %1329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1330, i32 0, i32 1, i32 1)
  %1331 = getelementptr inbounds float, float* %1282, i64 104
  %1332 = bitcast float* %1331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1332, i32 0, i32 1, i32 1)
  %1333 = getelementptr inbounds float, float* %1279, i64 112
  %1334 = bitcast float* %1333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1334, i32 0, i32 1, i32 1)
  %1335 = getelementptr inbounds float, float* %1282, i64 112
  %1336 = bitcast float* %1335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1336, i32 0, i32 1, i32 1)
  %1337 = bitcast float* %1279 to <8 x float>*
  %1338 = load <8 x float>, <8 x float>* %1337, align 1, !tbaa !12
  %1339 = or i64 %1278, 8
  %1340 = getelementptr inbounds float, float* %5, i64 %1339
  %1341 = bitcast float* %1340 to <8 x float>*
  %1342 = load <8 x float>, <8 x float>* %1341, align 1, !tbaa !12
  %1343 = add nuw nsw i64 %1278, 16
  %1344 = getelementptr inbounds float, float* %5, i64 %1343
  %1345 = bitcast float* %1344 to <8 x float>*
  %1346 = load <8 x float>, <8 x float>* %1345, align 1, !tbaa !12
  %1347 = add nuw nsw i64 %1278, 24
  %1348 = getelementptr inbounds float, float* %5, i64 %1347
  %1349 = bitcast float* %1348 to <8 x float>*
  %1350 = load <8 x float>, <8 x float>* %1349, align 1, !tbaa !12
  %1351 = add nuw nsw i64 %1278, 32
  %1352 = getelementptr inbounds float, float* %5, i64 %1351
  %1353 = bitcast float* %1352 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = add nuw nsw i64 %1278, 40
  %1356 = getelementptr inbounds float, float* %5, i64 %1355
  %1357 = bitcast float* %1356 to <8 x float>*
  %1358 = load <8 x float>, <8 x float>* %1357, align 1, !tbaa !12
  %1359 = add nuw nsw i64 %1278, 48
  %1360 = getelementptr inbounds float, float* %5, i64 %1359
  %1361 = bitcast float* %1360 to <8 x float>*
  %1362 = load <8 x float>, <8 x float>* %1361, align 1, !tbaa !12
  %1363 = add nuw nsw i64 %1278, 56
  %1364 = getelementptr inbounds float, float* %5, i64 %1363
  %1365 = bitcast float* %1364 to <8 x float>*
  %1366 = load <8 x float>, <8 x float>* %1365, align 1, !tbaa !12
  %1367 = add nuw nsw i64 %1278, 64
  %1368 = getelementptr inbounds float, float* %5, i64 %1367
  %1369 = bitcast float* %1368 to <8 x float>*
  %1370 = load <8 x float>, <8 x float>* %1369, align 1, !tbaa !12
  %1371 = add nuw nsw i64 %1278, 72
  %1372 = getelementptr inbounds float, float* %5, i64 %1371
  %1373 = bitcast float* %1372 to <8 x float>*
  %1374 = load <8 x float>, <8 x float>* %1373, align 1, !tbaa !12
  %1375 = add nuw nsw i64 %1278, 80
  %1376 = getelementptr inbounds float, float* %5, i64 %1375
  %1377 = bitcast float* %1376 to <8 x float>*
  %1378 = load <8 x float>, <8 x float>* %1377, align 1, !tbaa !12
  %1379 = add nuw nsw i64 %1278, 88
  %1380 = getelementptr inbounds float, float* %5, i64 %1379
  %1381 = bitcast float* %1380 to <8 x float>*
  %1382 = load <8 x float>, <8 x float>* %1381, align 1, !tbaa !12
  %1383 = add nuw nsw i64 %1278, 96
  %1384 = getelementptr inbounds float, float* %5, i64 %1383
  %1385 = bitcast float* %1384 to <8 x float>*
  %1386 = load <8 x float>, <8 x float>* %1385, align 1, !tbaa !12
  %1387 = add nuw nsw i64 %1278, 104
  %1388 = getelementptr inbounds float, float* %5, i64 %1387
  %1389 = bitcast float* %1388 to <8 x float>*
  %1390 = load <8 x float>, <8 x float>* %1389, align 1, !tbaa !12
  %1391 = trunc i64 %1278 to i32
  %1392 = add nsw i32 %1084, %1391
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds float, float* %3, i64 %1393
  %1395 = bitcast float* %1394 to <8 x float>*
  %1396 = load <8 x float>, <8 x float>* %1395, align 1, !tbaa !12
  %1397 = add nsw i32 %1392, 8
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds float, float* %3, i64 %1398
  %1400 = bitcast float* %1399 to <8 x float>*
  %1401 = load <8 x float>, <8 x float>* %1400, align 1, !tbaa !12
  %1402 = add nsw i32 %1392, 16
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds float, float* %3, i64 %1403
  %1405 = bitcast float* %1404 to <8 x float>*
  %1406 = load <8 x float>, <8 x float>* %1405, align 1, !tbaa !12
  %1407 = add nsw i32 %1392, 24
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds float, float* %3, i64 %1408
  %1410 = bitcast float* %1409 to <8 x float>*
  %1411 = load <8 x float>, <8 x float>* %1410, align 1, !tbaa !12
  %1412 = add nsw i32 %1392, 32
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds float, float* %3, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = add nsw i32 %1392, 40
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds float, float* %3, i64 %1418
  %1420 = bitcast float* %1419 to <8 x float>*
  %1421 = load <8 x float>, <8 x float>* %1420, align 1, !tbaa !12
  %1422 = add nsw i32 %1392, 48
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds float, float* %3, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = add nsw i32 %1392, 56
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds float, float* %3, i64 %1428
  %1430 = bitcast float* %1429 to <8 x float>*
  %1431 = load <8 x float>, <8 x float>* %1430, align 1, !tbaa !12
  %1432 = add nsw i32 %1392, 64
  %1433 = sext i32 %1432 to i64
  %1434 = getelementptr inbounds float, float* %3, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = add nsw i32 %1392, 72
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds float, float* %3, i64 %1438
  %1440 = bitcast float* %1439 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = add nsw i32 %1392, 80
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds float, float* %3, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nsw i32 %1392, 88
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds float, float* %3, i64 %1448
  %1450 = bitcast float* %1449 to <8 x float>*
  %1451 = load <8 x float>, <8 x float>* %1450, align 1, !tbaa !12
  %1452 = add nsw i32 %1392, 96
  %1453 = sext i32 %1452 to i64
  %1454 = getelementptr inbounds float, float* %3, i64 %1453
  %1455 = bitcast float* %1454 to <8 x float>*
  %1456 = load <8 x float>, <8 x float>* %1455, align 1, !tbaa !12
  %1457 = add nsw i32 %1392, 104
  %1458 = sext i32 %1457 to i64
  %1459 = getelementptr inbounds float, float* %3, i64 %1458
  %1460 = bitcast float* %1459 to <8 x float>*
  %1461 = load <8 x float>, <8 x float>* %1460, align 1, !tbaa !12
  %1462 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1396, <8 x float> %55, <8 x float> %1338) #10
  %1463 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1401, <8 x float> %55, <8 x float> %1342) #10
  %1464 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1406, <8 x float> %55, <8 x float> %1346) #10
  %1465 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1411, <8 x float> %55, <8 x float> %1350) #10
  %1466 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1416, <8 x float> %55, <8 x float> %1354) #10
  %1467 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1421, <8 x float> %55, <8 x float> %1358) #10
  %1468 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1426, <8 x float> %55, <8 x float> %1362) #10
  %1469 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1431, <8 x float> %55, <8 x float> %1366) #10
  %1470 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1436, <8 x float> %55, <8 x float> %1370) #10
  %1471 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1441, <8 x float> %55, <8 x float> %1374) #10
  %1472 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1446, <8 x float> %55, <8 x float> %1378) #10
  %1473 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1451, <8 x float> %55, <8 x float> %1382) #10
  %1474 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1456, <8 x float> %55, <8 x float> %1386) #10
  %1475 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1461, <8 x float> %55, <8 x float> %1390) #10
  store <8 x float> %1462, <8 x float>* %1337, align 1, !tbaa !12
  store <8 x float> %1463, <8 x float>* %1341, align 1, !tbaa !12
  store <8 x float> %1464, <8 x float>* %1345, align 1, !tbaa !12
  store <8 x float> %1465, <8 x float>* %1349, align 1, !tbaa !12
  store <8 x float> %1466, <8 x float>* %1353, align 1, !tbaa !12
  store <8 x float> %1467, <8 x float>* %1357, align 1, !tbaa !12
  store <8 x float> %1468, <8 x float>* %1361, align 1, !tbaa !12
  store <8 x float> %1469, <8 x float>* %1365, align 1, !tbaa !12
  store <8 x float> %1470, <8 x float>* %1369, align 1, !tbaa !12
  store <8 x float> %1471, <8 x float>* %1373, align 1, !tbaa !12
  store <8 x float> %1472, <8 x float>* %1377, align 1, !tbaa !12
  store <8 x float> %1473, <8 x float>* %1381, align 1, !tbaa !12
  store <8 x float> %1474, <8 x float>* %1385, align 1, !tbaa !12
  store <8 x float> %1475, <8 x float>* %1389, align 1, !tbaa !12
  %1476 = add nuw nsw i64 %1278, 112
  %1477 = icmp ult i64 %1476, %1082
  br i1 %1477, label %1277, label %1271

1478:                                             ; preds = %1484
  br i1 %1080, label %1479, label %1670

1479:                                             ; preds = %1478
  %1480 = trunc i64 %61 to i32
  %1481 = mul nsw i32 %1079, %1480
  %1482 = sext i32 %1481 to i64
  %1483 = zext i32 %1079 to i64
  br label %1677

1484:                                             ; preds = %1272, %1484
  %1485 = phi i64 [ 0, %1272 ], [ %1668, %1484 ]
  %1486 = getelementptr inbounds float, float* %5, i64 %1485
  %1487 = getelementptr inbounds float, float* %1486, i64 8
  %1488 = bitcast float* %1487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1488, i32 0, i32 1, i32 1)
  %1489 = getelementptr inbounds float, float* %3, i64 %1485
  %1490 = getelementptr inbounds float, float* %1489, i64 8
  %1491 = bitcast float* %1490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1491, i32 0, i32 1, i32 1)
  %1492 = getelementptr inbounds float, float* %1486, i64 16
  %1493 = bitcast float* %1492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1493, i32 0, i32 1, i32 1)
  %1494 = getelementptr inbounds float, float* %1489, i64 16
  %1495 = bitcast float* %1494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1495, i32 0, i32 1, i32 1)
  %1496 = getelementptr inbounds float, float* %1486, i64 24
  %1497 = bitcast float* %1496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1497, i32 0, i32 1, i32 1)
  %1498 = getelementptr inbounds float, float* %1489, i64 24
  %1499 = bitcast float* %1498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1499, i32 0, i32 1, i32 1)
  %1500 = getelementptr inbounds float, float* %1486, i64 32
  %1501 = bitcast float* %1500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1501, i32 0, i32 1, i32 1)
  %1502 = getelementptr inbounds float, float* %1489, i64 32
  %1503 = bitcast float* %1502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1503, i32 0, i32 1, i32 1)
  %1504 = getelementptr inbounds float, float* %1486, i64 40
  %1505 = bitcast float* %1504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1505, i32 0, i32 1, i32 1)
  %1506 = getelementptr inbounds float, float* %1489, i64 40
  %1507 = bitcast float* %1506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1507, i32 0, i32 1, i32 1)
  %1508 = getelementptr inbounds float, float* %1486, i64 48
  %1509 = bitcast float* %1508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1509, i32 0, i32 1, i32 1)
  %1510 = getelementptr inbounds float, float* %1489, i64 48
  %1511 = bitcast float* %1510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1511, i32 0, i32 1, i32 1)
  %1512 = getelementptr inbounds float, float* %1486, i64 56
  %1513 = bitcast float* %1512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1513, i32 0, i32 1, i32 1)
  %1514 = getelementptr inbounds float, float* %1489, i64 56
  %1515 = bitcast float* %1514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1515, i32 0, i32 1, i32 1)
  %1516 = getelementptr inbounds float, float* %1486, i64 64
  %1517 = bitcast float* %1516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1517, i32 0, i32 1, i32 1)
  %1518 = getelementptr inbounds float, float* %1489, i64 64
  %1519 = bitcast float* %1518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1519, i32 0, i32 1, i32 1)
  %1520 = getelementptr inbounds float, float* %1486, i64 72
  %1521 = bitcast float* %1520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1521, i32 0, i32 1, i32 1)
  %1522 = getelementptr inbounds float, float* %1489, i64 72
  %1523 = bitcast float* %1522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1523, i32 0, i32 1, i32 1)
  %1524 = getelementptr inbounds float, float* %1486, i64 80
  %1525 = bitcast float* %1524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1525, i32 0, i32 1, i32 1)
  %1526 = getelementptr inbounds float, float* %1489, i64 80
  %1527 = bitcast float* %1526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1527, i32 0, i32 1, i32 1)
  %1528 = getelementptr inbounds float, float* %1486, i64 88
  %1529 = bitcast float* %1528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1529, i32 0, i32 1, i32 1)
  %1530 = getelementptr inbounds float, float* %1489, i64 88
  %1531 = bitcast float* %1530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1531, i32 0, i32 1, i32 1)
  %1532 = getelementptr inbounds float, float* %1486, i64 96
  %1533 = bitcast float* %1532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1533, i32 0, i32 1, i32 1)
  %1534 = getelementptr inbounds float, float* %1489, i64 96
  %1535 = bitcast float* %1534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1535, i32 0, i32 1, i32 1)
  %1536 = getelementptr inbounds float, float* %1486, i64 104
  %1537 = bitcast float* %1536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1537, i32 0, i32 1, i32 1)
  %1538 = getelementptr inbounds float, float* %1489, i64 104
  %1539 = bitcast float* %1538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1539, i32 0, i32 1, i32 1)
  %1540 = getelementptr inbounds float, float* %1486, i64 112
  %1541 = bitcast float* %1540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1541, i32 0, i32 1, i32 1)
  %1542 = getelementptr inbounds float, float* %1489, i64 112
  %1543 = bitcast float* %1542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1543, i32 0, i32 1, i32 1)
  %1544 = bitcast float* %1486 to <8 x float>*
  %1545 = load <8 x float>, <8 x float>* %1544, align 1, !tbaa !12
  %1546 = or i64 %1485, 8
  %1547 = getelementptr inbounds float, float* %5, i64 %1546
  %1548 = bitcast float* %1547 to <8 x float>*
  %1549 = load <8 x float>, <8 x float>* %1548, align 1, !tbaa !12
  %1550 = add nuw nsw i64 %1485, 16
  %1551 = getelementptr inbounds float, float* %5, i64 %1550
  %1552 = bitcast float* %1551 to <8 x float>*
  %1553 = load <8 x float>, <8 x float>* %1552, align 1, !tbaa !12
  %1554 = add nuw nsw i64 %1485, 24
  %1555 = getelementptr inbounds float, float* %5, i64 %1554
  %1556 = bitcast float* %1555 to <8 x float>*
  %1557 = load <8 x float>, <8 x float>* %1556, align 1, !tbaa !12
  %1558 = add nuw nsw i64 %1485, 32
  %1559 = getelementptr inbounds float, float* %5, i64 %1558
  %1560 = bitcast float* %1559 to <8 x float>*
  %1561 = load <8 x float>, <8 x float>* %1560, align 1, !tbaa !12
  %1562 = add nuw nsw i64 %1485, 40
  %1563 = getelementptr inbounds float, float* %5, i64 %1562
  %1564 = bitcast float* %1563 to <8 x float>*
  %1565 = load <8 x float>, <8 x float>* %1564, align 1, !tbaa !12
  %1566 = add nuw nsw i64 %1485, 48
  %1567 = getelementptr inbounds float, float* %5, i64 %1566
  %1568 = bitcast float* %1567 to <8 x float>*
  %1569 = load <8 x float>, <8 x float>* %1568, align 1, !tbaa !12
  %1570 = add nuw nsw i64 %1485, 56
  %1571 = getelementptr inbounds float, float* %5, i64 %1570
  %1572 = bitcast float* %1571 to <8 x float>*
  %1573 = load <8 x float>, <8 x float>* %1572, align 1, !tbaa !12
  %1574 = add nuw nsw i64 %1485, 64
  %1575 = getelementptr inbounds float, float* %5, i64 %1574
  %1576 = bitcast float* %1575 to <8 x float>*
  %1577 = load <8 x float>, <8 x float>* %1576, align 1, !tbaa !12
  %1578 = add nuw nsw i64 %1485, 72
  %1579 = getelementptr inbounds float, float* %5, i64 %1578
  %1580 = bitcast float* %1579 to <8 x float>*
  %1581 = load <8 x float>, <8 x float>* %1580, align 1, !tbaa !12
  %1582 = add nuw nsw i64 %1485, 80
  %1583 = getelementptr inbounds float, float* %5, i64 %1582
  %1584 = bitcast float* %1583 to <8 x float>*
  %1585 = load <8 x float>, <8 x float>* %1584, align 1, !tbaa !12
  %1586 = add nuw nsw i64 %1485, 88
  %1587 = getelementptr inbounds float, float* %5, i64 %1586
  %1588 = bitcast float* %1587 to <8 x float>*
  %1589 = load <8 x float>, <8 x float>* %1588, align 1, !tbaa !12
  %1590 = add nuw nsw i64 %1485, 96
  %1591 = getelementptr inbounds float, float* %5, i64 %1590
  %1592 = bitcast float* %1591 to <8 x float>*
  %1593 = load <8 x float>, <8 x float>* %1592, align 1, !tbaa !12
  %1594 = add nuw nsw i64 %1485, 104
  %1595 = getelementptr inbounds float, float* %5, i64 %1594
  %1596 = bitcast float* %1595 to <8 x float>*
  %1597 = load <8 x float>, <8 x float>* %1596, align 1, !tbaa !12
  %1598 = add nsw i64 %1485, %1275
  %1599 = getelementptr inbounds float, float* %3, i64 %1598
  %1600 = bitcast float* %1599 to <8 x float>*
  %1601 = load <8 x float>, <8 x float>* %1600, align 1, !tbaa !12
  %1602 = add nsw i64 %1598, 8
  %1603 = getelementptr inbounds float, float* %3, i64 %1602
  %1604 = bitcast float* %1603 to <8 x float>*
  %1605 = load <8 x float>, <8 x float>* %1604, align 1, !tbaa !12
  %1606 = add nsw i64 %1598, 16
  %1607 = getelementptr inbounds float, float* %3, i64 %1606
  %1608 = bitcast float* %1607 to <8 x float>*
  %1609 = load <8 x float>, <8 x float>* %1608, align 1, !tbaa !12
  %1610 = add nsw i64 %1598, 24
  %1611 = getelementptr inbounds float, float* %3, i64 %1610
  %1612 = bitcast float* %1611 to <8 x float>*
  %1613 = load <8 x float>, <8 x float>* %1612, align 1, !tbaa !12
  %1614 = add nsw i64 %1598, 32
  %1615 = getelementptr inbounds float, float* %3, i64 %1614
  %1616 = bitcast float* %1615 to <8 x float>*
  %1617 = load <8 x float>, <8 x float>* %1616, align 1, !tbaa !12
  %1618 = add nsw i64 %1598, 40
  %1619 = getelementptr inbounds float, float* %3, i64 %1618
  %1620 = bitcast float* %1619 to <8 x float>*
  %1621 = load <8 x float>, <8 x float>* %1620, align 1, !tbaa !12
  %1622 = add nsw i64 %1598, 48
  %1623 = getelementptr inbounds float, float* %3, i64 %1622
  %1624 = bitcast float* %1623 to <8 x float>*
  %1625 = load <8 x float>, <8 x float>* %1624, align 1, !tbaa !12
  %1626 = add nsw i64 %1598, 56
  %1627 = getelementptr inbounds float, float* %3, i64 %1626
  %1628 = bitcast float* %1627 to <8 x float>*
  %1629 = load <8 x float>, <8 x float>* %1628, align 1, !tbaa !12
  %1630 = add nsw i64 %1598, 64
  %1631 = getelementptr inbounds float, float* %3, i64 %1630
  %1632 = bitcast float* %1631 to <8 x float>*
  %1633 = load <8 x float>, <8 x float>* %1632, align 1, !tbaa !12
  %1634 = add nsw i64 %1598, 72
  %1635 = getelementptr inbounds float, float* %3, i64 %1634
  %1636 = bitcast float* %1635 to <8 x float>*
  %1637 = load <8 x float>, <8 x float>* %1636, align 1, !tbaa !12
  %1638 = add nsw i64 %1598, 80
  %1639 = getelementptr inbounds float, float* %3, i64 %1638
  %1640 = bitcast float* %1639 to <8 x float>*
  %1641 = load <8 x float>, <8 x float>* %1640, align 1, !tbaa !12
  %1642 = add nsw i64 %1598, 88
  %1643 = getelementptr inbounds float, float* %3, i64 %1642
  %1644 = bitcast float* %1643 to <8 x float>*
  %1645 = load <8 x float>, <8 x float>* %1644, align 1, !tbaa !12
  %1646 = add nsw i64 %1598, 96
  %1647 = getelementptr inbounds float, float* %3, i64 %1646
  %1648 = bitcast float* %1647 to <8 x float>*
  %1649 = load <8 x float>, <8 x float>* %1648, align 1, !tbaa !12
  %1650 = add nsw i64 %1598, 104
  %1651 = getelementptr inbounds float, float* %3, i64 %1650
  %1652 = bitcast float* %1651 to <8 x float>*
  %1653 = load <8 x float>, <8 x float>* %1652, align 1, !tbaa !12
  %1654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1601, <8 x float> %60, <8 x float> %1545) #10
  %1655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1605, <8 x float> %60, <8 x float> %1549) #10
  %1656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1609, <8 x float> %60, <8 x float> %1553) #10
  %1657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1613, <8 x float> %60, <8 x float> %1557) #10
  %1658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1617, <8 x float> %60, <8 x float> %1561) #10
  %1659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1621, <8 x float> %60, <8 x float> %1565) #10
  %1660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1625, <8 x float> %60, <8 x float> %1569) #10
  %1661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1629, <8 x float> %60, <8 x float> %1573) #10
  %1662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1633, <8 x float> %60, <8 x float> %1577) #10
  %1663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1637, <8 x float> %60, <8 x float> %1581) #10
  %1664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1641, <8 x float> %60, <8 x float> %1585) #10
  %1665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1645, <8 x float> %60, <8 x float> %1589) #10
  %1666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1649, <8 x float> %60, <8 x float> %1593) #10
  %1667 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1653, <8 x float> %60, <8 x float> %1597) #10
  store <8 x float> %1654, <8 x float>* %1544, align 1, !tbaa !12
  store <8 x float> %1655, <8 x float>* %1548, align 1, !tbaa !12
  store <8 x float> %1656, <8 x float>* %1552, align 1, !tbaa !12
  store <8 x float> %1657, <8 x float>* %1556, align 1, !tbaa !12
  store <8 x float> %1658, <8 x float>* %1560, align 1, !tbaa !12
  store <8 x float> %1659, <8 x float>* %1564, align 1, !tbaa !12
  store <8 x float> %1660, <8 x float>* %1568, align 1, !tbaa !12
  store <8 x float> %1661, <8 x float>* %1572, align 1, !tbaa !12
  store <8 x float> %1662, <8 x float>* %1576, align 1, !tbaa !12
  store <8 x float> %1663, <8 x float>* %1580, align 1, !tbaa !12
  store <8 x float> %1664, <8 x float>* %1584, align 1, !tbaa !12
  store <8 x float> %1665, <8 x float>* %1588, align 1, !tbaa !12
  store <8 x float> %1666, <8 x float>* %1592, align 1, !tbaa !12
  store <8 x float> %1667, <8 x float>* %1596, align 1, !tbaa !12
  %1668 = add nuw nsw i64 %1485, 112
  %1669 = icmp ult i64 %1668, %1276
  br i1 %1669, label %1484, label %1478

1670:                                             ; preds = %1677, %1271, %1478
  %1671 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1672 = icmp sgt i32 %1671, 0
  br i1 %1672, label %1673, label %2262

1673:                                             ; preds = %1670
  %1674 = zext i32 %1671 to i64
  %1675 = trunc i64 %66 to i32
  %1676 = mul nsw i32 %1671, %1675
  br label %1869

1677:                                             ; preds = %1479, %1677
  %1678 = phi i64 [ 0, %1479 ], [ %1861, %1677 ]
  %1679 = getelementptr inbounds float, float* %5, i64 %1678
  %1680 = getelementptr inbounds float, float* %1679, i64 8
  %1681 = bitcast float* %1680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1681, i32 0, i32 1, i32 1)
  %1682 = getelementptr inbounds float, float* %3, i64 %1678
  %1683 = getelementptr inbounds float, float* %1682, i64 8
  %1684 = bitcast float* %1683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1684, i32 0, i32 1, i32 1)
  %1685 = getelementptr inbounds float, float* %1679, i64 16
  %1686 = bitcast float* %1685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1686, i32 0, i32 1, i32 1)
  %1687 = getelementptr inbounds float, float* %1682, i64 16
  %1688 = bitcast float* %1687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1688, i32 0, i32 1, i32 1)
  %1689 = getelementptr inbounds float, float* %1679, i64 24
  %1690 = bitcast float* %1689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1690, i32 0, i32 1, i32 1)
  %1691 = getelementptr inbounds float, float* %1682, i64 24
  %1692 = bitcast float* %1691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1692, i32 0, i32 1, i32 1)
  %1693 = getelementptr inbounds float, float* %1679, i64 32
  %1694 = bitcast float* %1693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1694, i32 0, i32 1, i32 1)
  %1695 = getelementptr inbounds float, float* %1682, i64 32
  %1696 = bitcast float* %1695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1696, i32 0, i32 1, i32 1)
  %1697 = getelementptr inbounds float, float* %1679, i64 40
  %1698 = bitcast float* %1697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1698, i32 0, i32 1, i32 1)
  %1699 = getelementptr inbounds float, float* %1682, i64 40
  %1700 = bitcast float* %1699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1700, i32 0, i32 1, i32 1)
  %1701 = getelementptr inbounds float, float* %1679, i64 48
  %1702 = bitcast float* %1701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1702, i32 0, i32 1, i32 1)
  %1703 = getelementptr inbounds float, float* %1682, i64 48
  %1704 = bitcast float* %1703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1704, i32 0, i32 1, i32 1)
  %1705 = getelementptr inbounds float, float* %1679, i64 56
  %1706 = bitcast float* %1705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1706, i32 0, i32 1, i32 1)
  %1707 = getelementptr inbounds float, float* %1682, i64 56
  %1708 = bitcast float* %1707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1708, i32 0, i32 1, i32 1)
  %1709 = getelementptr inbounds float, float* %1679, i64 64
  %1710 = bitcast float* %1709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1710, i32 0, i32 1, i32 1)
  %1711 = getelementptr inbounds float, float* %1682, i64 64
  %1712 = bitcast float* %1711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1712, i32 0, i32 1, i32 1)
  %1713 = getelementptr inbounds float, float* %1679, i64 72
  %1714 = bitcast float* %1713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1714, i32 0, i32 1, i32 1)
  %1715 = getelementptr inbounds float, float* %1682, i64 72
  %1716 = bitcast float* %1715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1716, i32 0, i32 1, i32 1)
  %1717 = getelementptr inbounds float, float* %1679, i64 80
  %1718 = bitcast float* %1717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1718, i32 0, i32 1, i32 1)
  %1719 = getelementptr inbounds float, float* %1682, i64 80
  %1720 = bitcast float* %1719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1720, i32 0, i32 1, i32 1)
  %1721 = getelementptr inbounds float, float* %1679, i64 88
  %1722 = bitcast float* %1721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1722, i32 0, i32 1, i32 1)
  %1723 = getelementptr inbounds float, float* %1682, i64 88
  %1724 = bitcast float* %1723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1724, i32 0, i32 1, i32 1)
  %1725 = getelementptr inbounds float, float* %1679, i64 96
  %1726 = bitcast float* %1725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1726, i32 0, i32 1, i32 1)
  %1727 = getelementptr inbounds float, float* %1682, i64 96
  %1728 = bitcast float* %1727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1728, i32 0, i32 1, i32 1)
  %1729 = getelementptr inbounds float, float* %1679, i64 104
  %1730 = bitcast float* %1729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1730, i32 0, i32 1, i32 1)
  %1731 = getelementptr inbounds float, float* %1682, i64 104
  %1732 = bitcast float* %1731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1732, i32 0, i32 1, i32 1)
  %1733 = getelementptr inbounds float, float* %1679, i64 112
  %1734 = bitcast float* %1733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1734, i32 0, i32 1, i32 1)
  %1735 = getelementptr inbounds float, float* %1682, i64 112
  %1736 = bitcast float* %1735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1736, i32 0, i32 1, i32 1)
  %1737 = bitcast float* %1679 to <8 x float>*
  %1738 = load <8 x float>, <8 x float>* %1737, align 1, !tbaa !12
  %1739 = or i64 %1678, 8
  %1740 = getelementptr inbounds float, float* %5, i64 %1739
  %1741 = bitcast float* %1740 to <8 x float>*
  %1742 = load <8 x float>, <8 x float>* %1741, align 1, !tbaa !12
  %1743 = add nuw nsw i64 %1678, 16
  %1744 = getelementptr inbounds float, float* %5, i64 %1743
  %1745 = bitcast float* %1744 to <8 x float>*
  %1746 = load <8 x float>, <8 x float>* %1745, align 1, !tbaa !12
  %1747 = add nuw nsw i64 %1678, 24
  %1748 = getelementptr inbounds float, float* %5, i64 %1747
  %1749 = bitcast float* %1748 to <8 x float>*
  %1750 = load <8 x float>, <8 x float>* %1749, align 1, !tbaa !12
  %1751 = add nuw nsw i64 %1678, 32
  %1752 = getelementptr inbounds float, float* %5, i64 %1751
  %1753 = bitcast float* %1752 to <8 x float>*
  %1754 = load <8 x float>, <8 x float>* %1753, align 1, !tbaa !12
  %1755 = add nuw nsw i64 %1678, 40
  %1756 = getelementptr inbounds float, float* %5, i64 %1755
  %1757 = bitcast float* %1756 to <8 x float>*
  %1758 = load <8 x float>, <8 x float>* %1757, align 1, !tbaa !12
  %1759 = add nuw nsw i64 %1678, 48
  %1760 = getelementptr inbounds float, float* %5, i64 %1759
  %1761 = bitcast float* %1760 to <8 x float>*
  %1762 = load <8 x float>, <8 x float>* %1761, align 1, !tbaa !12
  %1763 = add nuw nsw i64 %1678, 56
  %1764 = getelementptr inbounds float, float* %5, i64 %1763
  %1765 = bitcast float* %1764 to <8 x float>*
  %1766 = load <8 x float>, <8 x float>* %1765, align 1, !tbaa !12
  %1767 = add nuw nsw i64 %1678, 64
  %1768 = getelementptr inbounds float, float* %5, i64 %1767
  %1769 = bitcast float* %1768 to <8 x float>*
  %1770 = load <8 x float>, <8 x float>* %1769, align 1, !tbaa !12
  %1771 = add nuw nsw i64 %1678, 72
  %1772 = getelementptr inbounds float, float* %5, i64 %1771
  %1773 = bitcast float* %1772 to <8 x float>*
  %1774 = load <8 x float>, <8 x float>* %1773, align 1, !tbaa !12
  %1775 = add nuw nsw i64 %1678, 80
  %1776 = getelementptr inbounds float, float* %5, i64 %1775
  %1777 = bitcast float* %1776 to <8 x float>*
  %1778 = load <8 x float>, <8 x float>* %1777, align 1, !tbaa !12
  %1779 = add nuw nsw i64 %1678, 88
  %1780 = getelementptr inbounds float, float* %5, i64 %1779
  %1781 = bitcast float* %1780 to <8 x float>*
  %1782 = load <8 x float>, <8 x float>* %1781, align 1, !tbaa !12
  %1783 = add nuw nsw i64 %1678, 96
  %1784 = getelementptr inbounds float, float* %5, i64 %1783
  %1785 = bitcast float* %1784 to <8 x float>*
  %1786 = load <8 x float>, <8 x float>* %1785, align 1, !tbaa !12
  %1787 = add nuw nsw i64 %1678, 104
  %1788 = getelementptr inbounds float, float* %5, i64 %1787
  %1789 = bitcast float* %1788 to <8 x float>*
  %1790 = load <8 x float>, <8 x float>* %1789, align 1, !tbaa !12
  %1791 = add nsw i64 %1678, %1482
  %1792 = getelementptr inbounds float, float* %3, i64 %1791
  %1793 = bitcast float* %1792 to <8 x float>*
  %1794 = load <8 x float>, <8 x float>* %1793, align 1, !tbaa !12
  %1795 = add nsw i64 %1791, 8
  %1796 = getelementptr inbounds float, float* %3, i64 %1795
  %1797 = bitcast float* %1796 to <8 x float>*
  %1798 = load <8 x float>, <8 x float>* %1797, align 1, !tbaa !12
  %1799 = add nsw i64 %1791, 16
  %1800 = getelementptr inbounds float, float* %3, i64 %1799
  %1801 = bitcast float* %1800 to <8 x float>*
  %1802 = load <8 x float>, <8 x float>* %1801, align 1, !tbaa !12
  %1803 = add nsw i64 %1791, 24
  %1804 = getelementptr inbounds float, float* %3, i64 %1803
  %1805 = bitcast float* %1804 to <8 x float>*
  %1806 = load <8 x float>, <8 x float>* %1805, align 1, !tbaa !12
  %1807 = add nsw i64 %1791, 32
  %1808 = getelementptr inbounds float, float* %3, i64 %1807
  %1809 = bitcast float* %1808 to <8 x float>*
  %1810 = load <8 x float>, <8 x float>* %1809, align 1, !tbaa !12
  %1811 = add nsw i64 %1791, 40
  %1812 = getelementptr inbounds float, float* %3, i64 %1811
  %1813 = bitcast float* %1812 to <8 x float>*
  %1814 = load <8 x float>, <8 x float>* %1813, align 1, !tbaa !12
  %1815 = add nsw i64 %1791, 48
  %1816 = getelementptr inbounds float, float* %3, i64 %1815
  %1817 = bitcast float* %1816 to <8 x float>*
  %1818 = load <8 x float>, <8 x float>* %1817, align 1, !tbaa !12
  %1819 = add nsw i64 %1791, 56
  %1820 = getelementptr inbounds float, float* %3, i64 %1819
  %1821 = bitcast float* %1820 to <8 x float>*
  %1822 = load <8 x float>, <8 x float>* %1821, align 1, !tbaa !12
  %1823 = add nsw i64 %1791, 64
  %1824 = getelementptr inbounds float, float* %3, i64 %1823
  %1825 = bitcast float* %1824 to <8 x float>*
  %1826 = load <8 x float>, <8 x float>* %1825, align 1, !tbaa !12
  %1827 = add nsw i64 %1791, 72
  %1828 = getelementptr inbounds float, float* %3, i64 %1827
  %1829 = bitcast float* %1828 to <8 x float>*
  %1830 = load <8 x float>, <8 x float>* %1829, align 1, !tbaa !12
  %1831 = add nsw i64 %1791, 80
  %1832 = getelementptr inbounds float, float* %3, i64 %1831
  %1833 = bitcast float* %1832 to <8 x float>*
  %1834 = load <8 x float>, <8 x float>* %1833, align 1, !tbaa !12
  %1835 = add nsw i64 %1791, 88
  %1836 = getelementptr inbounds float, float* %3, i64 %1835
  %1837 = bitcast float* %1836 to <8 x float>*
  %1838 = load <8 x float>, <8 x float>* %1837, align 1, !tbaa !12
  %1839 = add nsw i64 %1791, 96
  %1840 = getelementptr inbounds float, float* %3, i64 %1839
  %1841 = bitcast float* %1840 to <8 x float>*
  %1842 = load <8 x float>, <8 x float>* %1841, align 1, !tbaa !12
  %1843 = add nsw i64 %1791, 104
  %1844 = getelementptr inbounds float, float* %3, i64 %1843
  %1845 = bitcast float* %1844 to <8 x float>*
  %1846 = load <8 x float>, <8 x float>* %1845, align 1, !tbaa !12
  %1847 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1794, <8 x float> %65, <8 x float> %1738) #10
  %1848 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1798, <8 x float> %65, <8 x float> %1742) #10
  %1849 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1802, <8 x float> %65, <8 x float> %1746) #10
  %1850 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1806, <8 x float> %65, <8 x float> %1750) #10
  %1851 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1810, <8 x float> %65, <8 x float> %1754) #10
  %1852 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1814, <8 x float> %65, <8 x float> %1758) #10
  %1853 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1818, <8 x float> %65, <8 x float> %1762) #10
  %1854 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1822, <8 x float> %65, <8 x float> %1766) #10
  %1855 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1826, <8 x float> %65, <8 x float> %1770) #10
  %1856 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1830, <8 x float> %65, <8 x float> %1774) #10
  %1857 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1834, <8 x float> %65, <8 x float> %1778) #10
  %1858 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1838, <8 x float> %65, <8 x float> %1782) #10
  %1859 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1842, <8 x float> %65, <8 x float> %1786) #10
  %1860 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1846, <8 x float> %65, <8 x float> %1790) #10
  store <8 x float> %1847, <8 x float>* %1737, align 1, !tbaa !12
  store <8 x float> %1848, <8 x float>* %1741, align 1, !tbaa !12
  store <8 x float> %1849, <8 x float>* %1745, align 1, !tbaa !12
  store <8 x float> %1850, <8 x float>* %1749, align 1, !tbaa !12
  store <8 x float> %1851, <8 x float>* %1753, align 1, !tbaa !12
  store <8 x float> %1852, <8 x float>* %1757, align 1, !tbaa !12
  store <8 x float> %1853, <8 x float>* %1761, align 1, !tbaa !12
  store <8 x float> %1854, <8 x float>* %1765, align 1, !tbaa !12
  store <8 x float> %1855, <8 x float>* %1769, align 1, !tbaa !12
  store <8 x float> %1856, <8 x float>* %1773, align 1, !tbaa !12
  store <8 x float> %1857, <8 x float>* %1777, align 1, !tbaa !12
  store <8 x float> %1858, <8 x float>* %1781, align 1, !tbaa !12
  store <8 x float> %1859, <8 x float>* %1785, align 1, !tbaa !12
  store <8 x float> %1860, <8 x float>* %1789, align 1, !tbaa !12
  %1861 = add nuw nsw i64 %1678, 112
  %1862 = icmp ult i64 %1861, %1483
  br i1 %1862, label %1677, label %1670

1863:                                             ; preds = %1869
  br i1 %1672, label %1864, label %2262

1864:                                             ; preds = %1863
  %1865 = trunc i64 %71 to i32
  %1866 = mul nsw i32 %1671, %1865
  %1867 = sext i32 %1866 to i64
  %1868 = zext i32 %1671 to i64
  br label %2076

1869:                                             ; preds = %1673, %1869
  %1870 = phi i64 [ 0, %1673 ], [ %2068, %1869 ]
  %1871 = getelementptr inbounds float, float* %5, i64 %1870
  %1872 = getelementptr inbounds float, float* %1871, i64 8
  %1873 = bitcast float* %1872 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1873, i32 0, i32 1, i32 1)
  %1874 = getelementptr inbounds float, float* %3, i64 %1870
  %1875 = getelementptr inbounds float, float* %1874, i64 8
  %1876 = bitcast float* %1875 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1876, i32 0, i32 1, i32 1)
  %1877 = getelementptr inbounds float, float* %1871, i64 16
  %1878 = bitcast float* %1877 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1878, i32 0, i32 1, i32 1)
  %1879 = getelementptr inbounds float, float* %1874, i64 16
  %1880 = bitcast float* %1879 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1880, i32 0, i32 1, i32 1)
  %1881 = getelementptr inbounds float, float* %1871, i64 24
  %1882 = bitcast float* %1881 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1882, i32 0, i32 1, i32 1)
  %1883 = getelementptr inbounds float, float* %1874, i64 24
  %1884 = bitcast float* %1883 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1884, i32 0, i32 1, i32 1)
  %1885 = getelementptr inbounds float, float* %1871, i64 32
  %1886 = bitcast float* %1885 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1886, i32 0, i32 1, i32 1)
  %1887 = getelementptr inbounds float, float* %1874, i64 32
  %1888 = bitcast float* %1887 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1888, i32 0, i32 1, i32 1)
  %1889 = getelementptr inbounds float, float* %1871, i64 40
  %1890 = bitcast float* %1889 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1890, i32 0, i32 1, i32 1)
  %1891 = getelementptr inbounds float, float* %1874, i64 40
  %1892 = bitcast float* %1891 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1892, i32 0, i32 1, i32 1)
  %1893 = getelementptr inbounds float, float* %1871, i64 48
  %1894 = bitcast float* %1893 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1894, i32 0, i32 1, i32 1)
  %1895 = getelementptr inbounds float, float* %1874, i64 48
  %1896 = bitcast float* %1895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1896, i32 0, i32 1, i32 1)
  %1897 = getelementptr inbounds float, float* %1871, i64 56
  %1898 = bitcast float* %1897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1898, i32 0, i32 1, i32 1)
  %1899 = getelementptr inbounds float, float* %1874, i64 56
  %1900 = bitcast float* %1899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1900, i32 0, i32 1, i32 1)
  %1901 = getelementptr inbounds float, float* %1871, i64 64
  %1902 = bitcast float* %1901 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1902, i32 0, i32 1, i32 1)
  %1903 = getelementptr inbounds float, float* %1874, i64 64
  %1904 = bitcast float* %1903 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1904, i32 0, i32 1, i32 1)
  %1905 = getelementptr inbounds float, float* %1871, i64 72
  %1906 = bitcast float* %1905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1906, i32 0, i32 1, i32 1)
  %1907 = getelementptr inbounds float, float* %1874, i64 72
  %1908 = bitcast float* %1907 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1908, i32 0, i32 1, i32 1)
  %1909 = getelementptr inbounds float, float* %1871, i64 80
  %1910 = bitcast float* %1909 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1910, i32 0, i32 1, i32 1)
  %1911 = getelementptr inbounds float, float* %1874, i64 80
  %1912 = bitcast float* %1911 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1912, i32 0, i32 1, i32 1)
  %1913 = getelementptr inbounds float, float* %1871, i64 88
  %1914 = bitcast float* %1913 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1914, i32 0, i32 1, i32 1)
  %1915 = getelementptr inbounds float, float* %1874, i64 88
  %1916 = bitcast float* %1915 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1916, i32 0, i32 1, i32 1)
  %1917 = getelementptr inbounds float, float* %1871, i64 96
  %1918 = bitcast float* %1917 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1918, i32 0, i32 1, i32 1)
  %1919 = getelementptr inbounds float, float* %1874, i64 96
  %1920 = bitcast float* %1919 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1920, i32 0, i32 1, i32 1)
  %1921 = getelementptr inbounds float, float* %1871, i64 104
  %1922 = bitcast float* %1921 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1922, i32 0, i32 1, i32 1)
  %1923 = getelementptr inbounds float, float* %1874, i64 104
  %1924 = bitcast float* %1923 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1924, i32 0, i32 1, i32 1)
  %1925 = getelementptr inbounds float, float* %1871, i64 112
  %1926 = bitcast float* %1925 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1926, i32 0, i32 1, i32 1)
  %1927 = getelementptr inbounds float, float* %1874, i64 112
  %1928 = bitcast float* %1927 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1928, i32 0, i32 1, i32 1)
  %1929 = bitcast float* %1871 to <8 x float>*
  %1930 = load <8 x float>, <8 x float>* %1929, align 1, !tbaa !12
  %1931 = or i64 %1870, 8
  %1932 = getelementptr inbounds float, float* %5, i64 %1931
  %1933 = bitcast float* %1932 to <8 x float>*
  %1934 = load <8 x float>, <8 x float>* %1933, align 1, !tbaa !12
  %1935 = add nuw nsw i64 %1870, 16
  %1936 = getelementptr inbounds float, float* %5, i64 %1935
  %1937 = bitcast float* %1936 to <8 x float>*
  %1938 = load <8 x float>, <8 x float>* %1937, align 1, !tbaa !12
  %1939 = add nuw nsw i64 %1870, 24
  %1940 = getelementptr inbounds float, float* %5, i64 %1939
  %1941 = bitcast float* %1940 to <8 x float>*
  %1942 = load <8 x float>, <8 x float>* %1941, align 1, !tbaa !12
  %1943 = add nuw nsw i64 %1870, 32
  %1944 = getelementptr inbounds float, float* %5, i64 %1943
  %1945 = bitcast float* %1944 to <8 x float>*
  %1946 = load <8 x float>, <8 x float>* %1945, align 1, !tbaa !12
  %1947 = add nuw nsw i64 %1870, 40
  %1948 = getelementptr inbounds float, float* %5, i64 %1947
  %1949 = bitcast float* %1948 to <8 x float>*
  %1950 = load <8 x float>, <8 x float>* %1949, align 1, !tbaa !12
  %1951 = add nuw nsw i64 %1870, 48
  %1952 = getelementptr inbounds float, float* %5, i64 %1951
  %1953 = bitcast float* %1952 to <8 x float>*
  %1954 = load <8 x float>, <8 x float>* %1953, align 1, !tbaa !12
  %1955 = add nuw nsw i64 %1870, 56
  %1956 = getelementptr inbounds float, float* %5, i64 %1955
  %1957 = bitcast float* %1956 to <8 x float>*
  %1958 = load <8 x float>, <8 x float>* %1957, align 1, !tbaa !12
  %1959 = add nuw nsw i64 %1870, 64
  %1960 = getelementptr inbounds float, float* %5, i64 %1959
  %1961 = bitcast float* %1960 to <8 x float>*
  %1962 = load <8 x float>, <8 x float>* %1961, align 1, !tbaa !12
  %1963 = add nuw nsw i64 %1870, 72
  %1964 = getelementptr inbounds float, float* %5, i64 %1963
  %1965 = bitcast float* %1964 to <8 x float>*
  %1966 = load <8 x float>, <8 x float>* %1965, align 1, !tbaa !12
  %1967 = add nuw nsw i64 %1870, 80
  %1968 = getelementptr inbounds float, float* %5, i64 %1967
  %1969 = bitcast float* %1968 to <8 x float>*
  %1970 = load <8 x float>, <8 x float>* %1969, align 1, !tbaa !12
  %1971 = add nuw nsw i64 %1870, 88
  %1972 = getelementptr inbounds float, float* %5, i64 %1971
  %1973 = bitcast float* %1972 to <8 x float>*
  %1974 = load <8 x float>, <8 x float>* %1973, align 1, !tbaa !12
  %1975 = add nuw nsw i64 %1870, 96
  %1976 = getelementptr inbounds float, float* %5, i64 %1975
  %1977 = bitcast float* %1976 to <8 x float>*
  %1978 = load <8 x float>, <8 x float>* %1977, align 1, !tbaa !12
  %1979 = add nuw nsw i64 %1870, 104
  %1980 = getelementptr inbounds float, float* %5, i64 %1979
  %1981 = bitcast float* %1980 to <8 x float>*
  %1982 = load <8 x float>, <8 x float>* %1981, align 1, !tbaa !12
  %1983 = trunc i64 %1870 to i32
  %1984 = add nsw i32 %1676, %1983
  %1985 = sext i32 %1984 to i64
  %1986 = getelementptr inbounds float, float* %3, i64 %1985
  %1987 = bitcast float* %1986 to <8 x float>*
  %1988 = load <8 x float>, <8 x float>* %1987, align 1, !tbaa !12
  %1989 = add nsw i32 %1984, 8
  %1990 = sext i32 %1989 to i64
  %1991 = getelementptr inbounds float, float* %3, i64 %1990
  %1992 = bitcast float* %1991 to <8 x float>*
  %1993 = load <8 x float>, <8 x float>* %1992, align 1, !tbaa !12
  %1994 = add nsw i32 %1984, 16
  %1995 = sext i32 %1994 to i64
  %1996 = getelementptr inbounds float, float* %3, i64 %1995
  %1997 = bitcast float* %1996 to <8 x float>*
  %1998 = load <8 x float>, <8 x float>* %1997, align 1, !tbaa !12
  %1999 = add nsw i32 %1984, 24
  %2000 = sext i32 %1999 to i64
  %2001 = getelementptr inbounds float, float* %3, i64 %2000
  %2002 = bitcast float* %2001 to <8 x float>*
  %2003 = load <8 x float>, <8 x float>* %2002, align 1, !tbaa !12
  %2004 = add nsw i32 %1984, 32
  %2005 = sext i32 %2004 to i64
  %2006 = getelementptr inbounds float, float* %3, i64 %2005
  %2007 = bitcast float* %2006 to <8 x float>*
  %2008 = load <8 x float>, <8 x float>* %2007, align 1, !tbaa !12
  %2009 = add nsw i32 %1984, 40
  %2010 = sext i32 %2009 to i64
  %2011 = getelementptr inbounds float, float* %3, i64 %2010
  %2012 = bitcast float* %2011 to <8 x float>*
  %2013 = load <8 x float>, <8 x float>* %2012, align 1, !tbaa !12
  %2014 = add nsw i32 %1984, 48
  %2015 = sext i32 %2014 to i64
  %2016 = getelementptr inbounds float, float* %3, i64 %2015
  %2017 = bitcast float* %2016 to <8 x float>*
  %2018 = load <8 x float>, <8 x float>* %2017, align 1, !tbaa !12
  %2019 = add nsw i32 %1984, 56
  %2020 = sext i32 %2019 to i64
  %2021 = getelementptr inbounds float, float* %3, i64 %2020
  %2022 = bitcast float* %2021 to <8 x float>*
  %2023 = load <8 x float>, <8 x float>* %2022, align 1, !tbaa !12
  %2024 = add nsw i32 %1984, 64
  %2025 = sext i32 %2024 to i64
  %2026 = getelementptr inbounds float, float* %3, i64 %2025
  %2027 = bitcast float* %2026 to <8 x float>*
  %2028 = load <8 x float>, <8 x float>* %2027, align 1, !tbaa !12
  %2029 = add nsw i32 %1984, 72
  %2030 = sext i32 %2029 to i64
  %2031 = getelementptr inbounds float, float* %3, i64 %2030
  %2032 = bitcast float* %2031 to <8 x float>*
  %2033 = load <8 x float>, <8 x float>* %2032, align 1, !tbaa !12
  %2034 = add nsw i32 %1984, 80
  %2035 = sext i32 %2034 to i64
  %2036 = getelementptr inbounds float, float* %3, i64 %2035
  %2037 = bitcast float* %2036 to <8 x float>*
  %2038 = load <8 x float>, <8 x float>* %2037, align 1, !tbaa !12
  %2039 = add nsw i32 %1984, 88
  %2040 = sext i32 %2039 to i64
  %2041 = getelementptr inbounds float, float* %3, i64 %2040
  %2042 = bitcast float* %2041 to <8 x float>*
  %2043 = load <8 x float>, <8 x float>* %2042, align 1, !tbaa !12
  %2044 = add nsw i32 %1984, 96
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds float, float* %3, i64 %2045
  %2047 = bitcast float* %2046 to <8 x float>*
  %2048 = load <8 x float>, <8 x float>* %2047, align 1, !tbaa !12
  %2049 = add nsw i32 %1984, 104
  %2050 = sext i32 %2049 to i64
  %2051 = getelementptr inbounds float, float* %3, i64 %2050
  %2052 = bitcast float* %2051 to <8 x float>*
  %2053 = load <8 x float>, <8 x float>* %2052, align 1, !tbaa !12
  %2054 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1988, <8 x float> %70, <8 x float> %1930) #10
  %2055 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1993, <8 x float> %70, <8 x float> %1934) #10
  %2056 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1998, <8 x float> %70, <8 x float> %1938) #10
  %2057 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2003, <8 x float> %70, <8 x float> %1942) #10
  %2058 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2008, <8 x float> %70, <8 x float> %1946) #10
  %2059 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2013, <8 x float> %70, <8 x float> %1950) #10
  %2060 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2018, <8 x float> %70, <8 x float> %1954) #10
  %2061 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2023, <8 x float> %70, <8 x float> %1958) #10
  %2062 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2028, <8 x float> %70, <8 x float> %1962) #10
  %2063 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2033, <8 x float> %70, <8 x float> %1966) #10
  %2064 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2038, <8 x float> %70, <8 x float> %1970) #10
  %2065 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2043, <8 x float> %70, <8 x float> %1974) #10
  %2066 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2048, <8 x float> %70, <8 x float> %1978) #10
  %2067 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2053, <8 x float> %70, <8 x float> %1982) #10
  store <8 x float> %2054, <8 x float>* %1929, align 1, !tbaa !12
  store <8 x float> %2055, <8 x float>* %1933, align 1, !tbaa !12
  store <8 x float> %2056, <8 x float>* %1937, align 1, !tbaa !12
  store <8 x float> %2057, <8 x float>* %1941, align 1, !tbaa !12
  store <8 x float> %2058, <8 x float>* %1945, align 1, !tbaa !12
  store <8 x float> %2059, <8 x float>* %1949, align 1, !tbaa !12
  store <8 x float> %2060, <8 x float>* %1953, align 1, !tbaa !12
  store <8 x float> %2061, <8 x float>* %1957, align 1, !tbaa !12
  store <8 x float> %2062, <8 x float>* %1961, align 1, !tbaa !12
  store <8 x float> %2063, <8 x float>* %1965, align 1, !tbaa !12
  store <8 x float> %2064, <8 x float>* %1969, align 1, !tbaa !12
  store <8 x float> %2065, <8 x float>* %1973, align 1, !tbaa !12
  store <8 x float> %2066, <8 x float>* %1977, align 1, !tbaa !12
  store <8 x float> %2067, <8 x float>* %1981, align 1, !tbaa !12
  %2068 = add nuw nsw i64 %1870, 112
  %2069 = icmp ult i64 %2068, %1674
  br i1 %2069, label %1869, label %1863

2070:                                             ; preds = %2076
  br i1 %1672, label %2071, label %2262

2071:                                             ; preds = %2070
  %2072 = trunc i64 %76 to i32
  %2073 = mul nsw i32 %1671, %2072
  %2074 = sext i32 %2073 to i64
  %2075 = zext i32 %1671 to i64
  br label %2267

2076:                                             ; preds = %1864, %2076
  %2077 = phi i64 [ 0, %1864 ], [ %2260, %2076 ]
  %2078 = getelementptr inbounds float, float* %5, i64 %2077
  %2079 = getelementptr inbounds float, float* %2078, i64 8
  %2080 = bitcast float* %2079 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2080, i32 0, i32 1, i32 1)
  %2081 = getelementptr inbounds float, float* %3, i64 %2077
  %2082 = getelementptr inbounds float, float* %2081, i64 8
  %2083 = bitcast float* %2082 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2083, i32 0, i32 1, i32 1)
  %2084 = getelementptr inbounds float, float* %2078, i64 16
  %2085 = bitcast float* %2084 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2085, i32 0, i32 1, i32 1)
  %2086 = getelementptr inbounds float, float* %2081, i64 16
  %2087 = bitcast float* %2086 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2087, i32 0, i32 1, i32 1)
  %2088 = getelementptr inbounds float, float* %2078, i64 24
  %2089 = bitcast float* %2088 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2089, i32 0, i32 1, i32 1)
  %2090 = getelementptr inbounds float, float* %2081, i64 24
  %2091 = bitcast float* %2090 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2091, i32 0, i32 1, i32 1)
  %2092 = getelementptr inbounds float, float* %2078, i64 32
  %2093 = bitcast float* %2092 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2093, i32 0, i32 1, i32 1)
  %2094 = getelementptr inbounds float, float* %2081, i64 32
  %2095 = bitcast float* %2094 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2095, i32 0, i32 1, i32 1)
  %2096 = getelementptr inbounds float, float* %2078, i64 40
  %2097 = bitcast float* %2096 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2097, i32 0, i32 1, i32 1)
  %2098 = getelementptr inbounds float, float* %2081, i64 40
  %2099 = bitcast float* %2098 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2099, i32 0, i32 1, i32 1)
  %2100 = getelementptr inbounds float, float* %2078, i64 48
  %2101 = bitcast float* %2100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2101, i32 0, i32 1, i32 1)
  %2102 = getelementptr inbounds float, float* %2081, i64 48
  %2103 = bitcast float* %2102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2103, i32 0, i32 1, i32 1)
  %2104 = getelementptr inbounds float, float* %2078, i64 56
  %2105 = bitcast float* %2104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2105, i32 0, i32 1, i32 1)
  %2106 = getelementptr inbounds float, float* %2081, i64 56
  %2107 = bitcast float* %2106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2107, i32 0, i32 1, i32 1)
  %2108 = getelementptr inbounds float, float* %2078, i64 64
  %2109 = bitcast float* %2108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2109, i32 0, i32 1, i32 1)
  %2110 = getelementptr inbounds float, float* %2081, i64 64
  %2111 = bitcast float* %2110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2111, i32 0, i32 1, i32 1)
  %2112 = getelementptr inbounds float, float* %2078, i64 72
  %2113 = bitcast float* %2112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2113, i32 0, i32 1, i32 1)
  %2114 = getelementptr inbounds float, float* %2081, i64 72
  %2115 = bitcast float* %2114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2115, i32 0, i32 1, i32 1)
  %2116 = getelementptr inbounds float, float* %2078, i64 80
  %2117 = bitcast float* %2116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2117, i32 0, i32 1, i32 1)
  %2118 = getelementptr inbounds float, float* %2081, i64 80
  %2119 = bitcast float* %2118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2119, i32 0, i32 1, i32 1)
  %2120 = getelementptr inbounds float, float* %2078, i64 88
  %2121 = bitcast float* %2120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2121, i32 0, i32 1, i32 1)
  %2122 = getelementptr inbounds float, float* %2081, i64 88
  %2123 = bitcast float* %2122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2123, i32 0, i32 1, i32 1)
  %2124 = getelementptr inbounds float, float* %2078, i64 96
  %2125 = bitcast float* %2124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2125, i32 0, i32 1, i32 1)
  %2126 = getelementptr inbounds float, float* %2081, i64 96
  %2127 = bitcast float* %2126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2127, i32 0, i32 1, i32 1)
  %2128 = getelementptr inbounds float, float* %2078, i64 104
  %2129 = bitcast float* %2128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2129, i32 0, i32 1, i32 1)
  %2130 = getelementptr inbounds float, float* %2081, i64 104
  %2131 = bitcast float* %2130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2131, i32 0, i32 1, i32 1)
  %2132 = getelementptr inbounds float, float* %2078, i64 112
  %2133 = bitcast float* %2132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2133, i32 0, i32 1, i32 1)
  %2134 = getelementptr inbounds float, float* %2081, i64 112
  %2135 = bitcast float* %2134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2135, i32 0, i32 1, i32 1)
  %2136 = bitcast float* %2078 to <8 x float>*
  %2137 = load <8 x float>, <8 x float>* %2136, align 1, !tbaa !12
  %2138 = or i64 %2077, 8
  %2139 = getelementptr inbounds float, float* %5, i64 %2138
  %2140 = bitcast float* %2139 to <8 x float>*
  %2141 = load <8 x float>, <8 x float>* %2140, align 1, !tbaa !12
  %2142 = add nuw nsw i64 %2077, 16
  %2143 = getelementptr inbounds float, float* %5, i64 %2142
  %2144 = bitcast float* %2143 to <8 x float>*
  %2145 = load <8 x float>, <8 x float>* %2144, align 1, !tbaa !12
  %2146 = add nuw nsw i64 %2077, 24
  %2147 = getelementptr inbounds float, float* %5, i64 %2146
  %2148 = bitcast float* %2147 to <8 x float>*
  %2149 = load <8 x float>, <8 x float>* %2148, align 1, !tbaa !12
  %2150 = add nuw nsw i64 %2077, 32
  %2151 = getelementptr inbounds float, float* %5, i64 %2150
  %2152 = bitcast float* %2151 to <8 x float>*
  %2153 = load <8 x float>, <8 x float>* %2152, align 1, !tbaa !12
  %2154 = add nuw nsw i64 %2077, 40
  %2155 = getelementptr inbounds float, float* %5, i64 %2154
  %2156 = bitcast float* %2155 to <8 x float>*
  %2157 = load <8 x float>, <8 x float>* %2156, align 1, !tbaa !12
  %2158 = add nuw nsw i64 %2077, 48
  %2159 = getelementptr inbounds float, float* %5, i64 %2158
  %2160 = bitcast float* %2159 to <8 x float>*
  %2161 = load <8 x float>, <8 x float>* %2160, align 1, !tbaa !12
  %2162 = add nuw nsw i64 %2077, 56
  %2163 = getelementptr inbounds float, float* %5, i64 %2162
  %2164 = bitcast float* %2163 to <8 x float>*
  %2165 = load <8 x float>, <8 x float>* %2164, align 1, !tbaa !12
  %2166 = add nuw nsw i64 %2077, 64
  %2167 = getelementptr inbounds float, float* %5, i64 %2166
  %2168 = bitcast float* %2167 to <8 x float>*
  %2169 = load <8 x float>, <8 x float>* %2168, align 1, !tbaa !12
  %2170 = add nuw nsw i64 %2077, 72
  %2171 = getelementptr inbounds float, float* %5, i64 %2170
  %2172 = bitcast float* %2171 to <8 x float>*
  %2173 = load <8 x float>, <8 x float>* %2172, align 1, !tbaa !12
  %2174 = add nuw nsw i64 %2077, 80
  %2175 = getelementptr inbounds float, float* %5, i64 %2174
  %2176 = bitcast float* %2175 to <8 x float>*
  %2177 = load <8 x float>, <8 x float>* %2176, align 1, !tbaa !12
  %2178 = add nuw nsw i64 %2077, 88
  %2179 = getelementptr inbounds float, float* %5, i64 %2178
  %2180 = bitcast float* %2179 to <8 x float>*
  %2181 = load <8 x float>, <8 x float>* %2180, align 1, !tbaa !12
  %2182 = add nuw nsw i64 %2077, 96
  %2183 = getelementptr inbounds float, float* %5, i64 %2182
  %2184 = bitcast float* %2183 to <8 x float>*
  %2185 = load <8 x float>, <8 x float>* %2184, align 1, !tbaa !12
  %2186 = add nuw nsw i64 %2077, 104
  %2187 = getelementptr inbounds float, float* %5, i64 %2186
  %2188 = bitcast float* %2187 to <8 x float>*
  %2189 = load <8 x float>, <8 x float>* %2188, align 1, !tbaa !12
  %2190 = add nsw i64 %2077, %1867
  %2191 = getelementptr inbounds float, float* %3, i64 %2190
  %2192 = bitcast float* %2191 to <8 x float>*
  %2193 = load <8 x float>, <8 x float>* %2192, align 1, !tbaa !12
  %2194 = add nsw i64 %2190, 8
  %2195 = getelementptr inbounds float, float* %3, i64 %2194
  %2196 = bitcast float* %2195 to <8 x float>*
  %2197 = load <8 x float>, <8 x float>* %2196, align 1, !tbaa !12
  %2198 = add nsw i64 %2190, 16
  %2199 = getelementptr inbounds float, float* %3, i64 %2198
  %2200 = bitcast float* %2199 to <8 x float>*
  %2201 = load <8 x float>, <8 x float>* %2200, align 1, !tbaa !12
  %2202 = add nsw i64 %2190, 24
  %2203 = getelementptr inbounds float, float* %3, i64 %2202
  %2204 = bitcast float* %2203 to <8 x float>*
  %2205 = load <8 x float>, <8 x float>* %2204, align 1, !tbaa !12
  %2206 = add nsw i64 %2190, 32
  %2207 = getelementptr inbounds float, float* %3, i64 %2206
  %2208 = bitcast float* %2207 to <8 x float>*
  %2209 = load <8 x float>, <8 x float>* %2208, align 1, !tbaa !12
  %2210 = add nsw i64 %2190, 40
  %2211 = getelementptr inbounds float, float* %3, i64 %2210
  %2212 = bitcast float* %2211 to <8 x float>*
  %2213 = load <8 x float>, <8 x float>* %2212, align 1, !tbaa !12
  %2214 = add nsw i64 %2190, 48
  %2215 = getelementptr inbounds float, float* %3, i64 %2214
  %2216 = bitcast float* %2215 to <8 x float>*
  %2217 = load <8 x float>, <8 x float>* %2216, align 1, !tbaa !12
  %2218 = add nsw i64 %2190, 56
  %2219 = getelementptr inbounds float, float* %3, i64 %2218
  %2220 = bitcast float* %2219 to <8 x float>*
  %2221 = load <8 x float>, <8 x float>* %2220, align 1, !tbaa !12
  %2222 = add nsw i64 %2190, 64
  %2223 = getelementptr inbounds float, float* %3, i64 %2222
  %2224 = bitcast float* %2223 to <8 x float>*
  %2225 = load <8 x float>, <8 x float>* %2224, align 1, !tbaa !12
  %2226 = add nsw i64 %2190, 72
  %2227 = getelementptr inbounds float, float* %3, i64 %2226
  %2228 = bitcast float* %2227 to <8 x float>*
  %2229 = load <8 x float>, <8 x float>* %2228, align 1, !tbaa !12
  %2230 = add nsw i64 %2190, 80
  %2231 = getelementptr inbounds float, float* %3, i64 %2230
  %2232 = bitcast float* %2231 to <8 x float>*
  %2233 = load <8 x float>, <8 x float>* %2232, align 1, !tbaa !12
  %2234 = add nsw i64 %2190, 88
  %2235 = getelementptr inbounds float, float* %3, i64 %2234
  %2236 = bitcast float* %2235 to <8 x float>*
  %2237 = load <8 x float>, <8 x float>* %2236, align 1, !tbaa !12
  %2238 = add nsw i64 %2190, 96
  %2239 = getelementptr inbounds float, float* %3, i64 %2238
  %2240 = bitcast float* %2239 to <8 x float>*
  %2241 = load <8 x float>, <8 x float>* %2240, align 1, !tbaa !12
  %2242 = add nsw i64 %2190, 104
  %2243 = getelementptr inbounds float, float* %3, i64 %2242
  %2244 = bitcast float* %2243 to <8 x float>*
  %2245 = load <8 x float>, <8 x float>* %2244, align 1, !tbaa !12
  %2246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2193, <8 x float> %75, <8 x float> %2137) #10
  %2247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2197, <8 x float> %75, <8 x float> %2141) #10
  %2248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2201, <8 x float> %75, <8 x float> %2145) #10
  %2249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2205, <8 x float> %75, <8 x float> %2149) #10
  %2250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2209, <8 x float> %75, <8 x float> %2153) #10
  %2251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2213, <8 x float> %75, <8 x float> %2157) #10
  %2252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2217, <8 x float> %75, <8 x float> %2161) #10
  %2253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2221, <8 x float> %75, <8 x float> %2165) #10
  %2254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2225, <8 x float> %75, <8 x float> %2169) #10
  %2255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2229, <8 x float> %75, <8 x float> %2173) #10
  %2256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2233, <8 x float> %75, <8 x float> %2177) #10
  %2257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2237, <8 x float> %75, <8 x float> %2181) #10
  %2258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2241, <8 x float> %75, <8 x float> %2185) #10
  %2259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2245, <8 x float> %75, <8 x float> %2189) #10
  store <8 x float> %2246, <8 x float>* %2136, align 1, !tbaa !12
  store <8 x float> %2247, <8 x float>* %2140, align 1, !tbaa !12
  store <8 x float> %2248, <8 x float>* %2144, align 1, !tbaa !12
  store <8 x float> %2249, <8 x float>* %2148, align 1, !tbaa !12
  store <8 x float> %2250, <8 x float>* %2152, align 1, !tbaa !12
  store <8 x float> %2251, <8 x float>* %2156, align 1, !tbaa !12
  store <8 x float> %2252, <8 x float>* %2160, align 1, !tbaa !12
  store <8 x float> %2253, <8 x float>* %2164, align 1, !tbaa !12
  store <8 x float> %2254, <8 x float>* %2168, align 1, !tbaa !12
  store <8 x float> %2255, <8 x float>* %2172, align 1, !tbaa !12
  store <8 x float> %2256, <8 x float>* %2176, align 1, !tbaa !12
  store <8 x float> %2257, <8 x float>* %2180, align 1, !tbaa !12
  store <8 x float> %2258, <8 x float>* %2184, align 1, !tbaa !12
  store <8 x float> %2259, <8 x float>* %2188, align 1, !tbaa !12
  %2260 = add nuw nsw i64 %2077, 112
  %2261 = icmp ult i64 %2260, %1868
  br i1 %2261, label %2076, label %2070

2262:                                             ; preds = %2267, %486, %20, %1078, %1670, %1863, %2070
  %2263 = add nuw nsw i64 %21, 12
  %2264 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %2265 = sext i32 %2264 to i64
  %2266 = icmp slt i64 %2263, %2265
  br i1 %2266, label %20, label %8

2267:                                             ; preds = %2071, %2267
  %2268 = phi i64 [ 0, %2071 ], [ %2451, %2267 ]
  %2269 = getelementptr inbounds float, float* %5, i64 %2268
  %2270 = getelementptr inbounds float, float* %2269, i64 8
  %2271 = bitcast float* %2270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2271, i32 0, i32 1, i32 1)
  %2272 = getelementptr inbounds float, float* %3, i64 %2268
  %2273 = getelementptr inbounds float, float* %2272, i64 8
  %2274 = bitcast float* %2273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2274, i32 0, i32 1, i32 1)
  %2275 = getelementptr inbounds float, float* %2269, i64 16
  %2276 = bitcast float* %2275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2276, i32 0, i32 1, i32 1)
  %2277 = getelementptr inbounds float, float* %2272, i64 16
  %2278 = bitcast float* %2277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2278, i32 0, i32 1, i32 1)
  %2279 = getelementptr inbounds float, float* %2269, i64 24
  %2280 = bitcast float* %2279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2280, i32 0, i32 1, i32 1)
  %2281 = getelementptr inbounds float, float* %2272, i64 24
  %2282 = bitcast float* %2281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2282, i32 0, i32 1, i32 1)
  %2283 = getelementptr inbounds float, float* %2269, i64 32
  %2284 = bitcast float* %2283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2284, i32 0, i32 1, i32 1)
  %2285 = getelementptr inbounds float, float* %2272, i64 32
  %2286 = bitcast float* %2285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2286, i32 0, i32 1, i32 1)
  %2287 = getelementptr inbounds float, float* %2269, i64 40
  %2288 = bitcast float* %2287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2288, i32 0, i32 1, i32 1)
  %2289 = getelementptr inbounds float, float* %2272, i64 40
  %2290 = bitcast float* %2289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2290, i32 0, i32 1, i32 1)
  %2291 = getelementptr inbounds float, float* %2269, i64 48
  %2292 = bitcast float* %2291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2292, i32 0, i32 1, i32 1)
  %2293 = getelementptr inbounds float, float* %2272, i64 48
  %2294 = bitcast float* %2293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2294, i32 0, i32 1, i32 1)
  %2295 = getelementptr inbounds float, float* %2269, i64 56
  %2296 = bitcast float* %2295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2296, i32 0, i32 1, i32 1)
  %2297 = getelementptr inbounds float, float* %2272, i64 56
  %2298 = bitcast float* %2297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2298, i32 0, i32 1, i32 1)
  %2299 = getelementptr inbounds float, float* %2269, i64 64
  %2300 = bitcast float* %2299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2300, i32 0, i32 1, i32 1)
  %2301 = getelementptr inbounds float, float* %2272, i64 64
  %2302 = bitcast float* %2301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2302, i32 0, i32 1, i32 1)
  %2303 = getelementptr inbounds float, float* %2269, i64 72
  %2304 = bitcast float* %2303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2304, i32 0, i32 1, i32 1)
  %2305 = getelementptr inbounds float, float* %2272, i64 72
  %2306 = bitcast float* %2305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2306, i32 0, i32 1, i32 1)
  %2307 = getelementptr inbounds float, float* %2269, i64 80
  %2308 = bitcast float* %2307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2308, i32 0, i32 1, i32 1)
  %2309 = getelementptr inbounds float, float* %2272, i64 80
  %2310 = bitcast float* %2309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2310, i32 0, i32 1, i32 1)
  %2311 = getelementptr inbounds float, float* %2269, i64 88
  %2312 = bitcast float* %2311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2312, i32 0, i32 1, i32 1)
  %2313 = getelementptr inbounds float, float* %2272, i64 88
  %2314 = bitcast float* %2313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2314, i32 0, i32 1, i32 1)
  %2315 = getelementptr inbounds float, float* %2269, i64 96
  %2316 = bitcast float* %2315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2316, i32 0, i32 1, i32 1)
  %2317 = getelementptr inbounds float, float* %2272, i64 96
  %2318 = bitcast float* %2317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2318, i32 0, i32 1, i32 1)
  %2319 = getelementptr inbounds float, float* %2269, i64 104
  %2320 = bitcast float* %2319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2320, i32 0, i32 1, i32 1)
  %2321 = getelementptr inbounds float, float* %2272, i64 104
  %2322 = bitcast float* %2321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2322, i32 0, i32 1, i32 1)
  %2323 = getelementptr inbounds float, float* %2269, i64 112
  %2324 = bitcast float* %2323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2324, i32 0, i32 1, i32 1)
  %2325 = getelementptr inbounds float, float* %2272, i64 112
  %2326 = bitcast float* %2325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2326, i32 0, i32 1, i32 1)
  %2327 = bitcast float* %2269 to <8 x float>*
  %2328 = load <8 x float>, <8 x float>* %2327, align 1, !tbaa !12
  %2329 = or i64 %2268, 8
  %2330 = getelementptr inbounds float, float* %5, i64 %2329
  %2331 = bitcast float* %2330 to <8 x float>*
  %2332 = load <8 x float>, <8 x float>* %2331, align 1, !tbaa !12
  %2333 = add nuw nsw i64 %2268, 16
  %2334 = getelementptr inbounds float, float* %5, i64 %2333
  %2335 = bitcast float* %2334 to <8 x float>*
  %2336 = load <8 x float>, <8 x float>* %2335, align 1, !tbaa !12
  %2337 = add nuw nsw i64 %2268, 24
  %2338 = getelementptr inbounds float, float* %5, i64 %2337
  %2339 = bitcast float* %2338 to <8 x float>*
  %2340 = load <8 x float>, <8 x float>* %2339, align 1, !tbaa !12
  %2341 = add nuw nsw i64 %2268, 32
  %2342 = getelementptr inbounds float, float* %5, i64 %2341
  %2343 = bitcast float* %2342 to <8 x float>*
  %2344 = load <8 x float>, <8 x float>* %2343, align 1, !tbaa !12
  %2345 = add nuw nsw i64 %2268, 40
  %2346 = getelementptr inbounds float, float* %5, i64 %2345
  %2347 = bitcast float* %2346 to <8 x float>*
  %2348 = load <8 x float>, <8 x float>* %2347, align 1, !tbaa !12
  %2349 = add nuw nsw i64 %2268, 48
  %2350 = getelementptr inbounds float, float* %5, i64 %2349
  %2351 = bitcast float* %2350 to <8 x float>*
  %2352 = load <8 x float>, <8 x float>* %2351, align 1, !tbaa !12
  %2353 = add nuw nsw i64 %2268, 56
  %2354 = getelementptr inbounds float, float* %5, i64 %2353
  %2355 = bitcast float* %2354 to <8 x float>*
  %2356 = load <8 x float>, <8 x float>* %2355, align 1, !tbaa !12
  %2357 = add nuw nsw i64 %2268, 64
  %2358 = getelementptr inbounds float, float* %5, i64 %2357
  %2359 = bitcast float* %2358 to <8 x float>*
  %2360 = load <8 x float>, <8 x float>* %2359, align 1, !tbaa !12
  %2361 = add nuw nsw i64 %2268, 72
  %2362 = getelementptr inbounds float, float* %5, i64 %2361
  %2363 = bitcast float* %2362 to <8 x float>*
  %2364 = load <8 x float>, <8 x float>* %2363, align 1, !tbaa !12
  %2365 = add nuw nsw i64 %2268, 80
  %2366 = getelementptr inbounds float, float* %5, i64 %2365
  %2367 = bitcast float* %2366 to <8 x float>*
  %2368 = load <8 x float>, <8 x float>* %2367, align 1, !tbaa !12
  %2369 = add nuw nsw i64 %2268, 88
  %2370 = getelementptr inbounds float, float* %5, i64 %2369
  %2371 = bitcast float* %2370 to <8 x float>*
  %2372 = load <8 x float>, <8 x float>* %2371, align 1, !tbaa !12
  %2373 = add nuw nsw i64 %2268, 96
  %2374 = getelementptr inbounds float, float* %5, i64 %2373
  %2375 = bitcast float* %2374 to <8 x float>*
  %2376 = load <8 x float>, <8 x float>* %2375, align 1, !tbaa !12
  %2377 = add nuw nsw i64 %2268, 104
  %2378 = getelementptr inbounds float, float* %5, i64 %2377
  %2379 = bitcast float* %2378 to <8 x float>*
  %2380 = load <8 x float>, <8 x float>* %2379, align 1, !tbaa !12
  %2381 = add nsw i64 %2268, %2074
  %2382 = getelementptr inbounds float, float* %3, i64 %2381
  %2383 = bitcast float* %2382 to <8 x float>*
  %2384 = load <8 x float>, <8 x float>* %2383, align 1, !tbaa !12
  %2385 = add nsw i64 %2381, 8
  %2386 = getelementptr inbounds float, float* %3, i64 %2385
  %2387 = bitcast float* %2386 to <8 x float>*
  %2388 = load <8 x float>, <8 x float>* %2387, align 1, !tbaa !12
  %2389 = add nsw i64 %2381, 16
  %2390 = getelementptr inbounds float, float* %3, i64 %2389
  %2391 = bitcast float* %2390 to <8 x float>*
  %2392 = load <8 x float>, <8 x float>* %2391, align 1, !tbaa !12
  %2393 = add nsw i64 %2381, 24
  %2394 = getelementptr inbounds float, float* %3, i64 %2393
  %2395 = bitcast float* %2394 to <8 x float>*
  %2396 = load <8 x float>, <8 x float>* %2395, align 1, !tbaa !12
  %2397 = add nsw i64 %2381, 32
  %2398 = getelementptr inbounds float, float* %3, i64 %2397
  %2399 = bitcast float* %2398 to <8 x float>*
  %2400 = load <8 x float>, <8 x float>* %2399, align 1, !tbaa !12
  %2401 = add nsw i64 %2381, 40
  %2402 = getelementptr inbounds float, float* %3, i64 %2401
  %2403 = bitcast float* %2402 to <8 x float>*
  %2404 = load <8 x float>, <8 x float>* %2403, align 1, !tbaa !12
  %2405 = add nsw i64 %2381, 48
  %2406 = getelementptr inbounds float, float* %3, i64 %2405
  %2407 = bitcast float* %2406 to <8 x float>*
  %2408 = load <8 x float>, <8 x float>* %2407, align 1, !tbaa !12
  %2409 = add nsw i64 %2381, 56
  %2410 = getelementptr inbounds float, float* %3, i64 %2409
  %2411 = bitcast float* %2410 to <8 x float>*
  %2412 = load <8 x float>, <8 x float>* %2411, align 1, !tbaa !12
  %2413 = add nsw i64 %2381, 64
  %2414 = getelementptr inbounds float, float* %3, i64 %2413
  %2415 = bitcast float* %2414 to <8 x float>*
  %2416 = load <8 x float>, <8 x float>* %2415, align 1, !tbaa !12
  %2417 = add nsw i64 %2381, 72
  %2418 = getelementptr inbounds float, float* %3, i64 %2417
  %2419 = bitcast float* %2418 to <8 x float>*
  %2420 = load <8 x float>, <8 x float>* %2419, align 1, !tbaa !12
  %2421 = add nsw i64 %2381, 80
  %2422 = getelementptr inbounds float, float* %3, i64 %2421
  %2423 = bitcast float* %2422 to <8 x float>*
  %2424 = load <8 x float>, <8 x float>* %2423, align 1, !tbaa !12
  %2425 = add nsw i64 %2381, 88
  %2426 = getelementptr inbounds float, float* %3, i64 %2425
  %2427 = bitcast float* %2426 to <8 x float>*
  %2428 = load <8 x float>, <8 x float>* %2427, align 1, !tbaa !12
  %2429 = add nsw i64 %2381, 96
  %2430 = getelementptr inbounds float, float* %3, i64 %2429
  %2431 = bitcast float* %2430 to <8 x float>*
  %2432 = load <8 x float>, <8 x float>* %2431, align 1, !tbaa !12
  %2433 = add nsw i64 %2381, 104
  %2434 = getelementptr inbounds float, float* %3, i64 %2433
  %2435 = bitcast float* %2434 to <8 x float>*
  %2436 = load <8 x float>, <8 x float>* %2435, align 1, !tbaa !12
  %2437 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2384, <8 x float> %80, <8 x float> %2328) #10
  %2438 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2388, <8 x float> %80, <8 x float> %2332) #10
  %2439 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2392, <8 x float> %80, <8 x float> %2336) #10
  %2440 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2396, <8 x float> %80, <8 x float> %2340) #10
  %2441 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2400, <8 x float> %80, <8 x float> %2344) #10
  %2442 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2404, <8 x float> %80, <8 x float> %2348) #10
  %2443 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2408, <8 x float> %80, <8 x float> %2352) #10
  %2444 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2412, <8 x float> %80, <8 x float> %2356) #10
  %2445 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2416, <8 x float> %80, <8 x float> %2360) #10
  %2446 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2420, <8 x float> %80, <8 x float> %2364) #10
  %2447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2424, <8 x float> %80, <8 x float> %2368) #10
  %2448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2428, <8 x float> %80, <8 x float> %2372) #10
  %2449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2432, <8 x float> %80, <8 x float> %2376) #10
  %2450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2436, <8 x float> %80, <8 x float> %2380) #10
  store <8 x float> %2437, <8 x float>* %2327, align 1, !tbaa !12
  store <8 x float> %2438, <8 x float>* %2331, align 1, !tbaa !12
  store <8 x float> %2439, <8 x float>* %2335, align 1, !tbaa !12
  store <8 x float> %2440, <8 x float>* %2339, align 1, !tbaa !12
  store <8 x float> %2441, <8 x float>* %2343, align 1, !tbaa !12
  store <8 x float> %2442, <8 x float>* %2347, align 1, !tbaa !12
  store <8 x float> %2443, <8 x float>* %2351, align 1, !tbaa !12
  store <8 x float> %2444, <8 x float>* %2355, align 1, !tbaa !12
  store <8 x float> %2445, <8 x float>* %2359, align 1, !tbaa !12
  store <8 x float> %2446, <8 x float>* %2363, align 1, !tbaa !12
  store <8 x float> %2447, <8 x float>* %2367, align 1, !tbaa !12
  store <8 x float> %2448, <8 x float>* %2371, align 1, !tbaa !12
  store <8 x float> %2449, <8 x float>* %2375, align 1, !tbaa !12
  store <8 x float> %2450, <8 x float>* %2379, align 1, !tbaa !12
  %2451 = add nuw nsw i64 %2268, 112
  %2452 = icmp ult i64 %2451, %2075
  br i1 %2452, label %2267, label %2262
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 348
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui14_uk12.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
