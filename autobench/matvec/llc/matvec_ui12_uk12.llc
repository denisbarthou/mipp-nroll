; ModuleID = 'codes/matvec_ui12_uk12.cpp'
source_filename = "codes/matvec_ui12_uk12.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui12_uk12.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 96
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 96
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1968, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1968
  %21 = phi i64 [ %1969, %1968 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = or i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = or i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %1968

83:                                               ; preds = %20
  %84 = zext i32 %81 to i64
  %85 = trunc i64 %21 to i32
  %86 = mul nsw i32 %81, %85
  br label %93

87:                                               ; preds = %93
  br i1 %82, label %88, label %432

88:                                               ; preds = %87
  %89 = trunc i64 %26 to i32
  %90 = mul nsw i32 %81, %89
  %91 = sext i32 %90 to i64
  %92 = zext i32 %81 to i64
  br label %272

93:                                               ; preds = %83, %93
  %94 = phi i64 [ 0, %83 ], [ %264, %93 ]
  %95 = getelementptr inbounds float, float* %5, i64 %94
  %96 = getelementptr inbounds float, float* %95, i64 8
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %3, i64 %94
  %99 = getelementptr inbounds float, float* %98, i64 8
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %95, i64 16
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %98, i64 16
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %95, i64 24
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %98, i64 24
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %95, i64 32
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %98, i64 32
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %95, i64 40
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %98, i64 40
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %95, i64 48
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %98, i64 48
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %95, i64 56
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %98, i64 56
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %95, i64 64
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %98, i64 64
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %95, i64 72
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %98, i64 72
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %95, i64 80
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %98, i64 80
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = getelementptr inbounds float, float* %95, i64 88
  %138 = bitcast float* %137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %138, i32 0, i32 1, i32 1)
  %139 = getelementptr inbounds float, float* %98, i64 88
  %140 = bitcast float* %139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %140, i32 0, i32 1, i32 1)
  %141 = getelementptr inbounds float, float* %95, i64 96
  %142 = bitcast float* %141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %142, i32 0, i32 1, i32 1)
  %143 = getelementptr inbounds float, float* %98, i64 96
  %144 = bitcast float* %143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %144, i32 0, i32 1, i32 1)
  %145 = bitcast float* %95 to <8 x float>*
  %146 = load <8 x float>, <8 x float>* %145, align 1, !tbaa !12
  %147 = or i64 %94, 8
  %148 = getelementptr inbounds float, float* %5, i64 %147
  %149 = bitcast float* %148 to <8 x float>*
  %150 = load <8 x float>, <8 x float>* %149, align 1, !tbaa !12
  %151 = or i64 %94, 16
  %152 = getelementptr inbounds float, float* %5, i64 %151
  %153 = bitcast float* %152 to <8 x float>*
  %154 = load <8 x float>, <8 x float>* %153, align 1, !tbaa !12
  %155 = or i64 %94, 24
  %156 = getelementptr inbounds float, float* %5, i64 %155
  %157 = bitcast float* %156 to <8 x float>*
  %158 = load <8 x float>, <8 x float>* %157, align 1, !tbaa !12
  %159 = add nuw nsw i64 %94, 32
  %160 = getelementptr inbounds float, float* %5, i64 %159
  %161 = bitcast float* %160 to <8 x float>*
  %162 = load <8 x float>, <8 x float>* %161, align 1, !tbaa !12
  %163 = add nuw nsw i64 %94, 40
  %164 = getelementptr inbounds float, float* %5, i64 %163
  %165 = bitcast float* %164 to <8 x float>*
  %166 = load <8 x float>, <8 x float>* %165, align 1, !tbaa !12
  %167 = add nuw nsw i64 %94, 48
  %168 = getelementptr inbounds float, float* %5, i64 %167
  %169 = bitcast float* %168 to <8 x float>*
  %170 = load <8 x float>, <8 x float>* %169, align 1, !tbaa !12
  %171 = add nuw nsw i64 %94, 56
  %172 = getelementptr inbounds float, float* %5, i64 %171
  %173 = bitcast float* %172 to <8 x float>*
  %174 = load <8 x float>, <8 x float>* %173, align 1, !tbaa !12
  %175 = add nuw nsw i64 %94, 64
  %176 = getelementptr inbounds float, float* %5, i64 %175
  %177 = bitcast float* %176 to <8 x float>*
  %178 = load <8 x float>, <8 x float>* %177, align 1, !tbaa !12
  %179 = add nuw nsw i64 %94, 72
  %180 = getelementptr inbounds float, float* %5, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = add nuw nsw i64 %94, 80
  %184 = getelementptr inbounds float, float* %5, i64 %183
  %185 = bitcast float* %184 to <8 x float>*
  %186 = load <8 x float>, <8 x float>* %185, align 1, !tbaa !12
  %187 = add nuw nsw i64 %94, 88
  %188 = getelementptr inbounds float, float* %5, i64 %187
  %189 = bitcast float* %188 to <8 x float>*
  %190 = load <8 x float>, <8 x float>* %189, align 1, !tbaa !12
  %191 = trunc i64 %94 to i32
  %192 = add nsw i32 %86, %191
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds float, float* %3, i64 %193
  %195 = bitcast float* %194 to <8 x float>*
  %196 = load <8 x float>, <8 x float>* %195, align 1, !tbaa !12
  %197 = add nsw i32 %192, 8
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds float, float* %3, i64 %198
  %200 = bitcast float* %199 to <8 x float>*
  %201 = load <8 x float>, <8 x float>* %200, align 1, !tbaa !12
  %202 = add nsw i32 %192, 16
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds float, float* %3, i64 %203
  %205 = bitcast float* %204 to <8 x float>*
  %206 = load <8 x float>, <8 x float>* %205, align 1, !tbaa !12
  %207 = add nsw i32 %192, 24
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds float, float* %3, i64 %208
  %210 = bitcast float* %209 to <8 x float>*
  %211 = load <8 x float>, <8 x float>* %210, align 1, !tbaa !12
  %212 = add nsw i32 %192, 32
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds float, float* %3, i64 %213
  %215 = bitcast float* %214 to <8 x float>*
  %216 = load <8 x float>, <8 x float>* %215, align 1, !tbaa !12
  %217 = add nsw i32 %192, 40
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds float, float* %3, i64 %218
  %220 = bitcast float* %219 to <8 x float>*
  %221 = load <8 x float>, <8 x float>* %220, align 1, !tbaa !12
  %222 = add nsw i32 %192, 48
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds float, float* %3, i64 %223
  %225 = bitcast float* %224 to <8 x float>*
  %226 = load <8 x float>, <8 x float>* %225, align 1, !tbaa !12
  %227 = add nsw i32 %192, 56
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds float, float* %3, i64 %228
  %230 = bitcast float* %229 to <8 x float>*
  %231 = load <8 x float>, <8 x float>* %230, align 1, !tbaa !12
  %232 = add nsw i32 %192, 64
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds float, float* %3, i64 %233
  %235 = bitcast float* %234 to <8 x float>*
  %236 = load <8 x float>, <8 x float>* %235, align 1, !tbaa !12
  %237 = add nsw i32 %192, 72
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds float, float* %3, i64 %238
  %240 = bitcast float* %239 to <8 x float>*
  %241 = load <8 x float>, <8 x float>* %240, align 1, !tbaa !12
  %242 = add nsw i32 %192, 80
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float, float* %3, i64 %243
  %245 = bitcast float* %244 to <8 x float>*
  %246 = load <8 x float>, <8 x float>* %245, align 1, !tbaa !12
  %247 = add nsw i32 %192, 88
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds float, float* %3, i64 %248
  %250 = bitcast float* %249 to <8 x float>*
  %251 = load <8 x float>, <8 x float>* %250, align 1, !tbaa !12
  %252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %196, <8 x float> %25, <8 x float> %146) #10
  %253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %201, <8 x float> %25, <8 x float> %150) #10
  %254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %206, <8 x float> %25, <8 x float> %154) #10
  %255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %211, <8 x float> %25, <8 x float> %158) #10
  %256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %216, <8 x float> %25, <8 x float> %162) #10
  %257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %221, <8 x float> %25, <8 x float> %166) #10
  %258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %226, <8 x float> %25, <8 x float> %170) #10
  %259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %231, <8 x float> %25, <8 x float> %174) #10
  %260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %236, <8 x float> %25, <8 x float> %178) #10
  %261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %241, <8 x float> %25, <8 x float> %182) #10
  %262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %246, <8 x float> %25, <8 x float> %186) #10
  %263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %251, <8 x float> %25, <8 x float> %190) #10
  store <8 x float> %252, <8 x float>* %145, align 1, !tbaa !12
  store <8 x float> %253, <8 x float>* %149, align 1, !tbaa !12
  store <8 x float> %254, <8 x float>* %153, align 1, !tbaa !12
  store <8 x float> %255, <8 x float>* %157, align 1, !tbaa !12
  store <8 x float> %256, <8 x float>* %161, align 1, !tbaa !12
  store <8 x float> %257, <8 x float>* %165, align 1, !tbaa !12
  store <8 x float> %258, <8 x float>* %169, align 1, !tbaa !12
  store <8 x float> %259, <8 x float>* %173, align 1, !tbaa !12
  store <8 x float> %260, <8 x float>* %177, align 1, !tbaa !12
  store <8 x float> %261, <8 x float>* %181, align 1, !tbaa !12
  store <8 x float> %262, <8 x float>* %185, align 1, !tbaa !12
  store <8 x float> %263, <8 x float>* %189, align 1, !tbaa !12
  %264 = add nuw nsw i64 %94, 96
  %265 = icmp ult i64 %264, %84
  br i1 %265, label %93, label %87

266:                                              ; preds = %272
  br i1 %82, label %267, label %432

267:                                              ; preds = %266
  %268 = trunc i64 %31 to i32
  %269 = mul nsw i32 %81, %268
  %270 = sext i32 %269 to i64
  %271 = zext i32 %81 to i64
  br label %439

272:                                              ; preds = %88, %272
  %273 = phi i64 [ 0, %88 ], [ %430, %272 ]
  %274 = getelementptr inbounds float, float* %5, i64 %273
  %275 = getelementptr inbounds float, float* %274, i64 8
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %276, i32 0, i32 1, i32 1)
  %277 = getelementptr inbounds float, float* %3, i64 %273
  %278 = getelementptr inbounds float, float* %277, i64 8
  %279 = bitcast float* %278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %279, i32 0, i32 1, i32 1)
  %280 = getelementptr inbounds float, float* %274, i64 16
  %281 = bitcast float* %280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %281, i32 0, i32 1, i32 1)
  %282 = getelementptr inbounds float, float* %277, i64 16
  %283 = bitcast float* %282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %283, i32 0, i32 1, i32 1)
  %284 = getelementptr inbounds float, float* %274, i64 24
  %285 = bitcast float* %284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %285, i32 0, i32 1, i32 1)
  %286 = getelementptr inbounds float, float* %277, i64 24
  %287 = bitcast float* %286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %287, i32 0, i32 1, i32 1)
  %288 = getelementptr inbounds float, float* %274, i64 32
  %289 = bitcast float* %288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %289, i32 0, i32 1, i32 1)
  %290 = getelementptr inbounds float, float* %277, i64 32
  %291 = bitcast float* %290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %291, i32 0, i32 1, i32 1)
  %292 = getelementptr inbounds float, float* %274, i64 40
  %293 = bitcast float* %292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %293, i32 0, i32 1, i32 1)
  %294 = getelementptr inbounds float, float* %277, i64 40
  %295 = bitcast float* %294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %295, i32 0, i32 1, i32 1)
  %296 = getelementptr inbounds float, float* %274, i64 48
  %297 = bitcast float* %296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %297, i32 0, i32 1, i32 1)
  %298 = getelementptr inbounds float, float* %277, i64 48
  %299 = bitcast float* %298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %299, i32 0, i32 1, i32 1)
  %300 = getelementptr inbounds float, float* %274, i64 56
  %301 = bitcast float* %300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %301, i32 0, i32 1, i32 1)
  %302 = getelementptr inbounds float, float* %277, i64 56
  %303 = bitcast float* %302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %303, i32 0, i32 1, i32 1)
  %304 = getelementptr inbounds float, float* %274, i64 64
  %305 = bitcast float* %304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %305, i32 0, i32 1, i32 1)
  %306 = getelementptr inbounds float, float* %277, i64 64
  %307 = bitcast float* %306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %307, i32 0, i32 1, i32 1)
  %308 = getelementptr inbounds float, float* %274, i64 72
  %309 = bitcast float* %308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %309, i32 0, i32 1, i32 1)
  %310 = getelementptr inbounds float, float* %277, i64 72
  %311 = bitcast float* %310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %311, i32 0, i32 1, i32 1)
  %312 = getelementptr inbounds float, float* %274, i64 80
  %313 = bitcast float* %312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %313, i32 0, i32 1, i32 1)
  %314 = getelementptr inbounds float, float* %277, i64 80
  %315 = bitcast float* %314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %315, i32 0, i32 1, i32 1)
  %316 = getelementptr inbounds float, float* %274, i64 88
  %317 = bitcast float* %316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %317, i32 0, i32 1, i32 1)
  %318 = getelementptr inbounds float, float* %277, i64 88
  %319 = bitcast float* %318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %319, i32 0, i32 1, i32 1)
  %320 = getelementptr inbounds float, float* %274, i64 96
  %321 = bitcast float* %320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %321, i32 0, i32 1, i32 1)
  %322 = getelementptr inbounds float, float* %277, i64 96
  %323 = bitcast float* %322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %323, i32 0, i32 1, i32 1)
  %324 = bitcast float* %274 to <8 x float>*
  %325 = load <8 x float>, <8 x float>* %324, align 1, !tbaa !12
  %326 = or i64 %273, 8
  %327 = getelementptr inbounds float, float* %5, i64 %326
  %328 = bitcast float* %327 to <8 x float>*
  %329 = load <8 x float>, <8 x float>* %328, align 1, !tbaa !12
  %330 = or i64 %273, 16
  %331 = getelementptr inbounds float, float* %5, i64 %330
  %332 = bitcast float* %331 to <8 x float>*
  %333 = load <8 x float>, <8 x float>* %332, align 1, !tbaa !12
  %334 = or i64 %273, 24
  %335 = getelementptr inbounds float, float* %5, i64 %334
  %336 = bitcast float* %335 to <8 x float>*
  %337 = load <8 x float>, <8 x float>* %336, align 1, !tbaa !12
  %338 = add nuw nsw i64 %273, 32
  %339 = getelementptr inbounds float, float* %5, i64 %338
  %340 = bitcast float* %339 to <8 x float>*
  %341 = load <8 x float>, <8 x float>* %340, align 1, !tbaa !12
  %342 = add nuw nsw i64 %273, 40
  %343 = getelementptr inbounds float, float* %5, i64 %342
  %344 = bitcast float* %343 to <8 x float>*
  %345 = load <8 x float>, <8 x float>* %344, align 1, !tbaa !12
  %346 = add nuw nsw i64 %273, 48
  %347 = getelementptr inbounds float, float* %5, i64 %346
  %348 = bitcast float* %347 to <8 x float>*
  %349 = load <8 x float>, <8 x float>* %348, align 1, !tbaa !12
  %350 = add nuw nsw i64 %273, 56
  %351 = getelementptr inbounds float, float* %5, i64 %350
  %352 = bitcast float* %351 to <8 x float>*
  %353 = load <8 x float>, <8 x float>* %352, align 1, !tbaa !12
  %354 = add nuw nsw i64 %273, 64
  %355 = getelementptr inbounds float, float* %5, i64 %354
  %356 = bitcast float* %355 to <8 x float>*
  %357 = load <8 x float>, <8 x float>* %356, align 1, !tbaa !12
  %358 = add nuw nsw i64 %273, 72
  %359 = getelementptr inbounds float, float* %5, i64 %358
  %360 = bitcast float* %359 to <8 x float>*
  %361 = load <8 x float>, <8 x float>* %360, align 1, !tbaa !12
  %362 = add nuw nsw i64 %273, 80
  %363 = getelementptr inbounds float, float* %5, i64 %362
  %364 = bitcast float* %363 to <8 x float>*
  %365 = load <8 x float>, <8 x float>* %364, align 1, !tbaa !12
  %366 = add nuw nsw i64 %273, 88
  %367 = getelementptr inbounds float, float* %5, i64 %366
  %368 = bitcast float* %367 to <8 x float>*
  %369 = load <8 x float>, <8 x float>* %368, align 1, !tbaa !12
  %370 = add nsw i64 %273, %91
  %371 = getelementptr inbounds float, float* %3, i64 %370
  %372 = bitcast float* %371 to <8 x float>*
  %373 = load <8 x float>, <8 x float>* %372, align 1, !tbaa !12
  %374 = add nsw i64 %370, 8
  %375 = getelementptr inbounds float, float* %3, i64 %374
  %376 = bitcast float* %375 to <8 x float>*
  %377 = load <8 x float>, <8 x float>* %376, align 1, !tbaa !12
  %378 = add nsw i64 %370, 16
  %379 = getelementptr inbounds float, float* %3, i64 %378
  %380 = bitcast float* %379 to <8 x float>*
  %381 = load <8 x float>, <8 x float>* %380, align 1, !tbaa !12
  %382 = add nsw i64 %370, 24
  %383 = getelementptr inbounds float, float* %3, i64 %382
  %384 = bitcast float* %383 to <8 x float>*
  %385 = load <8 x float>, <8 x float>* %384, align 1, !tbaa !12
  %386 = add nsw i64 %370, 32
  %387 = getelementptr inbounds float, float* %3, i64 %386
  %388 = bitcast float* %387 to <8 x float>*
  %389 = load <8 x float>, <8 x float>* %388, align 1, !tbaa !12
  %390 = add nsw i64 %370, 40
  %391 = getelementptr inbounds float, float* %3, i64 %390
  %392 = bitcast float* %391 to <8 x float>*
  %393 = load <8 x float>, <8 x float>* %392, align 1, !tbaa !12
  %394 = add nsw i64 %370, 48
  %395 = getelementptr inbounds float, float* %3, i64 %394
  %396 = bitcast float* %395 to <8 x float>*
  %397 = load <8 x float>, <8 x float>* %396, align 1, !tbaa !12
  %398 = add nsw i64 %370, 56
  %399 = getelementptr inbounds float, float* %3, i64 %398
  %400 = bitcast float* %399 to <8 x float>*
  %401 = load <8 x float>, <8 x float>* %400, align 1, !tbaa !12
  %402 = add nsw i64 %370, 64
  %403 = getelementptr inbounds float, float* %3, i64 %402
  %404 = bitcast float* %403 to <8 x float>*
  %405 = load <8 x float>, <8 x float>* %404, align 1, !tbaa !12
  %406 = add nsw i64 %370, 72
  %407 = getelementptr inbounds float, float* %3, i64 %406
  %408 = bitcast float* %407 to <8 x float>*
  %409 = load <8 x float>, <8 x float>* %408, align 1, !tbaa !12
  %410 = add nsw i64 %370, 80
  %411 = getelementptr inbounds float, float* %3, i64 %410
  %412 = bitcast float* %411 to <8 x float>*
  %413 = load <8 x float>, <8 x float>* %412, align 1, !tbaa !12
  %414 = add nsw i64 %370, 88
  %415 = getelementptr inbounds float, float* %3, i64 %414
  %416 = bitcast float* %415 to <8 x float>*
  %417 = load <8 x float>, <8 x float>* %416, align 1, !tbaa !12
  %418 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %373, <8 x float> %30, <8 x float> %325) #10
  %419 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %377, <8 x float> %30, <8 x float> %329) #10
  %420 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %381, <8 x float> %30, <8 x float> %333) #10
  %421 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %385, <8 x float> %30, <8 x float> %337) #10
  %422 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %389, <8 x float> %30, <8 x float> %341) #10
  %423 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %393, <8 x float> %30, <8 x float> %345) #10
  %424 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %397, <8 x float> %30, <8 x float> %349) #10
  %425 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %401, <8 x float> %30, <8 x float> %353) #10
  %426 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %405, <8 x float> %30, <8 x float> %357) #10
  %427 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %409, <8 x float> %30, <8 x float> %361) #10
  %428 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %413, <8 x float> %30, <8 x float> %365) #10
  %429 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %417, <8 x float> %30, <8 x float> %369) #10
  store <8 x float> %418, <8 x float>* %324, align 1, !tbaa !12
  store <8 x float> %419, <8 x float>* %328, align 1, !tbaa !12
  store <8 x float> %420, <8 x float>* %332, align 1, !tbaa !12
  store <8 x float> %421, <8 x float>* %336, align 1, !tbaa !12
  store <8 x float> %422, <8 x float>* %340, align 1, !tbaa !12
  store <8 x float> %423, <8 x float>* %344, align 1, !tbaa !12
  store <8 x float> %424, <8 x float>* %348, align 1, !tbaa !12
  store <8 x float> %425, <8 x float>* %352, align 1, !tbaa !12
  store <8 x float> %426, <8 x float>* %356, align 1, !tbaa !12
  store <8 x float> %427, <8 x float>* %360, align 1, !tbaa !12
  store <8 x float> %428, <8 x float>* %364, align 1, !tbaa !12
  store <8 x float> %429, <8 x float>* %368, align 1, !tbaa !12
  %430 = add nuw nsw i64 %273, 96
  %431 = icmp ult i64 %430, %92
  br i1 %431, label %272, label %266

432:                                              ; preds = %439, %87, %266
  %433 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %434 = icmp sgt i32 %433, 0
  br i1 %434, label %435, label %1968

435:                                              ; preds = %432
  %436 = zext i32 %433 to i64
  %437 = trunc i64 %36 to i32
  %438 = mul nsw i32 %433, %437
  br label %605

439:                                              ; preds = %267, %439
  %440 = phi i64 [ 0, %267 ], [ %597, %439 ]
  %441 = getelementptr inbounds float, float* %5, i64 %440
  %442 = getelementptr inbounds float, float* %441, i64 8
  %443 = bitcast float* %442 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %443, i32 0, i32 1, i32 1)
  %444 = getelementptr inbounds float, float* %3, i64 %440
  %445 = getelementptr inbounds float, float* %444, i64 8
  %446 = bitcast float* %445 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %446, i32 0, i32 1, i32 1)
  %447 = getelementptr inbounds float, float* %441, i64 16
  %448 = bitcast float* %447 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %448, i32 0, i32 1, i32 1)
  %449 = getelementptr inbounds float, float* %444, i64 16
  %450 = bitcast float* %449 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %450, i32 0, i32 1, i32 1)
  %451 = getelementptr inbounds float, float* %441, i64 24
  %452 = bitcast float* %451 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %452, i32 0, i32 1, i32 1)
  %453 = getelementptr inbounds float, float* %444, i64 24
  %454 = bitcast float* %453 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %454, i32 0, i32 1, i32 1)
  %455 = getelementptr inbounds float, float* %441, i64 32
  %456 = bitcast float* %455 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %456, i32 0, i32 1, i32 1)
  %457 = getelementptr inbounds float, float* %444, i64 32
  %458 = bitcast float* %457 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %458, i32 0, i32 1, i32 1)
  %459 = getelementptr inbounds float, float* %441, i64 40
  %460 = bitcast float* %459 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %460, i32 0, i32 1, i32 1)
  %461 = getelementptr inbounds float, float* %444, i64 40
  %462 = bitcast float* %461 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %462, i32 0, i32 1, i32 1)
  %463 = getelementptr inbounds float, float* %441, i64 48
  %464 = bitcast float* %463 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %464, i32 0, i32 1, i32 1)
  %465 = getelementptr inbounds float, float* %444, i64 48
  %466 = bitcast float* %465 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %466, i32 0, i32 1, i32 1)
  %467 = getelementptr inbounds float, float* %441, i64 56
  %468 = bitcast float* %467 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %468, i32 0, i32 1, i32 1)
  %469 = getelementptr inbounds float, float* %444, i64 56
  %470 = bitcast float* %469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %470, i32 0, i32 1, i32 1)
  %471 = getelementptr inbounds float, float* %441, i64 64
  %472 = bitcast float* %471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %472, i32 0, i32 1, i32 1)
  %473 = getelementptr inbounds float, float* %444, i64 64
  %474 = bitcast float* %473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %474, i32 0, i32 1, i32 1)
  %475 = getelementptr inbounds float, float* %441, i64 72
  %476 = bitcast float* %475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %476, i32 0, i32 1, i32 1)
  %477 = getelementptr inbounds float, float* %444, i64 72
  %478 = bitcast float* %477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %478, i32 0, i32 1, i32 1)
  %479 = getelementptr inbounds float, float* %441, i64 80
  %480 = bitcast float* %479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %480, i32 0, i32 1, i32 1)
  %481 = getelementptr inbounds float, float* %444, i64 80
  %482 = bitcast float* %481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %482, i32 0, i32 1, i32 1)
  %483 = getelementptr inbounds float, float* %441, i64 88
  %484 = bitcast float* %483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %484, i32 0, i32 1, i32 1)
  %485 = getelementptr inbounds float, float* %444, i64 88
  %486 = bitcast float* %485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %486, i32 0, i32 1, i32 1)
  %487 = getelementptr inbounds float, float* %441, i64 96
  %488 = bitcast float* %487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %488, i32 0, i32 1, i32 1)
  %489 = getelementptr inbounds float, float* %444, i64 96
  %490 = bitcast float* %489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %490, i32 0, i32 1, i32 1)
  %491 = bitcast float* %441 to <8 x float>*
  %492 = load <8 x float>, <8 x float>* %491, align 1, !tbaa !12
  %493 = or i64 %440, 8
  %494 = getelementptr inbounds float, float* %5, i64 %493
  %495 = bitcast float* %494 to <8 x float>*
  %496 = load <8 x float>, <8 x float>* %495, align 1, !tbaa !12
  %497 = or i64 %440, 16
  %498 = getelementptr inbounds float, float* %5, i64 %497
  %499 = bitcast float* %498 to <8 x float>*
  %500 = load <8 x float>, <8 x float>* %499, align 1, !tbaa !12
  %501 = or i64 %440, 24
  %502 = getelementptr inbounds float, float* %5, i64 %501
  %503 = bitcast float* %502 to <8 x float>*
  %504 = load <8 x float>, <8 x float>* %503, align 1, !tbaa !12
  %505 = add nuw nsw i64 %440, 32
  %506 = getelementptr inbounds float, float* %5, i64 %505
  %507 = bitcast float* %506 to <8 x float>*
  %508 = load <8 x float>, <8 x float>* %507, align 1, !tbaa !12
  %509 = add nuw nsw i64 %440, 40
  %510 = getelementptr inbounds float, float* %5, i64 %509
  %511 = bitcast float* %510 to <8 x float>*
  %512 = load <8 x float>, <8 x float>* %511, align 1, !tbaa !12
  %513 = add nuw nsw i64 %440, 48
  %514 = getelementptr inbounds float, float* %5, i64 %513
  %515 = bitcast float* %514 to <8 x float>*
  %516 = load <8 x float>, <8 x float>* %515, align 1, !tbaa !12
  %517 = add nuw nsw i64 %440, 56
  %518 = getelementptr inbounds float, float* %5, i64 %517
  %519 = bitcast float* %518 to <8 x float>*
  %520 = load <8 x float>, <8 x float>* %519, align 1, !tbaa !12
  %521 = add nuw nsw i64 %440, 64
  %522 = getelementptr inbounds float, float* %5, i64 %521
  %523 = bitcast float* %522 to <8 x float>*
  %524 = load <8 x float>, <8 x float>* %523, align 1, !tbaa !12
  %525 = add nuw nsw i64 %440, 72
  %526 = getelementptr inbounds float, float* %5, i64 %525
  %527 = bitcast float* %526 to <8 x float>*
  %528 = load <8 x float>, <8 x float>* %527, align 1, !tbaa !12
  %529 = add nuw nsw i64 %440, 80
  %530 = getelementptr inbounds float, float* %5, i64 %529
  %531 = bitcast float* %530 to <8 x float>*
  %532 = load <8 x float>, <8 x float>* %531, align 1, !tbaa !12
  %533 = add nuw nsw i64 %440, 88
  %534 = getelementptr inbounds float, float* %5, i64 %533
  %535 = bitcast float* %534 to <8 x float>*
  %536 = load <8 x float>, <8 x float>* %535, align 1, !tbaa !12
  %537 = add nsw i64 %440, %270
  %538 = getelementptr inbounds float, float* %3, i64 %537
  %539 = bitcast float* %538 to <8 x float>*
  %540 = load <8 x float>, <8 x float>* %539, align 1, !tbaa !12
  %541 = add nsw i64 %537, 8
  %542 = getelementptr inbounds float, float* %3, i64 %541
  %543 = bitcast float* %542 to <8 x float>*
  %544 = load <8 x float>, <8 x float>* %543, align 1, !tbaa !12
  %545 = add nsw i64 %537, 16
  %546 = getelementptr inbounds float, float* %3, i64 %545
  %547 = bitcast float* %546 to <8 x float>*
  %548 = load <8 x float>, <8 x float>* %547, align 1, !tbaa !12
  %549 = add nsw i64 %537, 24
  %550 = getelementptr inbounds float, float* %3, i64 %549
  %551 = bitcast float* %550 to <8 x float>*
  %552 = load <8 x float>, <8 x float>* %551, align 1, !tbaa !12
  %553 = add nsw i64 %537, 32
  %554 = getelementptr inbounds float, float* %3, i64 %553
  %555 = bitcast float* %554 to <8 x float>*
  %556 = load <8 x float>, <8 x float>* %555, align 1, !tbaa !12
  %557 = add nsw i64 %537, 40
  %558 = getelementptr inbounds float, float* %3, i64 %557
  %559 = bitcast float* %558 to <8 x float>*
  %560 = load <8 x float>, <8 x float>* %559, align 1, !tbaa !12
  %561 = add nsw i64 %537, 48
  %562 = getelementptr inbounds float, float* %3, i64 %561
  %563 = bitcast float* %562 to <8 x float>*
  %564 = load <8 x float>, <8 x float>* %563, align 1, !tbaa !12
  %565 = add nsw i64 %537, 56
  %566 = getelementptr inbounds float, float* %3, i64 %565
  %567 = bitcast float* %566 to <8 x float>*
  %568 = load <8 x float>, <8 x float>* %567, align 1, !tbaa !12
  %569 = add nsw i64 %537, 64
  %570 = getelementptr inbounds float, float* %3, i64 %569
  %571 = bitcast float* %570 to <8 x float>*
  %572 = load <8 x float>, <8 x float>* %571, align 1, !tbaa !12
  %573 = add nsw i64 %537, 72
  %574 = getelementptr inbounds float, float* %3, i64 %573
  %575 = bitcast float* %574 to <8 x float>*
  %576 = load <8 x float>, <8 x float>* %575, align 1, !tbaa !12
  %577 = add nsw i64 %537, 80
  %578 = getelementptr inbounds float, float* %3, i64 %577
  %579 = bitcast float* %578 to <8 x float>*
  %580 = load <8 x float>, <8 x float>* %579, align 1, !tbaa !12
  %581 = add nsw i64 %537, 88
  %582 = getelementptr inbounds float, float* %3, i64 %581
  %583 = bitcast float* %582 to <8 x float>*
  %584 = load <8 x float>, <8 x float>* %583, align 1, !tbaa !12
  %585 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %540, <8 x float> %35, <8 x float> %492) #10
  %586 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %544, <8 x float> %35, <8 x float> %496) #10
  %587 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %548, <8 x float> %35, <8 x float> %500) #10
  %588 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %552, <8 x float> %35, <8 x float> %504) #10
  %589 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %556, <8 x float> %35, <8 x float> %508) #10
  %590 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %560, <8 x float> %35, <8 x float> %512) #10
  %591 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %564, <8 x float> %35, <8 x float> %516) #10
  %592 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %568, <8 x float> %35, <8 x float> %520) #10
  %593 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %572, <8 x float> %35, <8 x float> %524) #10
  %594 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %576, <8 x float> %35, <8 x float> %528) #10
  %595 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %580, <8 x float> %35, <8 x float> %532) #10
  %596 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %584, <8 x float> %35, <8 x float> %536) #10
  store <8 x float> %585, <8 x float>* %491, align 1, !tbaa !12
  store <8 x float> %586, <8 x float>* %495, align 1, !tbaa !12
  store <8 x float> %587, <8 x float>* %499, align 1, !tbaa !12
  store <8 x float> %588, <8 x float>* %503, align 1, !tbaa !12
  store <8 x float> %589, <8 x float>* %507, align 1, !tbaa !12
  store <8 x float> %590, <8 x float>* %511, align 1, !tbaa !12
  store <8 x float> %591, <8 x float>* %515, align 1, !tbaa !12
  store <8 x float> %592, <8 x float>* %519, align 1, !tbaa !12
  store <8 x float> %593, <8 x float>* %523, align 1, !tbaa !12
  store <8 x float> %594, <8 x float>* %527, align 1, !tbaa !12
  store <8 x float> %595, <8 x float>* %531, align 1, !tbaa !12
  store <8 x float> %596, <8 x float>* %535, align 1, !tbaa !12
  %597 = add nuw nsw i64 %440, 96
  %598 = icmp ult i64 %597, %271
  br i1 %598, label %439, label %432

599:                                              ; preds = %605
  br i1 %434, label %600, label %944

600:                                              ; preds = %599
  %601 = trunc i64 %41 to i32
  %602 = mul nsw i32 %433, %601
  %603 = sext i32 %602 to i64
  %604 = zext i32 %433 to i64
  br label %784

605:                                              ; preds = %435, %605
  %606 = phi i64 [ 0, %435 ], [ %776, %605 ]
  %607 = getelementptr inbounds float, float* %5, i64 %606
  %608 = getelementptr inbounds float, float* %607, i64 8
  %609 = bitcast float* %608 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %609, i32 0, i32 1, i32 1)
  %610 = getelementptr inbounds float, float* %3, i64 %606
  %611 = getelementptr inbounds float, float* %610, i64 8
  %612 = bitcast float* %611 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %612, i32 0, i32 1, i32 1)
  %613 = getelementptr inbounds float, float* %607, i64 16
  %614 = bitcast float* %613 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %614, i32 0, i32 1, i32 1)
  %615 = getelementptr inbounds float, float* %610, i64 16
  %616 = bitcast float* %615 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %616, i32 0, i32 1, i32 1)
  %617 = getelementptr inbounds float, float* %607, i64 24
  %618 = bitcast float* %617 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %618, i32 0, i32 1, i32 1)
  %619 = getelementptr inbounds float, float* %610, i64 24
  %620 = bitcast float* %619 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %620, i32 0, i32 1, i32 1)
  %621 = getelementptr inbounds float, float* %607, i64 32
  %622 = bitcast float* %621 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %622, i32 0, i32 1, i32 1)
  %623 = getelementptr inbounds float, float* %610, i64 32
  %624 = bitcast float* %623 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %624, i32 0, i32 1, i32 1)
  %625 = getelementptr inbounds float, float* %607, i64 40
  %626 = bitcast float* %625 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %626, i32 0, i32 1, i32 1)
  %627 = getelementptr inbounds float, float* %610, i64 40
  %628 = bitcast float* %627 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %628, i32 0, i32 1, i32 1)
  %629 = getelementptr inbounds float, float* %607, i64 48
  %630 = bitcast float* %629 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %630, i32 0, i32 1, i32 1)
  %631 = getelementptr inbounds float, float* %610, i64 48
  %632 = bitcast float* %631 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %632, i32 0, i32 1, i32 1)
  %633 = getelementptr inbounds float, float* %607, i64 56
  %634 = bitcast float* %633 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %634, i32 0, i32 1, i32 1)
  %635 = getelementptr inbounds float, float* %610, i64 56
  %636 = bitcast float* %635 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %636, i32 0, i32 1, i32 1)
  %637 = getelementptr inbounds float, float* %607, i64 64
  %638 = bitcast float* %637 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %638, i32 0, i32 1, i32 1)
  %639 = getelementptr inbounds float, float* %610, i64 64
  %640 = bitcast float* %639 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %640, i32 0, i32 1, i32 1)
  %641 = getelementptr inbounds float, float* %607, i64 72
  %642 = bitcast float* %641 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %642, i32 0, i32 1, i32 1)
  %643 = getelementptr inbounds float, float* %610, i64 72
  %644 = bitcast float* %643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %644, i32 0, i32 1, i32 1)
  %645 = getelementptr inbounds float, float* %607, i64 80
  %646 = bitcast float* %645 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %646, i32 0, i32 1, i32 1)
  %647 = getelementptr inbounds float, float* %610, i64 80
  %648 = bitcast float* %647 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %648, i32 0, i32 1, i32 1)
  %649 = getelementptr inbounds float, float* %607, i64 88
  %650 = bitcast float* %649 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %650, i32 0, i32 1, i32 1)
  %651 = getelementptr inbounds float, float* %610, i64 88
  %652 = bitcast float* %651 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %652, i32 0, i32 1, i32 1)
  %653 = getelementptr inbounds float, float* %607, i64 96
  %654 = bitcast float* %653 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %654, i32 0, i32 1, i32 1)
  %655 = getelementptr inbounds float, float* %610, i64 96
  %656 = bitcast float* %655 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %656, i32 0, i32 1, i32 1)
  %657 = bitcast float* %607 to <8 x float>*
  %658 = load <8 x float>, <8 x float>* %657, align 1, !tbaa !12
  %659 = or i64 %606, 8
  %660 = getelementptr inbounds float, float* %5, i64 %659
  %661 = bitcast float* %660 to <8 x float>*
  %662 = load <8 x float>, <8 x float>* %661, align 1, !tbaa !12
  %663 = or i64 %606, 16
  %664 = getelementptr inbounds float, float* %5, i64 %663
  %665 = bitcast float* %664 to <8 x float>*
  %666 = load <8 x float>, <8 x float>* %665, align 1, !tbaa !12
  %667 = or i64 %606, 24
  %668 = getelementptr inbounds float, float* %5, i64 %667
  %669 = bitcast float* %668 to <8 x float>*
  %670 = load <8 x float>, <8 x float>* %669, align 1, !tbaa !12
  %671 = add nuw nsw i64 %606, 32
  %672 = getelementptr inbounds float, float* %5, i64 %671
  %673 = bitcast float* %672 to <8 x float>*
  %674 = load <8 x float>, <8 x float>* %673, align 1, !tbaa !12
  %675 = add nuw nsw i64 %606, 40
  %676 = getelementptr inbounds float, float* %5, i64 %675
  %677 = bitcast float* %676 to <8 x float>*
  %678 = load <8 x float>, <8 x float>* %677, align 1, !tbaa !12
  %679 = add nuw nsw i64 %606, 48
  %680 = getelementptr inbounds float, float* %5, i64 %679
  %681 = bitcast float* %680 to <8 x float>*
  %682 = load <8 x float>, <8 x float>* %681, align 1, !tbaa !12
  %683 = add nuw nsw i64 %606, 56
  %684 = getelementptr inbounds float, float* %5, i64 %683
  %685 = bitcast float* %684 to <8 x float>*
  %686 = load <8 x float>, <8 x float>* %685, align 1, !tbaa !12
  %687 = add nuw nsw i64 %606, 64
  %688 = getelementptr inbounds float, float* %5, i64 %687
  %689 = bitcast float* %688 to <8 x float>*
  %690 = load <8 x float>, <8 x float>* %689, align 1, !tbaa !12
  %691 = add nuw nsw i64 %606, 72
  %692 = getelementptr inbounds float, float* %5, i64 %691
  %693 = bitcast float* %692 to <8 x float>*
  %694 = load <8 x float>, <8 x float>* %693, align 1, !tbaa !12
  %695 = add nuw nsw i64 %606, 80
  %696 = getelementptr inbounds float, float* %5, i64 %695
  %697 = bitcast float* %696 to <8 x float>*
  %698 = load <8 x float>, <8 x float>* %697, align 1, !tbaa !12
  %699 = add nuw nsw i64 %606, 88
  %700 = getelementptr inbounds float, float* %5, i64 %699
  %701 = bitcast float* %700 to <8 x float>*
  %702 = load <8 x float>, <8 x float>* %701, align 1, !tbaa !12
  %703 = trunc i64 %606 to i32
  %704 = add nsw i32 %438, %703
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds float, float* %3, i64 %705
  %707 = bitcast float* %706 to <8 x float>*
  %708 = load <8 x float>, <8 x float>* %707, align 1, !tbaa !12
  %709 = add nsw i32 %704, 8
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds float, float* %3, i64 %710
  %712 = bitcast float* %711 to <8 x float>*
  %713 = load <8 x float>, <8 x float>* %712, align 1, !tbaa !12
  %714 = add nsw i32 %704, 16
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds float, float* %3, i64 %715
  %717 = bitcast float* %716 to <8 x float>*
  %718 = load <8 x float>, <8 x float>* %717, align 1, !tbaa !12
  %719 = add nsw i32 %704, 24
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds float, float* %3, i64 %720
  %722 = bitcast float* %721 to <8 x float>*
  %723 = load <8 x float>, <8 x float>* %722, align 1, !tbaa !12
  %724 = add nsw i32 %704, 32
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds float, float* %3, i64 %725
  %727 = bitcast float* %726 to <8 x float>*
  %728 = load <8 x float>, <8 x float>* %727, align 1, !tbaa !12
  %729 = add nsw i32 %704, 40
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds float, float* %3, i64 %730
  %732 = bitcast float* %731 to <8 x float>*
  %733 = load <8 x float>, <8 x float>* %732, align 1, !tbaa !12
  %734 = add nsw i32 %704, 48
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds float, float* %3, i64 %735
  %737 = bitcast float* %736 to <8 x float>*
  %738 = load <8 x float>, <8 x float>* %737, align 1, !tbaa !12
  %739 = add nsw i32 %704, 56
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds float, float* %3, i64 %740
  %742 = bitcast float* %741 to <8 x float>*
  %743 = load <8 x float>, <8 x float>* %742, align 1, !tbaa !12
  %744 = add nsw i32 %704, 64
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds float, float* %3, i64 %745
  %747 = bitcast float* %746 to <8 x float>*
  %748 = load <8 x float>, <8 x float>* %747, align 1, !tbaa !12
  %749 = add nsw i32 %704, 72
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds float, float* %3, i64 %750
  %752 = bitcast float* %751 to <8 x float>*
  %753 = load <8 x float>, <8 x float>* %752, align 1, !tbaa !12
  %754 = add nsw i32 %704, 80
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds float, float* %3, i64 %755
  %757 = bitcast float* %756 to <8 x float>*
  %758 = load <8 x float>, <8 x float>* %757, align 1, !tbaa !12
  %759 = add nsw i32 %704, 88
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds float, float* %3, i64 %760
  %762 = bitcast float* %761 to <8 x float>*
  %763 = load <8 x float>, <8 x float>* %762, align 1, !tbaa !12
  %764 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %708, <8 x float> %40, <8 x float> %658) #10
  %765 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %713, <8 x float> %40, <8 x float> %662) #10
  %766 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %718, <8 x float> %40, <8 x float> %666) #10
  %767 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %723, <8 x float> %40, <8 x float> %670) #10
  %768 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %728, <8 x float> %40, <8 x float> %674) #10
  %769 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %733, <8 x float> %40, <8 x float> %678) #10
  %770 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %738, <8 x float> %40, <8 x float> %682) #10
  %771 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %743, <8 x float> %40, <8 x float> %686) #10
  %772 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %748, <8 x float> %40, <8 x float> %690) #10
  %773 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %753, <8 x float> %40, <8 x float> %694) #10
  %774 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %758, <8 x float> %40, <8 x float> %698) #10
  %775 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %763, <8 x float> %40, <8 x float> %702) #10
  store <8 x float> %764, <8 x float>* %657, align 1, !tbaa !12
  store <8 x float> %765, <8 x float>* %661, align 1, !tbaa !12
  store <8 x float> %766, <8 x float>* %665, align 1, !tbaa !12
  store <8 x float> %767, <8 x float>* %669, align 1, !tbaa !12
  store <8 x float> %768, <8 x float>* %673, align 1, !tbaa !12
  store <8 x float> %769, <8 x float>* %677, align 1, !tbaa !12
  store <8 x float> %770, <8 x float>* %681, align 1, !tbaa !12
  store <8 x float> %771, <8 x float>* %685, align 1, !tbaa !12
  store <8 x float> %772, <8 x float>* %689, align 1, !tbaa !12
  store <8 x float> %773, <8 x float>* %693, align 1, !tbaa !12
  store <8 x float> %774, <8 x float>* %697, align 1, !tbaa !12
  store <8 x float> %775, <8 x float>* %701, align 1, !tbaa !12
  %776 = add nuw nsw i64 %606, 96
  %777 = icmp ult i64 %776, %436
  br i1 %777, label %605, label %599

778:                                              ; preds = %784
  br i1 %434, label %779, label %944

779:                                              ; preds = %778
  %780 = trunc i64 %46 to i32
  %781 = mul nsw i32 %433, %780
  %782 = sext i32 %781 to i64
  %783 = zext i32 %433 to i64
  br label %951

784:                                              ; preds = %600, %784
  %785 = phi i64 [ 0, %600 ], [ %942, %784 ]
  %786 = getelementptr inbounds float, float* %5, i64 %785
  %787 = getelementptr inbounds float, float* %786, i64 8
  %788 = bitcast float* %787 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %788, i32 0, i32 1, i32 1)
  %789 = getelementptr inbounds float, float* %3, i64 %785
  %790 = getelementptr inbounds float, float* %789, i64 8
  %791 = bitcast float* %790 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %791, i32 0, i32 1, i32 1)
  %792 = getelementptr inbounds float, float* %786, i64 16
  %793 = bitcast float* %792 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %793, i32 0, i32 1, i32 1)
  %794 = getelementptr inbounds float, float* %789, i64 16
  %795 = bitcast float* %794 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %795, i32 0, i32 1, i32 1)
  %796 = getelementptr inbounds float, float* %786, i64 24
  %797 = bitcast float* %796 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %797, i32 0, i32 1, i32 1)
  %798 = getelementptr inbounds float, float* %789, i64 24
  %799 = bitcast float* %798 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %799, i32 0, i32 1, i32 1)
  %800 = getelementptr inbounds float, float* %786, i64 32
  %801 = bitcast float* %800 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %801, i32 0, i32 1, i32 1)
  %802 = getelementptr inbounds float, float* %789, i64 32
  %803 = bitcast float* %802 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %803, i32 0, i32 1, i32 1)
  %804 = getelementptr inbounds float, float* %786, i64 40
  %805 = bitcast float* %804 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %805, i32 0, i32 1, i32 1)
  %806 = getelementptr inbounds float, float* %789, i64 40
  %807 = bitcast float* %806 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %807, i32 0, i32 1, i32 1)
  %808 = getelementptr inbounds float, float* %786, i64 48
  %809 = bitcast float* %808 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %809, i32 0, i32 1, i32 1)
  %810 = getelementptr inbounds float, float* %789, i64 48
  %811 = bitcast float* %810 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %811, i32 0, i32 1, i32 1)
  %812 = getelementptr inbounds float, float* %786, i64 56
  %813 = bitcast float* %812 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %813, i32 0, i32 1, i32 1)
  %814 = getelementptr inbounds float, float* %789, i64 56
  %815 = bitcast float* %814 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %815, i32 0, i32 1, i32 1)
  %816 = getelementptr inbounds float, float* %786, i64 64
  %817 = bitcast float* %816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %817, i32 0, i32 1, i32 1)
  %818 = getelementptr inbounds float, float* %789, i64 64
  %819 = bitcast float* %818 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %819, i32 0, i32 1, i32 1)
  %820 = getelementptr inbounds float, float* %786, i64 72
  %821 = bitcast float* %820 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %821, i32 0, i32 1, i32 1)
  %822 = getelementptr inbounds float, float* %789, i64 72
  %823 = bitcast float* %822 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %823, i32 0, i32 1, i32 1)
  %824 = getelementptr inbounds float, float* %786, i64 80
  %825 = bitcast float* %824 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %825, i32 0, i32 1, i32 1)
  %826 = getelementptr inbounds float, float* %789, i64 80
  %827 = bitcast float* %826 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %827, i32 0, i32 1, i32 1)
  %828 = getelementptr inbounds float, float* %786, i64 88
  %829 = bitcast float* %828 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %829, i32 0, i32 1, i32 1)
  %830 = getelementptr inbounds float, float* %789, i64 88
  %831 = bitcast float* %830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %831, i32 0, i32 1, i32 1)
  %832 = getelementptr inbounds float, float* %786, i64 96
  %833 = bitcast float* %832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %833, i32 0, i32 1, i32 1)
  %834 = getelementptr inbounds float, float* %789, i64 96
  %835 = bitcast float* %834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %835, i32 0, i32 1, i32 1)
  %836 = bitcast float* %786 to <8 x float>*
  %837 = load <8 x float>, <8 x float>* %836, align 1, !tbaa !12
  %838 = or i64 %785, 8
  %839 = getelementptr inbounds float, float* %5, i64 %838
  %840 = bitcast float* %839 to <8 x float>*
  %841 = load <8 x float>, <8 x float>* %840, align 1, !tbaa !12
  %842 = or i64 %785, 16
  %843 = getelementptr inbounds float, float* %5, i64 %842
  %844 = bitcast float* %843 to <8 x float>*
  %845 = load <8 x float>, <8 x float>* %844, align 1, !tbaa !12
  %846 = or i64 %785, 24
  %847 = getelementptr inbounds float, float* %5, i64 %846
  %848 = bitcast float* %847 to <8 x float>*
  %849 = load <8 x float>, <8 x float>* %848, align 1, !tbaa !12
  %850 = add nuw nsw i64 %785, 32
  %851 = getelementptr inbounds float, float* %5, i64 %850
  %852 = bitcast float* %851 to <8 x float>*
  %853 = load <8 x float>, <8 x float>* %852, align 1, !tbaa !12
  %854 = add nuw nsw i64 %785, 40
  %855 = getelementptr inbounds float, float* %5, i64 %854
  %856 = bitcast float* %855 to <8 x float>*
  %857 = load <8 x float>, <8 x float>* %856, align 1, !tbaa !12
  %858 = add nuw nsw i64 %785, 48
  %859 = getelementptr inbounds float, float* %5, i64 %858
  %860 = bitcast float* %859 to <8 x float>*
  %861 = load <8 x float>, <8 x float>* %860, align 1, !tbaa !12
  %862 = add nuw nsw i64 %785, 56
  %863 = getelementptr inbounds float, float* %5, i64 %862
  %864 = bitcast float* %863 to <8 x float>*
  %865 = load <8 x float>, <8 x float>* %864, align 1, !tbaa !12
  %866 = add nuw nsw i64 %785, 64
  %867 = getelementptr inbounds float, float* %5, i64 %866
  %868 = bitcast float* %867 to <8 x float>*
  %869 = load <8 x float>, <8 x float>* %868, align 1, !tbaa !12
  %870 = add nuw nsw i64 %785, 72
  %871 = getelementptr inbounds float, float* %5, i64 %870
  %872 = bitcast float* %871 to <8 x float>*
  %873 = load <8 x float>, <8 x float>* %872, align 1, !tbaa !12
  %874 = add nuw nsw i64 %785, 80
  %875 = getelementptr inbounds float, float* %5, i64 %874
  %876 = bitcast float* %875 to <8 x float>*
  %877 = load <8 x float>, <8 x float>* %876, align 1, !tbaa !12
  %878 = add nuw nsw i64 %785, 88
  %879 = getelementptr inbounds float, float* %5, i64 %878
  %880 = bitcast float* %879 to <8 x float>*
  %881 = load <8 x float>, <8 x float>* %880, align 1, !tbaa !12
  %882 = add nsw i64 %785, %603
  %883 = getelementptr inbounds float, float* %3, i64 %882
  %884 = bitcast float* %883 to <8 x float>*
  %885 = load <8 x float>, <8 x float>* %884, align 1, !tbaa !12
  %886 = add nsw i64 %882, 8
  %887 = getelementptr inbounds float, float* %3, i64 %886
  %888 = bitcast float* %887 to <8 x float>*
  %889 = load <8 x float>, <8 x float>* %888, align 1, !tbaa !12
  %890 = add nsw i64 %882, 16
  %891 = getelementptr inbounds float, float* %3, i64 %890
  %892 = bitcast float* %891 to <8 x float>*
  %893 = load <8 x float>, <8 x float>* %892, align 1, !tbaa !12
  %894 = add nsw i64 %882, 24
  %895 = getelementptr inbounds float, float* %3, i64 %894
  %896 = bitcast float* %895 to <8 x float>*
  %897 = load <8 x float>, <8 x float>* %896, align 1, !tbaa !12
  %898 = add nsw i64 %882, 32
  %899 = getelementptr inbounds float, float* %3, i64 %898
  %900 = bitcast float* %899 to <8 x float>*
  %901 = load <8 x float>, <8 x float>* %900, align 1, !tbaa !12
  %902 = add nsw i64 %882, 40
  %903 = getelementptr inbounds float, float* %3, i64 %902
  %904 = bitcast float* %903 to <8 x float>*
  %905 = load <8 x float>, <8 x float>* %904, align 1, !tbaa !12
  %906 = add nsw i64 %882, 48
  %907 = getelementptr inbounds float, float* %3, i64 %906
  %908 = bitcast float* %907 to <8 x float>*
  %909 = load <8 x float>, <8 x float>* %908, align 1, !tbaa !12
  %910 = add nsw i64 %882, 56
  %911 = getelementptr inbounds float, float* %3, i64 %910
  %912 = bitcast float* %911 to <8 x float>*
  %913 = load <8 x float>, <8 x float>* %912, align 1, !tbaa !12
  %914 = add nsw i64 %882, 64
  %915 = getelementptr inbounds float, float* %3, i64 %914
  %916 = bitcast float* %915 to <8 x float>*
  %917 = load <8 x float>, <8 x float>* %916, align 1, !tbaa !12
  %918 = add nsw i64 %882, 72
  %919 = getelementptr inbounds float, float* %3, i64 %918
  %920 = bitcast float* %919 to <8 x float>*
  %921 = load <8 x float>, <8 x float>* %920, align 1, !tbaa !12
  %922 = add nsw i64 %882, 80
  %923 = getelementptr inbounds float, float* %3, i64 %922
  %924 = bitcast float* %923 to <8 x float>*
  %925 = load <8 x float>, <8 x float>* %924, align 1, !tbaa !12
  %926 = add nsw i64 %882, 88
  %927 = getelementptr inbounds float, float* %3, i64 %926
  %928 = bitcast float* %927 to <8 x float>*
  %929 = load <8 x float>, <8 x float>* %928, align 1, !tbaa !12
  %930 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %885, <8 x float> %45, <8 x float> %837) #10
  %931 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %889, <8 x float> %45, <8 x float> %841) #10
  %932 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %893, <8 x float> %45, <8 x float> %845) #10
  %933 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %897, <8 x float> %45, <8 x float> %849) #10
  %934 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %901, <8 x float> %45, <8 x float> %853) #10
  %935 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %905, <8 x float> %45, <8 x float> %857) #10
  %936 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %909, <8 x float> %45, <8 x float> %861) #10
  %937 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %913, <8 x float> %45, <8 x float> %865) #10
  %938 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %917, <8 x float> %45, <8 x float> %869) #10
  %939 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %921, <8 x float> %45, <8 x float> %873) #10
  %940 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %925, <8 x float> %45, <8 x float> %877) #10
  %941 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %929, <8 x float> %45, <8 x float> %881) #10
  store <8 x float> %930, <8 x float>* %836, align 1, !tbaa !12
  store <8 x float> %931, <8 x float>* %840, align 1, !tbaa !12
  store <8 x float> %932, <8 x float>* %844, align 1, !tbaa !12
  store <8 x float> %933, <8 x float>* %848, align 1, !tbaa !12
  store <8 x float> %934, <8 x float>* %852, align 1, !tbaa !12
  store <8 x float> %935, <8 x float>* %856, align 1, !tbaa !12
  store <8 x float> %936, <8 x float>* %860, align 1, !tbaa !12
  store <8 x float> %937, <8 x float>* %864, align 1, !tbaa !12
  store <8 x float> %938, <8 x float>* %868, align 1, !tbaa !12
  store <8 x float> %939, <8 x float>* %872, align 1, !tbaa !12
  store <8 x float> %940, <8 x float>* %876, align 1, !tbaa !12
  store <8 x float> %941, <8 x float>* %880, align 1, !tbaa !12
  %942 = add nuw nsw i64 %785, 96
  %943 = icmp ult i64 %942, %604
  br i1 %943, label %784, label %778

944:                                              ; preds = %951, %599, %778
  %945 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %946 = icmp sgt i32 %945, 0
  br i1 %946, label %947, label %1968

947:                                              ; preds = %944
  %948 = zext i32 %945 to i64
  %949 = trunc i64 %51 to i32
  %950 = mul nsw i32 %945, %949
  br label %1117

951:                                              ; preds = %779, %951
  %952 = phi i64 [ 0, %779 ], [ %1109, %951 ]
  %953 = getelementptr inbounds float, float* %5, i64 %952
  %954 = getelementptr inbounds float, float* %953, i64 8
  %955 = bitcast float* %954 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %955, i32 0, i32 1, i32 1)
  %956 = getelementptr inbounds float, float* %3, i64 %952
  %957 = getelementptr inbounds float, float* %956, i64 8
  %958 = bitcast float* %957 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %958, i32 0, i32 1, i32 1)
  %959 = getelementptr inbounds float, float* %953, i64 16
  %960 = bitcast float* %959 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %960, i32 0, i32 1, i32 1)
  %961 = getelementptr inbounds float, float* %956, i64 16
  %962 = bitcast float* %961 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %962, i32 0, i32 1, i32 1)
  %963 = getelementptr inbounds float, float* %953, i64 24
  %964 = bitcast float* %963 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %964, i32 0, i32 1, i32 1)
  %965 = getelementptr inbounds float, float* %956, i64 24
  %966 = bitcast float* %965 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %966, i32 0, i32 1, i32 1)
  %967 = getelementptr inbounds float, float* %953, i64 32
  %968 = bitcast float* %967 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %968, i32 0, i32 1, i32 1)
  %969 = getelementptr inbounds float, float* %956, i64 32
  %970 = bitcast float* %969 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %970, i32 0, i32 1, i32 1)
  %971 = getelementptr inbounds float, float* %953, i64 40
  %972 = bitcast float* %971 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %972, i32 0, i32 1, i32 1)
  %973 = getelementptr inbounds float, float* %956, i64 40
  %974 = bitcast float* %973 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %974, i32 0, i32 1, i32 1)
  %975 = getelementptr inbounds float, float* %953, i64 48
  %976 = bitcast float* %975 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %976, i32 0, i32 1, i32 1)
  %977 = getelementptr inbounds float, float* %956, i64 48
  %978 = bitcast float* %977 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %978, i32 0, i32 1, i32 1)
  %979 = getelementptr inbounds float, float* %953, i64 56
  %980 = bitcast float* %979 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %980, i32 0, i32 1, i32 1)
  %981 = getelementptr inbounds float, float* %956, i64 56
  %982 = bitcast float* %981 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %982, i32 0, i32 1, i32 1)
  %983 = getelementptr inbounds float, float* %953, i64 64
  %984 = bitcast float* %983 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %984, i32 0, i32 1, i32 1)
  %985 = getelementptr inbounds float, float* %956, i64 64
  %986 = bitcast float* %985 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %986, i32 0, i32 1, i32 1)
  %987 = getelementptr inbounds float, float* %953, i64 72
  %988 = bitcast float* %987 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %988, i32 0, i32 1, i32 1)
  %989 = getelementptr inbounds float, float* %956, i64 72
  %990 = bitcast float* %989 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %990, i32 0, i32 1, i32 1)
  %991 = getelementptr inbounds float, float* %953, i64 80
  %992 = bitcast float* %991 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %992, i32 0, i32 1, i32 1)
  %993 = getelementptr inbounds float, float* %956, i64 80
  %994 = bitcast float* %993 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %994, i32 0, i32 1, i32 1)
  %995 = getelementptr inbounds float, float* %953, i64 88
  %996 = bitcast float* %995 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %996, i32 0, i32 1, i32 1)
  %997 = getelementptr inbounds float, float* %956, i64 88
  %998 = bitcast float* %997 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %998, i32 0, i32 1, i32 1)
  %999 = getelementptr inbounds float, float* %953, i64 96
  %1000 = bitcast float* %999 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1000, i32 0, i32 1, i32 1)
  %1001 = getelementptr inbounds float, float* %956, i64 96
  %1002 = bitcast float* %1001 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1002, i32 0, i32 1, i32 1)
  %1003 = bitcast float* %953 to <8 x float>*
  %1004 = load <8 x float>, <8 x float>* %1003, align 1, !tbaa !12
  %1005 = or i64 %952, 8
  %1006 = getelementptr inbounds float, float* %5, i64 %1005
  %1007 = bitcast float* %1006 to <8 x float>*
  %1008 = load <8 x float>, <8 x float>* %1007, align 1, !tbaa !12
  %1009 = or i64 %952, 16
  %1010 = getelementptr inbounds float, float* %5, i64 %1009
  %1011 = bitcast float* %1010 to <8 x float>*
  %1012 = load <8 x float>, <8 x float>* %1011, align 1, !tbaa !12
  %1013 = or i64 %952, 24
  %1014 = getelementptr inbounds float, float* %5, i64 %1013
  %1015 = bitcast float* %1014 to <8 x float>*
  %1016 = load <8 x float>, <8 x float>* %1015, align 1, !tbaa !12
  %1017 = add nuw nsw i64 %952, 32
  %1018 = getelementptr inbounds float, float* %5, i64 %1017
  %1019 = bitcast float* %1018 to <8 x float>*
  %1020 = load <8 x float>, <8 x float>* %1019, align 1, !tbaa !12
  %1021 = add nuw nsw i64 %952, 40
  %1022 = getelementptr inbounds float, float* %5, i64 %1021
  %1023 = bitcast float* %1022 to <8 x float>*
  %1024 = load <8 x float>, <8 x float>* %1023, align 1, !tbaa !12
  %1025 = add nuw nsw i64 %952, 48
  %1026 = getelementptr inbounds float, float* %5, i64 %1025
  %1027 = bitcast float* %1026 to <8 x float>*
  %1028 = load <8 x float>, <8 x float>* %1027, align 1, !tbaa !12
  %1029 = add nuw nsw i64 %952, 56
  %1030 = getelementptr inbounds float, float* %5, i64 %1029
  %1031 = bitcast float* %1030 to <8 x float>*
  %1032 = load <8 x float>, <8 x float>* %1031, align 1, !tbaa !12
  %1033 = add nuw nsw i64 %952, 64
  %1034 = getelementptr inbounds float, float* %5, i64 %1033
  %1035 = bitcast float* %1034 to <8 x float>*
  %1036 = load <8 x float>, <8 x float>* %1035, align 1, !tbaa !12
  %1037 = add nuw nsw i64 %952, 72
  %1038 = getelementptr inbounds float, float* %5, i64 %1037
  %1039 = bitcast float* %1038 to <8 x float>*
  %1040 = load <8 x float>, <8 x float>* %1039, align 1, !tbaa !12
  %1041 = add nuw nsw i64 %952, 80
  %1042 = getelementptr inbounds float, float* %5, i64 %1041
  %1043 = bitcast float* %1042 to <8 x float>*
  %1044 = load <8 x float>, <8 x float>* %1043, align 1, !tbaa !12
  %1045 = add nuw nsw i64 %952, 88
  %1046 = getelementptr inbounds float, float* %5, i64 %1045
  %1047 = bitcast float* %1046 to <8 x float>*
  %1048 = load <8 x float>, <8 x float>* %1047, align 1, !tbaa !12
  %1049 = add nsw i64 %952, %782
  %1050 = getelementptr inbounds float, float* %3, i64 %1049
  %1051 = bitcast float* %1050 to <8 x float>*
  %1052 = load <8 x float>, <8 x float>* %1051, align 1, !tbaa !12
  %1053 = add nsw i64 %1049, 8
  %1054 = getelementptr inbounds float, float* %3, i64 %1053
  %1055 = bitcast float* %1054 to <8 x float>*
  %1056 = load <8 x float>, <8 x float>* %1055, align 1, !tbaa !12
  %1057 = add nsw i64 %1049, 16
  %1058 = getelementptr inbounds float, float* %3, i64 %1057
  %1059 = bitcast float* %1058 to <8 x float>*
  %1060 = load <8 x float>, <8 x float>* %1059, align 1, !tbaa !12
  %1061 = add nsw i64 %1049, 24
  %1062 = getelementptr inbounds float, float* %3, i64 %1061
  %1063 = bitcast float* %1062 to <8 x float>*
  %1064 = load <8 x float>, <8 x float>* %1063, align 1, !tbaa !12
  %1065 = add nsw i64 %1049, 32
  %1066 = getelementptr inbounds float, float* %3, i64 %1065
  %1067 = bitcast float* %1066 to <8 x float>*
  %1068 = load <8 x float>, <8 x float>* %1067, align 1, !tbaa !12
  %1069 = add nsw i64 %1049, 40
  %1070 = getelementptr inbounds float, float* %3, i64 %1069
  %1071 = bitcast float* %1070 to <8 x float>*
  %1072 = load <8 x float>, <8 x float>* %1071, align 1, !tbaa !12
  %1073 = add nsw i64 %1049, 48
  %1074 = getelementptr inbounds float, float* %3, i64 %1073
  %1075 = bitcast float* %1074 to <8 x float>*
  %1076 = load <8 x float>, <8 x float>* %1075, align 1, !tbaa !12
  %1077 = add nsw i64 %1049, 56
  %1078 = getelementptr inbounds float, float* %3, i64 %1077
  %1079 = bitcast float* %1078 to <8 x float>*
  %1080 = load <8 x float>, <8 x float>* %1079, align 1, !tbaa !12
  %1081 = add nsw i64 %1049, 64
  %1082 = getelementptr inbounds float, float* %3, i64 %1081
  %1083 = bitcast float* %1082 to <8 x float>*
  %1084 = load <8 x float>, <8 x float>* %1083, align 1, !tbaa !12
  %1085 = add nsw i64 %1049, 72
  %1086 = getelementptr inbounds float, float* %3, i64 %1085
  %1087 = bitcast float* %1086 to <8 x float>*
  %1088 = load <8 x float>, <8 x float>* %1087, align 1, !tbaa !12
  %1089 = add nsw i64 %1049, 80
  %1090 = getelementptr inbounds float, float* %3, i64 %1089
  %1091 = bitcast float* %1090 to <8 x float>*
  %1092 = load <8 x float>, <8 x float>* %1091, align 1, !tbaa !12
  %1093 = add nsw i64 %1049, 88
  %1094 = getelementptr inbounds float, float* %3, i64 %1093
  %1095 = bitcast float* %1094 to <8 x float>*
  %1096 = load <8 x float>, <8 x float>* %1095, align 1, !tbaa !12
  %1097 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1052, <8 x float> %50, <8 x float> %1004) #10
  %1098 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1056, <8 x float> %50, <8 x float> %1008) #10
  %1099 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1060, <8 x float> %50, <8 x float> %1012) #10
  %1100 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1064, <8 x float> %50, <8 x float> %1016) #10
  %1101 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1068, <8 x float> %50, <8 x float> %1020) #10
  %1102 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1072, <8 x float> %50, <8 x float> %1024) #10
  %1103 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1076, <8 x float> %50, <8 x float> %1028) #10
  %1104 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1080, <8 x float> %50, <8 x float> %1032) #10
  %1105 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1084, <8 x float> %50, <8 x float> %1036) #10
  %1106 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1088, <8 x float> %50, <8 x float> %1040) #10
  %1107 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1092, <8 x float> %50, <8 x float> %1044) #10
  %1108 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1096, <8 x float> %50, <8 x float> %1048) #10
  store <8 x float> %1097, <8 x float>* %1003, align 1, !tbaa !12
  store <8 x float> %1098, <8 x float>* %1007, align 1, !tbaa !12
  store <8 x float> %1099, <8 x float>* %1011, align 1, !tbaa !12
  store <8 x float> %1100, <8 x float>* %1015, align 1, !tbaa !12
  store <8 x float> %1101, <8 x float>* %1019, align 1, !tbaa !12
  store <8 x float> %1102, <8 x float>* %1023, align 1, !tbaa !12
  store <8 x float> %1103, <8 x float>* %1027, align 1, !tbaa !12
  store <8 x float> %1104, <8 x float>* %1031, align 1, !tbaa !12
  store <8 x float> %1105, <8 x float>* %1035, align 1, !tbaa !12
  store <8 x float> %1106, <8 x float>* %1039, align 1, !tbaa !12
  store <8 x float> %1107, <8 x float>* %1043, align 1, !tbaa !12
  store <8 x float> %1108, <8 x float>* %1047, align 1, !tbaa !12
  %1109 = add nuw nsw i64 %952, 96
  %1110 = icmp ult i64 %1109, %783
  br i1 %1110, label %951, label %944

1111:                                             ; preds = %1117
  br i1 %946, label %1112, label %1456

1112:                                             ; preds = %1111
  %1113 = trunc i64 %56 to i32
  %1114 = mul nsw i32 %945, %1113
  %1115 = sext i32 %1114 to i64
  %1116 = zext i32 %945 to i64
  br label %1296

1117:                                             ; preds = %947, %1117
  %1118 = phi i64 [ 0, %947 ], [ %1288, %1117 ]
  %1119 = getelementptr inbounds float, float* %5, i64 %1118
  %1120 = getelementptr inbounds float, float* %1119, i64 8
  %1121 = bitcast float* %1120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1121, i32 0, i32 1, i32 1)
  %1122 = getelementptr inbounds float, float* %3, i64 %1118
  %1123 = getelementptr inbounds float, float* %1122, i64 8
  %1124 = bitcast float* %1123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1124, i32 0, i32 1, i32 1)
  %1125 = getelementptr inbounds float, float* %1119, i64 16
  %1126 = bitcast float* %1125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1126, i32 0, i32 1, i32 1)
  %1127 = getelementptr inbounds float, float* %1122, i64 16
  %1128 = bitcast float* %1127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1128, i32 0, i32 1, i32 1)
  %1129 = getelementptr inbounds float, float* %1119, i64 24
  %1130 = bitcast float* %1129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1130, i32 0, i32 1, i32 1)
  %1131 = getelementptr inbounds float, float* %1122, i64 24
  %1132 = bitcast float* %1131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1132, i32 0, i32 1, i32 1)
  %1133 = getelementptr inbounds float, float* %1119, i64 32
  %1134 = bitcast float* %1133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1134, i32 0, i32 1, i32 1)
  %1135 = getelementptr inbounds float, float* %1122, i64 32
  %1136 = bitcast float* %1135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1136, i32 0, i32 1, i32 1)
  %1137 = getelementptr inbounds float, float* %1119, i64 40
  %1138 = bitcast float* %1137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1138, i32 0, i32 1, i32 1)
  %1139 = getelementptr inbounds float, float* %1122, i64 40
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = getelementptr inbounds float, float* %1119, i64 48
  %1142 = bitcast float* %1141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1142, i32 0, i32 1, i32 1)
  %1143 = getelementptr inbounds float, float* %1122, i64 48
  %1144 = bitcast float* %1143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1144, i32 0, i32 1, i32 1)
  %1145 = getelementptr inbounds float, float* %1119, i64 56
  %1146 = bitcast float* %1145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1146, i32 0, i32 1, i32 1)
  %1147 = getelementptr inbounds float, float* %1122, i64 56
  %1148 = bitcast float* %1147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1148, i32 0, i32 1, i32 1)
  %1149 = getelementptr inbounds float, float* %1119, i64 64
  %1150 = bitcast float* %1149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1150, i32 0, i32 1, i32 1)
  %1151 = getelementptr inbounds float, float* %1122, i64 64
  %1152 = bitcast float* %1151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1152, i32 0, i32 1, i32 1)
  %1153 = getelementptr inbounds float, float* %1119, i64 72
  %1154 = bitcast float* %1153 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1154, i32 0, i32 1, i32 1)
  %1155 = getelementptr inbounds float, float* %1122, i64 72
  %1156 = bitcast float* %1155 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1156, i32 0, i32 1, i32 1)
  %1157 = getelementptr inbounds float, float* %1119, i64 80
  %1158 = bitcast float* %1157 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1158, i32 0, i32 1, i32 1)
  %1159 = getelementptr inbounds float, float* %1122, i64 80
  %1160 = bitcast float* %1159 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1160, i32 0, i32 1, i32 1)
  %1161 = getelementptr inbounds float, float* %1119, i64 88
  %1162 = bitcast float* %1161 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1162, i32 0, i32 1, i32 1)
  %1163 = getelementptr inbounds float, float* %1122, i64 88
  %1164 = bitcast float* %1163 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1164, i32 0, i32 1, i32 1)
  %1165 = getelementptr inbounds float, float* %1119, i64 96
  %1166 = bitcast float* %1165 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1166, i32 0, i32 1, i32 1)
  %1167 = getelementptr inbounds float, float* %1122, i64 96
  %1168 = bitcast float* %1167 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1168, i32 0, i32 1, i32 1)
  %1169 = bitcast float* %1119 to <8 x float>*
  %1170 = load <8 x float>, <8 x float>* %1169, align 1, !tbaa !12
  %1171 = or i64 %1118, 8
  %1172 = getelementptr inbounds float, float* %5, i64 %1171
  %1173 = bitcast float* %1172 to <8 x float>*
  %1174 = load <8 x float>, <8 x float>* %1173, align 1, !tbaa !12
  %1175 = or i64 %1118, 16
  %1176 = getelementptr inbounds float, float* %5, i64 %1175
  %1177 = bitcast float* %1176 to <8 x float>*
  %1178 = load <8 x float>, <8 x float>* %1177, align 1, !tbaa !12
  %1179 = or i64 %1118, 24
  %1180 = getelementptr inbounds float, float* %5, i64 %1179
  %1181 = bitcast float* %1180 to <8 x float>*
  %1182 = load <8 x float>, <8 x float>* %1181, align 1, !tbaa !12
  %1183 = add nuw nsw i64 %1118, 32
  %1184 = getelementptr inbounds float, float* %5, i64 %1183
  %1185 = bitcast float* %1184 to <8 x float>*
  %1186 = load <8 x float>, <8 x float>* %1185, align 1, !tbaa !12
  %1187 = add nuw nsw i64 %1118, 40
  %1188 = getelementptr inbounds float, float* %5, i64 %1187
  %1189 = bitcast float* %1188 to <8 x float>*
  %1190 = load <8 x float>, <8 x float>* %1189, align 1, !tbaa !12
  %1191 = add nuw nsw i64 %1118, 48
  %1192 = getelementptr inbounds float, float* %5, i64 %1191
  %1193 = bitcast float* %1192 to <8 x float>*
  %1194 = load <8 x float>, <8 x float>* %1193, align 1, !tbaa !12
  %1195 = add nuw nsw i64 %1118, 56
  %1196 = getelementptr inbounds float, float* %5, i64 %1195
  %1197 = bitcast float* %1196 to <8 x float>*
  %1198 = load <8 x float>, <8 x float>* %1197, align 1, !tbaa !12
  %1199 = add nuw nsw i64 %1118, 64
  %1200 = getelementptr inbounds float, float* %5, i64 %1199
  %1201 = bitcast float* %1200 to <8 x float>*
  %1202 = load <8 x float>, <8 x float>* %1201, align 1, !tbaa !12
  %1203 = add nuw nsw i64 %1118, 72
  %1204 = getelementptr inbounds float, float* %5, i64 %1203
  %1205 = bitcast float* %1204 to <8 x float>*
  %1206 = load <8 x float>, <8 x float>* %1205, align 1, !tbaa !12
  %1207 = add nuw nsw i64 %1118, 80
  %1208 = getelementptr inbounds float, float* %5, i64 %1207
  %1209 = bitcast float* %1208 to <8 x float>*
  %1210 = load <8 x float>, <8 x float>* %1209, align 1, !tbaa !12
  %1211 = add nuw nsw i64 %1118, 88
  %1212 = getelementptr inbounds float, float* %5, i64 %1211
  %1213 = bitcast float* %1212 to <8 x float>*
  %1214 = load <8 x float>, <8 x float>* %1213, align 1, !tbaa !12
  %1215 = trunc i64 %1118 to i32
  %1216 = add nsw i32 %950, %1215
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i32 %1216, 8
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i32 %1216, 16
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i32 %1216, 24
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i32 %1216, 32
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i32 %1216, 40
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nsw i32 %1216, 48
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds float, float* %3, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = add nsw i32 %1216, 56
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds float, float* %3, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = add nsw i32 %1216, 64
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds float, float* %3, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nsw i32 %1216, 72
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds float, float* %3, i64 %1262
  %1264 = bitcast float* %1263 to <8 x float>*
  %1265 = load <8 x float>, <8 x float>* %1264, align 1, !tbaa !12
  %1266 = add nsw i32 %1216, 80
  %1267 = sext i32 %1266 to i64
  %1268 = getelementptr inbounds float, float* %3, i64 %1267
  %1269 = bitcast float* %1268 to <8 x float>*
  %1270 = load <8 x float>, <8 x float>* %1269, align 1, !tbaa !12
  %1271 = add nsw i32 %1216, 88
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds float, float* %3, i64 %1272
  %1274 = bitcast float* %1273 to <8 x float>*
  %1275 = load <8 x float>, <8 x float>* %1274, align 1, !tbaa !12
  %1276 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %55, <8 x float> %1170) #10
  %1277 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %55, <8 x float> %1174) #10
  %1278 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %55, <8 x float> %1178) #10
  %1279 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %55, <8 x float> %1182) #10
  %1280 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %55, <8 x float> %1186) #10
  %1281 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %55, <8 x float> %1190) #10
  %1282 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1250, <8 x float> %55, <8 x float> %1194) #10
  %1283 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1255, <8 x float> %55, <8 x float> %1198) #10
  %1284 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1260, <8 x float> %55, <8 x float> %1202) #10
  %1285 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1265, <8 x float> %55, <8 x float> %1206) #10
  %1286 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1270, <8 x float> %55, <8 x float> %1210) #10
  %1287 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1275, <8 x float> %55, <8 x float> %1214) #10
  store <8 x float> %1276, <8 x float>* %1169, align 1, !tbaa !12
  store <8 x float> %1277, <8 x float>* %1173, align 1, !tbaa !12
  store <8 x float> %1278, <8 x float>* %1177, align 1, !tbaa !12
  store <8 x float> %1279, <8 x float>* %1181, align 1, !tbaa !12
  store <8 x float> %1280, <8 x float>* %1185, align 1, !tbaa !12
  store <8 x float> %1281, <8 x float>* %1189, align 1, !tbaa !12
  store <8 x float> %1282, <8 x float>* %1193, align 1, !tbaa !12
  store <8 x float> %1283, <8 x float>* %1197, align 1, !tbaa !12
  store <8 x float> %1284, <8 x float>* %1201, align 1, !tbaa !12
  store <8 x float> %1285, <8 x float>* %1205, align 1, !tbaa !12
  store <8 x float> %1286, <8 x float>* %1209, align 1, !tbaa !12
  store <8 x float> %1287, <8 x float>* %1213, align 1, !tbaa !12
  %1288 = add nuw nsw i64 %1118, 96
  %1289 = icmp ult i64 %1288, %948
  br i1 %1289, label %1117, label %1111

1290:                                             ; preds = %1296
  br i1 %946, label %1291, label %1456

1291:                                             ; preds = %1290
  %1292 = trunc i64 %61 to i32
  %1293 = mul nsw i32 %945, %1292
  %1294 = sext i32 %1293 to i64
  %1295 = zext i32 %945 to i64
  br label %1463

1296:                                             ; preds = %1112, %1296
  %1297 = phi i64 [ 0, %1112 ], [ %1454, %1296 ]
  %1298 = getelementptr inbounds float, float* %5, i64 %1297
  %1299 = getelementptr inbounds float, float* %1298, i64 8
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %3, i64 %1297
  %1302 = getelementptr inbounds float, float* %1301, i64 8
  %1303 = bitcast float* %1302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1303, i32 0, i32 1, i32 1)
  %1304 = getelementptr inbounds float, float* %1298, i64 16
  %1305 = bitcast float* %1304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1305, i32 0, i32 1, i32 1)
  %1306 = getelementptr inbounds float, float* %1301, i64 16
  %1307 = bitcast float* %1306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1307, i32 0, i32 1, i32 1)
  %1308 = getelementptr inbounds float, float* %1298, i64 24
  %1309 = bitcast float* %1308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1309, i32 0, i32 1, i32 1)
  %1310 = getelementptr inbounds float, float* %1301, i64 24
  %1311 = bitcast float* %1310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1311, i32 0, i32 1, i32 1)
  %1312 = getelementptr inbounds float, float* %1298, i64 32
  %1313 = bitcast float* %1312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1313, i32 0, i32 1, i32 1)
  %1314 = getelementptr inbounds float, float* %1301, i64 32
  %1315 = bitcast float* %1314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1315, i32 0, i32 1, i32 1)
  %1316 = getelementptr inbounds float, float* %1298, i64 40
  %1317 = bitcast float* %1316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1317, i32 0, i32 1, i32 1)
  %1318 = getelementptr inbounds float, float* %1301, i64 40
  %1319 = bitcast float* %1318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1319, i32 0, i32 1, i32 1)
  %1320 = getelementptr inbounds float, float* %1298, i64 48
  %1321 = bitcast float* %1320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1321, i32 0, i32 1, i32 1)
  %1322 = getelementptr inbounds float, float* %1301, i64 48
  %1323 = bitcast float* %1322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1323, i32 0, i32 1, i32 1)
  %1324 = getelementptr inbounds float, float* %1298, i64 56
  %1325 = bitcast float* %1324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1325, i32 0, i32 1, i32 1)
  %1326 = getelementptr inbounds float, float* %1301, i64 56
  %1327 = bitcast float* %1326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1327, i32 0, i32 1, i32 1)
  %1328 = getelementptr inbounds float, float* %1298, i64 64
  %1329 = bitcast float* %1328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1329, i32 0, i32 1, i32 1)
  %1330 = getelementptr inbounds float, float* %1301, i64 64
  %1331 = bitcast float* %1330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1331, i32 0, i32 1, i32 1)
  %1332 = getelementptr inbounds float, float* %1298, i64 72
  %1333 = bitcast float* %1332 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1333, i32 0, i32 1, i32 1)
  %1334 = getelementptr inbounds float, float* %1301, i64 72
  %1335 = bitcast float* %1334 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1335, i32 0, i32 1, i32 1)
  %1336 = getelementptr inbounds float, float* %1298, i64 80
  %1337 = bitcast float* %1336 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1337, i32 0, i32 1, i32 1)
  %1338 = getelementptr inbounds float, float* %1301, i64 80
  %1339 = bitcast float* %1338 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1339, i32 0, i32 1, i32 1)
  %1340 = getelementptr inbounds float, float* %1298, i64 88
  %1341 = bitcast float* %1340 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1341, i32 0, i32 1, i32 1)
  %1342 = getelementptr inbounds float, float* %1301, i64 88
  %1343 = bitcast float* %1342 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1343, i32 0, i32 1, i32 1)
  %1344 = getelementptr inbounds float, float* %1298, i64 96
  %1345 = bitcast float* %1344 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1345, i32 0, i32 1, i32 1)
  %1346 = getelementptr inbounds float, float* %1301, i64 96
  %1347 = bitcast float* %1346 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1347, i32 0, i32 1, i32 1)
  %1348 = bitcast float* %1298 to <8 x float>*
  %1349 = load <8 x float>, <8 x float>* %1348, align 1, !tbaa !12
  %1350 = or i64 %1297, 8
  %1351 = getelementptr inbounds float, float* %5, i64 %1350
  %1352 = bitcast float* %1351 to <8 x float>*
  %1353 = load <8 x float>, <8 x float>* %1352, align 1, !tbaa !12
  %1354 = or i64 %1297, 16
  %1355 = getelementptr inbounds float, float* %5, i64 %1354
  %1356 = bitcast float* %1355 to <8 x float>*
  %1357 = load <8 x float>, <8 x float>* %1356, align 1, !tbaa !12
  %1358 = or i64 %1297, 24
  %1359 = getelementptr inbounds float, float* %5, i64 %1358
  %1360 = bitcast float* %1359 to <8 x float>*
  %1361 = load <8 x float>, <8 x float>* %1360, align 1, !tbaa !12
  %1362 = add nuw nsw i64 %1297, 32
  %1363 = getelementptr inbounds float, float* %5, i64 %1362
  %1364 = bitcast float* %1363 to <8 x float>*
  %1365 = load <8 x float>, <8 x float>* %1364, align 1, !tbaa !12
  %1366 = add nuw nsw i64 %1297, 40
  %1367 = getelementptr inbounds float, float* %5, i64 %1366
  %1368 = bitcast float* %1367 to <8 x float>*
  %1369 = load <8 x float>, <8 x float>* %1368, align 1, !tbaa !12
  %1370 = add nuw nsw i64 %1297, 48
  %1371 = getelementptr inbounds float, float* %5, i64 %1370
  %1372 = bitcast float* %1371 to <8 x float>*
  %1373 = load <8 x float>, <8 x float>* %1372, align 1, !tbaa !12
  %1374 = add nuw nsw i64 %1297, 56
  %1375 = getelementptr inbounds float, float* %5, i64 %1374
  %1376 = bitcast float* %1375 to <8 x float>*
  %1377 = load <8 x float>, <8 x float>* %1376, align 1, !tbaa !12
  %1378 = add nuw nsw i64 %1297, 64
  %1379 = getelementptr inbounds float, float* %5, i64 %1378
  %1380 = bitcast float* %1379 to <8 x float>*
  %1381 = load <8 x float>, <8 x float>* %1380, align 1, !tbaa !12
  %1382 = add nuw nsw i64 %1297, 72
  %1383 = getelementptr inbounds float, float* %5, i64 %1382
  %1384 = bitcast float* %1383 to <8 x float>*
  %1385 = load <8 x float>, <8 x float>* %1384, align 1, !tbaa !12
  %1386 = add nuw nsw i64 %1297, 80
  %1387 = getelementptr inbounds float, float* %5, i64 %1386
  %1388 = bitcast float* %1387 to <8 x float>*
  %1389 = load <8 x float>, <8 x float>* %1388, align 1, !tbaa !12
  %1390 = add nuw nsw i64 %1297, 88
  %1391 = getelementptr inbounds float, float* %5, i64 %1390
  %1392 = bitcast float* %1391 to <8 x float>*
  %1393 = load <8 x float>, <8 x float>* %1392, align 1, !tbaa !12
  %1394 = add nsw i64 %1297, %1115
  %1395 = getelementptr inbounds float, float* %3, i64 %1394
  %1396 = bitcast float* %1395 to <8 x float>*
  %1397 = load <8 x float>, <8 x float>* %1396, align 1, !tbaa !12
  %1398 = add nsw i64 %1394, 8
  %1399 = getelementptr inbounds float, float* %3, i64 %1398
  %1400 = bitcast float* %1399 to <8 x float>*
  %1401 = load <8 x float>, <8 x float>* %1400, align 1, !tbaa !12
  %1402 = add nsw i64 %1394, 16
  %1403 = getelementptr inbounds float, float* %3, i64 %1402
  %1404 = bitcast float* %1403 to <8 x float>*
  %1405 = load <8 x float>, <8 x float>* %1404, align 1, !tbaa !12
  %1406 = add nsw i64 %1394, 24
  %1407 = getelementptr inbounds float, float* %3, i64 %1406
  %1408 = bitcast float* %1407 to <8 x float>*
  %1409 = load <8 x float>, <8 x float>* %1408, align 1, !tbaa !12
  %1410 = add nsw i64 %1394, 32
  %1411 = getelementptr inbounds float, float* %3, i64 %1410
  %1412 = bitcast float* %1411 to <8 x float>*
  %1413 = load <8 x float>, <8 x float>* %1412, align 1, !tbaa !12
  %1414 = add nsw i64 %1394, 40
  %1415 = getelementptr inbounds float, float* %3, i64 %1414
  %1416 = bitcast float* %1415 to <8 x float>*
  %1417 = load <8 x float>, <8 x float>* %1416, align 1, !tbaa !12
  %1418 = add nsw i64 %1394, 48
  %1419 = getelementptr inbounds float, float* %3, i64 %1418
  %1420 = bitcast float* %1419 to <8 x float>*
  %1421 = load <8 x float>, <8 x float>* %1420, align 1, !tbaa !12
  %1422 = add nsw i64 %1394, 56
  %1423 = getelementptr inbounds float, float* %3, i64 %1422
  %1424 = bitcast float* %1423 to <8 x float>*
  %1425 = load <8 x float>, <8 x float>* %1424, align 1, !tbaa !12
  %1426 = add nsw i64 %1394, 64
  %1427 = getelementptr inbounds float, float* %3, i64 %1426
  %1428 = bitcast float* %1427 to <8 x float>*
  %1429 = load <8 x float>, <8 x float>* %1428, align 1, !tbaa !12
  %1430 = add nsw i64 %1394, 72
  %1431 = getelementptr inbounds float, float* %3, i64 %1430
  %1432 = bitcast float* %1431 to <8 x float>*
  %1433 = load <8 x float>, <8 x float>* %1432, align 1, !tbaa !12
  %1434 = add nsw i64 %1394, 80
  %1435 = getelementptr inbounds float, float* %3, i64 %1434
  %1436 = bitcast float* %1435 to <8 x float>*
  %1437 = load <8 x float>, <8 x float>* %1436, align 1, !tbaa !12
  %1438 = add nsw i64 %1394, 88
  %1439 = getelementptr inbounds float, float* %3, i64 %1438
  %1440 = bitcast float* %1439 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1397, <8 x float> %60, <8 x float> %1349) #10
  %1443 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1401, <8 x float> %60, <8 x float> %1353) #10
  %1444 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1405, <8 x float> %60, <8 x float> %1357) #10
  %1445 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1409, <8 x float> %60, <8 x float> %1361) #10
  %1446 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1413, <8 x float> %60, <8 x float> %1365) #10
  %1447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1417, <8 x float> %60, <8 x float> %1369) #10
  %1448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1421, <8 x float> %60, <8 x float> %1373) #10
  %1449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1425, <8 x float> %60, <8 x float> %1377) #10
  %1450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1429, <8 x float> %60, <8 x float> %1381) #10
  %1451 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1433, <8 x float> %60, <8 x float> %1385) #10
  %1452 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1437, <8 x float> %60, <8 x float> %1389) #10
  %1453 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1441, <8 x float> %60, <8 x float> %1393) #10
  store <8 x float> %1442, <8 x float>* %1348, align 1, !tbaa !12
  store <8 x float> %1443, <8 x float>* %1352, align 1, !tbaa !12
  store <8 x float> %1444, <8 x float>* %1356, align 1, !tbaa !12
  store <8 x float> %1445, <8 x float>* %1360, align 1, !tbaa !12
  store <8 x float> %1446, <8 x float>* %1364, align 1, !tbaa !12
  store <8 x float> %1447, <8 x float>* %1368, align 1, !tbaa !12
  store <8 x float> %1448, <8 x float>* %1372, align 1, !tbaa !12
  store <8 x float> %1449, <8 x float>* %1376, align 1, !tbaa !12
  store <8 x float> %1450, <8 x float>* %1380, align 1, !tbaa !12
  store <8 x float> %1451, <8 x float>* %1384, align 1, !tbaa !12
  store <8 x float> %1452, <8 x float>* %1388, align 1, !tbaa !12
  store <8 x float> %1453, <8 x float>* %1392, align 1, !tbaa !12
  %1454 = add nuw nsw i64 %1297, 96
  %1455 = icmp ult i64 %1454, %1116
  br i1 %1455, label %1296, label %1290

1456:                                             ; preds = %1463, %1111, %1290
  %1457 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1458 = icmp sgt i32 %1457, 0
  br i1 %1458, label %1459, label %1968

1459:                                             ; preds = %1456
  %1460 = zext i32 %1457 to i64
  %1461 = trunc i64 %66 to i32
  %1462 = mul nsw i32 %1457, %1461
  br label %1629

1463:                                             ; preds = %1291, %1463
  %1464 = phi i64 [ 0, %1291 ], [ %1621, %1463 ]
  %1465 = getelementptr inbounds float, float* %5, i64 %1464
  %1466 = getelementptr inbounds float, float* %1465, i64 8
  %1467 = bitcast float* %1466 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1467, i32 0, i32 1, i32 1)
  %1468 = getelementptr inbounds float, float* %3, i64 %1464
  %1469 = getelementptr inbounds float, float* %1468, i64 8
  %1470 = bitcast float* %1469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1470, i32 0, i32 1, i32 1)
  %1471 = getelementptr inbounds float, float* %1465, i64 16
  %1472 = bitcast float* %1471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1472, i32 0, i32 1, i32 1)
  %1473 = getelementptr inbounds float, float* %1468, i64 16
  %1474 = bitcast float* %1473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1474, i32 0, i32 1, i32 1)
  %1475 = getelementptr inbounds float, float* %1465, i64 24
  %1476 = bitcast float* %1475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1476, i32 0, i32 1, i32 1)
  %1477 = getelementptr inbounds float, float* %1468, i64 24
  %1478 = bitcast float* %1477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1478, i32 0, i32 1, i32 1)
  %1479 = getelementptr inbounds float, float* %1465, i64 32
  %1480 = bitcast float* %1479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1480, i32 0, i32 1, i32 1)
  %1481 = getelementptr inbounds float, float* %1468, i64 32
  %1482 = bitcast float* %1481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1482, i32 0, i32 1, i32 1)
  %1483 = getelementptr inbounds float, float* %1465, i64 40
  %1484 = bitcast float* %1483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1484, i32 0, i32 1, i32 1)
  %1485 = getelementptr inbounds float, float* %1468, i64 40
  %1486 = bitcast float* %1485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1486, i32 0, i32 1, i32 1)
  %1487 = getelementptr inbounds float, float* %1465, i64 48
  %1488 = bitcast float* %1487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1488, i32 0, i32 1, i32 1)
  %1489 = getelementptr inbounds float, float* %1468, i64 48
  %1490 = bitcast float* %1489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1490, i32 0, i32 1, i32 1)
  %1491 = getelementptr inbounds float, float* %1465, i64 56
  %1492 = bitcast float* %1491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1492, i32 0, i32 1, i32 1)
  %1493 = getelementptr inbounds float, float* %1468, i64 56
  %1494 = bitcast float* %1493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1494, i32 0, i32 1, i32 1)
  %1495 = getelementptr inbounds float, float* %1465, i64 64
  %1496 = bitcast float* %1495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1496, i32 0, i32 1, i32 1)
  %1497 = getelementptr inbounds float, float* %1468, i64 64
  %1498 = bitcast float* %1497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1498, i32 0, i32 1, i32 1)
  %1499 = getelementptr inbounds float, float* %1465, i64 72
  %1500 = bitcast float* %1499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1500, i32 0, i32 1, i32 1)
  %1501 = getelementptr inbounds float, float* %1468, i64 72
  %1502 = bitcast float* %1501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1502, i32 0, i32 1, i32 1)
  %1503 = getelementptr inbounds float, float* %1465, i64 80
  %1504 = bitcast float* %1503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1504, i32 0, i32 1, i32 1)
  %1505 = getelementptr inbounds float, float* %1468, i64 80
  %1506 = bitcast float* %1505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1506, i32 0, i32 1, i32 1)
  %1507 = getelementptr inbounds float, float* %1465, i64 88
  %1508 = bitcast float* %1507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1508, i32 0, i32 1, i32 1)
  %1509 = getelementptr inbounds float, float* %1468, i64 88
  %1510 = bitcast float* %1509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1510, i32 0, i32 1, i32 1)
  %1511 = getelementptr inbounds float, float* %1465, i64 96
  %1512 = bitcast float* %1511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1512, i32 0, i32 1, i32 1)
  %1513 = getelementptr inbounds float, float* %1468, i64 96
  %1514 = bitcast float* %1513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1514, i32 0, i32 1, i32 1)
  %1515 = bitcast float* %1465 to <8 x float>*
  %1516 = load <8 x float>, <8 x float>* %1515, align 1, !tbaa !12
  %1517 = or i64 %1464, 8
  %1518 = getelementptr inbounds float, float* %5, i64 %1517
  %1519 = bitcast float* %1518 to <8 x float>*
  %1520 = load <8 x float>, <8 x float>* %1519, align 1, !tbaa !12
  %1521 = or i64 %1464, 16
  %1522 = getelementptr inbounds float, float* %5, i64 %1521
  %1523 = bitcast float* %1522 to <8 x float>*
  %1524 = load <8 x float>, <8 x float>* %1523, align 1, !tbaa !12
  %1525 = or i64 %1464, 24
  %1526 = getelementptr inbounds float, float* %5, i64 %1525
  %1527 = bitcast float* %1526 to <8 x float>*
  %1528 = load <8 x float>, <8 x float>* %1527, align 1, !tbaa !12
  %1529 = add nuw nsw i64 %1464, 32
  %1530 = getelementptr inbounds float, float* %5, i64 %1529
  %1531 = bitcast float* %1530 to <8 x float>*
  %1532 = load <8 x float>, <8 x float>* %1531, align 1, !tbaa !12
  %1533 = add nuw nsw i64 %1464, 40
  %1534 = getelementptr inbounds float, float* %5, i64 %1533
  %1535 = bitcast float* %1534 to <8 x float>*
  %1536 = load <8 x float>, <8 x float>* %1535, align 1, !tbaa !12
  %1537 = add nuw nsw i64 %1464, 48
  %1538 = getelementptr inbounds float, float* %5, i64 %1537
  %1539 = bitcast float* %1538 to <8 x float>*
  %1540 = load <8 x float>, <8 x float>* %1539, align 1, !tbaa !12
  %1541 = add nuw nsw i64 %1464, 56
  %1542 = getelementptr inbounds float, float* %5, i64 %1541
  %1543 = bitcast float* %1542 to <8 x float>*
  %1544 = load <8 x float>, <8 x float>* %1543, align 1, !tbaa !12
  %1545 = add nuw nsw i64 %1464, 64
  %1546 = getelementptr inbounds float, float* %5, i64 %1545
  %1547 = bitcast float* %1546 to <8 x float>*
  %1548 = load <8 x float>, <8 x float>* %1547, align 1, !tbaa !12
  %1549 = add nuw nsw i64 %1464, 72
  %1550 = getelementptr inbounds float, float* %5, i64 %1549
  %1551 = bitcast float* %1550 to <8 x float>*
  %1552 = load <8 x float>, <8 x float>* %1551, align 1, !tbaa !12
  %1553 = add nuw nsw i64 %1464, 80
  %1554 = getelementptr inbounds float, float* %5, i64 %1553
  %1555 = bitcast float* %1554 to <8 x float>*
  %1556 = load <8 x float>, <8 x float>* %1555, align 1, !tbaa !12
  %1557 = add nuw nsw i64 %1464, 88
  %1558 = getelementptr inbounds float, float* %5, i64 %1557
  %1559 = bitcast float* %1558 to <8 x float>*
  %1560 = load <8 x float>, <8 x float>* %1559, align 1, !tbaa !12
  %1561 = add nsw i64 %1464, %1294
  %1562 = getelementptr inbounds float, float* %3, i64 %1561
  %1563 = bitcast float* %1562 to <8 x float>*
  %1564 = load <8 x float>, <8 x float>* %1563, align 1, !tbaa !12
  %1565 = add nsw i64 %1561, 8
  %1566 = getelementptr inbounds float, float* %3, i64 %1565
  %1567 = bitcast float* %1566 to <8 x float>*
  %1568 = load <8 x float>, <8 x float>* %1567, align 1, !tbaa !12
  %1569 = add nsw i64 %1561, 16
  %1570 = getelementptr inbounds float, float* %3, i64 %1569
  %1571 = bitcast float* %1570 to <8 x float>*
  %1572 = load <8 x float>, <8 x float>* %1571, align 1, !tbaa !12
  %1573 = add nsw i64 %1561, 24
  %1574 = getelementptr inbounds float, float* %3, i64 %1573
  %1575 = bitcast float* %1574 to <8 x float>*
  %1576 = load <8 x float>, <8 x float>* %1575, align 1, !tbaa !12
  %1577 = add nsw i64 %1561, 32
  %1578 = getelementptr inbounds float, float* %3, i64 %1577
  %1579 = bitcast float* %1578 to <8 x float>*
  %1580 = load <8 x float>, <8 x float>* %1579, align 1, !tbaa !12
  %1581 = add nsw i64 %1561, 40
  %1582 = getelementptr inbounds float, float* %3, i64 %1581
  %1583 = bitcast float* %1582 to <8 x float>*
  %1584 = load <8 x float>, <8 x float>* %1583, align 1, !tbaa !12
  %1585 = add nsw i64 %1561, 48
  %1586 = getelementptr inbounds float, float* %3, i64 %1585
  %1587 = bitcast float* %1586 to <8 x float>*
  %1588 = load <8 x float>, <8 x float>* %1587, align 1, !tbaa !12
  %1589 = add nsw i64 %1561, 56
  %1590 = getelementptr inbounds float, float* %3, i64 %1589
  %1591 = bitcast float* %1590 to <8 x float>*
  %1592 = load <8 x float>, <8 x float>* %1591, align 1, !tbaa !12
  %1593 = add nsw i64 %1561, 64
  %1594 = getelementptr inbounds float, float* %3, i64 %1593
  %1595 = bitcast float* %1594 to <8 x float>*
  %1596 = load <8 x float>, <8 x float>* %1595, align 1, !tbaa !12
  %1597 = add nsw i64 %1561, 72
  %1598 = getelementptr inbounds float, float* %3, i64 %1597
  %1599 = bitcast float* %1598 to <8 x float>*
  %1600 = load <8 x float>, <8 x float>* %1599, align 1, !tbaa !12
  %1601 = add nsw i64 %1561, 80
  %1602 = getelementptr inbounds float, float* %3, i64 %1601
  %1603 = bitcast float* %1602 to <8 x float>*
  %1604 = load <8 x float>, <8 x float>* %1603, align 1, !tbaa !12
  %1605 = add nsw i64 %1561, 88
  %1606 = getelementptr inbounds float, float* %3, i64 %1605
  %1607 = bitcast float* %1606 to <8 x float>*
  %1608 = load <8 x float>, <8 x float>* %1607, align 1, !tbaa !12
  %1609 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1564, <8 x float> %65, <8 x float> %1516) #10
  %1610 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1568, <8 x float> %65, <8 x float> %1520) #10
  %1611 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1572, <8 x float> %65, <8 x float> %1524) #10
  %1612 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1576, <8 x float> %65, <8 x float> %1528) #10
  %1613 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1580, <8 x float> %65, <8 x float> %1532) #10
  %1614 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1584, <8 x float> %65, <8 x float> %1536) #10
  %1615 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1588, <8 x float> %65, <8 x float> %1540) #10
  %1616 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1592, <8 x float> %65, <8 x float> %1544) #10
  %1617 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1596, <8 x float> %65, <8 x float> %1548) #10
  %1618 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1600, <8 x float> %65, <8 x float> %1552) #10
  %1619 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1604, <8 x float> %65, <8 x float> %1556) #10
  %1620 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1608, <8 x float> %65, <8 x float> %1560) #10
  store <8 x float> %1609, <8 x float>* %1515, align 1, !tbaa !12
  store <8 x float> %1610, <8 x float>* %1519, align 1, !tbaa !12
  store <8 x float> %1611, <8 x float>* %1523, align 1, !tbaa !12
  store <8 x float> %1612, <8 x float>* %1527, align 1, !tbaa !12
  store <8 x float> %1613, <8 x float>* %1531, align 1, !tbaa !12
  store <8 x float> %1614, <8 x float>* %1535, align 1, !tbaa !12
  store <8 x float> %1615, <8 x float>* %1539, align 1, !tbaa !12
  store <8 x float> %1616, <8 x float>* %1543, align 1, !tbaa !12
  store <8 x float> %1617, <8 x float>* %1547, align 1, !tbaa !12
  store <8 x float> %1618, <8 x float>* %1551, align 1, !tbaa !12
  store <8 x float> %1619, <8 x float>* %1555, align 1, !tbaa !12
  store <8 x float> %1620, <8 x float>* %1559, align 1, !tbaa !12
  %1621 = add nuw nsw i64 %1464, 96
  %1622 = icmp ult i64 %1621, %1295
  br i1 %1622, label %1463, label %1456

1623:                                             ; preds = %1629
  br i1 %1458, label %1624, label %1968

1624:                                             ; preds = %1623
  %1625 = trunc i64 %71 to i32
  %1626 = mul nsw i32 %1457, %1625
  %1627 = sext i32 %1626 to i64
  %1628 = zext i32 %1457 to i64
  br label %1808

1629:                                             ; preds = %1459, %1629
  %1630 = phi i64 [ 0, %1459 ], [ %1800, %1629 ]
  %1631 = getelementptr inbounds float, float* %5, i64 %1630
  %1632 = getelementptr inbounds float, float* %1631, i64 8
  %1633 = bitcast float* %1632 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1633, i32 0, i32 1, i32 1)
  %1634 = getelementptr inbounds float, float* %3, i64 %1630
  %1635 = getelementptr inbounds float, float* %1634, i64 8
  %1636 = bitcast float* %1635 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1636, i32 0, i32 1, i32 1)
  %1637 = getelementptr inbounds float, float* %1631, i64 16
  %1638 = bitcast float* %1637 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1638, i32 0, i32 1, i32 1)
  %1639 = getelementptr inbounds float, float* %1634, i64 16
  %1640 = bitcast float* %1639 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1640, i32 0, i32 1, i32 1)
  %1641 = getelementptr inbounds float, float* %1631, i64 24
  %1642 = bitcast float* %1641 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1642, i32 0, i32 1, i32 1)
  %1643 = getelementptr inbounds float, float* %1634, i64 24
  %1644 = bitcast float* %1643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1644, i32 0, i32 1, i32 1)
  %1645 = getelementptr inbounds float, float* %1631, i64 32
  %1646 = bitcast float* %1645 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1646, i32 0, i32 1, i32 1)
  %1647 = getelementptr inbounds float, float* %1634, i64 32
  %1648 = bitcast float* %1647 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1648, i32 0, i32 1, i32 1)
  %1649 = getelementptr inbounds float, float* %1631, i64 40
  %1650 = bitcast float* %1649 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1650, i32 0, i32 1, i32 1)
  %1651 = getelementptr inbounds float, float* %1634, i64 40
  %1652 = bitcast float* %1651 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1652, i32 0, i32 1, i32 1)
  %1653 = getelementptr inbounds float, float* %1631, i64 48
  %1654 = bitcast float* %1653 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1654, i32 0, i32 1, i32 1)
  %1655 = getelementptr inbounds float, float* %1634, i64 48
  %1656 = bitcast float* %1655 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1656, i32 0, i32 1, i32 1)
  %1657 = getelementptr inbounds float, float* %1631, i64 56
  %1658 = bitcast float* %1657 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1658, i32 0, i32 1, i32 1)
  %1659 = getelementptr inbounds float, float* %1634, i64 56
  %1660 = bitcast float* %1659 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1660, i32 0, i32 1, i32 1)
  %1661 = getelementptr inbounds float, float* %1631, i64 64
  %1662 = bitcast float* %1661 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1662, i32 0, i32 1, i32 1)
  %1663 = getelementptr inbounds float, float* %1634, i64 64
  %1664 = bitcast float* %1663 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1664, i32 0, i32 1, i32 1)
  %1665 = getelementptr inbounds float, float* %1631, i64 72
  %1666 = bitcast float* %1665 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1666, i32 0, i32 1, i32 1)
  %1667 = getelementptr inbounds float, float* %1634, i64 72
  %1668 = bitcast float* %1667 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1668, i32 0, i32 1, i32 1)
  %1669 = getelementptr inbounds float, float* %1631, i64 80
  %1670 = bitcast float* %1669 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1670, i32 0, i32 1, i32 1)
  %1671 = getelementptr inbounds float, float* %1634, i64 80
  %1672 = bitcast float* %1671 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1672, i32 0, i32 1, i32 1)
  %1673 = getelementptr inbounds float, float* %1631, i64 88
  %1674 = bitcast float* %1673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1674, i32 0, i32 1, i32 1)
  %1675 = getelementptr inbounds float, float* %1634, i64 88
  %1676 = bitcast float* %1675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1676, i32 0, i32 1, i32 1)
  %1677 = getelementptr inbounds float, float* %1631, i64 96
  %1678 = bitcast float* %1677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1678, i32 0, i32 1, i32 1)
  %1679 = getelementptr inbounds float, float* %1634, i64 96
  %1680 = bitcast float* %1679 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1680, i32 0, i32 1, i32 1)
  %1681 = bitcast float* %1631 to <8 x float>*
  %1682 = load <8 x float>, <8 x float>* %1681, align 1, !tbaa !12
  %1683 = or i64 %1630, 8
  %1684 = getelementptr inbounds float, float* %5, i64 %1683
  %1685 = bitcast float* %1684 to <8 x float>*
  %1686 = load <8 x float>, <8 x float>* %1685, align 1, !tbaa !12
  %1687 = or i64 %1630, 16
  %1688 = getelementptr inbounds float, float* %5, i64 %1687
  %1689 = bitcast float* %1688 to <8 x float>*
  %1690 = load <8 x float>, <8 x float>* %1689, align 1, !tbaa !12
  %1691 = or i64 %1630, 24
  %1692 = getelementptr inbounds float, float* %5, i64 %1691
  %1693 = bitcast float* %1692 to <8 x float>*
  %1694 = load <8 x float>, <8 x float>* %1693, align 1, !tbaa !12
  %1695 = add nuw nsw i64 %1630, 32
  %1696 = getelementptr inbounds float, float* %5, i64 %1695
  %1697 = bitcast float* %1696 to <8 x float>*
  %1698 = load <8 x float>, <8 x float>* %1697, align 1, !tbaa !12
  %1699 = add nuw nsw i64 %1630, 40
  %1700 = getelementptr inbounds float, float* %5, i64 %1699
  %1701 = bitcast float* %1700 to <8 x float>*
  %1702 = load <8 x float>, <8 x float>* %1701, align 1, !tbaa !12
  %1703 = add nuw nsw i64 %1630, 48
  %1704 = getelementptr inbounds float, float* %5, i64 %1703
  %1705 = bitcast float* %1704 to <8 x float>*
  %1706 = load <8 x float>, <8 x float>* %1705, align 1, !tbaa !12
  %1707 = add nuw nsw i64 %1630, 56
  %1708 = getelementptr inbounds float, float* %5, i64 %1707
  %1709 = bitcast float* %1708 to <8 x float>*
  %1710 = load <8 x float>, <8 x float>* %1709, align 1, !tbaa !12
  %1711 = add nuw nsw i64 %1630, 64
  %1712 = getelementptr inbounds float, float* %5, i64 %1711
  %1713 = bitcast float* %1712 to <8 x float>*
  %1714 = load <8 x float>, <8 x float>* %1713, align 1, !tbaa !12
  %1715 = add nuw nsw i64 %1630, 72
  %1716 = getelementptr inbounds float, float* %5, i64 %1715
  %1717 = bitcast float* %1716 to <8 x float>*
  %1718 = load <8 x float>, <8 x float>* %1717, align 1, !tbaa !12
  %1719 = add nuw nsw i64 %1630, 80
  %1720 = getelementptr inbounds float, float* %5, i64 %1719
  %1721 = bitcast float* %1720 to <8 x float>*
  %1722 = load <8 x float>, <8 x float>* %1721, align 1, !tbaa !12
  %1723 = add nuw nsw i64 %1630, 88
  %1724 = getelementptr inbounds float, float* %5, i64 %1723
  %1725 = bitcast float* %1724 to <8 x float>*
  %1726 = load <8 x float>, <8 x float>* %1725, align 1, !tbaa !12
  %1727 = trunc i64 %1630 to i32
  %1728 = add nsw i32 %1462, %1727
  %1729 = sext i32 %1728 to i64
  %1730 = getelementptr inbounds float, float* %3, i64 %1729
  %1731 = bitcast float* %1730 to <8 x float>*
  %1732 = load <8 x float>, <8 x float>* %1731, align 1, !tbaa !12
  %1733 = add nsw i32 %1728, 8
  %1734 = sext i32 %1733 to i64
  %1735 = getelementptr inbounds float, float* %3, i64 %1734
  %1736 = bitcast float* %1735 to <8 x float>*
  %1737 = load <8 x float>, <8 x float>* %1736, align 1, !tbaa !12
  %1738 = add nsw i32 %1728, 16
  %1739 = sext i32 %1738 to i64
  %1740 = getelementptr inbounds float, float* %3, i64 %1739
  %1741 = bitcast float* %1740 to <8 x float>*
  %1742 = load <8 x float>, <8 x float>* %1741, align 1, !tbaa !12
  %1743 = add nsw i32 %1728, 24
  %1744 = sext i32 %1743 to i64
  %1745 = getelementptr inbounds float, float* %3, i64 %1744
  %1746 = bitcast float* %1745 to <8 x float>*
  %1747 = load <8 x float>, <8 x float>* %1746, align 1, !tbaa !12
  %1748 = add nsw i32 %1728, 32
  %1749 = sext i32 %1748 to i64
  %1750 = getelementptr inbounds float, float* %3, i64 %1749
  %1751 = bitcast float* %1750 to <8 x float>*
  %1752 = load <8 x float>, <8 x float>* %1751, align 1, !tbaa !12
  %1753 = add nsw i32 %1728, 40
  %1754 = sext i32 %1753 to i64
  %1755 = getelementptr inbounds float, float* %3, i64 %1754
  %1756 = bitcast float* %1755 to <8 x float>*
  %1757 = load <8 x float>, <8 x float>* %1756, align 1, !tbaa !12
  %1758 = add nsw i32 %1728, 48
  %1759 = sext i32 %1758 to i64
  %1760 = getelementptr inbounds float, float* %3, i64 %1759
  %1761 = bitcast float* %1760 to <8 x float>*
  %1762 = load <8 x float>, <8 x float>* %1761, align 1, !tbaa !12
  %1763 = add nsw i32 %1728, 56
  %1764 = sext i32 %1763 to i64
  %1765 = getelementptr inbounds float, float* %3, i64 %1764
  %1766 = bitcast float* %1765 to <8 x float>*
  %1767 = load <8 x float>, <8 x float>* %1766, align 1, !tbaa !12
  %1768 = add nsw i32 %1728, 64
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds float, float* %3, i64 %1769
  %1771 = bitcast float* %1770 to <8 x float>*
  %1772 = load <8 x float>, <8 x float>* %1771, align 1, !tbaa !12
  %1773 = add nsw i32 %1728, 72
  %1774 = sext i32 %1773 to i64
  %1775 = getelementptr inbounds float, float* %3, i64 %1774
  %1776 = bitcast float* %1775 to <8 x float>*
  %1777 = load <8 x float>, <8 x float>* %1776, align 1, !tbaa !12
  %1778 = add nsw i32 %1728, 80
  %1779 = sext i32 %1778 to i64
  %1780 = getelementptr inbounds float, float* %3, i64 %1779
  %1781 = bitcast float* %1780 to <8 x float>*
  %1782 = load <8 x float>, <8 x float>* %1781, align 1, !tbaa !12
  %1783 = add nsw i32 %1728, 88
  %1784 = sext i32 %1783 to i64
  %1785 = getelementptr inbounds float, float* %3, i64 %1784
  %1786 = bitcast float* %1785 to <8 x float>*
  %1787 = load <8 x float>, <8 x float>* %1786, align 1, !tbaa !12
  %1788 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1732, <8 x float> %70, <8 x float> %1682) #10
  %1789 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1737, <8 x float> %70, <8 x float> %1686) #10
  %1790 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1742, <8 x float> %70, <8 x float> %1690) #10
  %1791 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1747, <8 x float> %70, <8 x float> %1694) #10
  %1792 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1752, <8 x float> %70, <8 x float> %1698) #10
  %1793 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1757, <8 x float> %70, <8 x float> %1702) #10
  %1794 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1762, <8 x float> %70, <8 x float> %1706) #10
  %1795 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1767, <8 x float> %70, <8 x float> %1710) #10
  %1796 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1772, <8 x float> %70, <8 x float> %1714) #10
  %1797 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1777, <8 x float> %70, <8 x float> %1718) #10
  %1798 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1782, <8 x float> %70, <8 x float> %1722) #10
  %1799 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1787, <8 x float> %70, <8 x float> %1726) #10
  store <8 x float> %1788, <8 x float>* %1681, align 1, !tbaa !12
  store <8 x float> %1789, <8 x float>* %1685, align 1, !tbaa !12
  store <8 x float> %1790, <8 x float>* %1689, align 1, !tbaa !12
  store <8 x float> %1791, <8 x float>* %1693, align 1, !tbaa !12
  store <8 x float> %1792, <8 x float>* %1697, align 1, !tbaa !12
  store <8 x float> %1793, <8 x float>* %1701, align 1, !tbaa !12
  store <8 x float> %1794, <8 x float>* %1705, align 1, !tbaa !12
  store <8 x float> %1795, <8 x float>* %1709, align 1, !tbaa !12
  store <8 x float> %1796, <8 x float>* %1713, align 1, !tbaa !12
  store <8 x float> %1797, <8 x float>* %1717, align 1, !tbaa !12
  store <8 x float> %1798, <8 x float>* %1721, align 1, !tbaa !12
  store <8 x float> %1799, <8 x float>* %1725, align 1, !tbaa !12
  %1800 = add nuw nsw i64 %1630, 96
  %1801 = icmp ult i64 %1800, %1460
  br i1 %1801, label %1629, label %1623

1802:                                             ; preds = %1808
  br i1 %1458, label %1803, label %1968

1803:                                             ; preds = %1802
  %1804 = trunc i64 %76 to i32
  %1805 = mul nsw i32 %1457, %1804
  %1806 = sext i32 %1805 to i64
  %1807 = zext i32 %1457 to i64
  br label %1973

1808:                                             ; preds = %1624, %1808
  %1809 = phi i64 [ 0, %1624 ], [ %1966, %1808 ]
  %1810 = getelementptr inbounds float, float* %5, i64 %1809
  %1811 = getelementptr inbounds float, float* %1810, i64 8
  %1812 = bitcast float* %1811 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1812, i32 0, i32 1, i32 1)
  %1813 = getelementptr inbounds float, float* %3, i64 %1809
  %1814 = getelementptr inbounds float, float* %1813, i64 8
  %1815 = bitcast float* %1814 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1815, i32 0, i32 1, i32 1)
  %1816 = getelementptr inbounds float, float* %1810, i64 16
  %1817 = bitcast float* %1816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1817, i32 0, i32 1, i32 1)
  %1818 = getelementptr inbounds float, float* %1813, i64 16
  %1819 = bitcast float* %1818 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1819, i32 0, i32 1, i32 1)
  %1820 = getelementptr inbounds float, float* %1810, i64 24
  %1821 = bitcast float* %1820 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1821, i32 0, i32 1, i32 1)
  %1822 = getelementptr inbounds float, float* %1813, i64 24
  %1823 = bitcast float* %1822 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1823, i32 0, i32 1, i32 1)
  %1824 = getelementptr inbounds float, float* %1810, i64 32
  %1825 = bitcast float* %1824 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1825, i32 0, i32 1, i32 1)
  %1826 = getelementptr inbounds float, float* %1813, i64 32
  %1827 = bitcast float* %1826 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1827, i32 0, i32 1, i32 1)
  %1828 = getelementptr inbounds float, float* %1810, i64 40
  %1829 = bitcast float* %1828 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1829, i32 0, i32 1, i32 1)
  %1830 = getelementptr inbounds float, float* %1813, i64 40
  %1831 = bitcast float* %1830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1831, i32 0, i32 1, i32 1)
  %1832 = getelementptr inbounds float, float* %1810, i64 48
  %1833 = bitcast float* %1832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1833, i32 0, i32 1, i32 1)
  %1834 = getelementptr inbounds float, float* %1813, i64 48
  %1835 = bitcast float* %1834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1835, i32 0, i32 1, i32 1)
  %1836 = getelementptr inbounds float, float* %1810, i64 56
  %1837 = bitcast float* %1836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1837, i32 0, i32 1, i32 1)
  %1838 = getelementptr inbounds float, float* %1813, i64 56
  %1839 = bitcast float* %1838 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1839, i32 0, i32 1, i32 1)
  %1840 = getelementptr inbounds float, float* %1810, i64 64
  %1841 = bitcast float* %1840 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1841, i32 0, i32 1, i32 1)
  %1842 = getelementptr inbounds float, float* %1813, i64 64
  %1843 = bitcast float* %1842 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1843, i32 0, i32 1, i32 1)
  %1844 = getelementptr inbounds float, float* %1810, i64 72
  %1845 = bitcast float* %1844 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1845, i32 0, i32 1, i32 1)
  %1846 = getelementptr inbounds float, float* %1813, i64 72
  %1847 = bitcast float* %1846 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1847, i32 0, i32 1, i32 1)
  %1848 = getelementptr inbounds float, float* %1810, i64 80
  %1849 = bitcast float* %1848 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1849, i32 0, i32 1, i32 1)
  %1850 = getelementptr inbounds float, float* %1813, i64 80
  %1851 = bitcast float* %1850 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1851, i32 0, i32 1, i32 1)
  %1852 = getelementptr inbounds float, float* %1810, i64 88
  %1853 = bitcast float* %1852 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1853, i32 0, i32 1, i32 1)
  %1854 = getelementptr inbounds float, float* %1813, i64 88
  %1855 = bitcast float* %1854 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1855, i32 0, i32 1, i32 1)
  %1856 = getelementptr inbounds float, float* %1810, i64 96
  %1857 = bitcast float* %1856 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1857, i32 0, i32 1, i32 1)
  %1858 = getelementptr inbounds float, float* %1813, i64 96
  %1859 = bitcast float* %1858 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1859, i32 0, i32 1, i32 1)
  %1860 = bitcast float* %1810 to <8 x float>*
  %1861 = load <8 x float>, <8 x float>* %1860, align 1, !tbaa !12
  %1862 = or i64 %1809, 8
  %1863 = getelementptr inbounds float, float* %5, i64 %1862
  %1864 = bitcast float* %1863 to <8 x float>*
  %1865 = load <8 x float>, <8 x float>* %1864, align 1, !tbaa !12
  %1866 = or i64 %1809, 16
  %1867 = getelementptr inbounds float, float* %5, i64 %1866
  %1868 = bitcast float* %1867 to <8 x float>*
  %1869 = load <8 x float>, <8 x float>* %1868, align 1, !tbaa !12
  %1870 = or i64 %1809, 24
  %1871 = getelementptr inbounds float, float* %5, i64 %1870
  %1872 = bitcast float* %1871 to <8 x float>*
  %1873 = load <8 x float>, <8 x float>* %1872, align 1, !tbaa !12
  %1874 = add nuw nsw i64 %1809, 32
  %1875 = getelementptr inbounds float, float* %5, i64 %1874
  %1876 = bitcast float* %1875 to <8 x float>*
  %1877 = load <8 x float>, <8 x float>* %1876, align 1, !tbaa !12
  %1878 = add nuw nsw i64 %1809, 40
  %1879 = getelementptr inbounds float, float* %5, i64 %1878
  %1880 = bitcast float* %1879 to <8 x float>*
  %1881 = load <8 x float>, <8 x float>* %1880, align 1, !tbaa !12
  %1882 = add nuw nsw i64 %1809, 48
  %1883 = getelementptr inbounds float, float* %5, i64 %1882
  %1884 = bitcast float* %1883 to <8 x float>*
  %1885 = load <8 x float>, <8 x float>* %1884, align 1, !tbaa !12
  %1886 = add nuw nsw i64 %1809, 56
  %1887 = getelementptr inbounds float, float* %5, i64 %1886
  %1888 = bitcast float* %1887 to <8 x float>*
  %1889 = load <8 x float>, <8 x float>* %1888, align 1, !tbaa !12
  %1890 = add nuw nsw i64 %1809, 64
  %1891 = getelementptr inbounds float, float* %5, i64 %1890
  %1892 = bitcast float* %1891 to <8 x float>*
  %1893 = load <8 x float>, <8 x float>* %1892, align 1, !tbaa !12
  %1894 = add nuw nsw i64 %1809, 72
  %1895 = getelementptr inbounds float, float* %5, i64 %1894
  %1896 = bitcast float* %1895 to <8 x float>*
  %1897 = load <8 x float>, <8 x float>* %1896, align 1, !tbaa !12
  %1898 = add nuw nsw i64 %1809, 80
  %1899 = getelementptr inbounds float, float* %5, i64 %1898
  %1900 = bitcast float* %1899 to <8 x float>*
  %1901 = load <8 x float>, <8 x float>* %1900, align 1, !tbaa !12
  %1902 = add nuw nsw i64 %1809, 88
  %1903 = getelementptr inbounds float, float* %5, i64 %1902
  %1904 = bitcast float* %1903 to <8 x float>*
  %1905 = load <8 x float>, <8 x float>* %1904, align 1, !tbaa !12
  %1906 = add nsw i64 %1809, %1627
  %1907 = getelementptr inbounds float, float* %3, i64 %1906
  %1908 = bitcast float* %1907 to <8 x float>*
  %1909 = load <8 x float>, <8 x float>* %1908, align 1, !tbaa !12
  %1910 = add nsw i64 %1906, 8
  %1911 = getelementptr inbounds float, float* %3, i64 %1910
  %1912 = bitcast float* %1911 to <8 x float>*
  %1913 = load <8 x float>, <8 x float>* %1912, align 1, !tbaa !12
  %1914 = add nsw i64 %1906, 16
  %1915 = getelementptr inbounds float, float* %3, i64 %1914
  %1916 = bitcast float* %1915 to <8 x float>*
  %1917 = load <8 x float>, <8 x float>* %1916, align 1, !tbaa !12
  %1918 = add nsw i64 %1906, 24
  %1919 = getelementptr inbounds float, float* %3, i64 %1918
  %1920 = bitcast float* %1919 to <8 x float>*
  %1921 = load <8 x float>, <8 x float>* %1920, align 1, !tbaa !12
  %1922 = add nsw i64 %1906, 32
  %1923 = getelementptr inbounds float, float* %3, i64 %1922
  %1924 = bitcast float* %1923 to <8 x float>*
  %1925 = load <8 x float>, <8 x float>* %1924, align 1, !tbaa !12
  %1926 = add nsw i64 %1906, 40
  %1927 = getelementptr inbounds float, float* %3, i64 %1926
  %1928 = bitcast float* %1927 to <8 x float>*
  %1929 = load <8 x float>, <8 x float>* %1928, align 1, !tbaa !12
  %1930 = add nsw i64 %1906, 48
  %1931 = getelementptr inbounds float, float* %3, i64 %1930
  %1932 = bitcast float* %1931 to <8 x float>*
  %1933 = load <8 x float>, <8 x float>* %1932, align 1, !tbaa !12
  %1934 = add nsw i64 %1906, 56
  %1935 = getelementptr inbounds float, float* %3, i64 %1934
  %1936 = bitcast float* %1935 to <8 x float>*
  %1937 = load <8 x float>, <8 x float>* %1936, align 1, !tbaa !12
  %1938 = add nsw i64 %1906, 64
  %1939 = getelementptr inbounds float, float* %3, i64 %1938
  %1940 = bitcast float* %1939 to <8 x float>*
  %1941 = load <8 x float>, <8 x float>* %1940, align 1, !tbaa !12
  %1942 = add nsw i64 %1906, 72
  %1943 = getelementptr inbounds float, float* %3, i64 %1942
  %1944 = bitcast float* %1943 to <8 x float>*
  %1945 = load <8 x float>, <8 x float>* %1944, align 1, !tbaa !12
  %1946 = add nsw i64 %1906, 80
  %1947 = getelementptr inbounds float, float* %3, i64 %1946
  %1948 = bitcast float* %1947 to <8 x float>*
  %1949 = load <8 x float>, <8 x float>* %1948, align 1, !tbaa !12
  %1950 = add nsw i64 %1906, 88
  %1951 = getelementptr inbounds float, float* %3, i64 %1950
  %1952 = bitcast float* %1951 to <8 x float>*
  %1953 = load <8 x float>, <8 x float>* %1952, align 1, !tbaa !12
  %1954 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1909, <8 x float> %75, <8 x float> %1861) #10
  %1955 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1913, <8 x float> %75, <8 x float> %1865) #10
  %1956 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1917, <8 x float> %75, <8 x float> %1869) #10
  %1957 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1921, <8 x float> %75, <8 x float> %1873) #10
  %1958 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1925, <8 x float> %75, <8 x float> %1877) #10
  %1959 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1929, <8 x float> %75, <8 x float> %1881) #10
  %1960 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1933, <8 x float> %75, <8 x float> %1885) #10
  %1961 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1937, <8 x float> %75, <8 x float> %1889) #10
  %1962 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1941, <8 x float> %75, <8 x float> %1893) #10
  %1963 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1945, <8 x float> %75, <8 x float> %1897) #10
  %1964 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1949, <8 x float> %75, <8 x float> %1901) #10
  %1965 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1953, <8 x float> %75, <8 x float> %1905) #10
  store <8 x float> %1954, <8 x float>* %1860, align 1, !tbaa !12
  store <8 x float> %1955, <8 x float>* %1864, align 1, !tbaa !12
  store <8 x float> %1956, <8 x float>* %1868, align 1, !tbaa !12
  store <8 x float> %1957, <8 x float>* %1872, align 1, !tbaa !12
  store <8 x float> %1958, <8 x float>* %1876, align 1, !tbaa !12
  store <8 x float> %1959, <8 x float>* %1880, align 1, !tbaa !12
  store <8 x float> %1960, <8 x float>* %1884, align 1, !tbaa !12
  store <8 x float> %1961, <8 x float>* %1888, align 1, !tbaa !12
  store <8 x float> %1962, <8 x float>* %1892, align 1, !tbaa !12
  store <8 x float> %1963, <8 x float>* %1896, align 1, !tbaa !12
  store <8 x float> %1964, <8 x float>* %1900, align 1, !tbaa !12
  store <8 x float> %1965, <8 x float>* %1904, align 1, !tbaa !12
  %1966 = add nuw nsw i64 %1809, 96
  %1967 = icmp ult i64 %1966, %1628
  br i1 %1967, label %1808, label %1802

1968:                                             ; preds = %1973, %432, %20, %944, %1456, %1623, %1802
  %1969 = add nuw nsw i64 %21, 12
  %1970 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1971 = sext i32 %1970 to i64
  %1972 = icmp slt i64 %1969, %1971
  br i1 %1972, label %20, label %8

1973:                                             ; preds = %1803, %1973
  %1974 = phi i64 [ 0, %1803 ], [ %2131, %1973 ]
  %1975 = getelementptr inbounds float, float* %5, i64 %1974
  %1976 = getelementptr inbounds float, float* %1975, i64 8
  %1977 = bitcast float* %1976 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1977, i32 0, i32 1, i32 1)
  %1978 = getelementptr inbounds float, float* %3, i64 %1974
  %1979 = getelementptr inbounds float, float* %1978, i64 8
  %1980 = bitcast float* %1979 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1980, i32 0, i32 1, i32 1)
  %1981 = getelementptr inbounds float, float* %1975, i64 16
  %1982 = bitcast float* %1981 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1982, i32 0, i32 1, i32 1)
  %1983 = getelementptr inbounds float, float* %1978, i64 16
  %1984 = bitcast float* %1983 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1984, i32 0, i32 1, i32 1)
  %1985 = getelementptr inbounds float, float* %1975, i64 24
  %1986 = bitcast float* %1985 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1986, i32 0, i32 1, i32 1)
  %1987 = getelementptr inbounds float, float* %1978, i64 24
  %1988 = bitcast float* %1987 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1988, i32 0, i32 1, i32 1)
  %1989 = getelementptr inbounds float, float* %1975, i64 32
  %1990 = bitcast float* %1989 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1990, i32 0, i32 1, i32 1)
  %1991 = getelementptr inbounds float, float* %1978, i64 32
  %1992 = bitcast float* %1991 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1992, i32 0, i32 1, i32 1)
  %1993 = getelementptr inbounds float, float* %1975, i64 40
  %1994 = bitcast float* %1993 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1994, i32 0, i32 1, i32 1)
  %1995 = getelementptr inbounds float, float* %1978, i64 40
  %1996 = bitcast float* %1995 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1996, i32 0, i32 1, i32 1)
  %1997 = getelementptr inbounds float, float* %1975, i64 48
  %1998 = bitcast float* %1997 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1998, i32 0, i32 1, i32 1)
  %1999 = getelementptr inbounds float, float* %1978, i64 48
  %2000 = bitcast float* %1999 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2000, i32 0, i32 1, i32 1)
  %2001 = getelementptr inbounds float, float* %1975, i64 56
  %2002 = bitcast float* %2001 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2002, i32 0, i32 1, i32 1)
  %2003 = getelementptr inbounds float, float* %1978, i64 56
  %2004 = bitcast float* %2003 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2004, i32 0, i32 1, i32 1)
  %2005 = getelementptr inbounds float, float* %1975, i64 64
  %2006 = bitcast float* %2005 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2006, i32 0, i32 1, i32 1)
  %2007 = getelementptr inbounds float, float* %1978, i64 64
  %2008 = bitcast float* %2007 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2008, i32 0, i32 1, i32 1)
  %2009 = getelementptr inbounds float, float* %1975, i64 72
  %2010 = bitcast float* %2009 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2010, i32 0, i32 1, i32 1)
  %2011 = getelementptr inbounds float, float* %1978, i64 72
  %2012 = bitcast float* %2011 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2012, i32 0, i32 1, i32 1)
  %2013 = getelementptr inbounds float, float* %1975, i64 80
  %2014 = bitcast float* %2013 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2014, i32 0, i32 1, i32 1)
  %2015 = getelementptr inbounds float, float* %1978, i64 80
  %2016 = bitcast float* %2015 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2016, i32 0, i32 1, i32 1)
  %2017 = getelementptr inbounds float, float* %1975, i64 88
  %2018 = bitcast float* %2017 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2018, i32 0, i32 1, i32 1)
  %2019 = getelementptr inbounds float, float* %1978, i64 88
  %2020 = bitcast float* %2019 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2020, i32 0, i32 1, i32 1)
  %2021 = getelementptr inbounds float, float* %1975, i64 96
  %2022 = bitcast float* %2021 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2022, i32 0, i32 1, i32 1)
  %2023 = getelementptr inbounds float, float* %1978, i64 96
  %2024 = bitcast float* %2023 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2024, i32 0, i32 1, i32 1)
  %2025 = bitcast float* %1975 to <8 x float>*
  %2026 = load <8 x float>, <8 x float>* %2025, align 1, !tbaa !12
  %2027 = or i64 %1974, 8
  %2028 = getelementptr inbounds float, float* %5, i64 %2027
  %2029 = bitcast float* %2028 to <8 x float>*
  %2030 = load <8 x float>, <8 x float>* %2029, align 1, !tbaa !12
  %2031 = or i64 %1974, 16
  %2032 = getelementptr inbounds float, float* %5, i64 %2031
  %2033 = bitcast float* %2032 to <8 x float>*
  %2034 = load <8 x float>, <8 x float>* %2033, align 1, !tbaa !12
  %2035 = or i64 %1974, 24
  %2036 = getelementptr inbounds float, float* %5, i64 %2035
  %2037 = bitcast float* %2036 to <8 x float>*
  %2038 = load <8 x float>, <8 x float>* %2037, align 1, !tbaa !12
  %2039 = add nuw nsw i64 %1974, 32
  %2040 = getelementptr inbounds float, float* %5, i64 %2039
  %2041 = bitcast float* %2040 to <8 x float>*
  %2042 = load <8 x float>, <8 x float>* %2041, align 1, !tbaa !12
  %2043 = add nuw nsw i64 %1974, 40
  %2044 = getelementptr inbounds float, float* %5, i64 %2043
  %2045 = bitcast float* %2044 to <8 x float>*
  %2046 = load <8 x float>, <8 x float>* %2045, align 1, !tbaa !12
  %2047 = add nuw nsw i64 %1974, 48
  %2048 = getelementptr inbounds float, float* %5, i64 %2047
  %2049 = bitcast float* %2048 to <8 x float>*
  %2050 = load <8 x float>, <8 x float>* %2049, align 1, !tbaa !12
  %2051 = add nuw nsw i64 %1974, 56
  %2052 = getelementptr inbounds float, float* %5, i64 %2051
  %2053 = bitcast float* %2052 to <8 x float>*
  %2054 = load <8 x float>, <8 x float>* %2053, align 1, !tbaa !12
  %2055 = add nuw nsw i64 %1974, 64
  %2056 = getelementptr inbounds float, float* %5, i64 %2055
  %2057 = bitcast float* %2056 to <8 x float>*
  %2058 = load <8 x float>, <8 x float>* %2057, align 1, !tbaa !12
  %2059 = add nuw nsw i64 %1974, 72
  %2060 = getelementptr inbounds float, float* %5, i64 %2059
  %2061 = bitcast float* %2060 to <8 x float>*
  %2062 = load <8 x float>, <8 x float>* %2061, align 1, !tbaa !12
  %2063 = add nuw nsw i64 %1974, 80
  %2064 = getelementptr inbounds float, float* %5, i64 %2063
  %2065 = bitcast float* %2064 to <8 x float>*
  %2066 = load <8 x float>, <8 x float>* %2065, align 1, !tbaa !12
  %2067 = add nuw nsw i64 %1974, 88
  %2068 = getelementptr inbounds float, float* %5, i64 %2067
  %2069 = bitcast float* %2068 to <8 x float>*
  %2070 = load <8 x float>, <8 x float>* %2069, align 1, !tbaa !12
  %2071 = add nsw i64 %1974, %1806
  %2072 = getelementptr inbounds float, float* %3, i64 %2071
  %2073 = bitcast float* %2072 to <8 x float>*
  %2074 = load <8 x float>, <8 x float>* %2073, align 1, !tbaa !12
  %2075 = add nsw i64 %2071, 8
  %2076 = getelementptr inbounds float, float* %3, i64 %2075
  %2077 = bitcast float* %2076 to <8 x float>*
  %2078 = load <8 x float>, <8 x float>* %2077, align 1, !tbaa !12
  %2079 = add nsw i64 %2071, 16
  %2080 = getelementptr inbounds float, float* %3, i64 %2079
  %2081 = bitcast float* %2080 to <8 x float>*
  %2082 = load <8 x float>, <8 x float>* %2081, align 1, !tbaa !12
  %2083 = add nsw i64 %2071, 24
  %2084 = getelementptr inbounds float, float* %3, i64 %2083
  %2085 = bitcast float* %2084 to <8 x float>*
  %2086 = load <8 x float>, <8 x float>* %2085, align 1, !tbaa !12
  %2087 = add nsw i64 %2071, 32
  %2088 = getelementptr inbounds float, float* %3, i64 %2087
  %2089 = bitcast float* %2088 to <8 x float>*
  %2090 = load <8 x float>, <8 x float>* %2089, align 1, !tbaa !12
  %2091 = add nsw i64 %2071, 40
  %2092 = getelementptr inbounds float, float* %3, i64 %2091
  %2093 = bitcast float* %2092 to <8 x float>*
  %2094 = load <8 x float>, <8 x float>* %2093, align 1, !tbaa !12
  %2095 = add nsw i64 %2071, 48
  %2096 = getelementptr inbounds float, float* %3, i64 %2095
  %2097 = bitcast float* %2096 to <8 x float>*
  %2098 = load <8 x float>, <8 x float>* %2097, align 1, !tbaa !12
  %2099 = add nsw i64 %2071, 56
  %2100 = getelementptr inbounds float, float* %3, i64 %2099
  %2101 = bitcast float* %2100 to <8 x float>*
  %2102 = load <8 x float>, <8 x float>* %2101, align 1, !tbaa !12
  %2103 = add nsw i64 %2071, 64
  %2104 = getelementptr inbounds float, float* %3, i64 %2103
  %2105 = bitcast float* %2104 to <8 x float>*
  %2106 = load <8 x float>, <8 x float>* %2105, align 1, !tbaa !12
  %2107 = add nsw i64 %2071, 72
  %2108 = getelementptr inbounds float, float* %3, i64 %2107
  %2109 = bitcast float* %2108 to <8 x float>*
  %2110 = load <8 x float>, <8 x float>* %2109, align 1, !tbaa !12
  %2111 = add nsw i64 %2071, 80
  %2112 = getelementptr inbounds float, float* %3, i64 %2111
  %2113 = bitcast float* %2112 to <8 x float>*
  %2114 = load <8 x float>, <8 x float>* %2113, align 1, !tbaa !12
  %2115 = add nsw i64 %2071, 88
  %2116 = getelementptr inbounds float, float* %3, i64 %2115
  %2117 = bitcast float* %2116 to <8 x float>*
  %2118 = load <8 x float>, <8 x float>* %2117, align 1, !tbaa !12
  %2119 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2074, <8 x float> %80, <8 x float> %2026) #10
  %2120 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2078, <8 x float> %80, <8 x float> %2030) #10
  %2121 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2082, <8 x float> %80, <8 x float> %2034) #10
  %2122 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2086, <8 x float> %80, <8 x float> %2038) #10
  %2123 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2090, <8 x float> %80, <8 x float> %2042) #10
  %2124 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2094, <8 x float> %80, <8 x float> %2046) #10
  %2125 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2098, <8 x float> %80, <8 x float> %2050) #10
  %2126 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2102, <8 x float> %80, <8 x float> %2054) #10
  %2127 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2106, <8 x float> %80, <8 x float> %2058) #10
  %2128 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2110, <8 x float> %80, <8 x float> %2062) #10
  %2129 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2114, <8 x float> %80, <8 x float> %2066) #10
  %2130 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2118, <8 x float> %80, <8 x float> %2070) #10
  store <8 x float> %2119, <8 x float>* %2025, align 1, !tbaa !12
  store <8 x float> %2120, <8 x float>* %2029, align 1, !tbaa !12
  store <8 x float> %2121, <8 x float>* %2033, align 1, !tbaa !12
  store <8 x float> %2122, <8 x float>* %2037, align 1, !tbaa !12
  store <8 x float> %2123, <8 x float>* %2041, align 1, !tbaa !12
  store <8 x float> %2124, <8 x float>* %2045, align 1, !tbaa !12
  store <8 x float> %2125, <8 x float>* %2049, align 1, !tbaa !12
  store <8 x float> %2126, <8 x float>* %2053, align 1, !tbaa !12
  store <8 x float> %2127, <8 x float>* %2057, align 1, !tbaa !12
  store <8 x float> %2128, <8 x float>* %2061, align 1, !tbaa !12
  store <8 x float> %2129, <8 x float>* %2065, align 1, !tbaa !12
  store <8 x float> %2130, <8 x float>* %2069, align 1, !tbaa !12
  %2131 = add nuw nsw i64 %1974, 96
  %2132 = icmp ult i64 %2131, %1807
  br i1 %2132, label %1973, label %1968
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 300
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui12_uk12.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
