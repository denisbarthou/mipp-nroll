; ModuleID = 'codes/matvec_ui10_uk13.cpp'
source_filename = "codes/matvec_ui10_uk13.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui10_uk13.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 80
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 104
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1808, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1808
  %21 = phi i64 [ %1809, %1808 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %1808

88:                                               ; preds = %20
  %89 = zext i32 %86 to i64
  %90 = trunc i64 %21 to i32
  %91 = mul nsw i32 %86, %90
  br label %98

92:                                               ; preds = %98
  br i1 %87, label %93, label %523

93:                                               ; preds = %92
  %94 = trunc i64 %26 to i32
  %95 = mul nsw i32 %86, %94
  %96 = sext i32 %95 to i64
  %97 = zext i32 %86 to i64
  br label %249

98:                                               ; preds = %88, %98
  %99 = phi i64 [ 0, %88 ], [ %241, %98 ]
  %100 = getelementptr inbounds float, float* %5, i64 %99
  %101 = getelementptr inbounds float, float* %100, i64 8
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %3, i64 %99
  %104 = getelementptr inbounds float, float* %103, i64 8
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %100, i64 16
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %103, i64 16
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %100, i64 24
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %103, i64 24
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %100, i64 32
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %103, i64 32
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %100, i64 40
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %103, i64 40
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %100, i64 48
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %103, i64 48
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %100, i64 56
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %103, i64 56
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %100, i64 64
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %103, i64 64
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %100, i64 72
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %103, i64 72
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = getelementptr inbounds float, float* %100, i64 80
  %139 = bitcast float* %138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %139, i32 0, i32 1, i32 1)
  %140 = getelementptr inbounds float, float* %103, i64 80
  %141 = bitcast float* %140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %141, i32 0, i32 1, i32 1)
  %142 = bitcast float* %100 to <8 x float>*
  %143 = load <8 x float>, <8 x float>* %142, align 1, !tbaa !12
  %144 = or i64 %99, 8
  %145 = getelementptr inbounds float, float* %5, i64 %144
  %146 = bitcast float* %145 to <8 x float>*
  %147 = load <8 x float>, <8 x float>* %146, align 1, !tbaa !12
  %148 = add nuw nsw i64 %99, 16
  %149 = getelementptr inbounds float, float* %5, i64 %148
  %150 = bitcast float* %149 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = add nuw nsw i64 %99, 24
  %153 = getelementptr inbounds float, float* %5, i64 %152
  %154 = bitcast float* %153 to <8 x float>*
  %155 = load <8 x float>, <8 x float>* %154, align 1, !tbaa !12
  %156 = add nuw nsw i64 %99, 32
  %157 = getelementptr inbounds float, float* %5, i64 %156
  %158 = bitcast float* %157 to <8 x float>*
  %159 = load <8 x float>, <8 x float>* %158, align 1, !tbaa !12
  %160 = add nuw nsw i64 %99, 40
  %161 = getelementptr inbounds float, float* %5, i64 %160
  %162 = bitcast float* %161 to <8 x float>*
  %163 = load <8 x float>, <8 x float>* %162, align 1, !tbaa !12
  %164 = add nuw nsw i64 %99, 48
  %165 = getelementptr inbounds float, float* %5, i64 %164
  %166 = bitcast float* %165 to <8 x float>*
  %167 = load <8 x float>, <8 x float>* %166, align 1, !tbaa !12
  %168 = add nuw nsw i64 %99, 56
  %169 = getelementptr inbounds float, float* %5, i64 %168
  %170 = bitcast float* %169 to <8 x float>*
  %171 = load <8 x float>, <8 x float>* %170, align 1, !tbaa !12
  %172 = add nuw nsw i64 %99, 64
  %173 = getelementptr inbounds float, float* %5, i64 %172
  %174 = bitcast float* %173 to <8 x float>*
  %175 = load <8 x float>, <8 x float>* %174, align 1, !tbaa !12
  %176 = add nuw nsw i64 %99, 72
  %177 = getelementptr inbounds float, float* %5, i64 %176
  %178 = bitcast float* %177 to <8 x float>*
  %179 = load <8 x float>, <8 x float>* %178, align 1, !tbaa !12
  %180 = trunc i64 %99 to i32
  %181 = add nsw i32 %91, %180
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds float, float* %3, i64 %182
  %184 = bitcast float* %183 to <8 x float>*
  %185 = load <8 x float>, <8 x float>* %184, align 1, !tbaa !12
  %186 = add nsw i32 %181, 8
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds float, float* %3, i64 %187
  %189 = bitcast float* %188 to <8 x float>*
  %190 = load <8 x float>, <8 x float>* %189, align 1, !tbaa !12
  %191 = add nsw i32 %181, 16
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds float, float* %3, i64 %192
  %194 = bitcast float* %193 to <8 x float>*
  %195 = load <8 x float>, <8 x float>* %194, align 1, !tbaa !12
  %196 = add nsw i32 %181, 24
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds float, float* %3, i64 %197
  %199 = bitcast float* %198 to <8 x float>*
  %200 = load <8 x float>, <8 x float>* %199, align 1, !tbaa !12
  %201 = add nsw i32 %181, 32
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds float, float* %3, i64 %202
  %204 = bitcast float* %203 to <8 x float>*
  %205 = load <8 x float>, <8 x float>* %204, align 1, !tbaa !12
  %206 = add nsw i32 %181, 40
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds float, float* %3, i64 %207
  %209 = bitcast float* %208 to <8 x float>*
  %210 = load <8 x float>, <8 x float>* %209, align 1, !tbaa !12
  %211 = add nsw i32 %181, 48
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds float, float* %3, i64 %212
  %214 = bitcast float* %213 to <8 x float>*
  %215 = load <8 x float>, <8 x float>* %214, align 1, !tbaa !12
  %216 = add nsw i32 %181, 56
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds float, float* %3, i64 %217
  %219 = bitcast float* %218 to <8 x float>*
  %220 = load <8 x float>, <8 x float>* %219, align 1, !tbaa !12
  %221 = add nsw i32 %181, 64
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds float, float* %3, i64 %222
  %224 = bitcast float* %223 to <8 x float>*
  %225 = load <8 x float>, <8 x float>* %224, align 1, !tbaa !12
  %226 = add nsw i32 %181, 72
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds float, float* %3, i64 %227
  %229 = bitcast float* %228 to <8 x float>*
  %230 = load <8 x float>, <8 x float>* %229, align 1, !tbaa !12
  %231 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %185, <8 x float> %25, <8 x float> %143) #10
  %232 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %190, <8 x float> %25, <8 x float> %147) #10
  %233 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %195, <8 x float> %25, <8 x float> %151) #10
  %234 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %200, <8 x float> %25, <8 x float> %155) #10
  %235 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %205, <8 x float> %25, <8 x float> %159) #10
  %236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %210, <8 x float> %25, <8 x float> %163) #10
  %237 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %215, <8 x float> %25, <8 x float> %167) #10
  %238 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %220, <8 x float> %25, <8 x float> %171) #10
  %239 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %225, <8 x float> %25, <8 x float> %175) #10
  %240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %230, <8 x float> %25, <8 x float> %179) #10
  store <8 x float> %231, <8 x float>* %142, align 1, !tbaa !12
  store <8 x float> %232, <8 x float>* %146, align 1, !tbaa !12
  store <8 x float> %233, <8 x float>* %150, align 1, !tbaa !12
  store <8 x float> %234, <8 x float>* %154, align 1, !tbaa !12
  store <8 x float> %235, <8 x float>* %158, align 1, !tbaa !12
  store <8 x float> %236, <8 x float>* %162, align 1, !tbaa !12
  store <8 x float> %237, <8 x float>* %166, align 1, !tbaa !12
  store <8 x float> %238, <8 x float>* %170, align 1, !tbaa !12
  store <8 x float> %239, <8 x float>* %174, align 1, !tbaa !12
  store <8 x float> %240, <8 x float>* %178, align 1, !tbaa !12
  %241 = add nuw nsw i64 %99, 80
  %242 = icmp ult i64 %241, %89
  br i1 %242, label %98, label %92

243:                                              ; preds = %249
  br i1 %87, label %244, label %523

244:                                              ; preds = %243
  %245 = trunc i64 %31 to i32
  %246 = mul nsw i32 %86, %245
  %247 = sext i32 %246 to i64
  %248 = zext i32 %86 to i64
  br label %389

249:                                              ; preds = %93, %249
  %250 = phi i64 [ 0, %93 ], [ %381, %249 ]
  %251 = getelementptr inbounds float, float* %5, i64 %250
  %252 = getelementptr inbounds float, float* %251, i64 8
  %253 = bitcast float* %252 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %253, i32 0, i32 1, i32 1)
  %254 = getelementptr inbounds float, float* %3, i64 %250
  %255 = getelementptr inbounds float, float* %254, i64 8
  %256 = bitcast float* %255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %256, i32 0, i32 1, i32 1)
  %257 = getelementptr inbounds float, float* %251, i64 16
  %258 = bitcast float* %257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %258, i32 0, i32 1, i32 1)
  %259 = getelementptr inbounds float, float* %254, i64 16
  %260 = bitcast float* %259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %260, i32 0, i32 1, i32 1)
  %261 = getelementptr inbounds float, float* %251, i64 24
  %262 = bitcast float* %261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %262, i32 0, i32 1, i32 1)
  %263 = getelementptr inbounds float, float* %254, i64 24
  %264 = bitcast float* %263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %264, i32 0, i32 1, i32 1)
  %265 = getelementptr inbounds float, float* %251, i64 32
  %266 = bitcast float* %265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %266, i32 0, i32 1, i32 1)
  %267 = getelementptr inbounds float, float* %254, i64 32
  %268 = bitcast float* %267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %268, i32 0, i32 1, i32 1)
  %269 = getelementptr inbounds float, float* %251, i64 40
  %270 = bitcast float* %269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %270, i32 0, i32 1, i32 1)
  %271 = getelementptr inbounds float, float* %254, i64 40
  %272 = bitcast float* %271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %272, i32 0, i32 1, i32 1)
  %273 = getelementptr inbounds float, float* %251, i64 48
  %274 = bitcast float* %273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %274, i32 0, i32 1, i32 1)
  %275 = getelementptr inbounds float, float* %254, i64 48
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %276, i32 0, i32 1, i32 1)
  %277 = getelementptr inbounds float, float* %251, i64 56
  %278 = bitcast float* %277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %278, i32 0, i32 1, i32 1)
  %279 = getelementptr inbounds float, float* %254, i64 56
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %251, i64 64
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %254, i64 64
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %251, i64 72
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %254, i64 72
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %251, i64 80
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %254, i64 80
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = bitcast float* %251 to <8 x float>*
  %294 = load <8 x float>, <8 x float>* %293, align 1, !tbaa !12
  %295 = or i64 %250, 8
  %296 = getelementptr inbounds float, float* %5, i64 %295
  %297 = bitcast float* %296 to <8 x float>*
  %298 = load <8 x float>, <8 x float>* %297, align 1, !tbaa !12
  %299 = add nuw nsw i64 %250, 16
  %300 = getelementptr inbounds float, float* %5, i64 %299
  %301 = bitcast float* %300 to <8 x float>*
  %302 = load <8 x float>, <8 x float>* %301, align 1, !tbaa !12
  %303 = add nuw nsw i64 %250, 24
  %304 = getelementptr inbounds float, float* %5, i64 %303
  %305 = bitcast float* %304 to <8 x float>*
  %306 = load <8 x float>, <8 x float>* %305, align 1, !tbaa !12
  %307 = add nuw nsw i64 %250, 32
  %308 = getelementptr inbounds float, float* %5, i64 %307
  %309 = bitcast float* %308 to <8 x float>*
  %310 = load <8 x float>, <8 x float>* %309, align 1, !tbaa !12
  %311 = add nuw nsw i64 %250, 40
  %312 = getelementptr inbounds float, float* %5, i64 %311
  %313 = bitcast float* %312 to <8 x float>*
  %314 = load <8 x float>, <8 x float>* %313, align 1, !tbaa !12
  %315 = add nuw nsw i64 %250, 48
  %316 = getelementptr inbounds float, float* %5, i64 %315
  %317 = bitcast float* %316 to <8 x float>*
  %318 = load <8 x float>, <8 x float>* %317, align 1, !tbaa !12
  %319 = add nuw nsw i64 %250, 56
  %320 = getelementptr inbounds float, float* %5, i64 %319
  %321 = bitcast float* %320 to <8 x float>*
  %322 = load <8 x float>, <8 x float>* %321, align 1, !tbaa !12
  %323 = add nuw nsw i64 %250, 64
  %324 = getelementptr inbounds float, float* %5, i64 %323
  %325 = bitcast float* %324 to <8 x float>*
  %326 = load <8 x float>, <8 x float>* %325, align 1, !tbaa !12
  %327 = add nuw nsw i64 %250, 72
  %328 = getelementptr inbounds float, float* %5, i64 %327
  %329 = bitcast float* %328 to <8 x float>*
  %330 = load <8 x float>, <8 x float>* %329, align 1, !tbaa !12
  %331 = add nsw i64 %250, %96
  %332 = getelementptr inbounds float, float* %3, i64 %331
  %333 = bitcast float* %332 to <8 x float>*
  %334 = load <8 x float>, <8 x float>* %333, align 1, !tbaa !12
  %335 = add nsw i64 %331, 8
  %336 = getelementptr inbounds float, float* %3, i64 %335
  %337 = bitcast float* %336 to <8 x float>*
  %338 = load <8 x float>, <8 x float>* %337, align 1, !tbaa !12
  %339 = add nsw i64 %331, 16
  %340 = getelementptr inbounds float, float* %3, i64 %339
  %341 = bitcast float* %340 to <8 x float>*
  %342 = load <8 x float>, <8 x float>* %341, align 1, !tbaa !12
  %343 = add nsw i64 %331, 24
  %344 = getelementptr inbounds float, float* %3, i64 %343
  %345 = bitcast float* %344 to <8 x float>*
  %346 = load <8 x float>, <8 x float>* %345, align 1, !tbaa !12
  %347 = add nsw i64 %331, 32
  %348 = getelementptr inbounds float, float* %3, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %350 = load <8 x float>, <8 x float>* %349, align 1, !tbaa !12
  %351 = add nsw i64 %331, 40
  %352 = getelementptr inbounds float, float* %3, i64 %351
  %353 = bitcast float* %352 to <8 x float>*
  %354 = load <8 x float>, <8 x float>* %353, align 1, !tbaa !12
  %355 = add nsw i64 %331, 48
  %356 = getelementptr inbounds float, float* %3, i64 %355
  %357 = bitcast float* %356 to <8 x float>*
  %358 = load <8 x float>, <8 x float>* %357, align 1, !tbaa !12
  %359 = add nsw i64 %331, 56
  %360 = getelementptr inbounds float, float* %3, i64 %359
  %361 = bitcast float* %360 to <8 x float>*
  %362 = load <8 x float>, <8 x float>* %361, align 1, !tbaa !12
  %363 = add nsw i64 %331, 64
  %364 = getelementptr inbounds float, float* %3, i64 %363
  %365 = bitcast float* %364 to <8 x float>*
  %366 = load <8 x float>, <8 x float>* %365, align 1, !tbaa !12
  %367 = add nsw i64 %331, 72
  %368 = getelementptr inbounds float, float* %3, i64 %367
  %369 = bitcast float* %368 to <8 x float>*
  %370 = load <8 x float>, <8 x float>* %369, align 1, !tbaa !12
  %371 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %334, <8 x float> %30, <8 x float> %294) #10
  %372 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %338, <8 x float> %30, <8 x float> %298) #10
  %373 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %342, <8 x float> %30, <8 x float> %302) #10
  %374 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %346, <8 x float> %30, <8 x float> %306) #10
  %375 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %350, <8 x float> %30, <8 x float> %310) #10
  %376 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %354, <8 x float> %30, <8 x float> %314) #10
  %377 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %358, <8 x float> %30, <8 x float> %318) #10
  %378 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %362, <8 x float> %30, <8 x float> %322) #10
  %379 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %366, <8 x float> %30, <8 x float> %326) #10
  %380 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %370, <8 x float> %30, <8 x float> %330) #10
  store <8 x float> %371, <8 x float>* %293, align 1, !tbaa !12
  store <8 x float> %372, <8 x float>* %297, align 1, !tbaa !12
  store <8 x float> %373, <8 x float>* %301, align 1, !tbaa !12
  store <8 x float> %374, <8 x float>* %305, align 1, !tbaa !12
  store <8 x float> %375, <8 x float>* %309, align 1, !tbaa !12
  store <8 x float> %376, <8 x float>* %313, align 1, !tbaa !12
  store <8 x float> %377, <8 x float>* %317, align 1, !tbaa !12
  store <8 x float> %378, <8 x float>* %321, align 1, !tbaa !12
  store <8 x float> %379, <8 x float>* %325, align 1, !tbaa !12
  store <8 x float> %380, <8 x float>* %329, align 1, !tbaa !12
  %381 = add nuw nsw i64 %250, 80
  %382 = icmp ult i64 %381, %97
  br i1 %382, label %249, label %243

383:                                              ; preds = %389
  br i1 %87, label %384, label %523

384:                                              ; preds = %383
  %385 = trunc i64 %36 to i32
  %386 = mul nsw i32 %86, %385
  %387 = sext i32 %386 to i64
  %388 = zext i32 %86 to i64
  br label %530

389:                                              ; preds = %244, %389
  %390 = phi i64 [ 0, %244 ], [ %521, %389 ]
  %391 = getelementptr inbounds float, float* %5, i64 %390
  %392 = getelementptr inbounds float, float* %391, i64 8
  %393 = bitcast float* %392 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %393, i32 0, i32 1, i32 1)
  %394 = getelementptr inbounds float, float* %3, i64 %390
  %395 = getelementptr inbounds float, float* %394, i64 8
  %396 = bitcast float* %395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %396, i32 0, i32 1, i32 1)
  %397 = getelementptr inbounds float, float* %391, i64 16
  %398 = bitcast float* %397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %398, i32 0, i32 1, i32 1)
  %399 = getelementptr inbounds float, float* %394, i64 16
  %400 = bitcast float* %399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %400, i32 0, i32 1, i32 1)
  %401 = getelementptr inbounds float, float* %391, i64 24
  %402 = bitcast float* %401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %402, i32 0, i32 1, i32 1)
  %403 = getelementptr inbounds float, float* %394, i64 24
  %404 = bitcast float* %403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %404, i32 0, i32 1, i32 1)
  %405 = getelementptr inbounds float, float* %391, i64 32
  %406 = bitcast float* %405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %406, i32 0, i32 1, i32 1)
  %407 = getelementptr inbounds float, float* %394, i64 32
  %408 = bitcast float* %407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %408, i32 0, i32 1, i32 1)
  %409 = getelementptr inbounds float, float* %391, i64 40
  %410 = bitcast float* %409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %410, i32 0, i32 1, i32 1)
  %411 = getelementptr inbounds float, float* %394, i64 40
  %412 = bitcast float* %411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %412, i32 0, i32 1, i32 1)
  %413 = getelementptr inbounds float, float* %391, i64 48
  %414 = bitcast float* %413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %414, i32 0, i32 1, i32 1)
  %415 = getelementptr inbounds float, float* %394, i64 48
  %416 = bitcast float* %415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %416, i32 0, i32 1, i32 1)
  %417 = getelementptr inbounds float, float* %391, i64 56
  %418 = bitcast float* %417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %418, i32 0, i32 1, i32 1)
  %419 = getelementptr inbounds float, float* %394, i64 56
  %420 = bitcast float* %419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %420, i32 0, i32 1, i32 1)
  %421 = getelementptr inbounds float, float* %391, i64 64
  %422 = bitcast float* %421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %422, i32 0, i32 1, i32 1)
  %423 = getelementptr inbounds float, float* %394, i64 64
  %424 = bitcast float* %423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %424, i32 0, i32 1, i32 1)
  %425 = getelementptr inbounds float, float* %391, i64 72
  %426 = bitcast float* %425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %426, i32 0, i32 1, i32 1)
  %427 = getelementptr inbounds float, float* %394, i64 72
  %428 = bitcast float* %427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %428, i32 0, i32 1, i32 1)
  %429 = getelementptr inbounds float, float* %391, i64 80
  %430 = bitcast float* %429 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %430, i32 0, i32 1, i32 1)
  %431 = getelementptr inbounds float, float* %394, i64 80
  %432 = bitcast float* %431 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %432, i32 0, i32 1, i32 1)
  %433 = bitcast float* %391 to <8 x float>*
  %434 = load <8 x float>, <8 x float>* %433, align 1, !tbaa !12
  %435 = or i64 %390, 8
  %436 = getelementptr inbounds float, float* %5, i64 %435
  %437 = bitcast float* %436 to <8 x float>*
  %438 = load <8 x float>, <8 x float>* %437, align 1, !tbaa !12
  %439 = add nuw nsw i64 %390, 16
  %440 = getelementptr inbounds float, float* %5, i64 %439
  %441 = bitcast float* %440 to <8 x float>*
  %442 = load <8 x float>, <8 x float>* %441, align 1, !tbaa !12
  %443 = add nuw nsw i64 %390, 24
  %444 = getelementptr inbounds float, float* %5, i64 %443
  %445 = bitcast float* %444 to <8 x float>*
  %446 = load <8 x float>, <8 x float>* %445, align 1, !tbaa !12
  %447 = add nuw nsw i64 %390, 32
  %448 = getelementptr inbounds float, float* %5, i64 %447
  %449 = bitcast float* %448 to <8 x float>*
  %450 = load <8 x float>, <8 x float>* %449, align 1, !tbaa !12
  %451 = add nuw nsw i64 %390, 40
  %452 = getelementptr inbounds float, float* %5, i64 %451
  %453 = bitcast float* %452 to <8 x float>*
  %454 = load <8 x float>, <8 x float>* %453, align 1, !tbaa !12
  %455 = add nuw nsw i64 %390, 48
  %456 = getelementptr inbounds float, float* %5, i64 %455
  %457 = bitcast float* %456 to <8 x float>*
  %458 = load <8 x float>, <8 x float>* %457, align 1, !tbaa !12
  %459 = add nuw nsw i64 %390, 56
  %460 = getelementptr inbounds float, float* %5, i64 %459
  %461 = bitcast float* %460 to <8 x float>*
  %462 = load <8 x float>, <8 x float>* %461, align 1, !tbaa !12
  %463 = add nuw nsw i64 %390, 64
  %464 = getelementptr inbounds float, float* %5, i64 %463
  %465 = bitcast float* %464 to <8 x float>*
  %466 = load <8 x float>, <8 x float>* %465, align 1, !tbaa !12
  %467 = add nuw nsw i64 %390, 72
  %468 = getelementptr inbounds float, float* %5, i64 %467
  %469 = bitcast float* %468 to <8 x float>*
  %470 = load <8 x float>, <8 x float>* %469, align 1, !tbaa !12
  %471 = add nsw i64 %390, %247
  %472 = getelementptr inbounds float, float* %3, i64 %471
  %473 = bitcast float* %472 to <8 x float>*
  %474 = load <8 x float>, <8 x float>* %473, align 1, !tbaa !12
  %475 = add nsw i64 %471, 8
  %476 = getelementptr inbounds float, float* %3, i64 %475
  %477 = bitcast float* %476 to <8 x float>*
  %478 = load <8 x float>, <8 x float>* %477, align 1, !tbaa !12
  %479 = add nsw i64 %471, 16
  %480 = getelementptr inbounds float, float* %3, i64 %479
  %481 = bitcast float* %480 to <8 x float>*
  %482 = load <8 x float>, <8 x float>* %481, align 1, !tbaa !12
  %483 = add nsw i64 %471, 24
  %484 = getelementptr inbounds float, float* %3, i64 %483
  %485 = bitcast float* %484 to <8 x float>*
  %486 = load <8 x float>, <8 x float>* %485, align 1, !tbaa !12
  %487 = add nsw i64 %471, 32
  %488 = getelementptr inbounds float, float* %3, i64 %487
  %489 = bitcast float* %488 to <8 x float>*
  %490 = load <8 x float>, <8 x float>* %489, align 1, !tbaa !12
  %491 = add nsw i64 %471, 40
  %492 = getelementptr inbounds float, float* %3, i64 %491
  %493 = bitcast float* %492 to <8 x float>*
  %494 = load <8 x float>, <8 x float>* %493, align 1, !tbaa !12
  %495 = add nsw i64 %471, 48
  %496 = getelementptr inbounds float, float* %3, i64 %495
  %497 = bitcast float* %496 to <8 x float>*
  %498 = load <8 x float>, <8 x float>* %497, align 1, !tbaa !12
  %499 = add nsw i64 %471, 56
  %500 = getelementptr inbounds float, float* %3, i64 %499
  %501 = bitcast float* %500 to <8 x float>*
  %502 = load <8 x float>, <8 x float>* %501, align 1, !tbaa !12
  %503 = add nsw i64 %471, 64
  %504 = getelementptr inbounds float, float* %3, i64 %503
  %505 = bitcast float* %504 to <8 x float>*
  %506 = load <8 x float>, <8 x float>* %505, align 1, !tbaa !12
  %507 = add nsw i64 %471, 72
  %508 = getelementptr inbounds float, float* %3, i64 %507
  %509 = bitcast float* %508 to <8 x float>*
  %510 = load <8 x float>, <8 x float>* %509, align 1, !tbaa !12
  %511 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %474, <8 x float> %35, <8 x float> %434) #10
  %512 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %478, <8 x float> %35, <8 x float> %438) #10
  %513 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %482, <8 x float> %35, <8 x float> %442) #10
  %514 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %486, <8 x float> %35, <8 x float> %446) #10
  %515 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %490, <8 x float> %35, <8 x float> %450) #10
  %516 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %494, <8 x float> %35, <8 x float> %454) #10
  %517 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %498, <8 x float> %35, <8 x float> %458) #10
  %518 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %502, <8 x float> %35, <8 x float> %462) #10
  %519 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %506, <8 x float> %35, <8 x float> %466) #10
  %520 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %510, <8 x float> %35, <8 x float> %470) #10
  store <8 x float> %511, <8 x float>* %433, align 1, !tbaa !12
  store <8 x float> %512, <8 x float>* %437, align 1, !tbaa !12
  store <8 x float> %513, <8 x float>* %441, align 1, !tbaa !12
  store <8 x float> %514, <8 x float>* %445, align 1, !tbaa !12
  store <8 x float> %515, <8 x float>* %449, align 1, !tbaa !12
  store <8 x float> %516, <8 x float>* %453, align 1, !tbaa !12
  store <8 x float> %517, <8 x float>* %457, align 1, !tbaa !12
  store <8 x float> %518, <8 x float>* %461, align 1, !tbaa !12
  store <8 x float> %519, <8 x float>* %465, align 1, !tbaa !12
  store <8 x float> %520, <8 x float>* %469, align 1, !tbaa !12
  %521 = add nuw nsw i64 %390, 80
  %522 = icmp ult i64 %521, %248
  br i1 %522, label %389, label %383

523:                                              ; preds = %530, %92, %243, %383
  %524 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %525 = icmp sgt i32 %524, 0
  br i1 %525, label %526, label %1808

526:                                              ; preds = %523
  %527 = zext i32 %524 to i64
  %528 = trunc i64 %41 to i32
  %529 = mul nsw i32 %524, %528
  br label %670

530:                                              ; preds = %384, %530
  %531 = phi i64 [ 0, %384 ], [ %662, %530 ]
  %532 = getelementptr inbounds float, float* %5, i64 %531
  %533 = getelementptr inbounds float, float* %532, i64 8
  %534 = bitcast float* %533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %534, i32 0, i32 1, i32 1)
  %535 = getelementptr inbounds float, float* %3, i64 %531
  %536 = getelementptr inbounds float, float* %535, i64 8
  %537 = bitcast float* %536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %537, i32 0, i32 1, i32 1)
  %538 = getelementptr inbounds float, float* %532, i64 16
  %539 = bitcast float* %538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %539, i32 0, i32 1, i32 1)
  %540 = getelementptr inbounds float, float* %535, i64 16
  %541 = bitcast float* %540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %541, i32 0, i32 1, i32 1)
  %542 = getelementptr inbounds float, float* %532, i64 24
  %543 = bitcast float* %542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %543, i32 0, i32 1, i32 1)
  %544 = getelementptr inbounds float, float* %535, i64 24
  %545 = bitcast float* %544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %545, i32 0, i32 1, i32 1)
  %546 = getelementptr inbounds float, float* %532, i64 32
  %547 = bitcast float* %546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %547, i32 0, i32 1, i32 1)
  %548 = getelementptr inbounds float, float* %535, i64 32
  %549 = bitcast float* %548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %549, i32 0, i32 1, i32 1)
  %550 = getelementptr inbounds float, float* %532, i64 40
  %551 = bitcast float* %550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %551, i32 0, i32 1, i32 1)
  %552 = getelementptr inbounds float, float* %535, i64 40
  %553 = bitcast float* %552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %553, i32 0, i32 1, i32 1)
  %554 = getelementptr inbounds float, float* %532, i64 48
  %555 = bitcast float* %554 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %555, i32 0, i32 1, i32 1)
  %556 = getelementptr inbounds float, float* %535, i64 48
  %557 = bitcast float* %556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %557, i32 0, i32 1, i32 1)
  %558 = getelementptr inbounds float, float* %532, i64 56
  %559 = bitcast float* %558 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %559, i32 0, i32 1, i32 1)
  %560 = getelementptr inbounds float, float* %535, i64 56
  %561 = bitcast float* %560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %561, i32 0, i32 1, i32 1)
  %562 = getelementptr inbounds float, float* %532, i64 64
  %563 = bitcast float* %562 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %563, i32 0, i32 1, i32 1)
  %564 = getelementptr inbounds float, float* %535, i64 64
  %565 = bitcast float* %564 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %565, i32 0, i32 1, i32 1)
  %566 = getelementptr inbounds float, float* %532, i64 72
  %567 = bitcast float* %566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %567, i32 0, i32 1, i32 1)
  %568 = getelementptr inbounds float, float* %535, i64 72
  %569 = bitcast float* %568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %569, i32 0, i32 1, i32 1)
  %570 = getelementptr inbounds float, float* %532, i64 80
  %571 = bitcast float* %570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %571, i32 0, i32 1, i32 1)
  %572 = getelementptr inbounds float, float* %535, i64 80
  %573 = bitcast float* %572 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %573, i32 0, i32 1, i32 1)
  %574 = bitcast float* %532 to <8 x float>*
  %575 = load <8 x float>, <8 x float>* %574, align 1, !tbaa !12
  %576 = or i64 %531, 8
  %577 = getelementptr inbounds float, float* %5, i64 %576
  %578 = bitcast float* %577 to <8 x float>*
  %579 = load <8 x float>, <8 x float>* %578, align 1, !tbaa !12
  %580 = add nuw nsw i64 %531, 16
  %581 = getelementptr inbounds float, float* %5, i64 %580
  %582 = bitcast float* %581 to <8 x float>*
  %583 = load <8 x float>, <8 x float>* %582, align 1, !tbaa !12
  %584 = add nuw nsw i64 %531, 24
  %585 = getelementptr inbounds float, float* %5, i64 %584
  %586 = bitcast float* %585 to <8 x float>*
  %587 = load <8 x float>, <8 x float>* %586, align 1, !tbaa !12
  %588 = add nuw nsw i64 %531, 32
  %589 = getelementptr inbounds float, float* %5, i64 %588
  %590 = bitcast float* %589 to <8 x float>*
  %591 = load <8 x float>, <8 x float>* %590, align 1, !tbaa !12
  %592 = add nuw nsw i64 %531, 40
  %593 = getelementptr inbounds float, float* %5, i64 %592
  %594 = bitcast float* %593 to <8 x float>*
  %595 = load <8 x float>, <8 x float>* %594, align 1, !tbaa !12
  %596 = add nuw nsw i64 %531, 48
  %597 = getelementptr inbounds float, float* %5, i64 %596
  %598 = bitcast float* %597 to <8 x float>*
  %599 = load <8 x float>, <8 x float>* %598, align 1, !tbaa !12
  %600 = add nuw nsw i64 %531, 56
  %601 = getelementptr inbounds float, float* %5, i64 %600
  %602 = bitcast float* %601 to <8 x float>*
  %603 = load <8 x float>, <8 x float>* %602, align 1, !tbaa !12
  %604 = add nuw nsw i64 %531, 64
  %605 = getelementptr inbounds float, float* %5, i64 %604
  %606 = bitcast float* %605 to <8 x float>*
  %607 = load <8 x float>, <8 x float>* %606, align 1, !tbaa !12
  %608 = add nuw nsw i64 %531, 72
  %609 = getelementptr inbounds float, float* %5, i64 %608
  %610 = bitcast float* %609 to <8 x float>*
  %611 = load <8 x float>, <8 x float>* %610, align 1, !tbaa !12
  %612 = add nsw i64 %531, %387
  %613 = getelementptr inbounds float, float* %3, i64 %612
  %614 = bitcast float* %613 to <8 x float>*
  %615 = load <8 x float>, <8 x float>* %614, align 1, !tbaa !12
  %616 = add nsw i64 %612, 8
  %617 = getelementptr inbounds float, float* %3, i64 %616
  %618 = bitcast float* %617 to <8 x float>*
  %619 = load <8 x float>, <8 x float>* %618, align 1, !tbaa !12
  %620 = add nsw i64 %612, 16
  %621 = getelementptr inbounds float, float* %3, i64 %620
  %622 = bitcast float* %621 to <8 x float>*
  %623 = load <8 x float>, <8 x float>* %622, align 1, !tbaa !12
  %624 = add nsw i64 %612, 24
  %625 = getelementptr inbounds float, float* %3, i64 %624
  %626 = bitcast float* %625 to <8 x float>*
  %627 = load <8 x float>, <8 x float>* %626, align 1, !tbaa !12
  %628 = add nsw i64 %612, 32
  %629 = getelementptr inbounds float, float* %3, i64 %628
  %630 = bitcast float* %629 to <8 x float>*
  %631 = load <8 x float>, <8 x float>* %630, align 1, !tbaa !12
  %632 = add nsw i64 %612, 40
  %633 = getelementptr inbounds float, float* %3, i64 %632
  %634 = bitcast float* %633 to <8 x float>*
  %635 = load <8 x float>, <8 x float>* %634, align 1, !tbaa !12
  %636 = add nsw i64 %612, 48
  %637 = getelementptr inbounds float, float* %3, i64 %636
  %638 = bitcast float* %637 to <8 x float>*
  %639 = load <8 x float>, <8 x float>* %638, align 1, !tbaa !12
  %640 = add nsw i64 %612, 56
  %641 = getelementptr inbounds float, float* %3, i64 %640
  %642 = bitcast float* %641 to <8 x float>*
  %643 = load <8 x float>, <8 x float>* %642, align 1, !tbaa !12
  %644 = add nsw i64 %612, 64
  %645 = getelementptr inbounds float, float* %3, i64 %644
  %646 = bitcast float* %645 to <8 x float>*
  %647 = load <8 x float>, <8 x float>* %646, align 1, !tbaa !12
  %648 = add nsw i64 %612, 72
  %649 = getelementptr inbounds float, float* %3, i64 %648
  %650 = bitcast float* %649 to <8 x float>*
  %651 = load <8 x float>, <8 x float>* %650, align 1, !tbaa !12
  %652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %615, <8 x float> %40, <8 x float> %575) #10
  %653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %619, <8 x float> %40, <8 x float> %579) #10
  %654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %623, <8 x float> %40, <8 x float> %583) #10
  %655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %627, <8 x float> %40, <8 x float> %587) #10
  %656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %631, <8 x float> %40, <8 x float> %591) #10
  %657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %635, <8 x float> %40, <8 x float> %595) #10
  %658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %639, <8 x float> %40, <8 x float> %599) #10
  %659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %643, <8 x float> %40, <8 x float> %603) #10
  %660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %647, <8 x float> %40, <8 x float> %607) #10
  %661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %651, <8 x float> %40, <8 x float> %611) #10
  store <8 x float> %652, <8 x float>* %574, align 1, !tbaa !12
  store <8 x float> %653, <8 x float>* %578, align 1, !tbaa !12
  store <8 x float> %654, <8 x float>* %582, align 1, !tbaa !12
  store <8 x float> %655, <8 x float>* %586, align 1, !tbaa !12
  store <8 x float> %656, <8 x float>* %590, align 1, !tbaa !12
  store <8 x float> %657, <8 x float>* %594, align 1, !tbaa !12
  store <8 x float> %658, <8 x float>* %598, align 1, !tbaa !12
  store <8 x float> %659, <8 x float>* %602, align 1, !tbaa !12
  store <8 x float> %660, <8 x float>* %606, align 1, !tbaa !12
  store <8 x float> %661, <8 x float>* %610, align 1, !tbaa !12
  %662 = add nuw nsw i64 %531, 80
  %663 = icmp ult i64 %662, %388
  br i1 %663, label %530, label %523

664:                                              ; preds = %670
  br i1 %525, label %665, label %1095

665:                                              ; preds = %664
  %666 = trunc i64 %46 to i32
  %667 = mul nsw i32 %524, %666
  %668 = sext i32 %667 to i64
  %669 = zext i32 %524 to i64
  br label %821

670:                                              ; preds = %526, %670
  %671 = phi i64 [ 0, %526 ], [ %813, %670 ]
  %672 = getelementptr inbounds float, float* %5, i64 %671
  %673 = getelementptr inbounds float, float* %672, i64 8
  %674 = bitcast float* %673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %674, i32 0, i32 1, i32 1)
  %675 = getelementptr inbounds float, float* %3, i64 %671
  %676 = getelementptr inbounds float, float* %675, i64 8
  %677 = bitcast float* %676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %677, i32 0, i32 1, i32 1)
  %678 = getelementptr inbounds float, float* %672, i64 16
  %679 = bitcast float* %678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %679, i32 0, i32 1, i32 1)
  %680 = getelementptr inbounds float, float* %675, i64 16
  %681 = bitcast float* %680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %681, i32 0, i32 1, i32 1)
  %682 = getelementptr inbounds float, float* %672, i64 24
  %683 = bitcast float* %682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %683, i32 0, i32 1, i32 1)
  %684 = getelementptr inbounds float, float* %675, i64 24
  %685 = bitcast float* %684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %685, i32 0, i32 1, i32 1)
  %686 = getelementptr inbounds float, float* %672, i64 32
  %687 = bitcast float* %686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %687, i32 0, i32 1, i32 1)
  %688 = getelementptr inbounds float, float* %675, i64 32
  %689 = bitcast float* %688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %689, i32 0, i32 1, i32 1)
  %690 = getelementptr inbounds float, float* %672, i64 40
  %691 = bitcast float* %690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %691, i32 0, i32 1, i32 1)
  %692 = getelementptr inbounds float, float* %675, i64 40
  %693 = bitcast float* %692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %693, i32 0, i32 1, i32 1)
  %694 = getelementptr inbounds float, float* %672, i64 48
  %695 = bitcast float* %694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %695, i32 0, i32 1, i32 1)
  %696 = getelementptr inbounds float, float* %675, i64 48
  %697 = bitcast float* %696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %697, i32 0, i32 1, i32 1)
  %698 = getelementptr inbounds float, float* %672, i64 56
  %699 = bitcast float* %698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %699, i32 0, i32 1, i32 1)
  %700 = getelementptr inbounds float, float* %675, i64 56
  %701 = bitcast float* %700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %701, i32 0, i32 1, i32 1)
  %702 = getelementptr inbounds float, float* %672, i64 64
  %703 = bitcast float* %702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %703, i32 0, i32 1, i32 1)
  %704 = getelementptr inbounds float, float* %675, i64 64
  %705 = bitcast float* %704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %705, i32 0, i32 1, i32 1)
  %706 = getelementptr inbounds float, float* %672, i64 72
  %707 = bitcast float* %706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %707, i32 0, i32 1, i32 1)
  %708 = getelementptr inbounds float, float* %675, i64 72
  %709 = bitcast float* %708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %709, i32 0, i32 1, i32 1)
  %710 = getelementptr inbounds float, float* %672, i64 80
  %711 = bitcast float* %710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %711, i32 0, i32 1, i32 1)
  %712 = getelementptr inbounds float, float* %675, i64 80
  %713 = bitcast float* %712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %713, i32 0, i32 1, i32 1)
  %714 = bitcast float* %672 to <8 x float>*
  %715 = load <8 x float>, <8 x float>* %714, align 1, !tbaa !12
  %716 = or i64 %671, 8
  %717 = getelementptr inbounds float, float* %5, i64 %716
  %718 = bitcast float* %717 to <8 x float>*
  %719 = load <8 x float>, <8 x float>* %718, align 1, !tbaa !12
  %720 = add nuw nsw i64 %671, 16
  %721 = getelementptr inbounds float, float* %5, i64 %720
  %722 = bitcast float* %721 to <8 x float>*
  %723 = load <8 x float>, <8 x float>* %722, align 1, !tbaa !12
  %724 = add nuw nsw i64 %671, 24
  %725 = getelementptr inbounds float, float* %5, i64 %724
  %726 = bitcast float* %725 to <8 x float>*
  %727 = load <8 x float>, <8 x float>* %726, align 1, !tbaa !12
  %728 = add nuw nsw i64 %671, 32
  %729 = getelementptr inbounds float, float* %5, i64 %728
  %730 = bitcast float* %729 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = add nuw nsw i64 %671, 40
  %733 = getelementptr inbounds float, float* %5, i64 %732
  %734 = bitcast float* %733 to <8 x float>*
  %735 = load <8 x float>, <8 x float>* %734, align 1, !tbaa !12
  %736 = add nuw nsw i64 %671, 48
  %737 = getelementptr inbounds float, float* %5, i64 %736
  %738 = bitcast float* %737 to <8 x float>*
  %739 = load <8 x float>, <8 x float>* %738, align 1, !tbaa !12
  %740 = add nuw nsw i64 %671, 56
  %741 = getelementptr inbounds float, float* %5, i64 %740
  %742 = bitcast float* %741 to <8 x float>*
  %743 = load <8 x float>, <8 x float>* %742, align 1, !tbaa !12
  %744 = add nuw nsw i64 %671, 64
  %745 = getelementptr inbounds float, float* %5, i64 %744
  %746 = bitcast float* %745 to <8 x float>*
  %747 = load <8 x float>, <8 x float>* %746, align 1, !tbaa !12
  %748 = add nuw nsw i64 %671, 72
  %749 = getelementptr inbounds float, float* %5, i64 %748
  %750 = bitcast float* %749 to <8 x float>*
  %751 = load <8 x float>, <8 x float>* %750, align 1, !tbaa !12
  %752 = trunc i64 %671 to i32
  %753 = add nsw i32 %529, %752
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds float, float* %3, i64 %754
  %756 = bitcast float* %755 to <8 x float>*
  %757 = load <8 x float>, <8 x float>* %756, align 1, !tbaa !12
  %758 = add nsw i32 %753, 8
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds float, float* %3, i64 %759
  %761 = bitcast float* %760 to <8 x float>*
  %762 = load <8 x float>, <8 x float>* %761, align 1, !tbaa !12
  %763 = add nsw i32 %753, 16
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds float, float* %3, i64 %764
  %766 = bitcast float* %765 to <8 x float>*
  %767 = load <8 x float>, <8 x float>* %766, align 1, !tbaa !12
  %768 = add nsw i32 %753, 24
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds float, float* %3, i64 %769
  %771 = bitcast float* %770 to <8 x float>*
  %772 = load <8 x float>, <8 x float>* %771, align 1, !tbaa !12
  %773 = add nsw i32 %753, 32
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds float, float* %3, i64 %774
  %776 = bitcast float* %775 to <8 x float>*
  %777 = load <8 x float>, <8 x float>* %776, align 1, !tbaa !12
  %778 = add nsw i32 %753, 40
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds float, float* %3, i64 %779
  %781 = bitcast float* %780 to <8 x float>*
  %782 = load <8 x float>, <8 x float>* %781, align 1, !tbaa !12
  %783 = add nsw i32 %753, 48
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds float, float* %3, i64 %784
  %786 = bitcast float* %785 to <8 x float>*
  %787 = load <8 x float>, <8 x float>* %786, align 1, !tbaa !12
  %788 = add nsw i32 %753, 56
  %789 = sext i32 %788 to i64
  %790 = getelementptr inbounds float, float* %3, i64 %789
  %791 = bitcast float* %790 to <8 x float>*
  %792 = load <8 x float>, <8 x float>* %791, align 1, !tbaa !12
  %793 = add nsw i32 %753, 64
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds float, float* %3, i64 %794
  %796 = bitcast float* %795 to <8 x float>*
  %797 = load <8 x float>, <8 x float>* %796, align 1, !tbaa !12
  %798 = add nsw i32 %753, 72
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds float, float* %3, i64 %799
  %801 = bitcast float* %800 to <8 x float>*
  %802 = load <8 x float>, <8 x float>* %801, align 1, !tbaa !12
  %803 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %757, <8 x float> %45, <8 x float> %715) #10
  %804 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %762, <8 x float> %45, <8 x float> %719) #10
  %805 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %767, <8 x float> %45, <8 x float> %723) #10
  %806 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %772, <8 x float> %45, <8 x float> %727) #10
  %807 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %777, <8 x float> %45, <8 x float> %731) #10
  %808 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %782, <8 x float> %45, <8 x float> %735) #10
  %809 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %787, <8 x float> %45, <8 x float> %739) #10
  %810 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %792, <8 x float> %45, <8 x float> %743) #10
  %811 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %797, <8 x float> %45, <8 x float> %747) #10
  %812 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %802, <8 x float> %45, <8 x float> %751) #10
  store <8 x float> %803, <8 x float>* %714, align 1, !tbaa !12
  store <8 x float> %804, <8 x float>* %718, align 1, !tbaa !12
  store <8 x float> %805, <8 x float>* %722, align 1, !tbaa !12
  store <8 x float> %806, <8 x float>* %726, align 1, !tbaa !12
  store <8 x float> %807, <8 x float>* %730, align 1, !tbaa !12
  store <8 x float> %808, <8 x float>* %734, align 1, !tbaa !12
  store <8 x float> %809, <8 x float>* %738, align 1, !tbaa !12
  store <8 x float> %810, <8 x float>* %742, align 1, !tbaa !12
  store <8 x float> %811, <8 x float>* %746, align 1, !tbaa !12
  store <8 x float> %812, <8 x float>* %750, align 1, !tbaa !12
  %813 = add nuw nsw i64 %671, 80
  %814 = icmp ult i64 %813, %527
  br i1 %814, label %670, label %664

815:                                              ; preds = %821
  br i1 %525, label %816, label %1095

816:                                              ; preds = %815
  %817 = trunc i64 %51 to i32
  %818 = mul nsw i32 %524, %817
  %819 = sext i32 %818 to i64
  %820 = zext i32 %524 to i64
  br label %961

821:                                              ; preds = %665, %821
  %822 = phi i64 [ 0, %665 ], [ %953, %821 ]
  %823 = getelementptr inbounds float, float* %5, i64 %822
  %824 = getelementptr inbounds float, float* %823, i64 8
  %825 = bitcast float* %824 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %825, i32 0, i32 1, i32 1)
  %826 = getelementptr inbounds float, float* %3, i64 %822
  %827 = getelementptr inbounds float, float* %826, i64 8
  %828 = bitcast float* %827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %828, i32 0, i32 1, i32 1)
  %829 = getelementptr inbounds float, float* %823, i64 16
  %830 = bitcast float* %829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %830, i32 0, i32 1, i32 1)
  %831 = getelementptr inbounds float, float* %826, i64 16
  %832 = bitcast float* %831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %832, i32 0, i32 1, i32 1)
  %833 = getelementptr inbounds float, float* %823, i64 24
  %834 = bitcast float* %833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %834, i32 0, i32 1, i32 1)
  %835 = getelementptr inbounds float, float* %826, i64 24
  %836 = bitcast float* %835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %836, i32 0, i32 1, i32 1)
  %837 = getelementptr inbounds float, float* %823, i64 32
  %838 = bitcast float* %837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %838, i32 0, i32 1, i32 1)
  %839 = getelementptr inbounds float, float* %826, i64 32
  %840 = bitcast float* %839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %840, i32 0, i32 1, i32 1)
  %841 = getelementptr inbounds float, float* %823, i64 40
  %842 = bitcast float* %841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %842, i32 0, i32 1, i32 1)
  %843 = getelementptr inbounds float, float* %826, i64 40
  %844 = bitcast float* %843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %844, i32 0, i32 1, i32 1)
  %845 = getelementptr inbounds float, float* %823, i64 48
  %846 = bitcast float* %845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %846, i32 0, i32 1, i32 1)
  %847 = getelementptr inbounds float, float* %826, i64 48
  %848 = bitcast float* %847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %848, i32 0, i32 1, i32 1)
  %849 = getelementptr inbounds float, float* %823, i64 56
  %850 = bitcast float* %849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %850, i32 0, i32 1, i32 1)
  %851 = getelementptr inbounds float, float* %826, i64 56
  %852 = bitcast float* %851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %852, i32 0, i32 1, i32 1)
  %853 = getelementptr inbounds float, float* %823, i64 64
  %854 = bitcast float* %853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %854, i32 0, i32 1, i32 1)
  %855 = getelementptr inbounds float, float* %826, i64 64
  %856 = bitcast float* %855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %856, i32 0, i32 1, i32 1)
  %857 = getelementptr inbounds float, float* %823, i64 72
  %858 = bitcast float* %857 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %858, i32 0, i32 1, i32 1)
  %859 = getelementptr inbounds float, float* %826, i64 72
  %860 = bitcast float* %859 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %860, i32 0, i32 1, i32 1)
  %861 = getelementptr inbounds float, float* %823, i64 80
  %862 = bitcast float* %861 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %862, i32 0, i32 1, i32 1)
  %863 = getelementptr inbounds float, float* %826, i64 80
  %864 = bitcast float* %863 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %864, i32 0, i32 1, i32 1)
  %865 = bitcast float* %823 to <8 x float>*
  %866 = load <8 x float>, <8 x float>* %865, align 1, !tbaa !12
  %867 = or i64 %822, 8
  %868 = getelementptr inbounds float, float* %5, i64 %867
  %869 = bitcast float* %868 to <8 x float>*
  %870 = load <8 x float>, <8 x float>* %869, align 1, !tbaa !12
  %871 = add nuw nsw i64 %822, 16
  %872 = getelementptr inbounds float, float* %5, i64 %871
  %873 = bitcast float* %872 to <8 x float>*
  %874 = load <8 x float>, <8 x float>* %873, align 1, !tbaa !12
  %875 = add nuw nsw i64 %822, 24
  %876 = getelementptr inbounds float, float* %5, i64 %875
  %877 = bitcast float* %876 to <8 x float>*
  %878 = load <8 x float>, <8 x float>* %877, align 1, !tbaa !12
  %879 = add nuw nsw i64 %822, 32
  %880 = getelementptr inbounds float, float* %5, i64 %879
  %881 = bitcast float* %880 to <8 x float>*
  %882 = load <8 x float>, <8 x float>* %881, align 1, !tbaa !12
  %883 = add nuw nsw i64 %822, 40
  %884 = getelementptr inbounds float, float* %5, i64 %883
  %885 = bitcast float* %884 to <8 x float>*
  %886 = load <8 x float>, <8 x float>* %885, align 1, !tbaa !12
  %887 = add nuw nsw i64 %822, 48
  %888 = getelementptr inbounds float, float* %5, i64 %887
  %889 = bitcast float* %888 to <8 x float>*
  %890 = load <8 x float>, <8 x float>* %889, align 1, !tbaa !12
  %891 = add nuw nsw i64 %822, 56
  %892 = getelementptr inbounds float, float* %5, i64 %891
  %893 = bitcast float* %892 to <8 x float>*
  %894 = load <8 x float>, <8 x float>* %893, align 1, !tbaa !12
  %895 = add nuw nsw i64 %822, 64
  %896 = getelementptr inbounds float, float* %5, i64 %895
  %897 = bitcast float* %896 to <8 x float>*
  %898 = load <8 x float>, <8 x float>* %897, align 1, !tbaa !12
  %899 = add nuw nsw i64 %822, 72
  %900 = getelementptr inbounds float, float* %5, i64 %899
  %901 = bitcast float* %900 to <8 x float>*
  %902 = load <8 x float>, <8 x float>* %901, align 1, !tbaa !12
  %903 = add nsw i64 %822, %668
  %904 = getelementptr inbounds float, float* %3, i64 %903
  %905 = bitcast float* %904 to <8 x float>*
  %906 = load <8 x float>, <8 x float>* %905, align 1, !tbaa !12
  %907 = add nsw i64 %903, 8
  %908 = getelementptr inbounds float, float* %3, i64 %907
  %909 = bitcast float* %908 to <8 x float>*
  %910 = load <8 x float>, <8 x float>* %909, align 1, !tbaa !12
  %911 = add nsw i64 %903, 16
  %912 = getelementptr inbounds float, float* %3, i64 %911
  %913 = bitcast float* %912 to <8 x float>*
  %914 = load <8 x float>, <8 x float>* %913, align 1, !tbaa !12
  %915 = add nsw i64 %903, 24
  %916 = getelementptr inbounds float, float* %3, i64 %915
  %917 = bitcast float* %916 to <8 x float>*
  %918 = load <8 x float>, <8 x float>* %917, align 1, !tbaa !12
  %919 = add nsw i64 %903, 32
  %920 = getelementptr inbounds float, float* %3, i64 %919
  %921 = bitcast float* %920 to <8 x float>*
  %922 = load <8 x float>, <8 x float>* %921, align 1, !tbaa !12
  %923 = add nsw i64 %903, 40
  %924 = getelementptr inbounds float, float* %3, i64 %923
  %925 = bitcast float* %924 to <8 x float>*
  %926 = load <8 x float>, <8 x float>* %925, align 1, !tbaa !12
  %927 = add nsw i64 %903, 48
  %928 = getelementptr inbounds float, float* %3, i64 %927
  %929 = bitcast float* %928 to <8 x float>*
  %930 = load <8 x float>, <8 x float>* %929, align 1, !tbaa !12
  %931 = add nsw i64 %903, 56
  %932 = getelementptr inbounds float, float* %3, i64 %931
  %933 = bitcast float* %932 to <8 x float>*
  %934 = load <8 x float>, <8 x float>* %933, align 1, !tbaa !12
  %935 = add nsw i64 %903, 64
  %936 = getelementptr inbounds float, float* %3, i64 %935
  %937 = bitcast float* %936 to <8 x float>*
  %938 = load <8 x float>, <8 x float>* %937, align 1, !tbaa !12
  %939 = add nsw i64 %903, 72
  %940 = getelementptr inbounds float, float* %3, i64 %939
  %941 = bitcast float* %940 to <8 x float>*
  %942 = load <8 x float>, <8 x float>* %941, align 1, !tbaa !12
  %943 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %906, <8 x float> %50, <8 x float> %866) #10
  %944 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %910, <8 x float> %50, <8 x float> %870) #10
  %945 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %914, <8 x float> %50, <8 x float> %874) #10
  %946 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %918, <8 x float> %50, <8 x float> %878) #10
  %947 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %922, <8 x float> %50, <8 x float> %882) #10
  %948 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %926, <8 x float> %50, <8 x float> %886) #10
  %949 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %930, <8 x float> %50, <8 x float> %890) #10
  %950 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %934, <8 x float> %50, <8 x float> %894) #10
  %951 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %938, <8 x float> %50, <8 x float> %898) #10
  %952 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %942, <8 x float> %50, <8 x float> %902) #10
  store <8 x float> %943, <8 x float>* %865, align 1, !tbaa !12
  store <8 x float> %944, <8 x float>* %869, align 1, !tbaa !12
  store <8 x float> %945, <8 x float>* %873, align 1, !tbaa !12
  store <8 x float> %946, <8 x float>* %877, align 1, !tbaa !12
  store <8 x float> %947, <8 x float>* %881, align 1, !tbaa !12
  store <8 x float> %948, <8 x float>* %885, align 1, !tbaa !12
  store <8 x float> %949, <8 x float>* %889, align 1, !tbaa !12
  store <8 x float> %950, <8 x float>* %893, align 1, !tbaa !12
  store <8 x float> %951, <8 x float>* %897, align 1, !tbaa !12
  store <8 x float> %952, <8 x float>* %901, align 1, !tbaa !12
  %953 = add nuw nsw i64 %822, 80
  %954 = icmp ult i64 %953, %669
  br i1 %954, label %821, label %815

955:                                              ; preds = %961
  br i1 %525, label %956, label %1095

956:                                              ; preds = %955
  %957 = trunc i64 %56 to i32
  %958 = mul nsw i32 %524, %957
  %959 = sext i32 %958 to i64
  %960 = zext i32 %524 to i64
  br label %1102

961:                                              ; preds = %816, %961
  %962 = phi i64 [ 0, %816 ], [ %1093, %961 ]
  %963 = getelementptr inbounds float, float* %5, i64 %962
  %964 = getelementptr inbounds float, float* %963, i64 8
  %965 = bitcast float* %964 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %965, i32 0, i32 1, i32 1)
  %966 = getelementptr inbounds float, float* %3, i64 %962
  %967 = getelementptr inbounds float, float* %966, i64 8
  %968 = bitcast float* %967 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %968, i32 0, i32 1, i32 1)
  %969 = getelementptr inbounds float, float* %963, i64 16
  %970 = bitcast float* %969 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %970, i32 0, i32 1, i32 1)
  %971 = getelementptr inbounds float, float* %966, i64 16
  %972 = bitcast float* %971 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %972, i32 0, i32 1, i32 1)
  %973 = getelementptr inbounds float, float* %963, i64 24
  %974 = bitcast float* %973 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %974, i32 0, i32 1, i32 1)
  %975 = getelementptr inbounds float, float* %966, i64 24
  %976 = bitcast float* %975 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %976, i32 0, i32 1, i32 1)
  %977 = getelementptr inbounds float, float* %963, i64 32
  %978 = bitcast float* %977 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %978, i32 0, i32 1, i32 1)
  %979 = getelementptr inbounds float, float* %966, i64 32
  %980 = bitcast float* %979 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %980, i32 0, i32 1, i32 1)
  %981 = getelementptr inbounds float, float* %963, i64 40
  %982 = bitcast float* %981 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %982, i32 0, i32 1, i32 1)
  %983 = getelementptr inbounds float, float* %966, i64 40
  %984 = bitcast float* %983 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %984, i32 0, i32 1, i32 1)
  %985 = getelementptr inbounds float, float* %963, i64 48
  %986 = bitcast float* %985 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %986, i32 0, i32 1, i32 1)
  %987 = getelementptr inbounds float, float* %966, i64 48
  %988 = bitcast float* %987 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %988, i32 0, i32 1, i32 1)
  %989 = getelementptr inbounds float, float* %963, i64 56
  %990 = bitcast float* %989 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %990, i32 0, i32 1, i32 1)
  %991 = getelementptr inbounds float, float* %966, i64 56
  %992 = bitcast float* %991 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %992, i32 0, i32 1, i32 1)
  %993 = getelementptr inbounds float, float* %963, i64 64
  %994 = bitcast float* %993 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %994, i32 0, i32 1, i32 1)
  %995 = getelementptr inbounds float, float* %966, i64 64
  %996 = bitcast float* %995 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %996, i32 0, i32 1, i32 1)
  %997 = getelementptr inbounds float, float* %963, i64 72
  %998 = bitcast float* %997 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %998, i32 0, i32 1, i32 1)
  %999 = getelementptr inbounds float, float* %966, i64 72
  %1000 = bitcast float* %999 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1000, i32 0, i32 1, i32 1)
  %1001 = getelementptr inbounds float, float* %963, i64 80
  %1002 = bitcast float* %1001 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1002, i32 0, i32 1, i32 1)
  %1003 = getelementptr inbounds float, float* %966, i64 80
  %1004 = bitcast float* %1003 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1004, i32 0, i32 1, i32 1)
  %1005 = bitcast float* %963 to <8 x float>*
  %1006 = load <8 x float>, <8 x float>* %1005, align 1, !tbaa !12
  %1007 = or i64 %962, 8
  %1008 = getelementptr inbounds float, float* %5, i64 %1007
  %1009 = bitcast float* %1008 to <8 x float>*
  %1010 = load <8 x float>, <8 x float>* %1009, align 1, !tbaa !12
  %1011 = add nuw nsw i64 %962, 16
  %1012 = getelementptr inbounds float, float* %5, i64 %1011
  %1013 = bitcast float* %1012 to <8 x float>*
  %1014 = load <8 x float>, <8 x float>* %1013, align 1, !tbaa !12
  %1015 = add nuw nsw i64 %962, 24
  %1016 = getelementptr inbounds float, float* %5, i64 %1015
  %1017 = bitcast float* %1016 to <8 x float>*
  %1018 = load <8 x float>, <8 x float>* %1017, align 1, !tbaa !12
  %1019 = add nuw nsw i64 %962, 32
  %1020 = getelementptr inbounds float, float* %5, i64 %1019
  %1021 = bitcast float* %1020 to <8 x float>*
  %1022 = load <8 x float>, <8 x float>* %1021, align 1, !tbaa !12
  %1023 = add nuw nsw i64 %962, 40
  %1024 = getelementptr inbounds float, float* %5, i64 %1023
  %1025 = bitcast float* %1024 to <8 x float>*
  %1026 = load <8 x float>, <8 x float>* %1025, align 1, !tbaa !12
  %1027 = add nuw nsw i64 %962, 48
  %1028 = getelementptr inbounds float, float* %5, i64 %1027
  %1029 = bitcast float* %1028 to <8 x float>*
  %1030 = load <8 x float>, <8 x float>* %1029, align 1, !tbaa !12
  %1031 = add nuw nsw i64 %962, 56
  %1032 = getelementptr inbounds float, float* %5, i64 %1031
  %1033 = bitcast float* %1032 to <8 x float>*
  %1034 = load <8 x float>, <8 x float>* %1033, align 1, !tbaa !12
  %1035 = add nuw nsw i64 %962, 64
  %1036 = getelementptr inbounds float, float* %5, i64 %1035
  %1037 = bitcast float* %1036 to <8 x float>*
  %1038 = load <8 x float>, <8 x float>* %1037, align 1, !tbaa !12
  %1039 = add nuw nsw i64 %962, 72
  %1040 = getelementptr inbounds float, float* %5, i64 %1039
  %1041 = bitcast float* %1040 to <8 x float>*
  %1042 = load <8 x float>, <8 x float>* %1041, align 1, !tbaa !12
  %1043 = add nsw i64 %962, %819
  %1044 = getelementptr inbounds float, float* %3, i64 %1043
  %1045 = bitcast float* %1044 to <8 x float>*
  %1046 = load <8 x float>, <8 x float>* %1045, align 1, !tbaa !12
  %1047 = add nsw i64 %1043, 8
  %1048 = getelementptr inbounds float, float* %3, i64 %1047
  %1049 = bitcast float* %1048 to <8 x float>*
  %1050 = load <8 x float>, <8 x float>* %1049, align 1, !tbaa !12
  %1051 = add nsw i64 %1043, 16
  %1052 = getelementptr inbounds float, float* %3, i64 %1051
  %1053 = bitcast float* %1052 to <8 x float>*
  %1054 = load <8 x float>, <8 x float>* %1053, align 1, !tbaa !12
  %1055 = add nsw i64 %1043, 24
  %1056 = getelementptr inbounds float, float* %3, i64 %1055
  %1057 = bitcast float* %1056 to <8 x float>*
  %1058 = load <8 x float>, <8 x float>* %1057, align 1, !tbaa !12
  %1059 = add nsw i64 %1043, 32
  %1060 = getelementptr inbounds float, float* %3, i64 %1059
  %1061 = bitcast float* %1060 to <8 x float>*
  %1062 = load <8 x float>, <8 x float>* %1061, align 1, !tbaa !12
  %1063 = add nsw i64 %1043, 40
  %1064 = getelementptr inbounds float, float* %3, i64 %1063
  %1065 = bitcast float* %1064 to <8 x float>*
  %1066 = load <8 x float>, <8 x float>* %1065, align 1, !tbaa !12
  %1067 = add nsw i64 %1043, 48
  %1068 = getelementptr inbounds float, float* %3, i64 %1067
  %1069 = bitcast float* %1068 to <8 x float>*
  %1070 = load <8 x float>, <8 x float>* %1069, align 1, !tbaa !12
  %1071 = add nsw i64 %1043, 56
  %1072 = getelementptr inbounds float, float* %3, i64 %1071
  %1073 = bitcast float* %1072 to <8 x float>*
  %1074 = load <8 x float>, <8 x float>* %1073, align 1, !tbaa !12
  %1075 = add nsw i64 %1043, 64
  %1076 = getelementptr inbounds float, float* %3, i64 %1075
  %1077 = bitcast float* %1076 to <8 x float>*
  %1078 = load <8 x float>, <8 x float>* %1077, align 1, !tbaa !12
  %1079 = add nsw i64 %1043, 72
  %1080 = getelementptr inbounds float, float* %3, i64 %1079
  %1081 = bitcast float* %1080 to <8 x float>*
  %1082 = load <8 x float>, <8 x float>* %1081, align 1, !tbaa !12
  %1083 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1046, <8 x float> %55, <8 x float> %1006) #10
  %1084 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1050, <8 x float> %55, <8 x float> %1010) #10
  %1085 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1054, <8 x float> %55, <8 x float> %1014) #10
  %1086 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1058, <8 x float> %55, <8 x float> %1018) #10
  %1087 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1062, <8 x float> %55, <8 x float> %1022) #10
  %1088 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1066, <8 x float> %55, <8 x float> %1026) #10
  %1089 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1070, <8 x float> %55, <8 x float> %1030) #10
  %1090 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1074, <8 x float> %55, <8 x float> %1034) #10
  %1091 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1078, <8 x float> %55, <8 x float> %1038) #10
  %1092 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1082, <8 x float> %55, <8 x float> %1042) #10
  store <8 x float> %1083, <8 x float>* %1005, align 1, !tbaa !12
  store <8 x float> %1084, <8 x float>* %1009, align 1, !tbaa !12
  store <8 x float> %1085, <8 x float>* %1013, align 1, !tbaa !12
  store <8 x float> %1086, <8 x float>* %1017, align 1, !tbaa !12
  store <8 x float> %1087, <8 x float>* %1021, align 1, !tbaa !12
  store <8 x float> %1088, <8 x float>* %1025, align 1, !tbaa !12
  store <8 x float> %1089, <8 x float>* %1029, align 1, !tbaa !12
  store <8 x float> %1090, <8 x float>* %1033, align 1, !tbaa !12
  store <8 x float> %1091, <8 x float>* %1037, align 1, !tbaa !12
  store <8 x float> %1092, <8 x float>* %1041, align 1, !tbaa !12
  %1093 = add nuw nsw i64 %962, 80
  %1094 = icmp ult i64 %1093, %820
  br i1 %1094, label %961, label %955

1095:                                             ; preds = %1102, %664, %815, %955
  %1096 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1097 = icmp sgt i32 %1096, 0
  br i1 %1097, label %1098, label %1808

1098:                                             ; preds = %1095
  %1099 = zext i32 %1096 to i64
  %1100 = trunc i64 %61 to i32
  %1101 = mul nsw i32 %1096, %1100
  br label %1242

1102:                                             ; preds = %956, %1102
  %1103 = phi i64 [ 0, %956 ], [ %1234, %1102 ]
  %1104 = getelementptr inbounds float, float* %5, i64 %1103
  %1105 = getelementptr inbounds float, float* %1104, i64 8
  %1106 = bitcast float* %1105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1106, i32 0, i32 1, i32 1)
  %1107 = getelementptr inbounds float, float* %3, i64 %1103
  %1108 = getelementptr inbounds float, float* %1107, i64 8
  %1109 = bitcast float* %1108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1109, i32 0, i32 1, i32 1)
  %1110 = getelementptr inbounds float, float* %1104, i64 16
  %1111 = bitcast float* %1110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1111, i32 0, i32 1, i32 1)
  %1112 = getelementptr inbounds float, float* %1107, i64 16
  %1113 = bitcast float* %1112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1113, i32 0, i32 1, i32 1)
  %1114 = getelementptr inbounds float, float* %1104, i64 24
  %1115 = bitcast float* %1114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1115, i32 0, i32 1, i32 1)
  %1116 = getelementptr inbounds float, float* %1107, i64 24
  %1117 = bitcast float* %1116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1117, i32 0, i32 1, i32 1)
  %1118 = getelementptr inbounds float, float* %1104, i64 32
  %1119 = bitcast float* %1118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1119, i32 0, i32 1, i32 1)
  %1120 = getelementptr inbounds float, float* %1107, i64 32
  %1121 = bitcast float* %1120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1121, i32 0, i32 1, i32 1)
  %1122 = getelementptr inbounds float, float* %1104, i64 40
  %1123 = bitcast float* %1122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1123, i32 0, i32 1, i32 1)
  %1124 = getelementptr inbounds float, float* %1107, i64 40
  %1125 = bitcast float* %1124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1125, i32 0, i32 1, i32 1)
  %1126 = getelementptr inbounds float, float* %1104, i64 48
  %1127 = bitcast float* %1126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1127, i32 0, i32 1, i32 1)
  %1128 = getelementptr inbounds float, float* %1107, i64 48
  %1129 = bitcast float* %1128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1129, i32 0, i32 1, i32 1)
  %1130 = getelementptr inbounds float, float* %1104, i64 56
  %1131 = bitcast float* %1130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1131, i32 0, i32 1, i32 1)
  %1132 = getelementptr inbounds float, float* %1107, i64 56
  %1133 = bitcast float* %1132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1133, i32 0, i32 1, i32 1)
  %1134 = getelementptr inbounds float, float* %1104, i64 64
  %1135 = bitcast float* %1134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1135, i32 0, i32 1, i32 1)
  %1136 = getelementptr inbounds float, float* %1107, i64 64
  %1137 = bitcast float* %1136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1137, i32 0, i32 1, i32 1)
  %1138 = getelementptr inbounds float, float* %1104, i64 72
  %1139 = bitcast float* %1138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1139, i32 0, i32 1, i32 1)
  %1140 = getelementptr inbounds float, float* %1107, i64 72
  %1141 = bitcast float* %1140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1141, i32 0, i32 1, i32 1)
  %1142 = getelementptr inbounds float, float* %1104, i64 80
  %1143 = bitcast float* %1142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1143, i32 0, i32 1, i32 1)
  %1144 = getelementptr inbounds float, float* %1107, i64 80
  %1145 = bitcast float* %1144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1145, i32 0, i32 1, i32 1)
  %1146 = bitcast float* %1104 to <8 x float>*
  %1147 = load <8 x float>, <8 x float>* %1146, align 1, !tbaa !12
  %1148 = or i64 %1103, 8
  %1149 = getelementptr inbounds float, float* %5, i64 %1148
  %1150 = bitcast float* %1149 to <8 x float>*
  %1151 = load <8 x float>, <8 x float>* %1150, align 1, !tbaa !12
  %1152 = add nuw nsw i64 %1103, 16
  %1153 = getelementptr inbounds float, float* %5, i64 %1152
  %1154 = bitcast float* %1153 to <8 x float>*
  %1155 = load <8 x float>, <8 x float>* %1154, align 1, !tbaa !12
  %1156 = add nuw nsw i64 %1103, 24
  %1157 = getelementptr inbounds float, float* %5, i64 %1156
  %1158 = bitcast float* %1157 to <8 x float>*
  %1159 = load <8 x float>, <8 x float>* %1158, align 1, !tbaa !12
  %1160 = add nuw nsw i64 %1103, 32
  %1161 = getelementptr inbounds float, float* %5, i64 %1160
  %1162 = bitcast float* %1161 to <8 x float>*
  %1163 = load <8 x float>, <8 x float>* %1162, align 1, !tbaa !12
  %1164 = add nuw nsw i64 %1103, 40
  %1165 = getelementptr inbounds float, float* %5, i64 %1164
  %1166 = bitcast float* %1165 to <8 x float>*
  %1167 = load <8 x float>, <8 x float>* %1166, align 1, !tbaa !12
  %1168 = add nuw nsw i64 %1103, 48
  %1169 = getelementptr inbounds float, float* %5, i64 %1168
  %1170 = bitcast float* %1169 to <8 x float>*
  %1171 = load <8 x float>, <8 x float>* %1170, align 1, !tbaa !12
  %1172 = add nuw nsw i64 %1103, 56
  %1173 = getelementptr inbounds float, float* %5, i64 %1172
  %1174 = bitcast float* %1173 to <8 x float>*
  %1175 = load <8 x float>, <8 x float>* %1174, align 1, !tbaa !12
  %1176 = add nuw nsw i64 %1103, 64
  %1177 = getelementptr inbounds float, float* %5, i64 %1176
  %1178 = bitcast float* %1177 to <8 x float>*
  %1179 = load <8 x float>, <8 x float>* %1178, align 1, !tbaa !12
  %1180 = add nuw nsw i64 %1103, 72
  %1181 = getelementptr inbounds float, float* %5, i64 %1180
  %1182 = bitcast float* %1181 to <8 x float>*
  %1183 = load <8 x float>, <8 x float>* %1182, align 1, !tbaa !12
  %1184 = add nsw i64 %1103, %959
  %1185 = getelementptr inbounds float, float* %3, i64 %1184
  %1186 = bitcast float* %1185 to <8 x float>*
  %1187 = load <8 x float>, <8 x float>* %1186, align 1, !tbaa !12
  %1188 = add nsw i64 %1184, 8
  %1189 = getelementptr inbounds float, float* %3, i64 %1188
  %1190 = bitcast float* %1189 to <8 x float>*
  %1191 = load <8 x float>, <8 x float>* %1190, align 1, !tbaa !12
  %1192 = add nsw i64 %1184, 16
  %1193 = getelementptr inbounds float, float* %3, i64 %1192
  %1194 = bitcast float* %1193 to <8 x float>*
  %1195 = load <8 x float>, <8 x float>* %1194, align 1, !tbaa !12
  %1196 = add nsw i64 %1184, 24
  %1197 = getelementptr inbounds float, float* %3, i64 %1196
  %1198 = bitcast float* %1197 to <8 x float>*
  %1199 = load <8 x float>, <8 x float>* %1198, align 1, !tbaa !12
  %1200 = add nsw i64 %1184, 32
  %1201 = getelementptr inbounds float, float* %3, i64 %1200
  %1202 = bitcast float* %1201 to <8 x float>*
  %1203 = load <8 x float>, <8 x float>* %1202, align 1, !tbaa !12
  %1204 = add nsw i64 %1184, 40
  %1205 = getelementptr inbounds float, float* %3, i64 %1204
  %1206 = bitcast float* %1205 to <8 x float>*
  %1207 = load <8 x float>, <8 x float>* %1206, align 1, !tbaa !12
  %1208 = add nsw i64 %1184, 48
  %1209 = getelementptr inbounds float, float* %3, i64 %1208
  %1210 = bitcast float* %1209 to <8 x float>*
  %1211 = load <8 x float>, <8 x float>* %1210, align 1, !tbaa !12
  %1212 = add nsw i64 %1184, 56
  %1213 = getelementptr inbounds float, float* %3, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nsw i64 %1184, 64
  %1217 = getelementptr inbounds float, float* %3, i64 %1216
  %1218 = bitcast float* %1217 to <8 x float>*
  %1219 = load <8 x float>, <8 x float>* %1218, align 1, !tbaa !12
  %1220 = add nsw i64 %1184, 72
  %1221 = getelementptr inbounds float, float* %3, i64 %1220
  %1222 = bitcast float* %1221 to <8 x float>*
  %1223 = load <8 x float>, <8 x float>* %1222, align 1, !tbaa !12
  %1224 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1187, <8 x float> %60, <8 x float> %1147) #10
  %1225 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1191, <8 x float> %60, <8 x float> %1151) #10
  %1226 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1195, <8 x float> %60, <8 x float> %1155) #10
  %1227 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1199, <8 x float> %60, <8 x float> %1159) #10
  %1228 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1203, <8 x float> %60, <8 x float> %1163) #10
  %1229 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1207, <8 x float> %60, <8 x float> %1167) #10
  %1230 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1211, <8 x float> %60, <8 x float> %1171) #10
  %1231 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1215, <8 x float> %60, <8 x float> %1175) #10
  %1232 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1219, <8 x float> %60, <8 x float> %1179) #10
  %1233 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1223, <8 x float> %60, <8 x float> %1183) #10
  store <8 x float> %1224, <8 x float>* %1146, align 1, !tbaa !12
  store <8 x float> %1225, <8 x float>* %1150, align 1, !tbaa !12
  store <8 x float> %1226, <8 x float>* %1154, align 1, !tbaa !12
  store <8 x float> %1227, <8 x float>* %1158, align 1, !tbaa !12
  store <8 x float> %1228, <8 x float>* %1162, align 1, !tbaa !12
  store <8 x float> %1229, <8 x float>* %1166, align 1, !tbaa !12
  store <8 x float> %1230, <8 x float>* %1170, align 1, !tbaa !12
  store <8 x float> %1231, <8 x float>* %1174, align 1, !tbaa !12
  store <8 x float> %1232, <8 x float>* %1178, align 1, !tbaa !12
  store <8 x float> %1233, <8 x float>* %1182, align 1, !tbaa !12
  %1234 = add nuw nsw i64 %1103, 80
  %1235 = icmp ult i64 %1234, %960
  br i1 %1235, label %1102, label %1095

1236:                                             ; preds = %1242
  br i1 %1097, label %1237, label %1667

1237:                                             ; preds = %1236
  %1238 = trunc i64 %66 to i32
  %1239 = mul nsw i32 %1096, %1238
  %1240 = sext i32 %1239 to i64
  %1241 = zext i32 %1096 to i64
  br label %1393

1242:                                             ; preds = %1098, %1242
  %1243 = phi i64 [ 0, %1098 ], [ %1385, %1242 ]
  %1244 = getelementptr inbounds float, float* %5, i64 %1243
  %1245 = getelementptr inbounds float, float* %1244, i64 8
  %1246 = bitcast float* %1245 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1246, i32 0, i32 1, i32 1)
  %1247 = getelementptr inbounds float, float* %3, i64 %1243
  %1248 = getelementptr inbounds float, float* %1247, i64 8
  %1249 = bitcast float* %1248 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1249, i32 0, i32 1, i32 1)
  %1250 = getelementptr inbounds float, float* %1244, i64 16
  %1251 = bitcast float* %1250 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1251, i32 0, i32 1, i32 1)
  %1252 = getelementptr inbounds float, float* %1247, i64 16
  %1253 = bitcast float* %1252 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1253, i32 0, i32 1, i32 1)
  %1254 = getelementptr inbounds float, float* %1244, i64 24
  %1255 = bitcast float* %1254 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1255, i32 0, i32 1, i32 1)
  %1256 = getelementptr inbounds float, float* %1247, i64 24
  %1257 = bitcast float* %1256 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1257, i32 0, i32 1, i32 1)
  %1258 = getelementptr inbounds float, float* %1244, i64 32
  %1259 = bitcast float* %1258 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1259, i32 0, i32 1, i32 1)
  %1260 = getelementptr inbounds float, float* %1247, i64 32
  %1261 = bitcast float* %1260 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1261, i32 0, i32 1, i32 1)
  %1262 = getelementptr inbounds float, float* %1244, i64 40
  %1263 = bitcast float* %1262 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1263, i32 0, i32 1, i32 1)
  %1264 = getelementptr inbounds float, float* %1247, i64 40
  %1265 = bitcast float* %1264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1265, i32 0, i32 1, i32 1)
  %1266 = getelementptr inbounds float, float* %1244, i64 48
  %1267 = bitcast float* %1266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1267, i32 0, i32 1, i32 1)
  %1268 = getelementptr inbounds float, float* %1247, i64 48
  %1269 = bitcast float* %1268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1269, i32 0, i32 1, i32 1)
  %1270 = getelementptr inbounds float, float* %1244, i64 56
  %1271 = bitcast float* %1270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1271, i32 0, i32 1, i32 1)
  %1272 = getelementptr inbounds float, float* %1247, i64 56
  %1273 = bitcast float* %1272 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1273, i32 0, i32 1, i32 1)
  %1274 = getelementptr inbounds float, float* %1244, i64 64
  %1275 = bitcast float* %1274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1275, i32 0, i32 1, i32 1)
  %1276 = getelementptr inbounds float, float* %1247, i64 64
  %1277 = bitcast float* %1276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1277, i32 0, i32 1, i32 1)
  %1278 = getelementptr inbounds float, float* %1244, i64 72
  %1279 = bitcast float* %1278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1279, i32 0, i32 1, i32 1)
  %1280 = getelementptr inbounds float, float* %1247, i64 72
  %1281 = bitcast float* %1280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1281, i32 0, i32 1, i32 1)
  %1282 = getelementptr inbounds float, float* %1244, i64 80
  %1283 = bitcast float* %1282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1283, i32 0, i32 1, i32 1)
  %1284 = getelementptr inbounds float, float* %1247, i64 80
  %1285 = bitcast float* %1284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1285, i32 0, i32 1, i32 1)
  %1286 = bitcast float* %1244 to <8 x float>*
  %1287 = load <8 x float>, <8 x float>* %1286, align 1, !tbaa !12
  %1288 = or i64 %1243, 8
  %1289 = getelementptr inbounds float, float* %5, i64 %1288
  %1290 = bitcast float* %1289 to <8 x float>*
  %1291 = load <8 x float>, <8 x float>* %1290, align 1, !tbaa !12
  %1292 = add nuw nsw i64 %1243, 16
  %1293 = getelementptr inbounds float, float* %5, i64 %1292
  %1294 = bitcast float* %1293 to <8 x float>*
  %1295 = load <8 x float>, <8 x float>* %1294, align 1, !tbaa !12
  %1296 = add nuw nsw i64 %1243, 24
  %1297 = getelementptr inbounds float, float* %5, i64 %1296
  %1298 = bitcast float* %1297 to <8 x float>*
  %1299 = load <8 x float>, <8 x float>* %1298, align 1, !tbaa !12
  %1300 = add nuw nsw i64 %1243, 32
  %1301 = getelementptr inbounds float, float* %5, i64 %1300
  %1302 = bitcast float* %1301 to <8 x float>*
  %1303 = load <8 x float>, <8 x float>* %1302, align 1, !tbaa !12
  %1304 = add nuw nsw i64 %1243, 40
  %1305 = getelementptr inbounds float, float* %5, i64 %1304
  %1306 = bitcast float* %1305 to <8 x float>*
  %1307 = load <8 x float>, <8 x float>* %1306, align 1, !tbaa !12
  %1308 = add nuw nsw i64 %1243, 48
  %1309 = getelementptr inbounds float, float* %5, i64 %1308
  %1310 = bitcast float* %1309 to <8 x float>*
  %1311 = load <8 x float>, <8 x float>* %1310, align 1, !tbaa !12
  %1312 = add nuw nsw i64 %1243, 56
  %1313 = getelementptr inbounds float, float* %5, i64 %1312
  %1314 = bitcast float* %1313 to <8 x float>*
  %1315 = load <8 x float>, <8 x float>* %1314, align 1, !tbaa !12
  %1316 = add nuw nsw i64 %1243, 64
  %1317 = getelementptr inbounds float, float* %5, i64 %1316
  %1318 = bitcast float* %1317 to <8 x float>*
  %1319 = load <8 x float>, <8 x float>* %1318, align 1, !tbaa !12
  %1320 = add nuw nsw i64 %1243, 72
  %1321 = getelementptr inbounds float, float* %5, i64 %1320
  %1322 = bitcast float* %1321 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = trunc i64 %1243 to i32
  %1325 = add nsw i32 %1101, %1324
  %1326 = sext i32 %1325 to i64
  %1327 = getelementptr inbounds float, float* %3, i64 %1326
  %1328 = bitcast float* %1327 to <8 x float>*
  %1329 = load <8 x float>, <8 x float>* %1328, align 1, !tbaa !12
  %1330 = add nsw i32 %1325, 8
  %1331 = sext i32 %1330 to i64
  %1332 = getelementptr inbounds float, float* %3, i64 %1331
  %1333 = bitcast float* %1332 to <8 x float>*
  %1334 = load <8 x float>, <8 x float>* %1333, align 1, !tbaa !12
  %1335 = add nsw i32 %1325, 16
  %1336 = sext i32 %1335 to i64
  %1337 = getelementptr inbounds float, float* %3, i64 %1336
  %1338 = bitcast float* %1337 to <8 x float>*
  %1339 = load <8 x float>, <8 x float>* %1338, align 1, !tbaa !12
  %1340 = add nsw i32 %1325, 24
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds float, float* %3, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nsw i32 %1325, 32
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds float, float* %3, i64 %1346
  %1348 = bitcast float* %1347 to <8 x float>*
  %1349 = load <8 x float>, <8 x float>* %1348, align 1, !tbaa !12
  %1350 = add nsw i32 %1325, 40
  %1351 = sext i32 %1350 to i64
  %1352 = getelementptr inbounds float, float* %3, i64 %1351
  %1353 = bitcast float* %1352 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = add nsw i32 %1325, 48
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds float, float* %3, i64 %1356
  %1358 = bitcast float* %1357 to <8 x float>*
  %1359 = load <8 x float>, <8 x float>* %1358, align 1, !tbaa !12
  %1360 = add nsw i32 %1325, 56
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds float, float* %3, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nsw i32 %1325, 64
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds float, float* %3, i64 %1366
  %1368 = bitcast float* %1367 to <8 x float>*
  %1369 = load <8 x float>, <8 x float>* %1368, align 1, !tbaa !12
  %1370 = add nsw i32 %1325, 72
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds float, float* %3, i64 %1371
  %1373 = bitcast float* %1372 to <8 x float>*
  %1374 = load <8 x float>, <8 x float>* %1373, align 1, !tbaa !12
  %1375 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1329, <8 x float> %65, <8 x float> %1287) #10
  %1376 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1334, <8 x float> %65, <8 x float> %1291) #10
  %1377 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1339, <8 x float> %65, <8 x float> %1295) #10
  %1378 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1344, <8 x float> %65, <8 x float> %1299) #10
  %1379 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1349, <8 x float> %65, <8 x float> %1303) #10
  %1380 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1354, <8 x float> %65, <8 x float> %1307) #10
  %1381 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1359, <8 x float> %65, <8 x float> %1311) #10
  %1382 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1364, <8 x float> %65, <8 x float> %1315) #10
  %1383 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1369, <8 x float> %65, <8 x float> %1319) #10
  %1384 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1374, <8 x float> %65, <8 x float> %1323) #10
  store <8 x float> %1375, <8 x float>* %1286, align 1, !tbaa !12
  store <8 x float> %1376, <8 x float>* %1290, align 1, !tbaa !12
  store <8 x float> %1377, <8 x float>* %1294, align 1, !tbaa !12
  store <8 x float> %1378, <8 x float>* %1298, align 1, !tbaa !12
  store <8 x float> %1379, <8 x float>* %1302, align 1, !tbaa !12
  store <8 x float> %1380, <8 x float>* %1306, align 1, !tbaa !12
  store <8 x float> %1381, <8 x float>* %1310, align 1, !tbaa !12
  store <8 x float> %1382, <8 x float>* %1314, align 1, !tbaa !12
  store <8 x float> %1383, <8 x float>* %1318, align 1, !tbaa !12
  store <8 x float> %1384, <8 x float>* %1322, align 1, !tbaa !12
  %1385 = add nuw nsw i64 %1243, 80
  %1386 = icmp ult i64 %1385, %1099
  br i1 %1386, label %1242, label %1236

1387:                                             ; preds = %1393
  br i1 %1097, label %1388, label %1667

1388:                                             ; preds = %1387
  %1389 = trunc i64 %71 to i32
  %1390 = mul nsw i32 %1096, %1389
  %1391 = sext i32 %1390 to i64
  %1392 = zext i32 %1096 to i64
  br label %1533

1393:                                             ; preds = %1237, %1393
  %1394 = phi i64 [ 0, %1237 ], [ %1525, %1393 ]
  %1395 = getelementptr inbounds float, float* %5, i64 %1394
  %1396 = getelementptr inbounds float, float* %1395, i64 8
  %1397 = bitcast float* %1396 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1397, i32 0, i32 1, i32 1)
  %1398 = getelementptr inbounds float, float* %3, i64 %1394
  %1399 = getelementptr inbounds float, float* %1398, i64 8
  %1400 = bitcast float* %1399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1400, i32 0, i32 1, i32 1)
  %1401 = getelementptr inbounds float, float* %1395, i64 16
  %1402 = bitcast float* %1401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1402, i32 0, i32 1, i32 1)
  %1403 = getelementptr inbounds float, float* %1398, i64 16
  %1404 = bitcast float* %1403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1404, i32 0, i32 1, i32 1)
  %1405 = getelementptr inbounds float, float* %1395, i64 24
  %1406 = bitcast float* %1405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1406, i32 0, i32 1, i32 1)
  %1407 = getelementptr inbounds float, float* %1398, i64 24
  %1408 = bitcast float* %1407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1408, i32 0, i32 1, i32 1)
  %1409 = getelementptr inbounds float, float* %1395, i64 32
  %1410 = bitcast float* %1409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1410, i32 0, i32 1, i32 1)
  %1411 = getelementptr inbounds float, float* %1398, i64 32
  %1412 = bitcast float* %1411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1412, i32 0, i32 1, i32 1)
  %1413 = getelementptr inbounds float, float* %1395, i64 40
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %1398, i64 40
  %1416 = bitcast float* %1415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1416, i32 0, i32 1, i32 1)
  %1417 = getelementptr inbounds float, float* %1395, i64 48
  %1418 = bitcast float* %1417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1418, i32 0, i32 1, i32 1)
  %1419 = getelementptr inbounds float, float* %1398, i64 48
  %1420 = bitcast float* %1419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1420, i32 0, i32 1, i32 1)
  %1421 = getelementptr inbounds float, float* %1395, i64 56
  %1422 = bitcast float* %1421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1422, i32 0, i32 1, i32 1)
  %1423 = getelementptr inbounds float, float* %1398, i64 56
  %1424 = bitcast float* %1423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1424, i32 0, i32 1, i32 1)
  %1425 = getelementptr inbounds float, float* %1395, i64 64
  %1426 = bitcast float* %1425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1426, i32 0, i32 1, i32 1)
  %1427 = getelementptr inbounds float, float* %1398, i64 64
  %1428 = bitcast float* %1427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1428, i32 0, i32 1, i32 1)
  %1429 = getelementptr inbounds float, float* %1395, i64 72
  %1430 = bitcast float* %1429 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1430, i32 0, i32 1, i32 1)
  %1431 = getelementptr inbounds float, float* %1398, i64 72
  %1432 = bitcast float* %1431 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1432, i32 0, i32 1, i32 1)
  %1433 = getelementptr inbounds float, float* %1395, i64 80
  %1434 = bitcast float* %1433 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1434, i32 0, i32 1, i32 1)
  %1435 = getelementptr inbounds float, float* %1398, i64 80
  %1436 = bitcast float* %1435 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1436, i32 0, i32 1, i32 1)
  %1437 = bitcast float* %1395 to <8 x float>*
  %1438 = load <8 x float>, <8 x float>* %1437, align 1, !tbaa !12
  %1439 = or i64 %1394, 8
  %1440 = getelementptr inbounds float, float* %5, i64 %1439
  %1441 = bitcast float* %1440 to <8 x float>*
  %1442 = load <8 x float>, <8 x float>* %1441, align 1, !tbaa !12
  %1443 = add nuw nsw i64 %1394, 16
  %1444 = getelementptr inbounds float, float* %5, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nuw nsw i64 %1394, 24
  %1448 = getelementptr inbounds float, float* %5, i64 %1447
  %1449 = bitcast float* %1448 to <8 x float>*
  %1450 = load <8 x float>, <8 x float>* %1449, align 1, !tbaa !12
  %1451 = add nuw nsw i64 %1394, 32
  %1452 = getelementptr inbounds float, float* %5, i64 %1451
  %1453 = bitcast float* %1452 to <8 x float>*
  %1454 = load <8 x float>, <8 x float>* %1453, align 1, !tbaa !12
  %1455 = add nuw nsw i64 %1394, 40
  %1456 = getelementptr inbounds float, float* %5, i64 %1455
  %1457 = bitcast float* %1456 to <8 x float>*
  %1458 = load <8 x float>, <8 x float>* %1457, align 1, !tbaa !12
  %1459 = add nuw nsw i64 %1394, 48
  %1460 = getelementptr inbounds float, float* %5, i64 %1459
  %1461 = bitcast float* %1460 to <8 x float>*
  %1462 = load <8 x float>, <8 x float>* %1461, align 1, !tbaa !12
  %1463 = add nuw nsw i64 %1394, 56
  %1464 = getelementptr inbounds float, float* %5, i64 %1463
  %1465 = bitcast float* %1464 to <8 x float>*
  %1466 = load <8 x float>, <8 x float>* %1465, align 1, !tbaa !12
  %1467 = add nuw nsw i64 %1394, 64
  %1468 = getelementptr inbounds float, float* %5, i64 %1467
  %1469 = bitcast float* %1468 to <8 x float>*
  %1470 = load <8 x float>, <8 x float>* %1469, align 1, !tbaa !12
  %1471 = add nuw nsw i64 %1394, 72
  %1472 = getelementptr inbounds float, float* %5, i64 %1471
  %1473 = bitcast float* %1472 to <8 x float>*
  %1474 = load <8 x float>, <8 x float>* %1473, align 1, !tbaa !12
  %1475 = add nsw i64 %1394, %1240
  %1476 = getelementptr inbounds float, float* %3, i64 %1475
  %1477 = bitcast float* %1476 to <8 x float>*
  %1478 = load <8 x float>, <8 x float>* %1477, align 1, !tbaa !12
  %1479 = add nsw i64 %1475, 8
  %1480 = getelementptr inbounds float, float* %3, i64 %1479
  %1481 = bitcast float* %1480 to <8 x float>*
  %1482 = load <8 x float>, <8 x float>* %1481, align 1, !tbaa !12
  %1483 = add nsw i64 %1475, 16
  %1484 = getelementptr inbounds float, float* %3, i64 %1483
  %1485 = bitcast float* %1484 to <8 x float>*
  %1486 = load <8 x float>, <8 x float>* %1485, align 1, !tbaa !12
  %1487 = add nsw i64 %1475, 24
  %1488 = getelementptr inbounds float, float* %3, i64 %1487
  %1489 = bitcast float* %1488 to <8 x float>*
  %1490 = load <8 x float>, <8 x float>* %1489, align 1, !tbaa !12
  %1491 = add nsw i64 %1475, 32
  %1492 = getelementptr inbounds float, float* %3, i64 %1491
  %1493 = bitcast float* %1492 to <8 x float>*
  %1494 = load <8 x float>, <8 x float>* %1493, align 1, !tbaa !12
  %1495 = add nsw i64 %1475, 40
  %1496 = getelementptr inbounds float, float* %3, i64 %1495
  %1497 = bitcast float* %1496 to <8 x float>*
  %1498 = load <8 x float>, <8 x float>* %1497, align 1, !tbaa !12
  %1499 = add nsw i64 %1475, 48
  %1500 = getelementptr inbounds float, float* %3, i64 %1499
  %1501 = bitcast float* %1500 to <8 x float>*
  %1502 = load <8 x float>, <8 x float>* %1501, align 1, !tbaa !12
  %1503 = add nsw i64 %1475, 56
  %1504 = getelementptr inbounds float, float* %3, i64 %1503
  %1505 = bitcast float* %1504 to <8 x float>*
  %1506 = load <8 x float>, <8 x float>* %1505, align 1, !tbaa !12
  %1507 = add nsw i64 %1475, 64
  %1508 = getelementptr inbounds float, float* %3, i64 %1507
  %1509 = bitcast float* %1508 to <8 x float>*
  %1510 = load <8 x float>, <8 x float>* %1509, align 1, !tbaa !12
  %1511 = add nsw i64 %1475, 72
  %1512 = getelementptr inbounds float, float* %3, i64 %1511
  %1513 = bitcast float* %1512 to <8 x float>*
  %1514 = load <8 x float>, <8 x float>* %1513, align 1, !tbaa !12
  %1515 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1478, <8 x float> %70, <8 x float> %1438) #10
  %1516 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1482, <8 x float> %70, <8 x float> %1442) #10
  %1517 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1486, <8 x float> %70, <8 x float> %1446) #10
  %1518 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1490, <8 x float> %70, <8 x float> %1450) #10
  %1519 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1494, <8 x float> %70, <8 x float> %1454) #10
  %1520 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1498, <8 x float> %70, <8 x float> %1458) #10
  %1521 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1502, <8 x float> %70, <8 x float> %1462) #10
  %1522 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1506, <8 x float> %70, <8 x float> %1466) #10
  %1523 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1510, <8 x float> %70, <8 x float> %1470) #10
  %1524 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1514, <8 x float> %70, <8 x float> %1474) #10
  store <8 x float> %1515, <8 x float>* %1437, align 1, !tbaa !12
  store <8 x float> %1516, <8 x float>* %1441, align 1, !tbaa !12
  store <8 x float> %1517, <8 x float>* %1445, align 1, !tbaa !12
  store <8 x float> %1518, <8 x float>* %1449, align 1, !tbaa !12
  store <8 x float> %1519, <8 x float>* %1453, align 1, !tbaa !12
  store <8 x float> %1520, <8 x float>* %1457, align 1, !tbaa !12
  store <8 x float> %1521, <8 x float>* %1461, align 1, !tbaa !12
  store <8 x float> %1522, <8 x float>* %1465, align 1, !tbaa !12
  store <8 x float> %1523, <8 x float>* %1469, align 1, !tbaa !12
  store <8 x float> %1524, <8 x float>* %1473, align 1, !tbaa !12
  %1525 = add nuw nsw i64 %1394, 80
  %1526 = icmp ult i64 %1525, %1241
  br i1 %1526, label %1393, label %1387

1527:                                             ; preds = %1533
  br i1 %1097, label %1528, label %1667

1528:                                             ; preds = %1527
  %1529 = trunc i64 %76 to i32
  %1530 = mul nsw i32 %1096, %1529
  %1531 = sext i32 %1530 to i64
  %1532 = zext i32 %1096 to i64
  br label %1674

1533:                                             ; preds = %1388, %1533
  %1534 = phi i64 [ 0, %1388 ], [ %1665, %1533 ]
  %1535 = getelementptr inbounds float, float* %5, i64 %1534
  %1536 = getelementptr inbounds float, float* %1535, i64 8
  %1537 = bitcast float* %1536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1537, i32 0, i32 1, i32 1)
  %1538 = getelementptr inbounds float, float* %3, i64 %1534
  %1539 = getelementptr inbounds float, float* %1538, i64 8
  %1540 = bitcast float* %1539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1540, i32 0, i32 1, i32 1)
  %1541 = getelementptr inbounds float, float* %1535, i64 16
  %1542 = bitcast float* %1541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1542, i32 0, i32 1, i32 1)
  %1543 = getelementptr inbounds float, float* %1538, i64 16
  %1544 = bitcast float* %1543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1544, i32 0, i32 1, i32 1)
  %1545 = getelementptr inbounds float, float* %1535, i64 24
  %1546 = bitcast float* %1545 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1546, i32 0, i32 1, i32 1)
  %1547 = getelementptr inbounds float, float* %1538, i64 24
  %1548 = bitcast float* %1547 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1548, i32 0, i32 1, i32 1)
  %1549 = getelementptr inbounds float, float* %1535, i64 32
  %1550 = bitcast float* %1549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1550, i32 0, i32 1, i32 1)
  %1551 = getelementptr inbounds float, float* %1538, i64 32
  %1552 = bitcast float* %1551 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1552, i32 0, i32 1, i32 1)
  %1553 = getelementptr inbounds float, float* %1535, i64 40
  %1554 = bitcast float* %1553 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1554, i32 0, i32 1, i32 1)
  %1555 = getelementptr inbounds float, float* %1538, i64 40
  %1556 = bitcast float* %1555 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1556, i32 0, i32 1, i32 1)
  %1557 = getelementptr inbounds float, float* %1535, i64 48
  %1558 = bitcast float* %1557 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1558, i32 0, i32 1, i32 1)
  %1559 = getelementptr inbounds float, float* %1538, i64 48
  %1560 = bitcast float* %1559 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1560, i32 0, i32 1, i32 1)
  %1561 = getelementptr inbounds float, float* %1535, i64 56
  %1562 = bitcast float* %1561 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1562, i32 0, i32 1, i32 1)
  %1563 = getelementptr inbounds float, float* %1538, i64 56
  %1564 = bitcast float* %1563 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1564, i32 0, i32 1, i32 1)
  %1565 = getelementptr inbounds float, float* %1535, i64 64
  %1566 = bitcast float* %1565 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1566, i32 0, i32 1, i32 1)
  %1567 = getelementptr inbounds float, float* %1538, i64 64
  %1568 = bitcast float* %1567 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1568, i32 0, i32 1, i32 1)
  %1569 = getelementptr inbounds float, float* %1535, i64 72
  %1570 = bitcast float* %1569 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1570, i32 0, i32 1, i32 1)
  %1571 = getelementptr inbounds float, float* %1538, i64 72
  %1572 = bitcast float* %1571 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1572, i32 0, i32 1, i32 1)
  %1573 = getelementptr inbounds float, float* %1535, i64 80
  %1574 = bitcast float* %1573 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1574, i32 0, i32 1, i32 1)
  %1575 = getelementptr inbounds float, float* %1538, i64 80
  %1576 = bitcast float* %1575 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1576, i32 0, i32 1, i32 1)
  %1577 = bitcast float* %1535 to <8 x float>*
  %1578 = load <8 x float>, <8 x float>* %1577, align 1, !tbaa !12
  %1579 = or i64 %1534, 8
  %1580 = getelementptr inbounds float, float* %5, i64 %1579
  %1581 = bitcast float* %1580 to <8 x float>*
  %1582 = load <8 x float>, <8 x float>* %1581, align 1, !tbaa !12
  %1583 = add nuw nsw i64 %1534, 16
  %1584 = getelementptr inbounds float, float* %5, i64 %1583
  %1585 = bitcast float* %1584 to <8 x float>*
  %1586 = load <8 x float>, <8 x float>* %1585, align 1, !tbaa !12
  %1587 = add nuw nsw i64 %1534, 24
  %1588 = getelementptr inbounds float, float* %5, i64 %1587
  %1589 = bitcast float* %1588 to <8 x float>*
  %1590 = load <8 x float>, <8 x float>* %1589, align 1, !tbaa !12
  %1591 = add nuw nsw i64 %1534, 32
  %1592 = getelementptr inbounds float, float* %5, i64 %1591
  %1593 = bitcast float* %1592 to <8 x float>*
  %1594 = load <8 x float>, <8 x float>* %1593, align 1, !tbaa !12
  %1595 = add nuw nsw i64 %1534, 40
  %1596 = getelementptr inbounds float, float* %5, i64 %1595
  %1597 = bitcast float* %1596 to <8 x float>*
  %1598 = load <8 x float>, <8 x float>* %1597, align 1, !tbaa !12
  %1599 = add nuw nsw i64 %1534, 48
  %1600 = getelementptr inbounds float, float* %5, i64 %1599
  %1601 = bitcast float* %1600 to <8 x float>*
  %1602 = load <8 x float>, <8 x float>* %1601, align 1, !tbaa !12
  %1603 = add nuw nsw i64 %1534, 56
  %1604 = getelementptr inbounds float, float* %5, i64 %1603
  %1605 = bitcast float* %1604 to <8 x float>*
  %1606 = load <8 x float>, <8 x float>* %1605, align 1, !tbaa !12
  %1607 = add nuw nsw i64 %1534, 64
  %1608 = getelementptr inbounds float, float* %5, i64 %1607
  %1609 = bitcast float* %1608 to <8 x float>*
  %1610 = load <8 x float>, <8 x float>* %1609, align 1, !tbaa !12
  %1611 = add nuw nsw i64 %1534, 72
  %1612 = getelementptr inbounds float, float* %5, i64 %1611
  %1613 = bitcast float* %1612 to <8 x float>*
  %1614 = load <8 x float>, <8 x float>* %1613, align 1, !tbaa !12
  %1615 = add nsw i64 %1534, %1391
  %1616 = getelementptr inbounds float, float* %3, i64 %1615
  %1617 = bitcast float* %1616 to <8 x float>*
  %1618 = load <8 x float>, <8 x float>* %1617, align 1, !tbaa !12
  %1619 = add nsw i64 %1615, 8
  %1620 = getelementptr inbounds float, float* %3, i64 %1619
  %1621 = bitcast float* %1620 to <8 x float>*
  %1622 = load <8 x float>, <8 x float>* %1621, align 1, !tbaa !12
  %1623 = add nsw i64 %1615, 16
  %1624 = getelementptr inbounds float, float* %3, i64 %1623
  %1625 = bitcast float* %1624 to <8 x float>*
  %1626 = load <8 x float>, <8 x float>* %1625, align 1, !tbaa !12
  %1627 = add nsw i64 %1615, 24
  %1628 = getelementptr inbounds float, float* %3, i64 %1627
  %1629 = bitcast float* %1628 to <8 x float>*
  %1630 = load <8 x float>, <8 x float>* %1629, align 1, !tbaa !12
  %1631 = add nsw i64 %1615, 32
  %1632 = getelementptr inbounds float, float* %3, i64 %1631
  %1633 = bitcast float* %1632 to <8 x float>*
  %1634 = load <8 x float>, <8 x float>* %1633, align 1, !tbaa !12
  %1635 = add nsw i64 %1615, 40
  %1636 = getelementptr inbounds float, float* %3, i64 %1635
  %1637 = bitcast float* %1636 to <8 x float>*
  %1638 = load <8 x float>, <8 x float>* %1637, align 1, !tbaa !12
  %1639 = add nsw i64 %1615, 48
  %1640 = getelementptr inbounds float, float* %3, i64 %1639
  %1641 = bitcast float* %1640 to <8 x float>*
  %1642 = load <8 x float>, <8 x float>* %1641, align 1, !tbaa !12
  %1643 = add nsw i64 %1615, 56
  %1644 = getelementptr inbounds float, float* %3, i64 %1643
  %1645 = bitcast float* %1644 to <8 x float>*
  %1646 = load <8 x float>, <8 x float>* %1645, align 1, !tbaa !12
  %1647 = add nsw i64 %1615, 64
  %1648 = getelementptr inbounds float, float* %3, i64 %1647
  %1649 = bitcast float* %1648 to <8 x float>*
  %1650 = load <8 x float>, <8 x float>* %1649, align 1, !tbaa !12
  %1651 = add nsw i64 %1615, 72
  %1652 = getelementptr inbounds float, float* %3, i64 %1651
  %1653 = bitcast float* %1652 to <8 x float>*
  %1654 = load <8 x float>, <8 x float>* %1653, align 1, !tbaa !12
  %1655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1618, <8 x float> %75, <8 x float> %1578) #10
  %1656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1622, <8 x float> %75, <8 x float> %1582) #10
  %1657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1626, <8 x float> %75, <8 x float> %1586) #10
  %1658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1630, <8 x float> %75, <8 x float> %1590) #10
  %1659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1634, <8 x float> %75, <8 x float> %1594) #10
  %1660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1638, <8 x float> %75, <8 x float> %1598) #10
  %1661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1642, <8 x float> %75, <8 x float> %1602) #10
  %1662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1646, <8 x float> %75, <8 x float> %1606) #10
  %1663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1650, <8 x float> %75, <8 x float> %1610) #10
  %1664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1654, <8 x float> %75, <8 x float> %1614) #10
  store <8 x float> %1655, <8 x float>* %1577, align 1, !tbaa !12
  store <8 x float> %1656, <8 x float>* %1581, align 1, !tbaa !12
  store <8 x float> %1657, <8 x float>* %1585, align 1, !tbaa !12
  store <8 x float> %1658, <8 x float>* %1589, align 1, !tbaa !12
  store <8 x float> %1659, <8 x float>* %1593, align 1, !tbaa !12
  store <8 x float> %1660, <8 x float>* %1597, align 1, !tbaa !12
  store <8 x float> %1661, <8 x float>* %1601, align 1, !tbaa !12
  store <8 x float> %1662, <8 x float>* %1605, align 1, !tbaa !12
  store <8 x float> %1663, <8 x float>* %1609, align 1, !tbaa !12
  store <8 x float> %1664, <8 x float>* %1613, align 1, !tbaa !12
  %1665 = add nuw nsw i64 %1534, 80
  %1666 = icmp ult i64 %1665, %1392
  br i1 %1666, label %1533, label %1527

1667:                                             ; preds = %1674, %1236, %1387, %1527
  %1668 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1669 = icmp sgt i32 %1668, 0
  br i1 %1669, label %1670, label %1808

1670:                                             ; preds = %1667
  %1671 = zext i32 %1668 to i64
  %1672 = trunc i64 %81 to i32
  %1673 = mul nsw i32 %1668, %1672
  br label %1813

1674:                                             ; preds = %1528, %1674
  %1675 = phi i64 [ 0, %1528 ], [ %1806, %1674 ]
  %1676 = getelementptr inbounds float, float* %5, i64 %1675
  %1677 = getelementptr inbounds float, float* %1676, i64 8
  %1678 = bitcast float* %1677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1678, i32 0, i32 1, i32 1)
  %1679 = getelementptr inbounds float, float* %3, i64 %1675
  %1680 = getelementptr inbounds float, float* %1679, i64 8
  %1681 = bitcast float* %1680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1681, i32 0, i32 1, i32 1)
  %1682 = getelementptr inbounds float, float* %1676, i64 16
  %1683 = bitcast float* %1682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1683, i32 0, i32 1, i32 1)
  %1684 = getelementptr inbounds float, float* %1679, i64 16
  %1685 = bitcast float* %1684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1685, i32 0, i32 1, i32 1)
  %1686 = getelementptr inbounds float, float* %1676, i64 24
  %1687 = bitcast float* %1686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1687, i32 0, i32 1, i32 1)
  %1688 = getelementptr inbounds float, float* %1679, i64 24
  %1689 = bitcast float* %1688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1689, i32 0, i32 1, i32 1)
  %1690 = getelementptr inbounds float, float* %1676, i64 32
  %1691 = bitcast float* %1690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1691, i32 0, i32 1, i32 1)
  %1692 = getelementptr inbounds float, float* %1679, i64 32
  %1693 = bitcast float* %1692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1693, i32 0, i32 1, i32 1)
  %1694 = getelementptr inbounds float, float* %1676, i64 40
  %1695 = bitcast float* %1694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1695, i32 0, i32 1, i32 1)
  %1696 = getelementptr inbounds float, float* %1679, i64 40
  %1697 = bitcast float* %1696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1697, i32 0, i32 1, i32 1)
  %1698 = getelementptr inbounds float, float* %1676, i64 48
  %1699 = bitcast float* %1698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1699, i32 0, i32 1, i32 1)
  %1700 = getelementptr inbounds float, float* %1679, i64 48
  %1701 = bitcast float* %1700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1701, i32 0, i32 1, i32 1)
  %1702 = getelementptr inbounds float, float* %1676, i64 56
  %1703 = bitcast float* %1702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1703, i32 0, i32 1, i32 1)
  %1704 = getelementptr inbounds float, float* %1679, i64 56
  %1705 = bitcast float* %1704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1705, i32 0, i32 1, i32 1)
  %1706 = getelementptr inbounds float, float* %1676, i64 64
  %1707 = bitcast float* %1706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1707, i32 0, i32 1, i32 1)
  %1708 = getelementptr inbounds float, float* %1679, i64 64
  %1709 = bitcast float* %1708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1709, i32 0, i32 1, i32 1)
  %1710 = getelementptr inbounds float, float* %1676, i64 72
  %1711 = bitcast float* %1710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1711, i32 0, i32 1, i32 1)
  %1712 = getelementptr inbounds float, float* %1679, i64 72
  %1713 = bitcast float* %1712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1713, i32 0, i32 1, i32 1)
  %1714 = getelementptr inbounds float, float* %1676, i64 80
  %1715 = bitcast float* %1714 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1715, i32 0, i32 1, i32 1)
  %1716 = getelementptr inbounds float, float* %1679, i64 80
  %1717 = bitcast float* %1716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1717, i32 0, i32 1, i32 1)
  %1718 = bitcast float* %1676 to <8 x float>*
  %1719 = load <8 x float>, <8 x float>* %1718, align 1, !tbaa !12
  %1720 = or i64 %1675, 8
  %1721 = getelementptr inbounds float, float* %5, i64 %1720
  %1722 = bitcast float* %1721 to <8 x float>*
  %1723 = load <8 x float>, <8 x float>* %1722, align 1, !tbaa !12
  %1724 = add nuw nsw i64 %1675, 16
  %1725 = getelementptr inbounds float, float* %5, i64 %1724
  %1726 = bitcast float* %1725 to <8 x float>*
  %1727 = load <8 x float>, <8 x float>* %1726, align 1, !tbaa !12
  %1728 = add nuw nsw i64 %1675, 24
  %1729 = getelementptr inbounds float, float* %5, i64 %1728
  %1730 = bitcast float* %1729 to <8 x float>*
  %1731 = load <8 x float>, <8 x float>* %1730, align 1, !tbaa !12
  %1732 = add nuw nsw i64 %1675, 32
  %1733 = getelementptr inbounds float, float* %5, i64 %1732
  %1734 = bitcast float* %1733 to <8 x float>*
  %1735 = load <8 x float>, <8 x float>* %1734, align 1, !tbaa !12
  %1736 = add nuw nsw i64 %1675, 40
  %1737 = getelementptr inbounds float, float* %5, i64 %1736
  %1738 = bitcast float* %1737 to <8 x float>*
  %1739 = load <8 x float>, <8 x float>* %1738, align 1, !tbaa !12
  %1740 = add nuw nsw i64 %1675, 48
  %1741 = getelementptr inbounds float, float* %5, i64 %1740
  %1742 = bitcast float* %1741 to <8 x float>*
  %1743 = load <8 x float>, <8 x float>* %1742, align 1, !tbaa !12
  %1744 = add nuw nsw i64 %1675, 56
  %1745 = getelementptr inbounds float, float* %5, i64 %1744
  %1746 = bitcast float* %1745 to <8 x float>*
  %1747 = load <8 x float>, <8 x float>* %1746, align 1, !tbaa !12
  %1748 = add nuw nsw i64 %1675, 64
  %1749 = getelementptr inbounds float, float* %5, i64 %1748
  %1750 = bitcast float* %1749 to <8 x float>*
  %1751 = load <8 x float>, <8 x float>* %1750, align 1, !tbaa !12
  %1752 = add nuw nsw i64 %1675, 72
  %1753 = getelementptr inbounds float, float* %5, i64 %1752
  %1754 = bitcast float* %1753 to <8 x float>*
  %1755 = load <8 x float>, <8 x float>* %1754, align 1, !tbaa !12
  %1756 = add nsw i64 %1675, %1531
  %1757 = getelementptr inbounds float, float* %3, i64 %1756
  %1758 = bitcast float* %1757 to <8 x float>*
  %1759 = load <8 x float>, <8 x float>* %1758, align 1, !tbaa !12
  %1760 = add nsw i64 %1756, 8
  %1761 = getelementptr inbounds float, float* %3, i64 %1760
  %1762 = bitcast float* %1761 to <8 x float>*
  %1763 = load <8 x float>, <8 x float>* %1762, align 1, !tbaa !12
  %1764 = add nsw i64 %1756, 16
  %1765 = getelementptr inbounds float, float* %3, i64 %1764
  %1766 = bitcast float* %1765 to <8 x float>*
  %1767 = load <8 x float>, <8 x float>* %1766, align 1, !tbaa !12
  %1768 = add nsw i64 %1756, 24
  %1769 = getelementptr inbounds float, float* %3, i64 %1768
  %1770 = bitcast float* %1769 to <8 x float>*
  %1771 = load <8 x float>, <8 x float>* %1770, align 1, !tbaa !12
  %1772 = add nsw i64 %1756, 32
  %1773 = getelementptr inbounds float, float* %3, i64 %1772
  %1774 = bitcast float* %1773 to <8 x float>*
  %1775 = load <8 x float>, <8 x float>* %1774, align 1, !tbaa !12
  %1776 = add nsw i64 %1756, 40
  %1777 = getelementptr inbounds float, float* %3, i64 %1776
  %1778 = bitcast float* %1777 to <8 x float>*
  %1779 = load <8 x float>, <8 x float>* %1778, align 1, !tbaa !12
  %1780 = add nsw i64 %1756, 48
  %1781 = getelementptr inbounds float, float* %3, i64 %1780
  %1782 = bitcast float* %1781 to <8 x float>*
  %1783 = load <8 x float>, <8 x float>* %1782, align 1, !tbaa !12
  %1784 = add nsw i64 %1756, 56
  %1785 = getelementptr inbounds float, float* %3, i64 %1784
  %1786 = bitcast float* %1785 to <8 x float>*
  %1787 = load <8 x float>, <8 x float>* %1786, align 1, !tbaa !12
  %1788 = add nsw i64 %1756, 64
  %1789 = getelementptr inbounds float, float* %3, i64 %1788
  %1790 = bitcast float* %1789 to <8 x float>*
  %1791 = load <8 x float>, <8 x float>* %1790, align 1, !tbaa !12
  %1792 = add nsw i64 %1756, 72
  %1793 = getelementptr inbounds float, float* %3, i64 %1792
  %1794 = bitcast float* %1793 to <8 x float>*
  %1795 = load <8 x float>, <8 x float>* %1794, align 1, !tbaa !12
  %1796 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1759, <8 x float> %80, <8 x float> %1719) #10
  %1797 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1763, <8 x float> %80, <8 x float> %1723) #10
  %1798 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1767, <8 x float> %80, <8 x float> %1727) #10
  %1799 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1771, <8 x float> %80, <8 x float> %1731) #10
  %1800 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1775, <8 x float> %80, <8 x float> %1735) #10
  %1801 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1779, <8 x float> %80, <8 x float> %1739) #10
  %1802 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1783, <8 x float> %80, <8 x float> %1743) #10
  %1803 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1787, <8 x float> %80, <8 x float> %1747) #10
  %1804 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1791, <8 x float> %80, <8 x float> %1751) #10
  %1805 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1795, <8 x float> %80, <8 x float> %1755) #10
  store <8 x float> %1796, <8 x float>* %1718, align 1, !tbaa !12
  store <8 x float> %1797, <8 x float>* %1722, align 1, !tbaa !12
  store <8 x float> %1798, <8 x float>* %1726, align 1, !tbaa !12
  store <8 x float> %1799, <8 x float>* %1730, align 1, !tbaa !12
  store <8 x float> %1800, <8 x float>* %1734, align 1, !tbaa !12
  store <8 x float> %1801, <8 x float>* %1738, align 1, !tbaa !12
  store <8 x float> %1802, <8 x float>* %1742, align 1, !tbaa !12
  store <8 x float> %1803, <8 x float>* %1746, align 1, !tbaa !12
  store <8 x float> %1804, <8 x float>* %1750, align 1, !tbaa !12
  store <8 x float> %1805, <8 x float>* %1754, align 1, !tbaa !12
  %1806 = add nuw nsw i64 %1675, 80
  %1807 = icmp ult i64 %1806, %1532
  br i1 %1807, label %1674, label %1667

1808:                                             ; preds = %1813, %523, %20, %1095, %1667
  %1809 = add nuw nsw i64 %21, 13
  %1810 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1811 = sext i32 %1810 to i64
  %1812 = icmp slt i64 %1809, %1811
  br i1 %1812, label %20, label %8

1813:                                             ; preds = %1670, %1813
  %1814 = phi i64 [ 0, %1670 ], [ %1956, %1813 ]
  %1815 = getelementptr inbounds float, float* %5, i64 %1814
  %1816 = getelementptr inbounds float, float* %1815, i64 8
  %1817 = bitcast float* %1816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1817, i32 0, i32 1, i32 1)
  %1818 = getelementptr inbounds float, float* %3, i64 %1814
  %1819 = getelementptr inbounds float, float* %1818, i64 8
  %1820 = bitcast float* %1819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1820, i32 0, i32 1, i32 1)
  %1821 = getelementptr inbounds float, float* %1815, i64 16
  %1822 = bitcast float* %1821 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1822, i32 0, i32 1, i32 1)
  %1823 = getelementptr inbounds float, float* %1818, i64 16
  %1824 = bitcast float* %1823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1824, i32 0, i32 1, i32 1)
  %1825 = getelementptr inbounds float, float* %1815, i64 24
  %1826 = bitcast float* %1825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1826, i32 0, i32 1, i32 1)
  %1827 = getelementptr inbounds float, float* %1818, i64 24
  %1828 = bitcast float* %1827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1828, i32 0, i32 1, i32 1)
  %1829 = getelementptr inbounds float, float* %1815, i64 32
  %1830 = bitcast float* %1829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1830, i32 0, i32 1, i32 1)
  %1831 = getelementptr inbounds float, float* %1818, i64 32
  %1832 = bitcast float* %1831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1832, i32 0, i32 1, i32 1)
  %1833 = getelementptr inbounds float, float* %1815, i64 40
  %1834 = bitcast float* %1833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1834, i32 0, i32 1, i32 1)
  %1835 = getelementptr inbounds float, float* %1818, i64 40
  %1836 = bitcast float* %1835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1836, i32 0, i32 1, i32 1)
  %1837 = getelementptr inbounds float, float* %1815, i64 48
  %1838 = bitcast float* %1837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1838, i32 0, i32 1, i32 1)
  %1839 = getelementptr inbounds float, float* %1818, i64 48
  %1840 = bitcast float* %1839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1840, i32 0, i32 1, i32 1)
  %1841 = getelementptr inbounds float, float* %1815, i64 56
  %1842 = bitcast float* %1841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1842, i32 0, i32 1, i32 1)
  %1843 = getelementptr inbounds float, float* %1818, i64 56
  %1844 = bitcast float* %1843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1844, i32 0, i32 1, i32 1)
  %1845 = getelementptr inbounds float, float* %1815, i64 64
  %1846 = bitcast float* %1845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1846, i32 0, i32 1, i32 1)
  %1847 = getelementptr inbounds float, float* %1818, i64 64
  %1848 = bitcast float* %1847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1848, i32 0, i32 1, i32 1)
  %1849 = getelementptr inbounds float, float* %1815, i64 72
  %1850 = bitcast float* %1849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1850, i32 0, i32 1, i32 1)
  %1851 = getelementptr inbounds float, float* %1818, i64 72
  %1852 = bitcast float* %1851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1852, i32 0, i32 1, i32 1)
  %1853 = getelementptr inbounds float, float* %1815, i64 80
  %1854 = bitcast float* %1853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1854, i32 0, i32 1, i32 1)
  %1855 = getelementptr inbounds float, float* %1818, i64 80
  %1856 = bitcast float* %1855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1856, i32 0, i32 1, i32 1)
  %1857 = bitcast float* %1815 to <8 x float>*
  %1858 = load <8 x float>, <8 x float>* %1857, align 1, !tbaa !12
  %1859 = or i64 %1814, 8
  %1860 = getelementptr inbounds float, float* %5, i64 %1859
  %1861 = bitcast float* %1860 to <8 x float>*
  %1862 = load <8 x float>, <8 x float>* %1861, align 1, !tbaa !12
  %1863 = add nuw nsw i64 %1814, 16
  %1864 = getelementptr inbounds float, float* %5, i64 %1863
  %1865 = bitcast float* %1864 to <8 x float>*
  %1866 = load <8 x float>, <8 x float>* %1865, align 1, !tbaa !12
  %1867 = add nuw nsw i64 %1814, 24
  %1868 = getelementptr inbounds float, float* %5, i64 %1867
  %1869 = bitcast float* %1868 to <8 x float>*
  %1870 = load <8 x float>, <8 x float>* %1869, align 1, !tbaa !12
  %1871 = add nuw nsw i64 %1814, 32
  %1872 = getelementptr inbounds float, float* %5, i64 %1871
  %1873 = bitcast float* %1872 to <8 x float>*
  %1874 = load <8 x float>, <8 x float>* %1873, align 1, !tbaa !12
  %1875 = add nuw nsw i64 %1814, 40
  %1876 = getelementptr inbounds float, float* %5, i64 %1875
  %1877 = bitcast float* %1876 to <8 x float>*
  %1878 = load <8 x float>, <8 x float>* %1877, align 1, !tbaa !12
  %1879 = add nuw nsw i64 %1814, 48
  %1880 = getelementptr inbounds float, float* %5, i64 %1879
  %1881 = bitcast float* %1880 to <8 x float>*
  %1882 = load <8 x float>, <8 x float>* %1881, align 1, !tbaa !12
  %1883 = add nuw nsw i64 %1814, 56
  %1884 = getelementptr inbounds float, float* %5, i64 %1883
  %1885 = bitcast float* %1884 to <8 x float>*
  %1886 = load <8 x float>, <8 x float>* %1885, align 1, !tbaa !12
  %1887 = add nuw nsw i64 %1814, 64
  %1888 = getelementptr inbounds float, float* %5, i64 %1887
  %1889 = bitcast float* %1888 to <8 x float>*
  %1890 = load <8 x float>, <8 x float>* %1889, align 1, !tbaa !12
  %1891 = add nuw nsw i64 %1814, 72
  %1892 = getelementptr inbounds float, float* %5, i64 %1891
  %1893 = bitcast float* %1892 to <8 x float>*
  %1894 = load <8 x float>, <8 x float>* %1893, align 1, !tbaa !12
  %1895 = trunc i64 %1814 to i32
  %1896 = add nsw i32 %1673, %1895
  %1897 = sext i32 %1896 to i64
  %1898 = getelementptr inbounds float, float* %3, i64 %1897
  %1899 = bitcast float* %1898 to <8 x float>*
  %1900 = load <8 x float>, <8 x float>* %1899, align 1, !tbaa !12
  %1901 = add nsw i32 %1896, 8
  %1902 = sext i32 %1901 to i64
  %1903 = getelementptr inbounds float, float* %3, i64 %1902
  %1904 = bitcast float* %1903 to <8 x float>*
  %1905 = load <8 x float>, <8 x float>* %1904, align 1, !tbaa !12
  %1906 = add nsw i32 %1896, 16
  %1907 = sext i32 %1906 to i64
  %1908 = getelementptr inbounds float, float* %3, i64 %1907
  %1909 = bitcast float* %1908 to <8 x float>*
  %1910 = load <8 x float>, <8 x float>* %1909, align 1, !tbaa !12
  %1911 = add nsw i32 %1896, 24
  %1912 = sext i32 %1911 to i64
  %1913 = getelementptr inbounds float, float* %3, i64 %1912
  %1914 = bitcast float* %1913 to <8 x float>*
  %1915 = load <8 x float>, <8 x float>* %1914, align 1, !tbaa !12
  %1916 = add nsw i32 %1896, 32
  %1917 = sext i32 %1916 to i64
  %1918 = getelementptr inbounds float, float* %3, i64 %1917
  %1919 = bitcast float* %1918 to <8 x float>*
  %1920 = load <8 x float>, <8 x float>* %1919, align 1, !tbaa !12
  %1921 = add nsw i32 %1896, 40
  %1922 = sext i32 %1921 to i64
  %1923 = getelementptr inbounds float, float* %3, i64 %1922
  %1924 = bitcast float* %1923 to <8 x float>*
  %1925 = load <8 x float>, <8 x float>* %1924, align 1, !tbaa !12
  %1926 = add nsw i32 %1896, 48
  %1927 = sext i32 %1926 to i64
  %1928 = getelementptr inbounds float, float* %3, i64 %1927
  %1929 = bitcast float* %1928 to <8 x float>*
  %1930 = load <8 x float>, <8 x float>* %1929, align 1, !tbaa !12
  %1931 = add nsw i32 %1896, 56
  %1932 = sext i32 %1931 to i64
  %1933 = getelementptr inbounds float, float* %3, i64 %1932
  %1934 = bitcast float* %1933 to <8 x float>*
  %1935 = load <8 x float>, <8 x float>* %1934, align 1, !tbaa !12
  %1936 = add nsw i32 %1896, 64
  %1937 = sext i32 %1936 to i64
  %1938 = getelementptr inbounds float, float* %3, i64 %1937
  %1939 = bitcast float* %1938 to <8 x float>*
  %1940 = load <8 x float>, <8 x float>* %1939, align 1, !tbaa !12
  %1941 = add nsw i32 %1896, 72
  %1942 = sext i32 %1941 to i64
  %1943 = getelementptr inbounds float, float* %3, i64 %1942
  %1944 = bitcast float* %1943 to <8 x float>*
  %1945 = load <8 x float>, <8 x float>* %1944, align 1, !tbaa !12
  %1946 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1900, <8 x float> %85, <8 x float> %1858) #10
  %1947 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1905, <8 x float> %85, <8 x float> %1862) #10
  %1948 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1910, <8 x float> %85, <8 x float> %1866) #10
  %1949 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1915, <8 x float> %85, <8 x float> %1870) #10
  %1950 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1920, <8 x float> %85, <8 x float> %1874) #10
  %1951 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1925, <8 x float> %85, <8 x float> %1878) #10
  %1952 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1930, <8 x float> %85, <8 x float> %1882) #10
  %1953 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1935, <8 x float> %85, <8 x float> %1886) #10
  %1954 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1940, <8 x float> %85, <8 x float> %1890) #10
  %1955 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1945, <8 x float> %85, <8 x float> %1894) #10
  store <8 x float> %1946, <8 x float>* %1857, align 1, !tbaa !12
  store <8 x float> %1947, <8 x float>* %1861, align 1, !tbaa !12
  store <8 x float> %1948, <8 x float>* %1865, align 1, !tbaa !12
  store <8 x float> %1949, <8 x float>* %1869, align 1, !tbaa !12
  store <8 x float> %1950, <8 x float>* %1873, align 1, !tbaa !12
  store <8 x float> %1951, <8 x float>* %1877, align 1, !tbaa !12
  store <8 x float> %1952, <8 x float>* %1881, align 1, !tbaa !12
  store <8 x float> %1953, <8 x float>* %1885, align 1, !tbaa !12
  store <8 x float> %1954, <8 x float>* %1889, align 1, !tbaa !12
  store <8 x float> %1955, <8 x float>* %1893, align 1, !tbaa !12
  %1956 = add nuw nsw i64 %1814, 80
  %1957 = icmp ult i64 %1956, %1671
  br i1 %1957, label %1813, label %1808
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 273
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui10_uk13.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
