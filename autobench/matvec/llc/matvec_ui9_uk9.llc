; ModuleID = 'codes/matvec_ui9_uk9.cpp'
source_filename = "codes/matvec_ui9_uk9.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui9_uk9.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 72
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 72
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1110, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1110
  %21 = phi i64 [ %1111, %1110 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %1110

68:                                               ; preds = %20
  %69 = zext i32 %66 to i64
  %70 = trunc i64 %21 to i32
  %71 = mul nsw i32 %66, %70
  br label %78

72:                                               ; preds = %78
  br i1 %67, label %73, label %463

73:                                               ; preds = %72
  %74 = trunc i64 %26 to i32
  %75 = mul nsw i32 %66, %74
  %76 = sext i32 %75 to i64
  %77 = zext i32 %66 to i64
  br label %215

78:                                               ; preds = %68, %78
  %79 = phi i64 [ 0, %68 ], [ %207, %78 ]
  %80 = getelementptr inbounds float, float* %5, i64 %79
  %81 = getelementptr inbounds float, float* %80, i64 8
  %82 = bitcast float* %81 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %82, i32 0, i32 1, i32 1)
  %83 = getelementptr inbounds float, float* %3, i64 %79
  %84 = getelementptr inbounds float, float* %83, i64 8
  %85 = bitcast float* %84 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %85, i32 0, i32 1, i32 1)
  %86 = getelementptr inbounds float, float* %80, i64 16
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %83, i64 16
  %89 = bitcast float* %88 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %89, i32 0, i32 1, i32 1)
  %90 = getelementptr inbounds float, float* %80, i64 24
  %91 = bitcast float* %90 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %91, i32 0, i32 1, i32 1)
  %92 = getelementptr inbounds float, float* %83, i64 24
  %93 = bitcast float* %92 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %93, i32 0, i32 1, i32 1)
  %94 = getelementptr inbounds float, float* %80, i64 32
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %83, i64 32
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %80, i64 40
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %83, i64 40
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %80, i64 48
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %83, i64 48
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %80, i64 56
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %83, i64 56
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %80, i64 64
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %83, i64 64
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %80, i64 72
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %83, i64 72
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = bitcast float* %80 to <8 x float>*
  %119 = load <8 x float>, <8 x float>* %118, align 1, !tbaa !12
  %120 = add nuw nsw i64 %79, 8
  %121 = getelementptr inbounds float, float* %5, i64 %120
  %122 = bitcast float* %121 to <8 x float>*
  %123 = load <8 x float>, <8 x float>* %122, align 1, !tbaa !12
  %124 = add nuw nsw i64 %79, 16
  %125 = getelementptr inbounds float, float* %5, i64 %124
  %126 = bitcast float* %125 to <8 x float>*
  %127 = load <8 x float>, <8 x float>* %126, align 1, !tbaa !12
  %128 = add nuw nsw i64 %79, 24
  %129 = getelementptr inbounds float, float* %5, i64 %128
  %130 = bitcast float* %129 to <8 x float>*
  %131 = load <8 x float>, <8 x float>* %130, align 1, !tbaa !12
  %132 = add nuw nsw i64 %79, 32
  %133 = getelementptr inbounds float, float* %5, i64 %132
  %134 = bitcast float* %133 to <8 x float>*
  %135 = load <8 x float>, <8 x float>* %134, align 1, !tbaa !12
  %136 = add nuw nsw i64 %79, 40
  %137 = getelementptr inbounds float, float* %5, i64 %136
  %138 = bitcast float* %137 to <8 x float>*
  %139 = load <8 x float>, <8 x float>* %138, align 1, !tbaa !12
  %140 = add nuw nsw i64 %79, 48
  %141 = getelementptr inbounds float, float* %5, i64 %140
  %142 = bitcast float* %141 to <8 x float>*
  %143 = load <8 x float>, <8 x float>* %142, align 1, !tbaa !12
  %144 = add nuw nsw i64 %79, 56
  %145 = getelementptr inbounds float, float* %5, i64 %144
  %146 = bitcast float* %145 to <8 x float>*
  %147 = load <8 x float>, <8 x float>* %146, align 1, !tbaa !12
  %148 = add nuw nsw i64 %79, 64
  %149 = getelementptr inbounds float, float* %5, i64 %148
  %150 = bitcast float* %149 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = trunc i64 %79 to i32
  %153 = add nsw i32 %71, %152
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds float, float* %3, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nsw i32 %153, 8
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds float, float* %3, i64 %159
  %161 = bitcast float* %160 to <8 x float>*
  %162 = load <8 x float>, <8 x float>* %161, align 1, !tbaa !12
  %163 = add nsw i32 %153, 16
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds float, float* %3, i64 %164
  %166 = bitcast float* %165 to <8 x float>*
  %167 = load <8 x float>, <8 x float>* %166, align 1, !tbaa !12
  %168 = add nsw i32 %153, 24
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds float, float* %3, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nsw i32 %153, 32
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds float, float* %3, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nsw i32 %153, 40
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds float, float* %3, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = add nsw i32 %153, 48
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds float, float* %3, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = add nsw i32 %153, 56
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %3, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nsw i32 %153, 64
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %3, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %157, <8 x float> %25, <8 x float> %119) #10
  %199 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %162, <8 x float> %25, <8 x float> %123) #10
  %200 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %167, <8 x float> %25, <8 x float> %127) #10
  %201 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %172, <8 x float> %25, <8 x float> %131) #10
  %202 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %177, <8 x float> %25, <8 x float> %135) #10
  %203 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %182, <8 x float> %25, <8 x float> %139) #10
  %204 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %187, <8 x float> %25, <8 x float> %143) #10
  %205 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %192, <8 x float> %25, <8 x float> %147) #10
  %206 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %197, <8 x float> %25, <8 x float> %151) #10
  store <8 x float> %198, <8 x float>* %118, align 1, !tbaa !12
  store <8 x float> %199, <8 x float>* %122, align 1, !tbaa !12
  store <8 x float> %200, <8 x float>* %126, align 1, !tbaa !12
  store <8 x float> %201, <8 x float>* %130, align 1, !tbaa !12
  store <8 x float> %202, <8 x float>* %134, align 1, !tbaa !12
  store <8 x float> %203, <8 x float>* %138, align 1, !tbaa !12
  store <8 x float> %204, <8 x float>* %142, align 1, !tbaa !12
  store <8 x float> %205, <8 x float>* %146, align 1, !tbaa !12
  store <8 x float> %206, <8 x float>* %150, align 1, !tbaa !12
  %207 = add nuw nsw i64 %79, 72
  %208 = icmp ult i64 %207, %69
  br i1 %208, label %78, label %72

209:                                              ; preds = %215
  br i1 %67, label %210, label %463

210:                                              ; preds = %209
  %211 = trunc i64 %31 to i32
  %212 = mul nsw i32 %66, %211
  %213 = sext i32 %212 to i64
  %214 = zext i32 %66 to i64
  br label %342

215:                                              ; preds = %73, %215
  %216 = phi i64 [ 0, %73 ], [ %334, %215 ]
  %217 = getelementptr inbounds float, float* %5, i64 %216
  %218 = getelementptr inbounds float, float* %217, i64 8
  %219 = bitcast float* %218 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %219, i32 0, i32 1, i32 1)
  %220 = getelementptr inbounds float, float* %3, i64 %216
  %221 = getelementptr inbounds float, float* %220, i64 8
  %222 = bitcast float* %221 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %222, i32 0, i32 1, i32 1)
  %223 = getelementptr inbounds float, float* %217, i64 16
  %224 = bitcast float* %223 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %224, i32 0, i32 1, i32 1)
  %225 = getelementptr inbounds float, float* %220, i64 16
  %226 = bitcast float* %225 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %226, i32 0, i32 1, i32 1)
  %227 = getelementptr inbounds float, float* %217, i64 24
  %228 = bitcast float* %227 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %228, i32 0, i32 1, i32 1)
  %229 = getelementptr inbounds float, float* %220, i64 24
  %230 = bitcast float* %229 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %230, i32 0, i32 1, i32 1)
  %231 = getelementptr inbounds float, float* %217, i64 32
  %232 = bitcast float* %231 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %232, i32 0, i32 1, i32 1)
  %233 = getelementptr inbounds float, float* %220, i64 32
  %234 = bitcast float* %233 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %234, i32 0, i32 1, i32 1)
  %235 = getelementptr inbounds float, float* %217, i64 40
  %236 = bitcast float* %235 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %236, i32 0, i32 1, i32 1)
  %237 = getelementptr inbounds float, float* %220, i64 40
  %238 = bitcast float* %237 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %238, i32 0, i32 1, i32 1)
  %239 = getelementptr inbounds float, float* %217, i64 48
  %240 = bitcast float* %239 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %240, i32 0, i32 1, i32 1)
  %241 = getelementptr inbounds float, float* %220, i64 48
  %242 = bitcast float* %241 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %242, i32 0, i32 1, i32 1)
  %243 = getelementptr inbounds float, float* %217, i64 56
  %244 = bitcast float* %243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %244, i32 0, i32 1, i32 1)
  %245 = getelementptr inbounds float, float* %220, i64 56
  %246 = bitcast float* %245 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %246, i32 0, i32 1, i32 1)
  %247 = getelementptr inbounds float, float* %217, i64 64
  %248 = bitcast float* %247 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %248, i32 0, i32 1, i32 1)
  %249 = getelementptr inbounds float, float* %220, i64 64
  %250 = bitcast float* %249 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %250, i32 0, i32 1, i32 1)
  %251 = getelementptr inbounds float, float* %217, i64 72
  %252 = bitcast float* %251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %252, i32 0, i32 1, i32 1)
  %253 = getelementptr inbounds float, float* %220, i64 72
  %254 = bitcast float* %253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %254, i32 0, i32 1, i32 1)
  %255 = bitcast float* %217 to <8 x float>*
  %256 = load <8 x float>, <8 x float>* %255, align 1, !tbaa !12
  %257 = add nuw nsw i64 %216, 8
  %258 = getelementptr inbounds float, float* %5, i64 %257
  %259 = bitcast float* %258 to <8 x float>*
  %260 = load <8 x float>, <8 x float>* %259, align 1, !tbaa !12
  %261 = add nuw nsw i64 %216, 16
  %262 = getelementptr inbounds float, float* %5, i64 %261
  %263 = bitcast float* %262 to <8 x float>*
  %264 = load <8 x float>, <8 x float>* %263, align 1, !tbaa !12
  %265 = add nuw nsw i64 %216, 24
  %266 = getelementptr inbounds float, float* %5, i64 %265
  %267 = bitcast float* %266 to <8 x float>*
  %268 = load <8 x float>, <8 x float>* %267, align 1, !tbaa !12
  %269 = add nuw nsw i64 %216, 32
  %270 = getelementptr inbounds float, float* %5, i64 %269
  %271 = bitcast float* %270 to <8 x float>*
  %272 = load <8 x float>, <8 x float>* %271, align 1, !tbaa !12
  %273 = add nuw nsw i64 %216, 40
  %274 = getelementptr inbounds float, float* %5, i64 %273
  %275 = bitcast float* %274 to <8 x float>*
  %276 = load <8 x float>, <8 x float>* %275, align 1, !tbaa !12
  %277 = add nuw nsw i64 %216, 48
  %278 = getelementptr inbounds float, float* %5, i64 %277
  %279 = bitcast float* %278 to <8 x float>*
  %280 = load <8 x float>, <8 x float>* %279, align 1, !tbaa !12
  %281 = add nuw nsw i64 %216, 56
  %282 = getelementptr inbounds float, float* %5, i64 %281
  %283 = bitcast float* %282 to <8 x float>*
  %284 = load <8 x float>, <8 x float>* %283, align 1, !tbaa !12
  %285 = add nuw nsw i64 %216, 64
  %286 = getelementptr inbounds float, float* %5, i64 %285
  %287 = bitcast float* %286 to <8 x float>*
  %288 = load <8 x float>, <8 x float>* %287, align 1, !tbaa !12
  %289 = add nsw i64 %216, %76
  %290 = getelementptr inbounds float, float* %3, i64 %289
  %291 = bitcast float* %290 to <8 x float>*
  %292 = load <8 x float>, <8 x float>* %291, align 1, !tbaa !12
  %293 = add nsw i64 %289, 8
  %294 = getelementptr inbounds float, float* %3, i64 %293
  %295 = bitcast float* %294 to <8 x float>*
  %296 = load <8 x float>, <8 x float>* %295, align 1, !tbaa !12
  %297 = add nsw i64 %289, 16
  %298 = getelementptr inbounds float, float* %3, i64 %297
  %299 = bitcast float* %298 to <8 x float>*
  %300 = load <8 x float>, <8 x float>* %299, align 1, !tbaa !12
  %301 = add nsw i64 %289, 24
  %302 = getelementptr inbounds float, float* %3, i64 %301
  %303 = bitcast float* %302 to <8 x float>*
  %304 = load <8 x float>, <8 x float>* %303, align 1, !tbaa !12
  %305 = add nsw i64 %289, 32
  %306 = getelementptr inbounds float, float* %3, i64 %305
  %307 = bitcast float* %306 to <8 x float>*
  %308 = load <8 x float>, <8 x float>* %307, align 1, !tbaa !12
  %309 = add nsw i64 %289, 40
  %310 = getelementptr inbounds float, float* %3, i64 %309
  %311 = bitcast float* %310 to <8 x float>*
  %312 = load <8 x float>, <8 x float>* %311, align 1, !tbaa !12
  %313 = add nsw i64 %289, 48
  %314 = getelementptr inbounds float, float* %3, i64 %313
  %315 = bitcast float* %314 to <8 x float>*
  %316 = load <8 x float>, <8 x float>* %315, align 1, !tbaa !12
  %317 = add nsw i64 %289, 56
  %318 = getelementptr inbounds float, float* %3, i64 %317
  %319 = bitcast float* %318 to <8 x float>*
  %320 = load <8 x float>, <8 x float>* %319, align 1, !tbaa !12
  %321 = add nsw i64 %289, 64
  %322 = getelementptr inbounds float, float* %3, i64 %321
  %323 = bitcast float* %322 to <8 x float>*
  %324 = load <8 x float>, <8 x float>* %323, align 1, !tbaa !12
  %325 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %292, <8 x float> %30, <8 x float> %256) #10
  %326 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %296, <8 x float> %30, <8 x float> %260) #10
  %327 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %300, <8 x float> %30, <8 x float> %264) #10
  %328 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %304, <8 x float> %30, <8 x float> %268) #10
  %329 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %308, <8 x float> %30, <8 x float> %272) #10
  %330 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %312, <8 x float> %30, <8 x float> %276) #10
  %331 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %316, <8 x float> %30, <8 x float> %280) #10
  %332 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %320, <8 x float> %30, <8 x float> %284) #10
  %333 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %324, <8 x float> %30, <8 x float> %288) #10
  store <8 x float> %325, <8 x float>* %255, align 1, !tbaa !12
  store <8 x float> %326, <8 x float>* %259, align 1, !tbaa !12
  store <8 x float> %327, <8 x float>* %263, align 1, !tbaa !12
  store <8 x float> %328, <8 x float>* %267, align 1, !tbaa !12
  store <8 x float> %329, <8 x float>* %271, align 1, !tbaa !12
  store <8 x float> %330, <8 x float>* %275, align 1, !tbaa !12
  store <8 x float> %331, <8 x float>* %279, align 1, !tbaa !12
  store <8 x float> %332, <8 x float>* %283, align 1, !tbaa !12
  store <8 x float> %333, <8 x float>* %287, align 1, !tbaa !12
  %334 = add nuw nsw i64 %216, 72
  %335 = icmp ult i64 %334, %77
  br i1 %335, label %215, label %209

336:                                              ; preds = %342
  br i1 %67, label %337, label %463

337:                                              ; preds = %336
  %338 = trunc i64 %36 to i32
  %339 = mul nsw i32 %66, %338
  %340 = sext i32 %339 to i64
  %341 = zext i32 %66 to i64
  br label %470

342:                                              ; preds = %210, %342
  %343 = phi i64 [ 0, %210 ], [ %461, %342 ]
  %344 = getelementptr inbounds float, float* %5, i64 %343
  %345 = getelementptr inbounds float, float* %344, i64 8
  %346 = bitcast float* %345 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %346, i32 0, i32 1, i32 1)
  %347 = getelementptr inbounds float, float* %3, i64 %343
  %348 = getelementptr inbounds float, float* %347, i64 8
  %349 = bitcast float* %348 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %349, i32 0, i32 1, i32 1)
  %350 = getelementptr inbounds float, float* %344, i64 16
  %351 = bitcast float* %350 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %351, i32 0, i32 1, i32 1)
  %352 = getelementptr inbounds float, float* %347, i64 16
  %353 = bitcast float* %352 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %353, i32 0, i32 1, i32 1)
  %354 = getelementptr inbounds float, float* %344, i64 24
  %355 = bitcast float* %354 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %355, i32 0, i32 1, i32 1)
  %356 = getelementptr inbounds float, float* %347, i64 24
  %357 = bitcast float* %356 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %357, i32 0, i32 1, i32 1)
  %358 = getelementptr inbounds float, float* %344, i64 32
  %359 = bitcast float* %358 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %359, i32 0, i32 1, i32 1)
  %360 = getelementptr inbounds float, float* %347, i64 32
  %361 = bitcast float* %360 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %361, i32 0, i32 1, i32 1)
  %362 = getelementptr inbounds float, float* %344, i64 40
  %363 = bitcast float* %362 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %363, i32 0, i32 1, i32 1)
  %364 = getelementptr inbounds float, float* %347, i64 40
  %365 = bitcast float* %364 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %365, i32 0, i32 1, i32 1)
  %366 = getelementptr inbounds float, float* %344, i64 48
  %367 = bitcast float* %366 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %367, i32 0, i32 1, i32 1)
  %368 = getelementptr inbounds float, float* %347, i64 48
  %369 = bitcast float* %368 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %369, i32 0, i32 1, i32 1)
  %370 = getelementptr inbounds float, float* %344, i64 56
  %371 = bitcast float* %370 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %371, i32 0, i32 1, i32 1)
  %372 = getelementptr inbounds float, float* %347, i64 56
  %373 = bitcast float* %372 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %373, i32 0, i32 1, i32 1)
  %374 = getelementptr inbounds float, float* %344, i64 64
  %375 = bitcast float* %374 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %375, i32 0, i32 1, i32 1)
  %376 = getelementptr inbounds float, float* %347, i64 64
  %377 = bitcast float* %376 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %377, i32 0, i32 1, i32 1)
  %378 = getelementptr inbounds float, float* %344, i64 72
  %379 = bitcast float* %378 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %379, i32 0, i32 1, i32 1)
  %380 = getelementptr inbounds float, float* %347, i64 72
  %381 = bitcast float* %380 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %381, i32 0, i32 1, i32 1)
  %382 = bitcast float* %344 to <8 x float>*
  %383 = load <8 x float>, <8 x float>* %382, align 1, !tbaa !12
  %384 = add nuw nsw i64 %343, 8
  %385 = getelementptr inbounds float, float* %5, i64 %384
  %386 = bitcast float* %385 to <8 x float>*
  %387 = load <8 x float>, <8 x float>* %386, align 1, !tbaa !12
  %388 = add nuw nsw i64 %343, 16
  %389 = getelementptr inbounds float, float* %5, i64 %388
  %390 = bitcast float* %389 to <8 x float>*
  %391 = load <8 x float>, <8 x float>* %390, align 1, !tbaa !12
  %392 = add nuw nsw i64 %343, 24
  %393 = getelementptr inbounds float, float* %5, i64 %392
  %394 = bitcast float* %393 to <8 x float>*
  %395 = load <8 x float>, <8 x float>* %394, align 1, !tbaa !12
  %396 = add nuw nsw i64 %343, 32
  %397 = getelementptr inbounds float, float* %5, i64 %396
  %398 = bitcast float* %397 to <8 x float>*
  %399 = load <8 x float>, <8 x float>* %398, align 1, !tbaa !12
  %400 = add nuw nsw i64 %343, 40
  %401 = getelementptr inbounds float, float* %5, i64 %400
  %402 = bitcast float* %401 to <8 x float>*
  %403 = load <8 x float>, <8 x float>* %402, align 1, !tbaa !12
  %404 = add nuw nsw i64 %343, 48
  %405 = getelementptr inbounds float, float* %5, i64 %404
  %406 = bitcast float* %405 to <8 x float>*
  %407 = load <8 x float>, <8 x float>* %406, align 1, !tbaa !12
  %408 = add nuw nsw i64 %343, 56
  %409 = getelementptr inbounds float, float* %5, i64 %408
  %410 = bitcast float* %409 to <8 x float>*
  %411 = load <8 x float>, <8 x float>* %410, align 1, !tbaa !12
  %412 = add nuw nsw i64 %343, 64
  %413 = getelementptr inbounds float, float* %5, i64 %412
  %414 = bitcast float* %413 to <8 x float>*
  %415 = load <8 x float>, <8 x float>* %414, align 1, !tbaa !12
  %416 = add nsw i64 %343, %213
  %417 = getelementptr inbounds float, float* %3, i64 %416
  %418 = bitcast float* %417 to <8 x float>*
  %419 = load <8 x float>, <8 x float>* %418, align 1, !tbaa !12
  %420 = add nsw i64 %416, 8
  %421 = getelementptr inbounds float, float* %3, i64 %420
  %422 = bitcast float* %421 to <8 x float>*
  %423 = load <8 x float>, <8 x float>* %422, align 1, !tbaa !12
  %424 = add nsw i64 %416, 16
  %425 = getelementptr inbounds float, float* %3, i64 %424
  %426 = bitcast float* %425 to <8 x float>*
  %427 = load <8 x float>, <8 x float>* %426, align 1, !tbaa !12
  %428 = add nsw i64 %416, 24
  %429 = getelementptr inbounds float, float* %3, i64 %428
  %430 = bitcast float* %429 to <8 x float>*
  %431 = load <8 x float>, <8 x float>* %430, align 1, !tbaa !12
  %432 = add nsw i64 %416, 32
  %433 = getelementptr inbounds float, float* %3, i64 %432
  %434 = bitcast float* %433 to <8 x float>*
  %435 = load <8 x float>, <8 x float>* %434, align 1, !tbaa !12
  %436 = add nsw i64 %416, 40
  %437 = getelementptr inbounds float, float* %3, i64 %436
  %438 = bitcast float* %437 to <8 x float>*
  %439 = load <8 x float>, <8 x float>* %438, align 1, !tbaa !12
  %440 = add nsw i64 %416, 48
  %441 = getelementptr inbounds float, float* %3, i64 %440
  %442 = bitcast float* %441 to <8 x float>*
  %443 = load <8 x float>, <8 x float>* %442, align 1, !tbaa !12
  %444 = add nsw i64 %416, 56
  %445 = getelementptr inbounds float, float* %3, i64 %444
  %446 = bitcast float* %445 to <8 x float>*
  %447 = load <8 x float>, <8 x float>* %446, align 1, !tbaa !12
  %448 = add nsw i64 %416, 64
  %449 = getelementptr inbounds float, float* %3, i64 %448
  %450 = bitcast float* %449 to <8 x float>*
  %451 = load <8 x float>, <8 x float>* %450, align 1, !tbaa !12
  %452 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %419, <8 x float> %35, <8 x float> %383) #10
  %453 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %423, <8 x float> %35, <8 x float> %387) #10
  %454 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %427, <8 x float> %35, <8 x float> %391) #10
  %455 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %431, <8 x float> %35, <8 x float> %395) #10
  %456 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %435, <8 x float> %35, <8 x float> %399) #10
  %457 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %439, <8 x float> %35, <8 x float> %403) #10
  %458 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %443, <8 x float> %35, <8 x float> %407) #10
  %459 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %447, <8 x float> %35, <8 x float> %411) #10
  %460 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %451, <8 x float> %35, <8 x float> %415) #10
  store <8 x float> %452, <8 x float>* %382, align 1, !tbaa !12
  store <8 x float> %453, <8 x float>* %386, align 1, !tbaa !12
  store <8 x float> %454, <8 x float>* %390, align 1, !tbaa !12
  store <8 x float> %455, <8 x float>* %394, align 1, !tbaa !12
  store <8 x float> %456, <8 x float>* %398, align 1, !tbaa !12
  store <8 x float> %457, <8 x float>* %402, align 1, !tbaa !12
  store <8 x float> %458, <8 x float>* %406, align 1, !tbaa !12
  store <8 x float> %459, <8 x float>* %410, align 1, !tbaa !12
  store <8 x float> %460, <8 x float>* %414, align 1, !tbaa !12
  %461 = add nuw nsw i64 %343, 72
  %462 = icmp ult i64 %461, %214
  br i1 %462, label %342, label %336

463:                                              ; preds = %470, %72, %209, %336
  %464 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %465 = icmp sgt i32 %464, 0
  br i1 %465, label %466, label %1110

466:                                              ; preds = %463
  %467 = zext i32 %464 to i64
  %468 = trunc i64 %41 to i32
  %469 = mul nsw i32 %464, %468
  br label %597

470:                                              ; preds = %337, %470
  %471 = phi i64 [ 0, %337 ], [ %589, %470 ]
  %472 = getelementptr inbounds float, float* %5, i64 %471
  %473 = getelementptr inbounds float, float* %472, i64 8
  %474 = bitcast float* %473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %474, i32 0, i32 1, i32 1)
  %475 = getelementptr inbounds float, float* %3, i64 %471
  %476 = getelementptr inbounds float, float* %475, i64 8
  %477 = bitcast float* %476 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %477, i32 0, i32 1, i32 1)
  %478 = getelementptr inbounds float, float* %472, i64 16
  %479 = bitcast float* %478 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %479, i32 0, i32 1, i32 1)
  %480 = getelementptr inbounds float, float* %475, i64 16
  %481 = bitcast float* %480 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %481, i32 0, i32 1, i32 1)
  %482 = getelementptr inbounds float, float* %472, i64 24
  %483 = bitcast float* %482 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %483, i32 0, i32 1, i32 1)
  %484 = getelementptr inbounds float, float* %475, i64 24
  %485 = bitcast float* %484 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %485, i32 0, i32 1, i32 1)
  %486 = getelementptr inbounds float, float* %472, i64 32
  %487 = bitcast float* %486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %487, i32 0, i32 1, i32 1)
  %488 = getelementptr inbounds float, float* %475, i64 32
  %489 = bitcast float* %488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %489, i32 0, i32 1, i32 1)
  %490 = getelementptr inbounds float, float* %472, i64 40
  %491 = bitcast float* %490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %491, i32 0, i32 1, i32 1)
  %492 = getelementptr inbounds float, float* %475, i64 40
  %493 = bitcast float* %492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %493, i32 0, i32 1, i32 1)
  %494 = getelementptr inbounds float, float* %472, i64 48
  %495 = bitcast float* %494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %495, i32 0, i32 1, i32 1)
  %496 = getelementptr inbounds float, float* %475, i64 48
  %497 = bitcast float* %496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %497, i32 0, i32 1, i32 1)
  %498 = getelementptr inbounds float, float* %472, i64 56
  %499 = bitcast float* %498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %499, i32 0, i32 1, i32 1)
  %500 = getelementptr inbounds float, float* %475, i64 56
  %501 = bitcast float* %500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %501, i32 0, i32 1, i32 1)
  %502 = getelementptr inbounds float, float* %472, i64 64
  %503 = bitcast float* %502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %503, i32 0, i32 1, i32 1)
  %504 = getelementptr inbounds float, float* %475, i64 64
  %505 = bitcast float* %504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %505, i32 0, i32 1, i32 1)
  %506 = getelementptr inbounds float, float* %472, i64 72
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %475, i64 72
  %509 = bitcast float* %508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %509, i32 0, i32 1, i32 1)
  %510 = bitcast float* %472 to <8 x float>*
  %511 = load <8 x float>, <8 x float>* %510, align 1, !tbaa !12
  %512 = add nuw nsw i64 %471, 8
  %513 = getelementptr inbounds float, float* %5, i64 %512
  %514 = bitcast float* %513 to <8 x float>*
  %515 = load <8 x float>, <8 x float>* %514, align 1, !tbaa !12
  %516 = add nuw nsw i64 %471, 16
  %517 = getelementptr inbounds float, float* %5, i64 %516
  %518 = bitcast float* %517 to <8 x float>*
  %519 = load <8 x float>, <8 x float>* %518, align 1, !tbaa !12
  %520 = add nuw nsw i64 %471, 24
  %521 = getelementptr inbounds float, float* %5, i64 %520
  %522 = bitcast float* %521 to <8 x float>*
  %523 = load <8 x float>, <8 x float>* %522, align 1, !tbaa !12
  %524 = add nuw nsw i64 %471, 32
  %525 = getelementptr inbounds float, float* %5, i64 %524
  %526 = bitcast float* %525 to <8 x float>*
  %527 = load <8 x float>, <8 x float>* %526, align 1, !tbaa !12
  %528 = add nuw nsw i64 %471, 40
  %529 = getelementptr inbounds float, float* %5, i64 %528
  %530 = bitcast float* %529 to <8 x float>*
  %531 = load <8 x float>, <8 x float>* %530, align 1, !tbaa !12
  %532 = add nuw nsw i64 %471, 48
  %533 = getelementptr inbounds float, float* %5, i64 %532
  %534 = bitcast float* %533 to <8 x float>*
  %535 = load <8 x float>, <8 x float>* %534, align 1, !tbaa !12
  %536 = add nuw nsw i64 %471, 56
  %537 = getelementptr inbounds float, float* %5, i64 %536
  %538 = bitcast float* %537 to <8 x float>*
  %539 = load <8 x float>, <8 x float>* %538, align 1, !tbaa !12
  %540 = add nuw nsw i64 %471, 64
  %541 = getelementptr inbounds float, float* %5, i64 %540
  %542 = bitcast float* %541 to <8 x float>*
  %543 = load <8 x float>, <8 x float>* %542, align 1, !tbaa !12
  %544 = add nsw i64 %471, %340
  %545 = getelementptr inbounds float, float* %3, i64 %544
  %546 = bitcast float* %545 to <8 x float>*
  %547 = load <8 x float>, <8 x float>* %546, align 1, !tbaa !12
  %548 = add nsw i64 %544, 8
  %549 = getelementptr inbounds float, float* %3, i64 %548
  %550 = bitcast float* %549 to <8 x float>*
  %551 = load <8 x float>, <8 x float>* %550, align 1, !tbaa !12
  %552 = add nsw i64 %544, 16
  %553 = getelementptr inbounds float, float* %3, i64 %552
  %554 = bitcast float* %553 to <8 x float>*
  %555 = load <8 x float>, <8 x float>* %554, align 1, !tbaa !12
  %556 = add nsw i64 %544, 24
  %557 = getelementptr inbounds float, float* %3, i64 %556
  %558 = bitcast float* %557 to <8 x float>*
  %559 = load <8 x float>, <8 x float>* %558, align 1, !tbaa !12
  %560 = add nsw i64 %544, 32
  %561 = getelementptr inbounds float, float* %3, i64 %560
  %562 = bitcast float* %561 to <8 x float>*
  %563 = load <8 x float>, <8 x float>* %562, align 1, !tbaa !12
  %564 = add nsw i64 %544, 40
  %565 = getelementptr inbounds float, float* %3, i64 %564
  %566 = bitcast float* %565 to <8 x float>*
  %567 = load <8 x float>, <8 x float>* %566, align 1, !tbaa !12
  %568 = add nsw i64 %544, 48
  %569 = getelementptr inbounds float, float* %3, i64 %568
  %570 = bitcast float* %569 to <8 x float>*
  %571 = load <8 x float>, <8 x float>* %570, align 1, !tbaa !12
  %572 = add nsw i64 %544, 56
  %573 = getelementptr inbounds float, float* %3, i64 %572
  %574 = bitcast float* %573 to <8 x float>*
  %575 = load <8 x float>, <8 x float>* %574, align 1, !tbaa !12
  %576 = add nsw i64 %544, 64
  %577 = getelementptr inbounds float, float* %3, i64 %576
  %578 = bitcast float* %577 to <8 x float>*
  %579 = load <8 x float>, <8 x float>* %578, align 1, !tbaa !12
  %580 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %547, <8 x float> %40, <8 x float> %511) #10
  %581 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %551, <8 x float> %40, <8 x float> %515) #10
  %582 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %555, <8 x float> %40, <8 x float> %519) #10
  %583 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %559, <8 x float> %40, <8 x float> %523) #10
  %584 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %563, <8 x float> %40, <8 x float> %527) #10
  %585 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %567, <8 x float> %40, <8 x float> %531) #10
  %586 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %571, <8 x float> %40, <8 x float> %535) #10
  %587 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %575, <8 x float> %40, <8 x float> %539) #10
  %588 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %579, <8 x float> %40, <8 x float> %543) #10
  store <8 x float> %580, <8 x float>* %510, align 1, !tbaa !12
  store <8 x float> %581, <8 x float>* %514, align 1, !tbaa !12
  store <8 x float> %582, <8 x float>* %518, align 1, !tbaa !12
  store <8 x float> %583, <8 x float>* %522, align 1, !tbaa !12
  store <8 x float> %584, <8 x float>* %526, align 1, !tbaa !12
  store <8 x float> %585, <8 x float>* %530, align 1, !tbaa !12
  store <8 x float> %586, <8 x float>* %534, align 1, !tbaa !12
  store <8 x float> %587, <8 x float>* %538, align 1, !tbaa !12
  store <8 x float> %588, <8 x float>* %542, align 1, !tbaa !12
  %589 = add nuw nsw i64 %471, 72
  %590 = icmp ult i64 %589, %341
  br i1 %590, label %470, label %463

591:                                              ; preds = %597
  br i1 %465, label %592, label %982

592:                                              ; preds = %591
  %593 = trunc i64 %46 to i32
  %594 = mul nsw i32 %464, %593
  %595 = sext i32 %594 to i64
  %596 = zext i32 %464 to i64
  br label %734

597:                                              ; preds = %466, %597
  %598 = phi i64 [ 0, %466 ], [ %726, %597 ]
  %599 = getelementptr inbounds float, float* %5, i64 %598
  %600 = getelementptr inbounds float, float* %599, i64 8
  %601 = bitcast float* %600 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %601, i32 0, i32 1, i32 1)
  %602 = getelementptr inbounds float, float* %3, i64 %598
  %603 = getelementptr inbounds float, float* %602, i64 8
  %604 = bitcast float* %603 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %604, i32 0, i32 1, i32 1)
  %605 = getelementptr inbounds float, float* %599, i64 16
  %606 = bitcast float* %605 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %606, i32 0, i32 1, i32 1)
  %607 = getelementptr inbounds float, float* %602, i64 16
  %608 = bitcast float* %607 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %608, i32 0, i32 1, i32 1)
  %609 = getelementptr inbounds float, float* %599, i64 24
  %610 = bitcast float* %609 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %610, i32 0, i32 1, i32 1)
  %611 = getelementptr inbounds float, float* %602, i64 24
  %612 = bitcast float* %611 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %612, i32 0, i32 1, i32 1)
  %613 = getelementptr inbounds float, float* %599, i64 32
  %614 = bitcast float* %613 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %614, i32 0, i32 1, i32 1)
  %615 = getelementptr inbounds float, float* %602, i64 32
  %616 = bitcast float* %615 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %616, i32 0, i32 1, i32 1)
  %617 = getelementptr inbounds float, float* %599, i64 40
  %618 = bitcast float* %617 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %618, i32 0, i32 1, i32 1)
  %619 = getelementptr inbounds float, float* %602, i64 40
  %620 = bitcast float* %619 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %620, i32 0, i32 1, i32 1)
  %621 = getelementptr inbounds float, float* %599, i64 48
  %622 = bitcast float* %621 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %622, i32 0, i32 1, i32 1)
  %623 = getelementptr inbounds float, float* %602, i64 48
  %624 = bitcast float* %623 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %624, i32 0, i32 1, i32 1)
  %625 = getelementptr inbounds float, float* %599, i64 56
  %626 = bitcast float* %625 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %626, i32 0, i32 1, i32 1)
  %627 = getelementptr inbounds float, float* %602, i64 56
  %628 = bitcast float* %627 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %628, i32 0, i32 1, i32 1)
  %629 = getelementptr inbounds float, float* %599, i64 64
  %630 = bitcast float* %629 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %630, i32 0, i32 1, i32 1)
  %631 = getelementptr inbounds float, float* %602, i64 64
  %632 = bitcast float* %631 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %632, i32 0, i32 1, i32 1)
  %633 = getelementptr inbounds float, float* %599, i64 72
  %634 = bitcast float* %633 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %634, i32 0, i32 1, i32 1)
  %635 = getelementptr inbounds float, float* %602, i64 72
  %636 = bitcast float* %635 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %636, i32 0, i32 1, i32 1)
  %637 = bitcast float* %599 to <8 x float>*
  %638 = load <8 x float>, <8 x float>* %637, align 1, !tbaa !12
  %639 = add nuw nsw i64 %598, 8
  %640 = getelementptr inbounds float, float* %5, i64 %639
  %641 = bitcast float* %640 to <8 x float>*
  %642 = load <8 x float>, <8 x float>* %641, align 1, !tbaa !12
  %643 = add nuw nsw i64 %598, 16
  %644 = getelementptr inbounds float, float* %5, i64 %643
  %645 = bitcast float* %644 to <8 x float>*
  %646 = load <8 x float>, <8 x float>* %645, align 1, !tbaa !12
  %647 = add nuw nsw i64 %598, 24
  %648 = getelementptr inbounds float, float* %5, i64 %647
  %649 = bitcast float* %648 to <8 x float>*
  %650 = load <8 x float>, <8 x float>* %649, align 1, !tbaa !12
  %651 = add nuw nsw i64 %598, 32
  %652 = getelementptr inbounds float, float* %5, i64 %651
  %653 = bitcast float* %652 to <8 x float>*
  %654 = load <8 x float>, <8 x float>* %653, align 1, !tbaa !12
  %655 = add nuw nsw i64 %598, 40
  %656 = getelementptr inbounds float, float* %5, i64 %655
  %657 = bitcast float* %656 to <8 x float>*
  %658 = load <8 x float>, <8 x float>* %657, align 1, !tbaa !12
  %659 = add nuw nsw i64 %598, 48
  %660 = getelementptr inbounds float, float* %5, i64 %659
  %661 = bitcast float* %660 to <8 x float>*
  %662 = load <8 x float>, <8 x float>* %661, align 1, !tbaa !12
  %663 = add nuw nsw i64 %598, 56
  %664 = getelementptr inbounds float, float* %5, i64 %663
  %665 = bitcast float* %664 to <8 x float>*
  %666 = load <8 x float>, <8 x float>* %665, align 1, !tbaa !12
  %667 = add nuw nsw i64 %598, 64
  %668 = getelementptr inbounds float, float* %5, i64 %667
  %669 = bitcast float* %668 to <8 x float>*
  %670 = load <8 x float>, <8 x float>* %669, align 1, !tbaa !12
  %671 = trunc i64 %598 to i32
  %672 = add nsw i32 %469, %671
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds float, float* %3, i64 %673
  %675 = bitcast float* %674 to <8 x float>*
  %676 = load <8 x float>, <8 x float>* %675, align 1, !tbaa !12
  %677 = add nsw i32 %672, 8
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds float, float* %3, i64 %678
  %680 = bitcast float* %679 to <8 x float>*
  %681 = load <8 x float>, <8 x float>* %680, align 1, !tbaa !12
  %682 = add nsw i32 %672, 16
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds float, float* %3, i64 %683
  %685 = bitcast float* %684 to <8 x float>*
  %686 = load <8 x float>, <8 x float>* %685, align 1, !tbaa !12
  %687 = add nsw i32 %672, 24
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds float, float* %3, i64 %688
  %690 = bitcast float* %689 to <8 x float>*
  %691 = load <8 x float>, <8 x float>* %690, align 1, !tbaa !12
  %692 = add nsw i32 %672, 32
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds float, float* %3, i64 %693
  %695 = bitcast float* %694 to <8 x float>*
  %696 = load <8 x float>, <8 x float>* %695, align 1, !tbaa !12
  %697 = add nsw i32 %672, 40
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds float, float* %3, i64 %698
  %700 = bitcast float* %699 to <8 x float>*
  %701 = load <8 x float>, <8 x float>* %700, align 1, !tbaa !12
  %702 = add nsw i32 %672, 48
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds float, float* %3, i64 %703
  %705 = bitcast float* %704 to <8 x float>*
  %706 = load <8 x float>, <8 x float>* %705, align 1, !tbaa !12
  %707 = add nsw i32 %672, 56
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds float, float* %3, i64 %708
  %710 = bitcast float* %709 to <8 x float>*
  %711 = load <8 x float>, <8 x float>* %710, align 1, !tbaa !12
  %712 = add nsw i32 %672, 64
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds float, float* %3, i64 %713
  %715 = bitcast float* %714 to <8 x float>*
  %716 = load <8 x float>, <8 x float>* %715, align 1, !tbaa !12
  %717 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %676, <8 x float> %45, <8 x float> %638) #10
  %718 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %681, <8 x float> %45, <8 x float> %642) #10
  %719 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %686, <8 x float> %45, <8 x float> %646) #10
  %720 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %691, <8 x float> %45, <8 x float> %650) #10
  %721 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %696, <8 x float> %45, <8 x float> %654) #10
  %722 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %701, <8 x float> %45, <8 x float> %658) #10
  %723 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %706, <8 x float> %45, <8 x float> %662) #10
  %724 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %711, <8 x float> %45, <8 x float> %666) #10
  %725 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %716, <8 x float> %45, <8 x float> %670) #10
  store <8 x float> %717, <8 x float>* %637, align 1, !tbaa !12
  store <8 x float> %718, <8 x float>* %641, align 1, !tbaa !12
  store <8 x float> %719, <8 x float>* %645, align 1, !tbaa !12
  store <8 x float> %720, <8 x float>* %649, align 1, !tbaa !12
  store <8 x float> %721, <8 x float>* %653, align 1, !tbaa !12
  store <8 x float> %722, <8 x float>* %657, align 1, !tbaa !12
  store <8 x float> %723, <8 x float>* %661, align 1, !tbaa !12
  store <8 x float> %724, <8 x float>* %665, align 1, !tbaa !12
  store <8 x float> %725, <8 x float>* %669, align 1, !tbaa !12
  %726 = add nuw nsw i64 %598, 72
  %727 = icmp ult i64 %726, %467
  br i1 %727, label %597, label %591

728:                                              ; preds = %734
  br i1 %465, label %729, label %982

729:                                              ; preds = %728
  %730 = trunc i64 %51 to i32
  %731 = mul nsw i32 %464, %730
  %732 = sext i32 %731 to i64
  %733 = zext i32 %464 to i64
  br label %861

734:                                              ; preds = %592, %734
  %735 = phi i64 [ 0, %592 ], [ %853, %734 ]
  %736 = getelementptr inbounds float, float* %5, i64 %735
  %737 = getelementptr inbounds float, float* %736, i64 8
  %738 = bitcast float* %737 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %738, i32 0, i32 1, i32 1)
  %739 = getelementptr inbounds float, float* %3, i64 %735
  %740 = getelementptr inbounds float, float* %739, i64 8
  %741 = bitcast float* %740 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %741, i32 0, i32 1, i32 1)
  %742 = getelementptr inbounds float, float* %736, i64 16
  %743 = bitcast float* %742 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %743, i32 0, i32 1, i32 1)
  %744 = getelementptr inbounds float, float* %739, i64 16
  %745 = bitcast float* %744 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %745, i32 0, i32 1, i32 1)
  %746 = getelementptr inbounds float, float* %736, i64 24
  %747 = bitcast float* %746 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %747, i32 0, i32 1, i32 1)
  %748 = getelementptr inbounds float, float* %739, i64 24
  %749 = bitcast float* %748 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %749, i32 0, i32 1, i32 1)
  %750 = getelementptr inbounds float, float* %736, i64 32
  %751 = bitcast float* %750 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %751, i32 0, i32 1, i32 1)
  %752 = getelementptr inbounds float, float* %739, i64 32
  %753 = bitcast float* %752 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %753, i32 0, i32 1, i32 1)
  %754 = getelementptr inbounds float, float* %736, i64 40
  %755 = bitcast float* %754 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %755, i32 0, i32 1, i32 1)
  %756 = getelementptr inbounds float, float* %739, i64 40
  %757 = bitcast float* %756 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %757, i32 0, i32 1, i32 1)
  %758 = getelementptr inbounds float, float* %736, i64 48
  %759 = bitcast float* %758 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %759, i32 0, i32 1, i32 1)
  %760 = getelementptr inbounds float, float* %739, i64 48
  %761 = bitcast float* %760 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %761, i32 0, i32 1, i32 1)
  %762 = getelementptr inbounds float, float* %736, i64 56
  %763 = bitcast float* %762 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %763, i32 0, i32 1, i32 1)
  %764 = getelementptr inbounds float, float* %739, i64 56
  %765 = bitcast float* %764 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %765, i32 0, i32 1, i32 1)
  %766 = getelementptr inbounds float, float* %736, i64 64
  %767 = bitcast float* %766 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %767, i32 0, i32 1, i32 1)
  %768 = getelementptr inbounds float, float* %739, i64 64
  %769 = bitcast float* %768 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %769, i32 0, i32 1, i32 1)
  %770 = getelementptr inbounds float, float* %736, i64 72
  %771 = bitcast float* %770 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %771, i32 0, i32 1, i32 1)
  %772 = getelementptr inbounds float, float* %739, i64 72
  %773 = bitcast float* %772 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %773, i32 0, i32 1, i32 1)
  %774 = bitcast float* %736 to <8 x float>*
  %775 = load <8 x float>, <8 x float>* %774, align 1, !tbaa !12
  %776 = add nuw nsw i64 %735, 8
  %777 = getelementptr inbounds float, float* %5, i64 %776
  %778 = bitcast float* %777 to <8 x float>*
  %779 = load <8 x float>, <8 x float>* %778, align 1, !tbaa !12
  %780 = add nuw nsw i64 %735, 16
  %781 = getelementptr inbounds float, float* %5, i64 %780
  %782 = bitcast float* %781 to <8 x float>*
  %783 = load <8 x float>, <8 x float>* %782, align 1, !tbaa !12
  %784 = add nuw nsw i64 %735, 24
  %785 = getelementptr inbounds float, float* %5, i64 %784
  %786 = bitcast float* %785 to <8 x float>*
  %787 = load <8 x float>, <8 x float>* %786, align 1, !tbaa !12
  %788 = add nuw nsw i64 %735, 32
  %789 = getelementptr inbounds float, float* %5, i64 %788
  %790 = bitcast float* %789 to <8 x float>*
  %791 = load <8 x float>, <8 x float>* %790, align 1, !tbaa !12
  %792 = add nuw nsw i64 %735, 40
  %793 = getelementptr inbounds float, float* %5, i64 %792
  %794 = bitcast float* %793 to <8 x float>*
  %795 = load <8 x float>, <8 x float>* %794, align 1, !tbaa !12
  %796 = add nuw nsw i64 %735, 48
  %797 = getelementptr inbounds float, float* %5, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %799 = load <8 x float>, <8 x float>* %798, align 1, !tbaa !12
  %800 = add nuw nsw i64 %735, 56
  %801 = getelementptr inbounds float, float* %5, i64 %800
  %802 = bitcast float* %801 to <8 x float>*
  %803 = load <8 x float>, <8 x float>* %802, align 1, !tbaa !12
  %804 = add nuw nsw i64 %735, 64
  %805 = getelementptr inbounds float, float* %5, i64 %804
  %806 = bitcast float* %805 to <8 x float>*
  %807 = load <8 x float>, <8 x float>* %806, align 1, !tbaa !12
  %808 = add nsw i64 %735, %595
  %809 = getelementptr inbounds float, float* %3, i64 %808
  %810 = bitcast float* %809 to <8 x float>*
  %811 = load <8 x float>, <8 x float>* %810, align 1, !tbaa !12
  %812 = add nsw i64 %808, 8
  %813 = getelementptr inbounds float, float* %3, i64 %812
  %814 = bitcast float* %813 to <8 x float>*
  %815 = load <8 x float>, <8 x float>* %814, align 1, !tbaa !12
  %816 = add nsw i64 %808, 16
  %817 = getelementptr inbounds float, float* %3, i64 %816
  %818 = bitcast float* %817 to <8 x float>*
  %819 = load <8 x float>, <8 x float>* %818, align 1, !tbaa !12
  %820 = add nsw i64 %808, 24
  %821 = getelementptr inbounds float, float* %3, i64 %820
  %822 = bitcast float* %821 to <8 x float>*
  %823 = load <8 x float>, <8 x float>* %822, align 1, !tbaa !12
  %824 = add nsw i64 %808, 32
  %825 = getelementptr inbounds float, float* %3, i64 %824
  %826 = bitcast float* %825 to <8 x float>*
  %827 = load <8 x float>, <8 x float>* %826, align 1, !tbaa !12
  %828 = add nsw i64 %808, 40
  %829 = getelementptr inbounds float, float* %3, i64 %828
  %830 = bitcast float* %829 to <8 x float>*
  %831 = load <8 x float>, <8 x float>* %830, align 1, !tbaa !12
  %832 = add nsw i64 %808, 48
  %833 = getelementptr inbounds float, float* %3, i64 %832
  %834 = bitcast float* %833 to <8 x float>*
  %835 = load <8 x float>, <8 x float>* %834, align 1, !tbaa !12
  %836 = add nsw i64 %808, 56
  %837 = getelementptr inbounds float, float* %3, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nsw i64 %808, 64
  %841 = getelementptr inbounds float, float* %3, i64 %840
  %842 = bitcast float* %841 to <8 x float>*
  %843 = load <8 x float>, <8 x float>* %842, align 1, !tbaa !12
  %844 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %811, <8 x float> %50, <8 x float> %775) #10
  %845 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %815, <8 x float> %50, <8 x float> %779) #10
  %846 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %819, <8 x float> %50, <8 x float> %783) #10
  %847 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %823, <8 x float> %50, <8 x float> %787) #10
  %848 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %827, <8 x float> %50, <8 x float> %791) #10
  %849 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %831, <8 x float> %50, <8 x float> %795) #10
  %850 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %835, <8 x float> %50, <8 x float> %799) #10
  %851 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %839, <8 x float> %50, <8 x float> %803) #10
  %852 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %843, <8 x float> %50, <8 x float> %807) #10
  store <8 x float> %844, <8 x float>* %774, align 1, !tbaa !12
  store <8 x float> %845, <8 x float>* %778, align 1, !tbaa !12
  store <8 x float> %846, <8 x float>* %782, align 1, !tbaa !12
  store <8 x float> %847, <8 x float>* %786, align 1, !tbaa !12
  store <8 x float> %848, <8 x float>* %790, align 1, !tbaa !12
  store <8 x float> %849, <8 x float>* %794, align 1, !tbaa !12
  store <8 x float> %850, <8 x float>* %798, align 1, !tbaa !12
  store <8 x float> %851, <8 x float>* %802, align 1, !tbaa !12
  store <8 x float> %852, <8 x float>* %806, align 1, !tbaa !12
  %853 = add nuw nsw i64 %735, 72
  %854 = icmp ult i64 %853, %596
  br i1 %854, label %734, label %728

855:                                              ; preds = %861
  br i1 %465, label %856, label %982

856:                                              ; preds = %855
  %857 = trunc i64 %56 to i32
  %858 = mul nsw i32 %464, %857
  %859 = sext i32 %858 to i64
  %860 = zext i32 %464 to i64
  br label %989

861:                                              ; preds = %729, %861
  %862 = phi i64 [ 0, %729 ], [ %980, %861 ]
  %863 = getelementptr inbounds float, float* %5, i64 %862
  %864 = getelementptr inbounds float, float* %863, i64 8
  %865 = bitcast float* %864 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %865, i32 0, i32 1, i32 1)
  %866 = getelementptr inbounds float, float* %3, i64 %862
  %867 = getelementptr inbounds float, float* %866, i64 8
  %868 = bitcast float* %867 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %868, i32 0, i32 1, i32 1)
  %869 = getelementptr inbounds float, float* %863, i64 16
  %870 = bitcast float* %869 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %870, i32 0, i32 1, i32 1)
  %871 = getelementptr inbounds float, float* %866, i64 16
  %872 = bitcast float* %871 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %872, i32 0, i32 1, i32 1)
  %873 = getelementptr inbounds float, float* %863, i64 24
  %874 = bitcast float* %873 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %874, i32 0, i32 1, i32 1)
  %875 = getelementptr inbounds float, float* %866, i64 24
  %876 = bitcast float* %875 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %876, i32 0, i32 1, i32 1)
  %877 = getelementptr inbounds float, float* %863, i64 32
  %878 = bitcast float* %877 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %878, i32 0, i32 1, i32 1)
  %879 = getelementptr inbounds float, float* %866, i64 32
  %880 = bitcast float* %879 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %880, i32 0, i32 1, i32 1)
  %881 = getelementptr inbounds float, float* %863, i64 40
  %882 = bitcast float* %881 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %882, i32 0, i32 1, i32 1)
  %883 = getelementptr inbounds float, float* %866, i64 40
  %884 = bitcast float* %883 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %884, i32 0, i32 1, i32 1)
  %885 = getelementptr inbounds float, float* %863, i64 48
  %886 = bitcast float* %885 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %886, i32 0, i32 1, i32 1)
  %887 = getelementptr inbounds float, float* %866, i64 48
  %888 = bitcast float* %887 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %888, i32 0, i32 1, i32 1)
  %889 = getelementptr inbounds float, float* %863, i64 56
  %890 = bitcast float* %889 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %890, i32 0, i32 1, i32 1)
  %891 = getelementptr inbounds float, float* %866, i64 56
  %892 = bitcast float* %891 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %892, i32 0, i32 1, i32 1)
  %893 = getelementptr inbounds float, float* %863, i64 64
  %894 = bitcast float* %893 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %894, i32 0, i32 1, i32 1)
  %895 = getelementptr inbounds float, float* %866, i64 64
  %896 = bitcast float* %895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %896, i32 0, i32 1, i32 1)
  %897 = getelementptr inbounds float, float* %863, i64 72
  %898 = bitcast float* %897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %898, i32 0, i32 1, i32 1)
  %899 = getelementptr inbounds float, float* %866, i64 72
  %900 = bitcast float* %899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %900, i32 0, i32 1, i32 1)
  %901 = bitcast float* %863 to <8 x float>*
  %902 = load <8 x float>, <8 x float>* %901, align 1, !tbaa !12
  %903 = add nuw nsw i64 %862, 8
  %904 = getelementptr inbounds float, float* %5, i64 %903
  %905 = bitcast float* %904 to <8 x float>*
  %906 = load <8 x float>, <8 x float>* %905, align 1, !tbaa !12
  %907 = add nuw nsw i64 %862, 16
  %908 = getelementptr inbounds float, float* %5, i64 %907
  %909 = bitcast float* %908 to <8 x float>*
  %910 = load <8 x float>, <8 x float>* %909, align 1, !tbaa !12
  %911 = add nuw nsw i64 %862, 24
  %912 = getelementptr inbounds float, float* %5, i64 %911
  %913 = bitcast float* %912 to <8 x float>*
  %914 = load <8 x float>, <8 x float>* %913, align 1, !tbaa !12
  %915 = add nuw nsw i64 %862, 32
  %916 = getelementptr inbounds float, float* %5, i64 %915
  %917 = bitcast float* %916 to <8 x float>*
  %918 = load <8 x float>, <8 x float>* %917, align 1, !tbaa !12
  %919 = add nuw nsw i64 %862, 40
  %920 = getelementptr inbounds float, float* %5, i64 %919
  %921 = bitcast float* %920 to <8 x float>*
  %922 = load <8 x float>, <8 x float>* %921, align 1, !tbaa !12
  %923 = add nuw nsw i64 %862, 48
  %924 = getelementptr inbounds float, float* %5, i64 %923
  %925 = bitcast float* %924 to <8 x float>*
  %926 = load <8 x float>, <8 x float>* %925, align 1, !tbaa !12
  %927 = add nuw nsw i64 %862, 56
  %928 = getelementptr inbounds float, float* %5, i64 %927
  %929 = bitcast float* %928 to <8 x float>*
  %930 = load <8 x float>, <8 x float>* %929, align 1, !tbaa !12
  %931 = add nuw nsw i64 %862, 64
  %932 = getelementptr inbounds float, float* %5, i64 %931
  %933 = bitcast float* %932 to <8 x float>*
  %934 = load <8 x float>, <8 x float>* %933, align 1, !tbaa !12
  %935 = add nsw i64 %862, %732
  %936 = getelementptr inbounds float, float* %3, i64 %935
  %937 = bitcast float* %936 to <8 x float>*
  %938 = load <8 x float>, <8 x float>* %937, align 1, !tbaa !12
  %939 = add nsw i64 %935, 8
  %940 = getelementptr inbounds float, float* %3, i64 %939
  %941 = bitcast float* %940 to <8 x float>*
  %942 = load <8 x float>, <8 x float>* %941, align 1, !tbaa !12
  %943 = add nsw i64 %935, 16
  %944 = getelementptr inbounds float, float* %3, i64 %943
  %945 = bitcast float* %944 to <8 x float>*
  %946 = load <8 x float>, <8 x float>* %945, align 1, !tbaa !12
  %947 = add nsw i64 %935, 24
  %948 = getelementptr inbounds float, float* %3, i64 %947
  %949 = bitcast float* %948 to <8 x float>*
  %950 = load <8 x float>, <8 x float>* %949, align 1, !tbaa !12
  %951 = add nsw i64 %935, 32
  %952 = getelementptr inbounds float, float* %3, i64 %951
  %953 = bitcast float* %952 to <8 x float>*
  %954 = load <8 x float>, <8 x float>* %953, align 1, !tbaa !12
  %955 = add nsw i64 %935, 40
  %956 = getelementptr inbounds float, float* %3, i64 %955
  %957 = bitcast float* %956 to <8 x float>*
  %958 = load <8 x float>, <8 x float>* %957, align 1, !tbaa !12
  %959 = add nsw i64 %935, 48
  %960 = getelementptr inbounds float, float* %3, i64 %959
  %961 = bitcast float* %960 to <8 x float>*
  %962 = load <8 x float>, <8 x float>* %961, align 1, !tbaa !12
  %963 = add nsw i64 %935, 56
  %964 = getelementptr inbounds float, float* %3, i64 %963
  %965 = bitcast float* %964 to <8 x float>*
  %966 = load <8 x float>, <8 x float>* %965, align 1, !tbaa !12
  %967 = add nsw i64 %935, 64
  %968 = getelementptr inbounds float, float* %3, i64 %967
  %969 = bitcast float* %968 to <8 x float>*
  %970 = load <8 x float>, <8 x float>* %969, align 1, !tbaa !12
  %971 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %938, <8 x float> %55, <8 x float> %902) #10
  %972 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %942, <8 x float> %55, <8 x float> %906) #10
  %973 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %946, <8 x float> %55, <8 x float> %910) #10
  %974 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %950, <8 x float> %55, <8 x float> %914) #10
  %975 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %954, <8 x float> %55, <8 x float> %918) #10
  %976 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %958, <8 x float> %55, <8 x float> %922) #10
  %977 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %962, <8 x float> %55, <8 x float> %926) #10
  %978 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %966, <8 x float> %55, <8 x float> %930) #10
  %979 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %970, <8 x float> %55, <8 x float> %934) #10
  store <8 x float> %971, <8 x float>* %901, align 1, !tbaa !12
  store <8 x float> %972, <8 x float>* %905, align 1, !tbaa !12
  store <8 x float> %973, <8 x float>* %909, align 1, !tbaa !12
  store <8 x float> %974, <8 x float>* %913, align 1, !tbaa !12
  store <8 x float> %975, <8 x float>* %917, align 1, !tbaa !12
  store <8 x float> %976, <8 x float>* %921, align 1, !tbaa !12
  store <8 x float> %977, <8 x float>* %925, align 1, !tbaa !12
  store <8 x float> %978, <8 x float>* %929, align 1, !tbaa !12
  store <8 x float> %979, <8 x float>* %933, align 1, !tbaa !12
  %980 = add nuw nsw i64 %862, 72
  %981 = icmp ult i64 %980, %733
  br i1 %981, label %861, label %855

982:                                              ; preds = %989, %591, %728, %855
  %983 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %984 = icmp sgt i32 %983, 0
  br i1 %984, label %985, label %1110

985:                                              ; preds = %982
  %986 = zext i32 %983 to i64
  %987 = trunc i64 %61 to i32
  %988 = mul nsw i32 %983, %987
  br label %1115

989:                                              ; preds = %856, %989
  %990 = phi i64 [ 0, %856 ], [ %1108, %989 ]
  %991 = getelementptr inbounds float, float* %5, i64 %990
  %992 = getelementptr inbounds float, float* %991, i64 8
  %993 = bitcast float* %992 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %993, i32 0, i32 1, i32 1)
  %994 = getelementptr inbounds float, float* %3, i64 %990
  %995 = getelementptr inbounds float, float* %994, i64 8
  %996 = bitcast float* %995 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %996, i32 0, i32 1, i32 1)
  %997 = getelementptr inbounds float, float* %991, i64 16
  %998 = bitcast float* %997 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %998, i32 0, i32 1, i32 1)
  %999 = getelementptr inbounds float, float* %994, i64 16
  %1000 = bitcast float* %999 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1000, i32 0, i32 1, i32 1)
  %1001 = getelementptr inbounds float, float* %991, i64 24
  %1002 = bitcast float* %1001 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1002, i32 0, i32 1, i32 1)
  %1003 = getelementptr inbounds float, float* %994, i64 24
  %1004 = bitcast float* %1003 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1004, i32 0, i32 1, i32 1)
  %1005 = getelementptr inbounds float, float* %991, i64 32
  %1006 = bitcast float* %1005 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1006, i32 0, i32 1, i32 1)
  %1007 = getelementptr inbounds float, float* %994, i64 32
  %1008 = bitcast float* %1007 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1008, i32 0, i32 1, i32 1)
  %1009 = getelementptr inbounds float, float* %991, i64 40
  %1010 = bitcast float* %1009 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1010, i32 0, i32 1, i32 1)
  %1011 = getelementptr inbounds float, float* %994, i64 40
  %1012 = bitcast float* %1011 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1012, i32 0, i32 1, i32 1)
  %1013 = getelementptr inbounds float, float* %991, i64 48
  %1014 = bitcast float* %1013 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1014, i32 0, i32 1, i32 1)
  %1015 = getelementptr inbounds float, float* %994, i64 48
  %1016 = bitcast float* %1015 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1016, i32 0, i32 1, i32 1)
  %1017 = getelementptr inbounds float, float* %991, i64 56
  %1018 = bitcast float* %1017 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1018, i32 0, i32 1, i32 1)
  %1019 = getelementptr inbounds float, float* %994, i64 56
  %1020 = bitcast float* %1019 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1020, i32 0, i32 1, i32 1)
  %1021 = getelementptr inbounds float, float* %991, i64 64
  %1022 = bitcast float* %1021 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1022, i32 0, i32 1, i32 1)
  %1023 = getelementptr inbounds float, float* %994, i64 64
  %1024 = bitcast float* %1023 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1024, i32 0, i32 1, i32 1)
  %1025 = getelementptr inbounds float, float* %991, i64 72
  %1026 = bitcast float* %1025 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1026, i32 0, i32 1, i32 1)
  %1027 = getelementptr inbounds float, float* %994, i64 72
  %1028 = bitcast float* %1027 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1028, i32 0, i32 1, i32 1)
  %1029 = bitcast float* %991 to <8 x float>*
  %1030 = load <8 x float>, <8 x float>* %1029, align 1, !tbaa !12
  %1031 = add nuw nsw i64 %990, 8
  %1032 = getelementptr inbounds float, float* %5, i64 %1031
  %1033 = bitcast float* %1032 to <8 x float>*
  %1034 = load <8 x float>, <8 x float>* %1033, align 1, !tbaa !12
  %1035 = add nuw nsw i64 %990, 16
  %1036 = getelementptr inbounds float, float* %5, i64 %1035
  %1037 = bitcast float* %1036 to <8 x float>*
  %1038 = load <8 x float>, <8 x float>* %1037, align 1, !tbaa !12
  %1039 = add nuw nsw i64 %990, 24
  %1040 = getelementptr inbounds float, float* %5, i64 %1039
  %1041 = bitcast float* %1040 to <8 x float>*
  %1042 = load <8 x float>, <8 x float>* %1041, align 1, !tbaa !12
  %1043 = add nuw nsw i64 %990, 32
  %1044 = getelementptr inbounds float, float* %5, i64 %1043
  %1045 = bitcast float* %1044 to <8 x float>*
  %1046 = load <8 x float>, <8 x float>* %1045, align 1, !tbaa !12
  %1047 = add nuw nsw i64 %990, 40
  %1048 = getelementptr inbounds float, float* %5, i64 %1047
  %1049 = bitcast float* %1048 to <8 x float>*
  %1050 = load <8 x float>, <8 x float>* %1049, align 1, !tbaa !12
  %1051 = add nuw nsw i64 %990, 48
  %1052 = getelementptr inbounds float, float* %5, i64 %1051
  %1053 = bitcast float* %1052 to <8 x float>*
  %1054 = load <8 x float>, <8 x float>* %1053, align 1, !tbaa !12
  %1055 = add nuw nsw i64 %990, 56
  %1056 = getelementptr inbounds float, float* %5, i64 %1055
  %1057 = bitcast float* %1056 to <8 x float>*
  %1058 = load <8 x float>, <8 x float>* %1057, align 1, !tbaa !12
  %1059 = add nuw nsw i64 %990, 64
  %1060 = getelementptr inbounds float, float* %5, i64 %1059
  %1061 = bitcast float* %1060 to <8 x float>*
  %1062 = load <8 x float>, <8 x float>* %1061, align 1, !tbaa !12
  %1063 = add nsw i64 %990, %859
  %1064 = getelementptr inbounds float, float* %3, i64 %1063
  %1065 = bitcast float* %1064 to <8 x float>*
  %1066 = load <8 x float>, <8 x float>* %1065, align 1, !tbaa !12
  %1067 = add nsw i64 %1063, 8
  %1068 = getelementptr inbounds float, float* %3, i64 %1067
  %1069 = bitcast float* %1068 to <8 x float>*
  %1070 = load <8 x float>, <8 x float>* %1069, align 1, !tbaa !12
  %1071 = add nsw i64 %1063, 16
  %1072 = getelementptr inbounds float, float* %3, i64 %1071
  %1073 = bitcast float* %1072 to <8 x float>*
  %1074 = load <8 x float>, <8 x float>* %1073, align 1, !tbaa !12
  %1075 = add nsw i64 %1063, 24
  %1076 = getelementptr inbounds float, float* %3, i64 %1075
  %1077 = bitcast float* %1076 to <8 x float>*
  %1078 = load <8 x float>, <8 x float>* %1077, align 1, !tbaa !12
  %1079 = add nsw i64 %1063, 32
  %1080 = getelementptr inbounds float, float* %3, i64 %1079
  %1081 = bitcast float* %1080 to <8 x float>*
  %1082 = load <8 x float>, <8 x float>* %1081, align 1, !tbaa !12
  %1083 = add nsw i64 %1063, 40
  %1084 = getelementptr inbounds float, float* %3, i64 %1083
  %1085 = bitcast float* %1084 to <8 x float>*
  %1086 = load <8 x float>, <8 x float>* %1085, align 1, !tbaa !12
  %1087 = add nsw i64 %1063, 48
  %1088 = getelementptr inbounds float, float* %3, i64 %1087
  %1089 = bitcast float* %1088 to <8 x float>*
  %1090 = load <8 x float>, <8 x float>* %1089, align 1, !tbaa !12
  %1091 = add nsw i64 %1063, 56
  %1092 = getelementptr inbounds float, float* %3, i64 %1091
  %1093 = bitcast float* %1092 to <8 x float>*
  %1094 = load <8 x float>, <8 x float>* %1093, align 1, !tbaa !12
  %1095 = add nsw i64 %1063, 64
  %1096 = getelementptr inbounds float, float* %3, i64 %1095
  %1097 = bitcast float* %1096 to <8 x float>*
  %1098 = load <8 x float>, <8 x float>* %1097, align 1, !tbaa !12
  %1099 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1066, <8 x float> %60, <8 x float> %1030) #10
  %1100 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1070, <8 x float> %60, <8 x float> %1034) #10
  %1101 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1074, <8 x float> %60, <8 x float> %1038) #10
  %1102 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1078, <8 x float> %60, <8 x float> %1042) #10
  %1103 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1082, <8 x float> %60, <8 x float> %1046) #10
  %1104 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1086, <8 x float> %60, <8 x float> %1050) #10
  %1105 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1090, <8 x float> %60, <8 x float> %1054) #10
  %1106 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1094, <8 x float> %60, <8 x float> %1058) #10
  %1107 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1098, <8 x float> %60, <8 x float> %1062) #10
  store <8 x float> %1099, <8 x float>* %1029, align 1, !tbaa !12
  store <8 x float> %1100, <8 x float>* %1033, align 1, !tbaa !12
  store <8 x float> %1101, <8 x float>* %1037, align 1, !tbaa !12
  store <8 x float> %1102, <8 x float>* %1041, align 1, !tbaa !12
  store <8 x float> %1103, <8 x float>* %1045, align 1, !tbaa !12
  store <8 x float> %1104, <8 x float>* %1049, align 1, !tbaa !12
  store <8 x float> %1105, <8 x float>* %1053, align 1, !tbaa !12
  store <8 x float> %1106, <8 x float>* %1057, align 1, !tbaa !12
  store <8 x float> %1107, <8 x float>* %1061, align 1, !tbaa !12
  %1108 = add nuw nsw i64 %990, 72
  %1109 = icmp ult i64 %1108, %860
  br i1 %1109, label %989, label %982

1110:                                             ; preds = %1115, %20, %463, %982
  %1111 = add nuw nsw i64 %21, 9
  %1112 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1113 = sext i32 %1112 to i64
  %1114 = icmp slt i64 %1111, %1113
  br i1 %1114, label %20, label %8

1115:                                             ; preds = %985, %1115
  %1116 = phi i64 [ 0, %985 ], [ %1244, %1115 ]
  %1117 = getelementptr inbounds float, float* %5, i64 %1116
  %1118 = getelementptr inbounds float, float* %1117, i64 8
  %1119 = bitcast float* %1118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1119, i32 0, i32 1, i32 1)
  %1120 = getelementptr inbounds float, float* %3, i64 %1116
  %1121 = getelementptr inbounds float, float* %1120, i64 8
  %1122 = bitcast float* %1121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1122, i32 0, i32 1, i32 1)
  %1123 = getelementptr inbounds float, float* %1117, i64 16
  %1124 = bitcast float* %1123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1124, i32 0, i32 1, i32 1)
  %1125 = getelementptr inbounds float, float* %1120, i64 16
  %1126 = bitcast float* %1125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1126, i32 0, i32 1, i32 1)
  %1127 = getelementptr inbounds float, float* %1117, i64 24
  %1128 = bitcast float* %1127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1128, i32 0, i32 1, i32 1)
  %1129 = getelementptr inbounds float, float* %1120, i64 24
  %1130 = bitcast float* %1129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1130, i32 0, i32 1, i32 1)
  %1131 = getelementptr inbounds float, float* %1117, i64 32
  %1132 = bitcast float* %1131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1132, i32 0, i32 1, i32 1)
  %1133 = getelementptr inbounds float, float* %1120, i64 32
  %1134 = bitcast float* %1133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1134, i32 0, i32 1, i32 1)
  %1135 = getelementptr inbounds float, float* %1117, i64 40
  %1136 = bitcast float* %1135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1136, i32 0, i32 1, i32 1)
  %1137 = getelementptr inbounds float, float* %1120, i64 40
  %1138 = bitcast float* %1137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1138, i32 0, i32 1, i32 1)
  %1139 = getelementptr inbounds float, float* %1117, i64 48
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = getelementptr inbounds float, float* %1120, i64 48
  %1142 = bitcast float* %1141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1142, i32 0, i32 1, i32 1)
  %1143 = getelementptr inbounds float, float* %1117, i64 56
  %1144 = bitcast float* %1143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1144, i32 0, i32 1, i32 1)
  %1145 = getelementptr inbounds float, float* %1120, i64 56
  %1146 = bitcast float* %1145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1146, i32 0, i32 1, i32 1)
  %1147 = getelementptr inbounds float, float* %1117, i64 64
  %1148 = bitcast float* %1147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1148, i32 0, i32 1, i32 1)
  %1149 = getelementptr inbounds float, float* %1120, i64 64
  %1150 = bitcast float* %1149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1150, i32 0, i32 1, i32 1)
  %1151 = getelementptr inbounds float, float* %1117, i64 72
  %1152 = bitcast float* %1151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1152, i32 0, i32 1, i32 1)
  %1153 = getelementptr inbounds float, float* %1120, i64 72
  %1154 = bitcast float* %1153 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1154, i32 0, i32 1, i32 1)
  %1155 = bitcast float* %1117 to <8 x float>*
  %1156 = load <8 x float>, <8 x float>* %1155, align 1, !tbaa !12
  %1157 = add nuw nsw i64 %1116, 8
  %1158 = getelementptr inbounds float, float* %5, i64 %1157
  %1159 = bitcast float* %1158 to <8 x float>*
  %1160 = load <8 x float>, <8 x float>* %1159, align 1, !tbaa !12
  %1161 = add nuw nsw i64 %1116, 16
  %1162 = getelementptr inbounds float, float* %5, i64 %1161
  %1163 = bitcast float* %1162 to <8 x float>*
  %1164 = load <8 x float>, <8 x float>* %1163, align 1, !tbaa !12
  %1165 = add nuw nsw i64 %1116, 24
  %1166 = getelementptr inbounds float, float* %5, i64 %1165
  %1167 = bitcast float* %1166 to <8 x float>*
  %1168 = load <8 x float>, <8 x float>* %1167, align 1, !tbaa !12
  %1169 = add nuw nsw i64 %1116, 32
  %1170 = getelementptr inbounds float, float* %5, i64 %1169
  %1171 = bitcast float* %1170 to <8 x float>*
  %1172 = load <8 x float>, <8 x float>* %1171, align 1, !tbaa !12
  %1173 = add nuw nsw i64 %1116, 40
  %1174 = getelementptr inbounds float, float* %5, i64 %1173
  %1175 = bitcast float* %1174 to <8 x float>*
  %1176 = load <8 x float>, <8 x float>* %1175, align 1, !tbaa !12
  %1177 = add nuw nsw i64 %1116, 48
  %1178 = getelementptr inbounds float, float* %5, i64 %1177
  %1179 = bitcast float* %1178 to <8 x float>*
  %1180 = load <8 x float>, <8 x float>* %1179, align 1, !tbaa !12
  %1181 = add nuw nsw i64 %1116, 56
  %1182 = getelementptr inbounds float, float* %5, i64 %1181
  %1183 = bitcast float* %1182 to <8 x float>*
  %1184 = load <8 x float>, <8 x float>* %1183, align 1, !tbaa !12
  %1185 = add nuw nsw i64 %1116, 64
  %1186 = getelementptr inbounds float, float* %5, i64 %1185
  %1187 = bitcast float* %1186 to <8 x float>*
  %1188 = load <8 x float>, <8 x float>* %1187, align 1, !tbaa !12
  %1189 = trunc i64 %1116 to i32
  %1190 = add nsw i32 %988, %1189
  %1191 = sext i32 %1190 to i64
  %1192 = getelementptr inbounds float, float* %3, i64 %1191
  %1193 = bitcast float* %1192 to <8 x float>*
  %1194 = load <8 x float>, <8 x float>* %1193, align 1, !tbaa !12
  %1195 = add nsw i32 %1190, 8
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds float, float* %3, i64 %1196
  %1198 = bitcast float* %1197 to <8 x float>*
  %1199 = load <8 x float>, <8 x float>* %1198, align 1, !tbaa !12
  %1200 = add nsw i32 %1190, 16
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds float, float* %3, i64 %1201
  %1203 = bitcast float* %1202 to <8 x float>*
  %1204 = load <8 x float>, <8 x float>* %1203, align 1, !tbaa !12
  %1205 = add nsw i32 %1190, 24
  %1206 = sext i32 %1205 to i64
  %1207 = getelementptr inbounds float, float* %3, i64 %1206
  %1208 = bitcast float* %1207 to <8 x float>*
  %1209 = load <8 x float>, <8 x float>* %1208, align 1, !tbaa !12
  %1210 = add nsw i32 %1190, 32
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds float, float* %3, i64 %1211
  %1213 = bitcast float* %1212 to <8 x float>*
  %1214 = load <8 x float>, <8 x float>* %1213, align 1, !tbaa !12
  %1215 = add nsw i32 %1190, 40
  %1216 = sext i32 %1215 to i64
  %1217 = getelementptr inbounds float, float* %3, i64 %1216
  %1218 = bitcast float* %1217 to <8 x float>*
  %1219 = load <8 x float>, <8 x float>* %1218, align 1, !tbaa !12
  %1220 = add nsw i32 %1190, 48
  %1221 = sext i32 %1220 to i64
  %1222 = getelementptr inbounds float, float* %3, i64 %1221
  %1223 = bitcast float* %1222 to <8 x float>*
  %1224 = load <8 x float>, <8 x float>* %1223, align 1, !tbaa !12
  %1225 = add nsw i32 %1190, 56
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds float, float* %3, i64 %1226
  %1228 = bitcast float* %1227 to <8 x float>*
  %1229 = load <8 x float>, <8 x float>* %1228, align 1, !tbaa !12
  %1230 = add nsw i32 %1190, 64
  %1231 = sext i32 %1230 to i64
  %1232 = getelementptr inbounds float, float* %3, i64 %1231
  %1233 = bitcast float* %1232 to <8 x float>*
  %1234 = load <8 x float>, <8 x float>* %1233, align 1, !tbaa !12
  %1235 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1194, <8 x float> %65, <8 x float> %1156) #10
  %1236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1199, <8 x float> %65, <8 x float> %1160) #10
  %1237 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1204, <8 x float> %65, <8 x float> %1164) #10
  %1238 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1209, <8 x float> %65, <8 x float> %1168) #10
  %1239 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1214, <8 x float> %65, <8 x float> %1172) #10
  %1240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1219, <8 x float> %65, <8 x float> %1176) #10
  %1241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1224, <8 x float> %65, <8 x float> %1180) #10
  %1242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1229, <8 x float> %65, <8 x float> %1184) #10
  %1243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1234, <8 x float> %65, <8 x float> %1188) #10
  store <8 x float> %1235, <8 x float>* %1155, align 1, !tbaa !12
  store <8 x float> %1236, <8 x float>* %1159, align 1, !tbaa !12
  store <8 x float> %1237, <8 x float>* %1163, align 1, !tbaa !12
  store <8 x float> %1238, <8 x float>* %1167, align 1, !tbaa !12
  store <8 x float> %1239, <8 x float>* %1171, align 1, !tbaa !12
  store <8 x float> %1240, <8 x float>* %1175, align 1, !tbaa !12
  store <8 x float> %1241, <8 x float>* %1179, align 1, !tbaa !12
  store <8 x float> %1242, <8 x float>* %1183, align 1, !tbaa !12
  store <8 x float> %1243, <8 x float>* %1187, align 1, !tbaa !12
  %1244 = add nuw nsw i64 %1116, 72
  %1245 = icmp ult i64 %1244, %986
  br i1 %1245, label %1115, label %1110
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 171
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui9_uk9.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
