; ModuleID = 'codes/matvec_ui7_uk14.cpp'
source_filename = "codes/matvec_ui7_uk14.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui7_uk14.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 56
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 112
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1436, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1436
  %21 = phi i64 [ %1437, %1436 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = add nuw nsw i64 %21, 13
  %87 = getelementptr inbounds float, float* %4, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !18
  %89 = insertelement <8 x float> undef, float %88, i32 0
  %90 = shufflevector <8 x float> %89, <8 x float> undef, <8 x i32> zeroinitializer
  %91 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %1436

93:                                               ; preds = %20
  %94 = zext i32 %91 to i64
  %95 = trunc i64 %21 to i32
  %96 = mul nsw i32 %91, %95
  br label %103

97:                                               ; preds = %103
  br i1 %92, label %98, label %509

98:                                               ; preds = %97
  %99 = trunc i64 %26 to i32
  %100 = mul nsw i32 %91, %99
  %101 = sext i32 %100 to i64
  %102 = zext i32 %91 to i64
  br label %212

103:                                              ; preds = %93, %103
  %104 = phi i64 [ 0, %93 ], [ %204, %103 ]
  %105 = getelementptr inbounds float, float* %5, i64 %104
  %106 = getelementptr inbounds float, float* %105, i64 8
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %3, i64 %104
  %109 = getelementptr inbounds float, float* %108, i64 8
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %105, i64 16
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %108, i64 16
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %105, i64 24
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %108, i64 24
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %105, i64 32
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %108, i64 32
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %105, i64 40
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %108, i64 40
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %105, i64 48
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %108, i64 48
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %105, i64 56
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %108, i64 56
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = bitcast float* %105 to <8 x float>*
  %136 = load <8 x float>, <8 x float>* %135, align 1, !tbaa !12
  %137 = add nuw nsw i64 %104, 8
  %138 = getelementptr inbounds float, float* %5, i64 %137
  %139 = bitcast float* %138 to <8 x float>*
  %140 = load <8 x float>, <8 x float>* %139, align 1, !tbaa !12
  %141 = add nuw nsw i64 %104, 16
  %142 = getelementptr inbounds float, float* %5, i64 %141
  %143 = bitcast float* %142 to <8 x float>*
  %144 = load <8 x float>, <8 x float>* %143, align 1, !tbaa !12
  %145 = add nuw nsw i64 %104, 24
  %146 = getelementptr inbounds float, float* %5, i64 %145
  %147 = bitcast float* %146 to <8 x float>*
  %148 = load <8 x float>, <8 x float>* %147, align 1, !tbaa !12
  %149 = add nuw nsw i64 %104, 32
  %150 = getelementptr inbounds float, float* %5, i64 %149
  %151 = bitcast float* %150 to <8 x float>*
  %152 = load <8 x float>, <8 x float>* %151, align 1, !tbaa !12
  %153 = add nuw nsw i64 %104, 40
  %154 = getelementptr inbounds float, float* %5, i64 %153
  %155 = bitcast float* %154 to <8 x float>*
  %156 = load <8 x float>, <8 x float>* %155, align 1, !tbaa !12
  %157 = add nuw nsw i64 %104, 48
  %158 = getelementptr inbounds float, float* %5, i64 %157
  %159 = bitcast float* %158 to <8 x float>*
  %160 = load <8 x float>, <8 x float>* %159, align 1, !tbaa !12
  %161 = trunc i64 %104 to i32
  %162 = add nsw i32 %96, %161
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds float, float* %3, i64 %163
  %165 = bitcast float* %164 to <8 x float>*
  %166 = load <8 x float>, <8 x float>* %165, align 1, !tbaa !12
  %167 = add nsw i32 %162, 8
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds float, float* %3, i64 %168
  %170 = bitcast float* %169 to <8 x float>*
  %171 = load <8 x float>, <8 x float>* %170, align 1, !tbaa !12
  %172 = add nsw i32 %162, 16
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds float, float* %3, i64 %173
  %175 = bitcast float* %174 to <8 x float>*
  %176 = load <8 x float>, <8 x float>* %175, align 1, !tbaa !12
  %177 = add nsw i32 %162, 24
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds float, float* %3, i64 %178
  %180 = bitcast float* %179 to <8 x float>*
  %181 = load <8 x float>, <8 x float>* %180, align 1, !tbaa !12
  %182 = add nsw i32 %162, 32
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds float, float* %3, i64 %183
  %185 = bitcast float* %184 to <8 x float>*
  %186 = load <8 x float>, <8 x float>* %185, align 1, !tbaa !12
  %187 = add nsw i32 %162, 40
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds float, float* %3, i64 %188
  %190 = bitcast float* %189 to <8 x float>*
  %191 = load <8 x float>, <8 x float>* %190, align 1, !tbaa !12
  %192 = add nsw i32 %162, 48
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds float, float* %3, i64 %193
  %195 = bitcast float* %194 to <8 x float>*
  %196 = load <8 x float>, <8 x float>* %195, align 1, !tbaa !12
  %197 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %166, <8 x float> %25, <8 x float> %136) #10
  %198 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %171, <8 x float> %25, <8 x float> %140) #10
  %199 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %176, <8 x float> %25, <8 x float> %144) #10
  %200 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %181, <8 x float> %25, <8 x float> %148) #10
  %201 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %186, <8 x float> %25, <8 x float> %152) #10
  %202 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %191, <8 x float> %25, <8 x float> %156) #10
  %203 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %196, <8 x float> %25, <8 x float> %160) #10
  store <8 x float> %197, <8 x float>* %135, align 1, !tbaa !12
  store <8 x float> %198, <8 x float>* %139, align 1, !tbaa !12
  store <8 x float> %199, <8 x float>* %143, align 1, !tbaa !12
  store <8 x float> %200, <8 x float>* %147, align 1, !tbaa !12
  store <8 x float> %201, <8 x float>* %151, align 1, !tbaa !12
  store <8 x float> %202, <8 x float>* %155, align 1, !tbaa !12
  store <8 x float> %203, <8 x float>* %159, align 1, !tbaa !12
  %204 = add nuw nsw i64 %104, 56
  %205 = icmp ult i64 %204, %94
  br i1 %205, label %103, label %97

206:                                              ; preds = %212
  br i1 %92, label %207, label %509

207:                                              ; preds = %206
  %208 = trunc i64 %31 to i32
  %209 = mul nsw i32 %91, %208
  %210 = sext i32 %209 to i64
  %211 = zext i32 %91 to i64
  br label %313

212:                                              ; preds = %98, %212
  %213 = phi i64 [ 0, %98 ], [ %305, %212 ]
  %214 = getelementptr inbounds float, float* %5, i64 %213
  %215 = getelementptr inbounds float, float* %214, i64 8
  %216 = bitcast float* %215 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %216, i32 0, i32 1, i32 1)
  %217 = getelementptr inbounds float, float* %3, i64 %213
  %218 = getelementptr inbounds float, float* %217, i64 8
  %219 = bitcast float* %218 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %219, i32 0, i32 1, i32 1)
  %220 = getelementptr inbounds float, float* %214, i64 16
  %221 = bitcast float* %220 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %221, i32 0, i32 1, i32 1)
  %222 = getelementptr inbounds float, float* %217, i64 16
  %223 = bitcast float* %222 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %223, i32 0, i32 1, i32 1)
  %224 = getelementptr inbounds float, float* %214, i64 24
  %225 = bitcast float* %224 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %225, i32 0, i32 1, i32 1)
  %226 = getelementptr inbounds float, float* %217, i64 24
  %227 = bitcast float* %226 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %227, i32 0, i32 1, i32 1)
  %228 = getelementptr inbounds float, float* %214, i64 32
  %229 = bitcast float* %228 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %229, i32 0, i32 1, i32 1)
  %230 = getelementptr inbounds float, float* %217, i64 32
  %231 = bitcast float* %230 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %231, i32 0, i32 1, i32 1)
  %232 = getelementptr inbounds float, float* %214, i64 40
  %233 = bitcast float* %232 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %233, i32 0, i32 1, i32 1)
  %234 = getelementptr inbounds float, float* %217, i64 40
  %235 = bitcast float* %234 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %235, i32 0, i32 1, i32 1)
  %236 = getelementptr inbounds float, float* %214, i64 48
  %237 = bitcast float* %236 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %237, i32 0, i32 1, i32 1)
  %238 = getelementptr inbounds float, float* %217, i64 48
  %239 = bitcast float* %238 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %239, i32 0, i32 1, i32 1)
  %240 = getelementptr inbounds float, float* %214, i64 56
  %241 = bitcast float* %240 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %241, i32 0, i32 1, i32 1)
  %242 = getelementptr inbounds float, float* %217, i64 56
  %243 = bitcast float* %242 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %243, i32 0, i32 1, i32 1)
  %244 = bitcast float* %214 to <8 x float>*
  %245 = load <8 x float>, <8 x float>* %244, align 1, !tbaa !12
  %246 = add nuw nsw i64 %213, 8
  %247 = getelementptr inbounds float, float* %5, i64 %246
  %248 = bitcast float* %247 to <8 x float>*
  %249 = load <8 x float>, <8 x float>* %248, align 1, !tbaa !12
  %250 = add nuw nsw i64 %213, 16
  %251 = getelementptr inbounds float, float* %5, i64 %250
  %252 = bitcast float* %251 to <8 x float>*
  %253 = load <8 x float>, <8 x float>* %252, align 1, !tbaa !12
  %254 = add nuw nsw i64 %213, 24
  %255 = getelementptr inbounds float, float* %5, i64 %254
  %256 = bitcast float* %255 to <8 x float>*
  %257 = load <8 x float>, <8 x float>* %256, align 1, !tbaa !12
  %258 = add nuw nsw i64 %213, 32
  %259 = getelementptr inbounds float, float* %5, i64 %258
  %260 = bitcast float* %259 to <8 x float>*
  %261 = load <8 x float>, <8 x float>* %260, align 1, !tbaa !12
  %262 = add nuw nsw i64 %213, 40
  %263 = getelementptr inbounds float, float* %5, i64 %262
  %264 = bitcast float* %263 to <8 x float>*
  %265 = load <8 x float>, <8 x float>* %264, align 1, !tbaa !12
  %266 = add nuw nsw i64 %213, 48
  %267 = getelementptr inbounds float, float* %5, i64 %266
  %268 = bitcast float* %267 to <8 x float>*
  %269 = load <8 x float>, <8 x float>* %268, align 1, !tbaa !12
  %270 = add nsw i64 %213, %101
  %271 = getelementptr inbounds float, float* %3, i64 %270
  %272 = bitcast float* %271 to <8 x float>*
  %273 = load <8 x float>, <8 x float>* %272, align 1, !tbaa !12
  %274 = add nsw i64 %270, 8
  %275 = getelementptr inbounds float, float* %3, i64 %274
  %276 = bitcast float* %275 to <8 x float>*
  %277 = load <8 x float>, <8 x float>* %276, align 1, !tbaa !12
  %278 = add nsw i64 %270, 16
  %279 = getelementptr inbounds float, float* %3, i64 %278
  %280 = bitcast float* %279 to <8 x float>*
  %281 = load <8 x float>, <8 x float>* %280, align 1, !tbaa !12
  %282 = add nsw i64 %270, 24
  %283 = getelementptr inbounds float, float* %3, i64 %282
  %284 = bitcast float* %283 to <8 x float>*
  %285 = load <8 x float>, <8 x float>* %284, align 1, !tbaa !12
  %286 = add nsw i64 %270, 32
  %287 = getelementptr inbounds float, float* %3, i64 %286
  %288 = bitcast float* %287 to <8 x float>*
  %289 = load <8 x float>, <8 x float>* %288, align 1, !tbaa !12
  %290 = add nsw i64 %270, 40
  %291 = getelementptr inbounds float, float* %3, i64 %290
  %292 = bitcast float* %291 to <8 x float>*
  %293 = load <8 x float>, <8 x float>* %292, align 1, !tbaa !12
  %294 = add nsw i64 %270, 48
  %295 = getelementptr inbounds float, float* %3, i64 %294
  %296 = bitcast float* %295 to <8 x float>*
  %297 = load <8 x float>, <8 x float>* %296, align 1, !tbaa !12
  %298 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %273, <8 x float> %30, <8 x float> %245) #10
  %299 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %277, <8 x float> %30, <8 x float> %249) #10
  %300 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %281, <8 x float> %30, <8 x float> %253) #10
  %301 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %285, <8 x float> %30, <8 x float> %257) #10
  %302 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %289, <8 x float> %30, <8 x float> %261) #10
  %303 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %293, <8 x float> %30, <8 x float> %265) #10
  %304 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %297, <8 x float> %30, <8 x float> %269) #10
  store <8 x float> %298, <8 x float>* %244, align 1, !tbaa !12
  store <8 x float> %299, <8 x float>* %248, align 1, !tbaa !12
  store <8 x float> %300, <8 x float>* %252, align 1, !tbaa !12
  store <8 x float> %301, <8 x float>* %256, align 1, !tbaa !12
  store <8 x float> %302, <8 x float>* %260, align 1, !tbaa !12
  store <8 x float> %303, <8 x float>* %264, align 1, !tbaa !12
  store <8 x float> %304, <8 x float>* %268, align 1, !tbaa !12
  %305 = add nuw nsw i64 %213, 56
  %306 = icmp ult i64 %305, %102
  br i1 %306, label %212, label %206

307:                                              ; preds = %313
  br i1 %92, label %308, label %509

308:                                              ; preds = %307
  %309 = trunc i64 %36 to i32
  %310 = mul nsw i32 %91, %309
  %311 = sext i32 %310 to i64
  %312 = zext i32 %91 to i64
  br label %414

313:                                              ; preds = %207, %313
  %314 = phi i64 [ 0, %207 ], [ %406, %313 ]
  %315 = getelementptr inbounds float, float* %5, i64 %314
  %316 = getelementptr inbounds float, float* %315, i64 8
  %317 = bitcast float* %316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %317, i32 0, i32 1, i32 1)
  %318 = getelementptr inbounds float, float* %3, i64 %314
  %319 = getelementptr inbounds float, float* %318, i64 8
  %320 = bitcast float* %319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %320, i32 0, i32 1, i32 1)
  %321 = getelementptr inbounds float, float* %315, i64 16
  %322 = bitcast float* %321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %322, i32 0, i32 1, i32 1)
  %323 = getelementptr inbounds float, float* %318, i64 16
  %324 = bitcast float* %323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %324, i32 0, i32 1, i32 1)
  %325 = getelementptr inbounds float, float* %315, i64 24
  %326 = bitcast float* %325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %326, i32 0, i32 1, i32 1)
  %327 = getelementptr inbounds float, float* %318, i64 24
  %328 = bitcast float* %327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %328, i32 0, i32 1, i32 1)
  %329 = getelementptr inbounds float, float* %315, i64 32
  %330 = bitcast float* %329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %330, i32 0, i32 1, i32 1)
  %331 = getelementptr inbounds float, float* %318, i64 32
  %332 = bitcast float* %331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %332, i32 0, i32 1, i32 1)
  %333 = getelementptr inbounds float, float* %315, i64 40
  %334 = bitcast float* %333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %334, i32 0, i32 1, i32 1)
  %335 = getelementptr inbounds float, float* %318, i64 40
  %336 = bitcast float* %335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %336, i32 0, i32 1, i32 1)
  %337 = getelementptr inbounds float, float* %315, i64 48
  %338 = bitcast float* %337 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %338, i32 0, i32 1, i32 1)
  %339 = getelementptr inbounds float, float* %318, i64 48
  %340 = bitcast float* %339 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %340, i32 0, i32 1, i32 1)
  %341 = getelementptr inbounds float, float* %315, i64 56
  %342 = bitcast float* %341 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %342, i32 0, i32 1, i32 1)
  %343 = getelementptr inbounds float, float* %318, i64 56
  %344 = bitcast float* %343 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %344, i32 0, i32 1, i32 1)
  %345 = bitcast float* %315 to <8 x float>*
  %346 = load <8 x float>, <8 x float>* %345, align 1, !tbaa !12
  %347 = add nuw nsw i64 %314, 8
  %348 = getelementptr inbounds float, float* %5, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %350 = load <8 x float>, <8 x float>* %349, align 1, !tbaa !12
  %351 = add nuw nsw i64 %314, 16
  %352 = getelementptr inbounds float, float* %5, i64 %351
  %353 = bitcast float* %352 to <8 x float>*
  %354 = load <8 x float>, <8 x float>* %353, align 1, !tbaa !12
  %355 = add nuw nsw i64 %314, 24
  %356 = getelementptr inbounds float, float* %5, i64 %355
  %357 = bitcast float* %356 to <8 x float>*
  %358 = load <8 x float>, <8 x float>* %357, align 1, !tbaa !12
  %359 = add nuw nsw i64 %314, 32
  %360 = getelementptr inbounds float, float* %5, i64 %359
  %361 = bitcast float* %360 to <8 x float>*
  %362 = load <8 x float>, <8 x float>* %361, align 1, !tbaa !12
  %363 = add nuw nsw i64 %314, 40
  %364 = getelementptr inbounds float, float* %5, i64 %363
  %365 = bitcast float* %364 to <8 x float>*
  %366 = load <8 x float>, <8 x float>* %365, align 1, !tbaa !12
  %367 = add nuw nsw i64 %314, 48
  %368 = getelementptr inbounds float, float* %5, i64 %367
  %369 = bitcast float* %368 to <8 x float>*
  %370 = load <8 x float>, <8 x float>* %369, align 1, !tbaa !12
  %371 = add nsw i64 %314, %210
  %372 = getelementptr inbounds float, float* %3, i64 %371
  %373 = bitcast float* %372 to <8 x float>*
  %374 = load <8 x float>, <8 x float>* %373, align 1, !tbaa !12
  %375 = add nsw i64 %371, 8
  %376 = getelementptr inbounds float, float* %3, i64 %375
  %377 = bitcast float* %376 to <8 x float>*
  %378 = load <8 x float>, <8 x float>* %377, align 1, !tbaa !12
  %379 = add nsw i64 %371, 16
  %380 = getelementptr inbounds float, float* %3, i64 %379
  %381 = bitcast float* %380 to <8 x float>*
  %382 = load <8 x float>, <8 x float>* %381, align 1, !tbaa !12
  %383 = add nsw i64 %371, 24
  %384 = getelementptr inbounds float, float* %3, i64 %383
  %385 = bitcast float* %384 to <8 x float>*
  %386 = load <8 x float>, <8 x float>* %385, align 1, !tbaa !12
  %387 = add nsw i64 %371, 32
  %388 = getelementptr inbounds float, float* %3, i64 %387
  %389 = bitcast float* %388 to <8 x float>*
  %390 = load <8 x float>, <8 x float>* %389, align 1, !tbaa !12
  %391 = add nsw i64 %371, 40
  %392 = getelementptr inbounds float, float* %3, i64 %391
  %393 = bitcast float* %392 to <8 x float>*
  %394 = load <8 x float>, <8 x float>* %393, align 1, !tbaa !12
  %395 = add nsw i64 %371, 48
  %396 = getelementptr inbounds float, float* %3, i64 %395
  %397 = bitcast float* %396 to <8 x float>*
  %398 = load <8 x float>, <8 x float>* %397, align 1, !tbaa !12
  %399 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %374, <8 x float> %35, <8 x float> %346) #10
  %400 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %378, <8 x float> %35, <8 x float> %350) #10
  %401 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %382, <8 x float> %35, <8 x float> %354) #10
  %402 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %386, <8 x float> %35, <8 x float> %358) #10
  %403 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %390, <8 x float> %35, <8 x float> %362) #10
  %404 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %394, <8 x float> %35, <8 x float> %366) #10
  %405 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %398, <8 x float> %35, <8 x float> %370) #10
  store <8 x float> %399, <8 x float>* %345, align 1, !tbaa !12
  store <8 x float> %400, <8 x float>* %349, align 1, !tbaa !12
  store <8 x float> %401, <8 x float>* %353, align 1, !tbaa !12
  store <8 x float> %402, <8 x float>* %357, align 1, !tbaa !12
  store <8 x float> %403, <8 x float>* %361, align 1, !tbaa !12
  store <8 x float> %404, <8 x float>* %365, align 1, !tbaa !12
  store <8 x float> %405, <8 x float>* %369, align 1, !tbaa !12
  %406 = add nuw nsw i64 %314, 56
  %407 = icmp ult i64 %406, %211
  br i1 %407, label %313, label %307

408:                                              ; preds = %414
  br i1 %92, label %409, label %509

409:                                              ; preds = %408
  %410 = trunc i64 %41 to i32
  %411 = mul nsw i32 %91, %410
  %412 = sext i32 %411 to i64
  %413 = zext i32 %91 to i64
  br label %516

414:                                              ; preds = %308, %414
  %415 = phi i64 [ 0, %308 ], [ %507, %414 ]
  %416 = getelementptr inbounds float, float* %5, i64 %415
  %417 = getelementptr inbounds float, float* %416, i64 8
  %418 = bitcast float* %417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %418, i32 0, i32 1, i32 1)
  %419 = getelementptr inbounds float, float* %3, i64 %415
  %420 = getelementptr inbounds float, float* %419, i64 8
  %421 = bitcast float* %420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %421, i32 0, i32 1, i32 1)
  %422 = getelementptr inbounds float, float* %416, i64 16
  %423 = bitcast float* %422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %423, i32 0, i32 1, i32 1)
  %424 = getelementptr inbounds float, float* %419, i64 16
  %425 = bitcast float* %424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %425, i32 0, i32 1, i32 1)
  %426 = getelementptr inbounds float, float* %416, i64 24
  %427 = bitcast float* %426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %427, i32 0, i32 1, i32 1)
  %428 = getelementptr inbounds float, float* %419, i64 24
  %429 = bitcast float* %428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %429, i32 0, i32 1, i32 1)
  %430 = getelementptr inbounds float, float* %416, i64 32
  %431 = bitcast float* %430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %431, i32 0, i32 1, i32 1)
  %432 = getelementptr inbounds float, float* %419, i64 32
  %433 = bitcast float* %432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %433, i32 0, i32 1, i32 1)
  %434 = getelementptr inbounds float, float* %416, i64 40
  %435 = bitcast float* %434 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %435, i32 0, i32 1, i32 1)
  %436 = getelementptr inbounds float, float* %419, i64 40
  %437 = bitcast float* %436 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %437, i32 0, i32 1, i32 1)
  %438 = getelementptr inbounds float, float* %416, i64 48
  %439 = bitcast float* %438 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %439, i32 0, i32 1, i32 1)
  %440 = getelementptr inbounds float, float* %419, i64 48
  %441 = bitcast float* %440 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %441, i32 0, i32 1, i32 1)
  %442 = getelementptr inbounds float, float* %416, i64 56
  %443 = bitcast float* %442 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %443, i32 0, i32 1, i32 1)
  %444 = getelementptr inbounds float, float* %419, i64 56
  %445 = bitcast float* %444 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %445, i32 0, i32 1, i32 1)
  %446 = bitcast float* %416 to <8 x float>*
  %447 = load <8 x float>, <8 x float>* %446, align 1, !tbaa !12
  %448 = add nuw nsw i64 %415, 8
  %449 = getelementptr inbounds float, float* %5, i64 %448
  %450 = bitcast float* %449 to <8 x float>*
  %451 = load <8 x float>, <8 x float>* %450, align 1, !tbaa !12
  %452 = add nuw nsw i64 %415, 16
  %453 = getelementptr inbounds float, float* %5, i64 %452
  %454 = bitcast float* %453 to <8 x float>*
  %455 = load <8 x float>, <8 x float>* %454, align 1, !tbaa !12
  %456 = add nuw nsw i64 %415, 24
  %457 = getelementptr inbounds float, float* %5, i64 %456
  %458 = bitcast float* %457 to <8 x float>*
  %459 = load <8 x float>, <8 x float>* %458, align 1, !tbaa !12
  %460 = add nuw nsw i64 %415, 32
  %461 = getelementptr inbounds float, float* %5, i64 %460
  %462 = bitcast float* %461 to <8 x float>*
  %463 = load <8 x float>, <8 x float>* %462, align 1, !tbaa !12
  %464 = add nuw nsw i64 %415, 40
  %465 = getelementptr inbounds float, float* %5, i64 %464
  %466 = bitcast float* %465 to <8 x float>*
  %467 = load <8 x float>, <8 x float>* %466, align 1, !tbaa !12
  %468 = add nuw nsw i64 %415, 48
  %469 = getelementptr inbounds float, float* %5, i64 %468
  %470 = bitcast float* %469 to <8 x float>*
  %471 = load <8 x float>, <8 x float>* %470, align 1, !tbaa !12
  %472 = add nsw i64 %415, %311
  %473 = getelementptr inbounds float, float* %3, i64 %472
  %474 = bitcast float* %473 to <8 x float>*
  %475 = load <8 x float>, <8 x float>* %474, align 1, !tbaa !12
  %476 = add nsw i64 %472, 8
  %477 = getelementptr inbounds float, float* %3, i64 %476
  %478 = bitcast float* %477 to <8 x float>*
  %479 = load <8 x float>, <8 x float>* %478, align 1, !tbaa !12
  %480 = add nsw i64 %472, 16
  %481 = getelementptr inbounds float, float* %3, i64 %480
  %482 = bitcast float* %481 to <8 x float>*
  %483 = load <8 x float>, <8 x float>* %482, align 1, !tbaa !12
  %484 = add nsw i64 %472, 24
  %485 = getelementptr inbounds float, float* %3, i64 %484
  %486 = bitcast float* %485 to <8 x float>*
  %487 = load <8 x float>, <8 x float>* %486, align 1, !tbaa !12
  %488 = add nsw i64 %472, 32
  %489 = getelementptr inbounds float, float* %3, i64 %488
  %490 = bitcast float* %489 to <8 x float>*
  %491 = load <8 x float>, <8 x float>* %490, align 1, !tbaa !12
  %492 = add nsw i64 %472, 40
  %493 = getelementptr inbounds float, float* %3, i64 %492
  %494 = bitcast float* %493 to <8 x float>*
  %495 = load <8 x float>, <8 x float>* %494, align 1, !tbaa !12
  %496 = add nsw i64 %472, 48
  %497 = getelementptr inbounds float, float* %3, i64 %496
  %498 = bitcast float* %497 to <8 x float>*
  %499 = load <8 x float>, <8 x float>* %498, align 1, !tbaa !12
  %500 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %475, <8 x float> %40, <8 x float> %447) #10
  %501 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %479, <8 x float> %40, <8 x float> %451) #10
  %502 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %483, <8 x float> %40, <8 x float> %455) #10
  %503 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %487, <8 x float> %40, <8 x float> %459) #10
  %504 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %491, <8 x float> %40, <8 x float> %463) #10
  %505 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %495, <8 x float> %40, <8 x float> %467) #10
  %506 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %499, <8 x float> %40, <8 x float> %471) #10
  store <8 x float> %500, <8 x float>* %446, align 1, !tbaa !12
  store <8 x float> %501, <8 x float>* %450, align 1, !tbaa !12
  store <8 x float> %502, <8 x float>* %454, align 1, !tbaa !12
  store <8 x float> %503, <8 x float>* %458, align 1, !tbaa !12
  store <8 x float> %504, <8 x float>* %462, align 1, !tbaa !12
  store <8 x float> %505, <8 x float>* %466, align 1, !tbaa !12
  store <8 x float> %506, <8 x float>* %470, align 1, !tbaa !12
  %507 = add nuw nsw i64 %415, 56
  %508 = icmp ult i64 %507, %312
  br i1 %508, label %414, label %408

509:                                              ; preds = %516, %97, %206, %307, %408
  %510 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %511 = icmp sgt i32 %510, 0
  br i1 %511, label %512, label %1436

512:                                              ; preds = %509
  %513 = zext i32 %510 to i64
  %514 = trunc i64 %46 to i32
  %515 = mul nsw i32 %510, %514
  br label %617

516:                                              ; preds = %409, %516
  %517 = phi i64 [ 0, %409 ], [ %609, %516 ]
  %518 = getelementptr inbounds float, float* %5, i64 %517
  %519 = getelementptr inbounds float, float* %518, i64 8
  %520 = bitcast float* %519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %520, i32 0, i32 1, i32 1)
  %521 = getelementptr inbounds float, float* %3, i64 %517
  %522 = getelementptr inbounds float, float* %521, i64 8
  %523 = bitcast float* %522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %523, i32 0, i32 1, i32 1)
  %524 = getelementptr inbounds float, float* %518, i64 16
  %525 = bitcast float* %524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %525, i32 0, i32 1, i32 1)
  %526 = getelementptr inbounds float, float* %521, i64 16
  %527 = bitcast float* %526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %527, i32 0, i32 1, i32 1)
  %528 = getelementptr inbounds float, float* %518, i64 24
  %529 = bitcast float* %528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %529, i32 0, i32 1, i32 1)
  %530 = getelementptr inbounds float, float* %521, i64 24
  %531 = bitcast float* %530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %531, i32 0, i32 1, i32 1)
  %532 = getelementptr inbounds float, float* %518, i64 32
  %533 = bitcast float* %532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %533, i32 0, i32 1, i32 1)
  %534 = getelementptr inbounds float, float* %521, i64 32
  %535 = bitcast float* %534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %535, i32 0, i32 1, i32 1)
  %536 = getelementptr inbounds float, float* %518, i64 40
  %537 = bitcast float* %536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %537, i32 0, i32 1, i32 1)
  %538 = getelementptr inbounds float, float* %521, i64 40
  %539 = bitcast float* %538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %539, i32 0, i32 1, i32 1)
  %540 = getelementptr inbounds float, float* %518, i64 48
  %541 = bitcast float* %540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %541, i32 0, i32 1, i32 1)
  %542 = getelementptr inbounds float, float* %521, i64 48
  %543 = bitcast float* %542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %543, i32 0, i32 1, i32 1)
  %544 = getelementptr inbounds float, float* %518, i64 56
  %545 = bitcast float* %544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %545, i32 0, i32 1, i32 1)
  %546 = getelementptr inbounds float, float* %521, i64 56
  %547 = bitcast float* %546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %547, i32 0, i32 1, i32 1)
  %548 = bitcast float* %518 to <8 x float>*
  %549 = load <8 x float>, <8 x float>* %548, align 1, !tbaa !12
  %550 = add nuw nsw i64 %517, 8
  %551 = getelementptr inbounds float, float* %5, i64 %550
  %552 = bitcast float* %551 to <8 x float>*
  %553 = load <8 x float>, <8 x float>* %552, align 1, !tbaa !12
  %554 = add nuw nsw i64 %517, 16
  %555 = getelementptr inbounds float, float* %5, i64 %554
  %556 = bitcast float* %555 to <8 x float>*
  %557 = load <8 x float>, <8 x float>* %556, align 1, !tbaa !12
  %558 = add nuw nsw i64 %517, 24
  %559 = getelementptr inbounds float, float* %5, i64 %558
  %560 = bitcast float* %559 to <8 x float>*
  %561 = load <8 x float>, <8 x float>* %560, align 1, !tbaa !12
  %562 = add nuw nsw i64 %517, 32
  %563 = getelementptr inbounds float, float* %5, i64 %562
  %564 = bitcast float* %563 to <8 x float>*
  %565 = load <8 x float>, <8 x float>* %564, align 1, !tbaa !12
  %566 = add nuw nsw i64 %517, 40
  %567 = getelementptr inbounds float, float* %5, i64 %566
  %568 = bitcast float* %567 to <8 x float>*
  %569 = load <8 x float>, <8 x float>* %568, align 1, !tbaa !12
  %570 = add nuw nsw i64 %517, 48
  %571 = getelementptr inbounds float, float* %5, i64 %570
  %572 = bitcast float* %571 to <8 x float>*
  %573 = load <8 x float>, <8 x float>* %572, align 1, !tbaa !12
  %574 = add nsw i64 %517, %412
  %575 = getelementptr inbounds float, float* %3, i64 %574
  %576 = bitcast float* %575 to <8 x float>*
  %577 = load <8 x float>, <8 x float>* %576, align 1, !tbaa !12
  %578 = add nsw i64 %574, 8
  %579 = getelementptr inbounds float, float* %3, i64 %578
  %580 = bitcast float* %579 to <8 x float>*
  %581 = load <8 x float>, <8 x float>* %580, align 1, !tbaa !12
  %582 = add nsw i64 %574, 16
  %583 = getelementptr inbounds float, float* %3, i64 %582
  %584 = bitcast float* %583 to <8 x float>*
  %585 = load <8 x float>, <8 x float>* %584, align 1, !tbaa !12
  %586 = add nsw i64 %574, 24
  %587 = getelementptr inbounds float, float* %3, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %589 = load <8 x float>, <8 x float>* %588, align 1, !tbaa !12
  %590 = add nsw i64 %574, 32
  %591 = getelementptr inbounds float, float* %3, i64 %590
  %592 = bitcast float* %591 to <8 x float>*
  %593 = load <8 x float>, <8 x float>* %592, align 1, !tbaa !12
  %594 = add nsw i64 %574, 40
  %595 = getelementptr inbounds float, float* %3, i64 %594
  %596 = bitcast float* %595 to <8 x float>*
  %597 = load <8 x float>, <8 x float>* %596, align 1, !tbaa !12
  %598 = add nsw i64 %574, 48
  %599 = getelementptr inbounds float, float* %3, i64 %598
  %600 = bitcast float* %599 to <8 x float>*
  %601 = load <8 x float>, <8 x float>* %600, align 1, !tbaa !12
  %602 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %577, <8 x float> %45, <8 x float> %549) #10
  %603 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %581, <8 x float> %45, <8 x float> %553) #10
  %604 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %585, <8 x float> %45, <8 x float> %557) #10
  %605 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %589, <8 x float> %45, <8 x float> %561) #10
  %606 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %593, <8 x float> %45, <8 x float> %565) #10
  %607 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %597, <8 x float> %45, <8 x float> %569) #10
  %608 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %601, <8 x float> %45, <8 x float> %573) #10
  store <8 x float> %602, <8 x float>* %548, align 1, !tbaa !12
  store <8 x float> %603, <8 x float>* %552, align 1, !tbaa !12
  store <8 x float> %604, <8 x float>* %556, align 1, !tbaa !12
  store <8 x float> %605, <8 x float>* %560, align 1, !tbaa !12
  store <8 x float> %606, <8 x float>* %564, align 1, !tbaa !12
  store <8 x float> %607, <8 x float>* %568, align 1, !tbaa !12
  store <8 x float> %608, <8 x float>* %572, align 1, !tbaa !12
  %609 = add nuw nsw i64 %517, 56
  %610 = icmp ult i64 %609, %413
  br i1 %610, label %516, label %509

611:                                              ; preds = %617
  br i1 %511, label %612, label %1023

612:                                              ; preds = %611
  %613 = trunc i64 %51 to i32
  %614 = mul nsw i32 %510, %613
  %615 = sext i32 %614 to i64
  %616 = zext i32 %510 to i64
  br label %726

617:                                              ; preds = %512, %617
  %618 = phi i64 [ 0, %512 ], [ %718, %617 ]
  %619 = getelementptr inbounds float, float* %5, i64 %618
  %620 = getelementptr inbounds float, float* %619, i64 8
  %621 = bitcast float* %620 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %621, i32 0, i32 1, i32 1)
  %622 = getelementptr inbounds float, float* %3, i64 %618
  %623 = getelementptr inbounds float, float* %622, i64 8
  %624 = bitcast float* %623 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %624, i32 0, i32 1, i32 1)
  %625 = getelementptr inbounds float, float* %619, i64 16
  %626 = bitcast float* %625 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %626, i32 0, i32 1, i32 1)
  %627 = getelementptr inbounds float, float* %622, i64 16
  %628 = bitcast float* %627 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %628, i32 0, i32 1, i32 1)
  %629 = getelementptr inbounds float, float* %619, i64 24
  %630 = bitcast float* %629 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %630, i32 0, i32 1, i32 1)
  %631 = getelementptr inbounds float, float* %622, i64 24
  %632 = bitcast float* %631 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %632, i32 0, i32 1, i32 1)
  %633 = getelementptr inbounds float, float* %619, i64 32
  %634 = bitcast float* %633 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %634, i32 0, i32 1, i32 1)
  %635 = getelementptr inbounds float, float* %622, i64 32
  %636 = bitcast float* %635 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %636, i32 0, i32 1, i32 1)
  %637 = getelementptr inbounds float, float* %619, i64 40
  %638 = bitcast float* %637 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %638, i32 0, i32 1, i32 1)
  %639 = getelementptr inbounds float, float* %622, i64 40
  %640 = bitcast float* %639 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %640, i32 0, i32 1, i32 1)
  %641 = getelementptr inbounds float, float* %619, i64 48
  %642 = bitcast float* %641 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %642, i32 0, i32 1, i32 1)
  %643 = getelementptr inbounds float, float* %622, i64 48
  %644 = bitcast float* %643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %644, i32 0, i32 1, i32 1)
  %645 = getelementptr inbounds float, float* %619, i64 56
  %646 = bitcast float* %645 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %646, i32 0, i32 1, i32 1)
  %647 = getelementptr inbounds float, float* %622, i64 56
  %648 = bitcast float* %647 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %648, i32 0, i32 1, i32 1)
  %649 = bitcast float* %619 to <8 x float>*
  %650 = load <8 x float>, <8 x float>* %649, align 1, !tbaa !12
  %651 = add nuw nsw i64 %618, 8
  %652 = getelementptr inbounds float, float* %5, i64 %651
  %653 = bitcast float* %652 to <8 x float>*
  %654 = load <8 x float>, <8 x float>* %653, align 1, !tbaa !12
  %655 = add nuw nsw i64 %618, 16
  %656 = getelementptr inbounds float, float* %5, i64 %655
  %657 = bitcast float* %656 to <8 x float>*
  %658 = load <8 x float>, <8 x float>* %657, align 1, !tbaa !12
  %659 = add nuw nsw i64 %618, 24
  %660 = getelementptr inbounds float, float* %5, i64 %659
  %661 = bitcast float* %660 to <8 x float>*
  %662 = load <8 x float>, <8 x float>* %661, align 1, !tbaa !12
  %663 = add nuw nsw i64 %618, 32
  %664 = getelementptr inbounds float, float* %5, i64 %663
  %665 = bitcast float* %664 to <8 x float>*
  %666 = load <8 x float>, <8 x float>* %665, align 1, !tbaa !12
  %667 = add nuw nsw i64 %618, 40
  %668 = getelementptr inbounds float, float* %5, i64 %667
  %669 = bitcast float* %668 to <8 x float>*
  %670 = load <8 x float>, <8 x float>* %669, align 1, !tbaa !12
  %671 = add nuw nsw i64 %618, 48
  %672 = getelementptr inbounds float, float* %5, i64 %671
  %673 = bitcast float* %672 to <8 x float>*
  %674 = load <8 x float>, <8 x float>* %673, align 1, !tbaa !12
  %675 = trunc i64 %618 to i32
  %676 = add nsw i32 %515, %675
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds float, float* %3, i64 %677
  %679 = bitcast float* %678 to <8 x float>*
  %680 = load <8 x float>, <8 x float>* %679, align 1, !tbaa !12
  %681 = add nsw i32 %676, 8
  %682 = sext i32 %681 to i64
  %683 = getelementptr inbounds float, float* %3, i64 %682
  %684 = bitcast float* %683 to <8 x float>*
  %685 = load <8 x float>, <8 x float>* %684, align 1, !tbaa !12
  %686 = add nsw i32 %676, 16
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds float, float* %3, i64 %687
  %689 = bitcast float* %688 to <8 x float>*
  %690 = load <8 x float>, <8 x float>* %689, align 1, !tbaa !12
  %691 = add nsw i32 %676, 24
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds float, float* %3, i64 %692
  %694 = bitcast float* %693 to <8 x float>*
  %695 = load <8 x float>, <8 x float>* %694, align 1, !tbaa !12
  %696 = add nsw i32 %676, 32
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds float, float* %3, i64 %697
  %699 = bitcast float* %698 to <8 x float>*
  %700 = load <8 x float>, <8 x float>* %699, align 1, !tbaa !12
  %701 = add nsw i32 %676, 40
  %702 = sext i32 %701 to i64
  %703 = getelementptr inbounds float, float* %3, i64 %702
  %704 = bitcast float* %703 to <8 x float>*
  %705 = load <8 x float>, <8 x float>* %704, align 1, !tbaa !12
  %706 = add nsw i32 %676, 48
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds float, float* %3, i64 %707
  %709 = bitcast float* %708 to <8 x float>*
  %710 = load <8 x float>, <8 x float>* %709, align 1, !tbaa !12
  %711 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %680, <8 x float> %50, <8 x float> %650) #10
  %712 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %685, <8 x float> %50, <8 x float> %654) #10
  %713 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %690, <8 x float> %50, <8 x float> %658) #10
  %714 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %695, <8 x float> %50, <8 x float> %662) #10
  %715 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %700, <8 x float> %50, <8 x float> %666) #10
  %716 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %705, <8 x float> %50, <8 x float> %670) #10
  %717 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %710, <8 x float> %50, <8 x float> %674) #10
  store <8 x float> %711, <8 x float>* %649, align 1, !tbaa !12
  store <8 x float> %712, <8 x float>* %653, align 1, !tbaa !12
  store <8 x float> %713, <8 x float>* %657, align 1, !tbaa !12
  store <8 x float> %714, <8 x float>* %661, align 1, !tbaa !12
  store <8 x float> %715, <8 x float>* %665, align 1, !tbaa !12
  store <8 x float> %716, <8 x float>* %669, align 1, !tbaa !12
  store <8 x float> %717, <8 x float>* %673, align 1, !tbaa !12
  %718 = add nuw nsw i64 %618, 56
  %719 = icmp ult i64 %718, %513
  br i1 %719, label %617, label %611

720:                                              ; preds = %726
  br i1 %511, label %721, label %1023

721:                                              ; preds = %720
  %722 = trunc i64 %56 to i32
  %723 = mul nsw i32 %510, %722
  %724 = sext i32 %723 to i64
  %725 = zext i32 %510 to i64
  br label %827

726:                                              ; preds = %612, %726
  %727 = phi i64 [ 0, %612 ], [ %819, %726 ]
  %728 = getelementptr inbounds float, float* %5, i64 %727
  %729 = getelementptr inbounds float, float* %728, i64 8
  %730 = bitcast float* %729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %730, i32 0, i32 1, i32 1)
  %731 = getelementptr inbounds float, float* %3, i64 %727
  %732 = getelementptr inbounds float, float* %731, i64 8
  %733 = bitcast float* %732 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %733, i32 0, i32 1, i32 1)
  %734 = getelementptr inbounds float, float* %728, i64 16
  %735 = bitcast float* %734 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %735, i32 0, i32 1, i32 1)
  %736 = getelementptr inbounds float, float* %731, i64 16
  %737 = bitcast float* %736 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %737, i32 0, i32 1, i32 1)
  %738 = getelementptr inbounds float, float* %728, i64 24
  %739 = bitcast float* %738 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %739, i32 0, i32 1, i32 1)
  %740 = getelementptr inbounds float, float* %731, i64 24
  %741 = bitcast float* %740 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %741, i32 0, i32 1, i32 1)
  %742 = getelementptr inbounds float, float* %728, i64 32
  %743 = bitcast float* %742 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %743, i32 0, i32 1, i32 1)
  %744 = getelementptr inbounds float, float* %731, i64 32
  %745 = bitcast float* %744 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %745, i32 0, i32 1, i32 1)
  %746 = getelementptr inbounds float, float* %728, i64 40
  %747 = bitcast float* %746 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %747, i32 0, i32 1, i32 1)
  %748 = getelementptr inbounds float, float* %731, i64 40
  %749 = bitcast float* %748 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %749, i32 0, i32 1, i32 1)
  %750 = getelementptr inbounds float, float* %728, i64 48
  %751 = bitcast float* %750 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %751, i32 0, i32 1, i32 1)
  %752 = getelementptr inbounds float, float* %731, i64 48
  %753 = bitcast float* %752 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %753, i32 0, i32 1, i32 1)
  %754 = getelementptr inbounds float, float* %728, i64 56
  %755 = bitcast float* %754 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %755, i32 0, i32 1, i32 1)
  %756 = getelementptr inbounds float, float* %731, i64 56
  %757 = bitcast float* %756 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %757, i32 0, i32 1, i32 1)
  %758 = bitcast float* %728 to <8 x float>*
  %759 = load <8 x float>, <8 x float>* %758, align 1, !tbaa !12
  %760 = add nuw nsw i64 %727, 8
  %761 = getelementptr inbounds float, float* %5, i64 %760
  %762 = bitcast float* %761 to <8 x float>*
  %763 = load <8 x float>, <8 x float>* %762, align 1, !tbaa !12
  %764 = add nuw nsw i64 %727, 16
  %765 = getelementptr inbounds float, float* %5, i64 %764
  %766 = bitcast float* %765 to <8 x float>*
  %767 = load <8 x float>, <8 x float>* %766, align 1, !tbaa !12
  %768 = add nuw nsw i64 %727, 24
  %769 = getelementptr inbounds float, float* %5, i64 %768
  %770 = bitcast float* %769 to <8 x float>*
  %771 = load <8 x float>, <8 x float>* %770, align 1, !tbaa !12
  %772 = add nuw nsw i64 %727, 32
  %773 = getelementptr inbounds float, float* %5, i64 %772
  %774 = bitcast float* %773 to <8 x float>*
  %775 = load <8 x float>, <8 x float>* %774, align 1, !tbaa !12
  %776 = add nuw nsw i64 %727, 40
  %777 = getelementptr inbounds float, float* %5, i64 %776
  %778 = bitcast float* %777 to <8 x float>*
  %779 = load <8 x float>, <8 x float>* %778, align 1, !tbaa !12
  %780 = add nuw nsw i64 %727, 48
  %781 = getelementptr inbounds float, float* %5, i64 %780
  %782 = bitcast float* %781 to <8 x float>*
  %783 = load <8 x float>, <8 x float>* %782, align 1, !tbaa !12
  %784 = add nsw i64 %727, %615
  %785 = getelementptr inbounds float, float* %3, i64 %784
  %786 = bitcast float* %785 to <8 x float>*
  %787 = load <8 x float>, <8 x float>* %786, align 1, !tbaa !12
  %788 = add nsw i64 %784, 8
  %789 = getelementptr inbounds float, float* %3, i64 %788
  %790 = bitcast float* %789 to <8 x float>*
  %791 = load <8 x float>, <8 x float>* %790, align 1, !tbaa !12
  %792 = add nsw i64 %784, 16
  %793 = getelementptr inbounds float, float* %3, i64 %792
  %794 = bitcast float* %793 to <8 x float>*
  %795 = load <8 x float>, <8 x float>* %794, align 1, !tbaa !12
  %796 = add nsw i64 %784, 24
  %797 = getelementptr inbounds float, float* %3, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %799 = load <8 x float>, <8 x float>* %798, align 1, !tbaa !12
  %800 = add nsw i64 %784, 32
  %801 = getelementptr inbounds float, float* %3, i64 %800
  %802 = bitcast float* %801 to <8 x float>*
  %803 = load <8 x float>, <8 x float>* %802, align 1, !tbaa !12
  %804 = add nsw i64 %784, 40
  %805 = getelementptr inbounds float, float* %3, i64 %804
  %806 = bitcast float* %805 to <8 x float>*
  %807 = load <8 x float>, <8 x float>* %806, align 1, !tbaa !12
  %808 = add nsw i64 %784, 48
  %809 = getelementptr inbounds float, float* %3, i64 %808
  %810 = bitcast float* %809 to <8 x float>*
  %811 = load <8 x float>, <8 x float>* %810, align 1, !tbaa !12
  %812 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %787, <8 x float> %55, <8 x float> %759) #10
  %813 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %791, <8 x float> %55, <8 x float> %763) #10
  %814 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %795, <8 x float> %55, <8 x float> %767) #10
  %815 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %799, <8 x float> %55, <8 x float> %771) #10
  %816 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %803, <8 x float> %55, <8 x float> %775) #10
  %817 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %807, <8 x float> %55, <8 x float> %779) #10
  %818 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %811, <8 x float> %55, <8 x float> %783) #10
  store <8 x float> %812, <8 x float>* %758, align 1, !tbaa !12
  store <8 x float> %813, <8 x float>* %762, align 1, !tbaa !12
  store <8 x float> %814, <8 x float>* %766, align 1, !tbaa !12
  store <8 x float> %815, <8 x float>* %770, align 1, !tbaa !12
  store <8 x float> %816, <8 x float>* %774, align 1, !tbaa !12
  store <8 x float> %817, <8 x float>* %778, align 1, !tbaa !12
  store <8 x float> %818, <8 x float>* %782, align 1, !tbaa !12
  %819 = add nuw nsw i64 %727, 56
  %820 = icmp ult i64 %819, %616
  br i1 %820, label %726, label %720

821:                                              ; preds = %827
  br i1 %511, label %822, label %1023

822:                                              ; preds = %821
  %823 = trunc i64 %61 to i32
  %824 = mul nsw i32 %510, %823
  %825 = sext i32 %824 to i64
  %826 = zext i32 %510 to i64
  br label %928

827:                                              ; preds = %721, %827
  %828 = phi i64 [ 0, %721 ], [ %920, %827 ]
  %829 = getelementptr inbounds float, float* %5, i64 %828
  %830 = getelementptr inbounds float, float* %829, i64 8
  %831 = bitcast float* %830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %831, i32 0, i32 1, i32 1)
  %832 = getelementptr inbounds float, float* %3, i64 %828
  %833 = getelementptr inbounds float, float* %832, i64 8
  %834 = bitcast float* %833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %834, i32 0, i32 1, i32 1)
  %835 = getelementptr inbounds float, float* %829, i64 16
  %836 = bitcast float* %835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %836, i32 0, i32 1, i32 1)
  %837 = getelementptr inbounds float, float* %832, i64 16
  %838 = bitcast float* %837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %838, i32 0, i32 1, i32 1)
  %839 = getelementptr inbounds float, float* %829, i64 24
  %840 = bitcast float* %839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %840, i32 0, i32 1, i32 1)
  %841 = getelementptr inbounds float, float* %832, i64 24
  %842 = bitcast float* %841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %842, i32 0, i32 1, i32 1)
  %843 = getelementptr inbounds float, float* %829, i64 32
  %844 = bitcast float* %843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %844, i32 0, i32 1, i32 1)
  %845 = getelementptr inbounds float, float* %832, i64 32
  %846 = bitcast float* %845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %846, i32 0, i32 1, i32 1)
  %847 = getelementptr inbounds float, float* %829, i64 40
  %848 = bitcast float* %847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %848, i32 0, i32 1, i32 1)
  %849 = getelementptr inbounds float, float* %832, i64 40
  %850 = bitcast float* %849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %850, i32 0, i32 1, i32 1)
  %851 = getelementptr inbounds float, float* %829, i64 48
  %852 = bitcast float* %851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %852, i32 0, i32 1, i32 1)
  %853 = getelementptr inbounds float, float* %832, i64 48
  %854 = bitcast float* %853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %854, i32 0, i32 1, i32 1)
  %855 = getelementptr inbounds float, float* %829, i64 56
  %856 = bitcast float* %855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %856, i32 0, i32 1, i32 1)
  %857 = getelementptr inbounds float, float* %832, i64 56
  %858 = bitcast float* %857 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %858, i32 0, i32 1, i32 1)
  %859 = bitcast float* %829 to <8 x float>*
  %860 = load <8 x float>, <8 x float>* %859, align 1, !tbaa !12
  %861 = add nuw nsw i64 %828, 8
  %862 = getelementptr inbounds float, float* %5, i64 %861
  %863 = bitcast float* %862 to <8 x float>*
  %864 = load <8 x float>, <8 x float>* %863, align 1, !tbaa !12
  %865 = add nuw nsw i64 %828, 16
  %866 = getelementptr inbounds float, float* %5, i64 %865
  %867 = bitcast float* %866 to <8 x float>*
  %868 = load <8 x float>, <8 x float>* %867, align 1, !tbaa !12
  %869 = add nuw nsw i64 %828, 24
  %870 = getelementptr inbounds float, float* %5, i64 %869
  %871 = bitcast float* %870 to <8 x float>*
  %872 = load <8 x float>, <8 x float>* %871, align 1, !tbaa !12
  %873 = add nuw nsw i64 %828, 32
  %874 = getelementptr inbounds float, float* %5, i64 %873
  %875 = bitcast float* %874 to <8 x float>*
  %876 = load <8 x float>, <8 x float>* %875, align 1, !tbaa !12
  %877 = add nuw nsw i64 %828, 40
  %878 = getelementptr inbounds float, float* %5, i64 %877
  %879 = bitcast float* %878 to <8 x float>*
  %880 = load <8 x float>, <8 x float>* %879, align 1, !tbaa !12
  %881 = add nuw nsw i64 %828, 48
  %882 = getelementptr inbounds float, float* %5, i64 %881
  %883 = bitcast float* %882 to <8 x float>*
  %884 = load <8 x float>, <8 x float>* %883, align 1, !tbaa !12
  %885 = add nsw i64 %828, %724
  %886 = getelementptr inbounds float, float* %3, i64 %885
  %887 = bitcast float* %886 to <8 x float>*
  %888 = load <8 x float>, <8 x float>* %887, align 1, !tbaa !12
  %889 = add nsw i64 %885, 8
  %890 = getelementptr inbounds float, float* %3, i64 %889
  %891 = bitcast float* %890 to <8 x float>*
  %892 = load <8 x float>, <8 x float>* %891, align 1, !tbaa !12
  %893 = add nsw i64 %885, 16
  %894 = getelementptr inbounds float, float* %3, i64 %893
  %895 = bitcast float* %894 to <8 x float>*
  %896 = load <8 x float>, <8 x float>* %895, align 1, !tbaa !12
  %897 = add nsw i64 %885, 24
  %898 = getelementptr inbounds float, float* %3, i64 %897
  %899 = bitcast float* %898 to <8 x float>*
  %900 = load <8 x float>, <8 x float>* %899, align 1, !tbaa !12
  %901 = add nsw i64 %885, 32
  %902 = getelementptr inbounds float, float* %3, i64 %901
  %903 = bitcast float* %902 to <8 x float>*
  %904 = load <8 x float>, <8 x float>* %903, align 1, !tbaa !12
  %905 = add nsw i64 %885, 40
  %906 = getelementptr inbounds float, float* %3, i64 %905
  %907 = bitcast float* %906 to <8 x float>*
  %908 = load <8 x float>, <8 x float>* %907, align 1, !tbaa !12
  %909 = add nsw i64 %885, 48
  %910 = getelementptr inbounds float, float* %3, i64 %909
  %911 = bitcast float* %910 to <8 x float>*
  %912 = load <8 x float>, <8 x float>* %911, align 1, !tbaa !12
  %913 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %888, <8 x float> %60, <8 x float> %860) #10
  %914 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %892, <8 x float> %60, <8 x float> %864) #10
  %915 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %896, <8 x float> %60, <8 x float> %868) #10
  %916 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %900, <8 x float> %60, <8 x float> %872) #10
  %917 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %904, <8 x float> %60, <8 x float> %876) #10
  %918 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %908, <8 x float> %60, <8 x float> %880) #10
  %919 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %912, <8 x float> %60, <8 x float> %884) #10
  store <8 x float> %913, <8 x float>* %859, align 1, !tbaa !12
  store <8 x float> %914, <8 x float>* %863, align 1, !tbaa !12
  store <8 x float> %915, <8 x float>* %867, align 1, !tbaa !12
  store <8 x float> %916, <8 x float>* %871, align 1, !tbaa !12
  store <8 x float> %917, <8 x float>* %875, align 1, !tbaa !12
  store <8 x float> %918, <8 x float>* %879, align 1, !tbaa !12
  store <8 x float> %919, <8 x float>* %883, align 1, !tbaa !12
  %920 = add nuw nsw i64 %828, 56
  %921 = icmp ult i64 %920, %725
  br i1 %921, label %827, label %821

922:                                              ; preds = %928
  br i1 %511, label %923, label %1023

923:                                              ; preds = %922
  %924 = trunc i64 %66 to i32
  %925 = mul nsw i32 %510, %924
  %926 = sext i32 %925 to i64
  %927 = zext i32 %510 to i64
  br label %1030

928:                                              ; preds = %822, %928
  %929 = phi i64 [ 0, %822 ], [ %1021, %928 ]
  %930 = getelementptr inbounds float, float* %5, i64 %929
  %931 = getelementptr inbounds float, float* %930, i64 8
  %932 = bitcast float* %931 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %932, i32 0, i32 1, i32 1)
  %933 = getelementptr inbounds float, float* %3, i64 %929
  %934 = getelementptr inbounds float, float* %933, i64 8
  %935 = bitcast float* %934 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %935, i32 0, i32 1, i32 1)
  %936 = getelementptr inbounds float, float* %930, i64 16
  %937 = bitcast float* %936 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %937, i32 0, i32 1, i32 1)
  %938 = getelementptr inbounds float, float* %933, i64 16
  %939 = bitcast float* %938 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %939, i32 0, i32 1, i32 1)
  %940 = getelementptr inbounds float, float* %930, i64 24
  %941 = bitcast float* %940 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %941, i32 0, i32 1, i32 1)
  %942 = getelementptr inbounds float, float* %933, i64 24
  %943 = bitcast float* %942 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %943, i32 0, i32 1, i32 1)
  %944 = getelementptr inbounds float, float* %930, i64 32
  %945 = bitcast float* %944 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %945, i32 0, i32 1, i32 1)
  %946 = getelementptr inbounds float, float* %933, i64 32
  %947 = bitcast float* %946 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %947, i32 0, i32 1, i32 1)
  %948 = getelementptr inbounds float, float* %930, i64 40
  %949 = bitcast float* %948 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %949, i32 0, i32 1, i32 1)
  %950 = getelementptr inbounds float, float* %933, i64 40
  %951 = bitcast float* %950 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %951, i32 0, i32 1, i32 1)
  %952 = getelementptr inbounds float, float* %930, i64 48
  %953 = bitcast float* %952 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %953, i32 0, i32 1, i32 1)
  %954 = getelementptr inbounds float, float* %933, i64 48
  %955 = bitcast float* %954 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %955, i32 0, i32 1, i32 1)
  %956 = getelementptr inbounds float, float* %930, i64 56
  %957 = bitcast float* %956 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %957, i32 0, i32 1, i32 1)
  %958 = getelementptr inbounds float, float* %933, i64 56
  %959 = bitcast float* %958 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %959, i32 0, i32 1, i32 1)
  %960 = bitcast float* %930 to <8 x float>*
  %961 = load <8 x float>, <8 x float>* %960, align 1, !tbaa !12
  %962 = add nuw nsw i64 %929, 8
  %963 = getelementptr inbounds float, float* %5, i64 %962
  %964 = bitcast float* %963 to <8 x float>*
  %965 = load <8 x float>, <8 x float>* %964, align 1, !tbaa !12
  %966 = add nuw nsw i64 %929, 16
  %967 = getelementptr inbounds float, float* %5, i64 %966
  %968 = bitcast float* %967 to <8 x float>*
  %969 = load <8 x float>, <8 x float>* %968, align 1, !tbaa !12
  %970 = add nuw nsw i64 %929, 24
  %971 = getelementptr inbounds float, float* %5, i64 %970
  %972 = bitcast float* %971 to <8 x float>*
  %973 = load <8 x float>, <8 x float>* %972, align 1, !tbaa !12
  %974 = add nuw nsw i64 %929, 32
  %975 = getelementptr inbounds float, float* %5, i64 %974
  %976 = bitcast float* %975 to <8 x float>*
  %977 = load <8 x float>, <8 x float>* %976, align 1, !tbaa !12
  %978 = add nuw nsw i64 %929, 40
  %979 = getelementptr inbounds float, float* %5, i64 %978
  %980 = bitcast float* %979 to <8 x float>*
  %981 = load <8 x float>, <8 x float>* %980, align 1, !tbaa !12
  %982 = add nuw nsw i64 %929, 48
  %983 = getelementptr inbounds float, float* %5, i64 %982
  %984 = bitcast float* %983 to <8 x float>*
  %985 = load <8 x float>, <8 x float>* %984, align 1, !tbaa !12
  %986 = add nsw i64 %929, %825
  %987 = getelementptr inbounds float, float* %3, i64 %986
  %988 = bitcast float* %987 to <8 x float>*
  %989 = load <8 x float>, <8 x float>* %988, align 1, !tbaa !12
  %990 = add nsw i64 %986, 8
  %991 = getelementptr inbounds float, float* %3, i64 %990
  %992 = bitcast float* %991 to <8 x float>*
  %993 = load <8 x float>, <8 x float>* %992, align 1, !tbaa !12
  %994 = add nsw i64 %986, 16
  %995 = getelementptr inbounds float, float* %3, i64 %994
  %996 = bitcast float* %995 to <8 x float>*
  %997 = load <8 x float>, <8 x float>* %996, align 1, !tbaa !12
  %998 = add nsw i64 %986, 24
  %999 = getelementptr inbounds float, float* %3, i64 %998
  %1000 = bitcast float* %999 to <8 x float>*
  %1001 = load <8 x float>, <8 x float>* %1000, align 1, !tbaa !12
  %1002 = add nsw i64 %986, 32
  %1003 = getelementptr inbounds float, float* %3, i64 %1002
  %1004 = bitcast float* %1003 to <8 x float>*
  %1005 = load <8 x float>, <8 x float>* %1004, align 1, !tbaa !12
  %1006 = add nsw i64 %986, 40
  %1007 = getelementptr inbounds float, float* %3, i64 %1006
  %1008 = bitcast float* %1007 to <8 x float>*
  %1009 = load <8 x float>, <8 x float>* %1008, align 1, !tbaa !12
  %1010 = add nsw i64 %986, 48
  %1011 = getelementptr inbounds float, float* %3, i64 %1010
  %1012 = bitcast float* %1011 to <8 x float>*
  %1013 = load <8 x float>, <8 x float>* %1012, align 1, !tbaa !12
  %1014 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %989, <8 x float> %65, <8 x float> %961) #10
  %1015 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %993, <8 x float> %65, <8 x float> %965) #10
  %1016 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %997, <8 x float> %65, <8 x float> %969) #10
  %1017 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1001, <8 x float> %65, <8 x float> %973) #10
  %1018 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1005, <8 x float> %65, <8 x float> %977) #10
  %1019 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1009, <8 x float> %65, <8 x float> %981) #10
  %1020 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1013, <8 x float> %65, <8 x float> %985) #10
  store <8 x float> %1014, <8 x float>* %960, align 1, !tbaa !12
  store <8 x float> %1015, <8 x float>* %964, align 1, !tbaa !12
  store <8 x float> %1016, <8 x float>* %968, align 1, !tbaa !12
  store <8 x float> %1017, <8 x float>* %972, align 1, !tbaa !12
  store <8 x float> %1018, <8 x float>* %976, align 1, !tbaa !12
  store <8 x float> %1019, <8 x float>* %980, align 1, !tbaa !12
  store <8 x float> %1020, <8 x float>* %984, align 1, !tbaa !12
  %1021 = add nuw nsw i64 %929, 56
  %1022 = icmp ult i64 %1021, %826
  br i1 %1022, label %928, label %922

1023:                                             ; preds = %1030, %611, %720, %821, %922
  %1024 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1025 = icmp sgt i32 %1024, 0
  br i1 %1025, label %1026, label %1436

1026:                                             ; preds = %1023
  %1027 = zext i32 %1024 to i64
  %1028 = trunc i64 %71 to i32
  %1029 = mul nsw i32 %1024, %1028
  br label %1131

1030:                                             ; preds = %923, %1030
  %1031 = phi i64 [ 0, %923 ], [ %1123, %1030 ]
  %1032 = getelementptr inbounds float, float* %5, i64 %1031
  %1033 = getelementptr inbounds float, float* %1032, i64 8
  %1034 = bitcast float* %1033 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1034, i32 0, i32 1, i32 1)
  %1035 = getelementptr inbounds float, float* %3, i64 %1031
  %1036 = getelementptr inbounds float, float* %1035, i64 8
  %1037 = bitcast float* %1036 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1037, i32 0, i32 1, i32 1)
  %1038 = getelementptr inbounds float, float* %1032, i64 16
  %1039 = bitcast float* %1038 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1039, i32 0, i32 1, i32 1)
  %1040 = getelementptr inbounds float, float* %1035, i64 16
  %1041 = bitcast float* %1040 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1041, i32 0, i32 1, i32 1)
  %1042 = getelementptr inbounds float, float* %1032, i64 24
  %1043 = bitcast float* %1042 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1043, i32 0, i32 1, i32 1)
  %1044 = getelementptr inbounds float, float* %1035, i64 24
  %1045 = bitcast float* %1044 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1045, i32 0, i32 1, i32 1)
  %1046 = getelementptr inbounds float, float* %1032, i64 32
  %1047 = bitcast float* %1046 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1047, i32 0, i32 1, i32 1)
  %1048 = getelementptr inbounds float, float* %1035, i64 32
  %1049 = bitcast float* %1048 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1049, i32 0, i32 1, i32 1)
  %1050 = getelementptr inbounds float, float* %1032, i64 40
  %1051 = bitcast float* %1050 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1051, i32 0, i32 1, i32 1)
  %1052 = getelementptr inbounds float, float* %1035, i64 40
  %1053 = bitcast float* %1052 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1053, i32 0, i32 1, i32 1)
  %1054 = getelementptr inbounds float, float* %1032, i64 48
  %1055 = bitcast float* %1054 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1055, i32 0, i32 1, i32 1)
  %1056 = getelementptr inbounds float, float* %1035, i64 48
  %1057 = bitcast float* %1056 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1057, i32 0, i32 1, i32 1)
  %1058 = getelementptr inbounds float, float* %1032, i64 56
  %1059 = bitcast float* %1058 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1059, i32 0, i32 1, i32 1)
  %1060 = getelementptr inbounds float, float* %1035, i64 56
  %1061 = bitcast float* %1060 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1061, i32 0, i32 1, i32 1)
  %1062 = bitcast float* %1032 to <8 x float>*
  %1063 = load <8 x float>, <8 x float>* %1062, align 1, !tbaa !12
  %1064 = add nuw nsw i64 %1031, 8
  %1065 = getelementptr inbounds float, float* %5, i64 %1064
  %1066 = bitcast float* %1065 to <8 x float>*
  %1067 = load <8 x float>, <8 x float>* %1066, align 1, !tbaa !12
  %1068 = add nuw nsw i64 %1031, 16
  %1069 = getelementptr inbounds float, float* %5, i64 %1068
  %1070 = bitcast float* %1069 to <8 x float>*
  %1071 = load <8 x float>, <8 x float>* %1070, align 1, !tbaa !12
  %1072 = add nuw nsw i64 %1031, 24
  %1073 = getelementptr inbounds float, float* %5, i64 %1072
  %1074 = bitcast float* %1073 to <8 x float>*
  %1075 = load <8 x float>, <8 x float>* %1074, align 1, !tbaa !12
  %1076 = add nuw nsw i64 %1031, 32
  %1077 = getelementptr inbounds float, float* %5, i64 %1076
  %1078 = bitcast float* %1077 to <8 x float>*
  %1079 = load <8 x float>, <8 x float>* %1078, align 1, !tbaa !12
  %1080 = add nuw nsw i64 %1031, 40
  %1081 = getelementptr inbounds float, float* %5, i64 %1080
  %1082 = bitcast float* %1081 to <8 x float>*
  %1083 = load <8 x float>, <8 x float>* %1082, align 1, !tbaa !12
  %1084 = add nuw nsw i64 %1031, 48
  %1085 = getelementptr inbounds float, float* %5, i64 %1084
  %1086 = bitcast float* %1085 to <8 x float>*
  %1087 = load <8 x float>, <8 x float>* %1086, align 1, !tbaa !12
  %1088 = add nsw i64 %1031, %926
  %1089 = getelementptr inbounds float, float* %3, i64 %1088
  %1090 = bitcast float* %1089 to <8 x float>*
  %1091 = load <8 x float>, <8 x float>* %1090, align 1, !tbaa !12
  %1092 = add nsw i64 %1088, 8
  %1093 = getelementptr inbounds float, float* %3, i64 %1092
  %1094 = bitcast float* %1093 to <8 x float>*
  %1095 = load <8 x float>, <8 x float>* %1094, align 1, !tbaa !12
  %1096 = add nsw i64 %1088, 16
  %1097 = getelementptr inbounds float, float* %3, i64 %1096
  %1098 = bitcast float* %1097 to <8 x float>*
  %1099 = load <8 x float>, <8 x float>* %1098, align 1, !tbaa !12
  %1100 = add nsw i64 %1088, 24
  %1101 = getelementptr inbounds float, float* %3, i64 %1100
  %1102 = bitcast float* %1101 to <8 x float>*
  %1103 = load <8 x float>, <8 x float>* %1102, align 1, !tbaa !12
  %1104 = add nsw i64 %1088, 32
  %1105 = getelementptr inbounds float, float* %3, i64 %1104
  %1106 = bitcast float* %1105 to <8 x float>*
  %1107 = load <8 x float>, <8 x float>* %1106, align 1, !tbaa !12
  %1108 = add nsw i64 %1088, 40
  %1109 = getelementptr inbounds float, float* %3, i64 %1108
  %1110 = bitcast float* %1109 to <8 x float>*
  %1111 = load <8 x float>, <8 x float>* %1110, align 1, !tbaa !12
  %1112 = add nsw i64 %1088, 48
  %1113 = getelementptr inbounds float, float* %3, i64 %1112
  %1114 = bitcast float* %1113 to <8 x float>*
  %1115 = load <8 x float>, <8 x float>* %1114, align 1, !tbaa !12
  %1116 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1091, <8 x float> %70, <8 x float> %1063) #10
  %1117 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1095, <8 x float> %70, <8 x float> %1067) #10
  %1118 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1099, <8 x float> %70, <8 x float> %1071) #10
  %1119 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1103, <8 x float> %70, <8 x float> %1075) #10
  %1120 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1107, <8 x float> %70, <8 x float> %1079) #10
  %1121 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1111, <8 x float> %70, <8 x float> %1083) #10
  %1122 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1115, <8 x float> %70, <8 x float> %1087) #10
  store <8 x float> %1116, <8 x float>* %1062, align 1, !tbaa !12
  store <8 x float> %1117, <8 x float>* %1066, align 1, !tbaa !12
  store <8 x float> %1118, <8 x float>* %1070, align 1, !tbaa !12
  store <8 x float> %1119, <8 x float>* %1074, align 1, !tbaa !12
  store <8 x float> %1120, <8 x float>* %1078, align 1, !tbaa !12
  store <8 x float> %1121, <8 x float>* %1082, align 1, !tbaa !12
  store <8 x float> %1122, <8 x float>* %1086, align 1, !tbaa !12
  %1123 = add nuw nsw i64 %1031, 56
  %1124 = icmp ult i64 %1123, %927
  br i1 %1124, label %1030, label %1023

1125:                                             ; preds = %1131
  br i1 %1025, label %1126, label %1436

1126:                                             ; preds = %1125
  %1127 = trunc i64 %76 to i32
  %1128 = mul nsw i32 %1024, %1127
  %1129 = sext i32 %1128 to i64
  %1130 = zext i32 %1024 to i64
  br label %1240

1131:                                             ; preds = %1026, %1131
  %1132 = phi i64 [ 0, %1026 ], [ %1232, %1131 ]
  %1133 = getelementptr inbounds float, float* %5, i64 %1132
  %1134 = getelementptr inbounds float, float* %1133, i64 8
  %1135 = bitcast float* %1134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1135, i32 0, i32 1, i32 1)
  %1136 = getelementptr inbounds float, float* %3, i64 %1132
  %1137 = getelementptr inbounds float, float* %1136, i64 8
  %1138 = bitcast float* %1137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1138, i32 0, i32 1, i32 1)
  %1139 = getelementptr inbounds float, float* %1133, i64 16
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = getelementptr inbounds float, float* %1136, i64 16
  %1142 = bitcast float* %1141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1142, i32 0, i32 1, i32 1)
  %1143 = getelementptr inbounds float, float* %1133, i64 24
  %1144 = bitcast float* %1143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1144, i32 0, i32 1, i32 1)
  %1145 = getelementptr inbounds float, float* %1136, i64 24
  %1146 = bitcast float* %1145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1146, i32 0, i32 1, i32 1)
  %1147 = getelementptr inbounds float, float* %1133, i64 32
  %1148 = bitcast float* %1147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1148, i32 0, i32 1, i32 1)
  %1149 = getelementptr inbounds float, float* %1136, i64 32
  %1150 = bitcast float* %1149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1150, i32 0, i32 1, i32 1)
  %1151 = getelementptr inbounds float, float* %1133, i64 40
  %1152 = bitcast float* %1151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1152, i32 0, i32 1, i32 1)
  %1153 = getelementptr inbounds float, float* %1136, i64 40
  %1154 = bitcast float* %1153 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1154, i32 0, i32 1, i32 1)
  %1155 = getelementptr inbounds float, float* %1133, i64 48
  %1156 = bitcast float* %1155 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1156, i32 0, i32 1, i32 1)
  %1157 = getelementptr inbounds float, float* %1136, i64 48
  %1158 = bitcast float* %1157 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1158, i32 0, i32 1, i32 1)
  %1159 = getelementptr inbounds float, float* %1133, i64 56
  %1160 = bitcast float* %1159 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1160, i32 0, i32 1, i32 1)
  %1161 = getelementptr inbounds float, float* %1136, i64 56
  %1162 = bitcast float* %1161 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1162, i32 0, i32 1, i32 1)
  %1163 = bitcast float* %1133 to <8 x float>*
  %1164 = load <8 x float>, <8 x float>* %1163, align 1, !tbaa !12
  %1165 = add nuw nsw i64 %1132, 8
  %1166 = getelementptr inbounds float, float* %5, i64 %1165
  %1167 = bitcast float* %1166 to <8 x float>*
  %1168 = load <8 x float>, <8 x float>* %1167, align 1, !tbaa !12
  %1169 = add nuw nsw i64 %1132, 16
  %1170 = getelementptr inbounds float, float* %5, i64 %1169
  %1171 = bitcast float* %1170 to <8 x float>*
  %1172 = load <8 x float>, <8 x float>* %1171, align 1, !tbaa !12
  %1173 = add nuw nsw i64 %1132, 24
  %1174 = getelementptr inbounds float, float* %5, i64 %1173
  %1175 = bitcast float* %1174 to <8 x float>*
  %1176 = load <8 x float>, <8 x float>* %1175, align 1, !tbaa !12
  %1177 = add nuw nsw i64 %1132, 32
  %1178 = getelementptr inbounds float, float* %5, i64 %1177
  %1179 = bitcast float* %1178 to <8 x float>*
  %1180 = load <8 x float>, <8 x float>* %1179, align 1, !tbaa !12
  %1181 = add nuw nsw i64 %1132, 40
  %1182 = getelementptr inbounds float, float* %5, i64 %1181
  %1183 = bitcast float* %1182 to <8 x float>*
  %1184 = load <8 x float>, <8 x float>* %1183, align 1, !tbaa !12
  %1185 = add nuw nsw i64 %1132, 48
  %1186 = getelementptr inbounds float, float* %5, i64 %1185
  %1187 = bitcast float* %1186 to <8 x float>*
  %1188 = load <8 x float>, <8 x float>* %1187, align 1, !tbaa !12
  %1189 = trunc i64 %1132 to i32
  %1190 = add nsw i32 %1029, %1189
  %1191 = sext i32 %1190 to i64
  %1192 = getelementptr inbounds float, float* %3, i64 %1191
  %1193 = bitcast float* %1192 to <8 x float>*
  %1194 = load <8 x float>, <8 x float>* %1193, align 1, !tbaa !12
  %1195 = add nsw i32 %1190, 8
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds float, float* %3, i64 %1196
  %1198 = bitcast float* %1197 to <8 x float>*
  %1199 = load <8 x float>, <8 x float>* %1198, align 1, !tbaa !12
  %1200 = add nsw i32 %1190, 16
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds float, float* %3, i64 %1201
  %1203 = bitcast float* %1202 to <8 x float>*
  %1204 = load <8 x float>, <8 x float>* %1203, align 1, !tbaa !12
  %1205 = add nsw i32 %1190, 24
  %1206 = sext i32 %1205 to i64
  %1207 = getelementptr inbounds float, float* %3, i64 %1206
  %1208 = bitcast float* %1207 to <8 x float>*
  %1209 = load <8 x float>, <8 x float>* %1208, align 1, !tbaa !12
  %1210 = add nsw i32 %1190, 32
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds float, float* %3, i64 %1211
  %1213 = bitcast float* %1212 to <8 x float>*
  %1214 = load <8 x float>, <8 x float>* %1213, align 1, !tbaa !12
  %1215 = add nsw i32 %1190, 40
  %1216 = sext i32 %1215 to i64
  %1217 = getelementptr inbounds float, float* %3, i64 %1216
  %1218 = bitcast float* %1217 to <8 x float>*
  %1219 = load <8 x float>, <8 x float>* %1218, align 1, !tbaa !12
  %1220 = add nsw i32 %1190, 48
  %1221 = sext i32 %1220 to i64
  %1222 = getelementptr inbounds float, float* %3, i64 %1221
  %1223 = bitcast float* %1222 to <8 x float>*
  %1224 = load <8 x float>, <8 x float>* %1223, align 1, !tbaa !12
  %1225 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1194, <8 x float> %75, <8 x float> %1164) #10
  %1226 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1199, <8 x float> %75, <8 x float> %1168) #10
  %1227 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1204, <8 x float> %75, <8 x float> %1172) #10
  %1228 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1209, <8 x float> %75, <8 x float> %1176) #10
  %1229 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1214, <8 x float> %75, <8 x float> %1180) #10
  %1230 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1219, <8 x float> %75, <8 x float> %1184) #10
  %1231 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1224, <8 x float> %75, <8 x float> %1188) #10
  store <8 x float> %1225, <8 x float>* %1163, align 1, !tbaa !12
  store <8 x float> %1226, <8 x float>* %1167, align 1, !tbaa !12
  store <8 x float> %1227, <8 x float>* %1171, align 1, !tbaa !12
  store <8 x float> %1228, <8 x float>* %1175, align 1, !tbaa !12
  store <8 x float> %1229, <8 x float>* %1179, align 1, !tbaa !12
  store <8 x float> %1230, <8 x float>* %1183, align 1, !tbaa !12
  store <8 x float> %1231, <8 x float>* %1187, align 1, !tbaa !12
  %1232 = add nuw nsw i64 %1132, 56
  %1233 = icmp ult i64 %1232, %1027
  br i1 %1233, label %1131, label %1125

1234:                                             ; preds = %1240
  br i1 %1025, label %1235, label %1436

1235:                                             ; preds = %1234
  %1236 = trunc i64 %81 to i32
  %1237 = mul nsw i32 %1024, %1236
  %1238 = sext i32 %1237 to i64
  %1239 = zext i32 %1024 to i64
  br label %1341

1240:                                             ; preds = %1126, %1240
  %1241 = phi i64 [ 0, %1126 ], [ %1333, %1240 ]
  %1242 = getelementptr inbounds float, float* %5, i64 %1241
  %1243 = getelementptr inbounds float, float* %1242, i64 8
  %1244 = bitcast float* %1243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1244, i32 0, i32 1, i32 1)
  %1245 = getelementptr inbounds float, float* %3, i64 %1241
  %1246 = getelementptr inbounds float, float* %1245, i64 8
  %1247 = bitcast float* %1246 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1247, i32 0, i32 1, i32 1)
  %1248 = getelementptr inbounds float, float* %1242, i64 16
  %1249 = bitcast float* %1248 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1249, i32 0, i32 1, i32 1)
  %1250 = getelementptr inbounds float, float* %1245, i64 16
  %1251 = bitcast float* %1250 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1251, i32 0, i32 1, i32 1)
  %1252 = getelementptr inbounds float, float* %1242, i64 24
  %1253 = bitcast float* %1252 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1253, i32 0, i32 1, i32 1)
  %1254 = getelementptr inbounds float, float* %1245, i64 24
  %1255 = bitcast float* %1254 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1255, i32 0, i32 1, i32 1)
  %1256 = getelementptr inbounds float, float* %1242, i64 32
  %1257 = bitcast float* %1256 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1257, i32 0, i32 1, i32 1)
  %1258 = getelementptr inbounds float, float* %1245, i64 32
  %1259 = bitcast float* %1258 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1259, i32 0, i32 1, i32 1)
  %1260 = getelementptr inbounds float, float* %1242, i64 40
  %1261 = bitcast float* %1260 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1261, i32 0, i32 1, i32 1)
  %1262 = getelementptr inbounds float, float* %1245, i64 40
  %1263 = bitcast float* %1262 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1263, i32 0, i32 1, i32 1)
  %1264 = getelementptr inbounds float, float* %1242, i64 48
  %1265 = bitcast float* %1264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1265, i32 0, i32 1, i32 1)
  %1266 = getelementptr inbounds float, float* %1245, i64 48
  %1267 = bitcast float* %1266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1267, i32 0, i32 1, i32 1)
  %1268 = getelementptr inbounds float, float* %1242, i64 56
  %1269 = bitcast float* %1268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1269, i32 0, i32 1, i32 1)
  %1270 = getelementptr inbounds float, float* %1245, i64 56
  %1271 = bitcast float* %1270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1271, i32 0, i32 1, i32 1)
  %1272 = bitcast float* %1242 to <8 x float>*
  %1273 = load <8 x float>, <8 x float>* %1272, align 1, !tbaa !12
  %1274 = add nuw nsw i64 %1241, 8
  %1275 = getelementptr inbounds float, float* %5, i64 %1274
  %1276 = bitcast float* %1275 to <8 x float>*
  %1277 = load <8 x float>, <8 x float>* %1276, align 1, !tbaa !12
  %1278 = add nuw nsw i64 %1241, 16
  %1279 = getelementptr inbounds float, float* %5, i64 %1278
  %1280 = bitcast float* %1279 to <8 x float>*
  %1281 = load <8 x float>, <8 x float>* %1280, align 1, !tbaa !12
  %1282 = add nuw nsw i64 %1241, 24
  %1283 = getelementptr inbounds float, float* %5, i64 %1282
  %1284 = bitcast float* %1283 to <8 x float>*
  %1285 = load <8 x float>, <8 x float>* %1284, align 1, !tbaa !12
  %1286 = add nuw nsw i64 %1241, 32
  %1287 = getelementptr inbounds float, float* %5, i64 %1286
  %1288 = bitcast float* %1287 to <8 x float>*
  %1289 = load <8 x float>, <8 x float>* %1288, align 1, !tbaa !12
  %1290 = add nuw nsw i64 %1241, 40
  %1291 = getelementptr inbounds float, float* %5, i64 %1290
  %1292 = bitcast float* %1291 to <8 x float>*
  %1293 = load <8 x float>, <8 x float>* %1292, align 1, !tbaa !12
  %1294 = add nuw nsw i64 %1241, 48
  %1295 = getelementptr inbounds float, float* %5, i64 %1294
  %1296 = bitcast float* %1295 to <8 x float>*
  %1297 = load <8 x float>, <8 x float>* %1296, align 1, !tbaa !12
  %1298 = add nsw i64 %1241, %1129
  %1299 = getelementptr inbounds float, float* %3, i64 %1298
  %1300 = bitcast float* %1299 to <8 x float>*
  %1301 = load <8 x float>, <8 x float>* %1300, align 1, !tbaa !12
  %1302 = add nsw i64 %1298, 8
  %1303 = getelementptr inbounds float, float* %3, i64 %1302
  %1304 = bitcast float* %1303 to <8 x float>*
  %1305 = load <8 x float>, <8 x float>* %1304, align 1, !tbaa !12
  %1306 = add nsw i64 %1298, 16
  %1307 = getelementptr inbounds float, float* %3, i64 %1306
  %1308 = bitcast float* %1307 to <8 x float>*
  %1309 = load <8 x float>, <8 x float>* %1308, align 1, !tbaa !12
  %1310 = add nsw i64 %1298, 24
  %1311 = getelementptr inbounds float, float* %3, i64 %1310
  %1312 = bitcast float* %1311 to <8 x float>*
  %1313 = load <8 x float>, <8 x float>* %1312, align 1, !tbaa !12
  %1314 = add nsw i64 %1298, 32
  %1315 = getelementptr inbounds float, float* %3, i64 %1314
  %1316 = bitcast float* %1315 to <8 x float>*
  %1317 = load <8 x float>, <8 x float>* %1316, align 1, !tbaa !12
  %1318 = add nsw i64 %1298, 40
  %1319 = getelementptr inbounds float, float* %3, i64 %1318
  %1320 = bitcast float* %1319 to <8 x float>*
  %1321 = load <8 x float>, <8 x float>* %1320, align 1, !tbaa !12
  %1322 = add nsw i64 %1298, 48
  %1323 = getelementptr inbounds float, float* %3, i64 %1322
  %1324 = bitcast float* %1323 to <8 x float>*
  %1325 = load <8 x float>, <8 x float>* %1324, align 1, !tbaa !12
  %1326 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1301, <8 x float> %80, <8 x float> %1273) #10
  %1327 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1305, <8 x float> %80, <8 x float> %1277) #10
  %1328 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1309, <8 x float> %80, <8 x float> %1281) #10
  %1329 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1313, <8 x float> %80, <8 x float> %1285) #10
  %1330 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1317, <8 x float> %80, <8 x float> %1289) #10
  %1331 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1321, <8 x float> %80, <8 x float> %1293) #10
  %1332 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1325, <8 x float> %80, <8 x float> %1297) #10
  store <8 x float> %1326, <8 x float>* %1272, align 1, !tbaa !12
  store <8 x float> %1327, <8 x float>* %1276, align 1, !tbaa !12
  store <8 x float> %1328, <8 x float>* %1280, align 1, !tbaa !12
  store <8 x float> %1329, <8 x float>* %1284, align 1, !tbaa !12
  store <8 x float> %1330, <8 x float>* %1288, align 1, !tbaa !12
  store <8 x float> %1331, <8 x float>* %1292, align 1, !tbaa !12
  store <8 x float> %1332, <8 x float>* %1296, align 1, !tbaa !12
  %1333 = add nuw nsw i64 %1241, 56
  %1334 = icmp ult i64 %1333, %1130
  br i1 %1334, label %1240, label %1234

1335:                                             ; preds = %1341
  br i1 %1025, label %1336, label %1436

1336:                                             ; preds = %1335
  %1337 = trunc i64 %86 to i32
  %1338 = mul nsw i32 %1024, %1337
  %1339 = sext i32 %1338 to i64
  %1340 = zext i32 %1024 to i64
  br label %1441

1341:                                             ; preds = %1235, %1341
  %1342 = phi i64 [ 0, %1235 ], [ %1434, %1341 ]
  %1343 = getelementptr inbounds float, float* %5, i64 %1342
  %1344 = getelementptr inbounds float, float* %1343, i64 8
  %1345 = bitcast float* %1344 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1345, i32 0, i32 1, i32 1)
  %1346 = getelementptr inbounds float, float* %3, i64 %1342
  %1347 = getelementptr inbounds float, float* %1346, i64 8
  %1348 = bitcast float* %1347 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1348, i32 0, i32 1, i32 1)
  %1349 = getelementptr inbounds float, float* %1343, i64 16
  %1350 = bitcast float* %1349 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1350, i32 0, i32 1, i32 1)
  %1351 = getelementptr inbounds float, float* %1346, i64 16
  %1352 = bitcast float* %1351 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1352, i32 0, i32 1, i32 1)
  %1353 = getelementptr inbounds float, float* %1343, i64 24
  %1354 = bitcast float* %1353 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1354, i32 0, i32 1, i32 1)
  %1355 = getelementptr inbounds float, float* %1346, i64 24
  %1356 = bitcast float* %1355 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1356, i32 0, i32 1, i32 1)
  %1357 = getelementptr inbounds float, float* %1343, i64 32
  %1358 = bitcast float* %1357 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1358, i32 0, i32 1, i32 1)
  %1359 = getelementptr inbounds float, float* %1346, i64 32
  %1360 = bitcast float* %1359 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1360, i32 0, i32 1, i32 1)
  %1361 = getelementptr inbounds float, float* %1343, i64 40
  %1362 = bitcast float* %1361 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1362, i32 0, i32 1, i32 1)
  %1363 = getelementptr inbounds float, float* %1346, i64 40
  %1364 = bitcast float* %1363 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1364, i32 0, i32 1, i32 1)
  %1365 = getelementptr inbounds float, float* %1343, i64 48
  %1366 = bitcast float* %1365 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1366, i32 0, i32 1, i32 1)
  %1367 = getelementptr inbounds float, float* %1346, i64 48
  %1368 = bitcast float* %1367 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1368, i32 0, i32 1, i32 1)
  %1369 = getelementptr inbounds float, float* %1343, i64 56
  %1370 = bitcast float* %1369 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1370, i32 0, i32 1, i32 1)
  %1371 = getelementptr inbounds float, float* %1346, i64 56
  %1372 = bitcast float* %1371 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1372, i32 0, i32 1, i32 1)
  %1373 = bitcast float* %1343 to <8 x float>*
  %1374 = load <8 x float>, <8 x float>* %1373, align 1, !tbaa !12
  %1375 = add nuw nsw i64 %1342, 8
  %1376 = getelementptr inbounds float, float* %5, i64 %1375
  %1377 = bitcast float* %1376 to <8 x float>*
  %1378 = load <8 x float>, <8 x float>* %1377, align 1, !tbaa !12
  %1379 = add nuw nsw i64 %1342, 16
  %1380 = getelementptr inbounds float, float* %5, i64 %1379
  %1381 = bitcast float* %1380 to <8 x float>*
  %1382 = load <8 x float>, <8 x float>* %1381, align 1, !tbaa !12
  %1383 = add nuw nsw i64 %1342, 24
  %1384 = getelementptr inbounds float, float* %5, i64 %1383
  %1385 = bitcast float* %1384 to <8 x float>*
  %1386 = load <8 x float>, <8 x float>* %1385, align 1, !tbaa !12
  %1387 = add nuw nsw i64 %1342, 32
  %1388 = getelementptr inbounds float, float* %5, i64 %1387
  %1389 = bitcast float* %1388 to <8 x float>*
  %1390 = load <8 x float>, <8 x float>* %1389, align 1, !tbaa !12
  %1391 = add nuw nsw i64 %1342, 40
  %1392 = getelementptr inbounds float, float* %5, i64 %1391
  %1393 = bitcast float* %1392 to <8 x float>*
  %1394 = load <8 x float>, <8 x float>* %1393, align 1, !tbaa !12
  %1395 = add nuw nsw i64 %1342, 48
  %1396 = getelementptr inbounds float, float* %5, i64 %1395
  %1397 = bitcast float* %1396 to <8 x float>*
  %1398 = load <8 x float>, <8 x float>* %1397, align 1, !tbaa !12
  %1399 = add nsw i64 %1342, %1238
  %1400 = getelementptr inbounds float, float* %3, i64 %1399
  %1401 = bitcast float* %1400 to <8 x float>*
  %1402 = load <8 x float>, <8 x float>* %1401, align 1, !tbaa !12
  %1403 = add nsw i64 %1399, 8
  %1404 = getelementptr inbounds float, float* %3, i64 %1403
  %1405 = bitcast float* %1404 to <8 x float>*
  %1406 = load <8 x float>, <8 x float>* %1405, align 1, !tbaa !12
  %1407 = add nsw i64 %1399, 16
  %1408 = getelementptr inbounds float, float* %3, i64 %1407
  %1409 = bitcast float* %1408 to <8 x float>*
  %1410 = load <8 x float>, <8 x float>* %1409, align 1, !tbaa !12
  %1411 = add nsw i64 %1399, 24
  %1412 = getelementptr inbounds float, float* %3, i64 %1411
  %1413 = bitcast float* %1412 to <8 x float>*
  %1414 = load <8 x float>, <8 x float>* %1413, align 1, !tbaa !12
  %1415 = add nsw i64 %1399, 32
  %1416 = getelementptr inbounds float, float* %3, i64 %1415
  %1417 = bitcast float* %1416 to <8 x float>*
  %1418 = load <8 x float>, <8 x float>* %1417, align 1, !tbaa !12
  %1419 = add nsw i64 %1399, 40
  %1420 = getelementptr inbounds float, float* %3, i64 %1419
  %1421 = bitcast float* %1420 to <8 x float>*
  %1422 = load <8 x float>, <8 x float>* %1421, align 1, !tbaa !12
  %1423 = add nsw i64 %1399, 48
  %1424 = getelementptr inbounds float, float* %3, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1402, <8 x float> %85, <8 x float> %1374) #10
  %1428 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1406, <8 x float> %85, <8 x float> %1378) #10
  %1429 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1410, <8 x float> %85, <8 x float> %1382) #10
  %1430 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1414, <8 x float> %85, <8 x float> %1386) #10
  %1431 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1418, <8 x float> %85, <8 x float> %1390) #10
  %1432 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1422, <8 x float> %85, <8 x float> %1394) #10
  %1433 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1426, <8 x float> %85, <8 x float> %1398) #10
  store <8 x float> %1427, <8 x float>* %1373, align 1, !tbaa !12
  store <8 x float> %1428, <8 x float>* %1377, align 1, !tbaa !12
  store <8 x float> %1429, <8 x float>* %1381, align 1, !tbaa !12
  store <8 x float> %1430, <8 x float>* %1385, align 1, !tbaa !12
  store <8 x float> %1431, <8 x float>* %1389, align 1, !tbaa !12
  store <8 x float> %1432, <8 x float>* %1393, align 1, !tbaa !12
  store <8 x float> %1433, <8 x float>* %1397, align 1, !tbaa !12
  %1434 = add nuw nsw i64 %1342, 56
  %1435 = icmp ult i64 %1434, %1239
  br i1 %1435, label %1341, label %1335

1436:                                             ; preds = %1441, %20, %509, %1023, %1125, %1234, %1335
  %1437 = add nuw nsw i64 %21, 14
  %1438 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1439 = sext i32 %1438 to i64
  %1440 = icmp slt i64 %1437, %1439
  br i1 %1440, label %20, label %8

1441:                                             ; preds = %1336, %1441
  %1442 = phi i64 [ 0, %1336 ], [ %1534, %1441 ]
  %1443 = getelementptr inbounds float, float* %5, i64 %1442
  %1444 = getelementptr inbounds float, float* %1443, i64 8
  %1445 = bitcast float* %1444 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1445, i32 0, i32 1, i32 1)
  %1446 = getelementptr inbounds float, float* %3, i64 %1442
  %1447 = getelementptr inbounds float, float* %1446, i64 8
  %1448 = bitcast float* %1447 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1448, i32 0, i32 1, i32 1)
  %1449 = getelementptr inbounds float, float* %1443, i64 16
  %1450 = bitcast float* %1449 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1450, i32 0, i32 1, i32 1)
  %1451 = getelementptr inbounds float, float* %1446, i64 16
  %1452 = bitcast float* %1451 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1452, i32 0, i32 1, i32 1)
  %1453 = getelementptr inbounds float, float* %1443, i64 24
  %1454 = bitcast float* %1453 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1454, i32 0, i32 1, i32 1)
  %1455 = getelementptr inbounds float, float* %1446, i64 24
  %1456 = bitcast float* %1455 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1456, i32 0, i32 1, i32 1)
  %1457 = getelementptr inbounds float, float* %1443, i64 32
  %1458 = bitcast float* %1457 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1458, i32 0, i32 1, i32 1)
  %1459 = getelementptr inbounds float, float* %1446, i64 32
  %1460 = bitcast float* %1459 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1460, i32 0, i32 1, i32 1)
  %1461 = getelementptr inbounds float, float* %1443, i64 40
  %1462 = bitcast float* %1461 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1462, i32 0, i32 1, i32 1)
  %1463 = getelementptr inbounds float, float* %1446, i64 40
  %1464 = bitcast float* %1463 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1464, i32 0, i32 1, i32 1)
  %1465 = getelementptr inbounds float, float* %1443, i64 48
  %1466 = bitcast float* %1465 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1466, i32 0, i32 1, i32 1)
  %1467 = getelementptr inbounds float, float* %1446, i64 48
  %1468 = bitcast float* %1467 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1468, i32 0, i32 1, i32 1)
  %1469 = getelementptr inbounds float, float* %1443, i64 56
  %1470 = bitcast float* %1469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1470, i32 0, i32 1, i32 1)
  %1471 = getelementptr inbounds float, float* %1446, i64 56
  %1472 = bitcast float* %1471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1472, i32 0, i32 1, i32 1)
  %1473 = bitcast float* %1443 to <8 x float>*
  %1474 = load <8 x float>, <8 x float>* %1473, align 1, !tbaa !12
  %1475 = add nuw nsw i64 %1442, 8
  %1476 = getelementptr inbounds float, float* %5, i64 %1475
  %1477 = bitcast float* %1476 to <8 x float>*
  %1478 = load <8 x float>, <8 x float>* %1477, align 1, !tbaa !12
  %1479 = add nuw nsw i64 %1442, 16
  %1480 = getelementptr inbounds float, float* %5, i64 %1479
  %1481 = bitcast float* %1480 to <8 x float>*
  %1482 = load <8 x float>, <8 x float>* %1481, align 1, !tbaa !12
  %1483 = add nuw nsw i64 %1442, 24
  %1484 = getelementptr inbounds float, float* %5, i64 %1483
  %1485 = bitcast float* %1484 to <8 x float>*
  %1486 = load <8 x float>, <8 x float>* %1485, align 1, !tbaa !12
  %1487 = add nuw nsw i64 %1442, 32
  %1488 = getelementptr inbounds float, float* %5, i64 %1487
  %1489 = bitcast float* %1488 to <8 x float>*
  %1490 = load <8 x float>, <8 x float>* %1489, align 1, !tbaa !12
  %1491 = add nuw nsw i64 %1442, 40
  %1492 = getelementptr inbounds float, float* %5, i64 %1491
  %1493 = bitcast float* %1492 to <8 x float>*
  %1494 = load <8 x float>, <8 x float>* %1493, align 1, !tbaa !12
  %1495 = add nuw nsw i64 %1442, 48
  %1496 = getelementptr inbounds float, float* %5, i64 %1495
  %1497 = bitcast float* %1496 to <8 x float>*
  %1498 = load <8 x float>, <8 x float>* %1497, align 1, !tbaa !12
  %1499 = add nsw i64 %1442, %1339
  %1500 = getelementptr inbounds float, float* %3, i64 %1499
  %1501 = bitcast float* %1500 to <8 x float>*
  %1502 = load <8 x float>, <8 x float>* %1501, align 1, !tbaa !12
  %1503 = add nsw i64 %1499, 8
  %1504 = getelementptr inbounds float, float* %3, i64 %1503
  %1505 = bitcast float* %1504 to <8 x float>*
  %1506 = load <8 x float>, <8 x float>* %1505, align 1, !tbaa !12
  %1507 = add nsw i64 %1499, 16
  %1508 = getelementptr inbounds float, float* %3, i64 %1507
  %1509 = bitcast float* %1508 to <8 x float>*
  %1510 = load <8 x float>, <8 x float>* %1509, align 1, !tbaa !12
  %1511 = add nsw i64 %1499, 24
  %1512 = getelementptr inbounds float, float* %3, i64 %1511
  %1513 = bitcast float* %1512 to <8 x float>*
  %1514 = load <8 x float>, <8 x float>* %1513, align 1, !tbaa !12
  %1515 = add nsw i64 %1499, 32
  %1516 = getelementptr inbounds float, float* %3, i64 %1515
  %1517 = bitcast float* %1516 to <8 x float>*
  %1518 = load <8 x float>, <8 x float>* %1517, align 1, !tbaa !12
  %1519 = add nsw i64 %1499, 40
  %1520 = getelementptr inbounds float, float* %3, i64 %1519
  %1521 = bitcast float* %1520 to <8 x float>*
  %1522 = load <8 x float>, <8 x float>* %1521, align 1, !tbaa !12
  %1523 = add nsw i64 %1499, 48
  %1524 = getelementptr inbounds float, float* %3, i64 %1523
  %1525 = bitcast float* %1524 to <8 x float>*
  %1526 = load <8 x float>, <8 x float>* %1525, align 1, !tbaa !12
  %1527 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1502, <8 x float> %90, <8 x float> %1474) #10
  %1528 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1506, <8 x float> %90, <8 x float> %1478) #10
  %1529 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1510, <8 x float> %90, <8 x float> %1482) #10
  %1530 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1514, <8 x float> %90, <8 x float> %1486) #10
  %1531 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1518, <8 x float> %90, <8 x float> %1490) #10
  %1532 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1522, <8 x float> %90, <8 x float> %1494) #10
  %1533 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1526, <8 x float> %90, <8 x float> %1498) #10
  store <8 x float> %1527, <8 x float>* %1473, align 1, !tbaa !12
  store <8 x float> %1528, <8 x float>* %1477, align 1, !tbaa !12
  store <8 x float> %1529, <8 x float>* %1481, align 1, !tbaa !12
  store <8 x float> %1530, <8 x float>* %1485, align 1, !tbaa !12
  store <8 x float> %1531, <8 x float>* %1489, align 1, !tbaa !12
  store <8 x float> %1532, <8 x float>* %1493, align 1, !tbaa !12
  store <8 x float> %1533, <8 x float>* %1497, align 1, !tbaa !12
  %1534 = add nuw nsw i64 %1442, 56
  %1535 = icmp ult i64 %1534, %1340
  br i1 %1535, label %1441, label %1436
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 210
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui7_uk14.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
