; ModuleID = 'codes/matvec_ui15_uk10.cpp'
source_filename = "codes/matvec_ui15_uk10.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui15_uk10.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 120
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 80
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1973, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1973
  %21 = phi i64 [ %1974, %1973 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %1973

73:                                               ; preds = %20
  %74 = zext i32 %71 to i64
  %75 = trunc i64 %21 to i32
  %76 = mul nsw i32 %71, %75
  br label %83

77:                                               ; preds = %83
  br i1 %72, label %78, label %503

78:                                               ; preds = %77
  %79 = trunc i64 %26 to i32
  %80 = mul nsw i32 %71, %79
  %81 = sext i32 %80 to i64
  %82 = zext i32 %71 to i64
  br label %304

83:                                               ; preds = %73, %83
  %84 = phi i64 [ 0, %73 ], [ %296, %83 ]
  %85 = getelementptr inbounds float, float* %5, i64 %84
  %86 = getelementptr inbounds float, float* %85, i64 8
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %3, i64 %84
  %89 = getelementptr inbounds float, float* %88, i64 8
  %90 = bitcast float* %89 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %90, i32 0, i32 1, i32 1)
  %91 = getelementptr inbounds float, float* %85, i64 16
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %88, i64 16
  %94 = bitcast float* %93 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %94, i32 0, i32 1, i32 1)
  %95 = getelementptr inbounds float, float* %85, i64 24
  %96 = bitcast float* %95 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %96, i32 0, i32 1, i32 1)
  %97 = getelementptr inbounds float, float* %88, i64 24
  %98 = bitcast float* %97 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %98, i32 0, i32 1, i32 1)
  %99 = getelementptr inbounds float, float* %85, i64 32
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %88, i64 32
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %85, i64 40
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %88, i64 40
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %85, i64 48
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %88, i64 48
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %85, i64 56
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %88, i64 56
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %85, i64 64
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %88, i64 64
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %85, i64 72
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %88, i64 72
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %85, i64 80
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %88, i64 80
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %85, i64 88
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %88, i64 88
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %85, i64 96
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %88, i64 96
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %85, i64 104
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = getelementptr inbounds float, float* %88, i64 104
  %138 = bitcast float* %137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %138, i32 0, i32 1, i32 1)
  %139 = getelementptr inbounds float, float* %85, i64 112
  %140 = bitcast float* %139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %140, i32 0, i32 1, i32 1)
  %141 = getelementptr inbounds float, float* %88, i64 112
  %142 = bitcast float* %141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %142, i32 0, i32 1, i32 1)
  %143 = getelementptr inbounds float, float* %85, i64 120
  %144 = bitcast float* %143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %144, i32 0, i32 1, i32 1)
  %145 = getelementptr inbounds float, float* %88, i64 120
  %146 = bitcast float* %145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %146, i32 0, i32 1, i32 1)
  %147 = bitcast float* %85 to <8 x float>*
  %148 = load <8 x float>, <8 x float>* %147, align 1, !tbaa !12
  %149 = add nuw nsw i64 %84, 8
  %150 = getelementptr inbounds float, float* %5, i64 %149
  %151 = bitcast float* %150 to <8 x float>*
  %152 = load <8 x float>, <8 x float>* %151, align 1, !tbaa !12
  %153 = add nuw nsw i64 %84, 16
  %154 = getelementptr inbounds float, float* %5, i64 %153
  %155 = bitcast float* %154 to <8 x float>*
  %156 = load <8 x float>, <8 x float>* %155, align 1, !tbaa !12
  %157 = add nuw nsw i64 %84, 24
  %158 = getelementptr inbounds float, float* %5, i64 %157
  %159 = bitcast float* %158 to <8 x float>*
  %160 = load <8 x float>, <8 x float>* %159, align 1, !tbaa !12
  %161 = add nuw nsw i64 %84, 32
  %162 = getelementptr inbounds float, float* %5, i64 %161
  %163 = bitcast float* %162 to <8 x float>*
  %164 = load <8 x float>, <8 x float>* %163, align 1, !tbaa !12
  %165 = add nuw nsw i64 %84, 40
  %166 = getelementptr inbounds float, float* %5, i64 %165
  %167 = bitcast float* %166 to <8 x float>*
  %168 = load <8 x float>, <8 x float>* %167, align 1, !tbaa !12
  %169 = add nuw nsw i64 %84, 48
  %170 = getelementptr inbounds float, float* %5, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nuw nsw i64 %84, 56
  %174 = getelementptr inbounds float, float* %5, i64 %173
  %175 = bitcast float* %174 to <8 x float>*
  %176 = load <8 x float>, <8 x float>* %175, align 1, !tbaa !12
  %177 = add nuw nsw i64 %84, 64
  %178 = getelementptr inbounds float, float* %5, i64 %177
  %179 = bitcast float* %178 to <8 x float>*
  %180 = load <8 x float>, <8 x float>* %179, align 1, !tbaa !12
  %181 = add nuw nsw i64 %84, 72
  %182 = getelementptr inbounds float, float* %5, i64 %181
  %183 = bitcast float* %182 to <8 x float>*
  %184 = load <8 x float>, <8 x float>* %183, align 1, !tbaa !12
  %185 = add nuw nsw i64 %84, 80
  %186 = getelementptr inbounds float, float* %5, i64 %185
  %187 = bitcast float* %186 to <8 x float>*
  %188 = load <8 x float>, <8 x float>* %187, align 1, !tbaa !12
  %189 = add nuw nsw i64 %84, 88
  %190 = getelementptr inbounds float, float* %5, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nuw nsw i64 %84, 96
  %194 = getelementptr inbounds float, float* %5, i64 %193
  %195 = bitcast float* %194 to <8 x float>*
  %196 = load <8 x float>, <8 x float>* %195, align 1, !tbaa !12
  %197 = add nuw nsw i64 %84, 104
  %198 = getelementptr inbounds float, float* %5, i64 %197
  %199 = bitcast float* %198 to <8 x float>*
  %200 = load <8 x float>, <8 x float>* %199, align 1, !tbaa !12
  %201 = add nuw nsw i64 %84, 112
  %202 = getelementptr inbounds float, float* %5, i64 %201
  %203 = bitcast float* %202 to <8 x float>*
  %204 = load <8 x float>, <8 x float>* %203, align 1, !tbaa !12
  %205 = trunc i64 %84 to i32
  %206 = add nsw i32 %76, %205
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds float, float* %3, i64 %207
  %209 = bitcast float* %208 to <8 x float>*
  %210 = load <8 x float>, <8 x float>* %209, align 1, !tbaa !12
  %211 = add nsw i32 %206, 8
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds float, float* %3, i64 %212
  %214 = bitcast float* %213 to <8 x float>*
  %215 = load <8 x float>, <8 x float>* %214, align 1, !tbaa !12
  %216 = add nsw i32 %206, 16
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds float, float* %3, i64 %217
  %219 = bitcast float* %218 to <8 x float>*
  %220 = load <8 x float>, <8 x float>* %219, align 1, !tbaa !12
  %221 = add nsw i32 %206, 24
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds float, float* %3, i64 %222
  %224 = bitcast float* %223 to <8 x float>*
  %225 = load <8 x float>, <8 x float>* %224, align 1, !tbaa !12
  %226 = add nsw i32 %206, 32
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds float, float* %3, i64 %227
  %229 = bitcast float* %228 to <8 x float>*
  %230 = load <8 x float>, <8 x float>* %229, align 1, !tbaa !12
  %231 = add nsw i32 %206, 40
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds float, float* %3, i64 %232
  %234 = bitcast float* %233 to <8 x float>*
  %235 = load <8 x float>, <8 x float>* %234, align 1, !tbaa !12
  %236 = add nsw i32 %206, 48
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds float, float* %3, i64 %237
  %239 = bitcast float* %238 to <8 x float>*
  %240 = load <8 x float>, <8 x float>* %239, align 1, !tbaa !12
  %241 = add nsw i32 %206, 56
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds float, float* %3, i64 %242
  %244 = bitcast float* %243 to <8 x float>*
  %245 = load <8 x float>, <8 x float>* %244, align 1, !tbaa !12
  %246 = add nsw i32 %206, 64
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds float, float* %3, i64 %247
  %249 = bitcast float* %248 to <8 x float>*
  %250 = load <8 x float>, <8 x float>* %249, align 1, !tbaa !12
  %251 = add nsw i32 %206, 72
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds float, float* %3, i64 %252
  %254 = bitcast float* %253 to <8 x float>*
  %255 = load <8 x float>, <8 x float>* %254, align 1, !tbaa !12
  %256 = add nsw i32 %206, 80
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds float, float* %3, i64 %257
  %259 = bitcast float* %258 to <8 x float>*
  %260 = load <8 x float>, <8 x float>* %259, align 1, !tbaa !12
  %261 = add nsw i32 %206, 88
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds float, float* %3, i64 %262
  %264 = bitcast float* %263 to <8 x float>*
  %265 = load <8 x float>, <8 x float>* %264, align 1, !tbaa !12
  %266 = add nsw i32 %206, 96
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds float, float* %3, i64 %267
  %269 = bitcast float* %268 to <8 x float>*
  %270 = load <8 x float>, <8 x float>* %269, align 1, !tbaa !12
  %271 = add nsw i32 %206, 104
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds float, float* %3, i64 %272
  %274 = bitcast float* %273 to <8 x float>*
  %275 = load <8 x float>, <8 x float>* %274, align 1, !tbaa !12
  %276 = add nsw i32 %206, 112
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds float, float* %3, i64 %277
  %279 = bitcast float* %278 to <8 x float>*
  %280 = load <8 x float>, <8 x float>* %279, align 1, !tbaa !12
  %281 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %210, <8 x float> %25, <8 x float> %148) #10
  %282 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %215, <8 x float> %25, <8 x float> %152) #10
  %283 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %220, <8 x float> %25, <8 x float> %156) #10
  %284 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %225, <8 x float> %25, <8 x float> %160) #10
  %285 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %230, <8 x float> %25, <8 x float> %164) #10
  %286 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %235, <8 x float> %25, <8 x float> %168) #10
  %287 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %240, <8 x float> %25, <8 x float> %172) #10
  %288 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %245, <8 x float> %25, <8 x float> %176) #10
  %289 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %250, <8 x float> %25, <8 x float> %180) #10
  %290 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %255, <8 x float> %25, <8 x float> %184) #10
  %291 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %260, <8 x float> %25, <8 x float> %188) #10
  %292 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %265, <8 x float> %25, <8 x float> %192) #10
  %293 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %270, <8 x float> %25, <8 x float> %196) #10
  %294 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %275, <8 x float> %25, <8 x float> %200) #10
  %295 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %280, <8 x float> %25, <8 x float> %204) #10
  store <8 x float> %281, <8 x float>* %147, align 1, !tbaa !12
  store <8 x float> %282, <8 x float>* %151, align 1, !tbaa !12
  store <8 x float> %283, <8 x float>* %155, align 1, !tbaa !12
  store <8 x float> %284, <8 x float>* %159, align 1, !tbaa !12
  store <8 x float> %285, <8 x float>* %163, align 1, !tbaa !12
  store <8 x float> %286, <8 x float>* %167, align 1, !tbaa !12
  store <8 x float> %287, <8 x float>* %171, align 1, !tbaa !12
  store <8 x float> %288, <8 x float>* %175, align 1, !tbaa !12
  store <8 x float> %289, <8 x float>* %179, align 1, !tbaa !12
  store <8 x float> %290, <8 x float>* %183, align 1, !tbaa !12
  store <8 x float> %291, <8 x float>* %187, align 1, !tbaa !12
  store <8 x float> %292, <8 x float>* %191, align 1, !tbaa !12
  store <8 x float> %293, <8 x float>* %195, align 1, !tbaa !12
  store <8 x float> %294, <8 x float>* %199, align 1, !tbaa !12
  store <8 x float> %295, <8 x float>* %203, align 1, !tbaa !12
  %296 = add nuw nsw i64 %84, 120
  %297 = icmp ult i64 %296, %74
  br i1 %297, label %83, label %77

298:                                              ; preds = %304
  br i1 %72, label %299, label %503

299:                                              ; preds = %298
  %300 = trunc i64 %31 to i32
  %301 = mul nsw i32 %71, %300
  %302 = sext i32 %301 to i64
  %303 = zext i32 %71 to i64
  br label %510

304:                                              ; preds = %78, %304
  %305 = phi i64 [ 0, %78 ], [ %501, %304 ]
  %306 = getelementptr inbounds float, float* %5, i64 %305
  %307 = getelementptr inbounds float, float* %306, i64 8
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %3, i64 %305
  %310 = getelementptr inbounds float, float* %309, i64 8
  %311 = bitcast float* %310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %311, i32 0, i32 1, i32 1)
  %312 = getelementptr inbounds float, float* %306, i64 16
  %313 = bitcast float* %312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %313, i32 0, i32 1, i32 1)
  %314 = getelementptr inbounds float, float* %309, i64 16
  %315 = bitcast float* %314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %315, i32 0, i32 1, i32 1)
  %316 = getelementptr inbounds float, float* %306, i64 24
  %317 = bitcast float* %316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %317, i32 0, i32 1, i32 1)
  %318 = getelementptr inbounds float, float* %309, i64 24
  %319 = bitcast float* %318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %319, i32 0, i32 1, i32 1)
  %320 = getelementptr inbounds float, float* %306, i64 32
  %321 = bitcast float* %320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %321, i32 0, i32 1, i32 1)
  %322 = getelementptr inbounds float, float* %309, i64 32
  %323 = bitcast float* %322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %323, i32 0, i32 1, i32 1)
  %324 = getelementptr inbounds float, float* %306, i64 40
  %325 = bitcast float* %324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %325, i32 0, i32 1, i32 1)
  %326 = getelementptr inbounds float, float* %309, i64 40
  %327 = bitcast float* %326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %327, i32 0, i32 1, i32 1)
  %328 = getelementptr inbounds float, float* %306, i64 48
  %329 = bitcast float* %328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %329, i32 0, i32 1, i32 1)
  %330 = getelementptr inbounds float, float* %309, i64 48
  %331 = bitcast float* %330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %331, i32 0, i32 1, i32 1)
  %332 = getelementptr inbounds float, float* %306, i64 56
  %333 = bitcast float* %332 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %333, i32 0, i32 1, i32 1)
  %334 = getelementptr inbounds float, float* %309, i64 56
  %335 = bitcast float* %334 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %335, i32 0, i32 1, i32 1)
  %336 = getelementptr inbounds float, float* %306, i64 64
  %337 = bitcast float* %336 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %337, i32 0, i32 1, i32 1)
  %338 = getelementptr inbounds float, float* %309, i64 64
  %339 = bitcast float* %338 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %339, i32 0, i32 1, i32 1)
  %340 = getelementptr inbounds float, float* %306, i64 72
  %341 = bitcast float* %340 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %341, i32 0, i32 1, i32 1)
  %342 = getelementptr inbounds float, float* %309, i64 72
  %343 = bitcast float* %342 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %343, i32 0, i32 1, i32 1)
  %344 = getelementptr inbounds float, float* %306, i64 80
  %345 = bitcast float* %344 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %345, i32 0, i32 1, i32 1)
  %346 = getelementptr inbounds float, float* %309, i64 80
  %347 = bitcast float* %346 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %347, i32 0, i32 1, i32 1)
  %348 = getelementptr inbounds float, float* %306, i64 88
  %349 = bitcast float* %348 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %349, i32 0, i32 1, i32 1)
  %350 = getelementptr inbounds float, float* %309, i64 88
  %351 = bitcast float* %350 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %351, i32 0, i32 1, i32 1)
  %352 = getelementptr inbounds float, float* %306, i64 96
  %353 = bitcast float* %352 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %353, i32 0, i32 1, i32 1)
  %354 = getelementptr inbounds float, float* %309, i64 96
  %355 = bitcast float* %354 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %355, i32 0, i32 1, i32 1)
  %356 = getelementptr inbounds float, float* %306, i64 104
  %357 = bitcast float* %356 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %357, i32 0, i32 1, i32 1)
  %358 = getelementptr inbounds float, float* %309, i64 104
  %359 = bitcast float* %358 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %359, i32 0, i32 1, i32 1)
  %360 = getelementptr inbounds float, float* %306, i64 112
  %361 = bitcast float* %360 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %361, i32 0, i32 1, i32 1)
  %362 = getelementptr inbounds float, float* %309, i64 112
  %363 = bitcast float* %362 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %363, i32 0, i32 1, i32 1)
  %364 = getelementptr inbounds float, float* %306, i64 120
  %365 = bitcast float* %364 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %365, i32 0, i32 1, i32 1)
  %366 = getelementptr inbounds float, float* %309, i64 120
  %367 = bitcast float* %366 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %367, i32 0, i32 1, i32 1)
  %368 = bitcast float* %306 to <8 x float>*
  %369 = load <8 x float>, <8 x float>* %368, align 1, !tbaa !12
  %370 = add nuw nsw i64 %305, 8
  %371 = getelementptr inbounds float, float* %5, i64 %370
  %372 = bitcast float* %371 to <8 x float>*
  %373 = load <8 x float>, <8 x float>* %372, align 1, !tbaa !12
  %374 = add nuw nsw i64 %305, 16
  %375 = getelementptr inbounds float, float* %5, i64 %374
  %376 = bitcast float* %375 to <8 x float>*
  %377 = load <8 x float>, <8 x float>* %376, align 1, !tbaa !12
  %378 = add nuw nsw i64 %305, 24
  %379 = getelementptr inbounds float, float* %5, i64 %378
  %380 = bitcast float* %379 to <8 x float>*
  %381 = load <8 x float>, <8 x float>* %380, align 1, !tbaa !12
  %382 = add nuw nsw i64 %305, 32
  %383 = getelementptr inbounds float, float* %5, i64 %382
  %384 = bitcast float* %383 to <8 x float>*
  %385 = load <8 x float>, <8 x float>* %384, align 1, !tbaa !12
  %386 = add nuw nsw i64 %305, 40
  %387 = getelementptr inbounds float, float* %5, i64 %386
  %388 = bitcast float* %387 to <8 x float>*
  %389 = load <8 x float>, <8 x float>* %388, align 1, !tbaa !12
  %390 = add nuw nsw i64 %305, 48
  %391 = getelementptr inbounds float, float* %5, i64 %390
  %392 = bitcast float* %391 to <8 x float>*
  %393 = load <8 x float>, <8 x float>* %392, align 1, !tbaa !12
  %394 = add nuw nsw i64 %305, 56
  %395 = getelementptr inbounds float, float* %5, i64 %394
  %396 = bitcast float* %395 to <8 x float>*
  %397 = load <8 x float>, <8 x float>* %396, align 1, !tbaa !12
  %398 = add nuw nsw i64 %305, 64
  %399 = getelementptr inbounds float, float* %5, i64 %398
  %400 = bitcast float* %399 to <8 x float>*
  %401 = load <8 x float>, <8 x float>* %400, align 1, !tbaa !12
  %402 = add nuw nsw i64 %305, 72
  %403 = getelementptr inbounds float, float* %5, i64 %402
  %404 = bitcast float* %403 to <8 x float>*
  %405 = load <8 x float>, <8 x float>* %404, align 1, !tbaa !12
  %406 = add nuw nsw i64 %305, 80
  %407 = getelementptr inbounds float, float* %5, i64 %406
  %408 = bitcast float* %407 to <8 x float>*
  %409 = load <8 x float>, <8 x float>* %408, align 1, !tbaa !12
  %410 = add nuw nsw i64 %305, 88
  %411 = getelementptr inbounds float, float* %5, i64 %410
  %412 = bitcast float* %411 to <8 x float>*
  %413 = load <8 x float>, <8 x float>* %412, align 1, !tbaa !12
  %414 = add nuw nsw i64 %305, 96
  %415 = getelementptr inbounds float, float* %5, i64 %414
  %416 = bitcast float* %415 to <8 x float>*
  %417 = load <8 x float>, <8 x float>* %416, align 1, !tbaa !12
  %418 = add nuw nsw i64 %305, 104
  %419 = getelementptr inbounds float, float* %5, i64 %418
  %420 = bitcast float* %419 to <8 x float>*
  %421 = load <8 x float>, <8 x float>* %420, align 1, !tbaa !12
  %422 = add nuw nsw i64 %305, 112
  %423 = getelementptr inbounds float, float* %5, i64 %422
  %424 = bitcast float* %423 to <8 x float>*
  %425 = load <8 x float>, <8 x float>* %424, align 1, !tbaa !12
  %426 = add nsw i64 %305, %81
  %427 = getelementptr inbounds float, float* %3, i64 %426
  %428 = bitcast float* %427 to <8 x float>*
  %429 = load <8 x float>, <8 x float>* %428, align 1, !tbaa !12
  %430 = add nsw i64 %426, 8
  %431 = getelementptr inbounds float, float* %3, i64 %430
  %432 = bitcast float* %431 to <8 x float>*
  %433 = load <8 x float>, <8 x float>* %432, align 1, !tbaa !12
  %434 = add nsw i64 %426, 16
  %435 = getelementptr inbounds float, float* %3, i64 %434
  %436 = bitcast float* %435 to <8 x float>*
  %437 = load <8 x float>, <8 x float>* %436, align 1, !tbaa !12
  %438 = add nsw i64 %426, 24
  %439 = getelementptr inbounds float, float* %3, i64 %438
  %440 = bitcast float* %439 to <8 x float>*
  %441 = load <8 x float>, <8 x float>* %440, align 1, !tbaa !12
  %442 = add nsw i64 %426, 32
  %443 = getelementptr inbounds float, float* %3, i64 %442
  %444 = bitcast float* %443 to <8 x float>*
  %445 = load <8 x float>, <8 x float>* %444, align 1, !tbaa !12
  %446 = add nsw i64 %426, 40
  %447 = getelementptr inbounds float, float* %3, i64 %446
  %448 = bitcast float* %447 to <8 x float>*
  %449 = load <8 x float>, <8 x float>* %448, align 1, !tbaa !12
  %450 = add nsw i64 %426, 48
  %451 = getelementptr inbounds float, float* %3, i64 %450
  %452 = bitcast float* %451 to <8 x float>*
  %453 = load <8 x float>, <8 x float>* %452, align 1, !tbaa !12
  %454 = add nsw i64 %426, 56
  %455 = getelementptr inbounds float, float* %3, i64 %454
  %456 = bitcast float* %455 to <8 x float>*
  %457 = load <8 x float>, <8 x float>* %456, align 1, !tbaa !12
  %458 = add nsw i64 %426, 64
  %459 = getelementptr inbounds float, float* %3, i64 %458
  %460 = bitcast float* %459 to <8 x float>*
  %461 = load <8 x float>, <8 x float>* %460, align 1, !tbaa !12
  %462 = add nsw i64 %426, 72
  %463 = getelementptr inbounds float, float* %3, i64 %462
  %464 = bitcast float* %463 to <8 x float>*
  %465 = load <8 x float>, <8 x float>* %464, align 1, !tbaa !12
  %466 = add nsw i64 %426, 80
  %467 = getelementptr inbounds float, float* %3, i64 %466
  %468 = bitcast float* %467 to <8 x float>*
  %469 = load <8 x float>, <8 x float>* %468, align 1, !tbaa !12
  %470 = add nsw i64 %426, 88
  %471 = getelementptr inbounds float, float* %3, i64 %470
  %472 = bitcast float* %471 to <8 x float>*
  %473 = load <8 x float>, <8 x float>* %472, align 1, !tbaa !12
  %474 = add nsw i64 %426, 96
  %475 = getelementptr inbounds float, float* %3, i64 %474
  %476 = bitcast float* %475 to <8 x float>*
  %477 = load <8 x float>, <8 x float>* %476, align 1, !tbaa !12
  %478 = add nsw i64 %426, 104
  %479 = getelementptr inbounds float, float* %3, i64 %478
  %480 = bitcast float* %479 to <8 x float>*
  %481 = load <8 x float>, <8 x float>* %480, align 1, !tbaa !12
  %482 = add nsw i64 %426, 112
  %483 = getelementptr inbounds float, float* %3, i64 %482
  %484 = bitcast float* %483 to <8 x float>*
  %485 = load <8 x float>, <8 x float>* %484, align 1, !tbaa !12
  %486 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %429, <8 x float> %30, <8 x float> %369) #10
  %487 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %433, <8 x float> %30, <8 x float> %373) #10
  %488 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %437, <8 x float> %30, <8 x float> %377) #10
  %489 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %441, <8 x float> %30, <8 x float> %381) #10
  %490 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %445, <8 x float> %30, <8 x float> %385) #10
  %491 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %449, <8 x float> %30, <8 x float> %389) #10
  %492 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %453, <8 x float> %30, <8 x float> %393) #10
  %493 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %457, <8 x float> %30, <8 x float> %397) #10
  %494 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %461, <8 x float> %30, <8 x float> %401) #10
  %495 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %465, <8 x float> %30, <8 x float> %405) #10
  %496 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %469, <8 x float> %30, <8 x float> %409) #10
  %497 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %473, <8 x float> %30, <8 x float> %413) #10
  %498 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %477, <8 x float> %30, <8 x float> %417) #10
  %499 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %481, <8 x float> %30, <8 x float> %421) #10
  %500 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %485, <8 x float> %30, <8 x float> %425) #10
  store <8 x float> %486, <8 x float>* %368, align 1, !tbaa !12
  store <8 x float> %487, <8 x float>* %372, align 1, !tbaa !12
  store <8 x float> %488, <8 x float>* %376, align 1, !tbaa !12
  store <8 x float> %489, <8 x float>* %380, align 1, !tbaa !12
  store <8 x float> %490, <8 x float>* %384, align 1, !tbaa !12
  store <8 x float> %491, <8 x float>* %388, align 1, !tbaa !12
  store <8 x float> %492, <8 x float>* %392, align 1, !tbaa !12
  store <8 x float> %493, <8 x float>* %396, align 1, !tbaa !12
  store <8 x float> %494, <8 x float>* %400, align 1, !tbaa !12
  store <8 x float> %495, <8 x float>* %404, align 1, !tbaa !12
  store <8 x float> %496, <8 x float>* %408, align 1, !tbaa !12
  store <8 x float> %497, <8 x float>* %412, align 1, !tbaa !12
  store <8 x float> %498, <8 x float>* %416, align 1, !tbaa !12
  store <8 x float> %499, <8 x float>* %420, align 1, !tbaa !12
  store <8 x float> %500, <8 x float>* %424, align 1, !tbaa !12
  %501 = add nuw nsw i64 %305, 120
  %502 = icmp ult i64 %501, %82
  br i1 %502, label %304, label %298

503:                                              ; preds = %510, %77, %298
  %504 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %505 = icmp sgt i32 %504, 0
  br i1 %505, label %506, label %1973

506:                                              ; preds = %503
  %507 = zext i32 %504 to i64
  %508 = trunc i64 %36 to i32
  %509 = mul nsw i32 %504, %508
  br label %715

510:                                              ; preds = %299, %510
  %511 = phi i64 [ 0, %299 ], [ %707, %510 ]
  %512 = getelementptr inbounds float, float* %5, i64 %511
  %513 = getelementptr inbounds float, float* %512, i64 8
  %514 = bitcast float* %513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %514, i32 0, i32 1, i32 1)
  %515 = getelementptr inbounds float, float* %3, i64 %511
  %516 = getelementptr inbounds float, float* %515, i64 8
  %517 = bitcast float* %516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %517, i32 0, i32 1, i32 1)
  %518 = getelementptr inbounds float, float* %512, i64 16
  %519 = bitcast float* %518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %519, i32 0, i32 1, i32 1)
  %520 = getelementptr inbounds float, float* %515, i64 16
  %521 = bitcast float* %520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %521, i32 0, i32 1, i32 1)
  %522 = getelementptr inbounds float, float* %512, i64 24
  %523 = bitcast float* %522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %523, i32 0, i32 1, i32 1)
  %524 = getelementptr inbounds float, float* %515, i64 24
  %525 = bitcast float* %524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %525, i32 0, i32 1, i32 1)
  %526 = getelementptr inbounds float, float* %512, i64 32
  %527 = bitcast float* %526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %527, i32 0, i32 1, i32 1)
  %528 = getelementptr inbounds float, float* %515, i64 32
  %529 = bitcast float* %528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %529, i32 0, i32 1, i32 1)
  %530 = getelementptr inbounds float, float* %512, i64 40
  %531 = bitcast float* %530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %531, i32 0, i32 1, i32 1)
  %532 = getelementptr inbounds float, float* %515, i64 40
  %533 = bitcast float* %532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %533, i32 0, i32 1, i32 1)
  %534 = getelementptr inbounds float, float* %512, i64 48
  %535 = bitcast float* %534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %535, i32 0, i32 1, i32 1)
  %536 = getelementptr inbounds float, float* %515, i64 48
  %537 = bitcast float* %536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %537, i32 0, i32 1, i32 1)
  %538 = getelementptr inbounds float, float* %512, i64 56
  %539 = bitcast float* %538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %539, i32 0, i32 1, i32 1)
  %540 = getelementptr inbounds float, float* %515, i64 56
  %541 = bitcast float* %540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %541, i32 0, i32 1, i32 1)
  %542 = getelementptr inbounds float, float* %512, i64 64
  %543 = bitcast float* %542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %543, i32 0, i32 1, i32 1)
  %544 = getelementptr inbounds float, float* %515, i64 64
  %545 = bitcast float* %544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %545, i32 0, i32 1, i32 1)
  %546 = getelementptr inbounds float, float* %512, i64 72
  %547 = bitcast float* %546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %547, i32 0, i32 1, i32 1)
  %548 = getelementptr inbounds float, float* %515, i64 72
  %549 = bitcast float* %548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %549, i32 0, i32 1, i32 1)
  %550 = getelementptr inbounds float, float* %512, i64 80
  %551 = bitcast float* %550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %551, i32 0, i32 1, i32 1)
  %552 = getelementptr inbounds float, float* %515, i64 80
  %553 = bitcast float* %552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %553, i32 0, i32 1, i32 1)
  %554 = getelementptr inbounds float, float* %512, i64 88
  %555 = bitcast float* %554 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %555, i32 0, i32 1, i32 1)
  %556 = getelementptr inbounds float, float* %515, i64 88
  %557 = bitcast float* %556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %557, i32 0, i32 1, i32 1)
  %558 = getelementptr inbounds float, float* %512, i64 96
  %559 = bitcast float* %558 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %559, i32 0, i32 1, i32 1)
  %560 = getelementptr inbounds float, float* %515, i64 96
  %561 = bitcast float* %560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %561, i32 0, i32 1, i32 1)
  %562 = getelementptr inbounds float, float* %512, i64 104
  %563 = bitcast float* %562 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %563, i32 0, i32 1, i32 1)
  %564 = getelementptr inbounds float, float* %515, i64 104
  %565 = bitcast float* %564 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %565, i32 0, i32 1, i32 1)
  %566 = getelementptr inbounds float, float* %512, i64 112
  %567 = bitcast float* %566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %567, i32 0, i32 1, i32 1)
  %568 = getelementptr inbounds float, float* %515, i64 112
  %569 = bitcast float* %568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %569, i32 0, i32 1, i32 1)
  %570 = getelementptr inbounds float, float* %512, i64 120
  %571 = bitcast float* %570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %571, i32 0, i32 1, i32 1)
  %572 = getelementptr inbounds float, float* %515, i64 120
  %573 = bitcast float* %572 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %573, i32 0, i32 1, i32 1)
  %574 = bitcast float* %512 to <8 x float>*
  %575 = load <8 x float>, <8 x float>* %574, align 1, !tbaa !12
  %576 = add nuw nsw i64 %511, 8
  %577 = getelementptr inbounds float, float* %5, i64 %576
  %578 = bitcast float* %577 to <8 x float>*
  %579 = load <8 x float>, <8 x float>* %578, align 1, !tbaa !12
  %580 = add nuw nsw i64 %511, 16
  %581 = getelementptr inbounds float, float* %5, i64 %580
  %582 = bitcast float* %581 to <8 x float>*
  %583 = load <8 x float>, <8 x float>* %582, align 1, !tbaa !12
  %584 = add nuw nsw i64 %511, 24
  %585 = getelementptr inbounds float, float* %5, i64 %584
  %586 = bitcast float* %585 to <8 x float>*
  %587 = load <8 x float>, <8 x float>* %586, align 1, !tbaa !12
  %588 = add nuw nsw i64 %511, 32
  %589 = getelementptr inbounds float, float* %5, i64 %588
  %590 = bitcast float* %589 to <8 x float>*
  %591 = load <8 x float>, <8 x float>* %590, align 1, !tbaa !12
  %592 = add nuw nsw i64 %511, 40
  %593 = getelementptr inbounds float, float* %5, i64 %592
  %594 = bitcast float* %593 to <8 x float>*
  %595 = load <8 x float>, <8 x float>* %594, align 1, !tbaa !12
  %596 = add nuw nsw i64 %511, 48
  %597 = getelementptr inbounds float, float* %5, i64 %596
  %598 = bitcast float* %597 to <8 x float>*
  %599 = load <8 x float>, <8 x float>* %598, align 1, !tbaa !12
  %600 = add nuw nsw i64 %511, 56
  %601 = getelementptr inbounds float, float* %5, i64 %600
  %602 = bitcast float* %601 to <8 x float>*
  %603 = load <8 x float>, <8 x float>* %602, align 1, !tbaa !12
  %604 = add nuw nsw i64 %511, 64
  %605 = getelementptr inbounds float, float* %5, i64 %604
  %606 = bitcast float* %605 to <8 x float>*
  %607 = load <8 x float>, <8 x float>* %606, align 1, !tbaa !12
  %608 = add nuw nsw i64 %511, 72
  %609 = getelementptr inbounds float, float* %5, i64 %608
  %610 = bitcast float* %609 to <8 x float>*
  %611 = load <8 x float>, <8 x float>* %610, align 1, !tbaa !12
  %612 = add nuw nsw i64 %511, 80
  %613 = getelementptr inbounds float, float* %5, i64 %612
  %614 = bitcast float* %613 to <8 x float>*
  %615 = load <8 x float>, <8 x float>* %614, align 1, !tbaa !12
  %616 = add nuw nsw i64 %511, 88
  %617 = getelementptr inbounds float, float* %5, i64 %616
  %618 = bitcast float* %617 to <8 x float>*
  %619 = load <8 x float>, <8 x float>* %618, align 1, !tbaa !12
  %620 = add nuw nsw i64 %511, 96
  %621 = getelementptr inbounds float, float* %5, i64 %620
  %622 = bitcast float* %621 to <8 x float>*
  %623 = load <8 x float>, <8 x float>* %622, align 1, !tbaa !12
  %624 = add nuw nsw i64 %511, 104
  %625 = getelementptr inbounds float, float* %5, i64 %624
  %626 = bitcast float* %625 to <8 x float>*
  %627 = load <8 x float>, <8 x float>* %626, align 1, !tbaa !12
  %628 = add nuw nsw i64 %511, 112
  %629 = getelementptr inbounds float, float* %5, i64 %628
  %630 = bitcast float* %629 to <8 x float>*
  %631 = load <8 x float>, <8 x float>* %630, align 1, !tbaa !12
  %632 = add nsw i64 %511, %302
  %633 = getelementptr inbounds float, float* %3, i64 %632
  %634 = bitcast float* %633 to <8 x float>*
  %635 = load <8 x float>, <8 x float>* %634, align 1, !tbaa !12
  %636 = add nsw i64 %632, 8
  %637 = getelementptr inbounds float, float* %3, i64 %636
  %638 = bitcast float* %637 to <8 x float>*
  %639 = load <8 x float>, <8 x float>* %638, align 1, !tbaa !12
  %640 = add nsw i64 %632, 16
  %641 = getelementptr inbounds float, float* %3, i64 %640
  %642 = bitcast float* %641 to <8 x float>*
  %643 = load <8 x float>, <8 x float>* %642, align 1, !tbaa !12
  %644 = add nsw i64 %632, 24
  %645 = getelementptr inbounds float, float* %3, i64 %644
  %646 = bitcast float* %645 to <8 x float>*
  %647 = load <8 x float>, <8 x float>* %646, align 1, !tbaa !12
  %648 = add nsw i64 %632, 32
  %649 = getelementptr inbounds float, float* %3, i64 %648
  %650 = bitcast float* %649 to <8 x float>*
  %651 = load <8 x float>, <8 x float>* %650, align 1, !tbaa !12
  %652 = add nsw i64 %632, 40
  %653 = getelementptr inbounds float, float* %3, i64 %652
  %654 = bitcast float* %653 to <8 x float>*
  %655 = load <8 x float>, <8 x float>* %654, align 1, !tbaa !12
  %656 = add nsw i64 %632, 48
  %657 = getelementptr inbounds float, float* %3, i64 %656
  %658 = bitcast float* %657 to <8 x float>*
  %659 = load <8 x float>, <8 x float>* %658, align 1, !tbaa !12
  %660 = add nsw i64 %632, 56
  %661 = getelementptr inbounds float, float* %3, i64 %660
  %662 = bitcast float* %661 to <8 x float>*
  %663 = load <8 x float>, <8 x float>* %662, align 1, !tbaa !12
  %664 = add nsw i64 %632, 64
  %665 = getelementptr inbounds float, float* %3, i64 %664
  %666 = bitcast float* %665 to <8 x float>*
  %667 = load <8 x float>, <8 x float>* %666, align 1, !tbaa !12
  %668 = add nsw i64 %632, 72
  %669 = getelementptr inbounds float, float* %3, i64 %668
  %670 = bitcast float* %669 to <8 x float>*
  %671 = load <8 x float>, <8 x float>* %670, align 1, !tbaa !12
  %672 = add nsw i64 %632, 80
  %673 = getelementptr inbounds float, float* %3, i64 %672
  %674 = bitcast float* %673 to <8 x float>*
  %675 = load <8 x float>, <8 x float>* %674, align 1, !tbaa !12
  %676 = add nsw i64 %632, 88
  %677 = getelementptr inbounds float, float* %3, i64 %676
  %678 = bitcast float* %677 to <8 x float>*
  %679 = load <8 x float>, <8 x float>* %678, align 1, !tbaa !12
  %680 = add nsw i64 %632, 96
  %681 = getelementptr inbounds float, float* %3, i64 %680
  %682 = bitcast float* %681 to <8 x float>*
  %683 = load <8 x float>, <8 x float>* %682, align 1, !tbaa !12
  %684 = add nsw i64 %632, 104
  %685 = getelementptr inbounds float, float* %3, i64 %684
  %686 = bitcast float* %685 to <8 x float>*
  %687 = load <8 x float>, <8 x float>* %686, align 1, !tbaa !12
  %688 = add nsw i64 %632, 112
  %689 = getelementptr inbounds float, float* %3, i64 %688
  %690 = bitcast float* %689 to <8 x float>*
  %691 = load <8 x float>, <8 x float>* %690, align 1, !tbaa !12
  %692 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %635, <8 x float> %35, <8 x float> %575) #10
  %693 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %639, <8 x float> %35, <8 x float> %579) #10
  %694 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %643, <8 x float> %35, <8 x float> %583) #10
  %695 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %647, <8 x float> %35, <8 x float> %587) #10
  %696 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %651, <8 x float> %35, <8 x float> %591) #10
  %697 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %655, <8 x float> %35, <8 x float> %595) #10
  %698 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %659, <8 x float> %35, <8 x float> %599) #10
  %699 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %663, <8 x float> %35, <8 x float> %603) #10
  %700 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %667, <8 x float> %35, <8 x float> %607) #10
  %701 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %671, <8 x float> %35, <8 x float> %611) #10
  %702 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %675, <8 x float> %35, <8 x float> %615) #10
  %703 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %679, <8 x float> %35, <8 x float> %619) #10
  %704 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %683, <8 x float> %35, <8 x float> %623) #10
  %705 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %687, <8 x float> %35, <8 x float> %627) #10
  %706 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %691, <8 x float> %35, <8 x float> %631) #10
  store <8 x float> %692, <8 x float>* %574, align 1, !tbaa !12
  store <8 x float> %693, <8 x float>* %578, align 1, !tbaa !12
  store <8 x float> %694, <8 x float>* %582, align 1, !tbaa !12
  store <8 x float> %695, <8 x float>* %586, align 1, !tbaa !12
  store <8 x float> %696, <8 x float>* %590, align 1, !tbaa !12
  store <8 x float> %697, <8 x float>* %594, align 1, !tbaa !12
  store <8 x float> %698, <8 x float>* %598, align 1, !tbaa !12
  store <8 x float> %699, <8 x float>* %602, align 1, !tbaa !12
  store <8 x float> %700, <8 x float>* %606, align 1, !tbaa !12
  store <8 x float> %701, <8 x float>* %610, align 1, !tbaa !12
  store <8 x float> %702, <8 x float>* %614, align 1, !tbaa !12
  store <8 x float> %703, <8 x float>* %618, align 1, !tbaa !12
  store <8 x float> %704, <8 x float>* %622, align 1, !tbaa !12
  store <8 x float> %705, <8 x float>* %626, align 1, !tbaa !12
  store <8 x float> %706, <8 x float>* %630, align 1, !tbaa !12
  %707 = add nuw nsw i64 %511, 120
  %708 = icmp ult i64 %707, %303
  br i1 %708, label %510, label %503

709:                                              ; preds = %715
  br i1 %505, label %710, label %1135

710:                                              ; preds = %709
  %711 = trunc i64 %41 to i32
  %712 = mul nsw i32 %504, %711
  %713 = sext i32 %712 to i64
  %714 = zext i32 %504 to i64
  br label %936

715:                                              ; preds = %506, %715
  %716 = phi i64 [ 0, %506 ], [ %928, %715 ]
  %717 = getelementptr inbounds float, float* %5, i64 %716
  %718 = getelementptr inbounds float, float* %717, i64 8
  %719 = bitcast float* %718 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %719, i32 0, i32 1, i32 1)
  %720 = getelementptr inbounds float, float* %3, i64 %716
  %721 = getelementptr inbounds float, float* %720, i64 8
  %722 = bitcast float* %721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %722, i32 0, i32 1, i32 1)
  %723 = getelementptr inbounds float, float* %717, i64 16
  %724 = bitcast float* %723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %724, i32 0, i32 1, i32 1)
  %725 = getelementptr inbounds float, float* %720, i64 16
  %726 = bitcast float* %725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %726, i32 0, i32 1, i32 1)
  %727 = getelementptr inbounds float, float* %717, i64 24
  %728 = bitcast float* %727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %728, i32 0, i32 1, i32 1)
  %729 = getelementptr inbounds float, float* %720, i64 24
  %730 = bitcast float* %729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %730, i32 0, i32 1, i32 1)
  %731 = getelementptr inbounds float, float* %717, i64 32
  %732 = bitcast float* %731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %732, i32 0, i32 1, i32 1)
  %733 = getelementptr inbounds float, float* %720, i64 32
  %734 = bitcast float* %733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %734, i32 0, i32 1, i32 1)
  %735 = getelementptr inbounds float, float* %717, i64 40
  %736 = bitcast float* %735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %736, i32 0, i32 1, i32 1)
  %737 = getelementptr inbounds float, float* %720, i64 40
  %738 = bitcast float* %737 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %738, i32 0, i32 1, i32 1)
  %739 = getelementptr inbounds float, float* %717, i64 48
  %740 = bitcast float* %739 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %740, i32 0, i32 1, i32 1)
  %741 = getelementptr inbounds float, float* %720, i64 48
  %742 = bitcast float* %741 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %742, i32 0, i32 1, i32 1)
  %743 = getelementptr inbounds float, float* %717, i64 56
  %744 = bitcast float* %743 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %744, i32 0, i32 1, i32 1)
  %745 = getelementptr inbounds float, float* %720, i64 56
  %746 = bitcast float* %745 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %746, i32 0, i32 1, i32 1)
  %747 = getelementptr inbounds float, float* %717, i64 64
  %748 = bitcast float* %747 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %748, i32 0, i32 1, i32 1)
  %749 = getelementptr inbounds float, float* %720, i64 64
  %750 = bitcast float* %749 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %750, i32 0, i32 1, i32 1)
  %751 = getelementptr inbounds float, float* %717, i64 72
  %752 = bitcast float* %751 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %752, i32 0, i32 1, i32 1)
  %753 = getelementptr inbounds float, float* %720, i64 72
  %754 = bitcast float* %753 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %754, i32 0, i32 1, i32 1)
  %755 = getelementptr inbounds float, float* %717, i64 80
  %756 = bitcast float* %755 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %756, i32 0, i32 1, i32 1)
  %757 = getelementptr inbounds float, float* %720, i64 80
  %758 = bitcast float* %757 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %758, i32 0, i32 1, i32 1)
  %759 = getelementptr inbounds float, float* %717, i64 88
  %760 = bitcast float* %759 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %760, i32 0, i32 1, i32 1)
  %761 = getelementptr inbounds float, float* %720, i64 88
  %762 = bitcast float* %761 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %762, i32 0, i32 1, i32 1)
  %763 = getelementptr inbounds float, float* %717, i64 96
  %764 = bitcast float* %763 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %764, i32 0, i32 1, i32 1)
  %765 = getelementptr inbounds float, float* %720, i64 96
  %766 = bitcast float* %765 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %766, i32 0, i32 1, i32 1)
  %767 = getelementptr inbounds float, float* %717, i64 104
  %768 = bitcast float* %767 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %768, i32 0, i32 1, i32 1)
  %769 = getelementptr inbounds float, float* %720, i64 104
  %770 = bitcast float* %769 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %770, i32 0, i32 1, i32 1)
  %771 = getelementptr inbounds float, float* %717, i64 112
  %772 = bitcast float* %771 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %772, i32 0, i32 1, i32 1)
  %773 = getelementptr inbounds float, float* %720, i64 112
  %774 = bitcast float* %773 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %774, i32 0, i32 1, i32 1)
  %775 = getelementptr inbounds float, float* %717, i64 120
  %776 = bitcast float* %775 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %776, i32 0, i32 1, i32 1)
  %777 = getelementptr inbounds float, float* %720, i64 120
  %778 = bitcast float* %777 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %778, i32 0, i32 1, i32 1)
  %779 = bitcast float* %717 to <8 x float>*
  %780 = load <8 x float>, <8 x float>* %779, align 1, !tbaa !12
  %781 = add nuw nsw i64 %716, 8
  %782 = getelementptr inbounds float, float* %5, i64 %781
  %783 = bitcast float* %782 to <8 x float>*
  %784 = load <8 x float>, <8 x float>* %783, align 1, !tbaa !12
  %785 = add nuw nsw i64 %716, 16
  %786 = getelementptr inbounds float, float* %5, i64 %785
  %787 = bitcast float* %786 to <8 x float>*
  %788 = load <8 x float>, <8 x float>* %787, align 1, !tbaa !12
  %789 = add nuw nsw i64 %716, 24
  %790 = getelementptr inbounds float, float* %5, i64 %789
  %791 = bitcast float* %790 to <8 x float>*
  %792 = load <8 x float>, <8 x float>* %791, align 1, !tbaa !12
  %793 = add nuw nsw i64 %716, 32
  %794 = getelementptr inbounds float, float* %5, i64 %793
  %795 = bitcast float* %794 to <8 x float>*
  %796 = load <8 x float>, <8 x float>* %795, align 1, !tbaa !12
  %797 = add nuw nsw i64 %716, 40
  %798 = getelementptr inbounds float, float* %5, i64 %797
  %799 = bitcast float* %798 to <8 x float>*
  %800 = load <8 x float>, <8 x float>* %799, align 1, !tbaa !12
  %801 = add nuw nsw i64 %716, 48
  %802 = getelementptr inbounds float, float* %5, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nuw nsw i64 %716, 56
  %806 = getelementptr inbounds float, float* %5, i64 %805
  %807 = bitcast float* %806 to <8 x float>*
  %808 = load <8 x float>, <8 x float>* %807, align 1, !tbaa !12
  %809 = add nuw nsw i64 %716, 64
  %810 = getelementptr inbounds float, float* %5, i64 %809
  %811 = bitcast float* %810 to <8 x float>*
  %812 = load <8 x float>, <8 x float>* %811, align 1, !tbaa !12
  %813 = add nuw nsw i64 %716, 72
  %814 = getelementptr inbounds float, float* %5, i64 %813
  %815 = bitcast float* %814 to <8 x float>*
  %816 = load <8 x float>, <8 x float>* %815, align 1, !tbaa !12
  %817 = add nuw nsw i64 %716, 80
  %818 = getelementptr inbounds float, float* %5, i64 %817
  %819 = bitcast float* %818 to <8 x float>*
  %820 = load <8 x float>, <8 x float>* %819, align 1, !tbaa !12
  %821 = add nuw nsw i64 %716, 88
  %822 = getelementptr inbounds float, float* %5, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %824 = load <8 x float>, <8 x float>* %823, align 1, !tbaa !12
  %825 = add nuw nsw i64 %716, 96
  %826 = getelementptr inbounds float, float* %5, i64 %825
  %827 = bitcast float* %826 to <8 x float>*
  %828 = load <8 x float>, <8 x float>* %827, align 1, !tbaa !12
  %829 = add nuw nsw i64 %716, 104
  %830 = getelementptr inbounds float, float* %5, i64 %829
  %831 = bitcast float* %830 to <8 x float>*
  %832 = load <8 x float>, <8 x float>* %831, align 1, !tbaa !12
  %833 = add nuw nsw i64 %716, 112
  %834 = getelementptr inbounds float, float* %5, i64 %833
  %835 = bitcast float* %834 to <8 x float>*
  %836 = load <8 x float>, <8 x float>* %835, align 1, !tbaa !12
  %837 = trunc i64 %716 to i32
  %838 = add nsw i32 %509, %837
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds float, float* %3, i64 %839
  %841 = bitcast float* %840 to <8 x float>*
  %842 = load <8 x float>, <8 x float>* %841, align 1, !tbaa !12
  %843 = add nsw i32 %838, 8
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds float, float* %3, i64 %844
  %846 = bitcast float* %845 to <8 x float>*
  %847 = load <8 x float>, <8 x float>* %846, align 1, !tbaa !12
  %848 = add nsw i32 %838, 16
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds float, float* %3, i64 %849
  %851 = bitcast float* %850 to <8 x float>*
  %852 = load <8 x float>, <8 x float>* %851, align 1, !tbaa !12
  %853 = add nsw i32 %838, 24
  %854 = sext i32 %853 to i64
  %855 = getelementptr inbounds float, float* %3, i64 %854
  %856 = bitcast float* %855 to <8 x float>*
  %857 = load <8 x float>, <8 x float>* %856, align 1, !tbaa !12
  %858 = add nsw i32 %838, 32
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds float, float* %3, i64 %859
  %861 = bitcast float* %860 to <8 x float>*
  %862 = load <8 x float>, <8 x float>* %861, align 1, !tbaa !12
  %863 = add nsw i32 %838, 40
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds float, float* %3, i64 %864
  %866 = bitcast float* %865 to <8 x float>*
  %867 = load <8 x float>, <8 x float>* %866, align 1, !tbaa !12
  %868 = add nsw i32 %838, 48
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds float, float* %3, i64 %869
  %871 = bitcast float* %870 to <8 x float>*
  %872 = load <8 x float>, <8 x float>* %871, align 1, !tbaa !12
  %873 = add nsw i32 %838, 56
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds float, float* %3, i64 %874
  %876 = bitcast float* %875 to <8 x float>*
  %877 = load <8 x float>, <8 x float>* %876, align 1, !tbaa !12
  %878 = add nsw i32 %838, 64
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds float, float* %3, i64 %879
  %881 = bitcast float* %880 to <8 x float>*
  %882 = load <8 x float>, <8 x float>* %881, align 1, !tbaa !12
  %883 = add nsw i32 %838, 72
  %884 = sext i32 %883 to i64
  %885 = getelementptr inbounds float, float* %3, i64 %884
  %886 = bitcast float* %885 to <8 x float>*
  %887 = load <8 x float>, <8 x float>* %886, align 1, !tbaa !12
  %888 = add nsw i32 %838, 80
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds float, float* %3, i64 %889
  %891 = bitcast float* %890 to <8 x float>*
  %892 = load <8 x float>, <8 x float>* %891, align 1, !tbaa !12
  %893 = add nsw i32 %838, 88
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds float, float* %3, i64 %894
  %896 = bitcast float* %895 to <8 x float>*
  %897 = load <8 x float>, <8 x float>* %896, align 1, !tbaa !12
  %898 = add nsw i32 %838, 96
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds float, float* %3, i64 %899
  %901 = bitcast float* %900 to <8 x float>*
  %902 = load <8 x float>, <8 x float>* %901, align 1, !tbaa !12
  %903 = add nsw i32 %838, 104
  %904 = sext i32 %903 to i64
  %905 = getelementptr inbounds float, float* %3, i64 %904
  %906 = bitcast float* %905 to <8 x float>*
  %907 = load <8 x float>, <8 x float>* %906, align 1, !tbaa !12
  %908 = add nsw i32 %838, 112
  %909 = sext i32 %908 to i64
  %910 = getelementptr inbounds float, float* %3, i64 %909
  %911 = bitcast float* %910 to <8 x float>*
  %912 = load <8 x float>, <8 x float>* %911, align 1, !tbaa !12
  %913 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %842, <8 x float> %40, <8 x float> %780) #10
  %914 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %847, <8 x float> %40, <8 x float> %784) #10
  %915 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %852, <8 x float> %40, <8 x float> %788) #10
  %916 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %857, <8 x float> %40, <8 x float> %792) #10
  %917 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %862, <8 x float> %40, <8 x float> %796) #10
  %918 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %867, <8 x float> %40, <8 x float> %800) #10
  %919 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %872, <8 x float> %40, <8 x float> %804) #10
  %920 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %877, <8 x float> %40, <8 x float> %808) #10
  %921 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %882, <8 x float> %40, <8 x float> %812) #10
  %922 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %887, <8 x float> %40, <8 x float> %816) #10
  %923 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %892, <8 x float> %40, <8 x float> %820) #10
  %924 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %897, <8 x float> %40, <8 x float> %824) #10
  %925 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %902, <8 x float> %40, <8 x float> %828) #10
  %926 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %907, <8 x float> %40, <8 x float> %832) #10
  %927 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %912, <8 x float> %40, <8 x float> %836) #10
  store <8 x float> %913, <8 x float>* %779, align 1, !tbaa !12
  store <8 x float> %914, <8 x float>* %783, align 1, !tbaa !12
  store <8 x float> %915, <8 x float>* %787, align 1, !tbaa !12
  store <8 x float> %916, <8 x float>* %791, align 1, !tbaa !12
  store <8 x float> %917, <8 x float>* %795, align 1, !tbaa !12
  store <8 x float> %918, <8 x float>* %799, align 1, !tbaa !12
  store <8 x float> %919, <8 x float>* %803, align 1, !tbaa !12
  store <8 x float> %920, <8 x float>* %807, align 1, !tbaa !12
  store <8 x float> %921, <8 x float>* %811, align 1, !tbaa !12
  store <8 x float> %922, <8 x float>* %815, align 1, !tbaa !12
  store <8 x float> %923, <8 x float>* %819, align 1, !tbaa !12
  store <8 x float> %924, <8 x float>* %823, align 1, !tbaa !12
  store <8 x float> %925, <8 x float>* %827, align 1, !tbaa !12
  store <8 x float> %926, <8 x float>* %831, align 1, !tbaa !12
  store <8 x float> %927, <8 x float>* %835, align 1, !tbaa !12
  %928 = add nuw nsw i64 %716, 120
  %929 = icmp ult i64 %928, %507
  br i1 %929, label %715, label %709

930:                                              ; preds = %936
  br i1 %505, label %931, label %1135

931:                                              ; preds = %930
  %932 = trunc i64 %46 to i32
  %933 = mul nsw i32 %504, %932
  %934 = sext i32 %933 to i64
  %935 = zext i32 %504 to i64
  br label %1142

936:                                              ; preds = %710, %936
  %937 = phi i64 [ 0, %710 ], [ %1133, %936 ]
  %938 = getelementptr inbounds float, float* %5, i64 %937
  %939 = getelementptr inbounds float, float* %938, i64 8
  %940 = bitcast float* %939 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %940, i32 0, i32 1, i32 1)
  %941 = getelementptr inbounds float, float* %3, i64 %937
  %942 = getelementptr inbounds float, float* %941, i64 8
  %943 = bitcast float* %942 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %943, i32 0, i32 1, i32 1)
  %944 = getelementptr inbounds float, float* %938, i64 16
  %945 = bitcast float* %944 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %945, i32 0, i32 1, i32 1)
  %946 = getelementptr inbounds float, float* %941, i64 16
  %947 = bitcast float* %946 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %947, i32 0, i32 1, i32 1)
  %948 = getelementptr inbounds float, float* %938, i64 24
  %949 = bitcast float* %948 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %949, i32 0, i32 1, i32 1)
  %950 = getelementptr inbounds float, float* %941, i64 24
  %951 = bitcast float* %950 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %951, i32 0, i32 1, i32 1)
  %952 = getelementptr inbounds float, float* %938, i64 32
  %953 = bitcast float* %952 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %953, i32 0, i32 1, i32 1)
  %954 = getelementptr inbounds float, float* %941, i64 32
  %955 = bitcast float* %954 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %955, i32 0, i32 1, i32 1)
  %956 = getelementptr inbounds float, float* %938, i64 40
  %957 = bitcast float* %956 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %957, i32 0, i32 1, i32 1)
  %958 = getelementptr inbounds float, float* %941, i64 40
  %959 = bitcast float* %958 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %959, i32 0, i32 1, i32 1)
  %960 = getelementptr inbounds float, float* %938, i64 48
  %961 = bitcast float* %960 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %961, i32 0, i32 1, i32 1)
  %962 = getelementptr inbounds float, float* %941, i64 48
  %963 = bitcast float* %962 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %963, i32 0, i32 1, i32 1)
  %964 = getelementptr inbounds float, float* %938, i64 56
  %965 = bitcast float* %964 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %965, i32 0, i32 1, i32 1)
  %966 = getelementptr inbounds float, float* %941, i64 56
  %967 = bitcast float* %966 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %967, i32 0, i32 1, i32 1)
  %968 = getelementptr inbounds float, float* %938, i64 64
  %969 = bitcast float* %968 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %969, i32 0, i32 1, i32 1)
  %970 = getelementptr inbounds float, float* %941, i64 64
  %971 = bitcast float* %970 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %971, i32 0, i32 1, i32 1)
  %972 = getelementptr inbounds float, float* %938, i64 72
  %973 = bitcast float* %972 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %973, i32 0, i32 1, i32 1)
  %974 = getelementptr inbounds float, float* %941, i64 72
  %975 = bitcast float* %974 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %975, i32 0, i32 1, i32 1)
  %976 = getelementptr inbounds float, float* %938, i64 80
  %977 = bitcast float* %976 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %977, i32 0, i32 1, i32 1)
  %978 = getelementptr inbounds float, float* %941, i64 80
  %979 = bitcast float* %978 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %979, i32 0, i32 1, i32 1)
  %980 = getelementptr inbounds float, float* %938, i64 88
  %981 = bitcast float* %980 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %981, i32 0, i32 1, i32 1)
  %982 = getelementptr inbounds float, float* %941, i64 88
  %983 = bitcast float* %982 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %983, i32 0, i32 1, i32 1)
  %984 = getelementptr inbounds float, float* %938, i64 96
  %985 = bitcast float* %984 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %985, i32 0, i32 1, i32 1)
  %986 = getelementptr inbounds float, float* %941, i64 96
  %987 = bitcast float* %986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %987, i32 0, i32 1, i32 1)
  %988 = getelementptr inbounds float, float* %938, i64 104
  %989 = bitcast float* %988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %989, i32 0, i32 1, i32 1)
  %990 = getelementptr inbounds float, float* %941, i64 104
  %991 = bitcast float* %990 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %991, i32 0, i32 1, i32 1)
  %992 = getelementptr inbounds float, float* %938, i64 112
  %993 = bitcast float* %992 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %993, i32 0, i32 1, i32 1)
  %994 = getelementptr inbounds float, float* %941, i64 112
  %995 = bitcast float* %994 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %995, i32 0, i32 1, i32 1)
  %996 = getelementptr inbounds float, float* %938, i64 120
  %997 = bitcast float* %996 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %997, i32 0, i32 1, i32 1)
  %998 = getelementptr inbounds float, float* %941, i64 120
  %999 = bitcast float* %998 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %999, i32 0, i32 1, i32 1)
  %1000 = bitcast float* %938 to <8 x float>*
  %1001 = load <8 x float>, <8 x float>* %1000, align 1, !tbaa !12
  %1002 = add nuw nsw i64 %937, 8
  %1003 = getelementptr inbounds float, float* %5, i64 %1002
  %1004 = bitcast float* %1003 to <8 x float>*
  %1005 = load <8 x float>, <8 x float>* %1004, align 1, !tbaa !12
  %1006 = add nuw nsw i64 %937, 16
  %1007 = getelementptr inbounds float, float* %5, i64 %1006
  %1008 = bitcast float* %1007 to <8 x float>*
  %1009 = load <8 x float>, <8 x float>* %1008, align 1, !tbaa !12
  %1010 = add nuw nsw i64 %937, 24
  %1011 = getelementptr inbounds float, float* %5, i64 %1010
  %1012 = bitcast float* %1011 to <8 x float>*
  %1013 = load <8 x float>, <8 x float>* %1012, align 1, !tbaa !12
  %1014 = add nuw nsw i64 %937, 32
  %1015 = getelementptr inbounds float, float* %5, i64 %1014
  %1016 = bitcast float* %1015 to <8 x float>*
  %1017 = load <8 x float>, <8 x float>* %1016, align 1, !tbaa !12
  %1018 = add nuw nsw i64 %937, 40
  %1019 = getelementptr inbounds float, float* %5, i64 %1018
  %1020 = bitcast float* %1019 to <8 x float>*
  %1021 = load <8 x float>, <8 x float>* %1020, align 1, !tbaa !12
  %1022 = add nuw nsw i64 %937, 48
  %1023 = getelementptr inbounds float, float* %5, i64 %1022
  %1024 = bitcast float* %1023 to <8 x float>*
  %1025 = load <8 x float>, <8 x float>* %1024, align 1, !tbaa !12
  %1026 = add nuw nsw i64 %937, 56
  %1027 = getelementptr inbounds float, float* %5, i64 %1026
  %1028 = bitcast float* %1027 to <8 x float>*
  %1029 = load <8 x float>, <8 x float>* %1028, align 1, !tbaa !12
  %1030 = add nuw nsw i64 %937, 64
  %1031 = getelementptr inbounds float, float* %5, i64 %1030
  %1032 = bitcast float* %1031 to <8 x float>*
  %1033 = load <8 x float>, <8 x float>* %1032, align 1, !tbaa !12
  %1034 = add nuw nsw i64 %937, 72
  %1035 = getelementptr inbounds float, float* %5, i64 %1034
  %1036 = bitcast float* %1035 to <8 x float>*
  %1037 = load <8 x float>, <8 x float>* %1036, align 1, !tbaa !12
  %1038 = add nuw nsw i64 %937, 80
  %1039 = getelementptr inbounds float, float* %5, i64 %1038
  %1040 = bitcast float* %1039 to <8 x float>*
  %1041 = load <8 x float>, <8 x float>* %1040, align 1, !tbaa !12
  %1042 = add nuw nsw i64 %937, 88
  %1043 = getelementptr inbounds float, float* %5, i64 %1042
  %1044 = bitcast float* %1043 to <8 x float>*
  %1045 = load <8 x float>, <8 x float>* %1044, align 1, !tbaa !12
  %1046 = add nuw nsw i64 %937, 96
  %1047 = getelementptr inbounds float, float* %5, i64 %1046
  %1048 = bitcast float* %1047 to <8 x float>*
  %1049 = load <8 x float>, <8 x float>* %1048, align 1, !tbaa !12
  %1050 = add nuw nsw i64 %937, 104
  %1051 = getelementptr inbounds float, float* %5, i64 %1050
  %1052 = bitcast float* %1051 to <8 x float>*
  %1053 = load <8 x float>, <8 x float>* %1052, align 1, !tbaa !12
  %1054 = add nuw nsw i64 %937, 112
  %1055 = getelementptr inbounds float, float* %5, i64 %1054
  %1056 = bitcast float* %1055 to <8 x float>*
  %1057 = load <8 x float>, <8 x float>* %1056, align 1, !tbaa !12
  %1058 = add nsw i64 %937, %713
  %1059 = getelementptr inbounds float, float* %3, i64 %1058
  %1060 = bitcast float* %1059 to <8 x float>*
  %1061 = load <8 x float>, <8 x float>* %1060, align 1, !tbaa !12
  %1062 = add nsw i64 %1058, 8
  %1063 = getelementptr inbounds float, float* %3, i64 %1062
  %1064 = bitcast float* %1063 to <8 x float>*
  %1065 = load <8 x float>, <8 x float>* %1064, align 1, !tbaa !12
  %1066 = add nsw i64 %1058, 16
  %1067 = getelementptr inbounds float, float* %3, i64 %1066
  %1068 = bitcast float* %1067 to <8 x float>*
  %1069 = load <8 x float>, <8 x float>* %1068, align 1, !tbaa !12
  %1070 = add nsw i64 %1058, 24
  %1071 = getelementptr inbounds float, float* %3, i64 %1070
  %1072 = bitcast float* %1071 to <8 x float>*
  %1073 = load <8 x float>, <8 x float>* %1072, align 1, !tbaa !12
  %1074 = add nsw i64 %1058, 32
  %1075 = getelementptr inbounds float, float* %3, i64 %1074
  %1076 = bitcast float* %1075 to <8 x float>*
  %1077 = load <8 x float>, <8 x float>* %1076, align 1, !tbaa !12
  %1078 = add nsw i64 %1058, 40
  %1079 = getelementptr inbounds float, float* %3, i64 %1078
  %1080 = bitcast float* %1079 to <8 x float>*
  %1081 = load <8 x float>, <8 x float>* %1080, align 1, !tbaa !12
  %1082 = add nsw i64 %1058, 48
  %1083 = getelementptr inbounds float, float* %3, i64 %1082
  %1084 = bitcast float* %1083 to <8 x float>*
  %1085 = load <8 x float>, <8 x float>* %1084, align 1, !tbaa !12
  %1086 = add nsw i64 %1058, 56
  %1087 = getelementptr inbounds float, float* %3, i64 %1086
  %1088 = bitcast float* %1087 to <8 x float>*
  %1089 = load <8 x float>, <8 x float>* %1088, align 1, !tbaa !12
  %1090 = add nsw i64 %1058, 64
  %1091 = getelementptr inbounds float, float* %3, i64 %1090
  %1092 = bitcast float* %1091 to <8 x float>*
  %1093 = load <8 x float>, <8 x float>* %1092, align 1, !tbaa !12
  %1094 = add nsw i64 %1058, 72
  %1095 = getelementptr inbounds float, float* %3, i64 %1094
  %1096 = bitcast float* %1095 to <8 x float>*
  %1097 = load <8 x float>, <8 x float>* %1096, align 1, !tbaa !12
  %1098 = add nsw i64 %1058, 80
  %1099 = getelementptr inbounds float, float* %3, i64 %1098
  %1100 = bitcast float* %1099 to <8 x float>*
  %1101 = load <8 x float>, <8 x float>* %1100, align 1, !tbaa !12
  %1102 = add nsw i64 %1058, 88
  %1103 = getelementptr inbounds float, float* %3, i64 %1102
  %1104 = bitcast float* %1103 to <8 x float>*
  %1105 = load <8 x float>, <8 x float>* %1104, align 1, !tbaa !12
  %1106 = add nsw i64 %1058, 96
  %1107 = getelementptr inbounds float, float* %3, i64 %1106
  %1108 = bitcast float* %1107 to <8 x float>*
  %1109 = load <8 x float>, <8 x float>* %1108, align 1, !tbaa !12
  %1110 = add nsw i64 %1058, 104
  %1111 = getelementptr inbounds float, float* %3, i64 %1110
  %1112 = bitcast float* %1111 to <8 x float>*
  %1113 = load <8 x float>, <8 x float>* %1112, align 1, !tbaa !12
  %1114 = add nsw i64 %1058, 112
  %1115 = getelementptr inbounds float, float* %3, i64 %1114
  %1116 = bitcast float* %1115 to <8 x float>*
  %1117 = load <8 x float>, <8 x float>* %1116, align 1, !tbaa !12
  %1118 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1061, <8 x float> %45, <8 x float> %1001) #10
  %1119 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1065, <8 x float> %45, <8 x float> %1005) #10
  %1120 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1069, <8 x float> %45, <8 x float> %1009) #10
  %1121 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1073, <8 x float> %45, <8 x float> %1013) #10
  %1122 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1077, <8 x float> %45, <8 x float> %1017) #10
  %1123 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1081, <8 x float> %45, <8 x float> %1021) #10
  %1124 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1085, <8 x float> %45, <8 x float> %1025) #10
  %1125 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1089, <8 x float> %45, <8 x float> %1029) #10
  %1126 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1093, <8 x float> %45, <8 x float> %1033) #10
  %1127 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1097, <8 x float> %45, <8 x float> %1037) #10
  %1128 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1101, <8 x float> %45, <8 x float> %1041) #10
  %1129 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1105, <8 x float> %45, <8 x float> %1045) #10
  %1130 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1109, <8 x float> %45, <8 x float> %1049) #10
  %1131 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1113, <8 x float> %45, <8 x float> %1053) #10
  %1132 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1117, <8 x float> %45, <8 x float> %1057) #10
  store <8 x float> %1118, <8 x float>* %1000, align 1, !tbaa !12
  store <8 x float> %1119, <8 x float>* %1004, align 1, !tbaa !12
  store <8 x float> %1120, <8 x float>* %1008, align 1, !tbaa !12
  store <8 x float> %1121, <8 x float>* %1012, align 1, !tbaa !12
  store <8 x float> %1122, <8 x float>* %1016, align 1, !tbaa !12
  store <8 x float> %1123, <8 x float>* %1020, align 1, !tbaa !12
  store <8 x float> %1124, <8 x float>* %1024, align 1, !tbaa !12
  store <8 x float> %1125, <8 x float>* %1028, align 1, !tbaa !12
  store <8 x float> %1126, <8 x float>* %1032, align 1, !tbaa !12
  store <8 x float> %1127, <8 x float>* %1036, align 1, !tbaa !12
  store <8 x float> %1128, <8 x float>* %1040, align 1, !tbaa !12
  store <8 x float> %1129, <8 x float>* %1044, align 1, !tbaa !12
  store <8 x float> %1130, <8 x float>* %1048, align 1, !tbaa !12
  store <8 x float> %1131, <8 x float>* %1052, align 1, !tbaa !12
  store <8 x float> %1132, <8 x float>* %1056, align 1, !tbaa !12
  %1133 = add nuw nsw i64 %937, 120
  %1134 = icmp ult i64 %1133, %714
  br i1 %1134, label %936, label %930

1135:                                             ; preds = %1142, %709, %930
  %1136 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1137 = icmp sgt i32 %1136, 0
  br i1 %1137, label %1138, label %1973

1138:                                             ; preds = %1135
  %1139 = zext i32 %1136 to i64
  %1140 = trunc i64 %51 to i32
  %1141 = mul nsw i32 %1136, %1140
  br label %1347

1142:                                             ; preds = %931, %1142
  %1143 = phi i64 [ 0, %931 ], [ %1339, %1142 ]
  %1144 = getelementptr inbounds float, float* %5, i64 %1143
  %1145 = getelementptr inbounds float, float* %1144, i64 8
  %1146 = bitcast float* %1145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1146, i32 0, i32 1, i32 1)
  %1147 = getelementptr inbounds float, float* %3, i64 %1143
  %1148 = getelementptr inbounds float, float* %1147, i64 8
  %1149 = bitcast float* %1148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1149, i32 0, i32 1, i32 1)
  %1150 = getelementptr inbounds float, float* %1144, i64 16
  %1151 = bitcast float* %1150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1151, i32 0, i32 1, i32 1)
  %1152 = getelementptr inbounds float, float* %1147, i64 16
  %1153 = bitcast float* %1152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1153, i32 0, i32 1, i32 1)
  %1154 = getelementptr inbounds float, float* %1144, i64 24
  %1155 = bitcast float* %1154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1155, i32 0, i32 1, i32 1)
  %1156 = getelementptr inbounds float, float* %1147, i64 24
  %1157 = bitcast float* %1156 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1157, i32 0, i32 1, i32 1)
  %1158 = getelementptr inbounds float, float* %1144, i64 32
  %1159 = bitcast float* %1158 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1159, i32 0, i32 1, i32 1)
  %1160 = getelementptr inbounds float, float* %1147, i64 32
  %1161 = bitcast float* %1160 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1161, i32 0, i32 1, i32 1)
  %1162 = getelementptr inbounds float, float* %1144, i64 40
  %1163 = bitcast float* %1162 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1163, i32 0, i32 1, i32 1)
  %1164 = getelementptr inbounds float, float* %1147, i64 40
  %1165 = bitcast float* %1164 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1165, i32 0, i32 1, i32 1)
  %1166 = getelementptr inbounds float, float* %1144, i64 48
  %1167 = bitcast float* %1166 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1167, i32 0, i32 1, i32 1)
  %1168 = getelementptr inbounds float, float* %1147, i64 48
  %1169 = bitcast float* %1168 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1169, i32 0, i32 1, i32 1)
  %1170 = getelementptr inbounds float, float* %1144, i64 56
  %1171 = bitcast float* %1170 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1171, i32 0, i32 1, i32 1)
  %1172 = getelementptr inbounds float, float* %1147, i64 56
  %1173 = bitcast float* %1172 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1173, i32 0, i32 1, i32 1)
  %1174 = getelementptr inbounds float, float* %1144, i64 64
  %1175 = bitcast float* %1174 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1175, i32 0, i32 1, i32 1)
  %1176 = getelementptr inbounds float, float* %1147, i64 64
  %1177 = bitcast float* %1176 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1177, i32 0, i32 1, i32 1)
  %1178 = getelementptr inbounds float, float* %1144, i64 72
  %1179 = bitcast float* %1178 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1179, i32 0, i32 1, i32 1)
  %1180 = getelementptr inbounds float, float* %1147, i64 72
  %1181 = bitcast float* %1180 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1181, i32 0, i32 1, i32 1)
  %1182 = getelementptr inbounds float, float* %1144, i64 80
  %1183 = bitcast float* %1182 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1183, i32 0, i32 1, i32 1)
  %1184 = getelementptr inbounds float, float* %1147, i64 80
  %1185 = bitcast float* %1184 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1185, i32 0, i32 1, i32 1)
  %1186 = getelementptr inbounds float, float* %1144, i64 88
  %1187 = bitcast float* %1186 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1187, i32 0, i32 1, i32 1)
  %1188 = getelementptr inbounds float, float* %1147, i64 88
  %1189 = bitcast float* %1188 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1189, i32 0, i32 1, i32 1)
  %1190 = getelementptr inbounds float, float* %1144, i64 96
  %1191 = bitcast float* %1190 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1191, i32 0, i32 1, i32 1)
  %1192 = getelementptr inbounds float, float* %1147, i64 96
  %1193 = bitcast float* %1192 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1193, i32 0, i32 1, i32 1)
  %1194 = getelementptr inbounds float, float* %1144, i64 104
  %1195 = bitcast float* %1194 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1195, i32 0, i32 1, i32 1)
  %1196 = getelementptr inbounds float, float* %1147, i64 104
  %1197 = bitcast float* %1196 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1197, i32 0, i32 1, i32 1)
  %1198 = getelementptr inbounds float, float* %1144, i64 112
  %1199 = bitcast float* %1198 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1199, i32 0, i32 1, i32 1)
  %1200 = getelementptr inbounds float, float* %1147, i64 112
  %1201 = bitcast float* %1200 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1201, i32 0, i32 1, i32 1)
  %1202 = getelementptr inbounds float, float* %1144, i64 120
  %1203 = bitcast float* %1202 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1203, i32 0, i32 1, i32 1)
  %1204 = getelementptr inbounds float, float* %1147, i64 120
  %1205 = bitcast float* %1204 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1205, i32 0, i32 1, i32 1)
  %1206 = bitcast float* %1144 to <8 x float>*
  %1207 = load <8 x float>, <8 x float>* %1206, align 1, !tbaa !12
  %1208 = add nuw nsw i64 %1143, 8
  %1209 = getelementptr inbounds float, float* %5, i64 %1208
  %1210 = bitcast float* %1209 to <8 x float>*
  %1211 = load <8 x float>, <8 x float>* %1210, align 1, !tbaa !12
  %1212 = add nuw nsw i64 %1143, 16
  %1213 = getelementptr inbounds float, float* %5, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nuw nsw i64 %1143, 24
  %1217 = getelementptr inbounds float, float* %5, i64 %1216
  %1218 = bitcast float* %1217 to <8 x float>*
  %1219 = load <8 x float>, <8 x float>* %1218, align 1, !tbaa !12
  %1220 = add nuw nsw i64 %1143, 32
  %1221 = getelementptr inbounds float, float* %5, i64 %1220
  %1222 = bitcast float* %1221 to <8 x float>*
  %1223 = load <8 x float>, <8 x float>* %1222, align 1, !tbaa !12
  %1224 = add nuw nsw i64 %1143, 40
  %1225 = getelementptr inbounds float, float* %5, i64 %1224
  %1226 = bitcast float* %1225 to <8 x float>*
  %1227 = load <8 x float>, <8 x float>* %1226, align 1, !tbaa !12
  %1228 = add nuw nsw i64 %1143, 48
  %1229 = getelementptr inbounds float, float* %5, i64 %1228
  %1230 = bitcast float* %1229 to <8 x float>*
  %1231 = load <8 x float>, <8 x float>* %1230, align 1, !tbaa !12
  %1232 = add nuw nsw i64 %1143, 56
  %1233 = getelementptr inbounds float, float* %5, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nuw nsw i64 %1143, 64
  %1237 = getelementptr inbounds float, float* %5, i64 %1236
  %1238 = bitcast float* %1237 to <8 x float>*
  %1239 = load <8 x float>, <8 x float>* %1238, align 1, !tbaa !12
  %1240 = add nuw nsw i64 %1143, 72
  %1241 = getelementptr inbounds float, float* %5, i64 %1240
  %1242 = bitcast float* %1241 to <8 x float>*
  %1243 = load <8 x float>, <8 x float>* %1242, align 1, !tbaa !12
  %1244 = add nuw nsw i64 %1143, 80
  %1245 = getelementptr inbounds float, float* %5, i64 %1244
  %1246 = bitcast float* %1245 to <8 x float>*
  %1247 = load <8 x float>, <8 x float>* %1246, align 1, !tbaa !12
  %1248 = add nuw nsw i64 %1143, 88
  %1249 = getelementptr inbounds float, float* %5, i64 %1248
  %1250 = bitcast float* %1249 to <8 x float>*
  %1251 = load <8 x float>, <8 x float>* %1250, align 1, !tbaa !12
  %1252 = add nuw nsw i64 %1143, 96
  %1253 = getelementptr inbounds float, float* %5, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = add nuw nsw i64 %1143, 104
  %1257 = getelementptr inbounds float, float* %5, i64 %1256
  %1258 = bitcast float* %1257 to <8 x float>*
  %1259 = load <8 x float>, <8 x float>* %1258, align 1, !tbaa !12
  %1260 = add nuw nsw i64 %1143, 112
  %1261 = getelementptr inbounds float, float* %5, i64 %1260
  %1262 = bitcast float* %1261 to <8 x float>*
  %1263 = load <8 x float>, <8 x float>* %1262, align 1, !tbaa !12
  %1264 = add nsw i64 %1143, %934
  %1265 = getelementptr inbounds float, float* %3, i64 %1264
  %1266 = bitcast float* %1265 to <8 x float>*
  %1267 = load <8 x float>, <8 x float>* %1266, align 1, !tbaa !12
  %1268 = add nsw i64 %1264, 8
  %1269 = getelementptr inbounds float, float* %3, i64 %1268
  %1270 = bitcast float* %1269 to <8 x float>*
  %1271 = load <8 x float>, <8 x float>* %1270, align 1, !tbaa !12
  %1272 = add nsw i64 %1264, 16
  %1273 = getelementptr inbounds float, float* %3, i64 %1272
  %1274 = bitcast float* %1273 to <8 x float>*
  %1275 = load <8 x float>, <8 x float>* %1274, align 1, !tbaa !12
  %1276 = add nsw i64 %1264, 24
  %1277 = getelementptr inbounds float, float* %3, i64 %1276
  %1278 = bitcast float* %1277 to <8 x float>*
  %1279 = load <8 x float>, <8 x float>* %1278, align 1, !tbaa !12
  %1280 = add nsw i64 %1264, 32
  %1281 = getelementptr inbounds float, float* %3, i64 %1280
  %1282 = bitcast float* %1281 to <8 x float>*
  %1283 = load <8 x float>, <8 x float>* %1282, align 1, !tbaa !12
  %1284 = add nsw i64 %1264, 40
  %1285 = getelementptr inbounds float, float* %3, i64 %1284
  %1286 = bitcast float* %1285 to <8 x float>*
  %1287 = load <8 x float>, <8 x float>* %1286, align 1, !tbaa !12
  %1288 = add nsw i64 %1264, 48
  %1289 = getelementptr inbounds float, float* %3, i64 %1288
  %1290 = bitcast float* %1289 to <8 x float>*
  %1291 = load <8 x float>, <8 x float>* %1290, align 1, !tbaa !12
  %1292 = add nsw i64 %1264, 56
  %1293 = getelementptr inbounds float, float* %3, i64 %1292
  %1294 = bitcast float* %1293 to <8 x float>*
  %1295 = load <8 x float>, <8 x float>* %1294, align 1, !tbaa !12
  %1296 = add nsw i64 %1264, 64
  %1297 = getelementptr inbounds float, float* %3, i64 %1296
  %1298 = bitcast float* %1297 to <8 x float>*
  %1299 = load <8 x float>, <8 x float>* %1298, align 1, !tbaa !12
  %1300 = add nsw i64 %1264, 72
  %1301 = getelementptr inbounds float, float* %3, i64 %1300
  %1302 = bitcast float* %1301 to <8 x float>*
  %1303 = load <8 x float>, <8 x float>* %1302, align 1, !tbaa !12
  %1304 = add nsw i64 %1264, 80
  %1305 = getelementptr inbounds float, float* %3, i64 %1304
  %1306 = bitcast float* %1305 to <8 x float>*
  %1307 = load <8 x float>, <8 x float>* %1306, align 1, !tbaa !12
  %1308 = add nsw i64 %1264, 88
  %1309 = getelementptr inbounds float, float* %3, i64 %1308
  %1310 = bitcast float* %1309 to <8 x float>*
  %1311 = load <8 x float>, <8 x float>* %1310, align 1, !tbaa !12
  %1312 = add nsw i64 %1264, 96
  %1313 = getelementptr inbounds float, float* %3, i64 %1312
  %1314 = bitcast float* %1313 to <8 x float>*
  %1315 = load <8 x float>, <8 x float>* %1314, align 1, !tbaa !12
  %1316 = add nsw i64 %1264, 104
  %1317 = getelementptr inbounds float, float* %3, i64 %1316
  %1318 = bitcast float* %1317 to <8 x float>*
  %1319 = load <8 x float>, <8 x float>* %1318, align 1, !tbaa !12
  %1320 = add nsw i64 %1264, 112
  %1321 = getelementptr inbounds float, float* %3, i64 %1320
  %1322 = bitcast float* %1321 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1267, <8 x float> %50, <8 x float> %1207) #10
  %1325 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1271, <8 x float> %50, <8 x float> %1211) #10
  %1326 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1275, <8 x float> %50, <8 x float> %1215) #10
  %1327 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1279, <8 x float> %50, <8 x float> %1219) #10
  %1328 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1283, <8 x float> %50, <8 x float> %1223) #10
  %1329 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1287, <8 x float> %50, <8 x float> %1227) #10
  %1330 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1291, <8 x float> %50, <8 x float> %1231) #10
  %1331 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1295, <8 x float> %50, <8 x float> %1235) #10
  %1332 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1299, <8 x float> %50, <8 x float> %1239) #10
  %1333 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1303, <8 x float> %50, <8 x float> %1243) #10
  %1334 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1307, <8 x float> %50, <8 x float> %1247) #10
  %1335 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1311, <8 x float> %50, <8 x float> %1251) #10
  %1336 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1315, <8 x float> %50, <8 x float> %1255) #10
  %1337 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1319, <8 x float> %50, <8 x float> %1259) #10
  %1338 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1323, <8 x float> %50, <8 x float> %1263) #10
  store <8 x float> %1324, <8 x float>* %1206, align 1, !tbaa !12
  store <8 x float> %1325, <8 x float>* %1210, align 1, !tbaa !12
  store <8 x float> %1326, <8 x float>* %1214, align 1, !tbaa !12
  store <8 x float> %1327, <8 x float>* %1218, align 1, !tbaa !12
  store <8 x float> %1328, <8 x float>* %1222, align 1, !tbaa !12
  store <8 x float> %1329, <8 x float>* %1226, align 1, !tbaa !12
  store <8 x float> %1330, <8 x float>* %1230, align 1, !tbaa !12
  store <8 x float> %1331, <8 x float>* %1234, align 1, !tbaa !12
  store <8 x float> %1332, <8 x float>* %1238, align 1, !tbaa !12
  store <8 x float> %1333, <8 x float>* %1242, align 1, !tbaa !12
  store <8 x float> %1334, <8 x float>* %1246, align 1, !tbaa !12
  store <8 x float> %1335, <8 x float>* %1250, align 1, !tbaa !12
  store <8 x float> %1336, <8 x float>* %1254, align 1, !tbaa !12
  store <8 x float> %1337, <8 x float>* %1258, align 1, !tbaa !12
  store <8 x float> %1338, <8 x float>* %1262, align 1, !tbaa !12
  %1339 = add nuw nsw i64 %1143, 120
  %1340 = icmp ult i64 %1339, %935
  br i1 %1340, label %1142, label %1135

1341:                                             ; preds = %1347
  br i1 %1137, label %1342, label %1767

1342:                                             ; preds = %1341
  %1343 = trunc i64 %56 to i32
  %1344 = mul nsw i32 %1136, %1343
  %1345 = sext i32 %1344 to i64
  %1346 = zext i32 %1136 to i64
  br label %1568

1347:                                             ; preds = %1138, %1347
  %1348 = phi i64 [ 0, %1138 ], [ %1560, %1347 ]
  %1349 = getelementptr inbounds float, float* %5, i64 %1348
  %1350 = getelementptr inbounds float, float* %1349, i64 8
  %1351 = bitcast float* %1350 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1351, i32 0, i32 1, i32 1)
  %1352 = getelementptr inbounds float, float* %3, i64 %1348
  %1353 = getelementptr inbounds float, float* %1352, i64 8
  %1354 = bitcast float* %1353 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1354, i32 0, i32 1, i32 1)
  %1355 = getelementptr inbounds float, float* %1349, i64 16
  %1356 = bitcast float* %1355 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1356, i32 0, i32 1, i32 1)
  %1357 = getelementptr inbounds float, float* %1352, i64 16
  %1358 = bitcast float* %1357 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1358, i32 0, i32 1, i32 1)
  %1359 = getelementptr inbounds float, float* %1349, i64 24
  %1360 = bitcast float* %1359 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1360, i32 0, i32 1, i32 1)
  %1361 = getelementptr inbounds float, float* %1352, i64 24
  %1362 = bitcast float* %1361 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1362, i32 0, i32 1, i32 1)
  %1363 = getelementptr inbounds float, float* %1349, i64 32
  %1364 = bitcast float* %1363 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1364, i32 0, i32 1, i32 1)
  %1365 = getelementptr inbounds float, float* %1352, i64 32
  %1366 = bitcast float* %1365 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1366, i32 0, i32 1, i32 1)
  %1367 = getelementptr inbounds float, float* %1349, i64 40
  %1368 = bitcast float* %1367 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1368, i32 0, i32 1, i32 1)
  %1369 = getelementptr inbounds float, float* %1352, i64 40
  %1370 = bitcast float* %1369 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1370, i32 0, i32 1, i32 1)
  %1371 = getelementptr inbounds float, float* %1349, i64 48
  %1372 = bitcast float* %1371 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1372, i32 0, i32 1, i32 1)
  %1373 = getelementptr inbounds float, float* %1352, i64 48
  %1374 = bitcast float* %1373 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1374, i32 0, i32 1, i32 1)
  %1375 = getelementptr inbounds float, float* %1349, i64 56
  %1376 = bitcast float* %1375 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1376, i32 0, i32 1, i32 1)
  %1377 = getelementptr inbounds float, float* %1352, i64 56
  %1378 = bitcast float* %1377 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1378, i32 0, i32 1, i32 1)
  %1379 = getelementptr inbounds float, float* %1349, i64 64
  %1380 = bitcast float* %1379 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1380, i32 0, i32 1, i32 1)
  %1381 = getelementptr inbounds float, float* %1352, i64 64
  %1382 = bitcast float* %1381 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1382, i32 0, i32 1, i32 1)
  %1383 = getelementptr inbounds float, float* %1349, i64 72
  %1384 = bitcast float* %1383 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1384, i32 0, i32 1, i32 1)
  %1385 = getelementptr inbounds float, float* %1352, i64 72
  %1386 = bitcast float* %1385 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1386, i32 0, i32 1, i32 1)
  %1387 = getelementptr inbounds float, float* %1349, i64 80
  %1388 = bitcast float* %1387 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1388, i32 0, i32 1, i32 1)
  %1389 = getelementptr inbounds float, float* %1352, i64 80
  %1390 = bitcast float* %1389 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1390, i32 0, i32 1, i32 1)
  %1391 = getelementptr inbounds float, float* %1349, i64 88
  %1392 = bitcast float* %1391 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1392, i32 0, i32 1, i32 1)
  %1393 = getelementptr inbounds float, float* %1352, i64 88
  %1394 = bitcast float* %1393 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1394, i32 0, i32 1, i32 1)
  %1395 = getelementptr inbounds float, float* %1349, i64 96
  %1396 = bitcast float* %1395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1396, i32 0, i32 1, i32 1)
  %1397 = getelementptr inbounds float, float* %1352, i64 96
  %1398 = bitcast float* %1397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1398, i32 0, i32 1, i32 1)
  %1399 = getelementptr inbounds float, float* %1349, i64 104
  %1400 = bitcast float* %1399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1400, i32 0, i32 1, i32 1)
  %1401 = getelementptr inbounds float, float* %1352, i64 104
  %1402 = bitcast float* %1401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1402, i32 0, i32 1, i32 1)
  %1403 = getelementptr inbounds float, float* %1349, i64 112
  %1404 = bitcast float* %1403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1404, i32 0, i32 1, i32 1)
  %1405 = getelementptr inbounds float, float* %1352, i64 112
  %1406 = bitcast float* %1405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1406, i32 0, i32 1, i32 1)
  %1407 = getelementptr inbounds float, float* %1349, i64 120
  %1408 = bitcast float* %1407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1408, i32 0, i32 1, i32 1)
  %1409 = getelementptr inbounds float, float* %1352, i64 120
  %1410 = bitcast float* %1409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1410, i32 0, i32 1, i32 1)
  %1411 = bitcast float* %1349 to <8 x float>*
  %1412 = load <8 x float>, <8 x float>* %1411, align 1, !tbaa !12
  %1413 = add nuw nsw i64 %1348, 8
  %1414 = getelementptr inbounds float, float* %5, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = add nuw nsw i64 %1348, 16
  %1418 = getelementptr inbounds float, float* %5, i64 %1417
  %1419 = bitcast float* %1418 to <8 x float>*
  %1420 = load <8 x float>, <8 x float>* %1419, align 1, !tbaa !12
  %1421 = add nuw nsw i64 %1348, 24
  %1422 = getelementptr inbounds float, float* %5, i64 %1421
  %1423 = bitcast float* %1422 to <8 x float>*
  %1424 = load <8 x float>, <8 x float>* %1423, align 1, !tbaa !12
  %1425 = add nuw nsw i64 %1348, 32
  %1426 = getelementptr inbounds float, float* %5, i64 %1425
  %1427 = bitcast float* %1426 to <8 x float>*
  %1428 = load <8 x float>, <8 x float>* %1427, align 1, !tbaa !12
  %1429 = add nuw nsw i64 %1348, 40
  %1430 = getelementptr inbounds float, float* %5, i64 %1429
  %1431 = bitcast float* %1430 to <8 x float>*
  %1432 = load <8 x float>, <8 x float>* %1431, align 1, !tbaa !12
  %1433 = add nuw nsw i64 %1348, 48
  %1434 = getelementptr inbounds float, float* %5, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = add nuw nsw i64 %1348, 56
  %1438 = getelementptr inbounds float, float* %5, i64 %1437
  %1439 = bitcast float* %1438 to <8 x float>*
  %1440 = load <8 x float>, <8 x float>* %1439, align 1, !tbaa !12
  %1441 = add nuw nsw i64 %1348, 64
  %1442 = getelementptr inbounds float, float* %5, i64 %1441
  %1443 = bitcast float* %1442 to <8 x float>*
  %1444 = load <8 x float>, <8 x float>* %1443, align 1, !tbaa !12
  %1445 = add nuw nsw i64 %1348, 72
  %1446 = getelementptr inbounds float, float* %5, i64 %1445
  %1447 = bitcast float* %1446 to <8 x float>*
  %1448 = load <8 x float>, <8 x float>* %1447, align 1, !tbaa !12
  %1449 = add nuw nsw i64 %1348, 80
  %1450 = getelementptr inbounds float, float* %5, i64 %1449
  %1451 = bitcast float* %1450 to <8 x float>*
  %1452 = load <8 x float>, <8 x float>* %1451, align 1, !tbaa !12
  %1453 = add nuw nsw i64 %1348, 88
  %1454 = getelementptr inbounds float, float* %5, i64 %1453
  %1455 = bitcast float* %1454 to <8 x float>*
  %1456 = load <8 x float>, <8 x float>* %1455, align 1, !tbaa !12
  %1457 = add nuw nsw i64 %1348, 96
  %1458 = getelementptr inbounds float, float* %5, i64 %1457
  %1459 = bitcast float* %1458 to <8 x float>*
  %1460 = load <8 x float>, <8 x float>* %1459, align 1, !tbaa !12
  %1461 = add nuw nsw i64 %1348, 104
  %1462 = getelementptr inbounds float, float* %5, i64 %1461
  %1463 = bitcast float* %1462 to <8 x float>*
  %1464 = load <8 x float>, <8 x float>* %1463, align 1, !tbaa !12
  %1465 = add nuw nsw i64 %1348, 112
  %1466 = getelementptr inbounds float, float* %5, i64 %1465
  %1467 = bitcast float* %1466 to <8 x float>*
  %1468 = load <8 x float>, <8 x float>* %1467, align 1, !tbaa !12
  %1469 = trunc i64 %1348 to i32
  %1470 = add nsw i32 %1141, %1469
  %1471 = sext i32 %1470 to i64
  %1472 = getelementptr inbounds float, float* %3, i64 %1471
  %1473 = bitcast float* %1472 to <8 x float>*
  %1474 = load <8 x float>, <8 x float>* %1473, align 1, !tbaa !12
  %1475 = add nsw i32 %1470, 8
  %1476 = sext i32 %1475 to i64
  %1477 = getelementptr inbounds float, float* %3, i64 %1476
  %1478 = bitcast float* %1477 to <8 x float>*
  %1479 = load <8 x float>, <8 x float>* %1478, align 1, !tbaa !12
  %1480 = add nsw i32 %1470, 16
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds float, float* %3, i64 %1481
  %1483 = bitcast float* %1482 to <8 x float>*
  %1484 = load <8 x float>, <8 x float>* %1483, align 1, !tbaa !12
  %1485 = add nsw i32 %1470, 24
  %1486 = sext i32 %1485 to i64
  %1487 = getelementptr inbounds float, float* %3, i64 %1486
  %1488 = bitcast float* %1487 to <8 x float>*
  %1489 = load <8 x float>, <8 x float>* %1488, align 1, !tbaa !12
  %1490 = add nsw i32 %1470, 32
  %1491 = sext i32 %1490 to i64
  %1492 = getelementptr inbounds float, float* %3, i64 %1491
  %1493 = bitcast float* %1492 to <8 x float>*
  %1494 = load <8 x float>, <8 x float>* %1493, align 1, !tbaa !12
  %1495 = add nsw i32 %1470, 40
  %1496 = sext i32 %1495 to i64
  %1497 = getelementptr inbounds float, float* %3, i64 %1496
  %1498 = bitcast float* %1497 to <8 x float>*
  %1499 = load <8 x float>, <8 x float>* %1498, align 1, !tbaa !12
  %1500 = add nsw i32 %1470, 48
  %1501 = sext i32 %1500 to i64
  %1502 = getelementptr inbounds float, float* %3, i64 %1501
  %1503 = bitcast float* %1502 to <8 x float>*
  %1504 = load <8 x float>, <8 x float>* %1503, align 1, !tbaa !12
  %1505 = add nsw i32 %1470, 56
  %1506 = sext i32 %1505 to i64
  %1507 = getelementptr inbounds float, float* %3, i64 %1506
  %1508 = bitcast float* %1507 to <8 x float>*
  %1509 = load <8 x float>, <8 x float>* %1508, align 1, !tbaa !12
  %1510 = add nsw i32 %1470, 64
  %1511 = sext i32 %1510 to i64
  %1512 = getelementptr inbounds float, float* %3, i64 %1511
  %1513 = bitcast float* %1512 to <8 x float>*
  %1514 = load <8 x float>, <8 x float>* %1513, align 1, !tbaa !12
  %1515 = add nsw i32 %1470, 72
  %1516 = sext i32 %1515 to i64
  %1517 = getelementptr inbounds float, float* %3, i64 %1516
  %1518 = bitcast float* %1517 to <8 x float>*
  %1519 = load <8 x float>, <8 x float>* %1518, align 1, !tbaa !12
  %1520 = add nsw i32 %1470, 80
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds float, float* %3, i64 %1521
  %1523 = bitcast float* %1522 to <8 x float>*
  %1524 = load <8 x float>, <8 x float>* %1523, align 1, !tbaa !12
  %1525 = add nsw i32 %1470, 88
  %1526 = sext i32 %1525 to i64
  %1527 = getelementptr inbounds float, float* %3, i64 %1526
  %1528 = bitcast float* %1527 to <8 x float>*
  %1529 = load <8 x float>, <8 x float>* %1528, align 1, !tbaa !12
  %1530 = add nsw i32 %1470, 96
  %1531 = sext i32 %1530 to i64
  %1532 = getelementptr inbounds float, float* %3, i64 %1531
  %1533 = bitcast float* %1532 to <8 x float>*
  %1534 = load <8 x float>, <8 x float>* %1533, align 1, !tbaa !12
  %1535 = add nsw i32 %1470, 104
  %1536 = sext i32 %1535 to i64
  %1537 = getelementptr inbounds float, float* %3, i64 %1536
  %1538 = bitcast float* %1537 to <8 x float>*
  %1539 = load <8 x float>, <8 x float>* %1538, align 1, !tbaa !12
  %1540 = add nsw i32 %1470, 112
  %1541 = sext i32 %1540 to i64
  %1542 = getelementptr inbounds float, float* %3, i64 %1541
  %1543 = bitcast float* %1542 to <8 x float>*
  %1544 = load <8 x float>, <8 x float>* %1543, align 1, !tbaa !12
  %1545 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1474, <8 x float> %55, <8 x float> %1412) #10
  %1546 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1479, <8 x float> %55, <8 x float> %1416) #10
  %1547 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1484, <8 x float> %55, <8 x float> %1420) #10
  %1548 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1489, <8 x float> %55, <8 x float> %1424) #10
  %1549 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1494, <8 x float> %55, <8 x float> %1428) #10
  %1550 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1499, <8 x float> %55, <8 x float> %1432) #10
  %1551 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1504, <8 x float> %55, <8 x float> %1436) #10
  %1552 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1509, <8 x float> %55, <8 x float> %1440) #10
  %1553 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1514, <8 x float> %55, <8 x float> %1444) #10
  %1554 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1519, <8 x float> %55, <8 x float> %1448) #10
  %1555 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1524, <8 x float> %55, <8 x float> %1452) #10
  %1556 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1529, <8 x float> %55, <8 x float> %1456) #10
  %1557 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1534, <8 x float> %55, <8 x float> %1460) #10
  %1558 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1539, <8 x float> %55, <8 x float> %1464) #10
  %1559 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1544, <8 x float> %55, <8 x float> %1468) #10
  store <8 x float> %1545, <8 x float>* %1411, align 1, !tbaa !12
  store <8 x float> %1546, <8 x float>* %1415, align 1, !tbaa !12
  store <8 x float> %1547, <8 x float>* %1419, align 1, !tbaa !12
  store <8 x float> %1548, <8 x float>* %1423, align 1, !tbaa !12
  store <8 x float> %1549, <8 x float>* %1427, align 1, !tbaa !12
  store <8 x float> %1550, <8 x float>* %1431, align 1, !tbaa !12
  store <8 x float> %1551, <8 x float>* %1435, align 1, !tbaa !12
  store <8 x float> %1552, <8 x float>* %1439, align 1, !tbaa !12
  store <8 x float> %1553, <8 x float>* %1443, align 1, !tbaa !12
  store <8 x float> %1554, <8 x float>* %1447, align 1, !tbaa !12
  store <8 x float> %1555, <8 x float>* %1451, align 1, !tbaa !12
  store <8 x float> %1556, <8 x float>* %1455, align 1, !tbaa !12
  store <8 x float> %1557, <8 x float>* %1459, align 1, !tbaa !12
  store <8 x float> %1558, <8 x float>* %1463, align 1, !tbaa !12
  store <8 x float> %1559, <8 x float>* %1467, align 1, !tbaa !12
  %1560 = add nuw nsw i64 %1348, 120
  %1561 = icmp ult i64 %1560, %1139
  br i1 %1561, label %1347, label %1341

1562:                                             ; preds = %1568
  br i1 %1137, label %1563, label %1767

1563:                                             ; preds = %1562
  %1564 = trunc i64 %61 to i32
  %1565 = mul nsw i32 %1136, %1564
  %1566 = sext i32 %1565 to i64
  %1567 = zext i32 %1136 to i64
  br label %1774

1568:                                             ; preds = %1342, %1568
  %1569 = phi i64 [ 0, %1342 ], [ %1765, %1568 ]
  %1570 = getelementptr inbounds float, float* %5, i64 %1569
  %1571 = getelementptr inbounds float, float* %1570, i64 8
  %1572 = bitcast float* %1571 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1572, i32 0, i32 1, i32 1)
  %1573 = getelementptr inbounds float, float* %3, i64 %1569
  %1574 = getelementptr inbounds float, float* %1573, i64 8
  %1575 = bitcast float* %1574 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1575, i32 0, i32 1, i32 1)
  %1576 = getelementptr inbounds float, float* %1570, i64 16
  %1577 = bitcast float* %1576 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1577, i32 0, i32 1, i32 1)
  %1578 = getelementptr inbounds float, float* %1573, i64 16
  %1579 = bitcast float* %1578 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1579, i32 0, i32 1, i32 1)
  %1580 = getelementptr inbounds float, float* %1570, i64 24
  %1581 = bitcast float* %1580 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1581, i32 0, i32 1, i32 1)
  %1582 = getelementptr inbounds float, float* %1573, i64 24
  %1583 = bitcast float* %1582 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1583, i32 0, i32 1, i32 1)
  %1584 = getelementptr inbounds float, float* %1570, i64 32
  %1585 = bitcast float* %1584 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1585, i32 0, i32 1, i32 1)
  %1586 = getelementptr inbounds float, float* %1573, i64 32
  %1587 = bitcast float* %1586 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1587, i32 0, i32 1, i32 1)
  %1588 = getelementptr inbounds float, float* %1570, i64 40
  %1589 = bitcast float* %1588 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1589, i32 0, i32 1, i32 1)
  %1590 = getelementptr inbounds float, float* %1573, i64 40
  %1591 = bitcast float* %1590 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1591, i32 0, i32 1, i32 1)
  %1592 = getelementptr inbounds float, float* %1570, i64 48
  %1593 = bitcast float* %1592 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1593, i32 0, i32 1, i32 1)
  %1594 = getelementptr inbounds float, float* %1573, i64 48
  %1595 = bitcast float* %1594 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1595, i32 0, i32 1, i32 1)
  %1596 = getelementptr inbounds float, float* %1570, i64 56
  %1597 = bitcast float* %1596 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1597, i32 0, i32 1, i32 1)
  %1598 = getelementptr inbounds float, float* %1573, i64 56
  %1599 = bitcast float* %1598 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1599, i32 0, i32 1, i32 1)
  %1600 = getelementptr inbounds float, float* %1570, i64 64
  %1601 = bitcast float* %1600 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1601, i32 0, i32 1, i32 1)
  %1602 = getelementptr inbounds float, float* %1573, i64 64
  %1603 = bitcast float* %1602 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1603, i32 0, i32 1, i32 1)
  %1604 = getelementptr inbounds float, float* %1570, i64 72
  %1605 = bitcast float* %1604 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1605, i32 0, i32 1, i32 1)
  %1606 = getelementptr inbounds float, float* %1573, i64 72
  %1607 = bitcast float* %1606 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1607, i32 0, i32 1, i32 1)
  %1608 = getelementptr inbounds float, float* %1570, i64 80
  %1609 = bitcast float* %1608 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1609, i32 0, i32 1, i32 1)
  %1610 = getelementptr inbounds float, float* %1573, i64 80
  %1611 = bitcast float* %1610 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1611, i32 0, i32 1, i32 1)
  %1612 = getelementptr inbounds float, float* %1570, i64 88
  %1613 = bitcast float* %1612 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1613, i32 0, i32 1, i32 1)
  %1614 = getelementptr inbounds float, float* %1573, i64 88
  %1615 = bitcast float* %1614 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1615, i32 0, i32 1, i32 1)
  %1616 = getelementptr inbounds float, float* %1570, i64 96
  %1617 = bitcast float* %1616 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1617, i32 0, i32 1, i32 1)
  %1618 = getelementptr inbounds float, float* %1573, i64 96
  %1619 = bitcast float* %1618 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1619, i32 0, i32 1, i32 1)
  %1620 = getelementptr inbounds float, float* %1570, i64 104
  %1621 = bitcast float* %1620 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1621, i32 0, i32 1, i32 1)
  %1622 = getelementptr inbounds float, float* %1573, i64 104
  %1623 = bitcast float* %1622 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1623, i32 0, i32 1, i32 1)
  %1624 = getelementptr inbounds float, float* %1570, i64 112
  %1625 = bitcast float* %1624 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1625, i32 0, i32 1, i32 1)
  %1626 = getelementptr inbounds float, float* %1573, i64 112
  %1627 = bitcast float* %1626 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1627, i32 0, i32 1, i32 1)
  %1628 = getelementptr inbounds float, float* %1570, i64 120
  %1629 = bitcast float* %1628 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1629, i32 0, i32 1, i32 1)
  %1630 = getelementptr inbounds float, float* %1573, i64 120
  %1631 = bitcast float* %1630 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1631, i32 0, i32 1, i32 1)
  %1632 = bitcast float* %1570 to <8 x float>*
  %1633 = load <8 x float>, <8 x float>* %1632, align 1, !tbaa !12
  %1634 = add nuw nsw i64 %1569, 8
  %1635 = getelementptr inbounds float, float* %5, i64 %1634
  %1636 = bitcast float* %1635 to <8 x float>*
  %1637 = load <8 x float>, <8 x float>* %1636, align 1, !tbaa !12
  %1638 = add nuw nsw i64 %1569, 16
  %1639 = getelementptr inbounds float, float* %5, i64 %1638
  %1640 = bitcast float* %1639 to <8 x float>*
  %1641 = load <8 x float>, <8 x float>* %1640, align 1, !tbaa !12
  %1642 = add nuw nsw i64 %1569, 24
  %1643 = getelementptr inbounds float, float* %5, i64 %1642
  %1644 = bitcast float* %1643 to <8 x float>*
  %1645 = load <8 x float>, <8 x float>* %1644, align 1, !tbaa !12
  %1646 = add nuw nsw i64 %1569, 32
  %1647 = getelementptr inbounds float, float* %5, i64 %1646
  %1648 = bitcast float* %1647 to <8 x float>*
  %1649 = load <8 x float>, <8 x float>* %1648, align 1, !tbaa !12
  %1650 = add nuw nsw i64 %1569, 40
  %1651 = getelementptr inbounds float, float* %5, i64 %1650
  %1652 = bitcast float* %1651 to <8 x float>*
  %1653 = load <8 x float>, <8 x float>* %1652, align 1, !tbaa !12
  %1654 = add nuw nsw i64 %1569, 48
  %1655 = getelementptr inbounds float, float* %5, i64 %1654
  %1656 = bitcast float* %1655 to <8 x float>*
  %1657 = load <8 x float>, <8 x float>* %1656, align 1, !tbaa !12
  %1658 = add nuw nsw i64 %1569, 56
  %1659 = getelementptr inbounds float, float* %5, i64 %1658
  %1660 = bitcast float* %1659 to <8 x float>*
  %1661 = load <8 x float>, <8 x float>* %1660, align 1, !tbaa !12
  %1662 = add nuw nsw i64 %1569, 64
  %1663 = getelementptr inbounds float, float* %5, i64 %1662
  %1664 = bitcast float* %1663 to <8 x float>*
  %1665 = load <8 x float>, <8 x float>* %1664, align 1, !tbaa !12
  %1666 = add nuw nsw i64 %1569, 72
  %1667 = getelementptr inbounds float, float* %5, i64 %1666
  %1668 = bitcast float* %1667 to <8 x float>*
  %1669 = load <8 x float>, <8 x float>* %1668, align 1, !tbaa !12
  %1670 = add nuw nsw i64 %1569, 80
  %1671 = getelementptr inbounds float, float* %5, i64 %1670
  %1672 = bitcast float* %1671 to <8 x float>*
  %1673 = load <8 x float>, <8 x float>* %1672, align 1, !tbaa !12
  %1674 = add nuw nsw i64 %1569, 88
  %1675 = getelementptr inbounds float, float* %5, i64 %1674
  %1676 = bitcast float* %1675 to <8 x float>*
  %1677 = load <8 x float>, <8 x float>* %1676, align 1, !tbaa !12
  %1678 = add nuw nsw i64 %1569, 96
  %1679 = getelementptr inbounds float, float* %5, i64 %1678
  %1680 = bitcast float* %1679 to <8 x float>*
  %1681 = load <8 x float>, <8 x float>* %1680, align 1, !tbaa !12
  %1682 = add nuw nsw i64 %1569, 104
  %1683 = getelementptr inbounds float, float* %5, i64 %1682
  %1684 = bitcast float* %1683 to <8 x float>*
  %1685 = load <8 x float>, <8 x float>* %1684, align 1, !tbaa !12
  %1686 = add nuw nsw i64 %1569, 112
  %1687 = getelementptr inbounds float, float* %5, i64 %1686
  %1688 = bitcast float* %1687 to <8 x float>*
  %1689 = load <8 x float>, <8 x float>* %1688, align 1, !tbaa !12
  %1690 = add nsw i64 %1569, %1345
  %1691 = getelementptr inbounds float, float* %3, i64 %1690
  %1692 = bitcast float* %1691 to <8 x float>*
  %1693 = load <8 x float>, <8 x float>* %1692, align 1, !tbaa !12
  %1694 = add nsw i64 %1690, 8
  %1695 = getelementptr inbounds float, float* %3, i64 %1694
  %1696 = bitcast float* %1695 to <8 x float>*
  %1697 = load <8 x float>, <8 x float>* %1696, align 1, !tbaa !12
  %1698 = add nsw i64 %1690, 16
  %1699 = getelementptr inbounds float, float* %3, i64 %1698
  %1700 = bitcast float* %1699 to <8 x float>*
  %1701 = load <8 x float>, <8 x float>* %1700, align 1, !tbaa !12
  %1702 = add nsw i64 %1690, 24
  %1703 = getelementptr inbounds float, float* %3, i64 %1702
  %1704 = bitcast float* %1703 to <8 x float>*
  %1705 = load <8 x float>, <8 x float>* %1704, align 1, !tbaa !12
  %1706 = add nsw i64 %1690, 32
  %1707 = getelementptr inbounds float, float* %3, i64 %1706
  %1708 = bitcast float* %1707 to <8 x float>*
  %1709 = load <8 x float>, <8 x float>* %1708, align 1, !tbaa !12
  %1710 = add nsw i64 %1690, 40
  %1711 = getelementptr inbounds float, float* %3, i64 %1710
  %1712 = bitcast float* %1711 to <8 x float>*
  %1713 = load <8 x float>, <8 x float>* %1712, align 1, !tbaa !12
  %1714 = add nsw i64 %1690, 48
  %1715 = getelementptr inbounds float, float* %3, i64 %1714
  %1716 = bitcast float* %1715 to <8 x float>*
  %1717 = load <8 x float>, <8 x float>* %1716, align 1, !tbaa !12
  %1718 = add nsw i64 %1690, 56
  %1719 = getelementptr inbounds float, float* %3, i64 %1718
  %1720 = bitcast float* %1719 to <8 x float>*
  %1721 = load <8 x float>, <8 x float>* %1720, align 1, !tbaa !12
  %1722 = add nsw i64 %1690, 64
  %1723 = getelementptr inbounds float, float* %3, i64 %1722
  %1724 = bitcast float* %1723 to <8 x float>*
  %1725 = load <8 x float>, <8 x float>* %1724, align 1, !tbaa !12
  %1726 = add nsw i64 %1690, 72
  %1727 = getelementptr inbounds float, float* %3, i64 %1726
  %1728 = bitcast float* %1727 to <8 x float>*
  %1729 = load <8 x float>, <8 x float>* %1728, align 1, !tbaa !12
  %1730 = add nsw i64 %1690, 80
  %1731 = getelementptr inbounds float, float* %3, i64 %1730
  %1732 = bitcast float* %1731 to <8 x float>*
  %1733 = load <8 x float>, <8 x float>* %1732, align 1, !tbaa !12
  %1734 = add nsw i64 %1690, 88
  %1735 = getelementptr inbounds float, float* %3, i64 %1734
  %1736 = bitcast float* %1735 to <8 x float>*
  %1737 = load <8 x float>, <8 x float>* %1736, align 1, !tbaa !12
  %1738 = add nsw i64 %1690, 96
  %1739 = getelementptr inbounds float, float* %3, i64 %1738
  %1740 = bitcast float* %1739 to <8 x float>*
  %1741 = load <8 x float>, <8 x float>* %1740, align 1, !tbaa !12
  %1742 = add nsw i64 %1690, 104
  %1743 = getelementptr inbounds float, float* %3, i64 %1742
  %1744 = bitcast float* %1743 to <8 x float>*
  %1745 = load <8 x float>, <8 x float>* %1744, align 1, !tbaa !12
  %1746 = add nsw i64 %1690, 112
  %1747 = getelementptr inbounds float, float* %3, i64 %1746
  %1748 = bitcast float* %1747 to <8 x float>*
  %1749 = load <8 x float>, <8 x float>* %1748, align 1, !tbaa !12
  %1750 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1693, <8 x float> %60, <8 x float> %1633) #10
  %1751 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1697, <8 x float> %60, <8 x float> %1637) #10
  %1752 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1701, <8 x float> %60, <8 x float> %1641) #10
  %1753 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1705, <8 x float> %60, <8 x float> %1645) #10
  %1754 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1709, <8 x float> %60, <8 x float> %1649) #10
  %1755 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1713, <8 x float> %60, <8 x float> %1653) #10
  %1756 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1717, <8 x float> %60, <8 x float> %1657) #10
  %1757 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1721, <8 x float> %60, <8 x float> %1661) #10
  %1758 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1725, <8 x float> %60, <8 x float> %1665) #10
  %1759 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1729, <8 x float> %60, <8 x float> %1669) #10
  %1760 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1733, <8 x float> %60, <8 x float> %1673) #10
  %1761 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1737, <8 x float> %60, <8 x float> %1677) #10
  %1762 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1741, <8 x float> %60, <8 x float> %1681) #10
  %1763 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1745, <8 x float> %60, <8 x float> %1685) #10
  %1764 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1749, <8 x float> %60, <8 x float> %1689) #10
  store <8 x float> %1750, <8 x float>* %1632, align 1, !tbaa !12
  store <8 x float> %1751, <8 x float>* %1636, align 1, !tbaa !12
  store <8 x float> %1752, <8 x float>* %1640, align 1, !tbaa !12
  store <8 x float> %1753, <8 x float>* %1644, align 1, !tbaa !12
  store <8 x float> %1754, <8 x float>* %1648, align 1, !tbaa !12
  store <8 x float> %1755, <8 x float>* %1652, align 1, !tbaa !12
  store <8 x float> %1756, <8 x float>* %1656, align 1, !tbaa !12
  store <8 x float> %1757, <8 x float>* %1660, align 1, !tbaa !12
  store <8 x float> %1758, <8 x float>* %1664, align 1, !tbaa !12
  store <8 x float> %1759, <8 x float>* %1668, align 1, !tbaa !12
  store <8 x float> %1760, <8 x float>* %1672, align 1, !tbaa !12
  store <8 x float> %1761, <8 x float>* %1676, align 1, !tbaa !12
  store <8 x float> %1762, <8 x float>* %1680, align 1, !tbaa !12
  store <8 x float> %1763, <8 x float>* %1684, align 1, !tbaa !12
  store <8 x float> %1764, <8 x float>* %1688, align 1, !tbaa !12
  %1765 = add nuw nsw i64 %1569, 120
  %1766 = icmp ult i64 %1765, %1346
  br i1 %1766, label %1568, label %1562

1767:                                             ; preds = %1774, %1341, %1562
  %1768 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1769 = icmp sgt i32 %1768, 0
  br i1 %1769, label %1770, label %1973

1770:                                             ; preds = %1767
  %1771 = zext i32 %1768 to i64
  %1772 = trunc i64 %66 to i32
  %1773 = mul nsw i32 %1768, %1772
  br label %1978

1774:                                             ; preds = %1563, %1774
  %1775 = phi i64 [ 0, %1563 ], [ %1971, %1774 ]
  %1776 = getelementptr inbounds float, float* %5, i64 %1775
  %1777 = getelementptr inbounds float, float* %1776, i64 8
  %1778 = bitcast float* %1777 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1778, i32 0, i32 1, i32 1)
  %1779 = getelementptr inbounds float, float* %3, i64 %1775
  %1780 = getelementptr inbounds float, float* %1779, i64 8
  %1781 = bitcast float* %1780 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1781, i32 0, i32 1, i32 1)
  %1782 = getelementptr inbounds float, float* %1776, i64 16
  %1783 = bitcast float* %1782 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1783, i32 0, i32 1, i32 1)
  %1784 = getelementptr inbounds float, float* %1779, i64 16
  %1785 = bitcast float* %1784 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1785, i32 0, i32 1, i32 1)
  %1786 = getelementptr inbounds float, float* %1776, i64 24
  %1787 = bitcast float* %1786 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1787, i32 0, i32 1, i32 1)
  %1788 = getelementptr inbounds float, float* %1779, i64 24
  %1789 = bitcast float* %1788 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1789, i32 0, i32 1, i32 1)
  %1790 = getelementptr inbounds float, float* %1776, i64 32
  %1791 = bitcast float* %1790 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1791, i32 0, i32 1, i32 1)
  %1792 = getelementptr inbounds float, float* %1779, i64 32
  %1793 = bitcast float* %1792 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1793, i32 0, i32 1, i32 1)
  %1794 = getelementptr inbounds float, float* %1776, i64 40
  %1795 = bitcast float* %1794 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1795, i32 0, i32 1, i32 1)
  %1796 = getelementptr inbounds float, float* %1779, i64 40
  %1797 = bitcast float* %1796 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1797, i32 0, i32 1, i32 1)
  %1798 = getelementptr inbounds float, float* %1776, i64 48
  %1799 = bitcast float* %1798 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1799, i32 0, i32 1, i32 1)
  %1800 = getelementptr inbounds float, float* %1779, i64 48
  %1801 = bitcast float* %1800 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1801, i32 0, i32 1, i32 1)
  %1802 = getelementptr inbounds float, float* %1776, i64 56
  %1803 = bitcast float* %1802 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1803, i32 0, i32 1, i32 1)
  %1804 = getelementptr inbounds float, float* %1779, i64 56
  %1805 = bitcast float* %1804 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1805, i32 0, i32 1, i32 1)
  %1806 = getelementptr inbounds float, float* %1776, i64 64
  %1807 = bitcast float* %1806 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1807, i32 0, i32 1, i32 1)
  %1808 = getelementptr inbounds float, float* %1779, i64 64
  %1809 = bitcast float* %1808 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1809, i32 0, i32 1, i32 1)
  %1810 = getelementptr inbounds float, float* %1776, i64 72
  %1811 = bitcast float* %1810 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1811, i32 0, i32 1, i32 1)
  %1812 = getelementptr inbounds float, float* %1779, i64 72
  %1813 = bitcast float* %1812 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1813, i32 0, i32 1, i32 1)
  %1814 = getelementptr inbounds float, float* %1776, i64 80
  %1815 = bitcast float* %1814 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1815, i32 0, i32 1, i32 1)
  %1816 = getelementptr inbounds float, float* %1779, i64 80
  %1817 = bitcast float* %1816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1817, i32 0, i32 1, i32 1)
  %1818 = getelementptr inbounds float, float* %1776, i64 88
  %1819 = bitcast float* %1818 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1819, i32 0, i32 1, i32 1)
  %1820 = getelementptr inbounds float, float* %1779, i64 88
  %1821 = bitcast float* %1820 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1821, i32 0, i32 1, i32 1)
  %1822 = getelementptr inbounds float, float* %1776, i64 96
  %1823 = bitcast float* %1822 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1823, i32 0, i32 1, i32 1)
  %1824 = getelementptr inbounds float, float* %1779, i64 96
  %1825 = bitcast float* %1824 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1825, i32 0, i32 1, i32 1)
  %1826 = getelementptr inbounds float, float* %1776, i64 104
  %1827 = bitcast float* %1826 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1827, i32 0, i32 1, i32 1)
  %1828 = getelementptr inbounds float, float* %1779, i64 104
  %1829 = bitcast float* %1828 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1829, i32 0, i32 1, i32 1)
  %1830 = getelementptr inbounds float, float* %1776, i64 112
  %1831 = bitcast float* %1830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1831, i32 0, i32 1, i32 1)
  %1832 = getelementptr inbounds float, float* %1779, i64 112
  %1833 = bitcast float* %1832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1833, i32 0, i32 1, i32 1)
  %1834 = getelementptr inbounds float, float* %1776, i64 120
  %1835 = bitcast float* %1834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1835, i32 0, i32 1, i32 1)
  %1836 = getelementptr inbounds float, float* %1779, i64 120
  %1837 = bitcast float* %1836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1837, i32 0, i32 1, i32 1)
  %1838 = bitcast float* %1776 to <8 x float>*
  %1839 = load <8 x float>, <8 x float>* %1838, align 1, !tbaa !12
  %1840 = add nuw nsw i64 %1775, 8
  %1841 = getelementptr inbounds float, float* %5, i64 %1840
  %1842 = bitcast float* %1841 to <8 x float>*
  %1843 = load <8 x float>, <8 x float>* %1842, align 1, !tbaa !12
  %1844 = add nuw nsw i64 %1775, 16
  %1845 = getelementptr inbounds float, float* %5, i64 %1844
  %1846 = bitcast float* %1845 to <8 x float>*
  %1847 = load <8 x float>, <8 x float>* %1846, align 1, !tbaa !12
  %1848 = add nuw nsw i64 %1775, 24
  %1849 = getelementptr inbounds float, float* %5, i64 %1848
  %1850 = bitcast float* %1849 to <8 x float>*
  %1851 = load <8 x float>, <8 x float>* %1850, align 1, !tbaa !12
  %1852 = add nuw nsw i64 %1775, 32
  %1853 = getelementptr inbounds float, float* %5, i64 %1852
  %1854 = bitcast float* %1853 to <8 x float>*
  %1855 = load <8 x float>, <8 x float>* %1854, align 1, !tbaa !12
  %1856 = add nuw nsw i64 %1775, 40
  %1857 = getelementptr inbounds float, float* %5, i64 %1856
  %1858 = bitcast float* %1857 to <8 x float>*
  %1859 = load <8 x float>, <8 x float>* %1858, align 1, !tbaa !12
  %1860 = add nuw nsw i64 %1775, 48
  %1861 = getelementptr inbounds float, float* %5, i64 %1860
  %1862 = bitcast float* %1861 to <8 x float>*
  %1863 = load <8 x float>, <8 x float>* %1862, align 1, !tbaa !12
  %1864 = add nuw nsw i64 %1775, 56
  %1865 = getelementptr inbounds float, float* %5, i64 %1864
  %1866 = bitcast float* %1865 to <8 x float>*
  %1867 = load <8 x float>, <8 x float>* %1866, align 1, !tbaa !12
  %1868 = add nuw nsw i64 %1775, 64
  %1869 = getelementptr inbounds float, float* %5, i64 %1868
  %1870 = bitcast float* %1869 to <8 x float>*
  %1871 = load <8 x float>, <8 x float>* %1870, align 1, !tbaa !12
  %1872 = add nuw nsw i64 %1775, 72
  %1873 = getelementptr inbounds float, float* %5, i64 %1872
  %1874 = bitcast float* %1873 to <8 x float>*
  %1875 = load <8 x float>, <8 x float>* %1874, align 1, !tbaa !12
  %1876 = add nuw nsw i64 %1775, 80
  %1877 = getelementptr inbounds float, float* %5, i64 %1876
  %1878 = bitcast float* %1877 to <8 x float>*
  %1879 = load <8 x float>, <8 x float>* %1878, align 1, !tbaa !12
  %1880 = add nuw nsw i64 %1775, 88
  %1881 = getelementptr inbounds float, float* %5, i64 %1880
  %1882 = bitcast float* %1881 to <8 x float>*
  %1883 = load <8 x float>, <8 x float>* %1882, align 1, !tbaa !12
  %1884 = add nuw nsw i64 %1775, 96
  %1885 = getelementptr inbounds float, float* %5, i64 %1884
  %1886 = bitcast float* %1885 to <8 x float>*
  %1887 = load <8 x float>, <8 x float>* %1886, align 1, !tbaa !12
  %1888 = add nuw nsw i64 %1775, 104
  %1889 = getelementptr inbounds float, float* %5, i64 %1888
  %1890 = bitcast float* %1889 to <8 x float>*
  %1891 = load <8 x float>, <8 x float>* %1890, align 1, !tbaa !12
  %1892 = add nuw nsw i64 %1775, 112
  %1893 = getelementptr inbounds float, float* %5, i64 %1892
  %1894 = bitcast float* %1893 to <8 x float>*
  %1895 = load <8 x float>, <8 x float>* %1894, align 1, !tbaa !12
  %1896 = add nsw i64 %1775, %1566
  %1897 = getelementptr inbounds float, float* %3, i64 %1896
  %1898 = bitcast float* %1897 to <8 x float>*
  %1899 = load <8 x float>, <8 x float>* %1898, align 1, !tbaa !12
  %1900 = add nsw i64 %1896, 8
  %1901 = getelementptr inbounds float, float* %3, i64 %1900
  %1902 = bitcast float* %1901 to <8 x float>*
  %1903 = load <8 x float>, <8 x float>* %1902, align 1, !tbaa !12
  %1904 = add nsw i64 %1896, 16
  %1905 = getelementptr inbounds float, float* %3, i64 %1904
  %1906 = bitcast float* %1905 to <8 x float>*
  %1907 = load <8 x float>, <8 x float>* %1906, align 1, !tbaa !12
  %1908 = add nsw i64 %1896, 24
  %1909 = getelementptr inbounds float, float* %3, i64 %1908
  %1910 = bitcast float* %1909 to <8 x float>*
  %1911 = load <8 x float>, <8 x float>* %1910, align 1, !tbaa !12
  %1912 = add nsw i64 %1896, 32
  %1913 = getelementptr inbounds float, float* %3, i64 %1912
  %1914 = bitcast float* %1913 to <8 x float>*
  %1915 = load <8 x float>, <8 x float>* %1914, align 1, !tbaa !12
  %1916 = add nsw i64 %1896, 40
  %1917 = getelementptr inbounds float, float* %3, i64 %1916
  %1918 = bitcast float* %1917 to <8 x float>*
  %1919 = load <8 x float>, <8 x float>* %1918, align 1, !tbaa !12
  %1920 = add nsw i64 %1896, 48
  %1921 = getelementptr inbounds float, float* %3, i64 %1920
  %1922 = bitcast float* %1921 to <8 x float>*
  %1923 = load <8 x float>, <8 x float>* %1922, align 1, !tbaa !12
  %1924 = add nsw i64 %1896, 56
  %1925 = getelementptr inbounds float, float* %3, i64 %1924
  %1926 = bitcast float* %1925 to <8 x float>*
  %1927 = load <8 x float>, <8 x float>* %1926, align 1, !tbaa !12
  %1928 = add nsw i64 %1896, 64
  %1929 = getelementptr inbounds float, float* %3, i64 %1928
  %1930 = bitcast float* %1929 to <8 x float>*
  %1931 = load <8 x float>, <8 x float>* %1930, align 1, !tbaa !12
  %1932 = add nsw i64 %1896, 72
  %1933 = getelementptr inbounds float, float* %3, i64 %1932
  %1934 = bitcast float* %1933 to <8 x float>*
  %1935 = load <8 x float>, <8 x float>* %1934, align 1, !tbaa !12
  %1936 = add nsw i64 %1896, 80
  %1937 = getelementptr inbounds float, float* %3, i64 %1936
  %1938 = bitcast float* %1937 to <8 x float>*
  %1939 = load <8 x float>, <8 x float>* %1938, align 1, !tbaa !12
  %1940 = add nsw i64 %1896, 88
  %1941 = getelementptr inbounds float, float* %3, i64 %1940
  %1942 = bitcast float* %1941 to <8 x float>*
  %1943 = load <8 x float>, <8 x float>* %1942, align 1, !tbaa !12
  %1944 = add nsw i64 %1896, 96
  %1945 = getelementptr inbounds float, float* %3, i64 %1944
  %1946 = bitcast float* %1945 to <8 x float>*
  %1947 = load <8 x float>, <8 x float>* %1946, align 1, !tbaa !12
  %1948 = add nsw i64 %1896, 104
  %1949 = getelementptr inbounds float, float* %3, i64 %1948
  %1950 = bitcast float* %1949 to <8 x float>*
  %1951 = load <8 x float>, <8 x float>* %1950, align 1, !tbaa !12
  %1952 = add nsw i64 %1896, 112
  %1953 = getelementptr inbounds float, float* %3, i64 %1952
  %1954 = bitcast float* %1953 to <8 x float>*
  %1955 = load <8 x float>, <8 x float>* %1954, align 1, !tbaa !12
  %1956 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1899, <8 x float> %65, <8 x float> %1839) #10
  %1957 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1903, <8 x float> %65, <8 x float> %1843) #10
  %1958 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1907, <8 x float> %65, <8 x float> %1847) #10
  %1959 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1911, <8 x float> %65, <8 x float> %1851) #10
  %1960 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1915, <8 x float> %65, <8 x float> %1855) #10
  %1961 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1919, <8 x float> %65, <8 x float> %1859) #10
  %1962 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1923, <8 x float> %65, <8 x float> %1863) #10
  %1963 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1927, <8 x float> %65, <8 x float> %1867) #10
  %1964 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1931, <8 x float> %65, <8 x float> %1871) #10
  %1965 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1935, <8 x float> %65, <8 x float> %1875) #10
  %1966 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1939, <8 x float> %65, <8 x float> %1879) #10
  %1967 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1943, <8 x float> %65, <8 x float> %1883) #10
  %1968 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1947, <8 x float> %65, <8 x float> %1887) #10
  %1969 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1951, <8 x float> %65, <8 x float> %1891) #10
  %1970 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1955, <8 x float> %65, <8 x float> %1895) #10
  store <8 x float> %1956, <8 x float>* %1838, align 1, !tbaa !12
  store <8 x float> %1957, <8 x float>* %1842, align 1, !tbaa !12
  store <8 x float> %1958, <8 x float>* %1846, align 1, !tbaa !12
  store <8 x float> %1959, <8 x float>* %1850, align 1, !tbaa !12
  store <8 x float> %1960, <8 x float>* %1854, align 1, !tbaa !12
  store <8 x float> %1961, <8 x float>* %1858, align 1, !tbaa !12
  store <8 x float> %1962, <8 x float>* %1862, align 1, !tbaa !12
  store <8 x float> %1963, <8 x float>* %1866, align 1, !tbaa !12
  store <8 x float> %1964, <8 x float>* %1870, align 1, !tbaa !12
  store <8 x float> %1965, <8 x float>* %1874, align 1, !tbaa !12
  store <8 x float> %1966, <8 x float>* %1878, align 1, !tbaa !12
  store <8 x float> %1967, <8 x float>* %1882, align 1, !tbaa !12
  store <8 x float> %1968, <8 x float>* %1886, align 1, !tbaa !12
  store <8 x float> %1969, <8 x float>* %1890, align 1, !tbaa !12
  store <8 x float> %1970, <8 x float>* %1894, align 1, !tbaa !12
  %1971 = add nuw nsw i64 %1775, 120
  %1972 = icmp ult i64 %1971, %1567
  br i1 %1972, label %1774, label %1767

1973:                                             ; preds = %1978, %503, %20, %1135, %1767
  %1974 = add nuw nsw i64 %21, 10
  %1975 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1976 = sext i32 %1975 to i64
  %1977 = icmp slt i64 %1974, %1976
  br i1 %1977, label %20, label %8

1978:                                             ; preds = %1770, %1978
  %1979 = phi i64 [ 0, %1770 ], [ %2191, %1978 ]
  %1980 = getelementptr inbounds float, float* %5, i64 %1979
  %1981 = getelementptr inbounds float, float* %1980, i64 8
  %1982 = bitcast float* %1981 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1982, i32 0, i32 1, i32 1)
  %1983 = getelementptr inbounds float, float* %3, i64 %1979
  %1984 = getelementptr inbounds float, float* %1983, i64 8
  %1985 = bitcast float* %1984 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1985, i32 0, i32 1, i32 1)
  %1986 = getelementptr inbounds float, float* %1980, i64 16
  %1987 = bitcast float* %1986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1987, i32 0, i32 1, i32 1)
  %1988 = getelementptr inbounds float, float* %1983, i64 16
  %1989 = bitcast float* %1988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1989, i32 0, i32 1, i32 1)
  %1990 = getelementptr inbounds float, float* %1980, i64 24
  %1991 = bitcast float* %1990 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1991, i32 0, i32 1, i32 1)
  %1992 = getelementptr inbounds float, float* %1983, i64 24
  %1993 = bitcast float* %1992 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1993, i32 0, i32 1, i32 1)
  %1994 = getelementptr inbounds float, float* %1980, i64 32
  %1995 = bitcast float* %1994 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1995, i32 0, i32 1, i32 1)
  %1996 = getelementptr inbounds float, float* %1983, i64 32
  %1997 = bitcast float* %1996 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1997, i32 0, i32 1, i32 1)
  %1998 = getelementptr inbounds float, float* %1980, i64 40
  %1999 = bitcast float* %1998 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1999, i32 0, i32 1, i32 1)
  %2000 = getelementptr inbounds float, float* %1983, i64 40
  %2001 = bitcast float* %2000 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2001, i32 0, i32 1, i32 1)
  %2002 = getelementptr inbounds float, float* %1980, i64 48
  %2003 = bitcast float* %2002 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2003, i32 0, i32 1, i32 1)
  %2004 = getelementptr inbounds float, float* %1983, i64 48
  %2005 = bitcast float* %2004 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2005, i32 0, i32 1, i32 1)
  %2006 = getelementptr inbounds float, float* %1980, i64 56
  %2007 = bitcast float* %2006 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2007, i32 0, i32 1, i32 1)
  %2008 = getelementptr inbounds float, float* %1983, i64 56
  %2009 = bitcast float* %2008 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2009, i32 0, i32 1, i32 1)
  %2010 = getelementptr inbounds float, float* %1980, i64 64
  %2011 = bitcast float* %2010 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2011, i32 0, i32 1, i32 1)
  %2012 = getelementptr inbounds float, float* %1983, i64 64
  %2013 = bitcast float* %2012 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2013, i32 0, i32 1, i32 1)
  %2014 = getelementptr inbounds float, float* %1980, i64 72
  %2015 = bitcast float* %2014 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2015, i32 0, i32 1, i32 1)
  %2016 = getelementptr inbounds float, float* %1983, i64 72
  %2017 = bitcast float* %2016 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2017, i32 0, i32 1, i32 1)
  %2018 = getelementptr inbounds float, float* %1980, i64 80
  %2019 = bitcast float* %2018 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2019, i32 0, i32 1, i32 1)
  %2020 = getelementptr inbounds float, float* %1983, i64 80
  %2021 = bitcast float* %2020 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2021, i32 0, i32 1, i32 1)
  %2022 = getelementptr inbounds float, float* %1980, i64 88
  %2023 = bitcast float* %2022 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2023, i32 0, i32 1, i32 1)
  %2024 = getelementptr inbounds float, float* %1983, i64 88
  %2025 = bitcast float* %2024 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2025, i32 0, i32 1, i32 1)
  %2026 = getelementptr inbounds float, float* %1980, i64 96
  %2027 = bitcast float* %2026 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2027, i32 0, i32 1, i32 1)
  %2028 = getelementptr inbounds float, float* %1983, i64 96
  %2029 = bitcast float* %2028 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2029, i32 0, i32 1, i32 1)
  %2030 = getelementptr inbounds float, float* %1980, i64 104
  %2031 = bitcast float* %2030 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2031, i32 0, i32 1, i32 1)
  %2032 = getelementptr inbounds float, float* %1983, i64 104
  %2033 = bitcast float* %2032 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2033, i32 0, i32 1, i32 1)
  %2034 = getelementptr inbounds float, float* %1980, i64 112
  %2035 = bitcast float* %2034 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2035, i32 0, i32 1, i32 1)
  %2036 = getelementptr inbounds float, float* %1983, i64 112
  %2037 = bitcast float* %2036 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2037, i32 0, i32 1, i32 1)
  %2038 = getelementptr inbounds float, float* %1980, i64 120
  %2039 = bitcast float* %2038 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2039, i32 0, i32 1, i32 1)
  %2040 = getelementptr inbounds float, float* %1983, i64 120
  %2041 = bitcast float* %2040 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2041, i32 0, i32 1, i32 1)
  %2042 = bitcast float* %1980 to <8 x float>*
  %2043 = load <8 x float>, <8 x float>* %2042, align 1, !tbaa !12
  %2044 = add nuw nsw i64 %1979, 8
  %2045 = getelementptr inbounds float, float* %5, i64 %2044
  %2046 = bitcast float* %2045 to <8 x float>*
  %2047 = load <8 x float>, <8 x float>* %2046, align 1, !tbaa !12
  %2048 = add nuw nsw i64 %1979, 16
  %2049 = getelementptr inbounds float, float* %5, i64 %2048
  %2050 = bitcast float* %2049 to <8 x float>*
  %2051 = load <8 x float>, <8 x float>* %2050, align 1, !tbaa !12
  %2052 = add nuw nsw i64 %1979, 24
  %2053 = getelementptr inbounds float, float* %5, i64 %2052
  %2054 = bitcast float* %2053 to <8 x float>*
  %2055 = load <8 x float>, <8 x float>* %2054, align 1, !tbaa !12
  %2056 = add nuw nsw i64 %1979, 32
  %2057 = getelementptr inbounds float, float* %5, i64 %2056
  %2058 = bitcast float* %2057 to <8 x float>*
  %2059 = load <8 x float>, <8 x float>* %2058, align 1, !tbaa !12
  %2060 = add nuw nsw i64 %1979, 40
  %2061 = getelementptr inbounds float, float* %5, i64 %2060
  %2062 = bitcast float* %2061 to <8 x float>*
  %2063 = load <8 x float>, <8 x float>* %2062, align 1, !tbaa !12
  %2064 = add nuw nsw i64 %1979, 48
  %2065 = getelementptr inbounds float, float* %5, i64 %2064
  %2066 = bitcast float* %2065 to <8 x float>*
  %2067 = load <8 x float>, <8 x float>* %2066, align 1, !tbaa !12
  %2068 = add nuw nsw i64 %1979, 56
  %2069 = getelementptr inbounds float, float* %5, i64 %2068
  %2070 = bitcast float* %2069 to <8 x float>*
  %2071 = load <8 x float>, <8 x float>* %2070, align 1, !tbaa !12
  %2072 = add nuw nsw i64 %1979, 64
  %2073 = getelementptr inbounds float, float* %5, i64 %2072
  %2074 = bitcast float* %2073 to <8 x float>*
  %2075 = load <8 x float>, <8 x float>* %2074, align 1, !tbaa !12
  %2076 = add nuw nsw i64 %1979, 72
  %2077 = getelementptr inbounds float, float* %5, i64 %2076
  %2078 = bitcast float* %2077 to <8 x float>*
  %2079 = load <8 x float>, <8 x float>* %2078, align 1, !tbaa !12
  %2080 = add nuw nsw i64 %1979, 80
  %2081 = getelementptr inbounds float, float* %5, i64 %2080
  %2082 = bitcast float* %2081 to <8 x float>*
  %2083 = load <8 x float>, <8 x float>* %2082, align 1, !tbaa !12
  %2084 = add nuw nsw i64 %1979, 88
  %2085 = getelementptr inbounds float, float* %5, i64 %2084
  %2086 = bitcast float* %2085 to <8 x float>*
  %2087 = load <8 x float>, <8 x float>* %2086, align 1, !tbaa !12
  %2088 = add nuw nsw i64 %1979, 96
  %2089 = getelementptr inbounds float, float* %5, i64 %2088
  %2090 = bitcast float* %2089 to <8 x float>*
  %2091 = load <8 x float>, <8 x float>* %2090, align 1, !tbaa !12
  %2092 = add nuw nsw i64 %1979, 104
  %2093 = getelementptr inbounds float, float* %5, i64 %2092
  %2094 = bitcast float* %2093 to <8 x float>*
  %2095 = load <8 x float>, <8 x float>* %2094, align 1, !tbaa !12
  %2096 = add nuw nsw i64 %1979, 112
  %2097 = getelementptr inbounds float, float* %5, i64 %2096
  %2098 = bitcast float* %2097 to <8 x float>*
  %2099 = load <8 x float>, <8 x float>* %2098, align 1, !tbaa !12
  %2100 = trunc i64 %1979 to i32
  %2101 = add nsw i32 %1773, %2100
  %2102 = sext i32 %2101 to i64
  %2103 = getelementptr inbounds float, float* %3, i64 %2102
  %2104 = bitcast float* %2103 to <8 x float>*
  %2105 = load <8 x float>, <8 x float>* %2104, align 1, !tbaa !12
  %2106 = add nsw i32 %2101, 8
  %2107 = sext i32 %2106 to i64
  %2108 = getelementptr inbounds float, float* %3, i64 %2107
  %2109 = bitcast float* %2108 to <8 x float>*
  %2110 = load <8 x float>, <8 x float>* %2109, align 1, !tbaa !12
  %2111 = add nsw i32 %2101, 16
  %2112 = sext i32 %2111 to i64
  %2113 = getelementptr inbounds float, float* %3, i64 %2112
  %2114 = bitcast float* %2113 to <8 x float>*
  %2115 = load <8 x float>, <8 x float>* %2114, align 1, !tbaa !12
  %2116 = add nsw i32 %2101, 24
  %2117 = sext i32 %2116 to i64
  %2118 = getelementptr inbounds float, float* %3, i64 %2117
  %2119 = bitcast float* %2118 to <8 x float>*
  %2120 = load <8 x float>, <8 x float>* %2119, align 1, !tbaa !12
  %2121 = add nsw i32 %2101, 32
  %2122 = sext i32 %2121 to i64
  %2123 = getelementptr inbounds float, float* %3, i64 %2122
  %2124 = bitcast float* %2123 to <8 x float>*
  %2125 = load <8 x float>, <8 x float>* %2124, align 1, !tbaa !12
  %2126 = add nsw i32 %2101, 40
  %2127 = sext i32 %2126 to i64
  %2128 = getelementptr inbounds float, float* %3, i64 %2127
  %2129 = bitcast float* %2128 to <8 x float>*
  %2130 = load <8 x float>, <8 x float>* %2129, align 1, !tbaa !12
  %2131 = add nsw i32 %2101, 48
  %2132 = sext i32 %2131 to i64
  %2133 = getelementptr inbounds float, float* %3, i64 %2132
  %2134 = bitcast float* %2133 to <8 x float>*
  %2135 = load <8 x float>, <8 x float>* %2134, align 1, !tbaa !12
  %2136 = add nsw i32 %2101, 56
  %2137 = sext i32 %2136 to i64
  %2138 = getelementptr inbounds float, float* %3, i64 %2137
  %2139 = bitcast float* %2138 to <8 x float>*
  %2140 = load <8 x float>, <8 x float>* %2139, align 1, !tbaa !12
  %2141 = add nsw i32 %2101, 64
  %2142 = sext i32 %2141 to i64
  %2143 = getelementptr inbounds float, float* %3, i64 %2142
  %2144 = bitcast float* %2143 to <8 x float>*
  %2145 = load <8 x float>, <8 x float>* %2144, align 1, !tbaa !12
  %2146 = add nsw i32 %2101, 72
  %2147 = sext i32 %2146 to i64
  %2148 = getelementptr inbounds float, float* %3, i64 %2147
  %2149 = bitcast float* %2148 to <8 x float>*
  %2150 = load <8 x float>, <8 x float>* %2149, align 1, !tbaa !12
  %2151 = add nsw i32 %2101, 80
  %2152 = sext i32 %2151 to i64
  %2153 = getelementptr inbounds float, float* %3, i64 %2152
  %2154 = bitcast float* %2153 to <8 x float>*
  %2155 = load <8 x float>, <8 x float>* %2154, align 1, !tbaa !12
  %2156 = add nsw i32 %2101, 88
  %2157 = sext i32 %2156 to i64
  %2158 = getelementptr inbounds float, float* %3, i64 %2157
  %2159 = bitcast float* %2158 to <8 x float>*
  %2160 = load <8 x float>, <8 x float>* %2159, align 1, !tbaa !12
  %2161 = add nsw i32 %2101, 96
  %2162 = sext i32 %2161 to i64
  %2163 = getelementptr inbounds float, float* %3, i64 %2162
  %2164 = bitcast float* %2163 to <8 x float>*
  %2165 = load <8 x float>, <8 x float>* %2164, align 1, !tbaa !12
  %2166 = add nsw i32 %2101, 104
  %2167 = sext i32 %2166 to i64
  %2168 = getelementptr inbounds float, float* %3, i64 %2167
  %2169 = bitcast float* %2168 to <8 x float>*
  %2170 = load <8 x float>, <8 x float>* %2169, align 1, !tbaa !12
  %2171 = add nsw i32 %2101, 112
  %2172 = sext i32 %2171 to i64
  %2173 = getelementptr inbounds float, float* %3, i64 %2172
  %2174 = bitcast float* %2173 to <8 x float>*
  %2175 = load <8 x float>, <8 x float>* %2174, align 1, !tbaa !12
  %2176 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2105, <8 x float> %70, <8 x float> %2043) #10
  %2177 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2110, <8 x float> %70, <8 x float> %2047) #10
  %2178 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2115, <8 x float> %70, <8 x float> %2051) #10
  %2179 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2120, <8 x float> %70, <8 x float> %2055) #10
  %2180 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2125, <8 x float> %70, <8 x float> %2059) #10
  %2181 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2130, <8 x float> %70, <8 x float> %2063) #10
  %2182 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2135, <8 x float> %70, <8 x float> %2067) #10
  %2183 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2140, <8 x float> %70, <8 x float> %2071) #10
  %2184 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2145, <8 x float> %70, <8 x float> %2075) #10
  %2185 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2150, <8 x float> %70, <8 x float> %2079) #10
  %2186 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2155, <8 x float> %70, <8 x float> %2083) #10
  %2187 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2160, <8 x float> %70, <8 x float> %2087) #10
  %2188 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2165, <8 x float> %70, <8 x float> %2091) #10
  %2189 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2170, <8 x float> %70, <8 x float> %2095) #10
  %2190 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2175, <8 x float> %70, <8 x float> %2099) #10
  store <8 x float> %2176, <8 x float>* %2042, align 1, !tbaa !12
  store <8 x float> %2177, <8 x float>* %2046, align 1, !tbaa !12
  store <8 x float> %2178, <8 x float>* %2050, align 1, !tbaa !12
  store <8 x float> %2179, <8 x float>* %2054, align 1, !tbaa !12
  store <8 x float> %2180, <8 x float>* %2058, align 1, !tbaa !12
  store <8 x float> %2181, <8 x float>* %2062, align 1, !tbaa !12
  store <8 x float> %2182, <8 x float>* %2066, align 1, !tbaa !12
  store <8 x float> %2183, <8 x float>* %2070, align 1, !tbaa !12
  store <8 x float> %2184, <8 x float>* %2074, align 1, !tbaa !12
  store <8 x float> %2185, <8 x float>* %2078, align 1, !tbaa !12
  store <8 x float> %2186, <8 x float>* %2082, align 1, !tbaa !12
  store <8 x float> %2187, <8 x float>* %2086, align 1, !tbaa !12
  store <8 x float> %2188, <8 x float>* %2090, align 1, !tbaa !12
  store <8 x float> %2189, <8 x float>* %2094, align 1, !tbaa !12
  store <8 x float> %2190, <8 x float>* %2098, align 1, !tbaa !12
  %2191 = add nuw nsw i64 %1979, 120
  %2192 = icmp ult i64 %2191, %1771
  br i1 %2192, label %1978, label %1973
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 310
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui15_uk10.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
