; ModuleID = 'codes/matvec_ui10_uk12.cpp'
source_filename = "codes/matvec_ui10_uk12.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui10_uk12.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 80
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 96
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1662, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1662
  %21 = phi i64 [ %1663, %1662 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = or i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = or i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %1662

83:                                               ; preds = %20
  %84 = zext i32 %81 to i64
  %85 = trunc i64 %21 to i32
  %86 = mul nsw i32 %81, %85
  br label %93

87:                                               ; preds = %93
  br i1 %82, label %88, label %518

88:                                               ; preds = %87
  %89 = trunc i64 %26 to i32
  %90 = mul nsw i32 %81, %89
  %91 = sext i32 %90 to i64
  %92 = zext i32 %81 to i64
  br label %244

93:                                               ; preds = %83, %93
  %94 = phi i64 [ 0, %83 ], [ %236, %93 ]
  %95 = getelementptr inbounds float, float* %5, i64 %94
  %96 = getelementptr inbounds float, float* %95, i64 8
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %3, i64 %94
  %99 = getelementptr inbounds float, float* %98, i64 8
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %95, i64 16
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %98, i64 16
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %95, i64 24
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %98, i64 24
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %95, i64 32
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %98, i64 32
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %95, i64 40
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %98, i64 40
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %95, i64 48
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %98, i64 48
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %95, i64 56
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %98, i64 56
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %95, i64 64
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %98, i64 64
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %95, i64 72
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %98, i64 72
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %95, i64 80
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %98, i64 80
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = bitcast float* %95 to <8 x float>*
  %138 = load <8 x float>, <8 x float>* %137, align 1, !tbaa !12
  %139 = or i64 %94, 8
  %140 = getelementptr inbounds float, float* %5, i64 %139
  %141 = bitcast float* %140 to <8 x float>*
  %142 = load <8 x float>, <8 x float>* %141, align 1, !tbaa !12
  %143 = add nuw nsw i64 %94, 16
  %144 = getelementptr inbounds float, float* %5, i64 %143
  %145 = bitcast float* %144 to <8 x float>*
  %146 = load <8 x float>, <8 x float>* %145, align 1, !tbaa !12
  %147 = add nuw nsw i64 %94, 24
  %148 = getelementptr inbounds float, float* %5, i64 %147
  %149 = bitcast float* %148 to <8 x float>*
  %150 = load <8 x float>, <8 x float>* %149, align 1, !tbaa !12
  %151 = add nuw nsw i64 %94, 32
  %152 = getelementptr inbounds float, float* %5, i64 %151
  %153 = bitcast float* %152 to <8 x float>*
  %154 = load <8 x float>, <8 x float>* %153, align 1, !tbaa !12
  %155 = add nuw nsw i64 %94, 40
  %156 = getelementptr inbounds float, float* %5, i64 %155
  %157 = bitcast float* %156 to <8 x float>*
  %158 = load <8 x float>, <8 x float>* %157, align 1, !tbaa !12
  %159 = add nuw nsw i64 %94, 48
  %160 = getelementptr inbounds float, float* %5, i64 %159
  %161 = bitcast float* %160 to <8 x float>*
  %162 = load <8 x float>, <8 x float>* %161, align 1, !tbaa !12
  %163 = add nuw nsw i64 %94, 56
  %164 = getelementptr inbounds float, float* %5, i64 %163
  %165 = bitcast float* %164 to <8 x float>*
  %166 = load <8 x float>, <8 x float>* %165, align 1, !tbaa !12
  %167 = add nuw nsw i64 %94, 64
  %168 = getelementptr inbounds float, float* %5, i64 %167
  %169 = bitcast float* %168 to <8 x float>*
  %170 = load <8 x float>, <8 x float>* %169, align 1, !tbaa !12
  %171 = add nuw nsw i64 %94, 72
  %172 = getelementptr inbounds float, float* %5, i64 %171
  %173 = bitcast float* %172 to <8 x float>*
  %174 = load <8 x float>, <8 x float>* %173, align 1, !tbaa !12
  %175 = trunc i64 %94 to i32
  %176 = add nsw i32 %86, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds float, float* %3, i64 %177
  %179 = bitcast float* %178 to <8 x float>*
  %180 = load <8 x float>, <8 x float>* %179, align 1, !tbaa !12
  %181 = add nsw i32 %176, 8
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds float, float* %3, i64 %182
  %184 = bitcast float* %183 to <8 x float>*
  %185 = load <8 x float>, <8 x float>* %184, align 1, !tbaa !12
  %186 = add nsw i32 %176, 16
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds float, float* %3, i64 %187
  %189 = bitcast float* %188 to <8 x float>*
  %190 = load <8 x float>, <8 x float>* %189, align 1, !tbaa !12
  %191 = add nsw i32 %176, 24
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds float, float* %3, i64 %192
  %194 = bitcast float* %193 to <8 x float>*
  %195 = load <8 x float>, <8 x float>* %194, align 1, !tbaa !12
  %196 = add nsw i32 %176, 32
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds float, float* %3, i64 %197
  %199 = bitcast float* %198 to <8 x float>*
  %200 = load <8 x float>, <8 x float>* %199, align 1, !tbaa !12
  %201 = add nsw i32 %176, 40
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds float, float* %3, i64 %202
  %204 = bitcast float* %203 to <8 x float>*
  %205 = load <8 x float>, <8 x float>* %204, align 1, !tbaa !12
  %206 = add nsw i32 %176, 48
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds float, float* %3, i64 %207
  %209 = bitcast float* %208 to <8 x float>*
  %210 = load <8 x float>, <8 x float>* %209, align 1, !tbaa !12
  %211 = add nsw i32 %176, 56
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds float, float* %3, i64 %212
  %214 = bitcast float* %213 to <8 x float>*
  %215 = load <8 x float>, <8 x float>* %214, align 1, !tbaa !12
  %216 = add nsw i32 %176, 64
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds float, float* %3, i64 %217
  %219 = bitcast float* %218 to <8 x float>*
  %220 = load <8 x float>, <8 x float>* %219, align 1, !tbaa !12
  %221 = add nsw i32 %176, 72
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds float, float* %3, i64 %222
  %224 = bitcast float* %223 to <8 x float>*
  %225 = load <8 x float>, <8 x float>* %224, align 1, !tbaa !12
  %226 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %180, <8 x float> %25, <8 x float> %138) #10
  %227 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %185, <8 x float> %25, <8 x float> %142) #10
  %228 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %190, <8 x float> %25, <8 x float> %146) #10
  %229 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %195, <8 x float> %25, <8 x float> %150) #10
  %230 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %200, <8 x float> %25, <8 x float> %154) #10
  %231 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %205, <8 x float> %25, <8 x float> %158) #10
  %232 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %210, <8 x float> %25, <8 x float> %162) #10
  %233 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %215, <8 x float> %25, <8 x float> %166) #10
  %234 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %220, <8 x float> %25, <8 x float> %170) #10
  %235 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %225, <8 x float> %25, <8 x float> %174) #10
  store <8 x float> %226, <8 x float>* %137, align 1, !tbaa !12
  store <8 x float> %227, <8 x float>* %141, align 1, !tbaa !12
  store <8 x float> %228, <8 x float>* %145, align 1, !tbaa !12
  store <8 x float> %229, <8 x float>* %149, align 1, !tbaa !12
  store <8 x float> %230, <8 x float>* %153, align 1, !tbaa !12
  store <8 x float> %231, <8 x float>* %157, align 1, !tbaa !12
  store <8 x float> %232, <8 x float>* %161, align 1, !tbaa !12
  store <8 x float> %233, <8 x float>* %165, align 1, !tbaa !12
  store <8 x float> %234, <8 x float>* %169, align 1, !tbaa !12
  store <8 x float> %235, <8 x float>* %173, align 1, !tbaa !12
  %236 = add nuw nsw i64 %94, 80
  %237 = icmp ult i64 %236, %84
  br i1 %237, label %93, label %87

238:                                              ; preds = %244
  br i1 %82, label %239, label %518

239:                                              ; preds = %238
  %240 = trunc i64 %31 to i32
  %241 = mul nsw i32 %81, %240
  %242 = sext i32 %241 to i64
  %243 = zext i32 %81 to i64
  br label %384

244:                                              ; preds = %88, %244
  %245 = phi i64 [ 0, %88 ], [ %376, %244 ]
  %246 = getelementptr inbounds float, float* %5, i64 %245
  %247 = getelementptr inbounds float, float* %246, i64 8
  %248 = bitcast float* %247 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %248, i32 0, i32 1, i32 1)
  %249 = getelementptr inbounds float, float* %3, i64 %245
  %250 = getelementptr inbounds float, float* %249, i64 8
  %251 = bitcast float* %250 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %251, i32 0, i32 1, i32 1)
  %252 = getelementptr inbounds float, float* %246, i64 16
  %253 = bitcast float* %252 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %253, i32 0, i32 1, i32 1)
  %254 = getelementptr inbounds float, float* %249, i64 16
  %255 = bitcast float* %254 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %255, i32 0, i32 1, i32 1)
  %256 = getelementptr inbounds float, float* %246, i64 24
  %257 = bitcast float* %256 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %257, i32 0, i32 1, i32 1)
  %258 = getelementptr inbounds float, float* %249, i64 24
  %259 = bitcast float* %258 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %259, i32 0, i32 1, i32 1)
  %260 = getelementptr inbounds float, float* %246, i64 32
  %261 = bitcast float* %260 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %261, i32 0, i32 1, i32 1)
  %262 = getelementptr inbounds float, float* %249, i64 32
  %263 = bitcast float* %262 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %263, i32 0, i32 1, i32 1)
  %264 = getelementptr inbounds float, float* %246, i64 40
  %265 = bitcast float* %264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %265, i32 0, i32 1, i32 1)
  %266 = getelementptr inbounds float, float* %249, i64 40
  %267 = bitcast float* %266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %267, i32 0, i32 1, i32 1)
  %268 = getelementptr inbounds float, float* %246, i64 48
  %269 = bitcast float* %268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %269, i32 0, i32 1, i32 1)
  %270 = getelementptr inbounds float, float* %249, i64 48
  %271 = bitcast float* %270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %271, i32 0, i32 1, i32 1)
  %272 = getelementptr inbounds float, float* %246, i64 56
  %273 = bitcast float* %272 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %273, i32 0, i32 1, i32 1)
  %274 = getelementptr inbounds float, float* %249, i64 56
  %275 = bitcast float* %274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %275, i32 0, i32 1, i32 1)
  %276 = getelementptr inbounds float, float* %246, i64 64
  %277 = bitcast float* %276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %277, i32 0, i32 1, i32 1)
  %278 = getelementptr inbounds float, float* %249, i64 64
  %279 = bitcast float* %278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %279, i32 0, i32 1, i32 1)
  %280 = getelementptr inbounds float, float* %246, i64 72
  %281 = bitcast float* %280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %281, i32 0, i32 1, i32 1)
  %282 = getelementptr inbounds float, float* %249, i64 72
  %283 = bitcast float* %282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %283, i32 0, i32 1, i32 1)
  %284 = getelementptr inbounds float, float* %246, i64 80
  %285 = bitcast float* %284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %285, i32 0, i32 1, i32 1)
  %286 = getelementptr inbounds float, float* %249, i64 80
  %287 = bitcast float* %286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %287, i32 0, i32 1, i32 1)
  %288 = bitcast float* %246 to <8 x float>*
  %289 = load <8 x float>, <8 x float>* %288, align 1, !tbaa !12
  %290 = or i64 %245, 8
  %291 = getelementptr inbounds float, float* %5, i64 %290
  %292 = bitcast float* %291 to <8 x float>*
  %293 = load <8 x float>, <8 x float>* %292, align 1, !tbaa !12
  %294 = add nuw nsw i64 %245, 16
  %295 = getelementptr inbounds float, float* %5, i64 %294
  %296 = bitcast float* %295 to <8 x float>*
  %297 = load <8 x float>, <8 x float>* %296, align 1, !tbaa !12
  %298 = add nuw nsw i64 %245, 24
  %299 = getelementptr inbounds float, float* %5, i64 %298
  %300 = bitcast float* %299 to <8 x float>*
  %301 = load <8 x float>, <8 x float>* %300, align 1, !tbaa !12
  %302 = add nuw nsw i64 %245, 32
  %303 = getelementptr inbounds float, float* %5, i64 %302
  %304 = bitcast float* %303 to <8 x float>*
  %305 = load <8 x float>, <8 x float>* %304, align 1, !tbaa !12
  %306 = add nuw nsw i64 %245, 40
  %307 = getelementptr inbounds float, float* %5, i64 %306
  %308 = bitcast float* %307 to <8 x float>*
  %309 = load <8 x float>, <8 x float>* %308, align 1, !tbaa !12
  %310 = add nuw nsw i64 %245, 48
  %311 = getelementptr inbounds float, float* %5, i64 %310
  %312 = bitcast float* %311 to <8 x float>*
  %313 = load <8 x float>, <8 x float>* %312, align 1, !tbaa !12
  %314 = add nuw nsw i64 %245, 56
  %315 = getelementptr inbounds float, float* %5, i64 %314
  %316 = bitcast float* %315 to <8 x float>*
  %317 = load <8 x float>, <8 x float>* %316, align 1, !tbaa !12
  %318 = add nuw nsw i64 %245, 64
  %319 = getelementptr inbounds float, float* %5, i64 %318
  %320 = bitcast float* %319 to <8 x float>*
  %321 = load <8 x float>, <8 x float>* %320, align 1, !tbaa !12
  %322 = add nuw nsw i64 %245, 72
  %323 = getelementptr inbounds float, float* %5, i64 %322
  %324 = bitcast float* %323 to <8 x float>*
  %325 = load <8 x float>, <8 x float>* %324, align 1, !tbaa !12
  %326 = add nsw i64 %245, %91
  %327 = getelementptr inbounds float, float* %3, i64 %326
  %328 = bitcast float* %327 to <8 x float>*
  %329 = load <8 x float>, <8 x float>* %328, align 1, !tbaa !12
  %330 = add nsw i64 %326, 8
  %331 = getelementptr inbounds float, float* %3, i64 %330
  %332 = bitcast float* %331 to <8 x float>*
  %333 = load <8 x float>, <8 x float>* %332, align 1, !tbaa !12
  %334 = add nsw i64 %326, 16
  %335 = getelementptr inbounds float, float* %3, i64 %334
  %336 = bitcast float* %335 to <8 x float>*
  %337 = load <8 x float>, <8 x float>* %336, align 1, !tbaa !12
  %338 = add nsw i64 %326, 24
  %339 = getelementptr inbounds float, float* %3, i64 %338
  %340 = bitcast float* %339 to <8 x float>*
  %341 = load <8 x float>, <8 x float>* %340, align 1, !tbaa !12
  %342 = add nsw i64 %326, 32
  %343 = getelementptr inbounds float, float* %3, i64 %342
  %344 = bitcast float* %343 to <8 x float>*
  %345 = load <8 x float>, <8 x float>* %344, align 1, !tbaa !12
  %346 = add nsw i64 %326, 40
  %347 = getelementptr inbounds float, float* %3, i64 %346
  %348 = bitcast float* %347 to <8 x float>*
  %349 = load <8 x float>, <8 x float>* %348, align 1, !tbaa !12
  %350 = add nsw i64 %326, 48
  %351 = getelementptr inbounds float, float* %3, i64 %350
  %352 = bitcast float* %351 to <8 x float>*
  %353 = load <8 x float>, <8 x float>* %352, align 1, !tbaa !12
  %354 = add nsw i64 %326, 56
  %355 = getelementptr inbounds float, float* %3, i64 %354
  %356 = bitcast float* %355 to <8 x float>*
  %357 = load <8 x float>, <8 x float>* %356, align 1, !tbaa !12
  %358 = add nsw i64 %326, 64
  %359 = getelementptr inbounds float, float* %3, i64 %358
  %360 = bitcast float* %359 to <8 x float>*
  %361 = load <8 x float>, <8 x float>* %360, align 1, !tbaa !12
  %362 = add nsw i64 %326, 72
  %363 = getelementptr inbounds float, float* %3, i64 %362
  %364 = bitcast float* %363 to <8 x float>*
  %365 = load <8 x float>, <8 x float>* %364, align 1, !tbaa !12
  %366 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %329, <8 x float> %30, <8 x float> %289) #10
  %367 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %333, <8 x float> %30, <8 x float> %293) #10
  %368 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %337, <8 x float> %30, <8 x float> %297) #10
  %369 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %341, <8 x float> %30, <8 x float> %301) #10
  %370 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %345, <8 x float> %30, <8 x float> %305) #10
  %371 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %349, <8 x float> %30, <8 x float> %309) #10
  %372 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %353, <8 x float> %30, <8 x float> %313) #10
  %373 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %357, <8 x float> %30, <8 x float> %317) #10
  %374 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %361, <8 x float> %30, <8 x float> %321) #10
  %375 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %365, <8 x float> %30, <8 x float> %325) #10
  store <8 x float> %366, <8 x float>* %288, align 1, !tbaa !12
  store <8 x float> %367, <8 x float>* %292, align 1, !tbaa !12
  store <8 x float> %368, <8 x float>* %296, align 1, !tbaa !12
  store <8 x float> %369, <8 x float>* %300, align 1, !tbaa !12
  store <8 x float> %370, <8 x float>* %304, align 1, !tbaa !12
  store <8 x float> %371, <8 x float>* %308, align 1, !tbaa !12
  store <8 x float> %372, <8 x float>* %312, align 1, !tbaa !12
  store <8 x float> %373, <8 x float>* %316, align 1, !tbaa !12
  store <8 x float> %374, <8 x float>* %320, align 1, !tbaa !12
  store <8 x float> %375, <8 x float>* %324, align 1, !tbaa !12
  %376 = add nuw nsw i64 %245, 80
  %377 = icmp ult i64 %376, %92
  br i1 %377, label %244, label %238

378:                                              ; preds = %384
  br i1 %82, label %379, label %518

379:                                              ; preds = %378
  %380 = trunc i64 %36 to i32
  %381 = mul nsw i32 %81, %380
  %382 = sext i32 %381 to i64
  %383 = zext i32 %81 to i64
  br label %525

384:                                              ; preds = %239, %384
  %385 = phi i64 [ 0, %239 ], [ %516, %384 ]
  %386 = getelementptr inbounds float, float* %5, i64 %385
  %387 = getelementptr inbounds float, float* %386, i64 8
  %388 = bitcast float* %387 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %388, i32 0, i32 1, i32 1)
  %389 = getelementptr inbounds float, float* %3, i64 %385
  %390 = getelementptr inbounds float, float* %389, i64 8
  %391 = bitcast float* %390 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %391, i32 0, i32 1, i32 1)
  %392 = getelementptr inbounds float, float* %386, i64 16
  %393 = bitcast float* %392 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %393, i32 0, i32 1, i32 1)
  %394 = getelementptr inbounds float, float* %389, i64 16
  %395 = bitcast float* %394 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %395, i32 0, i32 1, i32 1)
  %396 = getelementptr inbounds float, float* %386, i64 24
  %397 = bitcast float* %396 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %397, i32 0, i32 1, i32 1)
  %398 = getelementptr inbounds float, float* %389, i64 24
  %399 = bitcast float* %398 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %399, i32 0, i32 1, i32 1)
  %400 = getelementptr inbounds float, float* %386, i64 32
  %401 = bitcast float* %400 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %401, i32 0, i32 1, i32 1)
  %402 = getelementptr inbounds float, float* %389, i64 32
  %403 = bitcast float* %402 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %403, i32 0, i32 1, i32 1)
  %404 = getelementptr inbounds float, float* %386, i64 40
  %405 = bitcast float* %404 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %405, i32 0, i32 1, i32 1)
  %406 = getelementptr inbounds float, float* %389, i64 40
  %407 = bitcast float* %406 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %407, i32 0, i32 1, i32 1)
  %408 = getelementptr inbounds float, float* %386, i64 48
  %409 = bitcast float* %408 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %409, i32 0, i32 1, i32 1)
  %410 = getelementptr inbounds float, float* %389, i64 48
  %411 = bitcast float* %410 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %411, i32 0, i32 1, i32 1)
  %412 = getelementptr inbounds float, float* %386, i64 56
  %413 = bitcast float* %412 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %413, i32 0, i32 1, i32 1)
  %414 = getelementptr inbounds float, float* %389, i64 56
  %415 = bitcast float* %414 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %415, i32 0, i32 1, i32 1)
  %416 = getelementptr inbounds float, float* %386, i64 64
  %417 = bitcast float* %416 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %417, i32 0, i32 1, i32 1)
  %418 = getelementptr inbounds float, float* %389, i64 64
  %419 = bitcast float* %418 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %419, i32 0, i32 1, i32 1)
  %420 = getelementptr inbounds float, float* %386, i64 72
  %421 = bitcast float* %420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %421, i32 0, i32 1, i32 1)
  %422 = getelementptr inbounds float, float* %389, i64 72
  %423 = bitcast float* %422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %423, i32 0, i32 1, i32 1)
  %424 = getelementptr inbounds float, float* %386, i64 80
  %425 = bitcast float* %424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %425, i32 0, i32 1, i32 1)
  %426 = getelementptr inbounds float, float* %389, i64 80
  %427 = bitcast float* %426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %427, i32 0, i32 1, i32 1)
  %428 = bitcast float* %386 to <8 x float>*
  %429 = load <8 x float>, <8 x float>* %428, align 1, !tbaa !12
  %430 = or i64 %385, 8
  %431 = getelementptr inbounds float, float* %5, i64 %430
  %432 = bitcast float* %431 to <8 x float>*
  %433 = load <8 x float>, <8 x float>* %432, align 1, !tbaa !12
  %434 = add nuw nsw i64 %385, 16
  %435 = getelementptr inbounds float, float* %5, i64 %434
  %436 = bitcast float* %435 to <8 x float>*
  %437 = load <8 x float>, <8 x float>* %436, align 1, !tbaa !12
  %438 = add nuw nsw i64 %385, 24
  %439 = getelementptr inbounds float, float* %5, i64 %438
  %440 = bitcast float* %439 to <8 x float>*
  %441 = load <8 x float>, <8 x float>* %440, align 1, !tbaa !12
  %442 = add nuw nsw i64 %385, 32
  %443 = getelementptr inbounds float, float* %5, i64 %442
  %444 = bitcast float* %443 to <8 x float>*
  %445 = load <8 x float>, <8 x float>* %444, align 1, !tbaa !12
  %446 = add nuw nsw i64 %385, 40
  %447 = getelementptr inbounds float, float* %5, i64 %446
  %448 = bitcast float* %447 to <8 x float>*
  %449 = load <8 x float>, <8 x float>* %448, align 1, !tbaa !12
  %450 = add nuw nsw i64 %385, 48
  %451 = getelementptr inbounds float, float* %5, i64 %450
  %452 = bitcast float* %451 to <8 x float>*
  %453 = load <8 x float>, <8 x float>* %452, align 1, !tbaa !12
  %454 = add nuw nsw i64 %385, 56
  %455 = getelementptr inbounds float, float* %5, i64 %454
  %456 = bitcast float* %455 to <8 x float>*
  %457 = load <8 x float>, <8 x float>* %456, align 1, !tbaa !12
  %458 = add nuw nsw i64 %385, 64
  %459 = getelementptr inbounds float, float* %5, i64 %458
  %460 = bitcast float* %459 to <8 x float>*
  %461 = load <8 x float>, <8 x float>* %460, align 1, !tbaa !12
  %462 = add nuw nsw i64 %385, 72
  %463 = getelementptr inbounds float, float* %5, i64 %462
  %464 = bitcast float* %463 to <8 x float>*
  %465 = load <8 x float>, <8 x float>* %464, align 1, !tbaa !12
  %466 = add nsw i64 %385, %242
  %467 = getelementptr inbounds float, float* %3, i64 %466
  %468 = bitcast float* %467 to <8 x float>*
  %469 = load <8 x float>, <8 x float>* %468, align 1, !tbaa !12
  %470 = add nsw i64 %466, 8
  %471 = getelementptr inbounds float, float* %3, i64 %470
  %472 = bitcast float* %471 to <8 x float>*
  %473 = load <8 x float>, <8 x float>* %472, align 1, !tbaa !12
  %474 = add nsw i64 %466, 16
  %475 = getelementptr inbounds float, float* %3, i64 %474
  %476 = bitcast float* %475 to <8 x float>*
  %477 = load <8 x float>, <8 x float>* %476, align 1, !tbaa !12
  %478 = add nsw i64 %466, 24
  %479 = getelementptr inbounds float, float* %3, i64 %478
  %480 = bitcast float* %479 to <8 x float>*
  %481 = load <8 x float>, <8 x float>* %480, align 1, !tbaa !12
  %482 = add nsw i64 %466, 32
  %483 = getelementptr inbounds float, float* %3, i64 %482
  %484 = bitcast float* %483 to <8 x float>*
  %485 = load <8 x float>, <8 x float>* %484, align 1, !tbaa !12
  %486 = add nsw i64 %466, 40
  %487 = getelementptr inbounds float, float* %3, i64 %486
  %488 = bitcast float* %487 to <8 x float>*
  %489 = load <8 x float>, <8 x float>* %488, align 1, !tbaa !12
  %490 = add nsw i64 %466, 48
  %491 = getelementptr inbounds float, float* %3, i64 %490
  %492 = bitcast float* %491 to <8 x float>*
  %493 = load <8 x float>, <8 x float>* %492, align 1, !tbaa !12
  %494 = add nsw i64 %466, 56
  %495 = getelementptr inbounds float, float* %3, i64 %494
  %496 = bitcast float* %495 to <8 x float>*
  %497 = load <8 x float>, <8 x float>* %496, align 1, !tbaa !12
  %498 = add nsw i64 %466, 64
  %499 = getelementptr inbounds float, float* %3, i64 %498
  %500 = bitcast float* %499 to <8 x float>*
  %501 = load <8 x float>, <8 x float>* %500, align 1, !tbaa !12
  %502 = add nsw i64 %466, 72
  %503 = getelementptr inbounds float, float* %3, i64 %502
  %504 = bitcast float* %503 to <8 x float>*
  %505 = load <8 x float>, <8 x float>* %504, align 1, !tbaa !12
  %506 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %469, <8 x float> %35, <8 x float> %429) #10
  %507 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %473, <8 x float> %35, <8 x float> %433) #10
  %508 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %477, <8 x float> %35, <8 x float> %437) #10
  %509 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %481, <8 x float> %35, <8 x float> %441) #10
  %510 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %485, <8 x float> %35, <8 x float> %445) #10
  %511 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %489, <8 x float> %35, <8 x float> %449) #10
  %512 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %493, <8 x float> %35, <8 x float> %453) #10
  %513 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %497, <8 x float> %35, <8 x float> %457) #10
  %514 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %501, <8 x float> %35, <8 x float> %461) #10
  %515 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %505, <8 x float> %35, <8 x float> %465) #10
  store <8 x float> %506, <8 x float>* %428, align 1, !tbaa !12
  store <8 x float> %507, <8 x float>* %432, align 1, !tbaa !12
  store <8 x float> %508, <8 x float>* %436, align 1, !tbaa !12
  store <8 x float> %509, <8 x float>* %440, align 1, !tbaa !12
  store <8 x float> %510, <8 x float>* %444, align 1, !tbaa !12
  store <8 x float> %511, <8 x float>* %448, align 1, !tbaa !12
  store <8 x float> %512, <8 x float>* %452, align 1, !tbaa !12
  store <8 x float> %513, <8 x float>* %456, align 1, !tbaa !12
  store <8 x float> %514, <8 x float>* %460, align 1, !tbaa !12
  store <8 x float> %515, <8 x float>* %464, align 1, !tbaa !12
  %516 = add nuw nsw i64 %385, 80
  %517 = icmp ult i64 %516, %243
  br i1 %517, label %384, label %378

518:                                              ; preds = %525, %87, %238, %378
  %519 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %520 = icmp sgt i32 %519, 0
  br i1 %520, label %521, label %1662

521:                                              ; preds = %518
  %522 = zext i32 %519 to i64
  %523 = trunc i64 %41 to i32
  %524 = mul nsw i32 %519, %523
  br label %665

525:                                              ; preds = %379, %525
  %526 = phi i64 [ 0, %379 ], [ %657, %525 ]
  %527 = getelementptr inbounds float, float* %5, i64 %526
  %528 = getelementptr inbounds float, float* %527, i64 8
  %529 = bitcast float* %528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %529, i32 0, i32 1, i32 1)
  %530 = getelementptr inbounds float, float* %3, i64 %526
  %531 = getelementptr inbounds float, float* %530, i64 8
  %532 = bitcast float* %531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %532, i32 0, i32 1, i32 1)
  %533 = getelementptr inbounds float, float* %527, i64 16
  %534 = bitcast float* %533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %534, i32 0, i32 1, i32 1)
  %535 = getelementptr inbounds float, float* %530, i64 16
  %536 = bitcast float* %535 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %536, i32 0, i32 1, i32 1)
  %537 = getelementptr inbounds float, float* %527, i64 24
  %538 = bitcast float* %537 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %538, i32 0, i32 1, i32 1)
  %539 = getelementptr inbounds float, float* %530, i64 24
  %540 = bitcast float* %539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %540, i32 0, i32 1, i32 1)
  %541 = getelementptr inbounds float, float* %527, i64 32
  %542 = bitcast float* %541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %542, i32 0, i32 1, i32 1)
  %543 = getelementptr inbounds float, float* %530, i64 32
  %544 = bitcast float* %543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %544, i32 0, i32 1, i32 1)
  %545 = getelementptr inbounds float, float* %527, i64 40
  %546 = bitcast float* %545 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %546, i32 0, i32 1, i32 1)
  %547 = getelementptr inbounds float, float* %530, i64 40
  %548 = bitcast float* %547 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %548, i32 0, i32 1, i32 1)
  %549 = getelementptr inbounds float, float* %527, i64 48
  %550 = bitcast float* %549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %550, i32 0, i32 1, i32 1)
  %551 = getelementptr inbounds float, float* %530, i64 48
  %552 = bitcast float* %551 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %552, i32 0, i32 1, i32 1)
  %553 = getelementptr inbounds float, float* %527, i64 56
  %554 = bitcast float* %553 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %554, i32 0, i32 1, i32 1)
  %555 = getelementptr inbounds float, float* %530, i64 56
  %556 = bitcast float* %555 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %556, i32 0, i32 1, i32 1)
  %557 = getelementptr inbounds float, float* %527, i64 64
  %558 = bitcast float* %557 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %558, i32 0, i32 1, i32 1)
  %559 = getelementptr inbounds float, float* %530, i64 64
  %560 = bitcast float* %559 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %560, i32 0, i32 1, i32 1)
  %561 = getelementptr inbounds float, float* %527, i64 72
  %562 = bitcast float* %561 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %562, i32 0, i32 1, i32 1)
  %563 = getelementptr inbounds float, float* %530, i64 72
  %564 = bitcast float* %563 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %564, i32 0, i32 1, i32 1)
  %565 = getelementptr inbounds float, float* %527, i64 80
  %566 = bitcast float* %565 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %566, i32 0, i32 1, i32 1)
  %567 = getelementptr inbounds float, float* %530, i64 80
  %568 = bitcast float* %567 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %568, i32 0, i32 1, i32 1)
  %569 = bitcast float* %527 to <8 x float>*
  %570 = load <8 x float>, <8 x float>* %569, align 1, !tbaa !12
  %571 = or i64 %526, 8
  %572 = getelementptr inbounds float, float* %5, i64 %571
  %573 = bitcast float* %572 to <8 x float>*
  %574 = load <8 x float>, <8 x float>* %573, align 1, !tbaa !12
  %575 = add nuw nsw i64 %526, 16
  %576 = getelementptr inbounds float, float* %5, i64 %575
  %577 = bitcast float* %576 to <8 x float>*
  %578 = load <8 x float>, <8 x float>* %577, align 1, !tbaa !12
  %579 = add nuw nsw i64 %526, 24
  %580 = getelementptr inbounds float, float* %5, i64 %579
  %581 = bitcast float* %580 to <8 x float>*
  %582 = load <8 x float>, <8 x float>* %581, align 1, !tbaa !12
  %583 = add nuw nsw i64 %526, 32
  %584 = getelementptr inbounds float, float* %5, i64 %583
  %585 = bitcast float* %584 to <8 x float>*
  %586 = load <8 x float>, <8 x float>* %585, align 1, !tbaa !12
  %587 = add nuw nsw i64 %526, 40
  %588 = getelementptr inbounds float, float* %5, i64 %587
  %589 = bitcast float* %588 to <8 x float>*
  %590 = load <8 x float>, <8 x float>* %589, align 1, !tbaa !12
  %591 = add nuw nsw i64 %526, 48
  %592 = getelementptr inbounds float, float* %5, i64 %591
  %593 = bitcast float* %592 to <8 x float>*
  %594 = load <8 x float>, <8 x float>* %593, align 1, !tbaa !12
  %595 = add nuw nsw i64 %526, 56
  %596 = getelementptr inbounds float, float* %5, i64 %595
  %597 = bitcast float* %596 to <8 x float>*
  %598 = load <8 x float>, <8 x float>* %597, align 1, !tbaa !12
  %599 = add nuw nsw i64 %526, 64
  %600 = getelementptr inbounds float, float* %5, i64 %599
  %601 = bitcast float* %600 to <8 x float>*
  %602 = load <8 x float>, <8 x float>* %601, align 1, !tbaa !12
  %603 = add nuw nsw i64 %526, 72
  %604 = getelementptr inbounds float, float* %5, i64 %603
  %605 = bitcast float* %604 to <8 x float>*
  %606 = load <8 x float>, <8 x float>* %605, align 1, !tbaa !12
  %607 = add nsw i64 %526, %382
  %608 = getelementptr inbounds float, float* %3, i64 %607
  %609 = bitcast float* %608 to <8 x float>*
  %610 = load <8 x float>, <8 x float>* %609, align 1, !tbaa !12
  %611 = add nsw i64 %607, 8
  %612 = getelementptr inbounds float, float* %3, i64 %611
  %613 = bitcast float* %612 to <8 x float>*
  %614 = load <8 x float>, <8 x float>* %613, align 1, !tbaa !12
  %615 = add nsw i64 %607, 16
  %616 = getelementptr inbounds float, float* %3, i64 %615
  %617 = bitcast float* %616 to <8 x float>*
  %618 = load <8 x float>, <8 x float>* %617, align 1, !tbaa !12
  %619 = add nsw i64 %607, 24
  %620 = getelementptr inbounds float, float* %3, i64 %619
  %621 = bitcast float* %620 to <8 x float>*
  %622 = load <8 x float>, <8 x float>* %621, align 1, !tbaa !12
  %623 = add nsw i64 %607, 32
  %624 = getelementptr inbounds float, float* %3, i64 %623
  %625 = bitcast float* %624 to <8 x float>*
  %626 = load <8 x float>, <8 x float>* %625, align 1, !tbaa !12
  %627 = add nsw i64 %607, 40
  %628 = getelementptr inbounds float, float* %3, i64 %627
  %629 = bitcast float* %628 to <8 x float>*
  %630 = load <8 x float>, <8 x float>* %629, align 1, !tbaa !12
  %631 = add nsw i64 %607, 48
  %632 = getelementptr inbounds float, float* %3, i64 %631
  %633 = bitcast float* %632 to <8 x float>*
  %634 = load <8 x float>, <8 x float>* %633, align 1, !tbaa !12
  %635 = add nsw i64 %607, 56
  %636 = getelementptr inbounds float, float* %3, i64 %635
  %637 = bitcast float* %636 to <8 x float>*
  %638 = load <8 x float>, <8 x float>* %637, align 1, !tbaa !12
  %639 = add nsw i64 %607, 64
  %640 = getelementptr inbounds float, float* %3, i64 %639
  %641 = bitcast float* %640 to <8 x float>*
  %642 = load <8 x float>, <8 x float>* %641, align 1, !tbaa !12
  %643 = add nsw i64 %607, 72
  %644 = getelementptr inbounds float, float* %3, i64 %643
  %645 = bitcast float* %644 to <8 x float>*
  %646 = load <8 x float>, <8 x float>* %645, align 1, !tbaa !12
  %647 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %610, <8 x float> %40, <8 x float> %570) #10
  %648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %614, <8 x float> %40, <8 x float> %574) #10
  %649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %618, <8 x float> %40, <8 x float> %578) #10
  %650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %622, <8 x float> %40, <8 x float> %582) #10
  %651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %626, <8 x float> %40, <8 x float> %586) #10
  %652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %630, <8 x float> %40, <8 x float> %590) #10
  %653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %634, <8 x float> %40, <8 x float> %594) #10
  %654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %638, <8 x float> %40, <8 x float> %598) #10
  %655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %642, <8 x float> %40, <8 x float> %602) #10
  %656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %646, <8 x float> %40, <8 x float> %606) #10
  store <8 x float> %647, <8 x float>* %569, align 1, !tbaa !12
  store <8 x float> %648, <8 x float>* %573, align 1, !tbaa !12
  store <8 x float> %649, <8 x float>* %577, align 1, !tbaa !12
  store <8 x float> %650, <8 x float>* %581, align 1, !tbaa !12
  store <8 x float> %651, <8 x float>* %585, align 1, !tbaa !12
  store <8 x float> %652, <8 x float>* %589, align 1, !tbaa !12
  store <8 x float> %653, <8 x float>* %593, align 1, !tbaa !12
  store <8 x float> %654, <8 x float>* %597, align 1, !tbaa !12
  store <8 x float> %655, <8 x float>* %601, align 1, !tbaa !12
  store <8 x float> %656, <8 x float>* %605, align 1, !tbaa !12
  %657 = add nuw nsw i64 %526, 80
  %658 = icmp ult i64 %657, %383
  br i1 %658, label %525, label %518

659:                                              ; preds = %665
  br i1 %520, label %660, label %1090

660:                                              ; preds = %659
  %661 = trunc i64 %46 to i32
  %662 = mul nsw i32 %519, %661
  %663 = sext i32 %662 to i64
  %664 = zext i32 %519 to i64
  br label %816

665:                                              ; preds = %521, %665
  %666 = phi i64 [ 0, %521 ], [ %808, %665 ]
  %667 = getelementptr inbounds float, float* %5, i64 %666
  %668 = getelementptr inbounds float, float* %667, i64 8
  %669 = bitcast float* %668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %669, i32 0, i32 1, i32 1)
  %670 = getelementptr inbounds float, float* %3, i64 %666
  %671 = getelementptr inbounds float, float* %670, i64 8
  %672 = bitcast float* %671 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %672, i32 0, i32 1, i32 1)
  %673 = getelementptr inbounds float, float* %667, i64 16
  %674 = bitcast float* %673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %674, i32 0, i32 1, i32 1)
  %675 = getelementptr inbounds float, float* %670, i64 16
  %676 = bitcast float* %675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %676, i32 0, i32 1, i32 1)
  %677 = getelementptr inbounds float, float* %667, i64 24
  %678 = bitcast float* %677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %678, i32 0, i32 1, i32 1)
  %679 = getelementptr inbounds float, float* %670, i64 24
  %680 = bitcast float* %679 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %680, i32 0, i32 1, i32 1)
  %681 = getelementptr inbounds float, float* %667, i64 32
  %682 = bitcast float* %681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %682, i32 0, i32 1, i32 1)
  %683 = getelementptr inbounds float, float* %670, i64 32
  %684 = bitcast float* %683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %684, i32 0, i32 1, i32 1)
  %685 = getelementptr inbounds float, float* %667, i64 40
  %686 = bitcast float* %685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %686, i32 0, i32 1, i32 1)
  %687 = getelementptr inbounds float, float* %670, i64 40
  %688 = bitcast float* %687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %688, i32 0, i32 1, i32 1)
  %689 = getelementptr inbounds float, float* %667, i64 48
  %690 = bitcast float* %689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %690, i32 0, i32 1, i32 1)
  %691 = getelementptr inbounds float, float* %670, i64 48
  %692 = bitcast float* %691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %692, i32 0, i32 1, i32 1)
  %693 = getelementptr inbounds float, float* %667, i64 56
  %694 = bitcast float* %693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %694, i32 0, i32 1, i32 1)
  %695 = getelementptr inbounds float, float* %670, i64 56
  %696 = bitcast float* %695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %696, i32 0, i32 1, i32 1)
  %697 = getelementptr inbounds float, float* %667, i64 64
  %698 = bitcast float* %697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %698, i32 0, i32 1, i32 1)
  %699 = getelementptr inbounds float, float* %670, i64 64
  %700 = bitcast float* %699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %700, i32 0, i32 1, i32 1)
  %701 = getelementptr inbounds float, float* %667, i64 72
  %702 = bitcast float* %701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %702, i32 0, i32 1, i32 1)
  %703 = getelementptr inbounds float, float* %670, i64 72
  %704 = bitcast float* %703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %704, i32 0, i32 1, i32 1)
  %705 = getelementptr inbounds float, float* %667, i64 80
  %706 = bitcast float* %705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %706, i32 0, i32 1, i32 1)
  %707 = getelementptr inbounds float, float* %670, i64 80
  %708 = bitcast float* %707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %708, i32 0, i32 1, i32 1)
  %709 = bitcast float* %667 to <8 x float>*
  %710 = load <8 x float>, <8 x float>* %709, align 1, !tbaa !12
  %711 = or i64 %666, 8
  %712 = getelementptr inbounds float, float* %5, i64 %711
  %713 = bitcast float* %712 to <8 x float>*
  %714 = load <8 x float>, <8 x float>* %713, align 1, !tbaa !12
  %715 = add nuw nsw i64 %666, 16
  %716 = getelementptr inbounds float, float* %5, i64 %715
  %717 = bitcast float* %716 to <8 x float>*
  %718 = load <8 x float>, <8 x float>* %717, align 1, !tbaa !12
  %719 = add nuw nsw i64 %666, 24
  %720 = getelementptr inbounds float, float* %5, i64 %719
  %721 = bitcast float* %720 to <8 x float>*
  %722 = load <8 x float>, <8 x float>* %721, align 1, !tbaa !12
  %723 = add nuw nsw i64 %666, 32
  %724 = getelementptr inbounds float, float* %5, i64 %723
  %725 = bitcast float* %724 to <8 x float>*
  %726 = load <8 x float>, <8 x float>* %725, align 1, !tbaa !12
  %727 = add nuw nsw i64 %666, 40
  %728 = getelementptr inbounds float, float* %5, i64 %727
  %729 = bitcast float* %728 to <8 x float>*
  %730 = load <8 x float>, <8 x float>* %729, align 1, !tbaa !12
  %731 = add nuw nsw i64 %666, 48
  %732 = getelementptr inbounds float, float* %5, i64 %731
  %733 = bitcast float* %732 to <8 x float>*
  %734 = load <8 x float>, <8 x float>* %733, align 1, !tbaa !12
  %735 = add nuw nsw i64 %666, 56
  %736 = getelementptr inbounds float, float* %5, i64 %735
  %737 = bitcast float* %736 to <8 x float>*
  %738 = load <8 x float>, <8 x float>* %737, align 1, !tbaa !12
  %739 = add nuw nsw i64 %666, 64
  %740 = getelementptr inbounds float, float* %5, i64 %739
  %741 = bitcast float* %740 to <8 x float>*
  %742 = load <8 x float>, <8 x float>* %741, align 1, !tbaa !12
  %743 = add nuw nsw i64 %666, 72
  %744 = getelementptr inbounds float, float* %5, i64 %743
  %745 = bitcast float* %744 to <8 x float>*
  %746 = load <8 x float>, <8 x float>* %745, align 1, !tbaa !12
  %747 = trunc i64 %666 to i32
  %748 = add nsw i32 %524, %747
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds float, float* %3, i64 %749
  %751 = bitcast float* %750 to <8 x float>*
  %752 = load <8 x float>, <8 x float>* %751, align 1, !tbaa !12
  %753 = add nsw i32 %748, 8
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds float, float* %3, i64 %754
  %756 = bitcast float* %755 to <8 x float>*
  %757 = load <8 x float>, <8 x float>* %756, align 1, !tbaa !12
  %758 = add nsw i32 %748, 16
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds float, float* %3, i64 %759
  %761 = bitcast float* %760 to <8 x float>*
  %762 = load <8 x float>, <8 x float>* %761, align 1, !tbaa !12
  %763 = add nsw i32 %748, 24
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds float, float* %3, i64 %764
  %766 = bitcast float* %765 to <8 x float>*
  %767 = load <8 x float>, <8 x float>* %766, align 1, !tbaa !12
  %768 = add nsw i32 %748, 32
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds float, float* %3, i64 %769
  %771 = bitcast float* %770 to <8 x float>*
  %772 = load <8 x float>, <8 x float>* %771, align 1, !tbaa !12
  %773 = add nsw i32 %748, 40
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds float, float* %3, i64 %774
  %776 = bitcast float* %775 to <8 x float>*
  %777 = load <8 x float>, <8 x float>* %776, align 1, !tbaa !12
  %778 = add nsw i32 %748, 48
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds float, float* %3, i64 %779
  %781 = bitcast float* %780 to <8 x float>*
  %782 = load <8 x float>, <8 x float>* %781, align 1, !tbaa !12
  %783 = add nsw i32 %748, 56
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds float, float* %3, i64 %784
  %786 = bitcast float* %785 to <8 x float>*
  %787 = load <8 x float>, <8 x float>* %786, align 1, !tbaa !12
  %788 = add nsw i32 %748, 64
  %789 = sext i32 %788 to i64
  %790 = getelementptr inbounds float, float* %3, i64 %789
  %791 = bitcast float* %790 to <8 x float>*
  %792 = load <8 x float>, <8 x float>* %791, align 1, !tbaa !12
  %793 = add nsw i32 %748, 72
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds float, float* %3, i64 %794
  %796 = bitcast float* %795 to <8 x float>*
  %797 = load <8 x float>, <8 x float>* %796, align 1, !tbaa !12
  %798 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %752, <8 x float> %45, <8 x float> %710) #10
  %799 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %757, <8 x float> %45, <8 x float> %714) #10
  %800 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %762, <8 x float> %45, <8 x float> %718) #10
  %801 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %767, <8 x float> %45, <8 x float> %722) #10
  %802 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %772, <8 x float> %45, <8 x float> %726) #10
  %803 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %777, <8 x float> %45, <8 x float> %730) #10
  %804 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %782, <8 x float> %45, <8 x float> %734) #10
  %805 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %787, <8 x float> %45, <8 x float> %738) #10
  %806 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %792, <8 x float> %45, <8 x float> %742) #10
  %807 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %797, <8 x float> %45, <8 x float> %746) #10
  store <8 x float> %798, <8 x float>* %709, align 1, !tbaa !12
  store <8 x float> %799, <8 x float>* %713, align 1, !tbaa !12
  store <8 x float> %800, <8 x float>* %717, align 1, !tbaa !12
  store <8 x float> %801, <8 x float>* %721, align 1, !tbaa !12
  store <8 x float> %802, <8 x float>* %725, align 1, !tbaa !12
  store <8 x float> %803, <8 x float>* %729, align 1, !tbaa !12
  store <8 x float> %804, <8 x float>* %733, align 1, !tbaa !12
  store <8 x float> %805, <8 x float>* %737, align 1, !tbaa !12
  store <8 x float> %806, <8 x float>* %741, align 1, !tbaa !12
  store <8 x float> %807, <8 x float>* %745, align 1, !tbaa !12
  %808 = add nuw nsw i64 %666, 80
  %809 = icmp ult i64 %808, %522
  br i1 %809, label %665, label %659

810:                                              ; preds = %816
  br i1 %520, label %811, label %1090

811:                                              ; preds = %810
  %812 = trunc i64 %51 to i32
  %813 = mul nsw i32 %519, %812
  %814 = sext i32 %813 to i64
  %815 = zext i32 %519 to i64
  br label %956

816:                                              ; preds = %660, %816
  %817 = phi i64 [ 0, %660 ], [ %948, %816 ]
  %818 = getelementptr inbounds float, float* %5, i64 %817
  %819 = getelementptr inbounds float, float* %818, i64 8
  %820 = bitcast float* %819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %820, i32 0, i32 1, i32 1)
  %821 = getelementptr inbounds float, float* %3, i64 %817
  %822 = getelementptr inbounds float, float* %821, i64 8
  %823 = bitcast float* %822 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %823, i32 0, i32 1, i32 1)
  %824 = getelementptr inbounds float, float* %818, i64 16
  %825 = bitcast float* %824 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %825, i32 0, i32 1, i32 1)
  %826 = getelementptr inbounds float, float* %821, i64 16
  %827 = bitcast float* %826 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %827, i32 0, i32 1, i32 1)
  %828 = getelementptr inbounds float, float* %818, i64 24
  %829 = bitcast float* %828 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %829, i32 0, i32 1, i32 1)
  %830 = getelementptr inbounds float, float* %821, i64 24
  %831 = bitcast float* %830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %831, i32 0, i32 1, i32 1)
  %832 = getelementptr inbounds float, float* %818, i64 32
  %833 = bitcast float* %832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %833, i32 0, i32 1, i32 1)
  %834 = getelementptr inbounds float, float* %821, i64 32
  %835 = bitcast float* %834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %835, i32 0, i32 1, i32 1)
  %836 = getelementptr inbounds float, float* %818, i64 40
  %837 = bitcast float* %836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %837, i32 0, i32 1, i32 1)
  %838 = getelementptr inbounds float, float* %821, i64 40
  %839 = bitcast float* %838 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %839, i32 0, i32 1, i32 1)
  %840 = getelementptr inbounds float, float* %818, i64 48
  %841 = bitcast float* %840 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %841, i32 0, i32 1, i32 1)
  %842 = getelementptr inbounds float, float* %821, i64 48
  %843 = bitcast float* %842 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %843, i32 0, i32 1, i32 1)
  %844 = getelementptr inbounds float, float* %818, i64 56
  %845 = bitcast float* %844 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %845, i32 0, i32 1, i32 1)
  %846 = getelementptr inbounds float, float* %821, i64 56
  %847 = bitcast float* %846 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %847, i32 0, i32 1, i32 1)
  %848 = getelementptr inbounds float, float* %818, i64 64
  %849 = bitcast float* %848 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %849, i32 0, i32 1, i32 1)
  %850 = getelementptr inbounds float, float* %821, i64 64
  %851 = bitcast float* %850 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %851, i32 0, i32 1, i32 1)
  %852 = getelementptr inbounds float, float* %818, i64 72
  %853 = bitcast float* %852 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %853, i32 0, i32 1, i32 1)
  %854 = getelementptr inbounds float, float* %821, i64 72
  %855 = bitcast float* %854 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %855, i32 0, i32 1, i32 1)
  %856 = getelementptr inbounds float, float* %818, i64 80
  %857 = bitcast float* %856 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %857, i32 0, i32 1, i32 1)
  %858 = getelementptr inbounds float, float* %821, i64 80
  %859 = bitcast float* %858 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %859, i32 0, i32 1, i32 1)
  %860 = bitcast float* %818 to <8 x float>*
  %861 = load <8 x float>, <8 x float>* %860, align 1, !tbaa !12
  %862 = or i64 %817, 8
  %863 = getelementptr inbounds float, float* %5, i64 %862
  %864 = bitcast float* %863 to <8 x float>*
  %865 = load <8 x float>, <8 x float>* %864, align 1, !tbaa !12
  %866 = add nuw nsw i64 %817, 16
  %867 = getelementptr inbounds float, float* %5, i64 %866
  %868 = bitcast float* %867 to <8 x float>*
  %869 = load <8 x float>, <8 x float>* %868, align 1, !tbaa !12
  %870 = add nuw nsw i64 %817, 24
  %871 = getelementptr inbounds float, float* %5, i64 %870
  %872 = bitcast float* %871 to <8 x float>*
  %873 = load <8 x float>, <8 x float>* %872, align 1, !tbaa !12
  %874 = add nuw nsw i64 %817, 32
  %875 = getelementptr inbounds float, float* %5, i64 %874
  %876 = bitcast float* %875 to <8 x float>*
  %877 = load <8 x float>, <8 x float>* %876, align 1, !tbaa !12
  %878 = add nuw nsw i64 %817, 40
  %879 = getelementptr inbounds float, float* %5, i64 %878
  %880 = bitcast float* %879 to <8 x float>*
  %881 = load <8 x float>, <8 x float>* %880, align 1, !tbaa !12
  %882 = add nuw nsw i64 %817, 48
  %883 = getelementptr inbounds float, float* %5, i64 %882
  %884 = bitcast float* %883 to <8 x float>*
  %885 = load <8 x float>, <8 x float>* %884, align 1, !tbaa !12
  %886 = add nuw nsw i64 %817, 56
  %887 = getelementptr inbounds float, float* %5, i64 %886
  %888 = bitcast float* %887 to <8 x float>*
  %889 = load <8 x float>, <8 x float>* %888, align 1, !tbaa !12
  %890 = add nuw nsw i64 %817, 64
  %891 = getelementptr inbounds float, float* %5, i64 %890
  %892 = bitcast float* %891 to <8 x float>*
  %893 = load <8 x float>, <8 x float>* %892, align 1, !tbaa !12
  %894 = add nuw nsw i64 %817, 72
  %895 = getelementptr inbounds float, float* %5, i64 %894
  %896 = bitcast float* %895 to <8 x float>*
  %897 = load <8 x float>, <8 x float>* %896, align 1, !tbaa !12
  %898 = add nsw i64 %817, %663
  %899 = getelementptr inbounds float, float* %3, i64 %898
  %900 = bitcast float* %899 to <8 x float>*
  %901 = load <8 x float>, <8 x float>* %900, align 1, !tbaa !12
  %902 = add nsw i64 %898, 8
  %903 = getelementptr inbounds float, float* %3, i64 %902
  %904 = bitcast float* %903 to <8 x float>*
  %905 = load <8 x float>, <8 x float>* %904, align 1, !tbaa !12
  %906 = add nsw i64 %898, 16
  %907 = getelementptr inbounds float, float* %3, i64 %906
  %908 = bitcast float* %907 to <8 x float>*
  %909 = load <8 x float>, <8 x float>* %908, align 1, !tbaa !12
  %910 = add nsw i64 %898, 24
  %911 = getelementptr inbounds float, float* %3, i64 %910
  %912 = bitcast float* %911 to <8 x float>*
  %913 = load <8 x float>, <8 x float>* %912, align 1, !tbaa !12
  %914 = add nsw i64 %898, 32
  %915 = getelementptr inbounds float, float* %3, i64 %914
  %916 = bitcast float* %915 to <8 x float>*
  %917 = load <8 x float>, <8 x float>* %916, align 1, !tbaa !12
  %918 = add nsw i64 %898, 40
  %919 = getelementptr inbounds float, float* %3, i64 %918
  %920 = bitcast float* %919 to <8 x float>*
  %921 = load <8 x float>, <8 x float>* %920, align 1, !tbaa !12
  %922 = add nsw i64 %898, 48
  %923 = getelementptr inbounds float, float* %3, i64 %922
  %924 = bitcast float* %923 to <8 x float>*
  %925 = load <8 x float>, <8 x float>* %924, align 1, !tbaa !12
  %926 = add nsw i64 %898, 56
  %927 = getelementptr inbounds float, float* %3, i64 %926
  %928 = bitcast float* %927 to <8 x float>*
  %929 = load <8 x float>, <8 x float>* %928, align 1, !tbaa !12
  %930 = add nsw i64 %898, 64
  %931 = getelementptr inbounds float, float* %3, i64 %930
  %932 = bitcast float* %931 to <8 x float>*
  %933 = load <8 x float>, <8 x float>* %932, align 1, !tbaa !12
  %934 = add nsw i64 %898, 72
  %935 = getelementptr inbounds float, float* %3, i64 %934
  %936 = bitcast float* %935 to <8 x float>*
  %937 = load <8 x float>, <8 x float>* %936, align 1, !tbaa !12
  %938 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %901, <8 x float> %50, <8 x float> %861) #10
  %939 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %905, <8 x float> %50, <8 x float> %865) #10
  %940 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %909, <8 x float> %50, <8 x float> %869) #10
  %941 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %913, <8 x float> %50, <8 x float> %873) #10
  %942 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %917, <8 x float> %50, <8 x float> %877) #10
  %943 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %921, <8 x float> %50, <8 x float> %881) #10
  %944 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %925, <8 x float> %50, <8 x float> %885) #10
  %945 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %929, <8 x float> %50, <8 x float> %889) #10
  %946 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %933, <8 x float> %50, <8 x float> %893) #10
  %947 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %937, <8 x float> %50, <8 x float> %897) #10
  store <8 x float> %938, <8 x float>* %860, align 1, !tbaa !12
  store <8 x float> %939, <8 x float>* %864, align 1, !tbaa !12
  store <8 x float> %940, <8 x float>* %868, align 1, !tbaa !12
  store <8 x float> %941, <8 x float>* %872, align 1, !tbaa !12
  store <8 x float> %942, <8 x float>* %876, align 1, !tbaa !12
  store <8 x float> %943, <8 x float>* %880, align 1, !tbaa !12
  store <8 x float> %944, <8 x float>* %884, align 1, !tbaa !12
  store <8 x float> %945, <8 x float>* %888, align 1, !tbaa !12
  store <8 x float> %946, <8 x float>* %892, align 1, !tbaa !12
  store <8 x float> %947, <8 x float>* %896, align 1, !tbaa !12
  %948 = add nuw nsw i64 %817, 80
  %949 = icmp ult i64 %948, %664
  br i1 %949, label %816, label %810

950:                                              ; preds = %956
  br i1 %520, label %951, label %1090

951:                                              ; preds = %950
  %952 = trunc i64 %56 to i32
  %953 = mul nsw i32 %519, %952
  %954 = sext i32 %953 to i64
  %955 = zext i32 %519 to i64
  br label %1097

956:                                              ; preds = %811, %956
  %957 = phi i64 [ 0, %811 ], [ %1088, %956 ]
  %958 = getelementptr inbounds float, float* %5, i64 %957
  %959 = getelementptr inbounds float, float* %958, i64 8
  %960 = bitcast float* %959 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %960, i32 0, i32 1, i32 1)
  %961 = getelementptr inbounds float, float* %3, i64 %957
  %962 = getelementptr inbounds float, float* %961, i64 8
  %963 = bitcast float* %962 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %963, i32 0, i32 1, i32 1)
  %964 = getelementptr inbounds float, float* %958, i64 16
  %965 = bitcast float* %964 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %965, i32 0, i32 1, i32 1)
  %966 = getelementptr inbounds float, float* %961, i64 16
  %967 = bitcast float* %966 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %967, i32 0, i32 1, i32 1)
  %968 = getelementptr inbounds float, float* %958, i64 24
  %969 = bitcast float* %968 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %969, i32 0, i32 1, i32 1)
  %970 = getelementptr inbounds float, float* %961, i64 24
  %971 = bitcast float* %970 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %971, i32 0, i32 1, i32 1)
  %972 = getelementptr inbounds float, float* %958, i64 32
  %973 = bitcast float* %972 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %973, i32 0, i32 1, i32 1)
  %974 = getelementptr inbounds float, float* %961, i64 32
  %975 = bitcast float* %974 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %975, i32 0, i32 1, i32 1)
  %976 = getelementptr inbounds float, float* %958, i64 40
  %977 = bitcast float* %976 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %977, i32 0, i32 1, i32 1)
  %978 = getelementptr inbounds float, float* %961, i64 40
  %979 = bitcast float* %978 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %979, i32 0, i32 1, i32 1)
  %980 = getelementptr inbounds float, float* %958, i64 48
  %981 = bitcast float* %980 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %981, i32 0, i32 1, i32 1)
  %982 = getelementptr inbounds float, float* %961, i64 48
  %983 = bitcast float* %982 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %983, i32 0, i32 1, i32 1)
  %984 = getelementptr inbounds float, float* %958, i64 56
  %985 = bitcast float* %984 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %985, i32 0, i32 1, i32 1)
  %986 = getelementptr inbounds float, float* %961, i64 56
  %987 = bitcast float* %986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %987, i32 0, i32 1, i32 1)
  %988 = getelementptr inbounds float, float* %958, i64 64
  %989 = bitcast float* %988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %989, i32 0, i32 1, i32 1)
  %990 = getelementptr inbounds float, float* %961, i64 64
  %991 = bitcast float* %990 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %991, i32 0, i32 1, i32 1)
  %992 = getelementptr inbounds float, float* %958, i64 72
  %993 = bitcast float* %992 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %993, i32 0, i32 1, i32 1)
  %994 = getelementptr inbounds float, float* %961, i64 72
  %995 = bitcast float* %994 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %995, i32 0, i32 1, i32 1)
  %996 = getelementptr inbounds float, float* %958, i64 80
  %997 = bitcast float* %996 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %997, i32 0, i32 1, i32 1)
  %998 = getelementptr inbounds float, float* %961, i64 80
  %999 = bitcast float* %998 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %999, i32 0, i32 1, i32 1)
  %1000 = bitcast float* %958 to <8 x float>*
  %1001 = load <8 x float>, <8 x float>* %1000, align 1, !tbaa !12
  %1002 = or i64 %957, 8
  %1003 = getelementptr inbounds float, float* %5, i64 %1002
  %1004 = bitcast float* %1003 to <8 x float>*
  %1005 = load <8 x float>, <8 x float>* %1004, align 1, !tbaa !12
  %1006 = add nuw nsw i64 %957, 16
  %1007 = getelementptr inbounds float, float* %5, i64 %1006
  %1008 = bitcast float* %1007 to <8 x float>*
  %1009 = load <8 x float>, <8 x float>* %1008, align 1, !tbaa !12
  %1010 = add nuw nsw i64 %957, 24
  %1011 = getelementptr inbounds float, float* %5, i64 %1010
  %1012 = bitcast float* %1011 to <8 x float>*
  %1013 = load <8 x float>, <8 x float>* %1012, align 1, !tbaa !12
  %1014 = add nuw nsw i64 %957, 32
  %1015 = getelementptr inbounds float, float* %5, i64 %1014
  %1016 = bitcast float* %1015 to <8 x float>*
  %1017 = load <8 x float>, <8 x float>* %1016, align 1, !tbaa !12
  %1018 = add nuw nsw i64 %957, 40
  %1019 = getelementptr inbounds float, float* %5, i64 %1018
  %1020 = bitcast float* %1019 to <8 x float>*
  %1021 = load <8 x float>, <8 x float>* %1020, align 1, !tbaa !12
  %1022 = add nuw nsw i64 %957, 48
  %1023 = getelementptr inbounds float, float* %5, i64 %1022
  %1024 = bitcast float* %1023 to <8 x float>*
  %1025 = load <8 x float>, <8 x float>* %1024, align 1, !tbaa !12
  %1026 = add nuw nsw i64 %957, 56
  %1027 = getelementptr inbounds float, float* %5, i64 %1026
  %1028 = bitcast float* %1027 to <8 x float>*
  %1029 = load <8 x float>, <8 x float>* %1028, align 1, !tbaa !12
  %1030 = add nuw nsw i64 %957, 64
  %1031 = getelementptr inbounds float, float* %5, i64 %1030
  %1032 = bitcast float* %1031 to <8 x float>*
  %1033 = load <8 x float>, <8 x float>* %1032, align 1, !tbaa !12
  %1034 = add nuw nsw i64 %957, 72
  %1035 = getelementptr inbounds float, float* %5, i64 %1034
  %1036 = bitcast float* %1035 to <8 x float>*
  %1037 = load <8 x float>, <8 x float>* %1036, align 1, !tbaa !12
  %1038 = add nsw i64 %957, %814
  %1039 = getelementptr inbounds float, float* %3, i64 %1038
  %1040 = bitcast float* %1039 to <8 x float>*
  %1041 = load <8 x float>, <8 x float>* %1040, align 1, !tbaa !12
  %1042 = add nsw i64 %1038, 8
  %1043 = getelementptr inbounds float, float* %3, i64 %1042
  %1044 = bitcast float* %1043 to <8 x float>*
  %1045 = load <8 x float>, <8 x float>* %1044, align 1, !tbaa !12
  %1046 = add nsw i64 %1038, 16
  %1047 = getelementptr inbounds float, float* %3, i64 %1046
  %1048 = bitcast float* %1047 to <8 x float>*
  %1049 = load <8 x float>, <8 x float>* %1048, align 1, !tbaa !12
  %1050 = add nsw i64 %1038, 24
  %1051 = getelementptr inbounds float, float* %3, i64 %1050
  %1052 = bitcast float* %1051 to <8 x float>*
  %1053 = load <8 x float>, <8 x float>* %1052, align 1, !tbaa !12
  %1054 = add nsw i64 %1038, 32
  %1055 = getelementptr inbounds float, float* %3, i64 %1054
  %1056 = bitcast float* %1055 to <8 x float>*
  %1057 = load <8 x float>, <8 x float>* %1056, align 1, !tbaa !12
  %1058 = add nsw i64 %1038, 40
  %1059 = getelementptr inbounds float, float* %3, i64 %1058
  %1060 = bitcast float* %1059 to <8 x float>*
  %1061 = load <8 x float>, <8 x float>* %1060, align 1, !tbaa !12
  %1062 = add nsw i64 %1038, 48
  %1063 = getelementptr inbounds float, float* %3, i64 %1062
  %1064 = bitcast float* %1063 to <8 x float>*
  %1065 = load <8 x float>, <8 x float>* %1064, align 1, !tbaa !12
  %1066 = add nsw i64 %1038, 56
  %1067 = getelementptr inbounds float, float* %3, i64 %1066
  %1068 = bitcast float* %1067 to <8 x float>*
  %1069 = load <8 x float>, <8 x float>* %1068, align 1, !tbaa !12
  %1070 = add nsw i64 %1038, 64
  %1071 = getelementptr inbounds float, float* %3, i64 %1070
  %1072 = bitcast float* %1071 to <8 x float>*
  %1073 = load <8 x float>, <8 x float>* %1072, align 1, !tbaa !12
  %1074 = add nsw i64 %1038, 72
  %1075 = getelementptr inbounds float, float* %3, i64 %1074
  %1076 = bitcast float* %1075 to <8 x float>*
  %1077 = load <8 x float>, <8 x float>* %1076, align 1, !tbaa !12
  %1078 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1041, <8 x float> %55, <8 x float> %1001) #10
  %1079 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1045, <8 x float> %55, <8 x float> %1005) #10
  %1080 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1049, <8 x float> %55, <8 x float> %1009) #10
  %1081 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1053, <8 x float> %55, <8 x float> %1013) #10
  %1082 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1057, <8 x float> %55, <8 x float> %1017) #10
  %1083 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1061, <8 x float> %55, <8 x float> %1021) #10
  %1084 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1065, <8 x float> %55, <8 x float> %1025) #10
  %1085 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1069, <8 x float> %55, <8 x float> %1029) #10
  %1086 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1073, <8 x float> %55, <8 x float> %1033) #10
  %1087 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1077, <8 x float> %55, <8 x float> %1037) #10
  store <8 x float> %1078, <8 x float>* %1000, align 1, !tbaa !12
  store <8 x float> %1079, <8 x float>* %1004, align 1, !tbaa !12
  store <8 x float> %1080, <8 x float>* %1008, align 1, !tbaa !12
  store <8 x float> %1081, <8 x float>* %1012, align 1, !tbaa !12
  store <8 x float> %1082, <8 x float>* %1016, align 1, !tbaa !12
  store <8 x float> %1083, <8 x float>* %1020, align 1, !tbaa !12
  store <8 x float> %1084, <8 x float>* %1024, align 1, !tbaa !12
  store <8 x float> %1085, <8 x float>* %1028, align 1, !tbaa !12
  store <8 x float> %1086, <8 x float>* %1032, align 1, !tbaa !12
  store <8 x float> %1087, <8 x float>* %1036, align 1, !tbaa !12
  %1088 = add nuw nsw i64 %957, 80
  %1089 = icmp ult i64 %1088, %815
  br i1 %1089, label %956, label %950

1090:                                             ; preds = %1097, %659, %810, %950
  %1091 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1092 = icmp sgt i32 %1091, 0
  br i1 %1092, label %1093, label %1662

1093:                                             ; preds = %1090
  %1094 = zext i32 %1091 to i64
  %1095 = trunc i64 %61 to i32
  %1096 = mul nsw i32 %1091, %1095
  br label %1237

1097:                                             ; preds = %951, %1097
  %1098 = phi i64 [ 0, %951 ], [ %1229, %1097 ]
  %1099 = getelementptr inbounds float, float* %5, i64 %1098
  %1100 = getelementptr inbounds float, float* %1099, i64 8
  %1101 = bitcast float* %1100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1101, i32 0, i32 1, i32 1)
  %1102 = getelementptr inbounds float, float* %3, i64 %1098
  %1103 = getelementptr inbounds float, float* %1102, i64 8
  %1104 = bitcast float* %1103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1104, i32 0, i32 1, i32 1)
  %1105 = getelementptr inbounds float, float* %1099, i64 16
  %1106 = bitcast float* %1105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1106, i32 0, i32 1, i32 1)
  %1107 = getelementptr inbounds float, float* %1102, i64 16
  %1108 = bitcast float* %1107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1108, i32 0, i32 1, i32 1)
  %1109 = getelementptr inbounds float, float* %1099, i64 24
  %1110 = bitcast float* %1109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1110, i32 0, i32 1, i32 1)
  %1111 = getelementptr inbounds float, float* %1102, i64 24
  %1112 = bitcast float* %1111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1112, i32 0, i32 1, i32 1)
  %1113 = getelementptr inbounds float, float* %1099, i64 32
  %1114 = bitcast float* %1113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1114, i32 0, i32 1, i32 1)
  %1115 = getelementptr inbounds float, float* %1102, i64 32
  %1116 = bitcast float* %1115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1116, i32 0, i32 1, i32 1)
  %1117 = getelementptr inbounds float, float* %1099, i64 40
  %1118 = bitcast float* %1117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1118, i32 0, i32 1, i32 1)
  %1119 = getelementptr inbounds float, float* %1102, i64 40
  %1120 = bitcast float* %1119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1120, i32 0, i32 1, i32 1)
  %1121 = getelementptr inbounds float, float* %1099, i64 48
  %1122 = bitcast float* %1121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1122, i32 0, i32 1, i32 1)
  %1123 = getelementptr inbounds float, float* %1102, i64 48
  %1124 = bitcast float* %1123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1124, i32 0, i32 1, i32 1)
  %1125 = getelementptr inbounds float, float* %1099, i64 56
  %1126 = bitcast float* %1125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1126, i32 0, i32 1, i32 1)
  %1127 = getelementptr inbounds float, float* %1102, i64 56
  %1128 = bitcast float* %1127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1128, i32 0, i32 1, i32 1)
  %1129 = getelementptr inbounds float, float* %1099, i64 64
  %1130 = bitcast float* %1129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1130, i32 0, i32 1, i32 1)
  %1131 = getelementptr inbounds float, float* %1102, i64 64
  %1132 = bitcast float* %1131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1132, i32 0, i32 1, i32 1)
  %1133 = getelementptr inbounds float, float* %1099, i64 72
  %1134 = bitcast float* %1133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1134, i32 0, i32 1, i32 1)
  %1135 = getelementptr inbounds float, float* %1102, i64 72
  %1136 = bitcast float* %1135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1136, i32 0, i32 1, i32 1)
  %1137 = getelementptr inbounds float, float* %1099, i64 80
  %1138 = bitcast float* %1137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1138, i32 0, i32 1, i32 1)
  %1139 = getelementptr inbounds float, float* %1102, i64 80
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = bitcast float* %1099 to <8 x float>*
  %1142 = load <8 x float>, <8 x float>* %1141, align 1, !tbaa !12
  %1143 = or i64 %1098, 8
  %1144 = getelementptr inbounds float, float* %5, i64 %1143
  %1145 = bitcast float* %1144 to <8 x float>*
  %1146 = load <8 x float>, <8 x float>* %1145, align 1, !tbaa !12
  %1147 = add nuw nsw i64 %1098, 16
  %1148 = getelementptr inbounds float, float* %5, i64 %1147
  %1149 = bitcast float* %1148 to <8 x float>*
  %1150 = load <8 x float>, <8 x float>* %1149, align 1, !tbaa !12
  %1151 = add nuw nsw i64 %1098, 24
  %1152 = getelementptr inbounds float, float* %5, i64 %1151
  %1153 = bitcast float* %1152 to <8 x float>*
  %1154 = load <8 x float>, <8 x float>* %1153, align 1, !tbaa !12
  %1155 = add nuw nsw i64 %1098, 32
  %1156 = getelementptr inbounds float, float* %5, i64 %1155
  %1157 = bitcast float* %1156 to <8 x float>*
  %1158 = load <8 x float>, <8 x float>* %1157, align 1, !tbaa !12
  %1159 = add nuw nsw i64 %1098, 40
  %1160 = getelementptr inbounds float, float* %5, i64 %1159
  %1161 = bitcast float* %1160 to <8 x float>*
  %1162 = load <8 x float>, <8 x float>* %1161, align 1, !tbaa !12
  %1163 = add nuw nsw i64 %1098, 48
  %1164 = getelementptr inbounds float, float* %5, i64 %1163
  %1165 = bitcast float* %1164 to <8 x float>*
  %1166 = load <8 x float>, <8 x float>* %1165, align 1, !tbaa !12
  %1167 = add nuw nsw i64 %1098, 56
  %1168 = getelementptr inbounds float, float* %5, i64 %1167
  %1169 = bitcast float* %1168 to <8 x float>*
  %1170 = load <8 x float>, <8 x float>* %1169, align 1, !tbaa !12
  %1171 = add nuw nsw i64 %1098, 64
  %1172 = getelementptr inbounds float, float* %5, i64 %1171
  %1173 = bitcast float* %1172 to <8 x float>*
  %1174 = load <8 x float>, <8 x float>* %1173, align 1, !tbaa !12
  %1175 = add nuw nsw i64 %1098, 72
  %1176 = getelementptr inbounds float, float* %5, i64 %1175
  %1177 = bitcast float* %1176 to <8 x float>*
  %1178 = load <8 x float>, <8 x float>* %1177, align 1, !tbaa !12
  %1179 = add nsw i64 %1098, %954
  %1180 = getelementptr inbounds float, float* %3, i64 %1179
  %1181 = bitcast float* %1180 to <8 x float>*
  %1182 = load <8 x float>, <8 x float>* %1181, align 1, !tbaa !12
  %1183 = add nsw i64 %1179, 8
  %1184 = getelementptr inbounds float, float* %3, i64 %1183
  %1185 = bitcast float* %1184 to <8 x float>*
  %1186 = load <8 x float>, <8 x float>* %1185, align 1, !tbaa !12
  %1187 = add nsw i64 %1179, 16
  %1188 = getelementptr inbounds float, float* %3, i64 %1187
  %1189 = bitcast float* %1188 to <8 x float>*
  %1190 = load <8 x float>, <8 x float>* %1189, align 1, !tbaa !12
  %1191 = add nsw i64 %1179, 24
  %1192 = getelementptr inbounds float, float* %3, i64 %1191
  %1193 = bitcast float* %1192 to <8 x float>*
  %1194 = load <8 x float>, <8 x float>* %1193, align 1, !tbaa !12
  %1195 = add nsw i64 %1179, 32
  %1196 = getelementptr inbounds float, float* %3, i64 %1195
  %1197 = bitcast float* %1196 to <8 x float>*
  %1198 = load <8 x float>, <8 x float>* %1197, align 1, !tbaa !12
  %1199 = add nsw i64 %1179, 40
  %1200 = getelementptr inbounds float, float* %3, i64 %1199
  %1201 = bitcast float* %1200 to <8 x float>*
  %1202 = load <8 x float>, <8 x float>* %1201, align 1, !tbaa !12
  %1203 = add nsw i64 %1179, 48
  %1204 = getelementptr inbounds float, float* %3, i64 %1203
  %1205 = bitcast float* %1204 to <8 x float>*
  %1206 = load <8 x float>, <8 x float>* %1205, align 1, !tbaa !12
  %1207 = add nsw i64 %1179, 56
  %1208 = getelementptr inbounds float, float* %3, i64 %1207
  %1209 = bitcast float* %1208 to <8 x float>*
  %1210 = load <8 x float>, <8 x float>* %1209, align 1, !tbaa !12
  %1211 = add nsw i64 %1179, 64
  %1212 = getelementptr inbounds float, float* %3, i64 %1211
  %1213 = bitcast float* %1212 to <8 x float>*
  %1214 = load <8 x float>, <8 x float>* %1213, align 1, !tbaa !12
  %1215 = add nsw i64 %1179, 72
  %1216 = getelementptr inbounds float, float* %3, i64 %1215
  %1217 = bitcast float* %1216 to <8 x float>*
  %1218 = load <8 x float>, <8 x float>* %1217, align 1, !tbaa !12
  %1219 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1182, <8 x float> %60, <8 x float> %1142) #10
  %1220 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1186, <8 x float> %60, <8 x float> %1146) #10
  %1221 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1190, <8 x float> %60, <8 x float> %1150) #10
  %1222 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1194, <8 x float> %60, <8 x float> %1154) #10
  %1223 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1198, <8 x float> %60, <8 x float> %1158) #10
  %1224 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1202, <8 x float> %60, <8 x float> %1162) #10
  %1225 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1206, <8 x float> %60, <8 x float> %1166) #10
  %1226 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1210, <8 x float> %60, <8 x float> %1170) #10
  %1227 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1214, <8 x float> %60, <8 x float> %1174) #10
  %1228 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1218, <8 x float> %60, <8 x float> %1178) #10
  store <8 x float> %1219, <8 x float>* %1141, align 1, !tbaa !12
  store <8 x float> %1220, <8 x float>* %1145, align 1, !tbaa !12
  store <8 x float> %1221, <8 x float>* %1149, align 1, !tbaa !12
  store <8 x float> %1222, <8 x float>* %1153, align 1, !tbaa !12
  store <8 x float> %1223, <8 x float>* %1157, align 1, !tbaa !12
  store <8 x float> %1224, <8 x float>* %1161, align 1, !tbaa !12
  store <8 x float> %1225, <8 x float>* %1165, align 1, !tbaa !12
  store <8 x float> %1226, <8 x float>* %1169, align 1, !tbaa !12
  store <8 x float> %1227, <8 x float>* %1173, align 1, !tbaa !12
  store <8 x float> %1228, <8 x float>* %1177, align 1, !tbaa !12
  %1229 = add nuw nsw i64 %1098, 80
  %1230 = icmp ult i64 %1229, %955
  br i1 %1230, label %1097, label %1090

1231:                                             ; preds = %1237
  br i1 %1092, label %1232, label %1662

1232:                                             ; preds = %1231
  %1233 = trunc i64 %66 to i32
  %1234 = mul nsw i32 %1091, %1233
  %1235 = sext i32 %1234 to i64
  %1236 = zext i32 %1091 to i64
  br label %1388

1237:                                             ; preds = %1093, %1237
  %1238 = phi i64 [ 0, %1093 ], [ %1380, %1237 ]
  %1239 = getelementptr inbounds float, float* %5, i64 %1238
  %1240 = getelementptr inbounds float, float* %1239, i64 8
  %1241 = bitcast float* %1240 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1241, i32 0, i32 1, i32 1)
  %1242 = getelementptr inbounds float, float* %3, i64 %1238
  %1243 = getelementptr inbounds float, float* %1242, i64 8
  %1244 = bitcast float* %1243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1244, i32 0, i32 1, i32 1)
  %1245 = getelementptr inbounds float, float* %1239, i64 16
  %1246 = bitcast float* %1245 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1246, i32 0, i32 1, i32 1)
  %1247 = getelementptr inbounds float, float* %1242, i64 16
  %1248 = bitcast float* %1247 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1248, i32 0, i32 1, i32 1)
  %1249 = getelementptr inbounds float, float* %1239, i64 24
  %1250 = bitcast float* %1249 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1250, i32 0, i32 1, i32 1)
  %1251 = getelementptr inbounds float, float* %1242, i64 24
  %1252 = bitcast float* %1251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1252, i32 0, i32 1, i32 1)
  %1253 = getelementptr inbounds float, float* %1239, i64 32
  %1254 = bitcast float* %1253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1254, i32 0, i32 1, i32 1)
  %1255 = getelementptr inbounds float, float* %1242, i64 32
  %1256 = bitcast float* %1255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1256, i32 0, i32 1, i32 1)
  %1257 = getelementptr inbounds float, float* %1239, i64 40
  %1258 = bitcast float* %1257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1258, i32 0, i32 1, i32 1)
  %1259 = getelementptr inbounds float, float* %1242, i64 40
  %1260 = bitcast float* %1259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1260, i32 0, i32 1, i32 1)
  %1261 = getelementptr inbounds float, float* %1239, i64 48
  %1262 = bitcast float* %1261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1262, i32 0, i32 1, i32 1)
  %1263 = getelementptr inbounds float, float* %1242, i64 48
  %1264 = bitcast float* %1263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1264, i32 0, i32 1, i32 1)
  %1265 = getelementptr inbounds float, float* %1239, i64 56
  %1266 = bitcast float* %1265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1266, i32 0, i32 1, i32 1)
  %1267 = getelementptr inbounds float, float* %1242, i64 56
  %1268 = bitcast float* %1267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1268, i32 0, i32 1, i32 1)
  %1269 = getelementptr inbounds float, float* %1239, i64 64
  %1270 = bitcast float* %1269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1270, i32 0, i32 1, i32 1)
  %1271 = getelementptr inbounds float, float* %1242, i64 64
  %1272 = bitcast float* %1271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1272, i32 0, i32 1, i32 1)
  %1273 = getelementptr inbounds float, float* %1239, i64 72
  %1274 = bitcast float* %1273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1274, i32 0, i32 1, i32 1)
  %1275 = getelementptr inbounds float, float* %1242, i64 72
  %1276 = bitcast float* %1275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1276, i32 0, i32 1, i32 1)
  %1277 = getelementptr inbounds float, float* %1239, i64 80
  %1278 = bitcast float* %1277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1278, i32 0, i32 1, i32 1)
  %1279 = getelementptr inbounds float, float* %1242, i64 80
  %1280 = bitcast float* %1279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1280, i32 0, i32 1, i32 1)
  %1281 = bitcast float* %1239 to <8 x float>*
  %1282 = load <8 x float>, <8 x float>* %1281, align 1, !tbaa !12
  %1283 = or i64 %1238, 8
  %1284 = getelementptr inbounds float, float* %5, i64 %1283
  %1285 = bitcast float* %1284 to <8 x float>*
  %1286 = load <8 x float>, <8 x float>* %1285, align 1, !tbaa !12
  %1287 = add nuw nsw i64 %1238, 16
  %1288 = getelementptr inbounds float, float* %5, i64 %1287
  %1289 = bitcast float* %1288 to <8 x float>*
  %1290 = load <8 x float>, <8 x float>* %1289, align 1, !tbaa !12
  %1291 = add nuw nsw i64 %1238, 24
  %1292 = getelementptr inbounds float, float* %5, i64 %1291
  %1293 = bitcast float* %1292 to <8 x float>*
  %1294 = load <8 x float>, <8 x float>* %1293, align 1, !tbaa !12
  %1295 = add nuw nsw i64 %1238, 32
  %1296 = getelementptr inbounds float, float* %5, i64 %1295
  %1297 = bitcast float* %1296 to <8 x float>*
  %1298 = load <8 x float>, <8 x float>* %1297, align 1, !tbaa !12
  %1299 = add nuw nsw i64 %1238, 40
  %1300 = getelementptr inbounds float, float* %5, i64 %1299
  %1301 = bitcast float* %1300 to <8 x float>*
  %1302 = load <8 x float>, <8 x float>* %1301, align 1, !tbaa !12
  %1303 = add nuw nsw i64 %1238, 48
  %1304 = getelementptr inbounds float, float* %5, i64 %1303
  %1305 = bitcast float* %1304 to <8 x float>*
  %1306 = load <8 x float>, <8 x float>* %1305, align 1, !tbaa !12
  %1307 = add nuw nsw i64 %1238, 56
  %1308 = getelementptr inbounds float, float* %5, i64 %1307
  %1309 = bitcast float* %1308 to <8 x float>*
  %1310 = load <8 x float>, <8 x float>* %1309, align 1, !tbaa !12
  %1311 = add nuw nsw i64 %1238, 64
  %1312 = getelementptr inbounds float, float* %5, i64 %1311
  %1313 = bitcast float* %1312 to <8 x float>*
  %1314 = load <8 x float>, <8 x float>* %1313, align 1, !tbaa !12
  %1315 = add nuw nsw i64 %1238, 72
  %1316 = getelementptr inbounds float, float* %5, i64 %1315
  %1317 = bitcast float* %1316 to <8 x float>*
  %1318 = load <8 x float>, <8 x float>* %1317, align 1, !tbaa !12
  %1319 = trunc i64 %1238 to i32
  %1320 = add nsw i32 %1096, %1319
  %1321 = sext i32 %1320 to i64
  %1322 = getelementptr inbounds float, float* %3, i64 %1321
  %1323 = bitcast float* %1322 to <8 x float>*
  %1324 = load <8 x float>, <8 x float>* %1323, align 1, !tbaa !12
  %1325 = add nsw i32 %1320, 8
  %1326 = sext i32 %1325 to i64
  %1327 = getelementptr inbounds float, float* %3, i64 %1326
  %1328 = bitcast float* %1327 to <8 x float>*
  %1329 = load <8 x float>, <8 x float>* %1328, align 1, !tbaa !12
  %1330 = add nsw i32 %1320, 16
  %1331 = sext i32 %1330 to i64
  %1332 = getelementptr inbounds float, float* %3, i64 %1331
  %1333 = bitcast float* %1332 to <8 x float>*
  %1334 = load <8 x float>, <8 x float>* %1333, align 1, !tbaa !12
  %1335 = add nsw i32 %1320, 24
  %1336 = sext i32 %1335 to i64
  %1337 = getelementptr inbounds float, float* %3, i64 %1336
  %1338 = bitcast float* %1337 to <8 x float>*
  %1339 = load <8 x float>, <8 x float>* %1338, align 1, !tbaa !12
  %1340 = add nsw i32 %1320, 32
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds float, float* %3, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nsw i32 %1320, 40
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds float, float* %3, i64 %1346
  %1348 = bitcast float* %1347 to <8 x float>*
  %1349 = load <8 x float>, <8 x float>* %1348, align 1, !tbaa !12
  %1350 = add nsw i32 %1320, 48
  %1351 = sext i32 %1350 to i64
  %1352 = getelementptr inbounds float, float* %3, i64 %1351
  %1353 = bitcast float* %1352 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = add nsw i32 %1320, 56
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds float, float* %3, i64 %1356
  %1358 = bitcast float* %1357 to <8 x float>*
  %1359 = load <8 x float>, <8 x float>* %1358, align 1, !tbaa !12
  %1360 = add nsw i32 %1320, 64
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds float, float* %3, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nsw i32 %1320, 72
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds float, float* %3, i64 %1366
  %1368 = bitcast float* %1367 to <8 x float>*
  %1369 = load <8 x float>, <8 x float>* %1368, align 1, !tbaa !12
  %1370 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1324, <8 x float> %65, <8 x float> %1282) #10
  %1371 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1329, <8 x float> %65, <8 x float> %1286) #10
  %1372 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1334, <8 x float> %65, <8 x float> %1290) #10
  %1373 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1339, <8 x float> %65, <8 x float> %1294) #10
  %1374 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1344, <8 x float> %65, <8 x float> %1298) #10
  %1375 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1349, <8 x float> %65, <8 x float> %1302) #10
  %1376 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1354, <8 x float> %65, <8 x float> %1306) #10
  %1377 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1359, <8 x float> %65, <8 x float> %1310) #10
  %1378 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1364, <8 x float> %65, <8 x float> %1314) #10
  %1379 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1369, <8 x float> %65, <8 x float> %1318) #10
  store <8 x float> %1370, <8 x float>* %1281, align 1, !tbaa !12
  store <8 x float> %1371, <8 x float>* %1285, align 1, !tbaa !12
  store <8 x float> %1372, <8 x float>* %1289, align 1, !tbaa !12
  store <8 x float> %1373, <8 x float>* %1293, align 1, !tbaa !12
  store <8 x float> %1374, <8 x float>* %1297, align 1, !tbaa !12
  store <8 x float> %1375, <8 x float>* %1301, align 1, !tbaa !12
  store <8 x float> %1376, <8 x float>* %1305, align 1, !tbaa !12
  store <8 x float> %1377, <8 x float>* %1309, align 1, !tbaa !12
  store <8 x float> %1378, <8 x float>* %1313, align 1, !tbaa !12
  store <8 x float> %1379, <8 x float>* %1317, align 1, !tbaa !12
  %1380 = add nuw nsw i64 %1238, 80
  %1381 = icmp ult i64 %1380, %1094
  br i1 %1381, label %1237, label %1231

1382:                                             ; preds = %1388
  br i1 %1092, label %1383, label %1662

1383:                                             ; preds = %1382
  %1384 = trunc i64 %71 to i32
  %1385 = mul nsw i32 %1091, %1384
  %1386 = sext i32 %1385 to i64
  %1387 = zext i32 %1091 to i64
  br label %1528

1388:                                             ; preds = %1232, %1388
  %1389 = phi i64 [ 0, %1232 ], [ %1520, %1388 ]
  %1390 = getelementptr inbounds float, float* %5, i64 %1389
  %1391 = getelementptr inbounds float, float* %1390, i64 8
  %1392 = bitcast float* %1391 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1392, i32 0, i32 1, i32 1)
  %1393 = getelementptr inbounds float, float* %3, i64 %1389
  %1394 = getelementptr inbounds float, float* %1393, i64 8
  %1395 = bitcast float* %1394 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1395, i32 0, i32 1, i32 1)
  %1396 = getelementptr inbounds float, float* %1390, i64 16
  %1397 = bitcast float* %1396 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1397, i32 0, i32 1, i32 1)
  %1398 = getelementptr inbounds float, float* %1393, i64 16
  %1399 = bitcast float* %1398 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1399, i32 0, i32 1, i32 1)
  %1400 = getelementptr inbounds float, float* %1390, i64 24
  %1401 = bitcast float* %1400 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1401, i32 0, i32 1, i32 1)
  %1402 = getelementptr inbounds float, float* %1393, i64 24
  %1403 = bitcast float* %1402 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1403, i32 0, i32 1, i32 1)
  %1404 = getelementptr inbounds float, float* %1390, i64 32
  %1405 = bitcast float* %1404 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1405, i32 0, i32 1, i32 1)
  %1406 = getelementptr inbounds float, float* %1393, i64 32
  %1407 = bitcast float* %1406 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1407, i32 0, i32 1, i32 1)
  %1408 = getelementptr inbounds float, float* %1390, i64 40
  %1409 = bitcast float* %1408 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1409, i32 0, i32 1, i32 1)
  %1410 = getelementptr inbounds float, float* %1393, i64 40
  %1411 = bitcast float* %1410 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1411, i32 0, i32 1, i32 1)
  %1412 = getelementptr inbounds float, float* %1390, i64 48
  %1413 = bitcast float* %1412 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1413, i32 0, i32 1, i32 1)
  %1414 = getelementptr inbounds float, float* %1393, i64 48
  %1415 = bitcast float* %1414 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1415, i32 0, i32 1, i32 1)
  %1416 = getelementptr inbounds float, float* %1390, i64 56
  %1417 = bitcast float* %1416 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1417, i32 0, i32 1, i32 1)
  %1418 = getelementptr inbounds float, float* %1393, i64 56
  %1419 = bitcast float* %1418 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1419, i32 0, i32 1, i32 1)
  %1420 = getelementptr inbounds float, float* %1390, i64 64
  %1421 = bitcast float* %1420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1421, i32 0, i32 1, i32 1)
  %1422 = getelementptr inbounds float, float* %1393, i64 64
  %1423 = bitcast float* %1422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1423, i32 0, i32 1, i32 1)
  %1424 = getelementptr inbounds float, float* %1390, i64 72
  %1425 = bitcast float* %1424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1425, i32 0, i32 1, i32 1)
  %1426 = getelementptr inbounds float, float* %1393, i64 72
  %1427 = bitcast float* %1426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1427, i32 0, i32 1, i32 1)
  %1428 = getelementptr inbounds float, float* %1390, i64 80
  %1429 = bitcast float* %1428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1429, i32 0, i32 1, i32 1)
  %1430 = getelementptr inbounds float, float* %1393, i64 80
  %1431 = bitcast float* %1430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1431, i32 0, i32 1, i32 1)
  %1432 = bitcast float* %1390 to <8 x float>*
  %1433 = load <8 x float>, <8 x float>* %1432, align 1, !tbaa !12
  %1434 = or i64 %1389, 8
  %1435 = getelementptr inbounds float, float* %5, i64 %1434
  %1436 = bitcast float* %1435 to <8 x float>*
  %1437 = load <8 x float>, <8 x float>* %1436, align 1, !tbaa !12
  %1438 = add nuw nsw i64 %1389, 16
  %1439 = getelementptr inbounds float, float* %5, i64 %1438
  %1440 = bitcast float* %1439 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = add nuw nsw i64 %1389, 24
  %1443 = getelementptr inbounds float, float* %5, i64 %1442
  %1444 = bitcast float* %1443 to <8 x float>*
  %1445 = load <8 x float>, <8 x float>* %1444, align 1, !tbaa !12
  %1446 = add nuw nsw i64 %1389, 32
  %1447 = getelementptr inbounds float, float* %5, i64 %1446
  %1448 = bitcast float* %1447 to <8 x float>*
  %1449 = load <8 x float>, <8 x float>* %1448, align 1, !tbaa !12
  %1450 = add nuw nsw i64 %1389, 40
  %1451 = getelementptr inbounds float, float* %5, i64 %1450
  %1452 = bitcast float* %1451 to <8 x float>*
  %1453 = load <8 x float>, <8 x float>* %1452, align 1, !tbaa !12
  %1454 = add nuw nsw i64 %1389, 48
  %1455 = getelementptr inbounds float, float* %5, i64 %1454
  %1456 = bitcast float* %1455 to <8 x float>*
  %1457 = load <8 x float>, <8 x float>* %1456, align 1, !tbaa !12
  %1458 = add nuw nsw i64 %1389, 56
  %1459 = getelementptr inbounds float, float* %5, i64 %1458
  %1460 = bitcast float* %1459 to <8 x float>*
  %1461 = load <8 x float>, <8 x float>* %1460, align 1, !tbaa !12
  %1462 = add nuw nsw i64 %1389, 64
  %1463 = getelementptr inbounds float, float* %5, i64 %1462
  %1464 = bitcast float* %1463 to <8 x float>*
  %1465 = load <8 x float>, <8 x float>* %1464, align 1, !tbaa !12
  %1466 = add nuw nsw i64 %1389, 72
  %1467 = getelementptr inbounds float, float* %5, i64 %1466
  %1468 = bitcast float* %1467 to <8 x float>*
  %1469 = load <8 x float>, <8 x float>* %1468, align 1, !tbaa !12
  %1470 = add nsw i64 %1389, %1235
  %1471 = getelementptr inbounds float, float* %3, i64 %1470
  %1472 = bitcast float* %1471 to <8 x float>*
  %1473 = load <8 x float>, <8 x float>* %1472, align 1, !tbaa !12
  %1474 = add nsw i64 %1470, 8
  %1475 = getelementptr inbounds float, float* %3, i64 %1474
  %1476 = bitcast float* %1475 to <8 x float>*
  %1477 = load <8 x float>, <8 x float>* %1476, align 1, !tbaa !12
  %1478 = add nsw i64 %1470, 16
  %1479 = getelementptr inbounds float, float* %3, i64 %1478
  %1480 = bitcast float* %1479 to <8 x float>*
  %1481 = load <8 x float>, <8 x float>* %1480, align 1, !tbaa !12
  %1482 = add nsw i64 %1470, 24
  %1483 = getelementptr inbounds float, float* %3, i64 %1482
  %1484 = bitcast float* %1483 to <8 x float>*
  %1485 = load <8 x float>, <8 x float>* %1484, align 1, !tbaa !12
  %1486 = add nsw i64 %1470, 32
  %1487 = getelementptr inbounds float, float* %3, i64 %1486
  %1488 = bitcast float* %1487 to <8 x float>*
  %1489 = load <8 x float>, <8 x float>* %1488, align 1, !tbaa !12
  %1490 = add nsw i64 %1470, 40
  %1491 = getelementptr inbounds float, float* %3, i64 %1490
  %1492 = bitcast float* %1491 to <8 x float>*
  %1493 = load <8 x float>, <8 x float>* %1492, align 1, !tbaa !12
  %1494 = add nsw i64 %1470, 48
  %1495 = getelementptr inbounds float, float* %3, i64 %1494
  %1496 = bitcast float* %1495 to <8 x float>*
  %1497 = load <8 x float>, <8 x float>* %1496, align 1, !tbaa !12
  %1498 = add nsw i64 %1470, 56
  %1499 = getelementptr inbounds float, float* %3, i64 %1498
  %1500 = bitcast float* %1499 to <8 x float>*
  %1501 = load <8 x float>, <8 x float>* %1500, align 1, !tbaa !12
  %1502 = add nsw i64 %1470, 64
  %1503 = getelementptr inbounds float, float* %3, i64 %1502
  %1504 = bitcast float* %1503 to <8 x float>*
  %1505 = load <8 x float>, <8 x float>* %1504, align 1, !tbaa !12
  %1506 = add nsw i64 %1470, 72
  %1507 = getelementptr inbounds float, float* %3, i64 %1506
  %1508 = bitcast float* %1507 to <8 x float>*
  %1509 = load <8 x float>, <8 x float>* %1508, align 1, !tbaa !12
  %1510 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1473, <8 x float> %70, <8 x float> %1433) #10
  %1511 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1477, <8 x float> %70, <8 x float> %1437) #10
  %1512 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1481, <8 x float> %70, <8 x float> %1441) #10
  %1513 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1485, <8 x float> %70, <8 x float> %1445) #10
  %1514 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1489, <8 x float> %70, <8 x float> %1449) #10
  %1515 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1493, <8 x float> %70, <8 x float> %1453) #10
  %1516 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1497, <8 x float> %70, <8 x float> %1457) #10
  %1517 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1501, <8 x float> %70, <8 x float> %1461) #10
  %1518 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1505, <8 x float> %70, <8 x float> %1465) #10
  %1519 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1509, <8 x float> %70, <8 x float> %1469) #10
  store <8 x float> %1510, <8 x float>* %1432, align 1, !tbaa !12
  store <8 x float> %1511, <8 x float>* %1436, align 1, !tbaa !12
  store <8 x float> %1512, <8 x float>* %1440, align 1, !tbaa !12
  store <8 x float> %1513, <8 x float>* %1444, align 1, !tbaa !12
  store <8 x float> %1514, <8 x float>* %1448, align 1, !tbaa !12
  store <8 x float> %1515, <8 x float>* %1452, align 1, !tbaa !12
  store <8 x float> %1516, <8 x float>* %1456, align 1, !tbaa !12
  store <8 x float> %1517, <8 x float>* %1460, align 1, !tbaa !12
  store <8 x float> %1518, <8 x float>* %1464, align 1, !tbaa !12
  store <8 x float> %1519, <8 x float>* %1468, align 1, !tbaa !12
  %1520 = add nuw nsw i64 %1389, 80
  %1521 = icmp ult i64 %1520, %1236
  br i1 %1521, label %1388, label %1382

1522:                                             ; preds = %1528
  br i1 %1092, label %1523, label %1662

1523:                                             ; preds = %1522
  %1524 = trunc i64 %76 to i32
  %1525 = mul nsw i32 %1091, %1524
  %1526 = sext i32 %1525 to i64
  %1527 = zext i32 %1091 to i64
  br label %1667

1528:                                             ; preds = %1383, %1528
  %1529 = phi i64 [ 0, %1383 ], [ %1660, %1528 ]
  %1530 = getelementptr inbounds float, float* %5, i64 %1529
  %1531 = getelementptr inbounds float, float* %1530, i64 8
  %1532 = bitcast float* %1531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1532, i32 0, i32 1, i32 1)
  %1533 = getelementptr inbounds float, float* %3, i64 %1529
  %1534 = getelementptr inbounds float, float* %1533, i64 8
  %1535 = bitcast float* %1534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1535, i32 0, i32 1, i32 1)
  %1536 = getelementptr inbounds float, float* %1530, i64 16
  %1537 = bitcast float* %1536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1537, i32 0, i32 1, i32 1)
  %1538 = getelementptr inbounds float, float* %1533, i64 16
  %1539 = bitcast float* %1538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1539, i32 0, i32 1, i32 1)
  %1540 = getelementptr inbounds float, float* %1530, i64 24
  %1541 = bitcast float* %1540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1541, i32 0, i32 1, i32 1)
  %1542 = getelementptr inbounds float, float* %1533, i64 24
  %1543 = bitcast float* %1542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1543, i32 0, i32 1, i32 1)
  %1544 = getelementptr inbounds float, float* %1530, i64 32
  %1545 = bitcast float* %1544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1545, i32 0, i32 1, i32 1)
  %1546 = getelementptr inbounds float, float* %1533, i64 32
  %1547 = bitcast float* %1546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1547, i32 0, i32 1, i32 1)
  %1548 = getelementptr inbounds float, float* %1530, i64 40
  %1549 = bitcast float* %1548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1549, i32 0, i32 1, i32 1)
  %1550 = getelementptr inbounds float, float* %1533, i64 40
  %1551 = bitcast float* %1550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1551, i32 0, i32 1, i32 1)
  %1552 = getelementptr inbounds float, float* %1530, i64 48
  %1553 = bitcast float* %1552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1553, i32 0, i32 1, i32 1)
  %1554 = getelementptr inbounds float, float* %1533, i64 48
  %1555 = bitcast float* %1554 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1555, i32 0, i32 1, i32 1)
  %1556 = getelementptr inbounds float, float* %1530, i64 56
  %1557 = bitcast float* %1556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1557, i32 0, i32 1, i32 1)
  %1558 = getelementptr inbounds float, float* %1533, i64 56
  %1559 = bitcast float* %1558 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1559, i32 0, i32 1, i32 1)
  %1560 = getelementptr inbounds float, float* %1530, i64 64
  %1561 = bitcast float* %1560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1561, i32 0, i32 1, i32 1)
  %1562 = getelementptr inbounds float, float* %1533, i64 64
  %1563 = bitcast float* %1562 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1563, i32 0, i32 1, i32 1)
  %1564 = getelementptr inbounds float, float* %1530, i64 72
  %1565 = bitcast float* %1564 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1565, i32 0, i32 1, i32 1)
  %1566 = getelementptr inbounds float, float* %1533, i64 72
  %1567 = bitcast float* %1566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1567, i32 0, i32 1, i32 1)
  %1568 = getelementptr inbounds float, float* %1530, i64 80
  %1569 = bitcast float* %1568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1569, i32 0, i32 1, i32 1)
  %1570 = getelementptr inbounds float, float* %1533, i64 80
  %1571 = bitcast float* %1570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1571, i32 0, i32 1, i32 1)
  %1572 = bitcast float* %1530 to <8 x float>*
  %1573 = load <8 x float>, <8 x float>* %1572, align 1, !tbaa !12
  %1574 = or i64 %1529, 8
  %1575 = getelementptr inbounds float, float* %5, i64 %1574
  %1576 = bitcast float* %1575 to <8 x float>*
  %1577 = load <8 x float>, <8 x float>* %1576, align 1, !tbaa !12
  %1578 = add nuw nsw i64 %1529, 16
  %1579 = getelementptr inbounds float, float* %5, i64 %1578
  %1580 = bitcast float* %1579 to <8 x float>*
  %1581 = load <8 x float>, <8 x float>* %1580, align 1, !tbaa !12
  %1582 = add nuw nsw i64 %1529, 24
  %1583 = getelementptr inbounds float, float* %5, i64 %1582
  %1584 = bitcast float* %1583 to <8 x float>*
  %1585 = load <8 x float>, <8 x float>* %1584, align 1, !tbaa !12
  %1586 = add nuw nsw i64 %1529, 32
  %1587 = getelementptr inbounds float, float* %5, i64 %1586
  %1588 = bitcast float* %1587 to <8 x float>*
  %1589 = load <8 x float>, <8 x float>* %1588, align 1, !tbaa !12
  %1590 = add nuw nsw i64 %1529, 40
  %1591 = getelementptr inbounds float, float* %5, i64 %1590
  %1592 = bitcast float* %1591 to <8 x float>*
  %1593 = load <8 x float>, <8 x float>* %1592, align 1, !tbaa !12
  %1594 = add nuw nsw i64 %1529, 48
  %1595 = getelementptr inbounds float, float* %5, i64 %1594
  %1596 = bitcast float* %1595 to <8 x float>*
  %1597 = load <8 x float>, <8 x float>* %1596, align 1, !tbaa !12
  %1598 = add nuw nsw i64 %1529, 56
  %1599 = getelementptr inbounds float, float* %5, i64 %1598
  %1600 = bitcast float* %1599 to <8 x float>*
  %1601 = load <8 x float>, <8 x float>* %1600, align 1, !tbaa !12
  %1602 = add nuw nsw i64 %1529, 64
  %1603 = getelementptr inbounds float, float* %5, i64 %1602
  %1604 = bitcast float* %1603 to <8 x float>*
  %1605 = load <8 x float>, <8 x float>* %1604, align 1, !tbaa !12
  %1606 = add nuw nsw i64 %1529, 72
  %1607 = getelementptr inbounds float, float* %5, i64 %1606
  %1608 = bitcast float* %1607 to <8 x float>*
  %1609 = load <8 x float>, <8 x float>* %1608, align 1, !tbaa !12
  %1610 = add nsw i64 %1529, %1386
  %1611 = getelementptr inbounds float, float* %3, i64 %1610
  %1612 = bitcast float* %1611 to <8 x float>*
  %1613 = load <8 x float>, <8 x float>* %1612, align 1, !tbaa !12
  %1614 = add nsw i64 %1610, 8
  %1615 = getelementptr inbounds float, float* %3, i64 %1614
  %1616 = bitcast float* %1615 to <8 x float>*
  %1617 = load <8 x float>, <8 x float>* %1616, align 1, !tbaa !12
  %1618 = add nsw i64 %1610, 16
  %1619 = getelementptr inbounds float, float* %3, i64 %1618
  %1620 = bitcast float* %1619 to <8 x float>*
  %1621 = load <8 x float>, <8 x float>* %1620, align 1, !tbaa !12
  %1622 = add nsw i64 %1610, 24
  %1623 = getelementptr inbounds float, float* %3, i64 %1622
  %1624 = bitcast float* %1623 to <8 x float>*
  %1625 = load <8 x float>, <8 x float>* %1624, align 1, !tbaa !12
  %1626 = add nsw i64 %1610, 32
  %1627 = getelementptr inbounds float, float* %3, i64 %1626
  %1628 = bitcast float* %1627 to <8 x float>*
  %1629 = load <8 x float>, <8 x float>* %1628, align 1, !tbaa !12
  %1630 = add nsw i64 %1610, 40
  %1631 = getelementptr inbounds float, float* %3, i64 %1630
  %1632 = bitcast float* %1631 to <8 x float>*
  %1633 = load <8 x float>, <8 x float>* %1632, align 1, !tbaa !12
  %1634 = add nsw i64 %1610, 48
  %1635 = getelementptr inbounds float, float* %3, i64 %1634
  %1636 = bitcast float* %1635 to <8 x float>*
  %1637 = load <8 x float>, <8 x float>* %1636, align 1, !tbaa !12
  %1638 = add nsw i64 %1610, 56
  %1639 = getelementptr inbounds float, float* %3, i64 %1638
  %1640 = bitcast float* %1639 to <8 x float>*
  %1641 = load <8 x float>, <8 x float>* %1640, align 1, !tbaa !12
  %1642 = add nsw i64 %1610, 64
  %1643 = getelementptr inbounds float, float* %3, i64 %1642
  %1644 = bitcast float* %1643 to <8 x float>*
  %1645 = load <8 x float>, <8 x float>* %1644, align 1, !tbaa !12
  %1646 = add nsw i64 %1610, 72
  %1647 = getelementptr inbounds float, float* %3, i64 %1646
  %1648 = bitcast float* %1647 to <8 x float>*
  %1649 = load <8 x float>, <8 x float>* %1648, align 1, !tbaa !12
  %1650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1613, <8 x float> %75, <8 x float> %1573) #10
  %1651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1617, <8 x float> %75, <8 x float> %1577) #10
  %1652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1621, <8 x float> %75, <8 x float> %1581) #10
  %1653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1625, <8 x float> %75, <8 x float> %1585) #10
  %1654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1629, <8 x float> %75, <8 x float> %1589) #10
  %1655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1633, <8 x float> %75, <8 x float> %1593) #10
  %1656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1637, <8 x float> %75, <8 x float> %1597) #10
  %1657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1641, <8 x float> %75, <8 x float> %1601) #10
  %1658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1645, <8 x float> %75, <8 x float> %1605) #10
  %1659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1649, <8 x float> %75, <8 x float> %1609) #10
  store <8 x float> %1650, <8 x float>* %1572, align 1, !tbaa !12
  store <8 x float> %1651, <8 x float>* %1576, align 1, !tbaa !12
  store <8 x float> %1652, <8 x float>* %1580, align 1, !tbaa !12
  store <8 x float> %1653, <8 x float>* %1584, align 1, !tbaa !12
  store <8 x float> %1654, <8 x float>* %1588, align 1, !tbaa !12
  store <8 x float> %1655, <8 x float>* %1592, align 1, !tbaa !12
  store <8 x float> %1656, <8 x float>* %1596, align 1, !tbaa !12
  store <8 x float> %1657, <8 x float>* %1600, align 1, !tbaa !12
  store <8 x float> %1658, <8 x float>* %1604, align 1, !tbaa !12
  store <8 x float> %1659, <8 x float>* %1608, align 1, !tbaa !12
  %1660 = add nuw nsw i64 %1529, 80
  %1661 = icmp ult i64 %1660, %1387
  br i1 %1661, label %1528, label %1522

1662:                                             ; preds = %1667, %20, %518, %1090, %1231, %1382, %1522
  %1663 = add nuw nsw i64 %21, 12
  %1664 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1665 = sext i32 %1664 to i64
  %1666 = icmp slt i64 %1663, %1665
  br i1 %1666, label %20, label %8

1667:                                             ; preds = %1523, %1667
  %1668 = phi i64 [ 0, %1523 ], [ %1799, %1667 ]
  %1669 = getelementptr inbounds float, float* %5, i64 %1668
  %1670 = getelementptr inbounds float, float* %1669, i64 8
  %1671 = bitcast float* %1670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1671, i32 0, i32 1, i32 1)
  %1672 = getelementptr inbounds float, float* %3, i64 %1668
  %1673 = getelementptr inbounds float, float* %1672, i64 8
  %1674 = bitcast float* %1673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1674, i32 0, i32 1, i32 1)
  %1675 = getelementptr inbounds float, float* %1669, i64 16
  %1676 = bitcast float* %1675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1676, i32 0, i32 1, i32 1)
  %1677 = getelementptr inbounds float, float* %1672, i64 16
  %1678 = bitcast float* %1677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1678, i32 0, i32 1, i32 1)
  %1679 = getelementptr inbounds float, float* %1669, i64 24
  %1680 = bitcast float* %1679 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1680, i32 0, i32 1, i32 1)
  %1681 = getelementptr inbounds float, float* %1672, i64 24
  %1682 = bitcast float* %1681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1682, i32 0, i32 1, i32 1)
  %1683 = getelementptr inbounds float, float* %1669, i64 32
  %1684 = bitcast float* %1683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1684, i32 0, i32 1, i32 1)
  %1685 = getelementptr inbounds float, float* %1672, i64 32
  %1686 = bitcast float* %1685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1686, i32 0, i32 1, i32 1)
  %1687 = getelementptr inbounds float, float* %1669, i64 40
  %1688 = bitcast float* %1687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1688, i32 0, i32 1, i32 1)
  %1689 = getelementptr inbounds float, float* %1672, i64 40
  %1690 = bitcast float* %1689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1690, i32 0, i32 1, i32 1)
  %1691 = getelementptr inbounds float, float* %1669, i64 48
  %1692 = bitcast float* %1691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1692, i32 0, i32 1, i32 1)
  %1693 = getelementptr inbounds float, float* %1672, i64 48
  %1694 = bitcast float* %1693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1694, i32 0, i32 1, i32 1)
  %1695 = getelementptr inbounds float, float* %1669, i64 56
  %1696 = bitcast float* %1695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1696, i32 0, i32 1, i32 1)
  %1697 = getelementptr inbounds float, float* %1672, i64 56
  %1698 = bitcast float* %1697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1698, i32 0, i32 1, i32 1)
  %1699 = getelementptr inbounds float, float* %1669, i64 64
  %1700 = bitcast float* %1699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1700, i32 0, i32 1, i32 1)
  %1701 = getelementptr inbounds float, float* %1672, i64 64
  %1702 = bitcast float* %1701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1702, i32 0, i32 1, i32 1)
  %1703 = getelementptr inbounds float, float* %1669, i64 72
  %1704 = bitcast float* %1703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1704, i32 0, i32 1, i32 1)
  %1705 = getelementptr inbounds float, float* %1672, i64 72
  %1706 = bitcast float* %1705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1706, i32 0, i32 1, i32 1)
  %1707 = getelementptr inbounds float, float* %1669, i64 80
  %1708 = bitcast float* %1707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1708, i32 0, i32 1, i32 1)
  %1709 = getelementptr inbounds float, float* %1672, i64 80
  %1710 = bitcast float* %1709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1710, i32 0, i32 1, i32 1)
  %1711 = bitcast float* %1669 to <8 x float>*
  %1712 = load <8 x float>, <8 x float>* %1711, align 1, !tbaa !12
  %1713 = or i64 %1668, 8
  %1714 = getelementptr inbounds float, float* %5, i64 %1713
  %1715 = bitcast float* %1714 to <8 x float>*
  %1716 = load <8 x float>, <8 x float>* %1715, align 1, !tbaa !12
  %1717 = add nuw nsw i64 %1668, 16
  %1718 = getelementptr inbounds float, float* %5, i64 %1717
  %1719 = bitcast float* %1718 to <8 x float>*
  %1720 = load <8 x float>, <8 x float>* %1719, align 1, !tbaa !12
  %1721 = add nuw nsw i64 %1668, 24
  %1722 = getelementptr inbounds float, float* %5, i64 %1721
  %1723 = bitcast float* %1722 to <8 x float>*
  %1724 = load <8 x float>, <8 x float>* %1723, align 1, !tbaa !12
  %1725 = add nuw nsw i64 %1668, 32
  %1726 = getelementptr inbounds float, float* %5, i64 %1725
  %1727 = bitcast float* %1726 to <8 x float>*
  %1728 = load <8 x float>, <8 x float>* %1727, align 1, !tbaa !12
  %1729 = add nuw nsw i64 %1668, 40
  %1730 = getelementptr inbounds float, float* %5, i64 %1729
  %1731 = bitcast float* %1730 to <8 x float>*
  %1732 = load <8 x float>, <8 x float>* %1731, align 1, !tbaa !12
  %1733 = add nuw nsw i64 %1668, 48
  %1734 = getelementptr inbounds float, float* %5, i64 %1733
  %1735 = bitcast float* %1734 to <8 x float>*
  %1736 = load <8 x float>, <8 x float>* %1735, align 1, !tbaa !12
  %1737 = add nuw nsw i64 %1668, 56
  %1738 = getelementptr inbounds float, float* %5, i64 %1737
  %1739 = bitcast float* %1738 to <8 x float>*
  %1740 = load <8 x float>, <8 x float>* %1739, align 1, !tbaa !12
  %1741 = add nuw nsw i64 %1668, 64
  %1742 = getelementptr inbounds float, float* %5, i64 %1741
  %1743 = bitcast float* %1742 to <8 x float>*
  %1744 = load <8 x float>, <8 x float>* %1743, align 1, !tbaa !12
  %1745 = add nuw nsw i64 %1668, 72
  %1746 = getelementptr inbounds float, float* %5, i64 %1745
  %1747 = bitcast float* %1746 to <8 x float>*
  %1748 = load <8 x float>, <8 x float>* %1747, align 1, !tbaa !12
  %1749 = add nsw i64 %1668, %1526
  %1750 = getelementptr inbounds float, float* %3, i64 %1749
  %1751 = bitcast float* %1750 to <8 x float>*
  %1752 = load <8 x float>, <8 x float>* %1751, align 1, !tbaa !12
  %1753 = add nsw i64 %1749, 8
  %1754 = getelementptr inbounds float, float* %3, i64 %1753
  %1755 = bitcast float* %1754 to <8 x float>*
  %1756 = load <8 x float>, <8 x float>* %1755, align 1, !tbaa !12
  %1757 = add nsw i64 %1749, 16
  %1758 = getelementptr inbounds float, float* %3, i64 %1757
  %1759 = bitcast float* %1758 to <8 x float>*
  %1760 = load <8 x float>, <8 x float>* %1759, align 1, !tbaa !12
  %1761 = add nsw i64 %1749, 24
  %1762 = getelementptr inbounds float, float* %3, i64 %1761
  %1763 = bitcast float* %1762 to <8 x float>*
  %1764 = load <8 x float>, <8 x float>* %1763, align 1, !tbaa !12
  %1765 = add nsw i64 %1749, 32
  %1766 = getelementptr inbounds float, float* %3, i64 %1765
  %1767 = bitcast float* %1766 to <8 x float>*
  %1768 = load <8 x float>, <8 x float>* %1767, align 1, !tbaa !12
  %1769 = add nsw i64 %1749, 40
  %1770 = getelementptr inbounds float, float* %3, i64 %1769
  %1771 = bitcast float* %1770 to <8 x float>*
  %1772 = load <8 x float>, <8 x float>* %1771, align 1, !tbaa !12
  %1773 = add nsw i64 %1749, 48
  %1774 = getelementptr inbounds float, float* %3, i64 %1773
  %1775 = bitcast float* %1774 to <8 x float>*
  %1776 = load <8 x float>, <8 x float>* %1775, align 1, !tbaa !12
  %1777 = add nsw i64 %1749, 56
  %1778 = getelementptr inbounds float, float* %3, i64 %1777
  %1779 = bitcast float* %1778 to <8 x float>*
  %1780 = load <8 x float>, <8 x float>* %1779, align 1, !tbaa !12
  %1781 = add nsw i64 %1749, 64
  %1782 = getelementptr inbounds float, float* %3, i64 %1781
  %1783 = bitcast float* %1782 to <8 x float>*
  %1784 = load <8 x float>, <8 x float>* %1783, align 1, !tbaa !12
  %1785 = add nsw i64 %1749, 72
  %1786 = getelementptr inbounds float, float* %3, i64 %1785
  %1787 = bitcast float* %1786 to <8 x float>*
  %1788 = load <8 x float>, <8 x float>* %1787, align 1, !tbaa !12
  %1789 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1752, <8 x float> %80, <8 x float> %1712) #10
  %1790 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1756, <8 x float> %80, <8 x float> %1716) #10
  %1791 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1760, <8 x float> %80, <8 x float> %1720) #10
  %1792 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1764, <8 x float> %80, <8 x float> %1724) #10
  %1793 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1768, <8 x float> %80, <8 x float> %1728) #10
  %1794 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1772, <8 x float> %80, <8 x float> %1732) #10
  %1795 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1776, <8 x float> %80, <8 x float> %1736) #10
  %1796 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1780, <8 x float> %80, <8 x float> %1740) #10
  %1797 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1784, <8 x float> %80, <8 x float> %1744) #10
  %1798 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1788, <8 x float> %80, <8 x float> %1748) #10
  store <8 x float> %1789, <8 x float>* %1711, align 1, !tbaa !12
  store <8 x float> %1790, <8 x float>* %1715, align 1, !tbaa !12
  store <8 x float> %1791, <8 x float>* %1719, align 1, !tbaa !12
  store <8 x float> %1792, <8 x float>* %1723, align 1, !tbaa !12
  store <8 x float> %1793, <8 x float>* %1727, align 1, !tbaa !12
  store <8 x float> %1794, <8 x float>* %1731, align 1, !tbaa !12
  store <8 x float> %1795, <8 x float>* %1735, align 1, !tbaa !12
  store <8 x float> %1796, <8 x float>* %1739, align 1, !tbaa !12
  store <8 x float> %1797, <8 x float>* %1743, align 1, !tbaa !12
  store <8 x float> %1798, <8 x float>* %1747, align 1, !tbaa !12
  %1799 = add nuw nsw i64 %1668, 80
  %1800 = icmp ult i64 %1799, %1527
  br i1 %1800, label %1667, label %1662
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 252
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui10_uk12.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
