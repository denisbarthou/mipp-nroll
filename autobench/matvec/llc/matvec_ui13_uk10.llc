; ModuleID = 'codes/matvec_ui13_uk10.cpp'
source_filename = "codes/matvec_ui13_uk10.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui13_uk10.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 104
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 80
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1733, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1733
  %21 = phi i64 [ %1734, %1733 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %1733

73:                                               ; preds = %20
  %74 = zext i32 %71 to i64
  %75 = trunc i64 %21 to i32
  %76 = mul nsw i32 %71, %75
  br label %83

77:                                               ; preds = %83
  br i1 %72, label %78, label %449

78:                                               ; preds = %77
  %79 = trunc i64 %26 to i32
  %80 = mul nsw i32 %71, %79
  %81 = sext i32 %80 to i64
  %82 = zext i32 %71 to i64
  br label %276

83:                                               ; preds = %73, %83
  %84 = phi i64 [ 0, %73 ], [ %268, %83 ]
  %85 = getelementptr inbounds float, float* %5, i64 %84
  %86 = getelementptr inbounds float, float* %85, i64 8
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %3, i64 %84
  %89 = getelementptr inbounds float, float* %88, i64 8
  %90 = bitcast float* %89 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %90, i32 0, i32 1, i32 1)
  %91 = getelementptr inbounds float, float* %85, i64 16
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %88, i64 16
  %94 = bitcast float* %93 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %94, i32 0, i32 1, i32 1)
  %95 = getelementptr inbounds float, float* %85, i64 24
  %96 = bitcast float* %95 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %96, i32 0, i32 1, i32 1)
  %97 = getelementptr inbounds float, float* %88, i64 24
  %98 = bitcast float* %97 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %98, i32 0, i32 1, i32 1)
  %99 = getelementptr inbounds float, float* %85, i64 32
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %88, i64 32
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %85, i64 40
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %88, i64 40
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %85, i64 48
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %88, i64 48
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %85, i64 56
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %88, i64 56
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %85, i64 64
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %88, i64 64
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %85, i64 72
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %88, i64 72
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %85, i64 80
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %88, i64 80
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %85, i64 88
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %88, i64 88
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %85, i64 96
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %88, i64 96
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %85, i64 104
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = getelementptr inbounds float, float* %88, i64 104
  %138 = bitcast float* %137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %138, i32 0, i32 1, i32 1)
  %139 = bitcast float* %85 to <8 x float>*
  %140 = load <8 x float>, <8 x float>* %139, align 1, !tbaa !12
  %141 = add nuw nsw i64 %84, 8
  %142 = getelementptr inbounds float, float* %5, i64 %141
  %143 = bitcast float* %142 to <8 x float>*
  %144 = load <8 x float>, <8 x float>* %143, align 1, !tbaa !12
  %145 = add nuw nsw i64 %84, 16
  %146 = getelementptr inbounds float, float* %5, i64 %145
  %147 = bitcast float* %146 to <8 x float>*
  %148 = load <8 x float>, <8 x float>* %147, align 1, !tbaa !12
  %149 = add nuw nsw i64 %84, 24
  %150 = getelementptr inbounds float, float* %5, i64 %149
  %151 = bitcast float* %150 to <8 x float>*
  %152 = load <8 x float>, <8 x float>* %151, align 1, !tbaa !12
  %153 = add nuw nsw i64 %84, 32
  %154 = getelementptr inbounds float, float* %5, i64 %153
  %155 = bitcast float* %154 to <8 x float>*
  %156 = load <8 x float>, <8 x float>* %155, align 1, !tbaa !12
  %157 = add nuw nsw i64 %84, 40
  %158 = getelementptr inbounds float, float* %5, i64 %157
  %159 = bitcast float* %158 to <8 x float>*
  %160 = load <8 x float>, <8 x float>* %159, align 1, !tbaa !12
  %161 = add nuw nsw i64 %84, 48
  %162 = getelementptr inbounds float, float* %5, i64 %161
  %163 = bitcast float* %162 to <8 x float>*
  %164 = load <8 x float>, <8 x float>* %163, align 1, !tbaa !12
  %165 = add nuw nsw i64 %84, 56
  %166 = getelementptr inbounds float, float* %5, i64 %165
  %167 = bitcast float* %166 to <8 x float>*
  %168 = load <8 x float>, <8 x float>* %167, align 1, !tbaa !12
  %169 = add nuw nsw i64 %84, 64
  %170 = getelementptr inbounds float, float* %5, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nuw nsw i64 %84, 72
  %174 = getelementptr inbounds float, float* %5, i64 %173
  %175 = bitcast float* %174 to <8 x float>*
  %176 = load <8 x float>, <8 x float>* %175, align 1, !tbaa !12
  %177 = add nuw nsw i64 %84, 80
  %178 = getelementptr inbounds float, float* %5, i64 %177
  %179 = bitcast float* %178 to <8 x float>*
  %180 = load <8 x float>, <8 x float>* %179, align 1, !tbaa !12
  %181 = add nuw nsw i64 %84, 88
  %182 = getelementptr inbounds float, float* %5, i64 %181
  %183 = bitcast float* %182 to <8 x float>*
  %184 = load <8 x float>, <8 x float>* %183, align 1, !tbaa !12
  %185 = add nuw nsw i64 %84, 96
  %186 = getelementptr inbounds float, float* %5, i64 %185
  %187 = bitcast float* %186 to <8 x float>*
  %188 = load <8 x float>, <8 x float>* %187, align 1, !tbaa !12
  %189 = trunc i64 %84 to i32
  %190 = add nsw i32 %76, %189
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds float, float* %3, i64 %191
  %193 = bitcast float* %192 to <8 x float>*
  %194 = load <8 x float>, <8 x float>* %193, align 1, !tbaa !12
  %195 = add nsw i32 %190, 8
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds float, float* %3, i64 %196
  %198 = bitcast float* %197 to <8 x float>*
  %199 = load <8 x float>, <8 x float>* %198, align 1, !tbaa !12
  %200 = add nsw i32 %190, 16
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds float, float* %3, i64 %201
  %203 = bitcast float* %202 to <8 x float>*
  %204 = load <8 x float>, <8 x float>* %203, align 1, !tbaa !12
  %205 = add nsw i32 %190, 24
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds float, float* %3, i64 %206
  %208 = bitcast float* %207 to <8 x float>*
  %209 = load <8 x float>, <8 x float>* %208, align 1, !tbaa !12
  %210 = add nsw i32 %190, 32
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds float, float* %3, i64 %211
  %213 = bitcast float* %212 to <8 x float>*
  %214 = load <8 x float>, <8 x float>* %213, align 1, !tbaa !12
  %215 = add nsw i32 %190, 40
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds float, float* %3, i64 %216
  %218 = bitcast float* %217 to <8 x float>*
  %219 = load <8 x float>, <8 x float>* %218, align 1, !tbaa !12
  %220 = add nsw i32 %190, 48
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds float, float* %3, i64 %221
  %223 = bitcast float* %222 to <8 x float>*
  %224 = load <8 x float>, <8 x float>* %223, align 1, !tbaa !12
  %225 = add nsw i32 %190, 56
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds float, float* %3, i64 %226
  %228 = bitcast float* %227 to <8 x float>*
  %229 = load <8 x float>, <8 x float>* %228, align 1, !tbaa !12
  %230 = add nsw i32 %190, 64
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds float, float* %3, i64 %231
  %233 = bitcast float* %232 to <8 x float>*
  %234 = load <8 x float>, <8 x float>* %233, align 1, !tbaa !12
  %235 = add nsw i32 %190, 72
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds float, float* %3, i64 %236
  %238 = bitcast float* %237 to <8 x float>*
  %239 = load <8 x float>, <8 x float>* %238, align 1, !tbaa !12
  %240 = add nsw i32 %190, 80
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds float, float* %3, i64 %241
  %243 = bitcast float* %242 to <8 x float>*
  %244 = load <8 x float>, <8 x float>* %243, align 1, !tbaa !12
  %245 = add nsw i32 %190, 88
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds float, float* %3, i64 %246
  %248 = bitcast float* %247 to <8 x float>*
  %249 = load <8 x float>, <8 x float>* %248, align 1, !tbaa !12
  %250 = add nsw i32 %190, 96
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds float, float* %3, i64 %251
  %253 = bitcast float* %252 to <8 x float>*
  %254 = load <8 x float>, <8 x float>* %253, align 1, !tbaa !12
  %255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %194, <8 x float> %25, <8 x float> %140) #10
  %256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %199, <8 x float> %25, <8 x float> %144) #10
  %257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %204, <8 x float> %25, <8 x float> %148) #10
  %258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %209, <8 x float> %25, <8 x float> %152) #10
  %259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %214, <8 x float> %25, <8 x float> %156) #10
  %260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %219, <8 x float> %25, <8 x float> %160) #10
  %261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %224, <8 x float> %25, <8 x float> %164) #10
  %262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %229, <8 x float> %25, <8 x float> %168) #10
  %263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %234, <8 x float> %25, <8 x float> %172) #10
  %264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %239, <8 x float> %25, <8 x float> %176) #10
  %265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %244, <8 x float> %25, <8 x float> %180) #10
  %266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %249, <8 x float> %25, <8 x float> %184) #10
  %267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %254, <8 x float> %25, <8 x float> %188) #10
  store <8 x float> %255, <8 x float>* %139, align 1, !tbaa !12
  store <8 x float> %256, <8 x float>* %143, align 1, !tbaa !12
  store <8 x float> %257, <8 x float>* %147, align 1, !tbaa !12
  store <8 x float> %258, <8 x float>* %151, align 1, !tbaa !12
  store <8 x float> %259, <8 x float>* %155, align 1, !tbaa !12
  store <8 x float> %260, <8 x float>* %159, align 1, !tbaa !12
  store <8 x float> %261, <8 x float>* %163, align 1, !tbaa !12
  store <8 x float> %262, <8 x float>* %167, align 1, !tbaa !12
  store <8 x float> %263, <8 x float>* %171, align 1, !tbaa !12
  store <8 x float> %264, <8 x float>* %175, align 1, !tbaa !12
  store <8 x float> %265, <8 x float>* %179, align 1, !tbaa !12
  store <8 x float> %266, <8 x float>* %183, align 1, !tbaa !12
  store <8 x float> %267, <8 x float>* %187, align 1, !tbaa !12
  %268 = add nuw nsw i64 %84, 104
  %269 = icmp ult i64 %268, %74
  br i1 %269, label %83, label %77

270:                                              ; preds = %276
  br i1 %72, label %271, label %449

271:                                              ; preds = %270
  %272 = trunc i64 %31 to i32
  %273 = mul nsw i32 %71, %272
  %274 = sext i32 %273 to i64
  %275 = zext i32 %71 to i64
  br label %456

276:                                              ; preds = %78, %276
  %277 = phi i64 [ 0, %78 ], [ %447, %276 ]
  %278 = getelementptr inbounds float, float* %5, i64 %277
  %279 = getelementptr inbounds float, float* %278, i64 8
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %3, i64 %277
  %282 = getelementptr inbounds float, float* %281, i64 8
  %283 = bitcast float* %282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %283, i32 0, i32 1, i32 1)
  %284 = getelementptr inbounds float, float* %278, i64 16
  %285 = bitcast float* %284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %285, i32 0, i32 1, i32 1)
  %286 = getelementptr inbounds float, float* %281, i64 16
  %287 = bitcast float* %286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %287, i32 0, i32 1, i32 1)
  %288 = getelementptr inbounds float, float* %278, i64 24
  %289 = bitcast float* %288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %289, i32 0, i32 1, i32 1)
  %290 = getelementptr inbounds float, float* %281, i64 24
  %291 = bitcast float* %290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %291, i32 0, i32 1, i32 1)
  %292 = getelementptr inbounds float, float* %278, i64 32
  %293 = bitcast float* %292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %293, i32 0, i32 1, i32 1)
  %294 = getelementptr inbounds float, float* %281, i64 32
  %295 = bitcast float* %294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %295, i32 0, i32 1, i32 1)
  %296 = getelementptr inbounds float, float* %278, i64 40
  %297 = bitcast float* %296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %297, i32 0, i32 1, i32 1)
  %298 = getelementptr inbounds float, float* %281, i64 40
  %299 = bitcast float* %298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %299, i32 0, i32 1, i32 1)
  %300 = getelementptr inbounds float, float* %278, i64 48
  %301 = bitcast float* %300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %301, i32 0, i32 1, i32 1)
  %302 = getelementptr inbounds float, float* %281, i64 48
  %303 = bitcast float* %302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %303, i32 0, i32 1, i32 1)
  %304 = getelementptr inbounds float, float* %278, i64 56
  %305 = bitcast float* %304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %305, i32 0, i32 1, i32 1)
  %306 = getelementptr inbounds float, float* %281, i64 56
  %307 = bitcast float* %306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %307, i32 0, i32 1, i32 1)
  %308 = getelementptr inbounds float, float* %278, i64 64
  %309 = bitcast float* %308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %309, i32 0, i32 1, i32 1)
  %310 = getelementptr inbounds float, float* %281, i64 64
  %311 = bitcast float* %310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %311, i32 0, i32 1, i32 1)
  %312 = getelementptr inbounds float, float* %278, i64 72
  %313 = bitcast float* %312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %313, i32 0, i32 1, i32 1)
  %314 = getelementptr inbounds float, float* %281, i64 72
  %315 = bitcast float* %314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %315, i32 0, i32 1, i32 1)
  %316 = getelementptr inbounds float, float* %278, i64 80
  %317 = bitcast float* %316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %317, i32 0, i32 1, i32 1)
  %318 = getelementptr inbounds float, float* %281, i64 80
  %319 = bitcast float* %318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %319, i32 0, i32 1, i32 1)
  %320 = getelementptr inbounds float, float* %278, i64 88
  %321 = bitcast float* %320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %321, i32 0, i32 1, i32 1)
  %322 = getelementptr inbounds float, float* %281, i64 88
  %323 = bitcast float* %322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %323, i32 0, i32 1, i32 1)
  %324 = getelementptr inbounds float, float* %278, i64 96
  %325 = bitcast float* %324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %325, i32 0, i32 1, i32 1)
  %326 = getelementptr inbounds float, float* %281, i64 96
  %327 = bitcast float* %326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %327, i32 0, i32 1, i32 1)
  %328 = getelementptr inbounds float, float* %278, i64 104
  %329 = bitcast float* %328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %329, i32 0, i32 1, i32 1)
  %330 = getelementptr inbounds float, float* %281, i64 104
  %331 = bitcast float* %330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %331, i32 0, i32 1, i32 1)
  %332 = bitcast float* %278 to <8 x float>*
  %333 = load <8 x float>, <8 x float>* %332, align 1, !tbaa !12
  %334 = add nuw nsw i64 %277, 8
  %335 = getelementptr inbounds float, float* %5, i64 %334
  %336 = bitcast float* %335 to <8 x float>*
  %337 = load <8 x float>, <8 x float>* %336, align 1, !tbaa !12
  %338 = add nuw nsw i64 %277, 16
  %339 = getelementptr inbounds float, float* %5, i64 %338
  %340 = bitcast float* %339 to <8 x float>*
  %341 = load <8 x float>, <8 x float>* %340, align 1, !tbaa !12
  %342 = add nuw nsw i64 %277, 24
  %343 = getelementptr inbounds float, float* %5, i64 %342
  %344 = bitcast float* %343 to <8 x float>*
  %345 = load <8 x float>, <8 x float>* %344, align 1, !tbaa !12
  %346 = add nuw nsw i64 %277, 32
  %347 = getelementptr inbounds float, float* %5, i64 %346
  %348 = bitcast float* %347 to <8 x float>*
  %349 = load <8 x float>, <8 x float>* %348, align 1, !tbaa !12
  %350 = add nuw nsw i64 %277, 40
  %351 = getelementptr inbounds float, float* %5, i64 %350
  %352 = bitcast float* %351 to <8 x float>*
  %353 = load <8 x float>, <8 x float>* %352, align 1, !tbaa !12
  %354 = add nuw nsw i64 %277, 48
  %355 = getelementptr inbounds float, float* %5, i64 %354
  %356 = bitcast float* %355 to <8 x float>*
  %357 = load <8 x float>, <8 x float>* %356, align 1, !tbaa !12
  %358 = add nuw nsw i64 %277, 56
  %359 = getelementptr inbounds float, float* %5, i64 %358
  %360 = bitcast float* %359 to <8 x float>*
  %361 = load <8 x float>, <8 x float>* %360, align 1, !tbaa !12
  %362 = add nuw nsw i64 %277, 64
  %363 = getelementptr inbounds float, float* %5, i64 %362
  %364 = bitcast float* %363 to <8 x float>*
  %365 = load <8 x float>, <8 x float>* %364, align 1, !tbaa !12
  %366 = add nuw nsw i64 %277, 72
  %367 = getelementptr inbounds float, float* %5, i64 %366
  %368 = bitcast float* %367 to <8 x float>*
  %369 = load <8 x float>, <8 x float>* %368, align 1, !tbaa !12
  %370 = add nuw nsw i64 %277, 80
  %371 = getelementptr inbounds float, float* %5, i64 %370
  %372 = bitcast float* %371 to <8 x float>*
  %373 = load <8 x float>, <8 x float>* %372, align 1, !tbaa !12
  %374 = add nuw nsw i64 %277, 88
  %375 = getelementptr inbounds float, float* %5, i64 %374
  %376 = bitcast float* %375 to <8 x float>*
  %377 = load <8 x float>, <8 x float>* %376, align 1, !tbaa !12
  %378 = add nuw nsw i64 %277, 96
  %379 = getelementptr inbounds float, float* %5, i64 %378
  %380 = bitcast float* %379 to <8 x float>*
  %381 = load <8 x float>, <8 x float>* %380, align 1, !tbaa !12
  %382 = add nsw i64 %277, %81
  %383 = getelementptr inbounds float, float* %3, i64 %382
  %384 = bitcast float* %383 to <8 x float>*
  %385 = load <8 x float>, <8 x float>* %384, align 1, !tbaa !12
  %386 = add nsw i64 %382, 8
  %387 = getelementptr inbounds float, float* %3, i64 %386
  %388 = bitcast float* %387 to <8 x float>*
  %389 = load <8 x float>, <8 x float>* %388, align 1, !tbaa !12
  %390 = add nsw i64 %382, 16
  %391 = getelementptr inbounds float, float* %3, i64 %390
  %392 = bitcast float* %391 to <8 x float>*
  %393 = load <8 x float>, <8 x float>* %392, align 1, !tbaa !12
  %394 = add nsw i64 %382, 24
  %395 = getelementptr inbounds float, float* %3, i64 %394
  %396 = bitcast float* %395 to <8 x float>*
  %397 = load <8 x float>, <8 x float>* %396, align 1, !tbaa !12
  %398 = add nsw i64 %382, 32
  %399 = getelementptr inbounds float, float* %3, i64 %398
  %400 = bitcast float* %399 to <8 x float>*
  %401 = load <8 x float>, <8 x float>* %400, align 1, !tbaa !12
  %402 = add nsw i64 %382, 40
  %403 = getelementptr inbounds float, float* %3, i64 %402
  %404 = bitcast float* %403 to <8 x float>*
  %405 = load <8 x float>, <8 x float>* %404, align 1, !tbaa !12
  %406 = add nsw i64 %382, 48
  %407 = getelementptr inbounds float, float* %3, i64 %406
  %408 = bitcast float* %407 to <8 x float>*
  %409 = load <8 x float>, <8 x float>* %408, align 1, !tbaa !12
  %410 = add nsw i64 %382, 56
  %411 = getelementptr inbounds float, float* %3, i64 %410
  %412 = bitcast float* %411 to <8 x float>*
  %413 = load <8 x float>, <8 x float>* %412, align 1, !tbaa !12
  %414 = add nsw i64 %382, 64
  %415 = getelementptr inbounds float, float* %3, i64 %414
  %416 = bitcast float* %415 to <8 x float>*
  %417 = load <8 x float>, <8 x float>* %416, align 1, !tbaa !12
  %418 = add nsw i64 %382, 72
  %419 = getelementptr inbounds float, float* %3, i64 %418
  %420 = bitcast float* %419 to <8 x float>*
  %421 = load <8 x float>, <8 x float>* %420, align 1, !tbaa !12
  %422 = add nsw i64 %382, 80
  %423 = getelementptr inbounds float, float* %3, i64 %422
  %424 = bitcast float* %423 to <8 x float>*
  %425 = load <8 x float>, <8 x float>* %424, align 1, !tbaa !12
  %426 = add nsw i64 %382, 88
  %427 = getelementptr inbounds float, float* %3, i64 %426
  %428 = bitcast float* %427 to <8 x float>*
  %429 = load <8 x float>, <8 x float>* %428, align 1, !tbaa !12
  %430 = add nsw i64 %382, 96
  %431 = getelementptr inbounds float, float* %3, i64 %430
  %432 = bitcast float* %431 to <8 x float>*
  %433 = load <8 x float>, <8 x float>* %432, align 1, !tbaa !12
  %434 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %385, <8 x float> %30, <8 x float> %333) #10
  %435 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %389, <8 x float> %30, <8 x float> %337) #10
  %436 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %393, <8 x float> %30, <8 x float> %341) #10
  %437 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %397, <8 x float> %30, <8 x float> %345) #10
  %438 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %401, <8 x float> %30, <8 x float> %349) #10
  %439 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %405, <8 x float> %30, <8 x float> %353) #10
  %440 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %409, <8 x float> %30, <8 x float> %357) #10
  %441 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %413, <8 x float> %30, <8 x float> %361) #10
  %442 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %417, <8 x float> %30, <8 x float> %365) #10
  %443 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %421, <8 x float> %30, <8 x float> %369) #10
  %444 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %425, <8 x float> %30, <8 x float> %373) #10
  %445 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %429, <8 x float> %30, <8 x float> %377) #10
  %446 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %433, <8 x float> %30, <8 x float> %381) #10
  store <8 x float> %434, <8 x float>* %332, align 1, !tbaa !12
  store <8 x float> %435, <8 x float>* %336, align 1, !tbaa !12
  store <8 x float> %436, <8 x float>* %340, align 1, !tbaa !12
  store <8 x float> %437, <8 x float>* %344, align 1, !tbaa !12
  store <8 x float> %438, <8 x float>* %348, align 1, !tbaa !12
  store <8 x float> %439, <8 x float>* %352, align 1, !tbaa !12
  store <8 x float> %440, <8 x float>* %356, align 1, !tbaa !12
  store <8 x float> %441, <8 x float>* %360, align 1, !tbaa !12
  store <8 x float> %442, <8 x float>* %364, align 1, !tbaa !12
  store <8 x float> %443, <8 x float>* %368, align 1, !tbaa !12
  store <8 x float> %444, <8 x float>* %372, align 1, !tbaa !12
  store <8 x float> %445, <8 x float>* %376, align 1, !tbaa !12
  store <8 x float> %446, <8 x float>* %380, align 1, !tbaa !12
  %447 = add nuw nsw i64 %277, 104
  %448 = icmp ult i64 %447, %82
  br i1 %448, label %276, label %270

449:                                              ; preds = %456, %77, %270
  %450 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %451 = icmp sgt i32 %450, 0
  br i1 %451, label %452, label %1733

452:                                              ; preds = %449
  %453 = zext i32 %450 to i64
  %454 = trunc i64 %36 to i32
  %455 = mul nsw i32 %450, %454
  br label %635

456:                                              ; preds = %271, %456
  %457 = phi i64 [ 0, %271 ], [ %627, %456 ]
  %458 = getelementptr inbounds float, float* %5, i64 %457
  %459 = getelementptr inbounds float, float* %458, i64 8
  %460 = bitcast float* %459 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %460, i32 0, i32 1, i32 1)
  %461 = getelementptr inbounds float, float* %3, i64 %457
  %462 = getelementptr inbounds float, float* %461, i64 8
  %463 = bitcast float* %462 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %463, i32 0, i32 1, i32 1)
  %464 = getelementptr inbounds float, float* %458, i64 16
  %465 = bitcast float* %464 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %465, i32 0, i32 1, i32 1)
  %466 = getelementptr inbounds float, float* %461, i64 16
  %467 = bitcast float* %466 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %467, i32 0, i32 1, i32 1)
  %468 = getelementptr inbounds float, float* %458, i64 24
  %469 = bitcast float* %468 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %469, i32 0, i32 1, i32 1)
  %470 = getelementptr inbounds float, float* %461, i64 24
  %471 = bitcast float* %470 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %471, i32 0, i32 1, i32 1)
  %472 = getelementptr inbounds float, float* %458, i64 32
  %473 = bitcast float* %472 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %473, i32 0, i32 1, i32 1)
  %474 = getelementptr inbounds float, float* %461, i64 32
  %475 = bitcast float* %474 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %475, i32 0, i32 1, i32 1)
  %476 = getelementptr inbounds float, float* %458, i64 40
  %477 = bitcast float* %476 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %477, i32 0, i32 1, i32 1)
  %478 = getelementptr inbounds float, float* %461, i64 40
  %479 = bitcast float* %478 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %479, i32 0, i32 1, i32 1)
  %480 = getelementptr inbounds float, float* %458, i64 48
  %481 = bitcast float* %480 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %481, i32 0, i32 1, i32 1)
  %482 = getelementptr inbounds float, float* %461, i64 48
  %483 = bitcast float* %482 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %483, i32 0, i32 1, i32 1)
  %484 = getelementptr inbounds float, float* %458, i64 56
  %485 = bitcast float* %484 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %485, i32 0, i32 1, i32 1)
  %486 = getelementptr inbounds float, float* %461, i64 56
  %487 = bitcast float* %486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %487, i32 0, i32 1, i32 1)
  %488 = getelementptr inbounds float, float* %458, i64 64
  %489 = bitcast float* %488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %489, i32 0, i32 1, i32 1)
  %490 = getelementptr inbounds float, float* %461, i64 64
  %491 = bitcast float* %490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %491, i32 0, i32 1, i32 1)
  %492 = getelementptr inbounds float, float* %458, i64 72
  %493 = bitcast float* %492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %493, i32 0, i32 1, i32 1)
  %494 = getelementptr inbounds float, float* %461, i64 72
  %495 = bitcast float* %494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %495, i32 0, i32 1, i32 1)
  %496 = getelementptr inbounds float, float* %458, i64 80
  %497 = bitcast float* %496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %497, i32 0, i32 1, i32 1)
  %498 = getelementptr inbounds float, float* %461, i64 80
  %499 = bitcast float* %498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %499, i32 0, i32 1, i32 1)
  %500 = getelementptr inbounds float, float* %458, i64 88
  %501 = bitcast float* %500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %501, i32 0, i32 1, i32 1)
  %502 = getelementptr inbounds float, float* %461, i64 88
  %503 = bitcast float* %502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %503, i32 0, i32 1, i32 1)
  %504 = getelementptr inbounds float, float* %458, i64 96
  %505 = bitcast float* %504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %505, i32 0, i32 1, i32 1)
  %506 = getelementptr inbounds float, float* %461, i64 96
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %458, i64 104
  %509 = bitcast float* %508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %509, i32 0, i32 1, i32 1)
  %510 = getelementptr inbounds float, float* %461, i64 104
  %511 = bitcast float* %510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %511, i32 0, i32 1, i32 1)
  %512 = bitcast float* %458 to <8 x float>*
  %513 = load <8 x float>, <8 x float>* %512, align 1, !tbaa !12
  %514 = add nuw nsw i64 %457, 8
  %515 = getelementptr inbounds float, float* %5, i64 %514
  %516 = bitcast float* %515 to <8 x float>*
  %517 = load <8 x float>, <8 x float>* %516, align 1, !tbaa !12
  %518 = add nuw nsw i64 %457, 16
  %519 = getelementptr inbounds float, float* %5, i64 %518
  %520 = bitcast float* %519 to <8 x float>*
  %521 = load <8 x float>, <8 x float>* %520, align 1, !tbaa !12
  %522 = add nuw nsw i64 %457, 24
  %523 = getelementptr inbounds float, float* %5, i64 %522
  %524 = bitcast float* %523 to <8 x float>*
  %525 = load <8 x float>, <8 x float>* %524, align 1, !tbaa !12
  %526 = add nuw nsw i64 %457, 32
  %527 = getelementptr inbounds float, float* %5, i64 %526
  %528 = bitcast float* %527 to <8 x float>*
  %529 = load <8 x float>, <8 x float>* %528, align 1, !tbaa !12
  %530 = add nuw nsw i64 %457, 40
  %531 = getelementptr inbounds float, float* %5, i64 %530
  %532 = bitcast float* %531 to <8 x float>*
  %533 = load <8 x float>, <8 x float>* %532, align 1, !tbaa !12
  %534 = add nuw nsw i64 %457, 48
  %535 = getelementptr inbounds float, float* %5, i64 %534
  %536 = bitcast float* %535 to <8 x float>*
  %537 = load <8 x float>, <8 x float>* %536, align 1, !tbaa !12
  %538 = add nuw nsw i64 %457, 56
  %539 = getelementptr inbounds float, float* %5, i64 %538
  %540 = bitcast float* %539 to <8 x float>*
  %541 = load <8 x float>, <8 x float>* %540, align 1, !tbaa !12
  %542 = add nuw nsw i64 %457, 64
  %543 = getelementptr inbounds float, float* %5, i64 %542
  %544 = bitcast float* %543 to <8 x float>*
  %545 = load <8 x float>, <8 x float>* %544, align 1, !tbaa !12
  %546 = add nuw nsw i64 %457, 72
  %547 = getelementptr inbounds float, float* %5, i64 %546
  %548 = bitcast float* %547 to <8 x float>*
  %549 = load <8 x float>, <8 x float>* %548, align 1, !tbaa !12
  %550 = add nuw nsw i64 %457, 80
  %551 = getelementptr inbounds float, float* %5, i64 %550
  %552 = bitcast float* %551 to <8 x float>*
  %553 = load <8 x float>, <8 x float>* %552, align 1, !tbaa !12
  %554 = add nuw nsw i64 %457, 88
  %555 = getelementptr inbounds float, float* %5, i64 %554
  %556 = bitcast float* %555 to <8 x float>*
  %557 = load <8 x float>, <8 x float>* %556, align 1, !tbaa !12
  %558 = add nuw nsw i64 %457, 96
  %559 = getelementptr inbounds float, float* %5, i64 %558
  %560 = bitcast float* %559 to <8 x float>*
  %561 = load <8 x float>, <8 x float>* %560, align 1, !tbaa !12
  %562 = add nsw i64 %457, %274
  %563 = getelementptr inbounds float, float* %3, i64 %562
  %564 = bitcast float* %563 to <8 x float>*
  %565 = load <8 x float>, <8 x float>* %564, align 1, !tbaa !12
  %566 = add nsw i64 %562, 8
  %567 = getelementptr inbounds float, float* %3, i64 %566
  %568 = bitcast float* %567 to <8 x float>*
  %569 = load <8 x float>, <8 x float>* %568, align 1, !tbaa !12
  %570 = add nsw i64 %562, 16
  %571 = getelementptr inbounds float, float* %3, i64 %570
  %572 = bitcast float* %571 to <8 x float>*
  %573 = load <8 x float>, <8 x float>* %572, align 1, !tbaa !12
  %574 = add nsw i64 %562, 24
  %575 = getelementptr inbounds float, float* %3, i64 %574
  %576 = bitcast float* %575 to <8 x float>*
  %577 = load <8 x float>, <8 x float>* %576, align 1, !tbaa !12
  %578 = add nsw i64 %562, 32
  %579 = getelementptr inbounds float, float* %3, i64 %578
  %580 = bitcast float* %579 to <8 x float>*
  %581 = load <8 x float>, <8 x float>* %580, align 1, !tbaa !12
  %582 = add nsw i64 %562, 40
  %583 = getelementptr inbounds float, float* %3, i64 %582
  %584 = bitcast float* %583 to <8 x float>*
  %585 = load <8 x float>, <8 x float>* %584, align 1, !tbaa !12
  %586 = add nsw i64 %562, 48
  %587 = getelementptr inbounds float, float* %3, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %589 = load <8 x float>, <8 x float>* %588, align 1, !tbaa !12
  %590 = add nsw i64 %562, 56
  %591 = getelementptr inbounds float, float* %3, i64 %590
  %592 = bitcast float* %591 to <8 x float>*
  %593 = load <8 x float>, <8 x float>* %592, align 1, !tbaa !12
  %594 = add nsw i64 %562, 64
  %595 = getelementptr inbounds float, float* %3, i64 %594
  %596 = bitcast float* %595 to <8 x float>*
  %597 = load <8 x float>, <8 x float>* %596, align 1, !tbaa !12
  %598 = add nsw i64 %562, 72
  %599 = getelementptr inbounds float, float* %3, i64 %598
  %600 = bitcast float* %599 to <8 x float>*
  %601 = load <8 x float>, <8 x float>* %600, align 1, !tbaa !12
  %602 = add nsw i64 %562, 80
  %603 = getelementptr inbounds float, float* %3, i64 %602
  %604 = bitcast float* %603 to <8 x float>*
  %605 = load <8 x float>, <8 x float>* %604, align 1, !tbaa !12
  %606 = add nsw i64 %562, 88
  %607 = getelementptr inbounds float, float* %3, i64 %606
  %608 = bitcast float* %607 to <8 x float>*
  %609 = load <8 x float>, <8 x float>* %608, align 1, !tbaa !12
  %610 = add nsw i64 %562, 96
  %611 = getelementptr inbounds float, float* %3, i64 %610
  %612 = bitcast float* %611 to <8 x float>*
  %613 = load <8 x float>, <8 x float>* %612, align 1, !tbaa !12
  %614 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %565, <8 x float> %35, <8 x float> %513) #10
  %615 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %569, <8 x float> %35, <8 x float> %517) #10
  %616 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %573, <8 x float> %35, <8 x float> %521) #10
  %617 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %577, <8 x float> %35, <8 x float> %525) #10
  %618 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %581, <8 x float> %35, <8 x float> %529) #10
  %619 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %585, <8 x float> %35, <8 x float> %533) #10
  %620 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %589, <8 x float> %35, <8 x float> %537) #10
  %621 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %593, <8 x float> %35, <8 x float> %541) #10
  %622 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %597, <8 x float> %35, <8 x float> %545) #10
  %623 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %601, <8 x float> %35, <8 x float> %549) #10
  %624 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %605, <8 x float> %35, <8 x float> %553) #10
  %625 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %609, <8 x float> %35, <8 x float> %557) #10
  %626 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %613, <8 x float> %35, <8 x float> %561) #10
  store <8 x float> %614, <8 x float>* %512, align 1, !tbaa !12
  store <8 x float> %615, <8 x float>* %516, align 1, !tbaa !12
  store <8 x float> %616, <8 x float>* %520, align 1, !tbaa !12
  store <8 x float> %617, <8 x float>* %524, align 1, !tbaa !12
  store <8 x float> %618, <8 x float>* %528, align 1, !tbaa !12
  store <8 x float> %619, <8 x float>* %532, align 1, !tbaa !12
  store <8 x float> %620, <8 x float>* %536, align 1, !tbaa !12
  store <8 x float> %621, <8 x float>* %540, align 1, !tbaa !12
  store <8 x float> %622, <8 x float>* %544, align 1, !tbaa !12
  store <8 x float> %623, <8 x float>* %548, align 1, !tbaa !12
  store <8 x float> %624, <8 x float>* %552, align 1, !tbaa !12
  store <8 x float> %625, <8 x float>* %556, align 1, !tbaa !12
  store <8 x float> %626, <8 x float>* %560, align 1, !tbaa !12
  %627 = add nuw nsw i64 %457, 104
  %628 = icmp ult i64 %627, %275
  br i1 %628, label %456, label %449

629:                                              ; preds = %635
  br i1 %451, label %630, label %1001

630:                                              ; preds = %629
  %631 = trunc i64 %41 to i32
  %632 = mul nsw i32 %450, %631
  %633 = sext i32 %632 to i64
  %634 = zext i32 %450 to i64
  br label %828

635:                                              ; preds = %452, %635
  %636 = phi i64 [ 0, %452 ], [ %820, %635 ]
  %637 = getelementptr inbounds float, float* %5, i64 %636
  %638 = getelementptr inbounds float, float* %637, i64 8
  %639 = bitcast float* %638 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %639, i32 0, i32 1, i32 1)
  %640 = getelementptr inbounds float, float* %3, i64 %636
  %641 = getelementptr inbounds float, float* %640, i64 8
  %642 = bitcast float* %641 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %642, i32 0, i32 1, i32 1)
  %643 = getelementptr inbounds float, float* %637, i64 16
  %644 = bitcast float* %643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %644, i32 0, i32 1, i32 1)
  %645 = getelementptr inbounds float, float* %640, i64 16
  %646 = bitcast float* %645 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %646, i32 0, i32 1, i32 1)
  %647 = getelementptr inbounds float, float* %637, i64 24
  %648 = bitcast float* %647 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %648, i32 0, i32 1, i32 1)
  %649 = getelementptr inbounds float, float* %640, i64 24
  %650 = bitcast float* %649 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %650, i32 0, i32 1, i32 1)
  %651 = getelementptr inbounds float, float* %637, i64 32
  %652 = bitcast float* %651 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %652, i32 0, i32 1, i32 1)
  %653 = getelementptr inbounds float, float* %640, i64 32
  %654 = bitcast float* %653 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %654, i32 0, i32 1, i32 1)
  %655 = getelementptr inbounds float, float* %637, i64 40
  %656 = bitcast float* %655 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %656, i32 0, i32 1, i32 1)
  %657 = getelementptr inbounds float, float* %640, i64 40
  %658 = bitcast float* %657 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %658, i32 0, i32 1, i32 1)
  %659 = getelementptr inbounds float, float* %637, i64 48
  %660 = bitcast float* %659 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %660, i32 0, i32 1, i32 1)
  %661 = getelementptr inbounds float, float* %640, i64 48
  %662 = bitcast float* %661 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %662, i32 0, i32 1, i32 1)
  %663 = getelementptr inbounds float, float* %637, i64 56
  %664 = bitcast float* %663 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %664, i32 0, i32 1, i32 1)
  %665 = getelementptr inbounds float, float* %640, i64 56
  %666 = bitcast float* %665 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %666, i32 0, i32 1, i32 1)
  %667 = getelementptr inbounds float, float* %637, i64 64
  %668 = bitcast float* %667 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %668, i32 0, i32 1, i32 1)
  %669 = getelementptr inbounds float, float* %640, i64 64
  %670 = bitcast float* %669 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %670, i32 0, i32 1, i32 1)
  %671 = getelementptr inbounds float, float* %637, i64 72
  %672 = bitcast float* %671 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %672, i32 0, i32 1, i32 1)
  %673 = getelementptr inbounds float, float* %640, i64 72
  %674 = bitcast float* %673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %674, i32 0, i32 1, i32 1)
  %675 = getelementptr inbounds float, float* %637, i64 80
  %676 = bitcast float* %675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %676, i32 0, i32 1, i32 1)
  %677 = getelementptr inbounds float, float* %640, i64 80
  %678 = bitcast float* %677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %678, i32 0, i32 1, i32 1)
  %679 = getelementptr inbounds float, float* %637, i64 88
  %680 = bitcast float* %679 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %680, i32 0, i32 1, i32 1)
  %681 = getelementptr inbounds float, float* %640, i64 88
  %682 = bitcast float* %681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %682, i32 0, i32 1, i32 1)
  %683 = getelementptr inbounds float, float* %637, i64 96
  %684 = bitcast float* %683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %684, i32 0, i32 1, i32 1)
  %685 = getelementptr inbounds float, float* %640, i64 96
  %686 = bitcast float* %685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %686, i32 0, i32 1, i32 1)
  %687 = getelementptr inbounds float, float* %637, i64 104
  %688 = bitcast float* %687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %688, i32 0, i32 1, i32 1)
  %689 = getelementptr inbounds float, float* %640, i64 104
  %690 = bitcast float* %689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %690, i32 0, i32 1, i32 1)
  %691 = bitcast float* %637 to <8 x float>*
  %692 = load <8 x float>, <8 x float>* %691, align 1, !tbaa !12
  %693 = add nuw nsw i64 %636, 8
  %694 = getelementptr inbounds float, float* %5, i64 %693
  %695 = bitcast float* %694 to <8 x float>*
  %696 = load <8 x float>, <8 x float>* %695, align 1, !tbaa !12
  %697 = add nuw nsw i64 %636, 16
  %698 = getelementptr inbounds float, float* %5, i64 %697
  %699 = bitcast float* %698 to <8 x float>*
  %700 = load <8 x float>, <8 x float>* %699, align 1, !tbaa !12
  %701 = add nuw nsw i64 %636, 24
  %702 = getelementptr inbounds float, float* %5, i64 %701
  %703 = bitcast float* %702 to <8 x float>*
  %704 = load <8 x float>, <8 x float>* %703, align 1, !tbaa !12
  %705 = add nuw nsw i64 %636, 32
  %706 = getelementptr inbounds float, float* %5, i64 %705
  %707 = bitcast float* %706 to <8 x float>*
  %708 = load <8 x float>, <8 x float>* %707, align 1, !tbaa !12
  %709 = add nuw nsw i64 %636, 40
  %710 = getelementptr inbounds float, float* %5, i64 %709
  %711 = bitcast float* %710 to <8 x float>*
  %712 = load <8 x float>, <8 x float>* %711, align 1, !tbaa !12
  %713 = add nuw nsw i64 %636, 48
  %714 = getelementptr inbounds float, float* %5, i64 %713
  %715 = bitcast float* %714 to <8 x float>*
  %716 = load <8 x float>, <8 x float>* %715, align 1, !tbaa !12
  %717 = add nuw nsw i64 %636, 56
  %718 = getelementptr inbounds float, float* %5, i64 %717
  %719 = bitcast float* %718 to <8 x float>*
  %720 = load <8 x float>, <8 x float>* %719, align 1, !tbaa !12
  %721 = add nuw nsw i64 %636, 64
  %722 = getelementptr inbounds float, float* %5, i64 %721
  %723 = bitcast float* %722 to <8 x float>*
  %724 = load <8 x float>, <8 x float>* %723, align 1, !tbaa !12
  %725 = add nuw nsw i64 %636, 72
  %726 = getelementptr inbounds float, float* %5, i64 %725
  %727 = bitcast float* %726 to <8 x float>*
  %728 = load <8 x float>, <8 x float>* %727, align 1, !tbaa !12
  %729 = add nuw nsw i64 %636, 80
  %730 = getelementptr inbounds float, float* %5, i64 %729
  %731 = bitcast float* %730 to <8 x float>*
  %732 = load <8 x float>, <8 x float>* %731, align 1, !tbaa !12
  %733 = add nuw nsw i64 %636, 88
  %734 = getelementptr inbounds float, float* %5, i64 %733
  %735 = bitcast float* %734 to <8 x float>*
  %736 = load <8 x float>, <8 x float>* %735, align 1, !tbaa !12
  %737 = add nuw nsw i64 %636, 96
  %738 = getelementptr inbounds float, float* %5, i64 %737
  %739 = bitcast float* %738 to <8 x float>*
  %740 = load <8 x float>, <8 x float>* %739, align 1, !tbaa !12
  %741 = trunc i64 %636 to i32
  %742 = add nsw i32 %455, %741
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds float, float* %3, i64 %743
  %745 = bitcast float* %744 to <8 x float>*
  %746 = load <8 x float>, <8 x float>* %745, align 1, !tbaa !12
  %747 = add nsw i32 %742, 8
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds float, float* %3, i64 %748
  %750 = bitcast float* %749 to <8 x float>*
  %751 = load <8 x float>, <8 x float>* %750, align 1, !tbaa !12
  %752 = add nsw i32 %742, 16
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds float, float* %3, i64 %753
  %755 = bitcast float* %754 to <8 x float>*
  %756 = load <8 x float>, <8 x float>* %755, align 1, !tbaa !12
  %757 = add nsw i32 %742, 24
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds float, float* %3, i64 %758
  %760 = bitcast float* %759 to <8 x float>*
  %761 = load <8 x float>, <8 x float>* %760, align 1, !tbaa !12
  %762 = add nsw i32 %742, 32
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds float, float* %3, i64 %763
  %765 = bitcast float* %764 to <8 x float>*
  %766 = load <8 x float>, <8 x float>* %765, align 1, !tbaa !12
  %767 = add nsw i32 %742, 40
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds float, float* %3, i64 %768
  %770 = bitcast float* %769 to <8 x float>*
  %771 = load <8 x float>, <8 x float>* %770, align 1, !tbaa !12
  %772 = add nsw i32 %742, 48
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds float, float* %3, i64 %773
  %775 = bitcast float* %774 to <8 x float>*
  %776 = load <8 x float>, <8 x float>* %775, align 1, !tbaa !12
  %777 = add nsw i32 %742, 56
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds float, float* %3, i64 %778
  %780 = bitcast float* %779 to <8 x float>*
  %781 = load <8 x float>, <8 x float>* %780, align 1, !tbaa !12
  %782 = add nsw i32 %742, 64
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds float, float* %3, i64 %783
  %785 = bitcast float* %784 to <8 x float>*
  %786 = load <8 x float>, <8 x float>* %785, align 1, !tbaa !12
  %787 = add nsw i32 %742, 72
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds float, float* %3, i64 %788
  %790 = bitcast float* %789 to <8 x float>*
  %791 = load <8 x float>, <8 x float>* %790, align 1, !tbaa !12
  %792 = add nsw i32 %742, 80
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds float, float* %3, i64 %793
  %795 = bitcast float* %794 to <8 x float>*
  %796 = load <8 x float>, <8 x float>* %795, align 1, !tbaa !12
  %797 = add nsw i32 %742, 88
  %798 = sext i32 %797 to i64
  %799 = getelementptr inbounds float, float* %3, i64 %798
  %800 = bitcast float* %799 to <8 x float>*
  %801 = load <8 x float>, <8 x float>* %800, align 1, !tbaa !12
  %802 = add nsw i32 %742, 96
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds float, float* %3, i64 %803
  %805 = bitcast float* %804 to <8 x float>*
  %806 = load <8 x float>, <8 x float>* %805, align 1, !tbaa !12
  %807 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %746, <8 x float> %40, <8 x float> %692) #10
  %808 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %751, <8 x float> %40, <8 x float> %696) #10
  %809 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %756, <8 x float> %40, <8 x float> %700) #10
  %810 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %761, <8 x float> %40, <8 x float> %704) #10
  %811 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %766, <8 x float> %40, <8 x float> %708) #10
  %812 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %771, <8 x float> %40, <8 x float> %712) #10
  %813 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %776, <8 x float> %40, <8 x float> %716) #10
  %814 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %781, <8 x float> %40, <8 x float> %720) #10
  %815 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %786, <8 x float> %40, <8 x float> %724) #10
  %816 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %791, <8 x float> %40, <8 x float> %728) #10
  %817 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %796, <8 x float> %40, <8 x float> %732) #10
  %818 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %801, <8 x float> %40, <8 x float> %736) #10
  %819 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %806, <8 x float> %40, <8 x float> %740) #10
  store <8 x float> %807, <8 x float>* %691, align 1, !tbaa !12
  store <8 x float> %808, <8 x float>* %695, align 1, !tbaa !12
  store <8 x float> %809, <8 x float>* %699, align 1, !tbaa !12
  store <8 x float> %810, <8 x float>* %703, align 1, !tbaa !12
  store <8 x float> %811, <8 x float>* %707, align 1, !tbaa !12
  store <8 x float> %812, <8 x float>* %711, align 1, !tbaa !12
  store <8 x float> %813, <8 x float>* %715, align 1, !tbaa !12
  store <8 x float> %814, <8 x float>* %719, align 1, !tbaa !12
  store <8 x float> %815, <8 x float>* %723, align 1, !tbaa !12
  store <8 x float> %816, <8 x float>* %727, align 1, !tbaa !12
  store <8 x float> %817, <8 x float>* %731, align 1, !tbaa !12
  store <8 x float> %818, <8 x float>* %735, align 1, !tbaa !12
  store <8 x float> %819, <8 x float>* %739, align 1, !tbaa !12
  %820 = add nuw nsw i64 %636, 104
  %821 = icmp ult i64 %820, %453
  br i1 %821, label %635, label %629

822:                                              ; preds = %828
  br i1 %451, label %823, label %1001

823:                                              ; preds = %822
  %824 = trunc i64 %46 to i32
  %825 = mul nsw i32 %450, %824
  %826 = sext i32 %825 to i64
  %827 = zext i32 %450 to i64
  br label %1008

828:                                              ; preds = %630, %828
  %829 = phi i64 [ 0, %630 ], [ %999, %828 ]
  %830 = getelementptr inbounds float, float* %5, i64 %829
  %831 = getelementptr inbounds float, float* %830, i64 8
  %832 = bitcast float* %831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %832, i32 0, i32 1, i32 1)
  %833 = getelementptr inbounds float, float* %3, i64 %829
  %834 = getelementptr inbounds float, float* %833, i64 8
  %835 = bitcast float* %834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %835, i32 0, i32 1, i32 1)
  %836 = getelementptr inbounds float, float* %830, i64 16
  %837 = bitcast float* %836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %837, i32 0, i32 1, i32 1)
  %838 = getelementptr inbounds float, float* %833, i64 16
  %839 = bitcast float* %838 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %839, i32 0, i32 1, i32 1)
  %840 = getelementptr inbounds float, float* %830, i64 24
  %841 = bitcast float* %840 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %841, i32 0, i32 1, i32 1)
  %842 = getelementptr inbounds float, float* %833, i64 24
  %843 = bitcast float* %842 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %843, i32 0, i32 1, i32 1)
  %844 = getelementptr inbounds float, float* %830, i64 32
  %845 = bitcast float* %844 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %845, i32 0, i32 1, i32 1)
  %846 = getelementptr inbounds float, float* %833, i64 32
  %847 = bitcast float* %846 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %847, i32 0, i32 1, i32 1)
  %848 = getelementptr inbounds float, float* %830, i64 40
  %849 = bitcast float* %848 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %849, i32 0, i32 1, i32 1)
  %850 = getelementptr inbounds float, float* %833, i64 40
  %851 = bitcast float* %850 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %851, i32 0, i32 1, i32 1)
  %852 = getelementptr inbounds float, float* %830, i64 48
  %853 = bitcast float* %852 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %853, i32 0, i32 1, i32 1)
  %854 = getelementptr inbounds float, float* %833, i64 48
  %855 = bitcast float* %854 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %855, i32 0, i32 1, i32 1)
  %856 = getelementptr inbounds float, float* %830, i64 56
  %857 = bitcast float* %856 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %857, i32 0, i32 1, i32 1)
  %858 = getelementptr inbounds float, float* %833, i64 56
  %859 = bitcast float* %858 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %859, i32 0, i32 1, i32 1)
  %860 = getelementptr inbounds float, float* %830, i64 64
  %861 = bitcast float* %860 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %861, i32 0, i32 1, i32 1)
  %862 = getelementptr inbounds float, float* %833, i64 64
  %863 = bitcast float* %862 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %863, i32 0, i32 1, i32 1)
  %864 = getelementptr inbounds float, float* %830, i64 72
  %865 = bitcast float* %864 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %865, i32 0, i32 1, i32 1)
  %866 = getelementptr inbounds float, float* %833, i64 72
  %867 = bitcast float* %866 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %867, i32 0, i32 1, i32 1)
  %868 = getelementptr inbounds float, float* %830, i64 80
  %869 = bitcast float* %868 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %869, i32 0, i32 1, i32 1)
  %870 = getelementptr inbounds float, float* %833, i64 80
  %871 = bitcast float* %870 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %871, i32 0, i32 1, i32 1)
  %872 = getelementptr inbounds float, float* %830, i64 88
  %873 = bitcast float* %872 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %873, i32 0, i32 1, i32 1)
  %874 = getelementptr inbounds float, float* %833, i64 88
  %875 = bitcast float* %874 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %875, i32 0, i32 1, i32 1)
  %876 = getelementptr inbounds float, float* %830, i64 96
  %877 = bitcast float* %876 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %877, i32 0, i32 1, i32 1)
  %878 = getelementptr inbounds float, float* %833, i64 96
  %879 = bitcast float* %878 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %879, i32 0, i32 1, i32 1)
  %880 = getelementptr inbounds float, float* %830, i64 104
  %881 = bitcast float* %880 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %881, i32 0, i32 1, i32 1)
  %882 = getelementptr inbounds float, float* %833, i64 104
  %883 = bitcast float* %882 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %883, i32 0, i32 1, i32 1)
  %884 = bitcast float* %830 to <8 x float>*
  %885 = load <8 x float>, <8 x float>* %884, align 1, !tbaa !12
  %886 = add nuw nsw i64 %829, 8
  %887 = getelementptr inbounds float, float* %5, i64 %886
  %888 = bitcast float* %887 to <8 x float>*
  %889 = load <8 x float>, <8 x float>* %888, align 1, !tbaa !12
  %890 = add nuw nsw i64 %829, 16
  %891 = getelementptr inbounds float, float* %5, i64 %890
  %892 = bitcast float* %891 to <8 x float>*
  %893 = load <8 x float>, <8 x float>* %892, align 1, !tbaa !12
  %894 = add nuw nsw i64 %829, 24
  %895 = getelementptr inbounds float, float* %5, i64 %894
  %896 = bitcast float* %895 to <8 x float>*
  %897 = load <8 x float>, <8 x float>* %896, align 1, !tbaa !12
  %898 = add nuw nsw i64 %829, 32
  %899 = getelementptr inbounds float, float* %5, i64 %898
  %900 = bitcast float* %899 to <8 x float>*
  %901 = load <8 x float>, <8 x float>* %900, align 1, !tbaa !12
  %902 = add nuw nsw i64 %829, 40
  %903 = getelementptr inbounds float, float* %5, i64 %902
  %904 = bitcast float* %903 to <8 x float>*
  %905 = load <8 x float>, <8 x float>* %904, align 1, !tbaa !12
  %906 = add nuw nsw i64 %829, 48
  %907 = getelementptr inbounds float, float* %5, i64 %906
  %908 = bitcast float* %907 to <8 x float>*
  %909 = load <8 x float>, <8 x float>* %908, align 1, !tbaa !12
  %910 = add nuw nsw i64 %829, 56
  %911 = getelementptr inbounds float, float* %5, i64 %910
  %912 = bitcast float* %911 to <8 x float>*
  %913 = load <8 x float>, <8 x float>* %912, align 1, !tbaa !12
  %914 = add nuw nsw i64 %829, 64
  %915 = getelementptr inbounds float, float* %5, i64 %914
  %916 = bitcast float* %915 to <8 x float>*
  %917 = load <8 x float>, <8 x float>* %916, align 1, !tbaa !12
  %918 = add nuw nsw i64 %829, 72
  %919 = getelementptr inbounds float, float* %5, i64 %918
  %920 = bitcast float* %919 to <8 x float>*
  %921 = load <8 x float>, <8 x float>* %920, align 1, !tbaa !12
  %922 = add nuw nsw i64 %829, 80
  %923 = getelementptr inbounds float, float* %5, i64 %922
  %924 = bitcast float* %923 to <8 x float>*
  %925 = load <8 x float>, <8 x float>* %924, align 1, !tbaa !12
  %926 = add nuw nsw i64 %829, 88
  %927 = getelementptr inbounds float, float* %5, i64 %926
  %928 = bitcast float* %927 to <8 x float>*
  %929 = load <8 x float>, <8 x float>* %928, align 1, !tbaa !12
  %930 = add nuw nsw i64 %829, 96
  %931 = getelementptr inbounds float, float* %5, i64 %930
  %932 = bitcast float* %931 to <8 x float>*
  %933 = load <8 x float>, <8 x float>* %932, align 1, !tbaa !12
  %934 = add nsw i64 %829, %633
  %935 = getelementptr inbounds float, float* %3, i64 %934
  %936 = bitcast float* %935 to <8 x float>*
  %937 = load <8 x float>, <8 x float>* %936, align 1, !tbaa !12
  %938 = add nsw i64 %934, 8
  %939 = getelementptr inbounds float, float* %3, i64 %938
  %940 = bitcast float* %939 to <8 x float>*
  %941 = load <8 x float>, <8 x float>* %940, align 1, !tbaa !12
  %942 = add nsw i64 %934, 16
  %943 = getelementptr inbounds float, float* %3, i64 %942
  %944 = bitcast float* %943 to <8 x float>*
  %945 = load <8 x float>, <8 x float>* %944, align 1, !tbaa !12
  %946 = add nsw i64 %934, 24
  %947 = getelementptr inbounds float, float* %3, i64 %946
  %948 = bitcast float* %947 to <8 x float>*
  %949 = load <8 x float>, <8 x float>* %948, align 1, !tbaa !12
  %950 = add nsw i64 %934, 32
  %951 = getelementptr inbounds float, float* %3, i64 %950
  %952 = bitcast float* %951 to <8 x float>*
  %953 = load <8 x float>, <8 x float>* %952, align 1, !tbaa !12
  %954 = add nsw i64 %934, 40
  %955 = getelementptr inbounds float, float* %3, i64 %954
  %956 = bitcast float* %955 to <8 x float>*
  %957 = load <8 x float>, <8 x float>* %956, align 1, !tbaa !12
  %958 = add nsw i64 %934, 48
  %959 = getelementptr inbounds float, float* %3, i64 %958
  %960 = bitcast float* %959 to <8 x float>*
  %961 = load <8 x float>, <8 x float>* %960, align 1, !tbaa !12
  %962 = add nsw i64 %934, 56
  %963 = getelementptr inbounds float, float* %3, i64 %962
  %964 = bitcast float* %963 to <8 x float>*
  %965 = load <8 x float>, <8 x float>* %964, align 1, !tbaa !12
  %966 = add nsw i64 %934, 64
  %967 = getelementptr inbounds float, float* %3, i64 %966
  %968 = bitcast float* %967 to <8 x float>*
  %969 = load <8 x float>, <8 x float>* %968, align 1, !tbaa !12
  %970 = add nsw i64 %934, 72
  %971 = getelementptr inbounds float, float* %3, i64 %970
  %972 = bitcast float* %971 to <8 x float>*
  %973 = load <8 x float>, <8 x float>* %972, align 1, !tbaa !12
  %974 = add nsw i64 %934, 80
  %975 = getelementptr inbounds float, float* %3, i64 %974
  %976 = bitcast float* %975 to <8 x float>*
  %977 = load <8 x float>, <8 x float>* %976, align 1, !tbaa !12
  %978 = add nsw i64 %934, 88
  %979 = getelementptr inbounds float, float* %3, i64 %978
  %980 = bitcast float* %979 to <8 x float>*
  %981 = load <8 x float>, <8 x float>* %980, align 1, !tbaa !12
  %982 = add nsw i64 %934, 96
  %983 = getelementptr inbounds float, float* %3, i64 %982
  %984 = bitcast float* %983 to <8 x float>*
  %985 = load <8 x float>, <8 x float>* %984, align 1, !tbaa !12
  %986 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %937, <8 x float> %45, <8 x float> %885) #10
  %987 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %941, <8 x float> %45, <8 x float> %889) #10
  %988 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %945, <8 x float> %45, <8 x float> %893) #10
  %989 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %949, <8 x float> %45, <8 x float> %897) #10
  %990 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %953, <8 x float> %45, <8 x float> %901) #10
  %991 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %957, <8 x float> %45, <8 x float> %905) #10
  %992 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %961, <8 x float> %45, <8 x float> %909) #10
  %993 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %965, <8 x float> %45, <8 x float> %913) #10
  %994 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %969, <8 x float> %45, <8 x float> %917) #10
  %995 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %973, <8 x float> %45, <8 x float> %921) #10
  %996 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %977, <8 x float> %45, <8 x float> %925) #10
  %997 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %981, <8 x float> %45, <8 x float> %929) #10
  %998 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %985, <8 x float> %45, <8 x float> %933) #10
  store <8 x float> %986, <8 x float>* %884, align 1, !tbaa !12
  store <8 x float> %987, <8 x float>* %888, align 1, !tbaa !12
  store <8 x float> %988, <8 x float>* %892, align 1, !tbaa !12
  store <8 x float> %989, <8 x float>* %896, align 1, !tbaa !12
  store <8 x float> %990, <8 x float>* %900, align 1, !tbaa !12
  store <8 x float> %991, <8 x float>* %904, align 1, !tbaa !12
  store <8 x float> %992, <8 x float>* %908, align 1, !tbaa !12
  store <8 x float> %993, <8 x float>* %912, align 1, !tbaa !12
  store <8 x float> %994, <8 x float>* %916, align 1, !tbaa !12
  store <8 x float> %995, <8 x float>* %920, align 1, !tbaa !12
  store <8 x float> %996, <8 x float>* %924, align 1, !tbaa !12
  store <8 x float> %997, <8 x float>* %928, align 1, !tbaa !12
  store <8 x float> %998, <8 x float>* %932, align 1, !tbaa !12
  %999 = add nuw nsw i64 %829, 104
  %1000 = icmp ult i64 %999, %634
  br i1 %1000, label %828, label %822

1001:                                             ; preds = %1008, %629, %822
  %1002 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1003 = icmp sgt i32 %1002, 0
  br i1 %1003, label %1004, label %1733

1004:                                             ; preds = %1001
  %1005 = zext i32 %1002 to i64
  %1006 = trunc i64 %51 to i32
  %1007 = mul nsw i32 %1002, %1006
  br label %1187

1008:                                             ; preds = %823, %1008
  %1009 = phi i64 [ 0, %823 ], [ %1179, %1008 ]
  %1010 = getelementptr inbounds float, float* %5, i64 %1009
  %1011 = getelementptr inbounds float, float* %1010, i64 8
  %1012 = bitcast float* %1011 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1012, i32 0, i32 1, i32 1)
  %1013 = getelementptr inbounds float, float* %3, i64 %1009
  %1014 = getelementptr inbounds float, float* %1013, i64 8
  %1015 = bitcast float* %1014 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1015, i32 0, i32 1, i32 1)
  %1016 = getelementptr inbounds float, float* %1010, i64 16
  %1017 = bitcast float* %1016 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1017, i32 0, i32 1, i32 1)
  %1018 = getelementptr inbounds float, float* %1013, i64 16
  %1019 = bitcast float* %1018 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1019, i32 0, i32 1, i32 1)
  %1020 = getelementptr inbounds float, float* %1010, i64 24
  %1021 = bitcast float* %1020 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1021, i32 0, i32 1, i32 1)
  %1022 = getelementptr inbounds float, float* %1013, i64 24
  %1023 = bitcast float* %1022 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1023, i32 0, i32 1, i32 1)
  %1024 = getelementptr inbounds float, float* %1010, i64 32
  %1025 = bitcast float* %1024 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1025, i32 0, i32 1, i32 1)
  %1026 = getelementptr inbounds float, float* %1013, i64 32
  %1027 = bitcast float* %1026 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1027, i32 0, i32 1, i32 1)
  %1028 = getelementptr inbounds float, float* %1010, i64 40
  %1029 = bitcast float* %1028 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1029, i32 0, i32 1, i32 1)
  %1030 = getelementptr inbounds float, float* %1013, i64 40
  %1031 = bitcast float* %1030 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1031, i32 0, i32 1, i32 1)
  %1032 = getelementptr inbounds float, float* %1010, i64 48
  %1033 = bitcast float* %1032 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1033, i32 0, i32 1, i32 1)
  %1034 = getelementptr inbounds float, float* %1013, i64 48
  %1035 = bitcast float* %1034 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1035, i32 0, i32 1, i32 1)
  %1036 = getelementptr inbounds float, float* %1010, i64 56
  %1037 = bitcast float* %1036 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1037, i32 0, i32 1, i32 1)
  %1038 = getelementptr inbounds float, float* %1013, i64 56
  %1039 = bitcast float* %1038 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1039, i32 0, i32 1, i32 1)
  %1040 = getelementptr inbounds float, float* %1010, i64 64
  %1041 = bitcast float* %1040 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1041, i32 0, i32 1, i32 1)
  %1042 = getelementptr inbounds float, float* %1013, i64 64
  %1043 = bitcast float* %1042 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1043, i32 0, i32 1, i32 1)
  %1044 = getelementptr inbounds float, float* %1010, i64 72
  %1045 = bitcast float* %1044 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1045, i32 0, i32 1, i32 1)
  %1046 = getelementptr inbounds float, float* %1013, i64 72
  %1047 = bitcast float* %1046 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1047, i32 0, i32 1, i32 1)
  %1048 = getelementptr inbounds float, float* %1010, i64 80
  %1049 = bitcast float* %1048 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1049, i32 0, i32 1, i32 1)
  %1050 = getelementptr inbounds float, float* %1013, i64 80
  %1051 = bitcast float* %1050 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1051, i32 0, i32 1, i32 1)
  %1052 = getelementptr inbounds float, float* %1010, i64 88
  %1053 = bitcast float* %1052 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1053, i32 0, i32 1, i32 1)
  %1054 = getelementptr inbounds float, float* %1013, i64 88
  %1055 = bitcast float* %1054 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1055, i32 0, i32 1, i32 1)
  %1056 = getelementptr inbounds float, float* %1010, i64 96
  %1057 = bitcast float* %1056 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1057, i32 0, i32 1, i32 1)
  %1058 = getelementptr inbounds float, float* %1013, i64 96
  %1059 = bitcast float* %1058 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1059, i32 0, i32 1, i32 1)
  %1060 = getelementptr inbounds float, float* %1010, i64 104
  %1061 = bitcast float* %1060 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1061, i32 0, i32 1, i32 1)
  %1062 = getelementptr inbounds float, float* %1013, i64 104
  %1063 = bitcast float* %1062 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1063, i32 0, i32 1, i32 1)
  %1064 = bitcast float* %1010 to <8 x float>*
  %1065 = load <8 x float>, <8 x float>* %1064, align 1, !tbaa !12
  %1066 = add nuw nsw i64 %1009, 8
  %1067 = getelementptr inbounds float, float* %5, i64 %1066
  %1068 = bitcast float* %1067 to <8 x float>*
  %1069 = load <8 x float>, <8 x float>* %1068, align 1, !tbaa !12
  %1070 = add nuw nsw i64 %1009, 16
  %1071 = getelementptr inbounds float, float* %5, i64 %1070
  %1072 = bitcast float* %1071 to <8 x float>*
  %1073 = load <8 x float>, <8 x float>* %1072, align 1, !tbaa !12
  %1074 = add nuw nsw i64 %1009, 24
  %1075 = getelementptr inbounds float, float* %5, i64 %1074
  %1076 = bitcast float* %1075 to <8 x float>*
  %1077 = load <8 x float>, <8 x float>* %1076, align 1, !tbaa !12
  %1078 = add nuw nsw i64 %1009, 32
  %1079 = getelementptr inbounds float, float* %5, i64 %1078
  %1080 = bitcast float* %1079 to <8 x float>*
  %1081 = load <8 x float>, <8 x float>* %1080, align 1, !tbaa !12
  %1082 = add nuw nsw i64 %1009, 40
  %1083 = getelementptr inbounds float, float* %5, i64 %1082
  %1084 = bitcast float* %1083 to <8 x float>*
  %1085 = load <8 x float>, <8 x float>* %1084, align 1, !tbaa !12
  %1086 = add nuw nsw i64 %1009, 48
  %1087 = getelementptr inbounds float, float* %5, i64 %1086
  %1088 = bitcast float* %1087 to <8 x float>*
  %1089 = load <8 x float>, <8 x float>* %1088, align 1, !tbaa !12
  %1090 = add nuw nsw i64 %1009, 56
  %1091 = getelementptr inbounds float, float* %5, i64 %1090
  %1092 = bitcast float* %1091 to <8 x float>*
  %1093 = load <8 x float>, <8 x float>* %1092, align 1, !tbaa !12
  %1094 = add nuw nsw i64 %1009, 64
  %1095 = getelementptr inbounds float, float* %5, i64 %1094
  %1096 = bitcast float* %1095 to <8 x float>*
  %1097 = load <8 x float>, <8 x float>* %1096, align 1, !tbaa !12
  %1098 = add nuw nsw i64 %1009, 72
  %1099 = getelementptr inbounds float, float* %5, i64 %1098
  %1100 = bitcast float* %1099 to <8 x float>*
  %1101 = load <8 x float>, <8 x float>* %1100, align 1, !tbaa !12
  %1102 = add nuw nsw i64 %1009, 80
  %1103 = getelementptr inbounds float, float* %5, i64 %1102
  %1104 = bitcast float* %1103 to <8 x float>*
  %1105 = load <8 x float>, <8 x float>* %1104, align 1, !tbaa !12
  %1106 = add nuw nsw i64 %1009, 88
  %1107 = getelementptr inbounds float, float* %5, i64 %1106
  %1108 = bitcast float* %1107 to <8 x float>*
  %1109 = load <8 x float>, <8 x float>* %1108, align 1, !tbaa !12
  %1110 = add nuw nsw i64 %1009, 96
  %1111 = getelementptr inbounds float, float* %5, i64 %1110
  %1112 = bitcast float* %1111 to <8 x float>*
  %1113 = load <8 x float>, <8 x float>* %1112, align 1, !tbaa !12
  %1114 = add nsw i64 %1009, %826
  %1115 = getelementptr inbounds float, float* %3, i64 %1114
  %1116 = bitcast float* %1115 to <8 x float>*
  %1117 = load <8 x float>, <8 x float>* %1116, align 1, !tbaa !12
  %1118 = add nsw i64 %1114, 8
  %1119 = getelementptr inbounds float, float* %3, i64 %1118
  %1120 = bitcast float* %1119 to <8 x float>*
  %1121 = load <8 x float>, <8 x float>* %1120, align 1, !tbaa !12
  %1122 = add nsw i64 %1114, 16
  %1123 = getelementptr inbounds float, float* %3, i64 %1122
  %1124 = bitcast float* %1123 to <8 x float>*
  %1125 = load <8 x float>, <8 x float>* %1124, align 1, !tbaa !12
  %1126 = add nsw i64 %1114, 24
  %1127 = getelementptr inbounds float, float* %3, i64 %1126
  %1128 = bitcast float* %1127 to <8 x float>*
  %1129 = load <8 x float>, <8 x float>* %1128, align 1, !tbaa !12
  %1130 = add nsw i64 %1114, 32
  %1131 = getelementptr inbounds float, float* %3, i64 %1130
  %1132 = bitcast float* %1131 to <8 x float>*
  %1133 = load <8 x float>, <8 x float>* %1132, align 1, !tbaa !12
  %1134 = add nsw i64 %1114, 40
  %1135 = getelementptr inbounds float, float* %3, i64 %1134
  %1136 = bitcast float* %1135 to <8 x float>*
  %1137 = load <8 x float>, <8 x float>* %1136, align 1, !tbaa !12
  %1138 = add nsw i64 %1114, 48
  %1139 = getelementptr inbounds float, float* %3, i64 %1138
  %1140 = bitcast float* %1139 to <8 x float>*
  %1141 = load <8 x float>, <8 x float>* %1140, align 1, !tbaa !12
  %1142 = add nsw i64 %1114, 56
  %1143 = getelementptr inbounds float, float* %3, i64 %1142
  %1144 = bitcast float* %1143 to <8 x float>*
  %1145 = load <8 x float>, <8 x float>* %1144, align 1, !tbaa !12
  %1146 = add nsw i64 %1114, 64
  %1147 = getelementptr inbounds float, float* %3, i64 %1146
  %1148 = bitcast float* %1147 to <8 x float>*
  %1149 = load <8 x float>, <8 x float>* %1148, align 1, !tbaa !12
  %1150 = add nsw i64 %1114, 72
  %1151 = getelementptr inbounds float, float* %3, i64 %1150
  %1152 = bitcast float* %1151 to <8 x float>*
  %1153 = load <8 x float>, <8 x float>* %1152, align 1, !tbaa !12
  %1154 = add nsw i64 %1114, 80
  %1155 = getelementptr inbounds float, float* %3, i64 %1154
  %1156 = bitcast float* %1155 to <8 x float>*
  %1157 = load <8 x float>, <8 x float>* %1156, align 1, !tbaa !12
  %1158 = add nsw i64 %1114, 88
  %1159 = getelementptr inbounds float, float* %3, i64 %1158
  %1160 = bitcast float* %1159 to <8 x float>*
  %1161 = load <8 x float>, <8 x float>* %1160, align 1, !tbaa !12
  %1162 = add nsw i64 %1114, 96
  %1163 = getelementptr inbounds float, float* %3, i64 %1162
  %1164 = bitcast float* %1163 to <8 x float>*
  %1165 = load <8 x float>, <8 x float>* %1164, align 1, !tbaa !12
  %1166 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1117, <8 x float> %50, <8 x float> %1065) #10
  %1167 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1121, <8 x float> %50, <8 x float> %1069) #10
  %1168 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1125, <8 x float> %50, <8 x float> %1073) #10
  %1169 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1129, <8 x float> %50, <8 x float> %1077) #10
  %1170 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1133, <8 x float> %50, <8 x float> %1081) #10
  %1171 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1137, <8 x float> %50, <8 x float> %1085) #10
  %1172 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1141, <8 x float> %50, <8 x float> %1089) #10
  %1173 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1145, <8 x float> %50, <8 x float> %1093) #10
  %1174 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1149, <8 x float> %50, <8 x float> %1097) #10
  %1175 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1153, <8 x float> %50, <8 x float> %1101) #10
  %1176 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1157, <8 x float> %50, <8 x float> %1105) #10
  %1177 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1161, <8 x float> %50, <8 x float> %1109) #10
  %1178 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1165, <8 x float> %50, <8 x float> %1113) #10
  store <8 x float> %1166, <8 x float>* %1064, align 1, !tbaa !12
  store <8 x float> %1167, <8 x float>* %1068, align 1, !tbaa !12
  store <8 x float> %1168, <8 x float>* %1072, align 1, !tbaa !12
  store <8 x float> %1169, <8 x float>* %1076, align 1, !tbaa !12
  store <8 x float> %1170, <8 x float>* %1080, align 1, !tbaa !12
  store <8 x float> %1171, <8 x float>* %1084, align 1, !tbaa !12
  store <8 x float> %1172, <8 x float>* %1088, align 1, !tbaa !12
  store <8 x float> %1173, <8 x float>* %1092, align 1, !tbaa !12
  store <8 x float> %1174, <8 x float>* %1096, align 1, !tbaa !12
  store <8 x float> %1175, <8 x float>* %1100, align 1, !tbaa !12
  store <8 x float> %1176, <8 x float>* %1104, align 1, !tbaa !12
  store <8 x float> %1177, <8 x float>* %1108, align 1, !tbaa !12
  store <8 x float> %1178, <8 x float>* %1112, align 1, !tbaa !12
  %1179 = add nuw nsw i64 %1009, 104
  %1180 = icmp ult i64 %1179, %827
  br i1 %1180, label %1008, label %1001

1181:                                             ; preds = %1187
  br i1 %1003, label %1182, label %1553

1182:                                             ; preds = %1181
  %1183 = trunc i64 %56 to i32
  %1184 = mul nsw i32 %1002, %1183
  %1185 = sext i32 %1184 to i64
  %1186 = zext i32 %1002 to i64
  br label %1380

1187:                                             ; preds = %1004, %1187
  %1188 = phi i64 [ 0, %1004 ], [ %1372, %1187 ]
  %1189 = getelementptr inbounds float, float* %5, i64 %1188
  %1190 = getelementptr inbounds float, float* %1189, i64 8
  %1191 = bitcast float* %1190 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1191, i32 0, i32 1, i32 1)
  %1192 = getelementptr inbounds float, float* %3, i64 %1188
  %1193 = getelementptr inbounds float, float* %1192, i64 8
  %1194 = bitcast float* %1193 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1194, i32 0, i32 1, i32 1)
  %1195 = getelementptr inbounds float, float* %1189, i64 16
  %1196 = bitcast float* %1195 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1196, i32 0, i32 1, i32 1)
  %1197 = getelementptr inbounds float, float* %1192, i64 16
  %1198 = bitcast float* %1197 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1198, i32 0, i32 1, i32 1)
  %1199 = getelementptr inbounds float, float* %1189, i64 24
  %1200 = bitcast float* %1199 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1200, i32 0, i32 1, i32 1)
  %1201 = getelementptr inbounds float, float* %1192, i64 24
  %1202 = bitcast float* %1201 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1202, i32 0, i32 1, i32 1)
  %1203 = getelementptr inbounds float, float* %1189, i64 32
  %1204 = bitcast float* %1203 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1204, i32 0, i32 1, i32 1)
  %1205 = getelementptr inbounds float, float* %1192, i64 32
  %1206 = bitcast float* %1205 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1206, i32 0, i32 1, i32 1)
  %1207 = getelementptr inbounds float, float* %1189, i64 40
  %1208 = bitcast float* %1207 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1208, i32 0, i32 1, i32 1)
  %1209 = getelementptr inbounds float, float* %1192, i64 40
  %1210 = bitcast float* %1209 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1210, i32 0, i32 1, i32 1)
  %1211 = getelementptr inbounds float, float* %1189, i64 48
  %1212 = bitcast float* %1211 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1212, i32 0, i32 1, i32 1)
  %1213 = getelementptr inbounds float, float* %1192, i64 48
  %1214 = bitcast float* %1213 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1214, i32 0, i32 1, i32 1)
  %1215 = getelementptr inbounds float, float* %1189, i64 56
  %1216 = bitcast float* %1215 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1216, i32 0, i32 1, i32 1)
  %1217 = getelementptr inbounds float, float* %1192, i64 56
  %1218 = bitcast float* %1217 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1218, i32 0, i32 1, i32 1)
  %1219 = getelementptr inbounds float, float* %1189, i64 64
  %1220 = bitcast float* %1219 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1220, i32 0, i32 1, i32 1)
  %1221 = getelementptr inbounds float, float* %1192, i64 64
  %1222 = bitcast float* %1221 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1222, i32 0, i32 1, i32 1)
  %1223 = getelementptr inbounds float, float* %1189, i64 72
  %1224 = bitcast float* %1223 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1224, i32 0, i32 1, i32 1)
  %1225 = getelementptr inbounds float, float* %1192, i64 72
  %1226 = bitcast float* %1225 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1226, i32 0, i32 1, i32 1)
  %1227 = getelementptr inbounds float, float* %1189, i64 80
  %1228 = bitcast float* %1227 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1228, i32 0, i32 1, i32 1)
  %1229 = getelementptr inbounds float, float* %1192, i64 80
  %1230 = bitcast float* %1229 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1230, i32 0, i32 1, i32 1)
  %1231 = getelementptr inbounds float, float* %1189, i64 88
  %1232 = bitcast float* %1231 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1232, i32 0, i32 1, i32 1)
  %1233 = getelementptr inbounds float, float* %1192, i64 88
  %1234 = bitcast float* %1233 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1234, i32 0, i32 1, i32 1)
  %1235 = getelementptr inbounds float, float* %1189, i64 96
  %1236 = bitcast float* %1235 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1236, i32 0, i32 1, i32 1)
  %1237 = getelementptr inbounds float, float* %1192, i64 96
  %1238 = bitcast float* %1237 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1238, i32 0, i32 1, i32 1)
  %1239 = getelementptr inbounds float, float* %1189, i64 104
  %1240 = bitcast float* %1239 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1240, i32 0, i32 1, i32 1)
  %1241 = getelementptr inbounds float, float* %1192, i64 104
  %1242 = bitcast float* %1241 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1242, i32 0, i32 1, i32 1)
  %1243 = bitcast float* %1189 to <8 x float>*
  %1244 = load <8 x float>, <8 x float>* %1243, align 1, !tbaa !12
  %1245 = add nuw nsw i64 %1188, 8
  %1246 = getelementptr inbounds float, float* %5, i64 %1245
  %1247 = bitcast float* %1246 to <8 x float>*
  %1248 = load <8 x float>, <8 x float>* %1247, align 1, !tbaa !12
  %1249 = add nuw nsw i64 %1188, 16
  %1250 = getelementptr inbounds float, float* %5, i64 %1249
  %1251 = bitcast float* %1250 to <8 x float>*
  %1252 = load <8 x float>, <8 x float>* %1251, align 1, !tbaa !12
  %1253 = add nuw nsw i64 %1188, 24
  %1254 = getelementptr inbounds float, float* %5, i64 %1253
  %1255 = bitcast float* %1254 to <8 x float>*
  %1256 = load <8 x float>, <8 x float>* %1255, align 1, !tbaa !12
  %1257 = add nuw nsw i64 %1188, 32
  %1258 = getelementptr inbounds float, float* %5, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nuw nsw i64 %1188, 40
  %1262 = getelementptr inbounds float, float* %5, i64 %1261
  %1263 = bitcast float* %1262 to <8 x float>*
  %1264 = load <8 x float>, <8 x float>* %1263, align 1, !tbaa !12
  %1265 = add nuw nsw i64 %1188, 48
  %1266 = getelementptr inbounds float, float* %5, i64 %1265
  %1267 = bitcast float* %1266 to <8 x float>*
  %1268 = load <8 x float>, <8 x float>* %1267, align 1, !tbaa !12
  %1269 = add nuw nsw i64 %1188, 56
  %1270 = getelementptr inbounds float, float* %5, i64 %1269
  %1271 = bitcast float* %1270 to <8 x float>*
  %1272 = load <8 x float>, <8 x float>* %1271, align 1, !tbaa !12
  %1273 = add nuw nsw i64 %1188, 64
  %1274 = getelementptr inbounds float, float* %5, i64 %1273
  %1275 = bitcast float* %1274 to <8 x float>*
  %1276 = load <8 x float>, <8 x float>* %1275, align 1, !tbaa !12
  %1277 = add nuw nsw i64 %1188, 72
  %1278 = getelementptr inbounds float, float* %5, i64 %1277
  %1279 = bitcast float* %1278 to <8 x float>*
  %1280 = load <8 x float>, <8 x float>* %1279, align 1, !tbaa !12
  %1281 = add nuw nsw i64 %1188, 80
  %1282 = getelementptr inbounds float, float* %5, i64 %1281
  %1283 = bitcast float* %1282 to <8 x float>*
  %1284 = load <8 x float>, <8 x float>* %1283, align 1, !tbaa !12
  %1285 = add nuw nsw i64 %1188, 88
  %1286 = getelementptr inbounds float, float* %5, i64 %1285
  %1287 = bitcast float* %1286 to <8 x float>*
  %1288 = load <8 x float>, <8 x float>* %1287, align 1, !tbaa !12
  %1289 = add nuw nsw i64 %1188, 96
  %1290 = getelementptr inbounds float, float* %5, i64 %1289
  %1291 = bitcast float* %1290 to <8 x float>*
  %1292 = load <8 x float>, <8 x float>* %1291, align 1, !tbaa !12
  %1293 = trunc i64 %1188 to i32
  %1294 = add nsw i32 %1007, %1293
  %1295 = sext i32 %1294 to i64
  %1296 = getelementptr inbounds float, float* %3, i64 %1295
  %1297 = bitcast float* %1296 to <8 x float>*
  %1298 = load <8 x float>, <8 x float>* %1297, align 1, !tbaa !12
  %1299 = add nsw i32 %1294, 8
  %1300 = sext i32 %1299 to i64
  %1301 = getelementptr inbounds float, float* %3, i64 %1300
  %1302 = bitcast float* %1301 to <8 x float>*
  %1303 = load <8 x float>, <8 x float>* %1302, align 1, !tbaa !12
  %1304 = add nsw i32 %1294, 16
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds float, float* %3, i64 %1305
  %1307 = bitcast float* %1306 to <8 x float>*
  %1308 = load <8 x float>, <8 x float>* %1307, align 1, !tbaa !12
  %1309 = add nsw i32 %1294, 24
  %1310 = sext i32 %1309 to i64
  %1311 = getelementptr inbounds float, float* %3, i64 %1310
  %1312 = bitcast float* %1311 to <8 x float>*
  %1313 = load <8 x float>, <8 x float>* %1312, align 1, !tbaa !12
  %1314 = add nsw i32 %1294, 32
  %1315 = sext i32 %1314 to i64
  %1316 = getelementptr inbounds float, float* %3, i64 %1315
  %1317 = bitcast float* %1316 to <8 x float>*
  %1318 = load <8 x float>, <8 x float>* %1317, align 1, !tbaa !12
  %1319 = add nsw i32 %1294, 40
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds float, float* %3, i64 %1320
  %1322 = bitcast float* %1321 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = add nsw i32 %1294, 48
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds float, float* %3, i64 %1325
  %1327 = bitcast float* %1326 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = add nsw i32 %1294, 56
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds float, float* %3, i64 %1330
  %1332 = bitcast float* %1331 to <8 x float>*
  %1333 = load <8 x float>, <8 x float>* %1332, align 1, !tbaa !12
  %1334 = add nsw i32 %1294, 64
  %1335 = sext i32 %1334 to i64
  %1336 = getelementptr inbounds float, float* %3, i64 %1335
  %1337 = bitcast float* %1336 to <8 x float>*
  %1338 = load <8 x float>, <8 x float>* %1337, align 1, !tbaa !12
  %1339 = add nsw i32 %1294, 72
  %1340 = sext i32 %1339 to i64
  %1341 = getelementptr inbounds float, float* %3, i64 %1340
  %1342 = bitcast float* %1341 to <8 x float>*
  %1343 = load <8 x float>, <8 x float>* %1342, align 1, !tbaa !12
  %1344 = add nsw i32 %1294, 80
  %1345 = sext i32 %1344 to i64
  %1346 = getelementptr inbounds float, float* %3, i64 %1345
  %1347 = bitcast float* %1346 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = add nsw i32 %1294, 88
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds float, float* %3, i64 %1350
  %1352 = bitcast float* %1351 to <8 x float>*
  %1353 = load <8 x float>, <8 x float>* %1352, align 1, !tbaa !12
  %1354 = add nsw i32 %1294, 96
  %1355 = sext i32 %1354 to i64
  %1356 = getelementptr inbounds float, float* %3, i64 %1355
  %1357 = bitcast float* %1356 to <8 x float>*
  %1358 = load <8 x float>, <8 x float>* %1357, align 1, !tbaa !12
  %1359 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1298, <8 x float> %55, <8 x float> %1244) #10
  %1360 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1303, <8 x float> %55, <8 x float> %1248) #10
  %1361 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1308, <8 x float> %55, <8 x float> %1252) #10
  %1362 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1313, <8 x float> %55, <8 x float> %1256) #10
  %1363 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1318, <8 x float> %55, <8 x float> %1260) #10
  %1364 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1323, <8 x float> %55, <8 x float> %1264) #10
  %1365 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1328, <8 x float> %55, <8 x float> %1268) #10
  %1366 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1333, <8 x float> %55, <8 x float> %1272) #10
  %1367 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1338, <8 x float> %55, <8 x float> %1276) #10
  %1368 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1343, <8 x float> %55, <8 x float> %1280) #10
  %1369 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1348, <8 x float> %55, <8 x float> %1284) #10
  %1370 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1353, <8 x float> %55, <8 x float> %1288) #10
  %1371 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1358, <8 x float> %55, <8 x float> %1292) #10
  store <8 x float> %1359, <8 x float>* %1243, align 1, !tbaa !12
  store <8 x float> %1360, <8 x float>* %1247, align 1, !tbaa !12
  store <8 x float> %1361, <8 x float>* %1251, align 1, !tbaa !12
  store <8 x float> %1362, <8 x float>* %1255, align 1, !tbaa !12
  store <8 x float> %1363, <8 x float>* %1259, align 1, !tbaa !12
  store <8 x float> %1364, <8 x float>* %1263, align 1, !tbaa !12
  store <8 x float> %1365, <8 x float>* %1267, align 1, !tbaa !12
  store <8 x float> %1366, <8 x float>* %1271, align 1, !tbaa !12
  store <8 x float> %1367, <8 x float>* %1275, align 1, !tbaa !12
  store <8 x float> %1368, <8 x float>* %1279, align 1, !tbaa !12
  store <8 x float> %1369, <8 x float>* %1283, align 1, !tbaa !12
  store <8 x float> %1370, <8 x float>* %1287, align 1, !tbaa !12
  store <8 x float> %1371, <8 x float>* %1291, align 1, !tbaa !12
  %1372 = add nuw nsw i64 %1188, 104
  %1373 = icmp ult i64 %1372, %1005
  br i1 %1373, label %1187, label %1181

1374:                                             ; preds = %1380
  br i1 %1003, label %1375, label %1553

1375:                                             ; preds = %1374
  %1376 = trunc i64 %61 to i32
  %1377 = mul nsw i32 %1002, %1376
  %1378 = sext i32 %1377 to i64
  %1379 = zext i32 %1002 to i64
  br label %1560

1380:                                             ; preds = %1182, %1380
  %1381 = phi i64 [ 0, %1182 ], [ %1551, %1380 ]
  %1382 = getelementptr inbounds float, float* %5, i64 %1381
  %1383 = getelementptr inbounds float, float* %1382, i64 8
  %1384 = bitcast float* %1383 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1384, i32 0, i32 1, i32 1)
  %1385 = getelementptr inbounds float, float* %3, i64 %1381
  %1386 = getelementptr inbounds float, float* %1385, i64 8
  %1387 = bitcast float* %1386 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1387, i32 0, i32 1, i32 1)
  %1388 = getelementptr inbounds float, float* %1382, i64 16
  %1389 = bitcast float* %1388 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1389, i32 0, i32 1, i32 1)
  %1390 = getelementptr inbounds float, float* %1385, i64 16
  %1391 = bitcast float* %1390 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1391, i32 0, i32 1, i32 1)
  %1392 = getelementptr inbounds float, float* %1382, i64 24
  %1393 = bitcast float* %1392 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1393, i32 0, i32 1, i32 1)
  %1394 = getelementptr inbounds float, float* %1385, i64 24
  %1395 = bitcast float* %1394 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1395, i32 0, i32 1, i32 1)
  %1396 = getelementptr inbounds float, float* %1382, i64 32
  %1397 = bitcast float* %1396 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1397, i32 0, i32 1, i32 1)
  %1398 = getelementptr inbounds float, float* %1385, i64 32
  %1399 = bitcast float* %1398 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1399, i32 0, i32 1, i32 1)
  %1400 = getelementptr inbounds float, float* %1382, i64 40
  %1401 = bitcast float* %1400 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1401, i32 0, i32 1, i32 1)
  %1402 = getelementptr inbounds float, float* %1385, i64 40
  %1403 = bitcast float* %1402 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1403, i32 0, i32 1, i32 1)
  %1404 = getelementptr inbounds float, float* %1382, i64 48
  %1405 = bitcast float* %1404 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1405, i32 0, i32 1, i32 1)
  %1406 = getelementptr inbounds float, float* %1385, i64 48
  %1407 = bitcast float* %1406 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1407, i32 0, i32 1, i32 1)
  %1408 = getelementptr inbounds float, float* %1382, i64 56
  %1409 = bitcast float* %1408 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1409, i32 0, i32 1, i32 1)
  %1410 = getelementptr inbounds float, float* %1385, i64 56
  %1411 = bitcast float* %1410 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1411, i32 0, i32 1, i32 1)
  %1412 = getelementptr inbounds float, float* %1382, i64 64
  %1413 = bitcast float* %1412 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1413, i32 0, i32 1, i32 1)
  %1414 = getelementptr inbounds float, float* %1385, i64 64
  %1415 = bitcast float* %1414 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1415, i32 0, i32 1, i32 1)
  %1416 = getelementptr inbounds float, float* %1382, i64 72
  %1417 = bitcast float* %1416 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1417, i32 0, i32 1, i32 1)
  %1418 = getelementptr inbounds float, float* %1385, i64 72
  %1419 = bitcast float* %1418 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1419, i32 0, i32 1, i32 1)
  %1420 = getelementptr inbounds float, float* %1382, i64 80
  %1421 = bitcast float* %1420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1421, i32 0, i32 1, i32 1)
  %1422 = getelementptr inbounds float, float* %1385, i64 80
  %1423 = bitcast float* %1422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1423, i32 0, i32 1, i32 1)
  %1424 = getelementptr inbounds float, float* %1382, i64 88
  %1425 = bitcast float* %1424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1425, i32 0, i32 1, i32 1)
  %1426 = getelementptr inbounds float, float* %1385, i64 88
  %1427 = bitcast float* %1426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1427, i32 0, i32 1, i32 1)
  %1428 = getelementptr inbounds float, float* %1382, i64 96
  %1429 = bitcast float* %1428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1429, i32 0, i32 1, i32 1)
  %1430 = getelementptr inbounds float, float* %1385, i64 96
  %1431 = bitcast float* %1430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1431, i32 0, i32 1, i32 1)
  %1432 = getelementptr inbounds float, float* %1382, i64 104
  %1433 = bitcast float* %1432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1433, i32 0, i32 1, i32 1)
  %1434 = getelementptr inbounds float, float* %1385, i64 104
  %1435 = bitcast float* %1434 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1435, i32 0, i32 1, i32 1)
  %1436 = bitcast float* %1382 to <8 x float>*
  %1437 = load <8 x float>, <8 x float>* %1436, align 1, !tbaa !12
  %1438 = add nuw nsw i64 %1381, 8
  %1439 = getelementptr inbounds float, float* %5, i64 %1438
  %1440 = bitcast float* %1439 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = add nuw nsw i64 %1381, 16
  %1443 = getelementptr inbounds float, float* %5, i64 %1442
  %1444 = bitcast float* %1443 to <8 x float>*
  %1445 = load <8 x float>, <8 x float>* %1444, align 1, !tbaa !12
  %1446 = add nuw nsw i64 %1381, 24
  %1447 = getelementptr inbounds float, float* %5, i64 %1446
  %1448 = bitcast float* %1447 to <8 x float>*
  %1449 = load <8 x float>, <8 x float>* %1448, align 1, !tbaa !12
  %1450 = add nuw nsw i64 %1381, 32
  %1451 = getelementptr inbounds float, float* %5, i64 %1450
  %1452 = bitcast float* %1451 to <8 x float>*
  %1453 = load <8 x float>, <8 x float>* %1452, align 1, !tbaa !12
  %1454 = add nuw nsw i64 %1381, 40
  %1455 = getelementptr inbounds float, float* %5, i64 %1454
  %1456 = bitcast float* %1455 to <8 x float>*
  %1457 = load <8 x float>, <8 x float>* %1456, align 1, !tbaa !12
  %1458 = add nuw nsw i64 %1381, 48
  %1459 = getelementptr inbounds float, float* %5, i64 %1458
  %1460 = bitcast float* %1459 to <8 x float>*
  %1461 = load <8 x float>, <8 x float>* %1460, align 1, !tbaa !12
  %1462 = add nuw nsw i64 %1381, 56
  %1463 = getelementptr inbounds float, float* %5, i64 %1462
  %1464 = bitcast float* %1463 to <8 x float>*
  %1465 = load <8 x float>, <8 x float>* %1464, align 1, !tbaa !12
  %1466 = add nuw nsw i64 %1381, 64
  %1467 = getelementptr inbounds float, float* %5, i64 %1466
  %1468 = bitcast float* %1467 to <8 x float>*
  %1469 = load <8 x float>, <8 x float>* %1468, align 1, !tbaa !12
  %1470 = add nuw nsw i64 %1381, 72
  %1471 = getelementptr inbounds float, float* %5, i64 %1470
  %1472 = bitcast float* %1471 to <8 x float>*
  %1473 = load <8 x float>, <8 x float>* %1472, align 1, !tbaa !12
  %1474 = add nuw nsw i64 %1381, 80
  %1475 = getelementptr inbounds float, float* %5, i64 %1474
  %1476 = bitcast float* %1475 to <8 x float>*
  %1477 = load <8 x float>, <8 x float>* %1476, align 1, !tbaa !12
  %1478 = add nuw nsw i64 %1381, 88
  %1479 = getelementptr inbounds float, float* %5, i64 %1478
  %1480 = bitcast float* %1479 to <8 x float>*
  %1481 = load <8 x float>, <8 x float>* %1480, align 1, !tbaa !12
  %1482 = add nuw nsw i64 %1381, 96
  %1483 = getelementptr inbounds float, float* %5, i64 %1482
  %1484 = bitcast float* %1483 to <8 x float>*
  %1485 = load <8 x float>, <8 x float>* %1484, align 1, !tbaa !12
  %1486 = add nsw i64 %1381, %1185
  %1487 = getelementptr inbounds float, float* %3, i64 %1486
  %1488 = bitcast float* %1487 to <8 x float>*
  %1489 = load <8 x float>, <8 x float>* %1488, align 1, !tbaa !12
  %1490 = add nsw i64 %1486, 8
  %1491 = getelementptr inbounds float, float* %3, i64 %1490
  %1492 = bitcast float* %1491 to <8 x float>*
  %1493 = load <8 x float>, <8 x float>* %1492, align 1, !tbaa !12
  %1494 = add nsw i64 %1486, 16
  %1495 = getelementptr inbounds float, float* %3, i64 %1494
  %1496 = bitcast float* %1495 to <8 x float>*
  %1497 = load <8 x float>, <8 x float>* %1496, align 1, !tbaa !12
  %1498 = add nsw i64 %1486, 24
  %1499 = getelementptr inbounds float, float* %3, i64 %1498
  %1500 = bitcast float* %1499 to <8 x float>*
  %1501 = load <8 x float>, <8 x float>* %1500, align 1, !tbaa !12
  %1502 = add nsw i64 %1486, 32
  %1503 = getelementptr inbounds float, float* %3, i64 %1502
  %1504 = bitcast float* %1503 to <8 x float>*
  %1505 = load <8 x float>, <8 x float>* %1504, align 1, !tbaa !12
  %1506 = add nsw i64 %1486, 40
  %1507 = getelementptr inbounds float, float* %3, i64 %1506
  %1508 = bitcast float* %1507 to <8 x float>*
  %1509 = load <8 x float>, <8 x float>* %1508, align 1, !tbaa !12
  %1510 = add nsw i64 %1486, 48
  %1511 = getelementptr inbounds float, float* %3, i64 %1510
  %1512 = bitcast float* %1511 to <8 x float>*
  %1513 = load <8 x float>, <8 x float>* %1512, align 1, !tbaa !12
  %1514 = add nsw i64 %1486, 56
  %1515 = getelementptr inbounds float, float* %3, i64 %1514
  %1516 = bitcast float* %1515 to <8 x float>*
  %1517 = load <8 x float>, <8 x float>* %1516, align 1, !tbaa !12
  %1518 = add nsw i64 %1486, 64
  %1519 = getelementptr inbounds float, float* %3, i64 %1518
  %1520 = bitcast float* %1519 to <8 x float>*
  %1521 = load <8 x float>, <8 x float>* %1520, align 1, !tbaa !12
  %1522 = add nsw i64 %1486, 72
  %1523 = getelementptr inbounds float, float* %3, i64 %1522
  %1524 = bitcast float* %1523 to <8 x float>*
  %1525 = load <8 x float>, <8 x float>* %1524, align 1, !tbaa !12
  %1526 = add nsw i64 %1486, 80
  %1527 = getelementptr inbounds float, float* %3, i64 %1526
  %1528 = bitcast float* %1527 to <8 x float>*
  %1529 = load <8 x float>, <8 x float>* %1528, align 1, !tbaa !12
  %1530 = add nsw i64 %1486, 88
  %1531 = getelementptr inbounds float, float* %3, i64 %1530
  %1532 = bitcast float* %1531 to <8 x float>*
  %1533 = load <8 x float>, <8 x float>* %1532, align 1, !tbaa !12
  %1534 = add nsw i64 %1486, 96
  %1535 = getelementptr inbounds float, float* %3, i64 %1534
  %1536 = bitcast float* %1535 to <8 x float>*
  %1537 = load <8 x float>, <8 x float>* %1536, align 1, !tbaa !12
  %1538 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1489, <8 x float> %60, <8 x float> %1437) #10
  %1539 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1493, <8 x float> %60, <8 x float> %1441) #10
  %1540 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1497, <8 x float> %60, <8 x float> %1445) #10
  %1541 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1501, <8 x float> %60, <8 x float> %1449) #10
  %1542 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1505, <8 x float> %60, <8 x float> %1453) #10
  %1543 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1509, <8 x float> %60, <8 x float> %1457) #10
  %1544 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1513, <8 x float> %60, <8 x float> %1461) #10
  %1545 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1517, <8 x float> %60, <8 x float> %1465) #10
  %1546 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1521, <8 x float> %60, <8 x float> %1469) #10
  %1547 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1525, <8 x float> %60, <8 x float> %1473) #10
  %1548 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1529, <8 x float> %60, <8 x float> %1477) #10
  %1549 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1533, <8 x float> %60, <8 x float> %1481) #10
  %1550 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1537, <8 x float> %60, <8 x float> %1485) #10
  store <8 x float> %1538, <8 x float>* %1436, align 1, !tbaa !12
  store <8 x float> %1539, <8 x float>* %1440, align 1, !tbaa !12
  store <8 x float> %1540, <8 x float>* %1444, align 1, !tbaa !12
  store <8 x float> %1541, <8 x float>* %1448, align 1, !tbaa !12
  store <8 x float> %1542, <8 x float>* %1452, align 1, !tbaa !12
  store <8 x float> %1543, <8 x float>* %1456, align 1, !tbaa !12
  store <8 x float> %1544, <8 x float>* %1460, align 1, !tbaa !12
  store <8 x float> %1545, <8 x float>* %1464, align 1, !tbaa !12
  store <8 x float> %1546, <8 x float>* %1468, align 1, !tbaa !12
  store <8 x float> %1547, <8 x float>* %1472, align 1, !tbaa !12
  store <8 x float> %1548, <8 x float>* %1476, align 1, !tbaa !12
  store <8 x float> %1549, <8 x float>* %1480, align 1, !tbaa !12
  store <8 x float> %1550, <8 x float>* %1484, align 1, !tbaa !12
  %1551 = add nuw nsw i64 %1381, 104
  %1552 = icmp ult i64 %1551, %1186
  br i1 %1552, label %1380, label %1374

1553:                                             ; preds = %1560, %1181, %1374
  %1554 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1555 = icmp sgt i32 %1554, 0
  br i1 %1555, label %1556, label %1733

1556:                                             ; preds = %1553
  %1557 = zext i32 %1554 to i64
  %1558 = trunc i64 %66 to i32
  %1559 = mul nsw i32 %1554, %1558
  br label %1738

1560:                                             ; preds = %1375, %1560
  %1561 = phi i64 [ 0, %1375 ], [ %1731, %1560 ]
  %1562 = getelementptr inbounds float, float* %5, i64 %1561
  %1563 = getelementptr inbounds float, float* %1562, i64 8
  %1564 = bitcast float* %1563 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1564, i32 0, i32 1, i32 1)
  %1565 = getelementptr inbounds float, float* %3, i64 %1561
  %1566 = getelementptr inbounds float, float* %1565, i64 8
  %1567 = bitcast float* %1566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1567, i32 0, i32 1, i32 1)
  %1568 = getelementptr inbounds float, float* %1562, i64 16
  %1569 = bitcast float* %1568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1569, i32 0, i32 1, i32 1)
  %1570 = getelementptr inbounds float, float* %1565, i64 16
  %1571 = bitcast float* %1570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1571, i32 0, i32 1, i32 1)
  %1572 = getelementptr inbounds float, float* %1562, i64 24
  %1573 = bitcast float* %1572 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1573, i32 0, i32 1, i32 1)
  %1574 = getelementptr inbounds float, float* %1565, i64 24
  %1575 = bitcast float* %1574 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1575, i32 0, i32 1, i32 1)
  %1576 = getelementptr inbounds float, float* %1562, i64 32
  %1577 = bitcast float* %1576 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1577, i32 0, i32 1, i32 1)
  %1578 = getelementptr inbounds float, float* %1565, i64 32
  %1579 = bitcast float* %1578 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1579, i32 0, i32 1, i32 1)
  %1580 = getelementptr inbounds float, float* %1562, i64 40
  %1581 = bitcast float* %1580 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1581, i32 0, i32 1, i32 1)
  %1582 = getelementptr inbounds float, float* %1565, i64 40
  %1583 = bitcast float* %1582 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1583, i32 0, i32 1, i32 1)
  %1584 = getelementptr inbounds float, float* %1562, i64 48
  %1585 = bitcast float* %1584 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1585, i32 0, i32 1, i32 1)
  %1586 = getelementptr inbounds float, float* %1565, i64 48
  %1587 = bitcast float* %1586 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1587, i32 0, i32 1, i32 1)
  %1588 = getelementptr inbounds float, float* %1562, i64 56
  %1589 = bitcast float* %1588 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1589, i32 0, i32 1, i32 1)
  %1590 = getelementptr inbounds float, float* %1565, i64 56
  %1591 = bitcast float* %1590 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1591, i32 0, i32 1, i32 1)
  %1592 = getelementptr inbounds float, float* %1562, i64 64
  %1593 = bitcast float* %1592 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1593, i32 0, i32 1, i32 1)
  %1594 = getelementptr inbounds float, float* %1565, i64 64
  %1595 = bitcast float* %1594 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1595, i32 0, i32 1, i32 1)
  %1596 = getelementptr inbounds float, float* %1562, i64 72
  %1597 = bitcast float* %1596 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1597, i32 0, i32 1, i32 1)
  %1598 = getelementptr inbounds float, float* %1565, i64 72
  %1599 = bitcast float* %1598 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1599, i32 0, i32 1, i32 1)
  %1600 = getelementptr inbounds float, float* %1562, i64 80
  %1601 = bitcast float* %1600 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1601, i32 0, i32 1, i32 1)
  %1602 = getelementptr inbounds float, float* %1565, i64 80
  %1603 = bitcast float* %1602 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1603, i32 0, i32 1, i32 1)
  %1604 = getelementptr inbounds float, float* %1562, i64 88
  %1605 = bitcast float* %1604 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1605, i32 0, i32 1, i32 1)
  %1606 = getelementptr inbounds float, float* %1565, i64 88
  %1607 = bitcast float* %1606 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1607, i32 0, i32 1, i32 1)
  %1608 = getelementptr inbounds float, float* %1562, i64 96
  %1609 = bitcast float* %1608 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1609, i32 0, i32 1, i32 1)
  %1610 = getelementptr inbounds float, float* %1565, i64 96
  %1611 = bitcast float* %1610 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1611, i32 0, i32 1, i32 1)
  %1612 = getelementptr inbounds float, float* %1562, i64 104
  %1613 = bitcast float* %1612 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1613, i32 0, i32 1, i32 1)
  %1614 = getelementptr inbounds float, float* %1565, i64 104
  %1615 = bitcast float* %1614 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1615, i32 0, i32 1, i32 1)
  %1616 = bitcast float* %1562 to <8 x float>*
  %1617 = load <8 x float>, <8 x float>* %1616, align 1, !tbaa !12
  %1618 = add nuw nsw i64 %1561, 8
  %1619 = getelementptr inbounds float, float* %5, i64 %1618
  %1620 = bitcast float* %1619 to <8 x float>*
  %1621 = load <8 x float>, <8 x float>* %1620, align 1, !tbaa !12
  %1622 = add nuw nsw i64 %1561, 16
  %1623 = getelementptr inbounds float, float* %5, i64 %1622
  %1624 = bitcast float* %1623 to <8 x float>*
  %1625 = load <8 x float>, <8 x float>* %1624, align 1, !tbaa !12
  %1626 = add nuw nsw i64 %1561, 24
  %1627 = getelementptr inbounds float, float* %5, i64 %1626
  %1628 = bitcast float* %1627 to <8 x float>*
  %1629 = load <8 x float>, <8 x float>* %1628, align 1, !tbaa !12
  %1630 = add nuw nsw i64 %1561, 32
  %1631 = getelementptr inbounds float, float* %5, i64 %1630
  %1632 = bitcast float* %1631 to <8 x float>*
  %1633 = load <8 x float>, <8 x float>* %1632, align 1, !tbaa !12
  %1634 = add nuw nsw i64 %1561, 40
  %1635 = getelementptr inbounds float, float* %5, i64 %1634
  %1636 = bitcast float* %1635 to <8 x float>*
  %1637 = load <8 x float>, <8 x float>* %1636, align 1, !tbaa !12
  %1638 = add nuw nsw i64 %1561, 48
  %1639 = getelementptr inbounds float, float* %5, i64 %1638
  %1640 = bitcast float* %1639 to <8 x float>*
  %1641 = load <8 x float>, <8 x float>* %1640, align 1, !tbaa !12
  %1642 = add nuw nsw i64 %1561, 56
  %1643 = getelementptr inbounds float, float* %5, i64 %1642
  %1644 = bitcast float* %1643 to <8 x float>*
  %1645 = load <8 x float>, <8 x float>* %1644, align 1, !tbaa !12
  %1646 = add nuw nsw i64 %1561, 64
  %1647 = getelementptr inbounds float, float* %5, i64 %1646
  %1648 = bitcast float* %1647 to <8 x float>*
  %1649 = load <8 x float>, <8 x float>* %1648, align 1, !tbaa !12
  %1650 = add nuw nsw i64 %1561, 72
  %1651 = getelementptr inbounds float, float* %5, i64 %1650
  %1652 = bitcast float* %1651 to <8 x float>*
  %1653 = load <8 x float>, <8 x float>* %1652, align 1, !tbaa !12
  %1654 = add nuw nsw i64 %1561, 80
  %1655 = getelementptr inbounds float, float* %5, i64 %1654
  %1656 = bitcast float* %1655 to <8 x float>*
  %1657 = load <8 x float>, <8 x float>* %1656, align 1, !tbaa !12
  %1658 = add nuw nsw i64 %1561, 88
  %1659 = getelementptr inbounds float, float* %5, i64 %1658
  %1660 = bitcast float* %1659 to <8 x float>*
  %1661 = load <8 x float>, <8 x float>* %1660, align 1, !tbaa !12
  %1662 = add nuw nsw i64 %1561, 96
  %1663 = getelementptr inbounds float, float* %5, i64 %1662
  %1664 = bitcast float* %1663 to <8 x float>*
  %1665 = load <8 x float>, <8 x float>* %1664, align 1, !tbaa !12
  %1666 = add nsw i64 %1561, %1378
  %1667 = getelementptr inbounds float, float* %3, i64 %1666
  %1668 = bitcast float* %1667 to <8 x float>*
  %1669 = load <8 x float>, <8 x float>* %1668, align 1, !tbaa !12
  %1670 = add nsw i64 %1666, 8
  %1671 = getelementptr inbounds float, float* %3, i64 %1670
  %1672 = bitcast float* %1671 to <8 x float>*
  %1673 = load <8 x float>, <8 x float>* %1672, align 1, !tbaa !12
  %1674 = add nsw i64 %1666, 16
  %1675 = getelementptr inbounds float, float* %3, i64 %1674
  %1676 = bitcast float* %1675 to <8 x float>*
  %1677 = load <8 x float>, <8 x float>* %1676, align 1, !tbaa !12
  %1678 = add nsw i64 %1666, 24
  %1679 = getelementptr inbounds float, float* %3, i64 %1678
  %1680 = bitcast float* %1679 to <8 x float>*
  %1681 = load <8 x float>, <8 x float>* %1680, align 1, !tbaa !12
  %1682 = add nsw i64 %1666, 32
  %1683 = getelementptr inbounds float, float* %3, i64 %1682
  %1684 = bitcast float* %1683 to <8 x float>*
  %1685 = load <8 x float>, <8 x float>* %1684, align 1, !tbaa !12
  %1686 = add nsw i64 %1666, 40
  %1687 = getelementptr inbounds float, float* %3, i64 %1686
  %1688 = bitcast float* %1687 to <8 x float>*
  %1689 = load <8 x float>, <8 x float>* %1688, align 1, !tbaa !12
  %1690 = add nsw i64 %1666, 48
  %1691 = getelementptr inbounds float, float* %3, i64 %1690
  %1692 = bitcast float* %1691 to <8 x float>*
  %1693 = load <8 x float>, <8 x float>* %1692, align 1, !tbaa !12
  %1694 = add nsw i64 %1666, 56
  %1695 = getelementptr inbounds float, float* %3, i64 %1694
  %1696 = bitcast float* %1695 to <8 x float>*
  %1697 = load <8 x float>, <8 x float>* %1696, align 1, !tbaa !12
  %1698 = add nsw i64 %1666, 64
  %1699 = getelementptr inbounds float, float* %3, i64 %1698
  %1700 = bitcast float* %1699 to <8 x float>*
  %1701 = load <8 x float>, <8 x float>* %1700, align 1, !tbaa !12
  %1702 = add nsw i64 %1666, 72
  %1703 = getelementptr inbounds float, float* %3, i64 %1702
  %1704 = bitcast float* %1703 to <8 x float>*
  %1705 = load <8 x float>, <8 x float>* %1704, align 1, !tbaa !12
  %1706 = add nsw i64 %1666, 80
  %1707 = getelementptr inbounds float, float* %3, i64 %1706
  %1708 = bitcast float* %1707 to <8 x float>*
  %1709 = load <8 x float>, <8 x float>* %1708, align 1, !tbaa !12
  %1710 = add nsw i64 %1666, 88
  %1711 = getelementptr inbounds float, float* %3, i64 %1710
  %1712 = bitcast float* %1711 to <8 x float>*
  %1713 = load <8 x float>, <8 x float>* %1712, align 1, !tbaa !12
  %1714 = add nsw i64 %1666, 96
  %1715 = getelementptr inbounds float, float* %3, i64 %1714
  %1716 = bitcast float* %1715 to <8 x float>*
  %1717 = load <8 x float>, <8 x float>* %1716, align 1, !tbaa !12
  %1718 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1669, <8 x float> %65, <8 x float> %1617) #10
  %1719 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1673, <8 x float> %65, <8 x float> %1621) #10
  %1720 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1677, <8 x float> %65, <8 x float> %1625) #10
  %1721 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1681, <8 x float> %65, <8 x float> %1629) #10
  %1722 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1685, <8 x float> %65, <8 x float> %1633) #10
  %1723 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1689, <8 x float> %65, <8 x float> %1637) #10
  %1724 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1693, <8 x float> %65, <8 x float> %1641) #10
  %1725 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1697, <8 x float> %65, <8 x float> %1645) #10
  %1726 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1701, <8 x float> %65, <8 x float> %1649) #10
  %1727 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1705, <8 x float> %65, <8 x float> %1653) #10
  %1728 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1709, <8 x float> %65, <8 x float> %1657) #10
  %1729 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1713, <8 x float> %65, <8 x float> %1661) #10
  %1730 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1717, <8 x float> %65, <8 x float> %1665) #10
  store <8 x float> %1718, <8 x float>* %1616, align 1, !tbaa !12
  store <8 x float> %1719, <8 x float>* %1620, align 1, !tbaa !12
  store <8 x float> %1720, <8 x float>* %1624, align 1, !tbaa !12
  store <8 x float> %1721, <8 x float>* %1628, align 1, !tbaa !12
  store <8 x float> %1722, <8 x float>* %1632, align 1, !tbaa !12
  store <8 x float> %1723, <8 x float>* %1636, align 1, !tbaa !12
  store <8 x float> %1724, <8 x float>* %1640, align 1, !tbaa !12
  store <8 x float> %1725, <8 x float>* %1644, align 1, !tbaa !12
  store <8 x float> %1726, <8 x float>* %1648, align 1, !tbaa !12
  store <8 x float> %1727, <8 x float>* %1652, align 1, !tbaa !12
  store <8 x float> %1728, <8 x float>* %1656, align 1, !tbaa !12
  store <8 x float> %1729, <8 x float>* %1660, align 1, !tbaa !12
  store <8 x float> %1730, <8 x float>* %1664, align 1, !tbaa !12
  %1731 = add nuw nsw i64 %1561, 104
  %1732 = icmp ult i64 %1731, %1379
  br i1 %1732, label %1560, label %1553

1733:                                             ; preds = %1738, %449, %20, %1001, %1553
  %1734 = add nuw nsw i64 %21, 10
  %1735 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1736 = sext i32 %1735 to i64
  %1737 = icmp slt i64 %1734, %1736
  br i1 %1737, label %20, label %8

1738:                                             ; preds = %1556, %1738
  %1739 = phi i64 [ 0, %1556 ], [ %1923, %1738 ]
  %1740 = getelementptr inbounds float, float* %5, i64 %1739
  %1741 = getelementptr inbounds float, float* %1740, i64 8
  %1742 = bitcast float* %1741 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1742, i32 0, i32 1, i32 1)
  %1743 = getelementptr inbounds float, float* %3, i64 %1739
  %1744 = getelementptr inbounds float, float* %1743, i64 8
  %1745 = bitcast float* %1744 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1745, i32 0, i32 1, i32 1)
  %1746 = getelementptr inbounds float, float* %1740, i64 16
  %1747 = bitcast float* %1746 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1747, i32 0, i32 1, i32 1)
  %1748 = getelementptr inbounds float, float* %1743, i64 16
  %1749 = bitcast float* %1748 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1749, i32 0, i32 1, i32 1)
  %1750 = getelementptr inbounds float, float* %1740, i64 24
  %1751 = bitcast float* %1750 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1751, i32 0, i32 1, i32 1)
  %1752 = getelementptr inbounds float, float* %1743, i64 24
  %1753 = bitcast float* %1752 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1753, i32 0, i32 1, i32 1)
  %1754 = getelementptr inbounds float, float* %1740, i64 32
  %1755 = bitcast float* %1754 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1755, i32 0, i32 1, i32 1)
  %1756 = getelementptr inbounds float, float* %1743, i64 32
  %1757 = bitcast float* %1756 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1757, i32 0, i32 1, i32 1)
  %1758 = getelementptr inbounds float, float* %1740, i64 40
  %1759 = bitcast float* %1758 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1759, i32 0, i32 1, i32 1)
  %1760 = getelementptr inbounds float, float* %1743, i64 40
  %1761 = bitcast float* %1760 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1761, i32 0, i32 1, i32 1)
  %1762 = getelementptr inbounds float, float* %1740, i64 48
  %1763 = bitcast float* %1762 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1763, i32 0, i32 1, i32 1)
  %1764 = getelementptr inbounds float, float* %1743, i64 48
  %1765 = bitcast float* %1764 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1765, i32 0, i32 1, i32 1)
  %1766 = getelementptr inbounds float, float* %1740, i64 56
  %1767 = bitcast float* %1766 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1767, i32 0, i32 1, i32 1)
  %1768 = getelementptr inbounds float, float* %1743, i64 56
  %1769 = bitcast float* %1768 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1769, i32 0, i32 1, i32 1)
  %1770 = getelementptr inbounds float, float* %1740, i64 64
  %1771 = bitcast float* %1770 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1771, i32 0, i32 1, i32 1)
  %1772 = getelementptr inbounds float, float* %1743, i64 64
  %1773 = bitcast float* %1772 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1773, i32 0, i32 1, i32 1)
  %1774 = getelementptr inbounds float, float* %1740, i64 72
  %1775 = bitcast float* %1774 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1775, i32 0, i32 1, i32 1)
  %1776 = getelementptr inbounds float, float* %1743, i64 72
  %1777 = bitcast float* %1776 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1777, i32 0, i32 1, i32 1)
  %1778 = getelementptr inbounds float, float* %1740, i64 80
  %1779 = bitcast float* %1778 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1779, i32 0, i32 1, i32 1)
  %1780 = getelementptr inbounds float, float* %1743, i64 80
  %1781 = bitcast float* %1780 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1781, i32 0, i32 1, i32 1)
  %1782 = getelementptr inbounds float, float* %1740, i64 88
  %1783 = bitcast float* %1782 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1783, i32 0, i32 1, i32 1)
  %1784 = getelementptr inbounds float, float* %1743, i64 88
  %1785 = bitcast float* %1784 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1785, i32 0, i32 1, i32 1)
  %1786 = getelementptr inbounds float, float* %1740, i64 96
  %1787 = bitcast float* %1786 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1787, i32 0, i32 1, i32 1)
  %1788 = getelementptr inbounds float, float* %1743, i64 96
  %1789 = bitcast float* %1788 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1789, i32 0, i32 1, i32 1)
  %1790 = getelementptr inbounds float, float* %1740, i64 104
  %1791 = bitcast float* %1790 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1791, i32 0, i32 1, i32 1)
  %1792 = getelementptr inbounds float, float* %1743, i64 104
  %1793 = bitcast float* %1792 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1793, i32 0, i32 1, i32 1)
  %1794 = bitcast float* %1740 to <8 x float>*
  %1795 = load <8 x float>, <8 x float>* %1794, align 1, !tbaa !12
  %1796 = add nuw nsw i64 %1739, 8
  %1797 = getelementptr inbounds float, float* %5, i64 %1796
  %1798 = bitcast float* %1797 to <8 x float>*
  %1799 = load <8 x float>, <8 x float>* %1798, align 1, !tbaa !12
  %1800 = add nuw nsw i64 %1739, 16
  %1801 = getelementptr inbounds float, float* %5, i64 %1800
  %1802 = bitcast float* %1801 to <8 x float>*
  %1803 = load <8 x float>, <8 x float>* %1802, align 1, !tbaa !12
  %1804 = add nuw nsw i64 %1739, 24
  %1805 = getelementptr inbounds float, float* %5, i64 %1804
  %1806 = bitcast float* %1805 to <8 x float>*
  %1807 = load <8 x float>, <8 x float>* %1806, align 1, !tbaa !12
  %1808 = add nuw nsw i64 %1739, 32
  %1809 = getelementptr inbounds float, float* %5, i64 %1808
  %1810 = bitcast float* %1809 to <8 x float>*
  %1811 = load <8 x float>, <8 x float>* %1810, align 1, !tbaa !12
  %1812 = add nuw nsw i64 %1739, 40
  %1813 = getelementptr inbounds float, float* %5, i64 %1812
  %1814 = bitcast float* %1813 to <8 x float>*
  %1815 = load <8 x float>, <8 x float>* %1814, align 1, !tbaa !12
  %1816 = add nuw nsw i64 %1739, 48
  %1817 = getelementptr inbounds float, float* %5, i64 %1816
  %1818 = bitcast float* %1817 to <8 x float>*
  %1819 = load <8 x float>, <8 x float>* %1818, align 1, !tbaa !12
  %1820 = add nuw nsw i64 %1739, 56
  %1821 = getelementptr inbounds float, float* %5, i64 %1820
  %1822 = bitcast float* %1821 to <8 x float>*
  %1823 = load <8 x float>, <8 x float>* %1822, align 1, !tbaa !12
  %1824 = add nuw nsw i64 %1739, 64
  %1825 = getelementptr inbounds float, float* %5, i64 %1824
  %1826 = bitcast float* %1825 to <8 x float>*
  %1827 = load <8 x float>, <8 x float>* %1826, align 1, !tbaa !12
  %1828 = add nuw nsw i64 %1739, 72
  %1829 = getelementptr inbounds float, float* %5, i64 %1828
  %1830 = bitcast float* %1829 to <8 x float>*
  %1831 = load <8 x float>, <8 x float>* %1830, align 1, !tbaa !12
  %1832 = add nuw nsw i64 %1739, 80
  %1833 = getelementptr inbounds float, float* %5, i64 %1832
  %1834 = bitcast float* %1833 to <8 x float>*
  %1835 = load <8 x float>, <8 x float>* %1834, align 1, !tbaa !12
  %1836 = add nuw nsw i64 %1739, 88
  %1837 = getelementptr inbounds float, float* %5, i64 %1836
  %1838 = bitcast float* %1837 to <8 x float>*
  %1839 = load <8 x float>, <8 x float>* %1838, align 1, !tbaa !12
  %1840 = add nuw nsw i64 %1739, 96
  %1841 = getelementptr inbounds float, float* %5, i64 %1840
  %1842 = bitcast float* %1841 to <8 x float>*
  %1843 = load <8 x float>, <8 x float>* %1842, align 1, !tbaa !12
  %1844 = trunc i64 %1739 to i32
  %1845 = add nsw i32 %1559, %1844
  %1846 = sext i32 %1845 to i64
  %1847 = getelementptr inbounds float, float* %3, i64 %1846
  %1848 = bitcast float* %1847 to <8 x float>*
  %1849 = load <8 x float>, <8 x float>* %1848, align 1, !tbaa !12
  %1850 = add nsw i32 %1845, 8
  %1851 = sext i32 %1850 to i64
  %1852 = getelementptr inbounds float, float* %3, i64 %1851
  %1853 = bitcast float* %1852 to <8 x float>*
  %1854 = load <8 x float>, <8 x float>* %1853, align 1, !tbaa !12
  %1855 = add nsw i32 %1845, 16
  %1856 = sext i32 %1855 to i64
  %1857 = getelementptr inbounds float, float* %3, i64 %1856
  %1858 = bitcast float* %1857 to <8 x float>*
  %1859 = load <8 x float>, <8 x float>* %1858, align 1, !tbaa !12
  %1860 = add nsw i32 %1845, 24
  %1861 = sext i32 %1860 to i64
  %1862 = getelementptr inbounds float, float* %3, i64 %1861
  %1863 = bitcast float* %1862 to <8 x float>*
  %1864 = load <8 x float>, <8 x float>* %1863, align 1, !tbaa !12
  %1865 = add nsw i32 %1845, 32
  %1866 = sext i32 %1865 to i64
  %1867 = getelementptr inbounds float, float* %3, i64 %1866
  %1868 = bitcast float* %1867 to <8 x float>*
  %1869 = load <8 x float>, <8 x float>* %1868, align 1, !tbaa !12
  %1870 = add nsw i32 %1845, 40
  %1871 = sext i32 %1870 to i64
  %1872 = getelementptr inbounds float, float* %3, i64 %1871
  %1873 = bitcast float* %1872 to <8 x float>*
  %1874 = load <8 x float>, <8 x float>* %1873, align 1, !tbaa !12
  %1875 = add nsw i32 %1845, 48
  %1876 = sext i32 %1875 to i64
  %1877 = getelementptr inbounds float, float* %3, i64 %1876
  %1878 = bitcast float* %1877 to <8 x float>*
  %1879 = load <8 x float>, <8 x float>* %1878, align 1, !tbaa !12
  %1880 = add nsw i32 %1845, 56
  %1881 = sext i32 %1880 to i64
  %1882 = getelementptr inbounds float, float* %3, i64 %1881
  %1883 = bitcast float* %1882 to <8 x float>*
  %1884 = load <8 x float>, <8 x float>* %1883, align 1, !tbaa !12
  %1885 = add nsw i32 %1845, 64
  %1886 = sext i32 %1885 to i64
  %1887 = getelementptr inbounds float, float* %3, i64 %1886
  %1888 = bitcast float* %1887 to <8 x float>*
  %1889 = load <8 x float>, <8 x float>* %1888, align 1, !tbaa !12
  %1890 = add nsw i32 %1845, 72
  %1891 = sext i32 %1890 to i64
  %1892 = getelementptr inbounds float, float* %3, i64 %1891
  %1893 = bitcast float* %1892 to <8 x float>*
  %1894 = load <8 x float>, <8 x float>* %1893, align 1, !tbaa !12
  %1895 = add nsw i32 %1845, 80
  %1896 = sext i32 %1895 to i64
  %1897 = getelementptr inbounds float, float* %3, i64 %1896
  %1898 = bitcast float* %1897 to <8 x float>*
  %1899 = load <8 x float>, <8 x float>* %1898, align 1, !tbaa !12
  %1900 = add nsw i32 %1845, 88
  %1901 = sext i32 %1900 to i64
  %1902 = getelementptr inbounds float, float* %3, i64 %1901
  %1903 = bitcast float* %1902 to <8 x float>*
  %1904 = load <8 x float>, <8 x float>* %1903, align 1, !tbaa !12
  %1905 = add nsw i32 %1845, 96
  %1906 = sext i32 %1905 to i64
  %1907 = getelementptr inbounds float, float* %3, i64 %1906
  %1908 = bitcast float* %1907 to <8 x float>*
  %1909 = load <8 x float>, <8 x float>* %1908, align 1, !tbaa !12
  %1910 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1849, <8 x float> %70, <8 x float> %1795) #10
  %1911 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1854, <8 x float> %70, <8 x float> %1799) #10
  %1912 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1859, <8 x float> %70, <8 x float> %1803) #10
  %1913 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1864, <8 x float> %70, <8 x float> %1807) #10
  %1914 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1869, <8 x float> %70, <8 x float> %1811) #10
  %1915 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1874, <8 x float> %70, <8 x float> %1815) #10
  %1916 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1879, <8 x float> %70, <8 x float> %1819) #10
  %1917 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1884, <8 x float> %70, <8 x float> %1823) #10
  %1918 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1889, <8 x float> %70, <8 x float> %1827) #10
  %1919 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1894, <8 x float> %70, <8 x float> %1831) #10
  %1920 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1899, <8 x float> %70, <8 x float> %1835) #10
  %1921 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1904, <8 x float> %70, <8 x float> %1839) #10
  %1922 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1909, <8 x float> %70, <8 x float> %1843) #10
  store <8 x float> %1910, <8 x float>* %1794, align 1, !tbaa !12
  store <8 x float> %1911, <8 x float>* %1798, align 1, !tbaa !12
  store <8 x float> %1912, <8 x float>* %1802, align 1, !tbaa !12
  store <8 x float> %1913, <8 x float>* %1806, align 1, !tbaa !12
  store <8 x float> %1914, <8 x float>* %1810, align 1, !tbaa !12
  store <8 x float> %1915, <8 x float>* %1814, align 1, !tbaa !12
  store <8 x float> %1916, <8 x float>* %1818, align 1, !tbaa !12
  store <8 x float> %1917, <8 x float>* %1822, align 1, !tbaa !12
  store <8 x float> %1918, <8 x float>* %1826, align 1, !tbaa !12
  store <8 x float> %1919, <8 x float>* %1830, align 1, !tbaa !12
  store <8 x float> %1920, <8 x float>* %1834, align 1, !tbaa !12
  store <8 x float> %1921, <8 x float>* %1838, align 1, !tbaa !12
  store <8 x float> %1922, <8 x float>* %1842, align 1, !tbaa !12
  %1923 = add nuw nsw i64 %1739, 104
  %1924 = icmp ult i64 %1923, %1557
  br i1 %1924, label %1738, label %1733
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 270
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui13_uk10.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
