; ModuleID = 'codes/matvec_ui10_uk14.cpp'
source_filename = "codes/matvec_ui10_uk14.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui10_uk14.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 80
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 112
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1964, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1964
  %21 = phi i64 [ %1965, %1964 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = add nuw nsw i64 %21, 13
  %87 = getelementptr inbounds float, float* %4, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !18
  %89 = insertelement <8 x float> undef, float %88, i32 0
  %90 = shufflevector <8 x float> %89, <8 x float> undef, <8 x i32> zeroinitializer
  %91 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %1964

93:                                               ; preds = %20
  %94 = zext i32 %91 to i64
  %95 = trunc i64 %21 to i32
  %96 = mul nsw i32 %91, %95
  br label %103

97:                                               ; preds = %103
  br i1 %92, label %98, label %528

98:                                               ; preds = %97
  %99 = trunc i64 %26 to i32
  %100 = mul nsw i32 %91, %99
  %101 = sext i32 %100 to i64
  %102 = zext i32 %91 to i64
  br label %254

103:                                              ; preds = %93, %103
  %104 = phi i64 [ 0, %93 ], [ %246, %103 ]
  %105 = getelementptr inbounds float, float* %5, i64 %104
  %106 = getelementptr inbounds float, float* %105, i64 8
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %3, i64 %104
  %109 = getelementptr inbounds float, float* %108, i64 8
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %105, i64 16
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %108, i64 16
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %105, i64 24
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %108, i64 24
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %105, i64 32
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %108, i64 32
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %105, i64 40
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %108, i64 40
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %105, i64 48
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %108, i64 48
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %105, i64 56
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %108, i64 56
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %105, i64 64
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = getelementptr inbounds float, float* %108, i64 64
  %138 = bitcast float* %137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %138, i32 0, i32 1, i32 1)
  %139 = getelementptr inbounds float, float* %105, i64 72
  %140 = bitcast float* %139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %140, i32 0, i32 1, i32 1)
  %141 = getelementptr inbounds float, float* %108, i64 72
  %142 = bitcast float* %141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %142, i32 0, i32 1, i32 1)
  %143 = getelementptr inbounds float, float* %105, i64 80
  %144 = bitcast float* %143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %144, i32 0, i32 1, i32 1)
  %145 = getelementptr inbounds float, float* %108, i64 80
  %146 = bitcast float* %145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %146, i32 0, i32 1, i32 1)
  %147 = bitcast float* %105 to <8 x float>*
  %148 = load <8 x float>, <8 x float>* %147, align 1, !tbaa !12
  %149 = or i64 %104, 8
  %150 = getelementptr inbounds float, float* %5, i64 %149
  %151 = bitcast float* %150 to <8 x float>*
  %152 = load <8 x float>, <8 x float>* %151, align 1, !tbaa !12
  %153 = add nuw nsw i64 %104, 16
  %154 = getelementptr inbounds float, float* %5, i64 %153
  %155 = bitcast float* %154 to <8 x float>*
  %156 = load <8 x float>, <8 x float>* %155, align 1, !tbaa !12
  %157 = add nuw nsw i64 %104, 24
  %158 = getelementptr inbounds float, float* %5, i64 %157
  %159 = bitcast float* %158 to <8 x float>*
  %160 = load <8 x float>, <8 x float>* %159, align 1, !tbaa !12
  %161 = add nuw nsw i64 %104, 32
  %162 = getelementptr inbounds float, float* %5, i64 %161
  %163 = bitcast float* %162 to <8 x float>*
  %164 = load <8 x float>, <8 x float>* %163, align 1, !tbaa !12
  %165 = add nuw nsw i64 %104, 40
  %166 = getelementptr inbounds float, float* %5, i64 %165
  %167 = bitcast float* %166 to <8 x float>*
  %168 = load <8 x float>, <8 x float>* %167, align 1, !tbaa !12
  %169 = add nuw nsw i64 %104, 48
  %170 = getelementptr inbounds float, float* %5, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nuw nsw i64 %104, 56
  %174 = getelementptr inbounds float, float* %5, i64 %173
  %175 = bitcast float* %174 to <8 x float>*
  %176 = load <8 x float>, <8 x float>* %175, align 1, !tbaa !12
  %177 = add nuw nsw i64 %104, 64
  %178 = getelementptr inbounds float, float* %5, i64 %177
  %179 = bitcast float* %178 to <8 x float>*
  %180 = load <8 x float>, <8 x float>* %179, align 1, !tbaa !12
  %181 = add nuw nsw i64 %104, 72
  %182 = getelementptr inbounds float, float* %5, i64 %181
  %183 = bitcast float* %182 to <8 x float>*
  %184 = load <8 x float>, <8 x float>* %183, align 1, !tbaa !12
  %185 = trunc i64 %104 to i32
  %186 = add nsw i32 %96, %185
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds float, float* %3, i64 %187
  %189 = bitcast float* %188 to <8 x float>*
  %190 = load <8 x float>, <8 x float>* %189, align 1, !tbaa !12
  %191 = add nsw i32 %186, 8
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds float, float* %3, i64 %192
  %194 = bitcast float* %193 to <8 x float>*
  %195 = load <8 x float>, <8 x float>* %194, align 1, !tbaa !12
  %196 = add nsw i32 %186, 16
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds float, float* %3, i64 %197
  %199 = bitcast float* %198 to <8 x float>*
  %200 = load <8 x float>, <8 x float>* %199, align 1, !tbaa !12
  %201 = add nsw i32 %186, 24
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds float, float* %3, i64 %202
  %204 = bitcast float* %203 to <8 x float>*
  %205 = load <8 x float>, <8 x float>* %204, align 1, !tbaa !12
  %206 = add nsw i32 %186, 32
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds float, float* %3, i64 %207
  %209 = bitcast float* %208 to <8 x float>*
  %210 = load <8 x float>, <8 x float>* %209, align 1, !tbaa !12
  %211 = add nsw i32 %186, 40
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds float, float* %3, i64 %212
  %214 = bitcast float* %213 to <8 x float>*
  %215 = load <8 x float>, <8 x float>* %214, align 1, !tbaa !12
  %216 = add nsw i32 %186, 48
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds float, float* %3, i64 %217
  %219 = bitcast float* %218 to <8 x float>*
  %220 = load <8 x float>, <8 x float>* %219, align 1, !tbaa !12
  %221 = add nsw i32 %186, 56
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds float, float* %3, i64 %222
  %224 = bitcast float* %223 to <8 x float>*
  %225 = load <8 x float>, <8 x float>* %224, align 1, !tbaa !12
  %226 = add nsw i32 %186, 64
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds float, float* %3, i64 %227
  %229 = bitcast float* %228 to <8 x float>*
  %230 = load <8 x float>, <8 x float>* %229, align 1, !tbaa !12
  %231 = add nsw i32 %186, 72
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds float, float* %3, i64 %232
  %234 = bitcast float* %233 to <8 x float>*
  %235 = load <8 x float>, <8 x float>* %234, align 1, !tbaa !12
  %236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %190, <8 x float> %25, <8 x float> %148) #10
  %237 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %195, <8 x float> %25, <8 x float> %152) #10
  %238 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %200, <8 x float> %25, <8 x float> %156) #10
  %239 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %205, <8 x float> %25, <8 x float> %160) #10
  %240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %210, <8 x float> %25, <8 x float> %164) #10
  %241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %215, <8 x float> %25, <8 x float> %168) #10
  %242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %220, <8 x float> %25, <8 x float> %172) #10
  %243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %225, <8 x float> %25, <8 x float> %176) #10
  %244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %230, <8 x float> %25, <8 x float> %180) #10
  %245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %235, <8 x float> %25, <8 x float> %184) #10
  store <8 x float> %236, <8 x float>* %147, align 1, !tbaa !12
  store <8 x float> %237, <8 x float>* %151, align 1, !tbaa !12
  store <8 x float> %238, <8 x float>* %155, align 1, !tbaa !12
  store <8 x float> %239, <8 x float>* %159, align 1, !tbaa !12
  store <8 x float> %240, <8 x float>* %163, align 1, !tbaa !12
  store <8 x float> %241, <8 x float>* %167, align 1, !tbaa !12
  store <8 x float> %242, <8 x float>* %171, align 1, !tbaa !12
  store <8 x float> %243, <8 x float>* %175, align 1, !tbaa !12
  store <8 x float> %244, <8 x float>* %179, align 1, !tbaa !12
  store <8 x float> %245, <8 x float>* %183, align 1, !tbaa !12
  %246 = add nuw nsw i64 %104, 80
  %247 = icmp ult i64 %246, %94
  br i1 %247, label %103, label %97

248:                                              ; preds = %254
  br i1 %92, label %249, label %528

249:                                              ; preds = %248
  %250 = trunc i64 %31 to i32
  %251 = mul nsw i32 %91, %250
  %252 = sext i32 %251 to i64
  %253 = zext i32 %91 to i64
  br label %394

254:                                              ; preds = %98, %254
  %255 = phi i64 [ 0, %98 ], [ %386, %254 ]
  %256 = getelementptr inbounds float, float* %5, i64 %255
  %257 = getelementptr inbounds float, float* %256, i64 8
  %258 = bitcast float* %257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %258, i32 0, i32 1, i32 1)
  %259 = getelementptr inbounds float, float* %3, i64 %255
  %260 = getelementptr inbounds float, float* %259, i64 8
  %261 = bitcast float* %260 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %261, i32 0, i32 1, i32 1)
  %262 = getelementptr inbounds float, float* %256, i64 16
  %263 = bitcast float* %262 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %263, i32 0, i32 1, i32 1)
  %264 = getelementptr inbounds float, float* %259, i64 16
  %265 = bitcast float* %264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %265, i32 0, i32 1, i32 1)
  %266 = getelementptr inbounds float, float* %256, i64 24
  %267 = bitcast float* %266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %267, i32 0, i32 1, i32 1)
  %268 = getelementptr inbounds float, float* %259, i64 24
  %269 = bitcast float* %268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %269, i32 0, i32 1, i32 1)
  %270 = getelementptr inbounds float, float* %256, i64 32
  %271 = bitcast float* %270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %271, i32 0, i32 1, i32 1)
  %272 = getelementptr inbounds float, float* %259, i64 32
  %273 = bitcast float* %272 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %273, i32 0, i32 1, i32 1)
  %274 = getelementptr inbounds float, float* %256, i64 40
  %275 = bitcast float* %274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %275, i32 0, i32 1, i32 1)
  %276 = getelementptr inbounds float, float* %259, i64 40
  %277 = bitcast float* %276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %277, i32 0, i32 1, i32 1)
  %278 = getelementptr inbounds float, float* %256, i64 48
  %279 = bitcast float* %278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %279, i32 0, i32 1, i32 1)
  %280 = getelementptr inbounds float, float* %259, i64 48
  %281 = bitcast float* %280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %281, i32 0, i32 1, i32 1)
  %282 = getelementptr inbounds float, float* %256, i64 56
  %283 = bitcast float* %282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %283, i32 0, i32 1, i32 1)
  %284 = getelementptr inbounds float, float* %259, i64 56
  %285 = bitcast float* %284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %285, i32 0, i32 1, i32 1)
  %286 = getelementptr inbounds float, float* %256, i64 64
  %287 = bitcast float* %286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %287, i32 0, i32 1, i32 1)
  %288 = getelementptr inbounds float, float* %259, i64 64
  %289 = bitcast float* %288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %289, i32 0, i32 1, i32 1)
  %290 = getelementptr inbounds float, float* %256, i64 72
  %291 = bitcast float* %290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %291, i32 0, i32 1, i32 1)
  %292 = getelementptr inbounds float, float* %259, i64 72
  %293 = bitcast float* %292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %293, i32 0, i32 1, i32 1)
  %294 = getelementptr inbounds float, float* %256, i64 80
  %295 = bitcast float* %294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %295, i32 0, i32 1, i32 1)
  %296 = getelementptr inbounds float, float* %259, i64 80
  %297 = bitcast float* %296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %297, i32 0, i32 1, i32 1)
  %298 = bitcast float* %256 to <8 x float>*
  %299 = load <8 x float>, <8 x float>* %298, align 1, !tbaa !12
  %300 = or i64 %255, 8
  %301 = getelementptr inbounds float, float* %5, i64 %300
  %302 = bitcast float* %301 to <8 x float>*
  %303 = load <8 x float>, <8 x float>* %302, align 1, !tbaa !12
  %304 = add nuw nsw i64 %255, 16
  %305 = getelementptr inbounds float, float* %5, i64 %304
  %306 = bitcast float* %305 to <8 x float>*
  %307 = load <8 x float>, <8 x float>* %306, align 1, !tbaa !12
  %308 = add nuw nsw i64 %255, 24
  %309 = getelementptr inbounds float, float* %5, i64 %308
  %310 = bitcast float* %309 to <8 x float>*
  %311 = load <8 x float>, <8 x float>* %310, align 1, !tbaa !12
  %312 = add nuw nsw i64 %255, 32
  %313 = getelementptr inbounds float, float* %5, i64 %312
  %314 = bitcast float* %313 to <8 x float>*
  %315 = load <8 x float>, <8 x float>* %314, align 1, !tbaa !12
  %316 = add nuw nsw i64 %255, 40
  %317 = getelementptr inbounds float, float* %5, i64 %316
  %318 = bitcast float* %317 to <8 x float>*
  %319 = load <8 x float>, <8 x float>* %318, align 1, !tbaa !12
  %320 = add nuw nsw i64 %255, 48
  %321 = getelementptr inbounds float, float* %5, i64 %320
  %322 = bitcast float* %321 to <8 x float>*
  %323 = load <8 x float>, <8 x float>* %322, align 1, !tbaa !12
  %324 = add nuw nsw i64 %255, 56
  %325 = getelementptr inbounds float, float* %5, i64 %324
  %326 = bitcast float* %325 to <8 x float>*
  %327 = load <8 x float>, <8 x float>* %326, align 1, !tbaa !12
  %328 = add nuw nsw i64 %255, 64
  %329 = getelementptr inbounds float, float* %5, i64 %328
  %330 = bitcast float* %329 to <8 x float>*
  %331 = load <8 x float>, <8 x float>* %330, align 1, !tbaa !12
  %332 = add nuw nsw i64 %255, 72
  %333 = getelementptr inbounds float, float* %5, i64 %332
  %334 = bitcast float* %333 to <8 x float>*
  %335 = load <8 x float>, <8 x float>* %334, align 1, !tbaa !12
  %336 = add nsw i64 %255, %101
  %337 = getelementptr inbounds float, float* %3, i64 %336
  %338 = bitcast float* %337 to <8 x float>*
  %339 = load <8 x float>, <8 x float>* %338, align 1, !tbaa !12
  %340 = add nsw i64 %336, 8
  %341 = getelementptr inbounds float, float* %3, i64 %340
  %342 = bitcast float* %341 to <8 x float>*
  %343 = load <8 x float>, <8 x float>* %342, align 1, !tbaa !12
  %344 = add nsw i64 %336, 16
  %345 = getelementptr inbounds float, float* %3, i64 %344
  %346 = bitcast float* %345 to <8 x float>*
  %347 = load <8 x float>, <8 x float>* %346, align 1, !tbaa !12
  %348 = add nsw i64 %336, 24
  %349 = getelementptr inbounds float, float* %3, i64 %348
  %350 = bitcast float* %349 to <8 x float>*
  %351 = load <8 x float>, <8 x float>* %350, align 1, !tbaa !12
  %352 = add nsw i64 %336, 32
  %353 = getelementptr inbounds float, float* %3, i64 %352
  %354 = bitcast float* %353 to <8 x float>*
  %355 = load <8 x float>, <8 x float>* %354, align 1, !tbaa !12
  %356 = add nsw i64 %336, 40
  %357 = getelementptr inbounds float, float* %3, i64 %356
  %358 = bitcast float* %357 to <8 x float>*
  %359 = load <8 x float>, <8 x float>* %358, align 1, !tbaa !12
  %360 = add nsw i64 %336, 48
  %361 = getelementptr inbounds float, float* %3, i64 %360
  %362 = bitcast float* %361 to <8 x float>*
  %363 = load <8 x float>, <8 x float>* %362, align 1, !tbaa !12
  %364 = add nsw i64 %336, 56
  %365 = getelementptr inbounds float, float* %3, i64 %364
  %366 = bitcast float* %365 to <8 x float>*
  %367 = load <8 x float>, <8 x float>* %366, align 1, !tbaa !12
  %368 = add nsw i64 %336, 64
  %369 = getelementptr inbounds float, float* %3, i64 %368
  %370 = bitcast float* %369 to <8 x float>*
  %371 = load <8 x float>, <8 x float>* %370, align 1, !tbaa !12
  %372 = add nsw i64 %336, 72
  %373 = getelementptr inbounds float, float* %3, i64 %372
  %374 = bitcast float* %373 to <8 x float>*
  %375 = load <8 x float>, <8 x float>* %374, align 1, !tbaa !12
  %376 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %339, <8 x float> %30, <8 x float> %299) #10
  %377 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %343, <8 x float> %30, <8 x float> %303) #10
  %378 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %347, <8 x float> %30, <8 x float> %307) #10
  %379 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %351, <8 x float> %30, <8 x float> %311) #10
  %380 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %355, <8 x float> %30, <8 x float> %315) #10
  %381 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %359, <8 x float> %30, <8 x float> %319) #10
  %382 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %363, <8 x float> %30, <8 x float> %323) #10
  %383 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %367, <8 x float> %30, <8 x float> %327) #10
  %384 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %371, <8 x float> %30, <8 x float> %331) #10
  %385 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %375, <8 x float> %30, <8 x float> %335) #10
  store <8 x float> %376, <8 x float>* %298, align 1, !tbaa !12
  store <8 x float> %377, <8 x float>* %302, align 1, !tbaa !12
  store <8 x float> %378, <8 x float>* %306, align 1, !tbaa !12
  store <8 x float> %379, <8 x float>* %310, align 1, !tbaa !12
  store <8 x float> %380, <8 x float>* %314, align 1, !tbaa !12
  store <8 x float> %381, <8 x float>* %318, align 1, !tbaa !12
  store <8 x float> %382, <8 x float>* %322, align 1, !tbaa !12
  store <8 x float> %383, <8 x float>* %326, align 1, !tbaa !12
  store <8 x float> %384, <8 x float>* %330, align 1, !tbaa !12
  store <8 x float> %385, <8 x float>* %334, align 1, !tbaa !12
  %386 = add nuw nsw i64 %255, 80
  %387 = icmp ult i64 %386, %102
  br i1 %387, label %254, label %248

388:                                              ; preds = %394
  br i1 %92, label %389, label %528

389:                                              ; preds = %388
  %390 = trunc i64 %36 to i32
  %391 = mul nsw i32 %91, %390
  %392 = sext i32 %391 to i64
  %393 = zext i32 %91 to i64
  br label %535

394:                                              ; preds = %249, %394
  %395 = phi i64 [ 0, %249 ], [ %526, %394 ]
  %396 = getelementptr inbounds float, float* %5, i64 %395
  %397 = getelementptr inbounds float, float* %396, i64 8
  %398 = bitcast float* %397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %398, i32 0, i32 1, i32 1)
  %399 = getelementptr inbounds float, float* %3, i64 %395
  %400 = getelementptr inbounds float, float* %399, i64 8
  %401 = bitcast float* %400 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %401, i32 0, i32 1, i32 1)
  %402 = getelementptr inbounds float, float* %396, i64 16
  %403 = bitcast float* %402 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %403, i32 0, i32 1, i32 1)
  %404 = getelementptr inbounds float, float* %399, i64 16
  %405 = bitcast float* %404 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %405, i32 0, i32 1, i32 1)
  %406 = getelementptr inbounds float, float* %396, i64 24
  %407 = bitcast float* %406 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %407, i32 0, i32 1, i32 1)
  %408 = getelementptr inbounds float, float* %399, i64 24
  %409 = bitcast float* %408 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %409, i32 0, i32 1, i32 1)
  %410 = getelementptr inbounds float, float* %396, i64 32
  %411 = bitcast float* %410 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %411, i32 0, i32 1, i32 1)
  %412 = getelementptr inbounds float, float* %399, i64 32
  %413 = bitcast float* %412 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %413, i32 0, i32 1, i32 1)
  %414 = getelementptr inbounds float, float* %396, i64 40
  %415 = bitcast float* %414 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %415, i32 0, i32 1, i32 1)
  %416 = getelementptr inbounds float, float* %399, i64 40
  %417 = bitcast float* %416 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %417, i32 0, i32 1, i32 1)
  %418 = getelementptr inbounds float, float* %396, i64 48
  %419 = bitcast float* %418 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %419, i32 0, i32 1, i32 1)
  %420 = getelementptr inbounds float, float* %399, i64 48
  %421 = bitcast float* %420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %421, i32 0, i32 1, i32 1)
  %422 = getelementptr inbounds float, float* %396, i64 56
  %423 = bitcast float* %422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %423, i32 0, i32 1, i32 1)
  %424 = getelementptr inbounds float, float* %399, i64 56
  %425 = bitcast float* %424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %425, i32 0, i32 1, i32 1)
  %426 = getelementptr inbounds float, float* %396, i64 64
  %427 = bitcast float* %426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %427, i32 0, i32 1, i32 1)
  %428 = getelementptr inbounds float, float* %399, i64 64
  %429 = bitcast float* %428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %429, i32 0, i32 1, i32 1)
  %430 = getelementptr inbounds float, float* %396, i64 72
  %431 = bitcast float* %430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %431, i32 0, i32 1, i32 1)
  %432 = getelementptr inbounds float, float* %399, i64 72
  %433 = bitcast float* %432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %433, i32 0, i32 1, i32 1)
  %434 = getelementptr inbounds float, float* %396, i64 80
  %435 = bitcast float* %434 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %435, i32 0, i32 1, i32 1)
  %436 = getelementptr inbounds float, float* %399, i64 80
  %437 = bitcast float* %436 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %437, i32 0, i32 1, i32 1)
  %438 = bitcast float* %396 to <8 x float>*
  %439 = load <8 x float>, <8 x float>* %438, align 1, !tbaa !12
  %440 = or i64 %395, 8
  %441 = getelementptr inbounds float, float* %5, i64 %440
  %442 = bitcast float* %441 to <8 x float>*
  %443 = load <8 x float>, <8 x float>* %442, align 1, !tbaa !12
  %444 = add nuw nsw i64 %395, 16
  %445 = getelementptr inbounds float, float* %5, i64 %444
  %446 = bitcast float* %445 to <8 x float>*
  %447 = load <8 x float>, <8 x float>* %446, align 1, !tbaa !12
  %448 = add nuw nsw i64 %395, 24
  %449 = getelementptr inbounds float, float* %5, i64 %448
  %450 = bitcast float* %449 to <8 x float>*
  %451 = load <8 x float>, <8 x float>* %450, align 1, !tbaa !12
  %452 = add nuw nsw i64 %395, 32
  %453 = getelementptr inbounds float, float* %5, i64 %452
  %454 = bitcast float* %453 to <8 x float>*
  %455 = load <8 x float>, <8 x float>* %454, align 1, !tbaa !12
  %456 = add nuw nsw i64 %395, 40
  %457 = getelementptr inbounds float, float* %5, i64 %456
  %458 = bitcast float* %457 to <8 x float>*
  %459 = load <8 x float>, <8 x float>* %458, align 1, !tbaa !12
  %460 = add nuw nsw i64 %395, 48
  %461 = getelementptr inbounds float, float* %5, i64 %460
  %462 = bitcast float* %461 to <8 x float>*
  %463 = load <8 x float>, <8 x float>* %462, align 1, !tbaa !12
  %464 = add nuw nsw i64 %395, 56
  %465 = getelementptr inbounds float, float* %5, i64 %464
  %466 = bitcast float* %465 to <8 x float>*
  %467 = load <8 x float>, <8 x float>* %466, align 1, !tbaa !12
  %468 = add nuw nsw i64 %395, 64
  %469 = getelementptr inbounds float, float* %5, i64 %468
  %470 = bitcast float* %469 to <8 x float>*
  %471 = load <8 x float>, <8 x float>* %470, align 1, !tbaa !12
  %472 = add nuw nsw i64 %395, 72
  %473 = getelementptr inbounds float, float* %5, i64 %472
  %474 = bitcast float* %473 to <8 x float>*
  %475 = load <8 x float>, <8 x float>* %474, align 1, !tbaa !12
  %476 = add nsw i64 %395, %252
  %477 = getelementptr inbounds float, float* %3, i64 %476
  %478 = bitcast float* %477 to <8 x float>*
  %479 = load <8 x float>, <8 x float>* %478, align 1, !tbaa !12
  %480 = add nsw i64 %476, 8
  %481 = getelementptr inbounds float, float* %3, i64 %480
  %482 = bitcast float* %481 to <8 x float>*
  %483 = load <8 x float>, <8 x float>* %482, align 1, !tbaa !12
  %484 = add nsw i64 %476, 16
  %485 = getelementptr inbounds float, float* %3, i64 %484
  %486 = bitcast float* %485 to <8 x float>*
  %487 = load <8 x float>, <8 x float>* %486, align 1, !tbaa !12
  %488 = add nsw i64 %476, 24
  %489 = getelementptr inbounds float, float* %3, i64 %488
  %490 = bitcast float* %489 to <8 x float>*
  %491 = load <8 x float>, <8 x float>* %490, align 1, !tbaa !12
  %492 = add nsw i64 %476, 32
  %493 = getelementptr inbounds float, float* %3, i64 %492
  %494 = bitcast float* %493 to <8 x float>*
  %495 = load <8 x float>, <8 x float>* %494, align 1, !tbaa !12
  %496 = add nsw i64 %476, 40
  %497 = getelementptr inbounds float, float* %3, i64 %496
  %498 = bitcast float* %497 to <8 x float>*
  %499 = load <8 x float>, <8 x float>* %498, align 1, !tbaa !12
  %500 = add nsw i64 %476, 48
  %501 = getelementptr inbounds float, float* %3, i64 %500
  %502 = bitcast float* %501 to <8 x float>*
  %503 = load <8 x float>, <8 x float>* %502, align 1, !tbaa !12
  %504 = add nsw i64 %476, 56
  %505 = getelementptr inbounds float, float* %3, i64 %504
  %506 = bitcast float* %505 to <8 x float>*
  %507 = load <8 x float>, <8 x float>* %506, align 1, !tbaa !12
  %508 = add nsw i64 %476, 64
  %509 = getelementptr inbounds float, float* %3, i64 %508
  %510 = bitcast float* %509 to <8 x float>*
  %511 = load <8 x float>, <8 x float>* %510, align 1, !tbaa !12
  %512 = add nsw i64 %476, 72
  %513 = getelementptr inbounds float, float* %3, i64 %512
  %514 = bitcast float* %513 to <8 x float>*
  %515 = load <8 x float>, <8 x float>* %514, align 1, !tbaa !12
  %516 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %479, <8 x float> %35, <8 x float> %439) #10
  %517 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %483, <8 x float> %35, <8 x float> %443) #10
  %518 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %487, <8 x float> %35, <8 x float> %447) #10
  %519 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %491, <8 x float> %35, <8 x float> %451) #10
  %520 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %495, <8 x float> %35, <8 x float> %455) #10
  %521 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %499, <8 x float> %35, <8 x float> %459) #10
  %522 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %503, <8 x float> %35, <8 x float> %463) #10
  %523 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %507, <8 x float> %35, <8 x float> %467) #10
  %524 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %511, <8 x float> %35, <8 x float> %471) #10
  %525 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %515, <8 x float> %35, <8 x float> %475) #10
  store <8 x float> %516, <8 x float>* %438, align 1, !tbaa !12
  store <8 x float> %517, <8 x float>* %442, align 1, !tbaa !12
  store <8 x float> %518, <8 x float>* %446, align 1, !tbaa !12
  store <8 x float> %519, <8 x float>* %450, align 1, !tbaa !12
  store <8 x float> %520, <8 x float>* %454, align 1, !tbaa !12
  store <8 x float> %521, <8 x float>* %458, align 1, !tbaa !12
  store <8 x float> %522, <8 x float>* %462, align 1, !tbaa !12
  store <8 x float> %523, <8 x float>* %466, align 1, !tbaa !12
  store <8 x float> %524, <8 x float>* %470, align 1, !tbaa !12
  store <8 x float> %525, <8 x float>* %474, align 1, !tbaa !12
  %526 = add nuw nsw i64 %395, 80
  %527 = icmp ult i64 %526, %253
  br i1 %527, label %394, label %388

528:                                              ; preds = %535, %97, %248, %388
  %529 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %530 = icmp sgt i32 %529, 0
  br i1 %530, label %531, label %1964

531:                                              ; preds = %528
  %532 = zext i32 %529 to i64
  %533 = trunc i64 %41 to i32
  %534 = mul nsw i32 %529, %533
  br label %675

535:                                              ; preds = %389, %535
  %536 = phi i64 [ 0, %389 ], [ %667, %535 ]
  %537 = getelementptr inbounds float, float* %5, i64 %536
  %538 = getelementptr inbounds float, float* %537, i64 8
  %539 = bitcast float* %538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %539, i32 0, i32 1, i32 1)
  %540 = getelementptr inbounds float, float* %3, i64 %536
  %541 = getelementptr inbounds float, float* %540, i64 8
  %542 = bitcast float* %541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %542, i32 0, i32 1, i32 1)
  %543 = getelementptr inbounds float, float* %537, i64 16
  %544 = bitcast float* %543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %544, i32 0, i32 1, i32 1)
  %545 = getelementptr inbounds float, float* %540, i64 16
  %546 = bitcast float* %545 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %546, i32 0, i32 1, i32 1)
  %547 = getelementptr inbounds float, float* %537, i64 24
  %548 = bitcast float* %547 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %548, i32 0, i32 1, i32 1)
  %549 = getelementptr inbounds float, float* %540, i64 24
  %550 = bitcast float* %549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %550, i32 0, i32 1, i32 1)
  %551 = getelementptr inbounds float, float* %537, i64 32
  %552 = bitcast float* %551 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %552, i32 0, i32 1, i32 1)
  %553 = getelementptr inbounds float, float* %540, i64 32
  %554 = bitcast float* %553 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %554, i32 0, i32 1, i32 1)
  %555 = getelementptr inbounds float, float* %537, i64 40
  %556 = bitcast float* %555 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %556, i32 0, i32 1, i32 1)
  %557 = getelementptr inbounds float, float* %540, i64 40
  %558 = bitcast float* %557 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %558, i32 0, i32 1, i32 1)
  %559 = getelementptr inbounds float, float* %537, i64 48
  %560 = bitcast float* %559 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %560, i32 0, i32 1, i32 1)
  %561 = getelementptr inbounds float, float* %540, i64 48
  %562 = bitcast float* %561 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %562, i32 0, i32 1, i32 1)
  %563 = getelementptr inbounds float, float* %537, i64 56
  %564 = bitcast float* %563 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %564, i32 0, i32 1, i32 1)
  %565 = getelementptr inbounds float, float* %540, i64 56
  %566 = bitcast float* %565 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %566, i32 0, i32 1, i32 1)
  %567 = getelementptr inbounds float, float* %537, i64 64
  %568 = bitcast float* %567 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %568, i32 0, i32 1, i32 1)
  %569 = getelementptr inbounds float, float* %540, i64 64
  %570 = bitcast float* %569 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %570, i32 0, i32 1, i32 1)
  %571 = getelementptr inbounds float, float* %537, i64 72
  %572 = bitcast float* %571 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %572, i32 0, i32 1, i32 1)
  %573 = getelementptr inbounds float, float* %540, i64 72
  %574 = bitcast float* %573 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %574, i32 0, i32 1, i32 1)
  %575 = getelementptr inbounds float, float* %537, i64 80
  %576 = bitcast float* %575 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %576, i32 0, i32 1, i32 1)
  %577 = getelementptr inbounds float, float* %540, i64 80
  %578 = bitcast float* %577 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %578, i32 0, i32 1, i32 1)
  %579 = bitcast float* %537 to <8 x float>*
  %580 = load <8 x float>, <8 x float>* %579, align 1, !tbaa !12
  %581 = or i64 %536, 8
  %582 = getelementptr inbounds float, float* %5, i64 %581
  %583 = bitcast float* %582 to <8 x float>*
  %584 = load <8 x float>, <8 x float>* %583, align 1, !tbaa !12
  %585 = add nuw nsw i64 %536, 16
  %586 = getelementptr inbounds float, float* %5, i64 %585
  %587 = bitcast float* %586 to <8 x float>*
  %588 = load <8 x float>, <8 x float>* %587, align 1, !tbaa !12
  %589 = add nuw nsw i64 %536, 24
  %590 = getelementptr inbounds float, float* %5, i64 %589
  %591 = bitcast float* %590 to <8 x float>*
  %592 = load <8 x float>, <8 x float>* %591, align 1, !tbaa !12
  %593 = add nuw nsw i64 %536, 32
  %594 = getelementptr inbounds float, float* %5, i64 %593
  %595 = bitcast float* %594 to <8 x float>*
  %596 = load <8 x float>, <8 x float>* %595, align 1, !tbaa !12
  %597 = add nuw nsw i64 %536, 40
  %598 = getelementptr inbounds float, float* %5, i64 %597
  %599 = bitcast float* %598 to <8 x float>*
  %600 = load <8 x float>, <8 x float>* %599, align 1, !tbaa !12
  %601 = add nuw nsw i64 %536, 48
  %602 = getelementptr inbounds float, float* %5, i64 %601
  %603 = bitcast float* %602 to <8 x float>*
  %604 = load <8 x float>, <8 x float>* %603, align 1, !tbaa !12
  %605 = add nuw nsw i64 %536, 56
  %606 = getelementptr inbounds float, float* %5, i64 %605
  %607 = bitcast float* %606 to <8 x float>*
  %608 = load <8 x float>, <8 x float>* %607, align 1, !tbaa !12
  %609 = add nuw nsw i64 %536, 64
  %610 = getelementptr inbounds float, float* %5, i64 %609
  %611 = bitcast float* %610 to <8 x float>*
  %612 = load <8 x float>, <8 x float>* %611, align 1, !tbaa !12
  %613 = add nuw nsw i64 %536, 72
  %614 = getelementptr inbounds float, float* %5, i64 %613
  %615 = bitcast float* %614 to <8 x float>*
  %616 = load <8 x float>, <8 x float>* %615, align 1, !tbaa !12
  %617 = add nsw i64 %536, %392
  %618 = getelementptr inbounds float, float* %3, i64 %617
  %619 = bitcast float* %618 to <8 x float>*
  %620 = load <8 x float>, <8 x float>* %619, align 1, !tbaa !12
  %621 = add nsw i64 %617, 8
  %622 = getelementptr inbounds float, float* %3, i64 %621
  %623 = bitcast float* %622 to <8 x float>*
  %624 = load <8 x float>, <8 x float>* %623, align 1, !tbaa !12
  %625 = add nsw i64 %617, 16
  %626 = getelementptr inbounds float, float* %3, i64 %625
  %627 = bitcast float* %626 to <8 x float>*
  %628 = load <8 x float>, <8 x float>* %627, align 1, !tbaa !12
  %629 = add nsw i64 %617, 24
  %630 = getelementptr inbounds float, float* %3, i64 %629
  %631 = bitcast float* %630 to <8 x float>*
  %632 = load <8 x float>, <8 x float>* %631, align 1, !tbaa !12
  %633 = add nsw i64 %617, 32
  %634 = getelementptr inbounds float, float* %3, i64 %633
  %635 = bitcast float* %634 to <8 x float>*
  %636 = load <8 x float>, <8 x float>* %635, align 1, !tbaa !12
  %637 = add nsw i64 %617, 40
  %638 = getelementptr inbounds float, float* %3, i64 %637
  %639 = bitcast float* %638 to <8 x float>*
  %640 = load <8 x float>, <8 x float>* %639, align 1, !tbaa !12
  %641 = add nsw i64 %617, 48
  %642 = getelementptr inbounds float, float* %3, i64 %641
  %643 = bitcast float* %642 to <8 x float>*
  %644 = load <8 x float>, <8 x float>* %643, align 1, !tbaa !12
  %645 = add nsw i64 %617, 56
  %646 = getelementptr inbounds float, float* %3, i64 %645
  %647 = bitcast float* %646 to <8 x float>*
  %648 = load <8 x float>, <8 x float>* %647, align 1, !tbaa !12
  %649 = add nsw i64 %617, 64
  %650 = getelementptr inbounds float, float* %3, i64 %649
  %651 = bitcast float* %650 to <8 x float>*
  %652 = load <8 x float>, <8 x float>* %651, align 1, !tbaa !12
  %653 = add nsw i64 %617, 72
  %654 = getelementptr inbounds float, float* %3, i64 %653
  %655 = bitcast float* %654 to <8 x float>*
  %656 = load <8 x float>, <8 x float>* %655, align 1, !tbaa !12
  %657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %620, <8 x float> %40, <8 x float> %580) #10
  %658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %624, <8 x float> %40, <8 x float> %584) #10
  %659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %628, <8 x float> %40, <8 x float> %588) #10
  %660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %632, <8 x float> %40, <8 x float> %592) #10
  %661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %636, <8 x float> %40, <8 x float> %596) #10
  %662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %640, <8 x float> %40, <8 x float> %600) #10
  %663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %644, <8 x float> %40, <8 x float> %604) #10
  %664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %648, <8 x float> %40, <8 x float> %608) #10
  %665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %652, <8 x float> %40, <8 x float> %612) #10
  %666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %656, <8 x float> %40, <8 x float> %616) #10
  store <8 x float> %657, <8 x float>* %579, align 1, !tbaa !12
  store <8 x float> %658, <8 x float>* %583, align 1, !tbaa !12
  store <8 x float> %659, <8 x float>* %587, align 1, !tbaa !12
  store <8 x float> %660, <8 x float>* %591, align 1, !tbaa !12
  store <8 x float> %661, <8 x float>* %595, align 1, !tbaa !12
  store <8 x float> %662, <8 x float>* %599, align 1, !tbaa !12
  store <8 x float> %663, <8 x float>* %603, align 1, !tbaa !12
  store <8 x float> %664, <8 x float>* %607, align 1, !tbaa !12
  store <8 x float> %665, <8 x float>* %611, align 1, !tbaa !12
  store <8 x float> %666, <8 x float>* %615, align 1, !tbaa !12
  %667 = add nuw nsw i64 %536, 80
  %668 = icmp ult i64 %667, %393
  br i1 %668, label %535, label %528

669:                                              ; preds = %675
  br i1 %530, label %670, label %1100

670:                                              ; preds = %669
  %671 = trunc i64 %46 to i32
  %672 = mul nsw i32 %529, %671
  %673 = sext i32 %672 to i64
  %674 = zext i32 %529 to i64
  br label %826

675:                                              ; preds = %531, %675
  %676 = phi i64 [ 0, %531 ], [ %818, %675 ]
  %677 = getelementptr inbounds float, float* %5, i64 %676
  %678 = getelementptr inbounds float, float* %677, i64 8
  %679 = bitcast float* %678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %679, i32 0, i32 1, i32 1)
  %680 = getelementptr inbounds float, float* %3, i64 %676
  %681 = getelementptr inbounds float, float* %680, i64 8
  %682 = bitcast float* %681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %682, i32 0, i32 1, i32 1)
  %683 = getelementptr inbounds float, float* %677, i64 16
  %684 = bitcast float* %683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %684, i32 0, i32 1, i32 1)
  %685 = getelementptr inbounds float, float* %680, i64 16
  %686 = bitcast float* %685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %686, i32 0, i32 1, i32 1)
  %687 = getelementptr inbounds float, float* %677, i64 24
  %688 = bitcast float* %687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %688, i32 0, i32 1, i32 1)
  %689 = getelementptr inbounds float, float* %680, i64 24
  %690 = bitcast float* %689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %690, i32 0, i32 1, i32 1)
  %691 = getelementptr inbounds float, float* %677, i64 32
  %692 = bitcast float* %691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %692, i32 0, i32 1, i32 1)
  %693 = getelementptr inbounds float, float* %680, i64 32
  %694 = bitcast float* %693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %694, i32 0, i32 1, i32 1)
  %695 = getelementptr inbounds float, float* %677, i64 40
  %696 = bitcast float* %695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %696, i32 0, i32 1, i32 1)
  %697 = getelementptr inbounds float, float* %680, i64 40
  %698 = bitcast float* %697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %698, i32 0, i32 1, i32 1)
  %699 = getelementptr inbounds float, float* %677, i64 48
  %700 = bitcast float* %699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %700, i32 0, i32 1, i32 1)
  %701 = getelementptr inbounds float, float* %680, i64 48
  %702 = bitcast float* %701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %702, i32 0, i32 1, i32 1)
  %703 = getelementptr inbounds float, float* %677, i64 56
  %704 = bitcast float* %703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %704, i32 0, i32 1, i32 1)
  %705 = getelementptr inbounds float, float* %680, i64 56
  %706 = bitcast float* %705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %706, i32 0, i32 1, i32 1)
  %707 = getelementptr inbounds float, float* %677, i64 64
  %708 = bitcast float* %707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %708, i32 0, i32 1, i32 1)
  %709 = getelementptr inbounds float, float* %680, i64 64
  %710 = bitcast float* %709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %710, i32 0, i32 1, i32 1)
  %711 = getelementptr inbounds float, float* %677, i64 72
  %712 = bitcast float* %711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %712, i32 0, i32 1, i32 1)
  %713 = getelementptr inbounds float, float* %680, i64 72
  %714 = bitcast float* %713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %714, i32 0, i32 1, i32 1)
  %715 = getelementptr inbounds float, float* %677, i64 80
  %716 = bitcast float* %715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %716, i32 0, i32 1, i32 1)
  %717 = getelementptr inbounds float, float* %680, i64 80
  %718 = bitcast float* %717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %718, i32 0, i32 1, i32 1)
  %719 = bitcast float* %677 to <8 x float>*
  %720 = load <8 x float>, <8 x float>* %719, align 1, !tbaa !12
  %721 = or i64 %676, 8
  %722 = getelementptr inbounds float, float* %5, i64 %721
  %723 = bitcast float* %722 to <8 x float>*
  %724 = load <8 x float>, <8 x float>* %723, align 1, !tbaa !12
  %725 = add nuw nsw i64 %676, 16
  %726 = getelementptr inbounds float, float* %5, i64 %725
  %727 = bitcast float* %726 to <8 x float>*
  %728 = load <8 x float>, <8 x float>* %727, align 1, !tbaa !12
  %729 = add nuw nsw i64 %676, 24
  %730 = getelementptr inbounds float, float* %5, i64 %729
  %731 = bitcast float* %730 to <8 x float>*
  %732 = load <8 x float>, <8 x float>* %731, align 1, !tbaa !12
  %733 = add nuw nsw i64 %676, 32
  %734 = getelementptr inbounds float, float* %5, i64 %733
  %735 = bitcast float* %734 to <8 x float>*
  %736 = load <8 x float>, <8 x float>* %735, align 1, !tbaa !12
  %737 = add nuw nsw i64 %676, 40
  %738 = getelementptr inbounds float, float* %5, i64 %737
  %739 = bitcast float* %738 to <8 x float>*
  %740 = load <8 x float>, <8 x float>* %739, align 1, !tbaa !12
  %741 = add nuw nsw i64 %676, 48
  %742 = getelementptr inbounds float, float* %5, i64 %741
  %743 = bitcast float* %742 to <8 x float>*
  %744 = load <8 x float>, <8 x float>* %743, align 1, !tbaa !12
  %745 = add nuw nsw i64 %676, 56
  %746 = getelementptr inbounds float, float* %5, i64 %745
  %747 = bitcast float* %746 to <8 x float>*
  %748 = load <8 x float>, <8 x float>* %747, align 1, !tbaa !12
  %749 = add nuw nsw i64 %676, 64
  %750 = getelementptr inbounds float, float* %5, i64 %749
  %751 = bitcast float* %750 to <8 x float>*
  %752 = load <8 x float>, <8 x float>* %751, align 1, !tbaa !12
  %753 = add nuw nsw i64 %676, 72
  %754 = getelementptr inbounds float, float* %5, i64 %753
  %755 = bitcast float* %754 to <8 x float>*
  %756 = load <8 x float>, <8 x float>* %755, align 1, !tbaa !12
  %757 = trunc i64 %676 to i32
  %758 = add nsw i32 %534, %757
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds float, float* %3, i64 %759
  %761 = bitcast float* %760 to <8 x float>*
  %762 = load <8 x float>, <8 x float>* %761, align 1, !tbaa !12
  %763 = add nsw i32 %758, 8
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds float, float* %3, i64 %764
  %766 = bitcast float* %765 to <8 x float>*
  %767 = load <8 x float>, <8 x float>* %766, align 1, !tbaa !12
  %768 = add nsw i32 %758, 16
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds float, float* %3, i64 %769
  %771 = bitcast float* %770 to <8 x float>*
  %772 = load <8 x float>, <8 x float>* %771, align 1, !tbaa !12
  %773 = add nsw i32 %758, 24
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds float, float* %3, i64 %774
  %776 = bitcast float* %775 to <8 x float>*
  %777 = load <8 x float>, <8 x float>* %776, align 1, !tbaa !12
  %778 = add nsw i32 %758, 32
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds float, float* %3, i64 %779
  %781 = bitcast float* %780 to <8 x float>*
  %782 = load <8 x float>, <8 x float>* %781, align 1, !tbaa !12
  %783 = add nsw i32 %758, 40
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds float, float* %3, i64 %784
  %786 = bitcast float* %785 to <8 x float>*
  %787 = load <8 x float>, <8 x float>* %786, align 1, !tbaa !12
  %788 = add nsw i32 %758, 48
  %789 = sext i32 %788 to i64
  %790 = getelementptr inbounds float, float* %3, i64 %789
  %791 = bitcast float* %790 to <8 x float>*
  %792 = load <8 x float>, <8 x float>* %791, align 1, !tbaa !12
  %793 = add nsw i32 %758, 56
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds float, float* %3, i64 %794
  %796 = bitcast float* %795 to <8 x float>*
  %797 = load <8 x float>, <8 x float>* %796, align 1, !tbaa !12
  %798 = add nsw i32 %758, 64
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds float, float* %3, i64 %799
  %801 = bitcast float* %800 to <8 x float>*
  %802 = load <8 x float>, <8 x float>* %801, align 1, !tbaa !12
  %803 = add nsw i32 %758, 72
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds float, float* %3, i64 %804
  %806 = bitcast float* %805 to <8 x float>*
  %807 = load <8 x float>, <8 x float>* %806, align 1, !tbaa !12
  %808 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %762, <8 x float> %45, <8 x float> %720) #10
  %809 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %767, <8 x float> %45, <8 x float> %724) #10
  %810 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %772, <8 x float> %45, <8 x float> %728) #10
  %811 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %777, <8 x float> %45, <8 x float> %732) #10
  %812 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %782, <8 x float> %45, <8 x float> %736) #10
  %813 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %787, <8 x float> %45, <8 x float> %740) #10
  %814 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %792, <8 x float> %45, <8 x float> %744) #10
  %815 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %797, <8 x float> %45, <8 x float> %748) #10
  %816 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %802, <8 x float> %45, <8 x float> %752) #10
  %817 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %807, <8 x float> %45, <8 x float> %756) #10
  store <8 x float> %808, <8 x float>* %719, align 1, !tbaa !12
  store <8 x float> %809, <8 x float>* %723, align 1, !tbaa !12
  store <8 x float> %810, <8 x float>* %727, align 1, !tbaa !12
  store <8 x float> %811, <8 x float>* %731, align 1, !tbaa !12
  store <8 x float> %812, <8 x float>* %735, align 1, !tbaa !12
  store <8 x float> %813, <8 x float>* %739, align 1, !tbaa !12
  store <8 x float> %814, <8 x float>* %743, align 1, !tbaa !12
  store <8 x float> %815, <8 x float>* %747, align 1, !tbaa !12
  store <8 x float> %816, <8 x float>* %751, align 1, !tbaa !12
  store <8 x float> %817, <8 x float>* %755, align 1, !tbaa !12
  %818 = add nuw nsw i64 %676, 80
  %819 = icmp ult i64 %818, %532
  br i1 %819, label %675, label %669

820:                                              ; preds = %826
  br i1 %530, label %821, label %1100

821:                                              ; preds = %820
  %822 = trunc i64 %51 to i32
  %823 = mul nsw i32 %529, %822
  %824 = sext i32 %823 to i64
  %825 = zext i32 %529 to i64
  br label %966

826:                                              ; preds = %670, %826
  %827 = phi i64 [ 0, %670 ], [ %958, %826 ]
  %828 = getelementptr inbounds float, float* %5, i64 %827
  %829 = getelementptr inbounds float, float* %828, i64 8
  %830 = bitcast float* %829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %830, i32 0, i32 1, i32 1)
  %831 = getelementptr inbounds float, float* %3, i64 %827
  %832 = getelementptr inbounds float, float* %831, i64 8
  %833 = bitcast float* %832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %833, i32 0, i32 1, i32 1)
  %834 = getelementptr inbounds float, float* %828, i64 16
  %835 = bitcast float* %834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %835, i32 0, i32 1, i32 1)
  %836 = getelementptr inbounds float, float* %831, i64 16
  %837 = bitcast float* %836 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %837, i32 0, i32 1, i32 1)
  %838 = getelementptr inbounds float, float* %828, i64 24
  %839 = bitcast float* %838 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %839, i32 0, i32 1, i32 1)
  %840 = getelementptr inbounds float, float* %831, i64 24
  %841 = bitcast float* %840 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %841, i32 0, i32 1, i32 1)
  %842 = getelementptr inbounds float, float* %828, i64 32
  %843 = bitcast float* %842 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %843, i32 0, i32 1, i32 1)
  %844 = getelementptr inbounds float, float* %831, i64 32
  %845 = bitcast float* %844 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %845, i32 0, i32 1, i32 1)
  %846 = getelementptr inbounds float, float* %828, i64 40
  %847 = bitcast float* %846 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %847, i32 0, i32 1, i32 1)
  %848 = getelementptr inbounds float, float* %831, i64 40
  %849 = bitcast float* %848 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %849, i32 0, i32 1, i32 1)
  %850 = getelementptr inbounds float, float* %828, i64 48
  %851 = bitcast float* %850 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %851, i32 0, i32 1, i32 1)
  %852 = getelementptr inbounds float, float* %831, i64 48
  %853 = bitcast float* %852 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %853, i32 0, i32 1, i32 1)
  %854 = getelementptr inbounds float, float* %828, i64 56
  %855 = bitcast float* %854 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %855, i32 0, i32 1, i32 1)
  %856 = getelementptr inbounds float, float* %831, i64 56
  %857 = bitcast float* %856 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %857, i32 0, i32 1, i32 1)
  %858 = getelementptr inbounds float, float* %828, i64 64
  %859 = bitcast float* %858 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %859, i32 0, i32 1, i32 1)
  %860 = getelementptr inbounds float, float* %831, i64 64
  %861 = bitcast float* %860 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %861, i32 0, i32 1, i32 1)
  %862 = getelementptr inbounds float, float* %828, i64 72
  %863 = bitcast float* %862 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %863, i32 0, i32 1, i32 1)
  %864 = getelementptr inbounds float, float* %831, i64 72
  %865 = bitcast float* %864 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %865, i32 0, i32 1, i32 1)
  %866 = getelementptr inbounds float, float* %828, i64 80
  %867 = bitcast float* %866 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %867, i32 0, i32 1, i32 1)
  %868 = getelementptr inbounds float, float* %831, i64 80
  %869 = bitcast float* %868 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %869, i32 0, i32 1, i32 1)
  %870 = bitcast float* %828 to <8 x float>*
  %871 = load <8 x float>, <8 x float>* %870, align 1, !tbaa !12
  %872 = or i64 %827, 8
  %873 = getelementptr inbounds float, float* %5, i64 %872
  %874 = bitcast float* %873 to <8 x float>*
  %875 = load <8 x float>, <8 x float>* %874, align 1, !tbaa !12
  %876 = add nuw nsw i64 %827, 16
  %877 = getelementptr inbounds float, float* %5, i64 %876
  %878 = bitcast float* %877 to <8 x float>*
  %879 = load <8 x float>, <8 x float>* %878, align 1, !tbaa !12
  %880 = add nuw nsw i64 %827, 24
  %881 = getelementptr inbounds float, float* %5, i64 %880
  %882 = bitcast float* %881 to <8 x float>*
  %883 = load <8 x float>, <8 x float>* %882, align 1, !tbaa !12
  %884 = add nuw nsw i64 %827, 32
  %885 = getelementptr inbounds float, float* %5, i64 %884
  %886 = bitcast float* %885 to <8 x float>*
  %887 = load <8 x float>, <8 x float>* %886, align 1, !tbaa !12
  %888 = add nuw nsw i64 %827, 40
  %889 = getelementptr inbounds float, float* %5, i64 %888
  %890 = bitcast float* %889 to <8 x float>*
  %891 = load <8 x float>, <8 x float>* %890, align 1, !tbaa !12
  %892 = add nuw nsw i64 %827, 48
  %893 = getelementptr inbounds float, float* %5, i64 %892
  %894 = bitcast float* %893 to <8 x float>*
  %895 = load <8 x float>, <8 x float>* %894, align 1, !tbaa !12
  %896 = add nuw nsw i64 %827, 56
  %897 = getelementptr inbounds float, float* %5, i64 %896
  %898 = bitcast float* %897 to <8 x float>*
  %899 = load <8 x float>, <8 x float>* %898, align 1, !tbaa !12
  %900 = add nuw nsw i64 %827, 64
  %901 = getelementptr inbounds float, float* %5, i64 %900
  %902 = bitcast float* %901 to <8 x float>*
  %903 = load <8 x float>, <8 x float>* %902, align 1, !tbaa !12
  %904 = add nuw nsw i64 %827, 72
  %905 = getelementptr inbounds float, float* %5, i64 %904
  %906 = bitcast float* %905 to <8 x float>*
  %907 = load <8 x float>, <8 x float>* %906, align 1, !tbaa !12
  %908 = add nsw i64 %827, %673
  %909 = getelementptr inbounds float, float* %3, i64 %908
  %910 = bitcast float* %909 to <8 x float>*
  %911 = load <8 x float>, <8 x float>* %910, align 1, !tbaa !12
  %912 = add nsw i64 %908, 8
  %913 = getelementptr inbounds float, float* %3, i64 %912
  %914 = bitcast float* %913 to <8 x float>*
  %915 = load <8 x float>, <8 x float>* %914, align 1, !tbaa !12
  %916 = add nsw i64 %908, 16
  %917 = getelementptr inbounds float, float* %3, i64 %916
  %918 = bitcast float* %917 to <8 x float>*
  %919 = load <8 x float>, <8 x float>* %918, align 1, !tbaa !12
  %920 = add nsw i64 %908, 24
  %921 = getelementptr inbounds float, float* %3, i64 %920
  %922 = bitcast float* %921 to <8 x float>*
  %923 = load <8 x float>, <8 x float>* %922, align 1, !tbaa !12
  %924 = add nsw i64 %908, 32
  %925 = getelementptr inbounds float, float* %3, i64 %924
  %926 = bitcast float* %925 to <8 x float>*
  %927 = load <8 x float>, <8 x float>* %926, align 1, !tbaa !12
  %928 = add nsw i64 %908, 40
  %929 = getelementptr inbounds float, float* %3, i64 %928
  %930 = bitcast float* %929 to <8 x float>*
  %931 = load <8 x float>, <8 x float>* %930, align 1, !tbaa !12
  %932 = add nsw i64 %908, 48
  %933 = getelementptr inbounds float, float* %3, i64 %932
  %934 = bitcast float* %933 to <8 x float>*
  %935 = load <8 x float>, <8 x float>* %934, align 1, !tbaa !12
  %936 = add nsw i64 %908, 56
  %937 = getelementptr inbounds float, float* %3, i64 %936
  %938 = bitcast float* %937 to <8 x float>*
  %939 = load <8 x float>, <8 x float>* %938, align 1, !tbaa !12
  %940 = add nsw i64 %908, 64
  %941 = getelementptr inbounds float, float* %3, i64 %940
  %942 = bitcast float* %941 to <8 x float>*
  %943 = load <8 x float>, <8 x float>* %942, align 1, !tbaa !12
  %944 = add nsw i64 %908, 72
  %945 = getelementptr inbounds float, float* %3, i64 %944
  %946 = bitcast float* %945 to <8 x float>*
  %947 = load <8 x float>, <8 x float>* %946, align 1, !tbaa !12
  %948 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %911, <8 x float> %50, <8 x float> %871) #10
  %949 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %915, <8 x float> %50, <8 x float> %875) #10
  %950 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %919, <8 x float> %50, <8 x float> %879) #10
  %951 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %923, <8 x float> %50, <8 x float> %883) #10
  %952 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %927, <8 x float> %50, <8 x float> %887) #10
  %953 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %931, <8 x float> %50, <8 x float> %891) #10
  %954 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %935, <8 x float> %50, <8 x float> %895) #10
  %955 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %939, <8 x float> %50, <8 x float> %899) #10
  %956 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %943, <8 x float> %50, <8 x float> %903) #10
  %957 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %947, <8 x float> %50, <8 x float> %907) #10
  store <8 x float> %948, <8 x float>* %870, align 1, !tbaa !12
  store <8 x float> %949, <8 x float>* %874, align 1, !tbaa !12
  store <8 x float> %950, <8 x float>* %878, align 1, !tbaa !12
  store <8 x float> %951, <8 x float>* %882, align 1, !tbaa !12
  store <8 x float> %952, <8 x float>* %886, align 1, !tbaa !12
  store <8 x float> %953, <8 x float>* %890, align 1, !tbaa !12
  store <8 x float> %954, <8 x float>* %894, align 1, !tbaa !12
  store <8 x float> %955, <8 x float>* %898, align 1, !tbaa !12
  store <8 x float> %956, <8 x float>* %902, align 1, !tbaa !12
  store <8 x float> %957, <8 x float>* %906, align 1, !tbaa !12
  %958 = add nuw nsw i64 %827, 80
  %959 = icmp ult i64 %958, %674
  br i1 %959, label %826, label %820

960:                                              ; preds = %966
  br i1 %530, label %961, label %1100

961:                                              ; preds = %960
  %962 = trunc i64 %56 to i32
  %963 = mul nsw i32 %529, %962
  %964 = sext i32 %963 to i64
  %965 = zext i32 %529 to i64
  br label %1107

966:                                              ; preds = %821, %966
  %967 = phi i64 [ 0, %821 ], [ %1098, %966 ]
  %968 = getelementptr inbounds float, float* %5, i64 %967
  %969 = getelementptr inbounds float, float* %968, i64 8
  %970 = bitcast float* %969 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %970, i32 0, i32 1, i32 1)
  %971 = getelementptr inbounds float, float* %3, i64 %967
  %972 = getelementptr inbounds float, float* %971, i64 8
  %973 = bitcast float* %972 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %973, i32 0, i32 1, i32 1)
  %974 = getelementptr inbounds float, float* %968, i64 16
  %975 = bitcast float* %974 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %975, i32 0, i32 1, i32 1)
  %976 = getelementptr inbounds float, float* %971, i64 16
  %977 = bitcast float* %976 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %977, i32 0, i32 1, i32 1)
  %978 = getelementptr inbounds float, float* %968, i64 24
  %979 = bitcast float* %978 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %979, i32 0, i32 1, i32 1)
  %980 = getelementptr inbounds float, float* %971, i64 24
  %981 = bitcast float* %980 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %981, i32 0, i32 1, i32 1)
  %982 = getelementptr inbounds float, float* %968, i64 32
  %983 = bitcast float* %982 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %983, i32 0, i32 1, i32 1)
  %984 = getelementptr inbounds float, float* %971, i64 32
  %985 = bitcast float* %984 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %985, i32 0, i32 1, i32 1)
  %986 = getelementptr inbounds float, float* %968, i64 40
  %987 = bitcast float* %986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %987, i32 0, i32 1, i32 1)
  %988 = getelementptr inbounds float, float* %971, i64 40
  %989 = bitcast float* %988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %989, i32 0, i32 1, i32 1)
  %990 = getelementptr inbounds float, float* %968, i64 48
  %991 = bitcast float* %990 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %991, i32 0, i32 1, i32 1)
  %992 = getelementptr inbounds float, float* %971, i64 48
  %993 = bitcast float* %992 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %993, i32 0, i32 1, i32 1)
  %994 = getelementptr inbounds float, float* %968, i64 56
  %995 = bitcast float* %994 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %995, i32 0, i32 1, i32 1)
  %996 = getelementptr inbounds float, float* %971, i64 56
  %997 = bitcast float* %996 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %997, i32 0, i32 1, i32 1)
  %998 = getelementptr inbounds float, float* %968, i64 64
  %999 = bitcast float* %998 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %999, i32 0, i32 1, i32 1)
  %1000 = getelementptr inbounds float, float* %971, i64 64
  %1001 = bitcast float* %1000 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1001, i32 0, i32 1, i32 1)
  %1002 = getelementptr inbounds float, float* %968, i64 72
  %1003 = bitcast float* %1002 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1003, i32 0, i32 1, i32 1)
  %1004 = getelementptr inbounds float, float* %971, i64 72
  %1005 = bitcast float* %1004 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1005, i32 0, i32 1, i32 1)
  %1006 = getelementptr inbounds float, float* %968, i64 80
  %1007 = bitcast float* %1006 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1007, i32 0, i32 1, i32 1)
  %1008 = getelementptr inbounds float, float* %971, i64 80
  %1009 = bitcast float* %1008 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1009, i32 0, i32 1, i32 1)
  %1010 = bitcast float* %968 to <8 x float>*
  %1011 = load <8 x float>, <8 x float>* %1010, align 1, !tbaa !12
  %1012 = or i64 %967, 8
  %1013 = getelementptr inbounds float, float* %5, i64 %1012
  %1014 = bitcast float* %1013 to <8 x float>*
  %1015 = load <8 x float>, <8 x float>* %1014, align 1, !tbaa !12
  %1016 = add nuw nsw i64 %967, 16
  %1017 = getelementptr inbounds float, float* %5, i64 %1016
  %1018 = bitcast float* %1017 to <8 x float>*
  %1019 = load <8 x float>, <8 x float>* %1018, align 1, !tbaa !12
  %1020 = add nuw nsw i64 %967, 24
  %1021 = getelementptr inbounds float, float* %5, i64 %1020
  %1022 = bitcast float* %1021 to <8 x float>*
  %1023 = load <8 x float>, <8 x float>* %1022, align 1, !tbaa !12
  %1024 = add nuw nsw i64 %967, 32
  %1025 = getelementptr inbounds float, float* %5, i64 %1024
  %1026 = bitcast float* %1025 to <8 x float>*
  %1027 = load <8 x float>, <8 x float>* %1026, align 1, !tbaa !12
  %1028 = add nuw nsw i64 %967, 40
  %1029 = getelementptr inbounds float, float* %5, i64 %1028
  %1030 = bitcast float* %1029 to <8 x float>*
  %1031 = load <8 x float>, <8 x float>* %1030, align 1, !tbaa !12
  %1032 = add nuw nsw i64 %967, 48
  %1033 = getelementptr inbounds float, float* %5, i64 %1032
  %1034 = bitcast float* %1033 to <8 x float>*
  %1035 = load <8 x float>, <8 x float>* %1034, align 1, !tbaa !12
  %1036 = add nuw nsw i64 %967, 56
  %1037 = getelementptr inbounds float, float* %5, i64 %1036
  %1038 = bitcast float* %1037 to <8 x float>*
  %1039 = load <8 x float>, <8 x float>* %1038, align 1, !tbaa !12
  %1040 = add nuw nsw i64 %967, 64
  %1041 = getelementptr inbounds float, float* %5, i64 %1040
  %1042 = bitcast float* %1041 to <8 x float>*
  %1043 = load <8 x float>, <8 x float>* %1042, align 1, !tbaa !12
  %1044 = add nuw nsw i64 %967, 72
  %1045 = getelementptr inbounds float, float* %5, i64 %1044
  %1046 = bitcast float* %1045 to <8 x float>*
  %1047 = load <8 x float>, <8 x float>* %1046, align 1, !tbaa !12
  %1048 = add nsw i64 %967, %824
  %1049 = getelementptr inbounds float, float* %3, i64 %1048
  %1050 = bitcast float* %1049 to <8 x float>*
  %1051 = load <8 x float>, <8 x float>* %1050, align 1, !tbaa !12
  %1052 = add nsw i64 %1048, 8
  %1053 = getelementptr inbounds float, float* %3, i64 %1052
  %1054 = bitcast float* %1053 to <8 x float>*
  %1055 = load <8 x float>, <8 x float>* %1054, align 1, !tbaa !12
  %1056 = add nsw i64 %1048, 16
  %1057 = getelementptr inbounds float, float* %3, i64 %1056
  %1058 = bitcast float* %1057 to <8 x float>*
  %1059 = load <8 x float>, <8 x float>* %1058, align 1, !tbaa !12
  %1060 = add nsw i64 %1048, 24
  %1061 = getelementptr inbounds float, float* %3, i64 %1060
  %1062 = bitcast float* %1061 to <8 x float>*
  %1063 = load <8 x float>, <8 x float>* %1062, align 1, !tbaa !12
  %1064 = add nsw i64 %1048, 32
  %1065 = getelementptr inbounds float, float* %3, i64 %1064
  %1066 = bitcast float* %1065 to <8 x float>*
  %1067 = load <8 x float>, <8 x float>* %1066, align 1, !tbaa !12
  %1068 = add nsw i64 %1048, 40
  %1069 = getelementptr inbounds float, float* %3, i64 %1068
  %1070 = bitcast float* %1069 to <8 x float>*
  %1071 = load <8 x float>, <8 x float>* %1070, align 1, !tbaa !12
  %1072 = add nsw i64 %1048, 48
  %1073 = getelementptr inbounds float, float* %3, i64 %1072
  %1074 = bitcast float* %1073 to <8 x float>*
  %1075 = load <8 x float>, <8 x float>* %1074, align 1, !tbaa !12
  %1076 = add nsw i64 %1048, 56
  %1077 = getelementptr inbounds float, float* %3, i64 %1076
  %1078 = bitcast float* %1077 to <8 x float>*
  %1079 = load <8 x float>, <8 x float>* %1078, align 1, !tbaa !12
  %1080 = add nsw i64 %1048, 64
  %1081 = getelementptr inbounds float, float* %3, i64 %1080
  %1082 = bitcast float* %1081 to <8 x float>*
  %1083 = load <8 x float>, <8 x float>* %1082, align 1, !tbaa !12
  %1084 = add nsw i64 %1048, 72
  %1085 = getelementptr inbounds float, float* %3, i64 %1084
  %1086 = bitcast float* %1085 to <8 x float>*
  %1087 = load <8 x float>, <8 x float>* %1086, align 1, !tbaa !12
  %1088 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1051, <8 x float> %55, <8 x float> %1011) #10
  %1089 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1055, <8 x float> %55, <8 x float> %1015) #10
  %1090 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1059, <8 x float> %55, <8 x float> %1019) #10
  %1091 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1063, <8 x float> %55, <8 x float> %1023) #10
  %1092 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1067, <8 x float> %55, <8 x float> %1027) #10
  %1093 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1071, <8 x float> %55, <8 x float> %1031) #10
  %1094 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1075, <8 x float> %55, <8 x float> %1035) #10
  %1095 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1079, <8 x float> %55, <8 x float> %1039) #10
  %1096 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1083, <8 x float> %55, <8 x float> %1043) #10
  %1097 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1087, <8 x float> %55, <8 x float> %1047) #10
  store <8 x float> %1088, <8 x float>* %1010, align 1, !tbaa !12
  store <8 x float> %1089, <8 x float>* %1014, align 1, !tbaa !12
  store <8 x float> %1090, <8 x float>* %1018, align 1, !tbaa !12
  store <8 x float> %1091, <8 x float>* %1022, align 1, !tbaa !12
  store <8 x float> %1092, <8 x float>* %1026, align 1, !tbaa !12
  store <8 x float> %1093, <8 x float>* %1030, align 1, !tbaa !12
  store <8 x float> %1094, <8 x float>* %1034, align 1, !tbaa !12
  store <8 x float> %1095, <8 x float>* %1038, align 1, !tbaa !12
  store <8 x float> %1096, <8 x float>* %1042, align 1, !tbaa !12
  store <8 x float> %1097, <8 x float>* %1046, align 1, !tbaa !12
  %1098 = add nuw nsw i64 %967, 80
  %1099 = icmp ult i64 %1098, %825
  br i1 %1099, label %966, label %960

1100:                                             ; preds = %1107, %669, %820, %960
  %1101 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1102 = icmp sgt i32 %1101, 0
  br i1 %1102, label %1103, label %1964

1103:                                             ; preds = %1100
  %1104 = zext i32 %1101 to i64
  %1105 = trunc i64 %61 to i32
  %1106 = mul nsw i32 %1101, %1105
  br label %1247

1107:                                             ; preds = %961, %1107
  %1108 = phi i64 [ 0, %961 ], [ %1239, %1107 ]
  %1109 = getelementptr inbounds float, float* %5, i64 %1108
  %1110 = getelementptr inbounds float, float* %1109, i64 8
  %1111 = bitcast float* %1110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1111, i32 0, i32 1, i32 1)
  %1112 = getelementptr inbounds float, float* %3, i64 %1108
  %1113 = getelementptr inbounds float, float* %1112, i64 8
  %1114 = bitcast float* %1113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1114, i32 0, i32 1, i32 1)
  %1115 = getelementptr inbounds float, float* %1109, i64 16
  %1116 = bitcast float* %1115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1116, i32 0, i32 1, i32 1)
  %1117 = getelementptr inbounds float, float* %1112, i64 16
  %1118 = bitcast float* %1117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1118, i32 0, i32 1, i32 1)
  %1119 = getelementptr inbounds float, float* %1109, i64 24
  %1120 = bitcast float* %1119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1120, i32 0, i32 1, i32 1)
  %1121 = getelementptr inbounds float, float* %1112, i64 24
  %1122 = bitcast float* %1121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1122, i32 0, i32 1, i32 1)
  %1123 = getelementptr inbounds float, float* %1109, i64 32
  %1124 = bitcast float* %1123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1124, i32 0, i32 1, i32 1)
  %1125 = getelementptr inbounds float, float* %1112, i64 32
  %1126 = bitcast float* %1125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1126, i32 0, i32 1, i32 1)
  %1127 = getelementptr inbounds float, float* %1109, i64 40
  %1128 = bitcast float* %1127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1128, i32 0, i32 1, i32 1)
  %1129 = getelementptr inbounds float, float* %1112, i64 40
  %1130 = bitcast float* %1129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1130, i32 0, i32 1, i32 1)
  %1131 = getelementptr inbounds float, float* %1109, i64 48
  %1132 = bitcast float* %1131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1132, i32 0, i32 1, i32 1)
  %1133 = getelementptr inbounds float, float* %1112, i64 48
  %1134 = bitcast float* %1133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1134, i32 0, i32 1, i32 1)
  %1135 = getelementptr inbounds float, float* %1109, i64 56
  %1136 = bitcast float* %1135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1136, i32 0, i32 1, i32 1)
  %1137 = getelementptr inbounds float, float* %1112, i64 56
  %1138 = bitcast float* %1137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1138, i32 0, i32 1, i32 1)
  %1139 = getelementptr inbounds float, float* %1109, i64 64
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = getelementptr inbounds float, float* %1112, i64 64
  %1142 = bitcast float* %1141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1142, i32 0, i32 1, i32 1)
  %1143 = getelementptr inbounds float, float* %1109, i64 72
  %1144 = bitcast float* %1143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1144, i32 0, i32 1, i32 1)
  %1145 = getelementptr inbounds float, float* %1112, i64 72
  %1146 = bitcast float* %1145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1146, i32 0, i32 1, i32 1)
  %1147 = getelementptr inbounds float, float* %1109, i64 80
  %1148 = bitcast float* %1147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1148, i32 0, i32 1, i32 1)
  %1149 = getelementptr inbounds float, float* %1112, i64 80
  %1150 = bitcast float* %1149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1150, i32 0, i32 1, i32 1)
  %1151 = bitcast float* %1109 to <8 x float>*
  %1152 = load <8 x float>, <8 x float>* %1151, align 1, !tbaa !12
  %1153 = or i64 %1108, 8
  %1154 = getelementptr inbounds float, float* %5, i64 %1153
  %1155 = bitcast float* %1154 to <8 x float>*
  %1156 = load <8 x float>, <8 x float>* %1155, align 1, !tbaa !12
  %1157 = add nuw nsw i64 %1108, 16
  %1158 = getelementptr inbounds float, float* %5, i64 %1157
  %1159 = bitcast float* %1158 to <8 x float>*
  %1160 = load <8 x float>, <8 x float>* %1159, align 1, !tbaa !12
  %1161 = add nuw nsw i64 %1108, 24
  %1162 = getelementptr inbounds float, float* %5, i64 %1161
  %1163 = bitcast float* %1162 to <8 x float>*
  %1164 = load <8 x float>, <8 x float>* %1163, align 1, !tbaa !12
  %1165 = add nuw nsw i64 %1108, 32
  %1166 = getelementptr inbounds float, float* %5, i64 %1165
  %1167 = bitcast float* %1166 to <8 x float>*
  %1168 = load <8 x float>, <8 x float>* %1167, align 1, !tbaa !12
  %1169 = add nuw nsw i64 %1108, 40
  %1170 = getelementptr inbounds float, float* %5, i64 %1169
  %1171 = bitcast float* %1170 to <8 x float>*
  %1172 = load <8 x float>, <8 x float>* %1171, align 1, !tbaa !12
  %1173 = add nuw nsw i64 %1108, 48
  %1174 = getelementptr inbounds float, float* %5, i64 %1173
  %1175 = bitcast float* %1174 to <8 x float>*
  %1176 = load <8 x float>, <8 x float>* %1175, align 1, !tbaa !12
  %1177 = add nuw nsw i64 %1108, 56
  %1178 = getelementptr inbounds float, float* %5, i64 %1177
  %1179 = bitcast float* %1178 to <8 x float>*
  %1180 = load <8 x float>, <8 x float>* %1179, align 1, !tbaa !12
  %1181 = add nuw nsw i64 %1108, 64
  %1182 = getelementptr inbounds float, float* %5, i64 %1181
  %1183 = bitcast float* %1182 to <8 x float>*
  %1184 = load <8 x float>, <8 x float>* %1183, align 1, !tbaa !12
  %1185 = add nuw nsw i64 %1108, 72
  %1186 = getelementptr inbounds float, float* %5, i64 %1185
  %1187 = bitcast float* %1186 to <8 x float>*
  %1188 = load <8 x float>, <8 x float>* %1187, align 1, !tbaa !12
  %1189 = add nsw i64 %1108, %964
  %1190 = getelementptr inbounds float, float* %3, i64 %1189
  %1191 = bitcast float* %1190 to <8 x float>*
  %1192 = load <8 x float>, <8 x float>* %1191, align 1, !tbaa !12
  %1193 = add nsw i64 %1189, 8
  %1194 = getelementptr inbounds float, float* %3, i64 %1193
  %1195 = bitcast float* %1194 to <8 x float>*
  %1196 = load <8 x float>, <8 x float>* %1195, align 1, !tbaa !12
  %1197 = add nsw i64 %1189, 16
  %1198 = getelementptr inbounds float, float* %3, i64 %1197
  %1199 = bitcast float* %1198 to <8 x float>*
  %1200 = load <8 x float>, <8 x float>* %1199, align 1, !tbaa !12
  %1201 = add nsw i64 %1189, 24
  %1202 = getelementptr inbounds float, float* %3, i64 %1201
  %1203 = bitcast float* %1202 to <8 x float>*
  %1204 = load <8 x float>, <8 x float>* %1203, align 1, !tbaa !12
  %1205 = add nsw i64 %1189, 32
  %1206 = getelementptr inbounds float, float* %3, i64 %1205
  %1207 = bitcast float* %1206 to <8 x float>*
  %1208 = load <8 x float>, <8 x float>* %1207, align 1, !tbaa !12
  %1209 = add nsw i64 %1189, 40
  %1210 = getelementptr inbounds float, float* %3, i64 %1209
  %1211 = bitcast float* %1210 to <8 x float>*
  %1212 = load <8 x float>, <8 x float>* %1211, align 1, !tbaa !12
  %1213 = add nsw i64 %1189, 48
  %1214 = getelementptr inbounds float, float* %3, i64 %1213
  %1215 = bitcast float* %1214 to <8 x float>*
  %1216 = load <8 x float>, <8 x float>* %1215, align 1, !tbaa !12
  %1217 = add nsw i64 %1189, 56
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i64 %1189, 64
  %1222 = getelementptr inbounds float, float* %3, i64 %1221
  %1223 = bitcast float* %1222 to <8 x float>*
  %1224 = load <8 x float>, <8 x float>* %1223, align 1, !tbaa !12
  %1225 = add nsw i64 %1189, 72
  %1226 = getelementptr inbounds float, float* %3, i64 %1225
  %1227 = bitcast float* %1226 to <8 x float>*
  %1228 = load <8 x float>, <8 x float>* %1227, align 1, !tbaa !12
  %1229 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1192, <8 x float> %60, <8 x float> %1152) #10
  %1230 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1196, <8 x float> %60, <8 x float> %1156) #10
  %1231 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1200, <8 x float> %60, <8 x float> %1160) #10
  %1232 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1204, <8 x float> %60, <8 x float> %1164) #10
  %1233 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1208, <8 x float> %60, <8 x float> %1168) #10
  %1234 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1212, <8 x float> %60, <8 x float> %1172) #10
  %1235 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1216, <8 x float> %60, <8 x float> %1176) #10
  %1236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %60, <8 x float> %1180) #10
  %1237 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1224, <8 x float> %60, <8 x float> %1184) #10
  %1238 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1228, <8 x float> %60, <8 x float> %1188) #10
  store <8 x float> %1229, <8 x float>* %1151, align 1, !tbaa !12
  store <8 x float> %1230, <8 x float>* %1155, align 1, !tbaa !12
  store <8 x float> %1231, <8 x float>* %1159, align 1, !tbaa !12
  store <8 x float> %1232, <8 x float>* %1163, align 1, !tbaa !12
  store <8 x float> %1233, <8 x float>* %1167, align 1, !tbaa !12
  store <8 x float> %1234, <8 x float>* %1171, align 1, !tbaa !12
  store <8 x float> %1235, <8 x float>* %1175, align 1, !tbaa !12
  store <8 x float> %1236, <8 x float>* %1179, align 1, !tbaa !12
  store <8 x float> %1237, <8 x float>* %1183, align 1, !tbaa !12
  store <8 x float> %1238, <8 x float>* %1187, align 1, !tbaa !12
  %1239 = add nuw nsw i64 %1108, 80
  %1240 = icmp ult i64 %1239, %965
  br i1 %1240, label %1107, label %1100

1241:                                             ; preds = %1247
  br i1 %1102, label %1242, label %1672

1242:                                             ; preds = %1241
  %1243 = trunc i64 %66 to i32
  %1244 = mul nsw i32 %1101, %1243
  %1245 = sext i32 %1244 to i64
  %1246 = zext i32 %1101 to i64
  br label %1398

1247:                                             ; preds = %1103, %1247
  %1248 = phi i64 [ 0, %1103 ], [ %1390, %1247 ]
  %1249 = getelementptr inbounds float, float* %5, i64 %1248
  %1250 = getelementptr inbounds float, float* %1249, i64 8
  %1251 = bitcast float* %1250 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1251, i32 0, i32 1, i32 1)
  %1252 = getelementptr inbounds float, float* %3, i64 %1248
  %1253 = getelementptr inbounds float, float* %1252, i64 8
  %1254 = bitcast float* %1253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1254, i32 0, i32 1, i32 1)
  %1255 = getelementptr inbounds float, float* %1249, i64 16
  %1256 = bitcast float* %1255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1256, i32 0, i32 1, i32 1)
  %1257 = getelementptr inbounds float, float* %1252, i64 16
  %1258 = bitcast float* %1257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1258, i32 0, i32 1, i32 1)
  %1259 = getelementptr inbounds float, float* %1249, i64 24
  %1260 = bitcast float* %1259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1260, i32 0, i32 1, i32 1)
  %1261 = getelementptr inbounds float, float* %1252, i64 24
  %1262 = bitcast float* %1261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1262, i32 0, i32 1, i32 1)
  %1263 = getelementptr inbounds float, float* %1249, i64 32
  %1264 = bitcast float* %1263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1264, i32 0, i32 1, i32 1)
  %1265 = getelementptr inbounds float, float* %1252, i64 32
  %1266 = bitcast float* %1265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1266, i32 0, i32 1, i32 1)
  %1267 = getelementptr inbounds float, float* %1249, i64 40
  %1268 = bitcast float* %1267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1268, i32 0, i32 1, i32 1)
  %1269 = getelementptr inbounds float, float* %1252, i64 40
  %1270 = bitcast float* %1269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1270, i32 0, i32 1, i32 1)
  %1271 = getelementptr inbounds float, float* %1249, i64 48
  %1272 = bitcast float* %1271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1272, i32 0, i32 1, i32 1)
  %1273 = getelementptr inbounds float, float* %1252, i64 48
  %1274 = bitcast float* %1273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1274, i32 0, i32 1, i32 1)
  %1275 = getelementptr inbounds float, float* %1249, i64 56
  %1276 = bitcast float* %1275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1276, i32 0, i32 1, i32 1)
  %1277 = getelementptr inbounds float, float* %1252, i64 56
  %1278 = bitcast float* %1277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1278, i32 0, i32 1, i32 1)
  %1279 = getelementptr inbounds float, float* %1249, i64 64
  %1280 = bitcast float* %1279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1280, i32 0, i32 1, i32 1)
  %1281 = getelementptr inbounds float, float* %1252, i64 64
  %1282 = bitcast float* %1281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1282, i32 0, i32 1, i32 1)
  %1283 = getelementptr inbounds float, float* %1249, i64 72
  %1284 = bitcast float* %1283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1284, i32 0, i32 1, i32 1)
  %1285 = getelementptr inbounds float, float* %1252, i64 72
  %1286 = bitcast float* %1285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1286, i32 0, i32 1, i32 1)
  %1287 = getelementptr inbounds float, float* %1249, i64 80
  %1288 = bitcast float* %1287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1288, i32 0, i32 1, i32 1)
  %1289 = getelementptr inbounds float, float* %1252, i64 80
  %1290 = bitcast float* %1289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1290, i32 0, i32 1, i32 1)
  %1291 = bitcast float* %1249 to <8 x float>*
  %1292 = load <8 x float>, <8 x float>* %1291, align 1, !tbaa !12
  %1293 = or i64 %1248, 8
  %1294 = getelementptr inbounds float, float* %5, i64 %1293
  %1295 = bitcast float* %1294 to <8 x float>*
  %1296 = load <8 x float>, <8 x float>* %1295, align 1, !tbaa !12
  %1297 = add nuw nsw i64 %1248, 16
  %1298 = getelementptr inbounds float, float* %5, i64 %1297
  %1299 = bitcast float* %1298 to <8 x float>*
  %1300 = load <8 x float>, <8 x float>* %1299, align 1, !tbaa !12
  %1301 = add nuw nsw i64 %1248, 24
  %1302 = getelementptr inbounds float, float* %5, i64 %1301
  %1303 = bitcast float* %1302 to <8 x float>*
  %1304 = load <8 x float>, <8 x float>* %1303, align 1, !tbaa !12
  %1305 = add nuw nsw i64 %1248, 32
  %1306 = getelementptr inbounds float, float* %5, i64 %1305
  %1307 = bitcast float* %1306 to <8 x float>*
  %1308 = load <8 x float>, <8 x float>* %1307, align 1, !tbaa !12
  %1309 = add nuw nsw i64 %1248, 40
  %1310 = getelementptr inbounds float, float* %5, i64 %1309
  %1311 = bitcast float* %1310 to <8 x float>*
  %1312 = load <8 x float>, <8 x float>* %1311, align 1, !tbaa !12
  %1313 = add nuw nsw i64 %1248, 48
  %1314 = getelementptr inbounds float, float* %5, i64 %1313
  %1315 = bitcast float* %1314 to <8 x float>*
  %1316 = load <8 x float>, <8 x float>* %1315, align 1, !tbaa !12
  %1317 = add nuw nsw i64 %1248, 56
  %1318 = getelementptr inbounds float, float* %5, i64 %1317
  %1319 = bitcast float* %1318 to <8 x float>*
  %1320 = load <8 x float>, <8 x float>* %1319, align 1, !tbaa !12
  %1321 = add nuw nsw i64 %1248, 64
  %1322 = getelementptr inbounds float, float* %5, i64 %1321
  %1323 = bitcast float* %1322 to <8 x float>*
  %1324 = load <8 x float>, <8 x float>* %1323, align 1, !tbaa !12
  %1325 = add nuw nsw i64 %1248, 72
  %1326 = getelementptr inbounds float, float* %5, i64 %1325
  %1327 = bitcast float* %1326 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = trunc i64 %1248 to i32
  %1330 = add nsw i32 %1106, %1329
  %1331 = sext i32 %1330 to i64
  %1332 = getelementptr inbounds float, float* %3, i64 %1331
  %1333 = bitcast float* %1332 to <8 x float>*
  %1334 = load <8 x float>, <8 x float>* %1333, align 1, !tbaa !12
  %1335 = add nsw i32 %1330, 8
  %1336 = sext i32 %1335 to i64
  %1337 = getelementptr inbounds float, float* %3, i64 %1336
  %1338 = bitcast float* %1337 to <8 x float>*
  %1339 = load <8 x float>, <8 x float>* %1338, align 1, !tbaa !12
  %1340 = add nsw i32 %1330, 16
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds float, float* %3, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nsw i32 %1330, 24
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds float, float* %3, i64 %1346
  %1348 = bitcast float* %1347 to <8 x float>*
  %1349 = load <8 x float>, <8 x float>* %1348, align 1, !tbaa !12
  %1350 = add nsw i32 %1330, 32
  %1351 = sext i32 %1350 to i64
  %1352 = getelementptr inbounds float, float* %3, i64 %1351
  %1353 = bitcast float* %1352 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = add nsw i32 %1330, 40
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds float, float* %3, i64 %1356
  %1358 = bitcast float* %1357 to <8 x float>*
  %1359 = load <8 x float>, <8 x float>* %1358, align 1, !tbaa !12
  %1360 = add nsw i32 %1330, 48
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds float, float* %3, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nsw i32 %1330, 56
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds float, float* %3, i64 %1366
  %1368 = bitcast float* %1367 to <8 x float>*
  %1369 = load <8 x float>, <8 x float>* %1368, align 1, !tbaa !12
  %1370 = add nsw i32 %1330, 64
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds float, float* %3, i64 %1371
  %1373 = bitcast float* %1372 to <8 x float>*
  %1374 = load <8 x float>, <8 x float>* %1373, align 1, !tbaa !12
  %1375 = add nsw i32 %1330, 72
  %1376 = sext i32 %1375 to i64
  %1377 = getelementptr inbounds float, float* %3, i64 %1376
  %1378 = bitcast float* %1377 to <8 x float>*
  %1379 = load <8 x float>, <8 x float>* %1378, align 1, !tbaa !12
  %1380 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1334, <8 x float> %65, <8 x float> %1292) #10
  %1381 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1339, <8 x float> %65, <8 x float> %1296) #10
  %1382 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1344, <8 x float> %65, <8 x float> %1300) #10
  %1383 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1349, <8 x float> %65, <8 x float> %1304) #10
  %1384 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1354, <8 x float> %65, <8 x float> %1308) #10
  %1385 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1359, <8 x float> %65, <8 x float> %1312) #10
  %1386 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1364, <8 x float> %65, <8 x float> %1316) #10
  %1387 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1369, <8 x float> %65, <8 x float> %1320) #10
  %1388 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1374, <8 x float> %65, <8 x float> %1324) #10
  %1389 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1379, <8 x float> %65, <8 x float> %1328) #10
  store <8 x float> %1380, <8 x float>* %1291, align 1, !tbaa !12
  store <8 x float> %1381, <8 x float>* %1295, align 1, !tbaa !12
  store <8 x float> %1382, <8 x float>* %1299, align 1, !tbaa !12
  store <8 x float> %1383, <8 x float>* %1303, align 1, !tbaa !12
  store <8 x float> %1384, <8 x float>* %1307, align 1, !tbaa !12
  store <8 x float> %1385, <8 x float>* %1311, align 1, !tbaa !12
  store <8 x float> %1386, <8 x float>* %1315, align 1, !tbaa !12
  store <8 x float> %1387, <8 x float>* %1319, align 1, !tbaa !12
  store <8 x float> %1388, <8 x float>* %1323, align 1, !tbaa !12
  store <8 x float> %1389, <8 x float>* %1327, align 1, !tbaa !12
  %1390 = add nuw nsw i64 %1248, 80
  %1391 = icmp ult i64 %1390, %1104
  br i1 %1391, label %1247, label %1241

1392:                                             ; preds = %1398
  br i1 %1102, label %1393, label %1672

1393:                                             ; preds = %1392
  %1394 = trunc i64 %71 to i32
  %1395 = mul nsw i32 %1101, %1394
  %1396 = sext i32 %1395 to i64
  %1397 = zext i32 %1101 to i64
  br label %1538

1398:                                             ; preds = %1242, %1398
  %1399 = phi i64 [ 0, %1242 ], [ %1530, %1398 ]
  %1400 = getelementptr inbounds float, float* %5, i64 %1399
  %1401 = getelementptr inbounds float, float* %1400, i64 8
  %1402 = bitcast float* %1401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1402, i32 0, i32 1, i32 1)
  %1403 = getelementptr inbounds float, float* %3, i64 %1399
  %1404 = getelementptr inbounds float, float* %1403, i64 8
  %1405 = bitcast float* %1404 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1405, i32 0, i32 1, i32 1)
  %1406 = getelementptr inbounds float, float* %1400, i64 16
  %1407 = bitcast float* %1406 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1407, i32 0, i32 1, i32 1)
  %1408 = getelementptr inbounds float, float* %1403, i64 16
  %1409 = bitcast float* %1408 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1409, i32 0, i32 1, i32 1)
  %1410 = getelementptr inbounds float, float* %1400, i64 24
  %1411 = bitcast float* %1410 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1411, i32 0, i32 1, i32 1)
  %1412 = getelementptr inbounds float, float* %1403, i64 24
  %1413 = bitcast float* %1412 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1413, i32 0, i32 1, i32 1)
  %1414 = getelementptr inbounds float, float* %1400, i64 32
  %1415 = bitcast float* %1414 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1415, i32 0, i32 1, i32 1)
  %1416 = getelementptr inbounds float, float* %1403, i64 32
  %1417 = bitcast float* %1416 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1417, i32 0, i32 1, i32 1)
  %1418 = getelementptr inbounds float, float* %1400, i64 40
  %1419 = bitcast float* %1418 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1419, i32 0, i32 1, i32 1)
  %1420 = getelementptr inbounds float, float* %1403, i64 40
  %1421 = bitcast float* %1420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1421, i32 0, i32 1, i32 1)
  %1422 = getelementptr inbounds float, float* %1400, i64 48
  %1423 = bitcast float* %1422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1423, i32 0, i32 1, i32 1)
  %1424 = getelementptr inbounds float, float* %1403, i64 48
  %1425 = bitcast float* %1424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1425, i32 0, i32 1, i32 1)
  %1426 = getelementptr inbounds float, float* %1400, i64 56
  %1427 = bitcast float* %1426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1427, i32 0, i32 1, i32 1)
  %1428 = getelementptr inbounds float, float* %1403, i64 56
  %1429 = bitcast float* %1428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1429, i32 0, i32 1, i32 1)
  %1430 = getelementptr inbounds float, float* %1400, i64 64
  %1431 = bitcast float* %1430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1431, i32 0, i32 1, i32 1)
  %1432 = getelementptr inbounds float, float* %1403, i64 64
  %1433 = bitcast float* %1432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1433, i32 0, i32 1, i32 1)
  %1434 = getelementptr inbounds float, float* %1400, i64 72
  %1435 = bitcast float* %1434 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1435, i32 0, i32 1, i32 1)
  %1436 = getelementptr inbounds float, float* %1403, i64 72
  %1437 = bitcast float* %1436 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1437, i32 0, i32 1, i32 1)
  %1438 = getelementptr inbounds float, float* %1400, i64 80
  %1439 = bitcast float* %1438 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1439, i32 0, i32 1, i32 1)
  %1440 = getelementptr inbounds float, float* %1403, i64 80
  %1441 = bitcast float* %1440 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1441, i32 0, i32 1, i32 1)
  %1442 = bitcast float* %1400 to <8 x float>*
  %1443 = load <8 x float>, <8 x float>* %1442, align 1, !tbaa !12
  %1444 = or i64 %1399, 8
  %1445 = getelementptr inbounds float, float* %5, i64 %1444
  %1446 = bitcast float* %1445 to <8 x float>*
  %1447 = load <8 x float>, <8 x float>* %1446, align 1, !tbaa !12
  %1448 = add nuw nsw i64 %1399, 16
  %1449 = getelementptr inbounds float, float* %5, i64 %1448
  %1450 = bitcast float* %1449 to <8 x float>*
  %1451 = load <8 x float>, <8 x float>* %1450, align 1, !tbaa !12
  %1452 = add nuw nsw i64 %1399, 24
  %1453 = getelementptr inbounds float, float* %5, i64 %1452
  %1454 = bitcast float* %1453 to <8 x float>*
  %1455 = load <8 x float>, <8 x float>* %1454, align 1, !tbaa !12
  %1456 = add nuw nsw i64 %1399, 32
  %1457 = getelementptr inbounds float, float* %5, i64 %1456
  %1458 = bitcast float* %1457 to <8 x float>*
  %1459 = load <8 x float>, <8 x float>* %1458, align 1, !tbaa !12
  %1460 = add nuw nsw i64 %1399, 40
  %1461 = getelementptr inbounds float, float* %5, i64 %1460
  %1462 = bitcast float* %1461 to <8 x float>*
  %1463 = load <8 x float>, <8 x float>* %1462, align 1, !tbaa !12
  %1464 = add nuw nsw i64 %1399, 48
  %1465 = getelementptr inbounds float, float* %5, i64 %1464
  %1466 = bitcast float* %1465 to <8 x float>*
  %1467 = load <8 x float>, <8 x float>* %1466, align 1, !tbaa !12
  %1468 = add nuw nsw i64 %1399, 56
  %1469 = getelementptr inbounds float, float* %5, i64 %1468
  %1470 = bitcast float* %1469 to <8 x float>*
  %1471 = load <8 x float>, <8 x float>* %1470, align 1, !tbaa !12
  %1472 = add nuw nsw i64 %1399, 64
  %1473 = getelementptr inbounds float, float* %5, i64 %1472
  %1474 = bitcast float* %1473 to <8 x float>*
  %1475 = load <8 x float>, <8 x float>* %1474, align 1, !tbaa !12
  %1476 = add nuw nsw i64 %1399, 72
  %1477 = getelementptr inbounds float, float* %5, i64 %1476
  %1478 = bitcast float* %1477 to <8 x float>*
  %1479 = load <8 x float>, <8 x float>* %1478, align 1, !tbaa !12
  %1480 = add nsw i64 %1399, %1245
  %1481 = getelementptr inbounds float, float* %3, i64 %1480
  %1482 = bitcast float* %1481 to <8 x float>*
  %1483 = load <8 x float>, <8 x float>* %1482, align 1, !tbaa !12
  %1484 = add nsw i64 %1480, 8
  %1485 = getelementptr inbounds float, float* %3, i64 %1484
  %1486 = bitcast float* %1485 to <8 x float>*
  %1487 = load <8 x float>, <8 x float>* %1486, align 1, !tbaa !12
  %1488 = add nsw i64 %1480, 16
  %1489 = getelementptr inbounds float, float* %3, i64 %1488
  %1490 = bitcast float* %1489 to <8 x float>*
  %1491 = load <8 x float>, <8 x float>* %1490, align 1, !tbaa !12
  %1492 = add nsw i64 %1480, 24
  %1493 = getelementptr inbounds float, float* %3, i64 %1492
  %1494 = bitcast float* %1493 to <8 x float>*
  %1495 = load <8 x float>, <8 x float>* %1494, align 1, !tbaa !12
  %1496 = add nsw i64 %1480, 32
  %1497 = getelementptr inbounds float, float* %3, i64 %1496
  %1498 = bitcast float* %1497 to <8 x float>*
  %1499 = load <8 x float>, <8 x float>* %1498, align 1, !tbaa !12
  %1500 = add nsw i64 %1480, 40
  %1501 = getelementptr inbounds float, float* %3, i64 %1500
  %1502 = bitcast float* %1501 to <8 x float>*
  %1503 = load <8 x float>, <8 x float>* %1502, align 1, !tbaa !12
  %1504 = add nsw i64 %1480, 48
  %1505 = getelementptr inbounds float, float* %3, i64 %1504
  %1506 = bitcast float* %1505 to <8 x float>*
  %1507 = load <8 x float>, <8 x float>* %1506, align 1, !tbaa !12
  %1508 = add nsw i64 %1480, 56
  %1509 = getelementptr inbounds float, float* %3, i64 %1508
  %1510 = bitcast float* %1509 to <8 x float>*
  %1511 = load <8 x float>, <8 x float>* %1510, align 1, !tbaa !12
  %1512 = add nsw i64 %1480, 64
  %1513 = getelementptr inbounds float, float* %3, i64 %1512
  %1514 = bitcast float* %1513 to <8 x float>*
  %1515 = load <8 x float>, <8 x float>* %1514, align 1, !tbaa !12
  %1516 = add nsw i64 %1480, 72
  %1517 = getelementptr inbounds float, float* %3, i64 %1516
  %1518 = bitcast float* %1517 to <8 x float>*
  %1519 = load <8 x float>, <8 x float>* %1518, align 1, !tbaa !12
  %1520 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1483, <8 x float> %70, <8 x float> %1443) #10
  %1521 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1487, <8 x float> %70, <8 x float> %1447) #10
  %1522 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1491, <8 x float> %70, <8 x float> %1451) #10
  %1523 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1495, <8 x float> %70, <8 x float> %1455) #10
  %1524 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1499, <8 x float> %70, <8 x float> %1459) #10
  %1525 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1503, <8 x float> %70, <8 x float> %1463) #10
  %1526 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1507, <8 x float> %70, <8 x float> %1467) #10
  %1527 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1511, <8 x float> %70, <8 x float> %1471) #10
  %1528 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1515, <8 x float> %70, <8 x float> %1475) #10
  %1529 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1519, <8 x float> %70, <8 x float> %1479) #10
  store <8 x float> %1520, <8 x float>* %1442, align 1, !tbaa !12
  store <8 x float> %1521, <8 x float>* %1446, align 1, !tbaa !12
  store <8 x float> %1522, <8 x float>* %1450, align 1, !tbaa !12
  store <8 x float> %1523, <8 x float>* %1454, align 1, !tbaa !12
  store <8 x float> %1524, <8 x float>* %1458, align 1, !tbaa !12
  store <8 x float> %1525, <8 x float>* %1462, align 1, !tbaa !12
  store <8 x float> %1526, <8 x float>* %1466, align 1, !tbaa !12
  store <8 x float> %1527, <8 x float>* %1470, align 1, !tbaa !12
  store <8 x float> %1528, <8 x float>* %1474, align 1, !tbaa !12
  store <8 x float> %1529, <8 x float>* %1478, align 1, !tbaa !12
  %1530 = add nuw nsw i64 %1399, 80
  %1531 = icmp ult i64 %1530, %1246
  br i1 %1531, label %1398, label %1392

1532:                                             ; preds = %1538
  br i1 %1102, label %1533, label %1672

1533:                                             ; preds = %1532
  %1534 = trunc i64 %76 to i32
  %1535 = mul nsw i32 %1101, %1534
  %1536 = sext i32 %1535 to i64
  %1537 = zext i32 %1101 to i64
  br label %1679

1538:                                             ; preds = %1393, %1538
  %1539 = phi i64 [ 0, %1393 ], [ %1670, %1538 ]
  %1540 = getelementptr inbounds float, float* %5, i64 %1539
  %1541 = getelementptr inbounds float, float* %1540, i64 8
  %1542 = bitcast float* %1541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1542, i32 0, i32 1, i32 1)
  %1543 = getelementptr inbounds float, float* %3, i64 %1539
  %1544 = getelementptr inbounds float, float* %1543, i64 8
  %1545 = bitcast float* %1544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1545, i32 0, i32 1, i32 1)
  %1546 = getelementptr inbounds float, float* %1540, i64 16
  %1547 = bitcast float* %1546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1547, i32 0, i32 1, i32 1)
  %1548 = getelementptr inbounds float, float* %1543, i64 16
  %1549 = bitcast float* %1548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1549, i32 0, i32 1, i32 1)
  %1550 = getelementptr inbounds float, float* %1540, i64 24
  %1551 = bitcast float* %1550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1551, i32 0, i32 1, i32 1)
  %1552 = getelementptr inbounds float, float* %1543, i64 24
  %1553 = bitcast float* %1552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1553, i32 0, i32 1, i32 1)
  %1554 = getelementptr inbounds float, float* %1540, i64 32
  %1555 = bitcast float* %1554 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1555, i32 0, i32 1, i32 1)
  %1556 = getelementptr inbounds float, float* %1543, i64 32
  %1557 = bitcast float* %1556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1557, i32 0, i32 1, i32 1)
  %1558 = getelementptr inbounds float, float* %1540, i64 40
  %1559 = bitcast float* %1558 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1559, i32 0, i32 1, i32 1)
  %1560 = getelementptr inbounds float, float* %1543, i64 40
  %1561 = bitcast float* %1560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1561, i32 0, i32 1, i32 1)
  %1562 = getelementptr inbounds float, float* %1540, i64 48
  %1563 = bitcast float* %1562 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1563, i32 0, i32 1, i32 1)
  %1564 = getelementptr inbounds float, float* %1543, i64 48
  %1565 = bitcast float* %1564 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1565, i32 0, i32 1, i32 1)
  %1566 = getelementptr inbounds float, float* %1540, i64 56
  %1567 = bitcast float* %1566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1567, i32 0, i32 1, i32 1)
  %1568 = getelementptr inbounds float, float* %1543, i64 56
  %1569 = bitcast float* %1568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1569, i32 0, i32 1, i32 1)
  %1570 = getelementptr inbounds float, float* %1540, i64 64
  %1571 = bitcast float* %1570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1571, i32 0, i32 1, i32 1)
  %1572 = getelementptr inbounds float, float* %1543, i64 64
  %1573 = bitcast float* %1572 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1573, i32 0, i32 1, i32 1)
  %1574 = getelementptr inbounds float, float* %1540, i64 72
  %1575 = bitcast float* %1574 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1575, i32 0, i32 1, i32 1)
  %1576 = getelementptr inbounds float, float* %1543, i64 72
  %1577 = bitcast float* %1576 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1577, i32 0, i32 1, i32 1)
  %1578 = getelementptr inbounds float, float* %1540, i64 80
  %1579 = bitcast float* %1578 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1579, i32 0, i32 1, i32 1)
  %1580 = getelementptr inbounds float, float* %1543, i64 80
  %1581 = bitcast float* %1580 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1581, i32 0, i32 1, i32 1)
  %1582 = bitcast float* %1540 to <8 x float>*
  %1583 = load <8 x float>, <8 x float>* %1582, align 1, !tbaa !12
  %1584 = or i64 %1539, 8
  %1585 = getelementptr inbounds float, float* %5, i64 %1584
  %1586 = bitcast float* %1585 to <8 x float>*
  %1587 = load <8 x float>, <8 x float>* %1586, align 1, !tbaa !12
  %1588 = add nuw nsw i64 %1539, 16
  %1589 = getelementptr inbounds float, float* %5, i64 %1588
  %1590 = bitcast float* %1589 to <8 x float>*
  %1591 = load <8 x float>, <8 x float>* %1590, align 1, !tbaa !12
  %1592 = add nuw nsw i64 %1539, 24
  %1593 = getelementptr inbounds float, float* %5, i64 %1592
  %1594 = bitcast float* %1593 to <8 x float>*
  %1595 = load <8 x float>, <8 x float>* %1594, align 1, !tbaa !12
  %1596 = add nuw nsw i64 %1539, 32
  %1597 = getelementptr inbounds float, float* %5, i64 %1596
  %1598 = bitcast float* %1597 to <8 x float>*
  %1599 = load <8 x float>, <8 x float>* %1598, align 1, !tbaa !12
  %1600 = add nuw nsw i64 %1539, 40
  %1601 = getelementptr inbounds float, float* %5, i64 %1600
  %1602 = bitcast float* %1601 to <8 x float>*
  %1603 = load <8 x float>, <8 x float>* %1602, align 1, !tbaa !12
  %1604 = add nuw nsw i64 %1539, 48
  %1605 = getelementptr inbounds float, float* %5, i64 %1604
  %1606 = bitcast float* %1605 to <8 x float>*
  %1607 = load <8 x float>, <8 x float>* %1606, align 1, !tbaa !12
  %1608 = add nuw nsw i64 %1539, 56
  %1609 = getelementptr inbounds float, float* %5, i64 %1608
  %1610 = bitcast float* %1609 to <8 x float>*
  %1611 = load <8 x float>, <8 x float>* %1610, align 1, !tbaa !12
  %1612 = add nuw nsw i64 %1539, 64
  %1613 = getelementptr inbounds float, float* %5, i64 %1612
  %1614 = bitcast float* %1613 to <8 x float>*
  %1615 = load <8 x float>, <8 x float>* %1614, align 1, !tbaa !12
  %1616 = add nuw nsw i64 %1539, 72
  %1617 = getelementptr inbounds float, float* %5, i64 %1616
  %1618 = bitcast float* %1617 to <8 x float>*
  %1619 = load <8 x float>, <8 x float>* %1618, align 1, !tbaa !12
  %1620 = add nsw i64 %1539, %1396
  %1621 = getelementptr inbounds float, float* %3, i64 %1620
  %1622 = bitcast float* %1621 to <8 x float>*
  %1623 = load <8 x float>, <8 x float>* %1622, align 1, !tbaa !12
  %1624 = add nsw i64 %1620, 8
  %1625 = getelementptr inbounds float, float* %3, i64 %1624
  %1626 = bitcast float* %1625 to <8 x float>*
  %1627 = load <8 x float>, <8 x float>* %1626, align 1, !tbaa !12
  %1628 = add nsw i64 %1620, 16
  %1629 = getelementptr inbounds float, float* %3, i64 %1628
  %1630 = bitcast float* %1629 to <8 x float>*
  %1631 = load <8 x float>, <8 x float>* %1630, align 1, !tbaa !12
  %1632 = add nsw i64 %1620, 24
  %1633 = getelementptr inbounds float, float* %3, i64 %1632
  %1634 = bitcast float* %1633 to <8 x float>*
  %1635 = load <8 x float>, <8 x float>* %1634, align 1, !tbaa !12
  %1636 = add nsw i64 %1620, 32
  %1637 = getelementptr inbounds float, float* %3, i64 %1636
  %1638 = bitcast float* %1637 to <8 x float>*
  %1639 = load <8 x float>, <8 x float>* %1638, align 1, !tbaa !12
  %1640 = add nsw i64 %1620, 40
  %1641 = getelementptr inbounds float, float* %3, i64 %1640
  %1642 = bitcast float* %1641 to <8 x float>*
  %1643 = load <8 x float>, <8 x float>* %1642, align 1, !tbaa !12
  %1644 = add nsw i64 %1620, 48
  %1645 = getelementptr inbounds float, float* %3, i64 %1644
  %1646 = bitcast float* %1645 to <8 x float>*
  %1647 = load <8 x float>, <8 x float>* %1646, align 1, !tbaa !12
  %1648 = add nsw i64 %1620, 56
  %1649 = getelementptr inbounds float, float* %3, i64 %1648
  %1650 = bitcast float* %1649 to <8 x float>*
  %1651 = load <8 x float>, <8 x float>* %1650, align 1, !tbaa !12
  %1652 = add nsw i64 %1620, 64
  %1653 = getelementptr inbounds float, float* %3, i64 %1652
  %1654 = bitcast float* %1653 to <8 x float>*
  %1655 = load <8 x float>, <8 x float>* %1654, align 1, !tbaa !12
  %1656 = add nsw i64 %1620, 72
  %1657 = getelementptr inbounds float, float* %3, i64 %1656
  %1658 = bitcast float* %1657 to <8 x float>*
  %1659 = load <8 x float>, <8 x float>* %1658, align 1, !tbaa !12
  %1660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1623, <8 x float> %75, <8 x float> %1583) #10
  %1661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1627, <8 x float> %75, <8 x float> %1587) #10
  %1662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1631, <8 x float> %75, <8 x float> %1591) #10
  %1663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1635, <8 x float> %75, <8 x float> %1595) #10
  %1664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1639, <8 x float> %75, <8 x float> %1599) #10
  %1665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1643, <8 x float> %75, <8 x float> %1603) #10
  %1666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1647, <8 x float> %75, <8 x float> %1607) #10
  %1667 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1651, <8 x float> %75, <8 x float> %1611) #10
  %1668 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1655, <8 x float> %75, <8 x float> %1615) #10
  %1669 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1659, <8 x float> %75, <8 x float> %1619) #10
  store <8 x float> %1660, <8 x float>* %1582, align 1, !tbaa !12
  store <8 x float> %1661, <8 x float>* %1586, align 1, !tbaa !12
  store <8 x float> %1662, <8 x float>* %1590, align 1, !tbaa !12
  store <8 x float> %1663, <8 x float>* %1594, align 1, !tbaa !12
  store <8 x float> %1664, <8 x float>* %1598, align 1, !tbaa !12
  store <8 x float> %1665, <8 x float>* %1602, align 1, !tbaa !12
  store <8 x float> %1666, <8 x float>* %1606, align 1, !tbaa !12
  store <8 x float> %1667, <8 x float>* %1610, align 1, !tbaa !12
  store <8 x float> %1668, <8 x float>* %1614, align 1, !tbaa !12
  store <8 x float> %1669, <8 x float>* %1618, align 1, !tbaa !12
  %1670 = add nuw nsw i64 %1539, 80
  %1671 = icmp ult i64 %1670, %1397
  br i1 %1671, label %1538, label %1532

1672:                                             ; preds = %1679, %1241, %1392, %1532
  %1673 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1674 = icmp sgt i32 %1673, 0
  br i1 %1674, label %1675, label %1964

1675:                                             ; preds = %1672
  %1676 = zext i32 %1673 to i64
  %1677 = trunc i64 %81 to i32
  %1678 = mul nsw i32 %1673, %1677
  br label %1819

1679:                                             ; preds = %1533, %1679
  %1680 = phi i64 [ 0, %1533 ], [ %1811, %1679 ]
  %1681 = getelementptr inbounds float, float* %5, i64 %1680
  %1682 = getelementptr inbounds float, float* %1681, i64 8
  %1683 = bitcast float* %1682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1683, i32 0, i32 1, i32 1)
  %1684 = getelementptr inbounds float, float* %3, i64 %1680
  %1685 = getelementptr inbounds float, float* %1684, i64 8
  %1686 = bitcast float* %1685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1686, i32 0, i32 1, i32 1)
  %1687 = getelementptr inbounds float, float* %1681, i64 16
  %1688 = bitcast float* %1687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1688, i32 0, i32 1, i32 1)
  %1689 = getelementptr inbounds float, float* %1684, i64 16
  %1690 = bitcast float* %1689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1690, i32 0, i32 1, i32 1)
  %1691 = getelementptr inbounds float, float* %1681, i64 24
  %1692 = bitcast float* %1691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1692, i32 0, i32 1, i32 1)
  %1693 = getelementptr inbounds float, float* %1684, i64 24
  %1694 = bitcast float* %1693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1694, i32 0, i32 1, i32 1)
  %1695 = getelementptr inbounds float, float* %1681, i64 32
  %1696 = bitcast float* %1695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1696, i32 0, i32 1, i32 1)
  %1697 = getelementptr inbounds float, float* %1684, i64 32
  %1698 = bitcast float* %1697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1698, i32 0, i32 1, i32 1)
  %1699 = getelementptr inbounds float, float* %1681, i64 40
  %1700 = bitcast float* %1699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1700, i32 0, i32 1, i32 1)
  %1701 = getelementptr inbounds float, float* %1684, i64 40
  %1702 = bitcast float* %1701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1702, i32 0, i32 1, i32 1)
  %1703 = getelementptr inbounds float, float* %1681, i64 48
  %1704 = bitcast float* %1703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1704, i32 0, i32 1, i32 1)
  %1705 = getelementptr inbounds float, float* %1684, i64 48
  %1706 = bitcast float* %1705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1706, i32 0, i32 1, i32 1)
  %1707 = getelementptr inbounds float, float* %1681, i64 56
  %1708 = bitcast float* %1707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1708, i32 0, i32 1, i32 1)
  %1709 = getelementptr inbounds float, float* %1684, i64 56
  %1710 = bitcast float* %1709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1710, i32 0, i32 1, i32 1)
  %1711 = getelementptr inbounds float, float* %1681, i64 64
  %1712 = bitcast float* %1711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1712, i32 0, i32 1, i32 1)
  %1713 = getelementptr inbounds float, float* %1684, i64 64
  %1714 = bitcast float* %1713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1714, i32 0, i32 1, i32 1)
  %1715 = getelementptr inbounds float, float* %1681, i64 72
  %1716 = bitcast float* %1715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1716, i32 0, i32 1, i32 1)
  %1717 = getelementptr inbounds float, float* %1684, i64 72
  %1718 = bitcast float* %1717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1718, i32 0, i32 1, i32 1)
  %1719 = getelementptr inbounds float, float* %1681, i64 80
  %1720 = bitcast float* %1719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1720, i32 0, i32 1, i32 1)
  %1721 = getelementptr inbounds float, float* %1684, i64 80
  %1722 = bitcast float* %1721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1722, i32 0, i32 1, i32 1)
  %1723 = bitcast float* %1681 to <8 x float>*
  %1724 = load <8 x float>, <8 x float>* %1723, align 1, !tbaa !12
  %1725 = or i64 %1680, 8
  %1726 = getelementptr inbounds float, float* %5, i64 %1725
  %1727 = bitcast float* %1726 to <8 x float>*
  %1728 = load <8 x float>, <8 x float>* %1727, align 1, !tbaa !12
  %1729 = add nuw nsw i64 %1680, 16
  %1730 = getelementptr inbounds float, float* %5, i64 %1729
  %1731 = bitcast float* %1730 to <8 x float>*
  %1732 = load <8 x float>, <8 x float>* %1731, align 1, !tbaa !12
  %1733 = add nuw nsw i64 %1680, 24
  %1734 = getelementptr inbounds float, float* %5, i64 %1733
  %1735 = bitcast float* %1734 to <8 x float>*
  %1736 = load <8 x float>, <8 x float>* %1735, align 1, !tbaa !12
  %1737 = add nuw nsw i64 %1680, 32
  %1738 = getelementptr inbounds float, float* %5, i64 %1737
  %1739 = bitcast float* %1738 to <8 x float>*
  %1740 = load <8 x float>, <8 x float>* %1739, align 1, !tbaa !12
  %1741 = add nuw nsw i64 %1680, 40
  %1742 = getelementptr inbounds float, float* %5, i64 %1741
  %1743 = bitcast float* %1742 to <8 x float>*
  %1744 = load <8 x float>, <8 x float>* %1743, align 1, !tbaa !12
  %1745 = add nuw nsw i64 %1680, 48
  %1746 = getelementptr inbounds float, float* %5, i64 %1745
  %1747 = bitcast float* %1746 to <8 x float>*
  %1748 = load <8 x float>, <8 x float>* %1747, align 1, !tbaa !12
  %1749 = add nuw nsw i64 %1680, 56
  %1750 = getelementptr inbounds float, float* %5, i64 %1749
  %1751 = bitcast float* %1750 to <8 x float>*
  %1752 = load <8 x float>, <8 x float>* %1751, align 1, !tbaa !12
  %1753 = add nuw nsw i64 %1680, 64
  %1754 = getelementptr inbounds float, float* %5, i64 %1753
  %1755 = bitcast float* %1754 to <8 x float>*
  %1756 = load <8 x float>, <8 x float>* %1755, align 1, !tbaa !12
  %1757 = add nuw nsw i64 %1680, 72
  %1758 = getelementptr inbounds float, float* %5, i64 %1757
  %1759 = bitcast float* %1758 to <8 x float>*
  %1760 = load <8 x float>, <8 x float>* %1759, align 1, !tbaa !12
  %1761 = add nsw i64 %1680, %1536
  %1762 = getelementptr inbounds float, float* %3, i64 %1761
  %1763 = bitcast float* %1762 to <8 x float>*
  %1764 = load <8 x float>, <8 x float>* %1763, align 1, !tbaa !12
  %1765 = add nsw i64 %1761, 8
  %1766 = getelementptr inbounds float, float* %3, i64 %1765
  %1767 = bitcast float* %1766 to <8 x float>*
  %1768 = load <8 x float>, <8 x float>* %1767, align 1, !tbaa !12
  %1769 = add nsw i64 %1761, 16
  %1770 = getelementptr inbounds float, float* %3, i64 %1769
  %1771 = bitcast float* %1770 to <8 x float>*
  %1772 = load <8 x float>, <8 x float>* %1771, align 1, !tbaa !12
  %1773 = add nsw i64 %1761, 24
  %1774 = getelementptr inbounds float, float* %3, i64 %1773
  %1775 = bitcast float* %1774 to <8 x float>*
  %1776 = load <8 x float>, <8 x float>* %1775, align 1, !tbaa !12
  %1777 = add nsw i64 %1761, 32
  %1778 = getelementptr inbounds float, float* %3, i64 %1777
  %1779 = bitcast float* %1778 to <8 x float>*
  %1780 = load <8 x float>, <8 x float>* %1779, align 1, !tbaa !12
  %1781 = add nsw i64 %1761, 40
  %1782 = getelementptr inbounds float, float* %3, i64 %1781
  %1783 = bitcast float* %1782 to <8 x float>*
  %1784 = load <8 x float>, <8 x float>* %1783, align 1, !tbaa !12
  %1785 = add nsw i64 %1761, 48
  %1786 = getelementptr inbounds float, float* %3, i64 %1785
  %1787 = bitcast float* %1786 to <8 x float>*
  %1788 = load <8 x float>, <8 x float>* %1787, align 1, !tbaa !12
  %1789 = add nsw i64 %1761, 56
  %1790 = getelementptr inbounds float, float* %3, i64 %1789
  %1791 = bitcast float* %1790 to <8 x float>*
  %1792 = load <8 x float>, <8 x float>* %1791, align 1, !tbaa !12
  %1793 = add nsw i64 %1761, 64
  %1794 = getelementptr inbounds float, float* %3, i64 %1793
  %1795 = bitcast float* %1794 to <8 x float>*
  %1796 = load <8 x float>, <8 x float>* %1795, align 1, !tbaa !12
  %1797 = add nsw i64 %1761, 72
  %1798 = getelementptr inbounds float, float* %3, i64 %1797
  %1799 = bitcast float* %1798 to <8 x float>*
  %1800 = load <8 x float>, <8 x float>* %1799, align 1, !tbaa !12
  %1801 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1764, <8 x float> %80, <8 x float> %1724) #10
  %1802 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1768, <8 x float> %80, <8 x float> %1728) #10
  %1803 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1772, <8 x float> %80, <8 x float> %1732) #10
  %1804 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1776, <8 x float> %80, <8 x float> %1736) #10
  %1805 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1780, <8 x float> %80, <8 x float> %1740) #10
  %1806 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1784, <8 x float> %80, <8 x float> %1744) #10
  %1807 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1788, <8 x float> %80, <8 x float> %1748) #10
  %1808 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1792, <8 x float> %80, <8 x float> %1752) #10
  %1809 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1796, <8 x float> %80, <8 x float> %1756) #10
  %1810 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1800, <8 x float> %80, <8 x float> %1760) #10
  store <8 x float> %1801, <8 x float>* %1723, align 1, !tbaa !12
  store <8 x float> %1802, <8 x float>* %1727, align 1, !tbaa !12
  store <8 x float> %1803, <8 x float>* %1731, align 1, !tbaa !12
  store <8 x float> %1804, <8 x float>* %1735, align 1, !tbaa !12
  store <8 x float> %1805, <8 x float>* %1739, align 1, !tbaa !12
  store <8 x float> %1806, <8 x float>* %1743, align 1, !tbaa !12
  store <8 x float> %1807, <8 x float>* %1747, align 1, !tbaa !12
  store <8 x float> %1808, <8 x float>* %1751, align 1, !tbaa !12
  store <8 x float> %1809, <8 x float>* %1755, align 1, !tbaa !12
  store <8 x float> %1810, <8 x float>* %1759, align 1, !tbaa !12
  %1811 = add nuw nsw i64 %1680, 80
  %1812 = icmp ult i64 %1811, %1537
  br i1 %1812, label %1679, label %1672

1813:                                             ; preds = %1819
  br i1 %1674, label %1814, label %1964

1814:                                             ; preds = %1813
  %1815 = trunc i64 %86 to i32
  %1816 = mul nsw i32 %1673, %1815
  %1817 = sext i32 %1816 to i64
  %1818 = zext i32 %1673 to i64
  br label %1969

1819:                                             ; preds = %1675, %1819
  %1820 = phi i64 [ 0, %1675 ], [ %1962, %1819 ]
  %1821 = getelementptr inbounds float, float* %5, i64 %1820
  %1822 = getelementptr inbounds float, float* %1821, i64 8
  %1823 = bitcast float* %1822 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1823, i32 0, i32 1, i32 1)
  %1824 = getelementptr inbounds float, float* %3, i64 %1820
  %1825 = getelementptr inbounds float, float* %1824, i64 8
  %1826 = bitcast float* %1825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1826, i32 0, i32 1, i32 1)
  %1827 = getelementptr inbounds float, float* %1821, i64 16
  %1828 = bitcast float* %1827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1828, i32 0, i32 1, i32 1)
  %1829 = getelementptr inbounds float, float* %1824, i64 16
  %1830 = bitcast float* %1829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1830, i32 0, i32 1, i32 1)
  %1831 = getelementptr inbounds float, float* %1821, i64 24
  %1832 = bitcast float* %1831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1832, i32 0, i32 1, i32 1)
  %1833 = getelementptr inbounds float, float* %1824, i64 24
  %1834 = bitcast float* %1833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1834, i32 0, i32 1, i32 1)
  %1835 = getelementptr inbounds float, float* %1821, i64 32
  %1836 = bitcast float* %1835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1836, i32 0, i32 1, i32 1)
  %1837 = getelementptr inbounds float, float* %1824, i64 32
  %1838 = bitcast float* %1837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1838, i32 0, i32 1, i32 1)
  %1839 = getelementptr inbounds float, float* %1821, i64 40
  %1840 = bitcast float* %1839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1840, i32 0, i32 1, i32 1)
  %1841 = getelementptr inbounds float, float* %1824, i64 40
  %1842 = bitcast float* %1841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1842, i32 0, i32 1, i32 1)
  %1843 = getelementptr inbounds float, float* %1821, i64 48
  %1844 = bitcast float* %1843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1844, i32 0, i32 1, i32 1)
  %1845 = getelementptr inbounds float, float* %1824, i64 48
  %1846 = bitcast float* %1845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1846, i32 0, i32 1, i32 1)
  %1847 = getelementptr inbounds float, float* %1821, i64 56
  %1848 = bitcast float* %1847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1848, i32 0, i32 1, i32 1)
  %1849 = getelementptr inbounds float, float* %1824, i64 56
  %1850 = bitcast float* %1849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1850, i32 0, i32 1, i32 1)
  %1851 = getelementptr inbounds float, float* %1821, i64 64
  %1852 = bitcast float* %1851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1852, i32 0, i32 1, i32 1)
  %1853 = getelementptr inbounds float, float* %1824, i64 64
  %1854 = bitcast float* %1853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1854, i32 0, i32 1, i32 1)
  %1855 = getelementptr inbounds float, float* %1821, i64 72
  %1856 = bitcast float* %1855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1856, i32 0, i32 1, i32 1)
  %1857 = getelementptr inbounds float, float* %1824, i64 72
  %1858 = bitcast float* %1857 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1858, i32 0, i32 1, i32 1)
  %1859 = getelementptr inbounds float, float* %1821, i64 80
  %1860 = bitcast float* %1859 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1860, i32 0, i32 1, i32 1)
  %1861 = getelementptr inbounds float, float* %1824, i64 80
  %1862 = bitcast float* %1861 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1862, i32 0, i32 1, i32 1)
  %1863 = bitcast float* %1821 to <8 x float>*
  %1864 = load <8 x float>, <8 x float>* %1863, align 1, !tbaa !12
  %1865 = or i64 %1820, 8
  %1866 = getelementptr inbounds float, float* %5, i64 %1865
  %1867 = bitcast float* %1866 to <8 x float>*
  %1868 = load <8 x float>, <8 x float>* %1867, align 1, !tbaa !12
  %1869 = add nuw nsw i64 %1820, 16
  %1870 = getelementptr inbounds float, float* %5, i64 %1869
  %1871 = bitcast float* %1870 to <8 x float>*
  %1872 = load <8 x float>, <8 x float>* %1871, align 1, !tbaa !12
  %1873 = add nuw nsw i64 %1820, 24
  %1874 = getelementptr inbounds float, float* %5, i64 %1873
  %1875 = bitcast float* %1874 to <8 x float>*
  %1876 = load <8 x float>, <8 x float>* %1875, align 1, !tbaa !12
  %1877 = add nuw nsw i64 %1820, 32
  %1878 = getelementptr inbounds float, float* %5, i64 %1877
  %1879 = bitcast float* %1878 to <8 x float>*
  %1880 = load <8 x float>, <8 x float>* %1879, align 1, !tbaa !12
  %1881 = add nuw nsw i64 %1820, 40
  %1882 = getelementptr inbounds float, float* %5, i64 %1881
  %1883 = bitcast float* %1882 to <8 x float>*
  %1884 = load <8 x float>, <8 x float>* %1883, align 1, !tbaa !12
  %1885 = add nuw nsw i64 %1820, 48
  %1886 = getelementptr inbounds float, float* %5, i64 %1885
  %1887 = bitcast float* %1886 to <8 x float>*
  %1888 = load <8 x float>, <8 x float>* %1887, align 1, !tbaa !12
  %1889 = add nuw nsw i64 %1820, 56
  %1890 = getelementptr inbounds float, float* %5, i64 %1889
  %1891 = bitcast float* %1890 to <8 x float>*
  %1892 = load <8 x float>, <8 x float>* %1891, align 1, !tbaa !12
  %1893 = add nuw nsw i64 %1820, 64
  %1894 = getelementptr inbounds float, float* %5, i64 %1893
  %1895 = bitcast float* %1894 to <8 x float>*
  %1896 = load <8 x float>, <8 x float>* %1895, align 1, !tbaa !12
  %1897 = add nuw nsw i64 %1820, 72
  %1898 = getelementptr inbounds float, float* %5, i64 %1897
  %1899 = bitcast float* %1898 to <8 x float>*
  %1900 = load <8 x float>, <8 x float>* %1899, align 1, !tbaa !12
  %1901 = trunc i64 %1820 to i32
  %1902 = add nsw i32 %1678, %1901
  %1903 = sext i32 %1902 to i64
  %1904 = getelementptr inbounds float, float* %3, i64 %1903
  %1905 = bitcast float* %1904 to <8 x float>*
  %1906 = load <8 x float>, <8 x float>* %1905, align 1, !tbaa !12
  %1907 = add nsw i32 %1902, 8
  %1908 = sext i32 %1907 to i64
  %1909 = getelementptr inbounds float, float* %3, i64 %1908
  %1910 = bitcast float* %1909 to <8 x float>*
  %1911 = load <8 x float>, <8 x float>* %1910, align 1, !tbaa !12
  %1912 = add nsw i32 %1902, 16
  %1913 = sext i32 %1912 to i64
  %1914 = getelementptr inbounds float, float* %3, i64 %1913
  %1915 = bitcast float* %1914 to <8 x float>*
  %1916 = load <8 x float>, <8 x float>* %1915, align 1, !tbaa !12
  %1917 = add nsw i32 %1902, 24
  %1918 = sext i32 %1917 to i64
  %1919 = getelementptr inbounds float, float* %3, i64 %1918
  %1920 = bitcast float* %1919 to <8 x float>*
  %1921 = load <8 x float>, <8 x float>* %1920, align 1, !tbaa !12
  %1922 = add nsw i32 %1902, 32
  %1923 = sext i32 %1922 to i64
  %1924 = getelementptr inbounds float, float* %3, i64 %1923
  %1925 = bitcast float* %1924 to <8 x float>*
  %1926 = load <8 x float>, <8 x float>* %1925, align 1, !tbaa !12
  %1927 = add nsw i32 %1902, 40
  %1928 = sext i32 %1927 to i64
  %1929 = getelementptr inbounds float, float* %3, i64 %1928
  %1930 = bitcast float* %1929 to <8 x float>*
  %1931 = load <8 x float>, <8 x float>* %1930, align 1, !tbaa !12
  %1932 = add nsw i32 %1902, 48
  %1933 = sext i32 %1932 to i64
  %1934 = getelementptr inbounds float, float* %3, i64 %1933
  %1935 = bitcast float* %1934 to <8 x float>*
  %1936 = load <8 x float>, <8 x float>* %1935, align 1, !tbaa !12
  %1937 = add nsw i32 %1902, 56
  %1938 = sext i32 %1937 to i64
  %1939 = getelementptr inbounds float, float* %3, i64 %1938
  %1940 = bitcast float* %1939 to <8 x float>*
  %1941 = load <8 x float>, <8 x float>* %1940, align 1, !tbaa !12
  %1942 = add nsw i32 %1902, 64
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds float, float* %3, i64 %1943
  %1945 = bitcast float* %1944 to <8 x float>*
  %1946 = load <8 x float>, <8 x float>* %1945, align 1, !tbaa !12
  %1947 = add nsw i32 %1902, 72
  %1948 = sext i32 %1947 to i64
  %1949 = getelementptr inbounds float, float* %3, i64 %1948
  %1950 = bitcast float* %1949 to <8 x float>*
  %1951 = load <8 x float>, <8 x float>* %1950, align 1, !tbaa !12
  %1952 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1906, <8 x float> %85, <8 x float> %1864) #10
  %1953 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1911, <8 x float> %85, <8 x float> %1868) #10
  %1954 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1916, <8 x float> %85, <8 x float> %1872) #10
  %1955 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1921, <8 x float> %85, <8 x float> %1876) #10
  %1956 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1926, <8 x float> %85, <8 x float> %1880) #10
  %1957 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1931, <8 x float> %85, <8 x float> %1884) #10
  %1958 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1936, <8 x float> %85, <8 x float> %1888) #10
  %1959 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1941, <8 x float> %85, <8 x float> %1892) #10
  %1960 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1946, <8 x float> %85, <8 x float> %1896) #10
  %1961 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1951, <8 x float> %85, <8 x float> %1900) #10
  store <8 x float> %1952, <8 x float>* %1863, align 1, !tbaa !12
  store <8 x float> %1953, <8 x float>* %1867, align 1, !tbaa !12
  store <8 x float> %1954, <8 x float>* %1871, align 1, !tbaa !12
  store <8 x float> %1955, <8 x float>* %1875, align 1, !tbaa !12
  store <8 x float> %1956, <8 x float>* %1879, align 1, !tbaa !12
  store <8 x float> %1957, <8 x float>* %1883, align 1, !tbaa !12
  store <8 x float> %1958, <8 x float>* %1887, align 1, !tbaa !12
  store <8 x float> %1959, <8 x float>* %1891, align 1, !tbaa !12
  store <8 x float> %1960, <8 x float>* %1895, align 1, !tbaa !12
  store <8 x float> %1961, <8 x float>* %1899, align 1, !tbaa !12
  %1962 = add nuw nsw i64 %1820, 80
  %1963 = icmp ult i64 %1962, %1676
  br i1 %1963, label %1819, label %1813

1964:                                             ; preds = %1969, %528, %20, %1100, %1672, %1813
  %1965 = add nuw nsw i64 %21, 14
  %1966 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1967 = sext i32 %1966 to i64
  %1968 = icmp slt i64 %1965, %1967
  br i1 %1968, label %20, label %8

1969:                                             ; preds = %1814, %1969
  %1970 = phi i64 [ 0, %1814 ], [ %2101, %1969 ]
  %1971 = getelementptr inbounds float, float* %5, i64 %1970
  %1972 = getelementptr inbounds float, float* %1971, i64 8
  %1973 = bitcast float* %1972 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1973, i32 0, i32 1, i32 1)
  %1974 = getelementptr inbounds float, float* %3, i64 %1970
  %1975 = getelementptr inbounds float, float* %1974, i64 8
  %1976 = bitcast float* %1975 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1976, i32 0, i32 1, i32 1)
  %1977 = getelementptr inbounds float, float* %1971, i64 16
  %1978 = bitcast float* %1977 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1978, i32 0, i32 1, i32 1)
  %1979 = getelementptr inbounds float, float* %1974, i64 16
  %1980 = bitcast float* %1979 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1980, i32 0, i32 1, i32 1)
  %1981 = getelementptr inbounds float, float* %1971, i64 24
  %1982 = bitcast float* %1981 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1982, i32 0, i32 1, i32 1)
  %1983 = getelementptr inbounds float, float* %1974, i64 24
  %1984 = bitcast float* %1983 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1984, i32 0, i32 1, i32 1)
  %1985 = getelementptr inbounds float, float* %1971, i64 32
  %1986 = bitcast float* %1985 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1986, i32 0, i32 1, i32 1)
  %1987 = getelementptr inbounds float, float* %1974, i64 32
  %1988 = bitcast float* %1987 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1988, i32 0, i32 1, i32 1)
  %1989 = getelementptr inbounds float, float* %1971, i64 40
  %1990 = bitcast float* %1989 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1990, i32 0, i32 1, i32 1)
  %1991 = getelementptr inbounds float, float* %1974, i64 40
  %1992 = bitcast float* %1991 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1992, i32 0, i32 1, i32 1)
  %1993 = getelementptr inbounds float, float* %1971, i64 48
  %1994 = bitcast float* %1993 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1994, i32 0, i32 1, i32 1)
  %1995 = getelementptr inbounds float, float* %1974, i64 48
  %1996 = bitcast float* %1995 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1996, i32 0, i32 1, i32 1)
  %1997 = getelementptr inbounds float, float* %1971, i64 56
  %1998 = bitcast float* %1997 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1998, i32 0, i32 1, i32 1)
  %1999 = getelementptr inbounds float, float* %1974, i64 56
  %2000 = bitcast float* %1999 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2000, i32 0, i32 1, i32 1)
  %2001 = getelementptr inbounds float, float* %1971, i64 64
  %2002 = bitcast float* %2001 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2002, i32 0, i32 1, i32 1)
  %2003 = getelementptr inbounds float, float* %1974, i64 64
  %2004 = bitcast float* %2003 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2004, i32 0, i32 1, i32 1)
  %2005 = getelementptr inbounds float, float* %1971, i64 72
  %2006 = bitcast float* %2005 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2006, i32 0, i32 1, i32 1)
  %2007 = getelementptr inbounds float, float* %1974, i64 72
  %2008 = bitcast float* %2007 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2008, i32 0, i32 1, i32 1)
  %2009 = getelementptr inbounds float, float* %1971, i64 80
  %2010 = bitcast float* %2009 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2010, i32 0, i32 1, i32 1)
  %2011 = getelementptr inbounds float, float* %1974, i64 80
  %2012 = bitcast float* %2011 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2012, i32 0, i32 1, i32 1)
  %2013 = bitcast float* %1971 to <8 x float>*
  %2014 = load <8 x float>, <8 x float>* %2013, align 1, !tbaa !12
  %2015 = or i64 %1970, 8
  %2016 = getelementptr inbounds float, float* %5, i64 %2015
  %2017 = bitcast float* %2016 to <8 x float>*
  %2018 = load <8 x float>, <8 x float>* %2017, align 1, !tbaa !12
  %2019 = add nuw nsw i64 %1970, 16
  %2020 = getelementptr inbounds float, float* %5, i64 %2019
  %2021 = bitcast float* %2020 to <8 x float>*
  %2022 = load <8 x float>, <8 x float>* %2021, align 1, !tbaa !12
  %2023 = add nuw nsw i64 %1970, 24
  %2024 = getelementptr inbounds float, float* %5, i64 %2023
  %2025 = bitcast float* %2024 to <8 x float>*
  %2026 = load <8 x float>, <8 x float>* %2025, align 1, !tbaa !12
  %2027 = add nuw nsw i64 %1970, 32
  %2028 = getelementptr inbounds float, float* %5, i64 %2027
  %2029 = bitcast float* %2028 to <8 x float>*
  %2030 = load <8 x float>, <8 x float>* %2029, align 1, !tbaa !12
  %2031 = add nuw nsw i64 %1970, 40
  %2032 = getelementptr inbounds float, float* %5, i64 %2031
  %2033 = bitcast float* %2032 to <8 x float>*
  %2034 = load <8 x float>, <8 x float>* %2033, align 1, !tbaa !12
  %2035 = add nuw nsw i64 %1970, 48
  %2036 = getelementptr inbounds float, float* %5, i64 %2035
  %2037 = bitcast float* %2036 to <8 x float>*
  %2038 = load <8 x float>, <8 x float>* %2037, align 1, !tbaa !12
  %2039 = add nuw nsw i64 %1970, 56
  %2040 = getelementptr inbounds float, float* %5, i64 %2039
  %2041 = bitcast float* %2040 to <8 x float>*
  %2042 = load <8 x float>, <8 x float>* %2041, align 1, !tbaa !12
  %2043 = add nuw nsw i64 %1970, 64
  %2044 = getelementptr inbounds float, float* %5, i64 %2043
  %2045 = bitcast float* %2044 to <8 x float>*
  %2046 = load <8 x float>, <8 x float>* %2045, align 1, !tbaa !12
  %2047 = add nuw nsw i64 %1970, 72
  %2048 = getelementptr inbounds float, float* %5, i64 %2047
  %2049 = bitcast float* %2048 to <8 x float>*
  %2050 = load <8 x float>, <8 x float>* %2049, align 1, !tbaa !12
  %2051 = add nsw i64 %1970, %1817
  %2052 = getelementptr inbounds float, float* %3, i64 %2051
  %2053 = bitcast float* %2052 to <8 x float>*
  %2054 = load <8 x float>, <8 x float>* %2053, align 1, !tbaa !12
  %2055 = add nsw i64 %2051, 8
  %2056 = getelementptr inbounds float, float* %3, i64 %2055
  %2057 = bitcast float* %2056 to <8 x float>*
  %2058 = load <8 x float>, <8 x float>* %2057, align 1, !tbaa !12
  %2059 = add nsw i64 %2051, 16
  %2060 = getelementptr inbounds float, float* %3, i64 %2059
  %2061 = bitcast float* %2060 to <8 x float>*
  %2062 = load <8 x float>, <8 x float>* %2061, align 1, !tbaa !12
  %2063 = add nsw i64 %2051, 24
  %2064 = getelementptr inbounds float, float* %3, i64 %2063
  %2065 = bitcast float* %2064 to <8 x float>*
  %2066 = load <8 x float>, <8 x float>* %2065, align 1, !tbaa !12
  %2067 = add nsw i64 %2051, 32
  %2068 = getelementptr inbounds float, float* %3, i64 %2067
  %2069 = bitcast float* %2068 to <8 x float>*
  %2070 = load <8 x float>, <8 x float>* %2069, align 1, !tbaa !12
  %2071 = add nsw i64 %2051, 40
  %2072 = getelementptr inbounds float, float* %3, i64 %2071
  %2073 = bitcast float* %2072 to <8 x float>*
  %2074 = load <8 x float>, <8 x float>* %2073, align 1, !tbaa !12
  %2075 = add nsw i64 %2051, 48
  %2076 = getelementptr inbounds float, float* %3, i64 %2075
  %2077 = bitcast float* %2076 to <8 x float>*
  %2078 = load <8 x float>, <8 x float>* %2077, align 1, !tbaa !12
  %2079 = add nsw i64 %2051, 56
  %2080 = getelementptr inbounds float, float* %3, i64 %2079
  %2081 = bitcast float* %2080 to <8 x float>*
  %2082 = load <8 x float>, <8 x float>* %2081, align 1, !tbaa !12
  %2083 = add nsw i64 %2051, 64
  %2084 = getelementptr inbounds float, float* %3, i64 %2083
  %2085 = bitcast float* %2084 to <8 x float>*
  %2086 = load <8 x float>, <8 x float>* %2085, align 1, !tbaa !12
  %2087 = add nsw i64 %2051, 72
  %2088 = getelementptr inbounds float, float* %3, i64 %2087
  %2089 = bitcast float* %2088 to <8 x float>*
  %2090 = load <8 x float>, <8 x float>* %2089, align 1, !tbaa !12
  %2091 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2054, <8 x float> %90, <8 x float> %2014) #10
  %2092 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2058, <8 x float> %90, <8 x float> %2018) #10
  %2093 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2062, <8 x float> %90, <8 x float> %2022) #10
  %2094 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2066, <8 x float> %90, <8 x float> %2026) #10
  %2095 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2070, <8 x float> %90, <8 x float> %2030) #10
  %2096 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2074, <8 x float> %90, <8 x float> %2034) #10
  %2097 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2078, <8 x float> %90, <8 x float> %2038) #10
  %2098 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2082, <8 x float> %90, <8 x float> %2042) #10
  %2099 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2086, <8 x float> %90, <8 x float> %2046) #10
  %2100 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2090, <8 x float> %90, <8 x float> %2050) #10
  store <8 x float> %2091, <8 x float>* %2013, align 1, !tbaa !12
  store <8 x float> %2092, <8 x float>* %2017, align 1, !tbaa !12
  store <8 x float> %2093, <8 x float>* %2021, align 1, !tbaa !12
  store <8 x float> %2094, <8 x float>* %2025, align 1, !tbaa !12
  store <8 x float> %2095, <8 x float>* %2029, align 1, !tbaa !12
  store <8 x float> %2096, <8 x float>* %2033, align 1, !tbaa !12
  store <8 x float> %2097, <8 x float>* %2037, align 1, !tbaa !12
  store <8 x float> %2098, <8 x float>* %2041, align 1, !tbaa !12
  store <8 x float> %2099, <8 x float>* %2045, align 1, !tbaa !12
  store <8 x float> %2100, <8 x float>* %2049, align 1, !tbaa !12
  %2101 = add nuw nsw i64 %1970, 80
  %2102 = icmp ult i64 %2101, %1818
  br i1 %2102, label %1969, label %1964
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 294
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui10_uk14.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
