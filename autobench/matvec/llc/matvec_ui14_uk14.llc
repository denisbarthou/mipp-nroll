; ModuleID = 'codes/matvec_ui14_uk14.cpp'
source_filename = "codes/matvec_ui14_uk14.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui14_uk14.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 112
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 112
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %2672, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %2672
  %21 = phi i64 [ %2673, %2672 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = add nuw nsw i64 %21, 13
  %87 = getelementptr inbounds float, float* %4, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !18
  %89 = insertelement <8 x float> undef, float %88, i32 0
  %90 = shufflevector <8 x float> %89, <8 x float> undef, <8 x i32> zeroinitializer
  %91 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %2672

93:                                               ; preds = %20
  %94 = zext i32 %91 to i64
  %95 = trunc i64 %21 to i32
  %96 = mul nsw i32 %91, %95
  br label %103

97:                                               ; preds = %103
  br i1 %92, label %98, label %496

98:                                               ; preds = %97
  %99 = trunc i64 %26 to i32
  %100 = mul nsw i32 %91, %99
  %101 = sext i32 %100 to i64
  %102 = zext i32 %91 to i64
  br label %310

103:                                              ; preds = %93, %103
  %104 = phi i64 [ 0, %93 ], [ %302, %103 ]
  %105 = getelementptr inbounds float, float* %5, i64 %104
  %106 = getelementptr inbounds float, float* %105, i64 8
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %3, i64 %104
  %109 = getelementptr inbounds float, float* %108, i64 8
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %105, i64 16
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %108, i64 16
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %105, i64 24
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %108, i64 24
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %105, i64 32
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %108, i64 32
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %105, i64 40
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %108, i64 40
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %105, i64 48
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %108, i64 48
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %105, i64 56
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %108, i64 56
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %105, i64 64
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = getelementptr inbounds float, float* %108, i64 64
  %138 = bitcast float* %137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %138, i32 0, i32 1, i32 1)
  %139 = getelementptr inbounds float, float* %105, i64 72
  %140 = bitcast float* %139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %140, i32 0, i32 1, i32 1)
  %141 = getelementptr inbounds float, float* %108, i64 72
  %142 = bitcast float* %141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %142, i32 0, i32 1, i32 1)
  %143 = getelementptr inbounds float, float* %105, i64 80
  %144 = bitcast float* %143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %144, i32 0, i32 1, i32 1)
  %145 = getelementptr inbounds float, float* %108, i64 80
  %146 = bitcast float* %145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %146, i32 0, i32 1, i32 1)
  %147 = getelementptr inbounds float, float* %105, i64 88
  %148 = bitcast float* %147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %148, i32 0, i32 1, i32 1)
  %149 = getelementptr inbounds float, float* %108, i64 88
  %150 = bitcast float* %149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %150, i32 0, i32 1, i32 1)
  %151 = getelementptr inbounds float, float* %105, i64 96
  %152 = bitcast float* %151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %152, i32 0, i32 1, i32 1)
  %153 = getelementptr inbounds float, float* %108, i64 96
  %154 = bitcast float* %153 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %154, i32 0, i32 1, i32 1)
  %155 = getelementptr inbounds float, float* %105, i64 104
  %156 = bitcast float* %155 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %156, i32 0, i32 1, i32 1)
  %157 = getelementptr inbounds float, float* %108, i64 104
  %158 = bitcast float* %157 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %158, i32 0, i32 1, i32 1)
  %159 = getelementptr inbounds float, float* %105, i64 112
  %160 = bitcast float* %159 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %160, i32 0, i32 1, i32 1)
  %161 = getelementptr inbounds float, float* %108, i64 112
  %162 = bitcast float* %161 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %162, i32 0, i32 1, i32 1)
  %163 = bitcast float* %105 to <8 x float>*
  %164 = load <8 x float>, <8 x float>* %163, align 1, !tbaa !12
  %165 = or i64 %104, 8
  %166 = getelementptr inbounds float, float* %5, i64 %165
  %167 = bitcast float* %166 to <8 x float>*
  %168 = load <8 x float>, <8 x float>* %167, align 1, !tbaa !12
  %169 = add nuw nsw i64 %104, 16
  %170 = getelementptr inbounds float, float* %5, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nuw nsw i64 %104, 24
  %174 = getelementptr inbounds float, float* %5, i64 %173
  %175 = bitcast float* %174 to <8 x float>*
  %176 = load <8 x float>, <8 x float>* %175, align 1, !tbaa !12
  %177 = add nuw nsw i64 %104, 32
  %178 = getelementptr inbounds float, float* %5, i64 %177
  %179 = bitcast float* %178 to <8 x float>*
  %180 = load <8 x float>, <8 x float>* %179, align 1, !tbaa !12
  %181 = add nuw nsw i64 %104, 40
  %182 = getelementptr inbounds float, float* %5, i64 %181
  %183 = bitcast float* %182 to <8 x float>*
  %184 = load <8 x float>, <8 x float>* %183, align 1, !tbaa !12
  %185 = add nuw nsw i64 %104, 48
  %186 = getelementptr inbounds float, float* %5, i64 %185
  %187 = bitcast float* %186 to <8 x float>*
  %188 = load <8 x float>, <8 x float>* %187, align 1, !tbaa !12
  %189 = add nuw nsw i64 %104, 56
  %190 = getelementptr inbounds float, float* %5, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nuw nsw i64 %104, 64
  %194 = getelementptr inbounds float, float* %5, i64 %193
  %195 = bitcast float* %194 to <8 x float>*
  %196 = load <8 x float>, <8 x float>* %195, align 1, !tbaa !12
  %197 = add nuw nsw i64 %104, 72
  %198 = getelementptr inbounds float, float* %5, i64 %197
  %199 = bitcast float* %198 to <8 x float>*
  %200 = load <8 x float>, <8 x float>* %199, align 1, !tbaa !12
  %201 = add nuw nsw i64 %104, 80
  %202 = getelementptr inbounds float, float* %5, i64 %201
  %203 = bitcast float* %202 to <8 x float>*
  %204 = load <8 x float>, <8 x float>* %203, align 1, !tbaa !12
  %205 = add nuw nsw i64 %104, 88
  %206 = getelementptr inbounds float, float* %5, i64 %205
  %207 = bitcast float* %206 to <8 x float>*
  %208 = load <8 x float>, <8 x float>* %207, align 1, !tbaa !12
  %209 = add nuw nsw i64 %104, 96
  %210 = getelementptr inbounds float, float* %5, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nuw nsw i64 %104, 104
  %214 = getelementptr inbounds float, float* %5, i64 %213
  %215 = bitcast float* %214 to <8 x float>*
  %216 = load <8 x float>, <8 x float>* %215, align 1, !tbaa !12
  %217 = trunc i64 %104 to i32
  %218 = add nsw i32 %96, %217
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %3, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %222 = load <8 x float>, <8 x float>* %221, align 1, !tbaa !12
  %223 = add nsw i32 %218, 8
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %3, i64 %224
  %226 = bitcast float* %225 to <8 x float>*
  %227 = load <8 x float>, <8 x float>* %226, align 1, !tbaa !12
  %228 = add nsw i32 %218, 16
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float, float* %3, i64 %229
  %231 = bitcast float* %230 to <8 x float>*
  %232 = load <8 x float>, <8 x float>* %231, align 1, !tbaa !12
  %233 = add nsw i32 %218, 24
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float, float* %3, i64 %234
  %236 = bitcast float* %235 to <8 x float>*
  %237 = load <8 x float>, <8 x float>* %236, align 1, !tbaa !12
  %238 = add nsw i32 %218, 32
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float, float* %3, i64 %239
  %241 = bitcast float* %240 to <8 x float>*
  %242 = load <8 x float>, <8 x float>* %241, align 1, !tbaa !12
  %243 = add nsw i32 %218, 40
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %3, i64 %244
  %246 = bitcast float* %245 to <8 x float>*
  %247 = load <8 x float>, <8 x float>* %246, align 1, !tbaa !12
  %248 = add nsw i32 %218, 48
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds float, float* %3, i64 %249
  %251 = bitcast float* %250 to <8 x float>*
  %252 = load <8 x float>, <8 x float>* %251, align 1, !tbaa !12
  %253 = add nsw i32 %218, 56
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %3, i64 %254
  %256 = bitcast float* %255 to <8 x float>*
  %257 = load <8 x float>, <8 x float>* %256, align 1, !tbaa !12
  %258 = add nsw i32 %218, 64
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds float, float* %3, i64 %259
  %261 = bitcast float* %260 to <8 x float>*
  %262 = load <8 x float>, <8 x float>* %261, align 1, !tbaa !12
  %263 = add nsw i32 %218, 72
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds float, float* %3, i64 %264
  %266 = bitcast float* %265 to <8 x float>*
  %267 = load <8 x float>, <8 x float>* %266, align 1, !tbaa !12
  %268 = add nsw i32 %218, 80
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds float, float* %3, i64 %269
  %271 = bitcast float* %270 to <8 x float>*
  %272 = load <8 x float>, <8 x float>* %271, align 1, !tbaa !12
  %273 = add nsw i32 %218, 88
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds float, float* %3, i64 %274
  %276 = bitcast float* %275 to <8 x float>*
  %277 = load <8 x float>, <8 x float>* %276, align 1, !tbaa !12
  %278 = add nsw i32 %218, 96
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds float, float* %3, i64 %279
  %281 = bitcast float* %280 to <8 x float>*
  %282 = load <8 x float>, <8 x float>* %281, align 1, !tbaa !12
  %283 = add nsw i32 %218, 104
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds float, float* %3, i64 %284
  %286 = bitcast float* %285 to <8 x float>*
  %287 = load <8 x float>, <8 x float>* %286, align 1, !tbaa !12
  %288 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %222, <8 x float> %25, <8 x float> %164) #10
  %289 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %227, <8 x float> %25, <8 x float> %168) #10
  %290 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %232, <8 x float> %25, <8 x float> %172) #10
  %291 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %237, <8 x float> %25, <8 x float> %176) #10
  %292 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %242, <8 x float> %25, <8 x float> %180) #10
  %293 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %247, <8 x float> %25, <8 x float> %184) #10
  %294 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %252, <8 x float> %25, <8 x float> %188) #10
  %295 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %257, <8 x float> %25, <8 x float> %192) #10
  %296 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %262, <8 x float> %25, <8 x float> %196) #10
  %297 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %267, <8 x float> %25, <8 x float> %200) #10
  %298 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %272, <8 x float> %25, <8 x float> %204) #10
  %299 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %277, <8 x float> %25, <8 x float> %208) #10
  %300 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %282, <8 x float> %25, <8 x float> %212) #10
  %301 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %287, <8 x float> %25, <8 x float> %216) #10
  store <8 x float> %288, <8 x float>* %163, align 1, !tbaa !12
  store <8 x float> %289, <8 x float>* %167, align 1, !tbaa !12
  store <8 x float> %290, <8 x float>* %171, align 1, !tbaa !12
  store <8 x float> %291, <8 x float>* %175, align 1, !tbaa !12
  store <8 x float> %292, <8 x float>* %179, align 1, !tbaa !12
  store <8 x float> %293, <8 x float>* %183, align 1, !tbaa !12
  store <8 x float> %294, <8 x float>* %187, align 1, !tbaa !12
  store <8 x float> %295, <8 x float>* %191, align 1, !tbaa !12
  store <8 x float> %296, <8 x float>* %195, align 1, !tbaa !12
  store <8 x float> %297, <8 x float>* %199, align 1, !tbaa !12
  store <8 x float> %298, <8 x float>* %203, align 1, !tbaa !12
  store <8 x float> %299, <8 x float>* %207, align 1, !tbaa !12
  store <8 x float> %300, <8 x float>* %211, align 1, !tbaa !12
  store <8 x float> %301, <8 x float>* %215, align 1, !tbaa !12
  %302 = add nuw nsw i64 %104, 112
  %303 = icmp ult i64 %302, %94
  br i1 %303, label %103, label %97

304:                                              ; preds = %310
  br i1 %92, label %305, label %496

305:                                              ; preds = %304
  %306 = trunc i64 %31 to i32
  %307 = mul nsw i32 %91, %306
  %308 = sext i32 %307 to i64
  %309 = zext i32 %91 to i64
  br label %503

310:                                              ; preds = %98, %310
  %311 = phi i64 [ 0, %98 ], [ %494, %310 ]
  %312 = getelementptr inbounds float, float* %5, i64 %311
  %313 = getelementptr inbounds float, float* %312, i64 8
  %314 = bitcast float* %313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %314, i32 0, i32 1, i32 1)
  %315 = getelementptr inbounds float, float* %3, i64 %311
  %316 = getelementptr inbounds float, float* %315, i64 8
  %317 = bitcast float* %316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %317, i32 0, i32 1, i32 1)
  %318 = getelementptr inbounds float, float* %312, i64 16
  %319 = bitcast float* %318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %319, i32 0, i32 1, i32 1)
  %320 = getelementptr inbounds float, float* %315, i64 16
  %321 = bitcast float* %320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %321, i32 0, i32 1, i32 1)
  %322 = getelementptr inbounds float, float* %312, i64 24
  %323 = bitcast float* %322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %323, i32 0, i32 1, i32 1)
  %324 = getelementptr inbounds float, float* %315, i64 24
  %325 = bitcast float* %324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %325, i32 0, i32 1, i32 1)
  %326 = getelementptr inbounds float, float* %312, i64 32
  %327 = bitcast float* %326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %327, i32 0, i32 1, i32 1)
  %328 = getelementptr inbounds float, float* %315, i64 32
  %329 = bitcast float* %328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %329, i32 0, i32 1, i32 1)
  %330 = getelementptr inbounds float, float* %312, i64 40
  %331 = bitcast float* %330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %331, i32 0, i32 1, i32 1)
  %332 = getelementptr inbounds float, float* %315, i64 40
  %333 = bitcast float* %332 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %333, i32 0, i32 1, i32 1)
  %334 = getelementptr inbounds float, float* %312, i64 48
  %335 = bitcast float* %334 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %335, i32 0, i32 1, i32 1)
  %336 = getelementptr inbounds float, float* %315, i64 48
  %337 = bitcast float* %336 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %337, i32 0, i32 1, i32 1)
  %338 = getelementptr inbounds float, float* %312, i64 56
  %339 = bitcast float* %338 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %339, i32 0, i32 1, i32 1)
  %340 = getelementptr inbounds float, float* %315, i64 56
  %341 = bitcast float* %340 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %341, i32 0, i32 1, i32 1)
  %342 = getelementptr inbounds float, float* %312, i64 64
  %343 = bitcast float* %342 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %343, i32 0, i32 1, i32 1)
  %344 = getelementptr inbounds float, float* %315, i64 64
  %345 = bitcast float* %344 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %345, i32 0, i32 1, i32 1)
  %346 = getelementptr inbounds float, float* %312, i64 72
  %347 = bitcast float* %346 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %347, i32 0, i32 1, i32 1)
  %348 = getelementptr inbounds float, float* %315, i64 72
  %349 = bitcast float* %348 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %349, i32 0, i32 1, i32 1)
  %350 = getelementptr inbounds float, float* %312, i64 80
  %351 = bitcast float* %350 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %351, i32 0, i32 1, i32 1)
  %352 = getelementptr inbounds float, float* %315, i64 80
  %353 = bitcast float* %352 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %353, i32 0, i32 1, i32 1)
  %354 = getelementptr inbounds float, float* %312, i64 88
  %355 = bitcast float* %354 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %355, i32 0, i32 1, i32 1)
  %356 = getelementptr inbounds float, float* %315, i64 88
  %357 = bitcast float* %356 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %357, i32 0, i32 1, i32 1)
  %358 = getelementptr inbounds float, float* %312, i64 96
  %359 = bitcast float* %358 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %359, i32 0, i32 1, i32 1)
  %360 = getelementptr inbounds float, float* %315, i64 96
  %361 = bitcast float* %360 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %361, i32 0, i32 1, i32 1)
  %362 = getelementptr inbounds float, float* %312, i64 104
  %363 = bitcast float* %362 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %363, i32 0, i32 1, i32 1)
  %364 = getelementptr inbounds float, float* %315, i64 104
  %365 = bitcast float* %364 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %365, i32 0, i32 1, i32 1)
  %366 = getelementptr inbounds float, float* %312, i64 112
  %367 = bitcast float* %366 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %367, i32 0, i32 1, i32 1)
  %368 = getelementptr inbounds float, float* %315, i64 112
  %369 = bitcast float* %368 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %369, i32 0, i32 1, i32 1)
  %370 = bitcast float* %312 to <8 x float>*
  %371 = load <8 x float>, <8 x float>* %370, align 1, !tbaa !12
  %372 = or i64 %311, 8
  %373 = getelementptr inbounds float, float* %5, i64 %372
  %374 = bitcast float* %373 to <8 x float>*
  %375 = load <8 x float>, <8 x float>* %374, align 1, !tbaa !12
  %376 = add nuw nsw i64 %311, 16
  %377 = getelementptr inbounds float, float* %5, i64 %376
  %378 = bitcast float* %377 to <8 x float>*
  %379 = load <8 x float>, <8 x float>* %378, align 1, !tbaa !12
  %380 = add nuw nsw i64 %311, 24
  %381 = getelementptr inbounds float, float* %5, i64 %380
  %382 = bitcast float* %381 to <8 x float>*
  %383 = load <8 x float>, <8 x float>* %382, align 1, !tbaa !12
  %384 = add nuw nsw i64 %311, 32
  %385 = getelementptr inbounds float, float* %5, i64 %384
  %386 = bitcast float* %385 to <8 x float>*
  %387 = load <8 x float>, <8 x float>* %386, align 1, !tbaa !12
  %388 = add nuw nsw i64 %311, 40
  %389 = getelementptr inbounds float, float* %5, i64 %388
  %390 = bitcast float* %389 to <8 x float>*
  %391 = load <8 x float>, <8 x float>* %390, align 1, !tbaa !12
  %392 = add nuw nsw i64 %311, 48
  %393 = getelementptr inbounds float, float* %5, i64 %392
  %394 = bitcast float* %393 to <8 x float>*
  %395 = load <8 x float>, <8 x float>* %394, align 1, !tbaa !12
  %396 = add nuw nsw i64 %311, 56
  %397 = getelementptr inbounds float, float* %5, i64 %396
  %398 = bitcast float* %397 to <8 x float>*
  %399 = load <8 x float>, <8 x float>* %398, align 1, !tbaa !12
  %400 = add nuw nsw i64 %311, 64
  %401 = getelementptr inbounds float, float* %5, i64 %400
  %402 = bitcast float* %401 to <8 x float>*
  %403 = load <8 x float>, <8 x float>* %402, align 1, !tbaa !12
  %404 = add nuw nsw i64 %311, 72
  %405 = getelementptr inbounds float, float* %5, i64 %404
  %406 = bitcast float* %405 to <8 x float>*
  %407 = load <8 x float>, <8 x float>* %406, align 1, !tbaa !12
  %408 = add nuw nsw i64 %311, 80
  %409 = getelementptr inbounds float, float* %5, i64 %408
  %410 = bitcast float* %409 to <8 x float>*
  %411 = load <8 x float>, <8 x float>* %410, align 1, !tbaa !12
  %412 = add nuw nsw i64 %311, 88
  %413 = getelementptr inbounds float, float* %5, i64 %412
  %414 = bitcast float* %413 to <8 x float>*
  %415 = load <8 x float>, <8 x float>* %414, align 1, !tbaa !12
  %416 = add nuw nsw i64 %311, 96
  %417 = getelementptr inbounds float, float* %5, i64 %416
  %418 = bitcast float* %417 to <8 x float>*
  %419 = load <8 x float>, <8 x float>* %418, align 1, !tbaa !12
  %420 = add nuw nsw i64 %311, 104
  %421 = getelementptr inbounds float, float* %5, i64 %420
  %422 = bitcast float* %421 to <8 x float>*
  %423 = load <8 x float>, <8 x float>* %422, align 1, !tbaa !12
  %424 = add nsw i64 %311, %101
  %425 = getelementptr inbounds float, float* %3, i64 %424
  %426 = bitcast float* %425 to <8 x float>*
  %427 = load <8 x float>, <8 x float>* %426, align 1, !tbaa !12
  %428 = add nsw i64 %424, 8
  %429 = getelementptr inbounds float, float* %3, i64 %428
  %430 = bitcast float* %429 to <8 x float>*
  %431 = load <8 x float>, <8 x float>* %430, align 1, !tbaa !12
  %432 = add nsw i64 %424, 16
  %433 = getelementptr inbounds float, float* %3, i64 %432
  %434 = bitcast float* %433 to <8 x float>*
  %435 = load <8 x float>, <8 x float>* %434, align 1, !tbaa !12
  %436 = add nsw i64 %424, 24
  %437 = getelementptr inbounds float, float* %3, i64 %436
  %438 = bitcast float* %437 to <8 x float>*
  %439 = load <8 x float>, <8 x float>* %438, align 1, !tbaa !12
  %440 = add nsw i64 %424, 32
  %441 = getelementptr inbounds float, float* %3, i64 %440
  %442 = bitcast float* %441 to <8 x float>*
  %443 = load <8 x float>, <8 x float>* %442, align 1, !tbaa !12
  %444 = add nsw i64 %424, 40
  %445 = getelementptr inbounds float, float* %3, i64 %444
  %446 = bitcast float* %445 to <8 x float>*
  %447 = load <8 x float>, <8 x float>* %446, align 1, !tbaa !12
  %448 = add nsw i64 %424, 48
  %449 = getelementptr inbounds float, float* %3, i64 %448
  %450 = bitcast float* %449 to <8 x float>*
  %451 = load <8 x float>, <8 x float>* %450, align 1, !tbaa !12
  %452 = add nsw i64 %424, 56
  %453 = getelementptr inbounds float, float* %3, i64 %452
  %454 = bitcast float* %453 to <8 x float>*
  %455 = load <8 x float>, <8 x float>* %454, align 1, !tbaa !12
  %456 = add nsw i64 %424, 64
  %457 = getelementptr inbounds float, float* %3, i64 %456
  %458 = bitcast float* %457 to <8 x float>*
  %459 = load <8 x float>, <8 x float>* %458, align 1, !tbaa !12
  %460 = add nsw i64 %424, 72
  %461 = getelementptr inbounds float, float* %3, i64 %460
  %462 = bitcast float* %461 to <8 x float>*
  %463 = load <8 x float>, <8 x float>* %462, align 1, !tbaa !12
  %464 = add nsw i64 %424, 80
  %465 = getelementptr inbounds float, float* %3, i64 %464
  %466 = bitcast float* %465 to <8 x float>*
  %467 = load <8 x float>, <8 x float>* %466, align 1, !tbaa !12
  %468 = add nsw i64 %424, 88
  %469 = getelementptr inbounds float, float* %3, i64 %468
  %470 = bitcast float* %469 to <8 x float>*
  %471 = load <8 x float>, <8 x float>* %470, align 1, !tbaa !12
  %472 = add nsw i64 %424, 96
  %473 = getelementptr inbounds float, float* %3, i64 %472
  %474 = bitcast float* %473 to <8 x float>*
  %475 = load <8 x float>, <8 x float>* %474, align 1, !tbaa !12
  %476 = add nsw i64 %424, 104
  %477 = getelementptr inbounds float, float* %3, i64 %476
  %478 = bitcast float* %477 to <8 x float>*
  %479 = load <8 x float>, <8 x float>* %478, align 1, !tbaa !12
  %480 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %427, <8 x float> %30, <8 x float> %371) #10
  %481 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %431, <8 x float> %30, <8 x float> %375) #10
  %482 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %435, <8 x float> %30, <8 x float> %379) #10
  %483 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %439, <8 x float> %30, <8 x float> %383) #10
  %484 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %443, <8 x float> %30, <8 x float> %387) #10
  %485 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %447, <8 x float> %30, <8 x float> %391) #10
  %486 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %451, <8 x float> %30, <8 x float> %395) #10
  %487 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %455, <8 x float> %30, <8 x float> %399) #10
  %488 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %459, <8 x float> %30, <8 x float> %403) #10
  %489 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %463, <8 x float> %30, <8 x float> %407) #10
  %490 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %467, <8 x float> %30, <8 x float> %411) #10
  %491 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %471, <8 x float> %30, <8 x float> %415) #10
  %492 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %475, <8 x float> %30, <8 x float> %419) #10
  %493 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %479, <8 x float> %30, <8 x float> %423) #10
  store <8 x float> %480, <8 x float>* %370, align 1, !tbaa !12
  store <8 x float> %481, <8 x float>* %374, align 1, !tbaa !12
  store <8 x float> %482, <8 x float>* %378, align 1, !tbaa !12
  store <8 x float> %483, <8 x float>* %382, align 1, !tbaa !12
  store <8 x float> %484, <8 x float>* %386, align 1, !tbaa !12
  store <8 x float> %485, <8 x float>* %390, align 1, !tbaa !12
  store <8 x float> %486, <8 x float>* %394, align 1, !tbaa !12
  store <8 x float> %487, <8 x float>* %398, align 1, !tbaa !12
  store <8 x float> %488, <8 x float>* %402, align 1, !tbaa !12
  store <8 x float> %489, <8 x float>* %406, align 1, !tbaa !12
  store <8 x float> %490, <8 x float>* %410, align 1, !tbaa !12
  store <8 x float> %491, <8 x float>* %414, align 1, !tbaa !12
  store <8 x float> %492, <8 x float>* %418, align 1, !tbaa !12
  store <8 x float> %493, <8 x float>* %422, align 1, !tbaa !12
  %494 = add nuw nsw i64 %311, 112
  %495 = icmp ult i64 %494, %102
  br i1 %495, label %310, label %304

496:                                              ; preds = %503, %97, %304
  %497 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %498 = icmp sgt i32 %497, 0
  br i1 %498, label %499, label %2672

499:                                              ; preds = %496
  %500 = zext i32 %497 to i64
  %501 = trunc i64 %36 to i32
  %502 = mul nsw i32 %497, %501
  br label %695

503:                                              ; preds = %305, %503
  %504 = phi i64 [ 0, %305 ], [ %687, %503 ]
  %505 = getelementptr inbounds float, float* %5, i64 %504
  %506 = getelementptr inbounds float, float* %505, i64 8
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %3, i64 %504
  %509 = getelementptr inbounds float, float* %508, i64 8
  %510 = bitcast float* %509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %510, i32 0, i32 1, i32 1)
  %511 = getelementptr inbounds float, float* %505, i64 16
  %512 = bitcast float* %511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %512, i32 0, i32 1, i32 1)
  %513 = getelementptr inbounds float, float* %508, i64 16
  %514 = bitcast float* %513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %514, i32 0, i32 1, i32 1)
  %515 = getelementptr inbounds float, float* %505, i64 24
  %516 = bitcast float* %515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %516, i32 0, i32 1, i32 1)
  %517 = getelementptr inbounds float, float* %508, i64 24
  %518 = bitcast float* %517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %518, i32 0, i32 1, i32 1)
  %519 = getelementptr inbounds float, float* %505, i64 32
  %520 = bitcast float* %519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %520, i32 0, i32 1, i32 1)
  %521 = getelementptr inbounds float, float* %508, i64 32
  %522 = bitcast float* %521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %522, i32 0, i32 1, i32 1)
  %523 = getelementptr inbounds float, float* %505, i64 40
  %524 = bitcast float* %523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %524, i32 0, i32 1, i32 1)
  %525 = getelementptr inbounds float, float* %508, i64 40
  %526 = bitcast float* %525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %526, i32 0, i32 1, i32 1)
  %527 = getelementptr inbounds float, float* %505, i64 48
  %528 = bitcast float* %527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %528, i32 0, i32 1, i32 1)
  %529 = getelementptr inbounds float, float* %508, i64 48
  %530 = bitcast float* %529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %530, i32 0, i32 1, i32 1)
  %531 = getelementptr inbounds float, float* %505, i64 56
  %532 = bitcast float* %531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %532, i32 0, i32 1, i32 1)
  %533 = getelementptr inbounds float, float* %508, i64 56
  %534 = bitcast float* %533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %534, i32 0, i32 1, i32 1)
  %535 = getelementptr inbounds float, float* %505, i64 64
  %536 = bitcast float* %535 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %536, i32 0, i32 1, i32 1)
  %537 = getelementptr inbounds float, float* %508, i64 64
  %538 = bitcast float* %537 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %538, i32 0, i32 1, i32 1)
  %539 = getelementptr inbounds float, float* %505, i64 72
  %540 = bitcast float* %539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %540, i32 0, i32 1, i32 1)
  %541 = getelementptr inbounds float, float* %508, i64 72
  %542 = bitcast float* %541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %542, i32 0, i32 1, i32 1)
  %543 = getelementptr inbounds float, float* %505, i64 80
  %544 = bitcast float* %543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %544, i32 0, i32 1, i32 1)
  %545 = getelementptr inbounds float, float* %508, i64 80
  %546 = bitcast float* %545 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %546, i32 0, i32 1, i32 1)
  %547 = getelementptr inbounds float, float* %505, i64 88
  %548 = bitcast float* %547 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %548, i32 0, i32 1, i32 1)
  %549 = getelementptr inbounds float, float* %508, i64 88
  %550 = bitcast float* %549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %550, i32 0, i32 1, i32 1)
  %551 = getelementptr inbounds float, float* %505, i64 96
  %552 = bitcast float* %551 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %552, i32 0, i32 1, i32 1)
  %553 = getelementptr inbounds float, float* %508, i64 96
  %554 = bitcast float* %553 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %554, i32 0, i32 1, i32 1)
  %555 = getelementptr inbounds float, float* %505, i64 104
  %556 = bitcast float* %555 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %556, i32 0, i32 1, i32 1)
  %557 = getelementptr inbounds float, float* %508, i64 104
  %558 = bitcast float* %557 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %558, i32 0, i32 1, i32 1)
  %559 = getelementptr inbounds float, float* %505, i64 112
  %560 = bitcast float* %559 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %560, i32 0, i32 1, i32 1)
  %561 = getelementptr inbounds float, float* %508, i64 112
  %562 = bitcast float* %561 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %562, i32 0, i32 1, i32 1)
  %563 = bitcast float* %505 to <8 x float>*
  %564 = load <8 x float>, <8 x float>* %563, align 1, !tbaa !12
  %565 = or i64 %504, 8
  %566 = getelementptr inbounds float, float* %5, i64 %565
  %567 = bitcast float* %566 to <8 x float>*
  %568 = load <8 x float>, <8 x float>* %567, align 1, !tbaa !12
  %569 = add nuw nsw i64 %504, 16
  %570 = getelementptr inbounds float, float* %5, i64 %569
  %571 = bitcast float* %570 to <8 x float>*
  %572 = load <8 x float>, <8 x float>* %571, align 1, !tbaa !12
  %573 = add nuw nsw i64 %504, 24
  %574 = getelementptr inbounds float, float* %5, i64 %573
  %575 = bitcast float* %574 to <8 x float>*
  %576 = load <8 x float>, <8 x float>* %575, align 1, !tbaa !12
  %577 = add nuw nsw i64 %504, 32
  %578 = getelementptr inbounds float, float* %5, i64 %577
  %579 = bitcast float* %578 to <8 x float>*
  %580 = load <8 x float>, <8 x float>* %579, align 1, !tbaa !12
  %581 = add nuw nsw i64 %504, 40
  %582 = getelementptr inbounds float, float* %5, i64 %581
  %583 = bitcast float* %582 to <8 x float>*
  %584 = load <8 x float>, <8 x float>* %583, align 1, !tbaa !12
  %585 = add nuw nsw i64 %504, 48
  %586 = getelementptr inbounds float, float* %5, i64 %585
  %587 = bitcast float* %586 to <8 x float>*
  %588 = load <8 x float>, <8 x float>* %587, align 1, !tbaa !12
  %589 = add nuw nsw i64 %504, 56
  %590 = getelementptr inbounds float, float* %5, i64 %589
  %591 = bitcast float* %590 to <8 x float>*
  %592 = load <8 x float>, <8 x float>* %591, align 1, !tbaa !12
  %593 = add nuw nsw i64 %504, 64
  %594 = getelementptr inbounds float, float* %5, i64 %593
  %595 = bitcast float* %594 to <8 x float>*
  %596 = load <8 x float>, <8 x float>* %595, align 1, !tbaa !12
  %597 = add nuw nsw i64 %504, 72
  %598 = getelementptr inbounds float, float* %5, i64 %597
  %599 = bitcast float* %598 to <8 x float>*
  %600 = load <8 x float>, <8 x float>* %599, align 1, !tbaa !12
  %601 = add nuw nsw i64 %504, 80
  %602 = getelementptr inbounds float, float* %5, i64 %601
  %603 = bitcast float* %602 to <8 x float>*
  %604 = load <8 x float>, <8 x float>* %603, align 1, !tbaa !12
  %605 = add nuw nsw i64 %504, 88
  %606 = getelementptr inbounds float, float* %5, i64 %605
  %607 = bitcast float* %606 to <8 x float>*
  %608 = load <8 x float>, <8 x float>* %607, align 1, !tbaa !12
  %609 = add nuw nsw i64 %504, 96
  %610 = getelementptr inbounds float, float* %5, i64 %609
  %611 = bitcast float* %610 to <8 x float>*
  %612 = load <8 x float>, <8 x float>* %611, align 1, !tbaa !12
  %613 = add nuw nsw i64 %504, 104
  %614 = getelementptr inbounds float, float* %5, i64 %613
  %615 = bitcast float* %614 to <8 x float>*
  %616 = load <8 x float>, <8 x float>* %615, align 1, !tbaa !12
  %617 = add nsw i64 %504, %308
  %618 = getelementptr inbounds float, float* %3, i64 %617
  %619 = bitcast float* %618 to <8 x float>*
  %620 = load <8 x float>, <8 x float>* %619, align 1, !tbaa !12
  %621 = add nsw i64 %617, 8
  %622 = getelementptr inbounds float, float* %3, i64 %621
  %623 = bitcast float* %622 to <8 x float>*
  %624 = load <8 x float>, <8 x float>* %623, align 1, !tbaa !12
  %625 = add nsw i64 %617, 16
  %626 = getelementptr inbounds float, float* %3, i64 %625
  %627 = bitcast float* %626 to <8 x float>*
  %628 = load <8 x float>, <8 x float>* %627, align 1, !tbaa !12
  %629 = add nsw i64 %617, 24
  %630 = getelementptr inbounds float, float* %3, i64 %629
  %631 = bitcast float* %630 to <8 x float>*
  %632 = load <8 x float>, <8 x float>* %631, align 1, !tbaa !12
  %633 = add nsw i64 %617, 32
  %634 = getelementptr inbounds float, float* %3, i64 %633
  %635 = bitcast float* %634 to <8 x float>*
  %636 = load <8 x float>, <8 x float>* %635, align 1, !tbaa !12
  %637 = add nsw i64 %617, 40
  %638 = getelementptr inbounds float, float* %3, i64 %637
  %639 = bitcast float* %638 to <8 x float>*
  %640 = load <8 x float>, <8 x float>* %639, align 1, !tbaa !12
  %641 = add nsw i64 %617, 48
  %642 = getelementptr inbounds float, float* %3, i64 %641
  %643 = bitcast float* %642 to <8 x float>*
  %644 = load <8 x float>, <8 x float>* %643, align 1, !tbaa !12
  %645 = add nsw i64 %617, 56
  %646 = getelementptr inbounds float, float* %3, i64 %645
  %647 = bitcast float* %646 to <8 x float>*
  %648 = load <8 x float>, <8 x float>* %647, align 1, !tbaa !12
  %649 = add nsw i64 %617, 64
  %650 = getelementptr inbounds float, float* %3, i64 %649
  %651 = bitcast float* %650 to <8 x float>*
  %652 = load <8 x float>, <8 x float>* %651, align 1, !tbaa !12
  %653 = add nsw i64 %617, 72
  %654 = getelementptr inbounds float, float* %3, i64 %653
  %655 = bitcast float* %654 to <8 x float>*
  %656 = load <8 x float>, <8 x float>* %655, align 1, !tbaa !12
  %657 = add nsw i64 %617, 80
  %658 = getelementptr inbounds float, float* %3, i64 %657
  %659 = bitcast float* %658 to <8 x float>*
  %660 = load <8 x float>, <8 x float>* %659, align 1, !tbaa !12
  %661 = add nsw i64 %617, 88
  %662 = getelementptr inbounds float, float* %3, i64 %661
  %663 = bitcast float* %662 to <8 x float>*
  %664 = load <8 x float>, <8 x float>* %663, align 1, !tbaa !12
  %665 = add nsw i64 %617, 96
  %666 = getelementptr inbounds float, float* %3, i64 %665
  %667 = bitcast float* %666 to <8 x float>*
  %668 = load <8 x float>, <8 x float>* %667, align 1, !tbaa !12
  %669 = add nsw i64 %617, 104
  %670 = getelementptr inbounds float, float* %3, i64 %669
  %671 = bitcast float* %670 to <8 x float>*
  %672 = load <8 x float>, <8 x float>* %671, align 1, !tbaa !12
  %673 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %620, <8 x float> %35, <8 x float> %564) #10
  %674 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %624, <8 x float> %35, <8 x float> %568) #10
  %675 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %628, <8 x float> %35, <8 x float> %572) #10
  %676 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %632, <8 x float> %35, <8 x float> %576) #10
  %677 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %636, <8 x float> %35, <8 x float> %580) #10
  %678 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %640, <8 x float> %35, <8 x float> %584) #10
  %679 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %644, <8 x float> %35, <8 x float> %588) #10
  %680 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %648, <8 x float> %35, <8 x float> %592) #10
  %681 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %652, <8 x float> %35, <8 x float> %596) #10
  %682 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %656, <8 x float> %35, <8 x float> %600) #10
  %683 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %660, <8 x float> %35, <8 x float> %604) #10
  %684 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %664, <8 x float> %35, <8 x float> %608) #10
  %685 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %668, <8 x float> %35, <8 x float> %612) #10
  %686 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %672, <8 x float> %35, <8 x float> %616) #10
  store <8 x float> %673, <8 x float>* %563, align 1, !tbaa !12
  store <8 x float> %674, <8 x float>* %567, align 1, !tbaa !12
  store <8 x float> %675, <8 x float>* %571, align 1, !tbaa !12
  store <8 x float> %676, <8 x float>* %575, align 1, !tbaa !12
  store <8 x float> %677, <8 x float>* %579, align 1, !tbaa !12
  store <8 x float> %678, <8 x float>* %583, align 1, !tbaa !12
  store <8 x float> %679, <8 x float>* %587, align 1, !tbaa !12
  store <8 x float> %680, <8 x float>* %591, align 1, !tbaa !12
  store <8 x float> %681, <8 x float>* %595, align 1, !tbaa !12
  store <8 x float> %682, <8 x float>* %599, align 1, !tbaa !12
  store <8 x float> %683, <8 x float>* %603, align 1, !tbaa !12
  store <8 x float> %684, <8 x float>* %607, align 1, !tbaa !12
  store <8 x float> %685, <8 x float>* %611, align 1, !tbaa !12
  store <8 x float> %686, <8 x float>* %615, align 1, !tbaa !12
  %687 = add nuw nsw i64 %504, 112
  %688 = icmp ult i64 %687, %309
  br i1 %688, label %503, label %496

689:                                              ; preds = %695
  br i1 %498, label %690, label %1088

690:                                              ; preds = %689
  %691 = trunc i64 %41 to i32
  %692 = mul nsw i32 %497, %691
  %693 = sext i32 %692 to i64
  %694 = zext i32 %497 to i64
  br label %902

695:                                              ; preds = %499, %695
  %696 = phi i64 [ 0, %499 ], [ %894, %695 ]
  %697 = getelementptr inbounds float, float* %5, i64 %696
  %698 = getelementptr inbounds float, float* %697, i64 8
  %699 = bitcast float* %698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %699, i32 0, i32 1, i32 1)
  %700 = getelementptr inbounds float, float* %3, i64 %696
  %701 = getelementptr inbounds float, float* %700, i64 8
  %702 = bitcast float* %701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %702, i32 0, i32 1, i32 1)
  %703 = getelementptr inbounds float, float* %697, i64 16
  %704 = bitcast float* %703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %704, i32 0, i32 1, i32 1)
  %705 = getelementptr inbounds float, float* %700, i64 16
  %706 = bitcast float* %705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %706, i32 0, i32 1, i32 1)
  %707 = getelementptr inbounds float, float* %697, i64 24
  %708 = bitcast float* %707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %708, i32 0, i32 1, i32 1)
  %709 = getelementptr inbounds float, float* %700, i64 24
  %710 = bitcast float* %709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %710, i32 0, i32 1, i32 1)
  %711 = getelementptr inbounds float, float* %697, i64 32
  %712 = bitcast float* %711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %712, i32 0, i32 1, i32 1)
  %713 = getelementptr inbounds float, float* %700, i64 32
  %714 = bitcast float* %713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %714, i32 0, i32 1, i32 1)
  %715 = getelementptr inbounds float, float* %697, i64 40
  %716 = bitcast float* %715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %716, i32 0, i32 1, i32 1)
  %717 = getelementptr inbounds float, float* %700, i64 40
  %718 = bitcast float* %717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %718, i32 0, i32 1, i32 1)
  %719 = getelementptr inbounds float, float* %697, i64 48
  %720 = bitcast float* %719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %720, i32 0, i32 1, i32 1)
  %721 = getelementptr inbounds float, float* %700, i64 48
  %722 = bitcast float* %721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %722, i32 0, i32 1, i32 1)
  %723 = getelementptr inbounds float, float* %697, i64 56
  %724 = bitcast float* %723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %724, i32 0, i32 1, i32 1)
  %725 = getelementptr inbounds float, float* %700, i64 56
  %726 = bitcast float* %725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %726, i32 0, i32 1, i32 1)
  %727 = getelementptr inbounds float, float* %697, i64 64
  %728 = bitcast float* %727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %728, i32 0, i32 1, i32 1)
  %729 = getelementptr inbounds float, float* %700, i64 64
  %730 = bitcast float* %729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %730, i32 0, i32 1, i32 1)
  %731 = getelementptr inbounds float, float* %697, i64 72
  %732 = bitcast float* %731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %732, i32 0, i32 1, i32 1)
  %733 = getelementptr inbounds float, float* %700, i64 72
  %734 = bitcast float* %733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %734, i32 0, i32 1, i32 1)
  %735 = getelementptr inbounds float, float* %697, i64 80
  %736 = bitcast float* %735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %736, i32 0, i32 1, i32 1)
  %737 = getelementptr inbounds float, float* %700, i64 80
  %738 = bitcast float* %737 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %738, i32 0, i32 1, i32 1)
  %739 = getelementptr inbounds float, float* %697, i64 88
  %740 = bitcast float* %739 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %740, i32 0, i32 1, i32 1)
  %741 = getelementptr inbounds float, float* %700, i64 88
  %742 = bitcast float* %741 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %742, i32 0, i32 1, i32 1)
  %743 = getelementptr inbounds float, float* %697, i64 96
  %744 = bitcast float* %743 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %744, i32 0, i32 1, i32 1)
  %745 = getelementptr inbounds float, float* %700, i64 96
  %746 = bitcast float* %745 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %746, i32 0, i32 1, i32 1)
  %747 = getelementptr inbounds float, float* %697, i64 104
  %748 = bitcast float* %747 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %748, i32 0, i32 1, i32 1)
  %749 = getelementptr inbounds float, float* %700, i64 104
  %750 = bitcast float* %749 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %750, i32 0, i32 1, i32 1)
  %751 = getelementptr inbounds float, float* %697, i64 112
  %752 = bitcast float* %751 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %752, i32 0, i32 1, i32 1)
  %753 = getelementptr inbounds float, float* %700, i64 112
  %754 = bitcast float* %753 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %754, i32 0, i32 1, i32 1)
  %755 = bitcast float* %697 to <8 x float>*
  %756 = load <8 x float>, <8 x float>* %755, align 1, !tbaa !12
  %757 = or i64 %696, 8
  %758 = getelementptr inbounds float, float* %5, i64 %757
  %759 = bitcast float* %758 to <8 x float>*
  %760 = load <8 x float>, <8 x float>* %759, align 1, !tbaa !12
  %761 = add nuw nsw i64 %696, 16
  %762 = getelementptr inbounds float, float* %5, i64 %761
  %763 = bitcast float* %762 to <8 x float>*
  %764 = load <8 x float>, <8 x float>* %763, align 1, !tbaa !12
  %765 = add nuw nsw i64 %696, 24
  %766 = getelementptr inbounds float, float* %5, i64 %765
  %767 = bitcast float* %766 to <8 x float>*
  %768 = load <8 x float>, <8 x float>* %767, align 1, !tbaa !12
  %769 = add nuw nsw i64 %696, 32
  %770 = getelementptr inbounds float, float* %5, i64 %769
  %771 = bitcast float* %770 to <8 x float>*
  %772 = load <8 x float>, <8 x float>* %771, align 1, !tbaa !12
  %773 = add nuw nsw i64 %696, 40
  %774 = getelementptr inbounds float, float* %5, i64 %773
  %775 = bitcast float* %774 to <8 x float>*
  %776 = load <8 x float>, <8 x float>* %775, align 1, !tbaa !12
  %777 = add nuw nsw i64 %696, 48
  %778 = getelementptr inbounds float, float* %5, i64 %777
  %779 = bitcast float* %778 to <8 x float>*
  %780 = load <8 x float>, <8 x float>* %779, align 1, !tbaa !12
  %781 = add nuw nsw i64 %696, 56
  %782 = getelementptr inbounds float, float* %5, i64 %781
  %783 = bitcast float* %782 to <8 x float>*
  %784 = load <8 x float>, <8 x float>* %783, align 1, !tbaa !12
  %785 = add nuw nsw i64 %696, 64
  %786 = getelementptr inbounds float, float* %5, i64 %785
  %787 = bitcast float* %786 to <8 x float>*
  %788 = load <8 x float>, <8 x float>* %787, align 1, !tbaa !12
  %789 = add nuw nsw i64 %696, 72
  %790 = getelementptr inbounds float, float* %5, i64 %789
  %791 = bitcast float* %790 to <8 x float>*
  %792 = load <8 x float>, <8 x float>* %791, align 1, !tbaa !12
  %793 = add nuw nsw i64 %696, 80
  %794 = getelementptr inbounds float, float* %5, i64 %793
  %795 = bitcast float* %794 to <8 x float>*
  %796 = load <8 x float>, <8 x float>* %795, align 1, !tbaa !12
  %797 = add nuw nsw i64 %696, 88
  %798 = getelementptr inbounds float, float* %5, i64 %797
  %799 = bitcast float* %798 to <8 x float>*
  %800 = load <8 x float>, <8 x float>* %799, align 1, !tbaa !12
  %801 = add nuw nsw i64 %696, 96
  %802 = getelementptr inbounds float, float* %5, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nuw nsw i64 %696, 104
  %806 = getelementptr inbounds float, float* %5, i64 %805
  %807 = bitcast float* %806 to <8 x float>*
  %808 = load <8 x float>, <8 x float>* %807, align 1, !tbaa !12
  %809 = trunc i64 %696 to i32
  %810 = add nsw i32 %502, %809
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds float, float* %3, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %814 = load <8 x float>, <8 x float>* %813, align 1, !tbaa !12
  %815 = add nsw i32 %810, 8
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds float, float* %3, i64 %816
  %818 = bitcast float* %817 to <8 x float>*
  %819 = load <8 x float>, <8 x float>* %818, align 1, !tbaa !12
  %820 = add nsw i32 %810, 16
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float, float* %3, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %824 = load <8 x float>, <8 x float>* %823, align 1, !tbaa !12
  %825 = add nsw i32 %810, 24
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds float, float* %3, i64 %826
  %828 = bitcast float* %827 to <8 x float>*
  %829 = load <8 x float>, <8 x float>* %828, align 1, !tbaa !12
  %830 = add nsw i32 %810, 32
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds float, float* %3, i64 %831
  %833 = bitcast float* %832 to <8 x float>*
  %834 = load <8 x float>, <8 x float>* %833, align 1, !tbaa !12
  %835 = add nsw i32 %810, 40
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float, float* %3, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nsw i32 %810, 48
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds float, float* %3, i64 %841
  %843 = bitcast float* %842 to <8 x float>*
  %844 = load <8 x float>, <8 x float>* %843, align 1, !tbaa !12
  %845 = add nsw i32 %810, 56
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds float, float* %3, i64 %846
  %848 = bitcast float* %847 to <8 x float>*
  %849 = load <8 x float>, <8 x float>* %848, align 1, !tbaa !12
  %850 = add nsw i32 %810, 64
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds float, float* %3, i64 %851
  %853 = bitcast float* %852 to <8 x float>*
  %854 = load <8 x float>, <8 x float>* %853, align 1, !tbaa !12
  %855 = add nsw i32 %810, 72
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds float, float* %3, i64 %856
  %858 = bitcast float* %857 to <8 x float>*
  %859 = load <8 x float>, <8 x float>* %858, align 1, !tbaa !12
  %860 = add nsw i32 %810, 80
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds float, float* %3, i64 %861
  %863 = bitcast float* %862 to <8 x float>*
  %864 = load <8 x float>, <8 x float>* %863, align 1, !tbaa !12
  %865 = add nsw i32 %810, 88
  %866 = sext i32 %865 to i64
  %867 = getelementptr inbounds float, float* %3, i64 %866
  %868 = bitcast float* %867 to <8 x float>*
  %869 = load <8 x float>, <8 x float>* %868, align 1, !tbaa !12
  %870 = add nsw i32 %810, 96
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds float, float* %3, i64 %871
  %873 = bitcast float* %872 to <8 x float>*
  %874 = load <8 x float>, <8 x float>* %873, align 1, !tbaa !12
  %875 = add nsw i32 %810, 104
  %876 = sext i32 %875 to i64
  %877 = getelementptr inbounds float, float* %3, i64 %876
  %878 = bitcast float* %877 to <8 x float>*
  %879 = load <8 x float>, <8 x float>* %878, align 1, !tbaa !12
  %880 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %814, <8 x float> %40, <8 x float> %756) #10
  %881 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %819, <8 x float> %40, <8 x float> %760) #10
  %882 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %824, <8 x float> %40, <8 x float> %764) #10
  %883 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %829, <8 x float> %40, <8 x float> %768) #10
  %884 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %834, <8 x float> %40, <8 x float> %772) #10
  %885 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %839, <8 x float> %40, <8 x float> %776) #10
  %886 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %844, <8 x float> %40, <8 x float> %780) #10
  %887 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %849, <8 x float> %40, <8 x float> %784) #10
  %888 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %854, <8 x float> %40, <8 x float> %788) #10
  %889 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %859, <8 x float> %40, <8 x float> %792) #10
  %890 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %864, <8 x float> %40, <8 x float> %796) #10
  %891 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %869, <8 x float> %40, <8 x float> %800) #10
  %892 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %874, <8 x float> %40, <8 x float> %804) #10
  %893 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %879, <8 x float> %40, <8 x float> %808) #10
  store <8 x float> %880, <8 x float>* %755, align 1, !tbaa !12
  store <8 x float> %881, <8 x float>* %759, align 1, !tbaa !12
  store <8 x float> %882, <8 x float>* %763, align 1, !tbaa !12
  store <8 x float> %883, <8 x float>* %767, align 1, !tbaa !12
  store <8 x float> %884, <8 x float>* %771, align 1, !tbaa !12
  store <8 x float> %885, <8 x float>* %775, align 1, !tbaa !12
  store <8 x float> %886, <8 x float>* %779, align 1, !tbaa !12
  store <8 x float> %887, <8 x float>* %783, align 1, !tbaa !12
  store <8 x float> %888, <8 x float>* %787, align 1, !tbaa !12
  store <8 x float> %889, <8 x float>* %791, align 1, !tbaa !12
  store <8 x float> %890, <8 x float>* %795, align 1, !tbaa !12
  store <8 x float> %891, <8 x float>* %799, align 1, !tbaa !12
  store <8 x float> %892, <8 x float>* %803, align 1, !tbaa !12
  store <8 x float> %893, <8 x float>* %807, align 1, !tbaa !12
  %894 = add nuw nsw i64 %696, 112
  %895 = icmp ult i64 %894, %500
  br i1 %895, label %695, label %689

896:                                              ; preds = %902
  br i1 %498, label %897, label %1088

897:                                              ; preds = %896
  %898 = trunc i64 %46 to i32
  %899 = mul nsw i32 %497, %898
  %900 = sext i32 %899 to i64
  %901 = zext i32 %497 to i64
  br label %1095

902:                                              ; preds = %690, %902
  %903 = phi i64 [ 0, %690 ], [ %1086, %902 ]
  %904 = getelementptr inbounds float, float* %5, i64 %903
  %905 = getelementptr inbounds float, float* %904, i64 8
  %906 = bitcast float* %905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %906, i32 0, i32 1, i32 1)
  %907 = getelementptr inbounds float, float* %3, i64 %903
  %908 = getelementptr inbounds float, float* %907, i64 8
  %909 = bitcast float* %908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %909, i32 0, i32 1, i32 1)
  %910 = getelementptr inbounds float, float* %904, i64 16
  %911 = bitcast float* %910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %911, i32 0, i32 1, i32 1)
  %912 = getelementptr inbounds float, float* %907, i64 16
  %913 = bitcast float* %912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %913, i32 0, i32 1, i32 1)
  %914 = getelementptr inbounds float, float* %904, i64 24
  %915 = bitcast float* %914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %915, i32 0, i32 1, i32 1)
  %916 = getelementptr inbounds float, float* %907, i64 24
  %917 = bitcast float* %916 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %917, i32 0, i32 1, i32 1)
  %918 = getelementptr inbounds float, float* %904, i64 32
  %919 = bitcast float* %918 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %919, i32 0, i32 1, i32 1)
  %920 = getelementptr inbounds float, float* %907, i64 32
  %921 = bitcast float* %920 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %921, i32 0, i32 1, i32 1)
  %922 = getelementptr inbounds float, float* %904, i64 40
  %923 = bitcast float* %922 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %923, i32 0, i32 1, i32 1)
  %924 = getelementptr inbounds float, float* %907, i64 40
  %925 = bitcast float* %924 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %925, i32 0, i32 1, i32 1)
  %926 = getelementptr inbounds float, float* %904, i64 48
  %927 = bitcast float* %926 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %927, i32 0, i32 1, i32 1)
  %928 = getelementptr inbounds float, float* %907, i64 48
  %929 = bitcast float* %928 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %929, i32 0, i32 1, i32 1)
  %930 = getelementptr inbounds float, float* %904, i64 56
  %931 = bitcast float* %930 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %931, i32 0, i32 1, i32 1)
  %932 = getelementptr inbounds float, float* %907, i64 56
  %933 = bitcast float* %932 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %933, i32 0, i32 1, i32 1)
  %934 = getelementptr inbounds float, float* %904, i64 64
  %935 = bitcast float* %934 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %935, i32 0, i32 1, i32 1)
  %936 = getelementptr inbounds float, float* %907, i64 64
  %937 = bitcast float* %936 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %937, i32 0, i32 1, i32 1)
  %938 = getelementptr inbounds float, float* %904, i64 72
  %939 = bitcast float* %938 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %939, i32 0, i32 1, i32 1)
  %940 = getelementptr inbounds float, float* %907, i64 72
  %941 = bitcast float* %940 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %941, i32 0, i32 1, i32 1)
  %942 = getelementptr inbounds float, float* %904, i64 80
  %943 = bitcast float* %942 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %943, i32 0, i32 1, i32 1)
  %944 = getelementptr inbounds float, float* %907, i64 80
  %945 = bitcast float* %944 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %945, i32 0, i32 1, i32 1)
  %946 = getelementptr inbounds float, float* %904, i64 88
  %947 = bitcast float* %946 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %947, i32 0, i32 1, i32 1)
  %948 = getelementptr inbounds float, float* %907, i64 88
  %949 = bitcast float* %948 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %949, i32 0, i32 1, i32 1)
  %950 = getelementptr inbounds float, float* %904, i64 96
  %951 = bitcast float* %950 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %951, i32 0, i32 1, i32 1)
  %952 = getelementptr inbounds float, float* %907, i64 96
  %953 = bitcast float* %952 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %953, i32 0, i32 1, i32 1)
  %954 = getelementptr inbounds float, float* %904, i64 104
  %955 = bitcast float* %954 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %955, i32 0, i32 1, i32 1)
  %956 = getelementptr inbounds float, float* %907, i64 104
  %957 = bitcast float* %956 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %957, i32 0, i32 1, i32 1)
  %958 = getelementptr inbounds float, float* %904, i64 112
  %959 = bitcast float* %958 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %959, i32 0, i32 1, i32 1)
  %960 = getelementptr inbounds float, float* %907, i64 112
  %961 = bitcast float* %960 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %961, i32 0, i32 1, i32 1)
  %962 = bitcast float* %904 to <8 x float>*
  %963 = load <8 x float>, <8 x float>* %962, align 1, !tbaa !12
  %964 = or i64 %903, 8
  %965 = getelementptr inbounds float, float* %5, i64 %964
  %966 = bitcast float* %965 to <8 x float>*
  %967 = load <8 x float>, <8 x float>* %966, align 1, !tbaa !12
  %968 = add nuw nsw i64 %903, 16
  %969 = getelementptr inbounds float, float* %5, i64 %968
  %970 = bitcast float* %969 to <8 x float>*
  %971 = load <8 x float>, <8 x float>* %970, align 1, !tbaa !12
  %972 = add nuw nsw i64 %903, 24
  %973 = getelementptr inbounds float, float* %5, i64 %972
  %974 = bitcast float* %973 to <8 x float>*
  %975 = load <8 x float>, <8 x float>* %974, align 1, !tbaa !12
  %976 = add nuw nsw i64 %903, 32
  %977 = getelementptr inbounds float, float* %5, i64 %976
  %978 = bitcast float* %977 to <8 x float>*
  %979 = load <8 x float>, <8 x float>* %978, align 1, !tbaa !12
  %980 = add nuw nsw i64 %903, 40
  %981 = getelementptr inbounds float, float* %5, i64 %980
  %982 = bitcast float* %981 to <8 x float>*
  %983 = load <8 x float>, <8 x float>* %982, align 1, !tbaa !12
  %984 = add nuw nsw i64 %903, 48
  %985 = getelementptr inbounds float, float* %5, i64 %984
  %986 = bitcast float* %985 to <8 x float>*
  %987 = load <8 x float>, <8 x float>* %986, align 1, !tbaa !12
  %988 = add nuw nsw i64 %903, 56
  %989 = getelementptr inbounds float, float* %5, i64 %988
  %990 = bitcast float* %989 to <8 x float>*
  %991 = load <8 x float>, <8 x float>* %990, align 1, !tbaa !12
  %992 = add nuw nsw i64 %903, 64
  %993 = getelementptr inbounds float, float* %5, i64 %992
  %994 = bitcast float* %993 to <8 x float>*
  %995 = load <8 x float>, <8 x float>* %994, align 1, !tbaa !12
  %996 = add nuw nsw i64 %903, 72
  %997 = getelementptr inbounds float, float* %5, i64 %996
  %998 = bitcast float* %997 to <8 x float>*
  %999 = load <8 x float>, <8 x float>* %998, align 1, !tbaa !12
  %1000 = add nuw nsw i64 %903, 80
  %1001 = getelementptr inbounds float, float* %5, i64 %1000
  %1002 = bitcast float* %1001 to <8 x float>*
  %1003 = load <8 x float>, <8 x float>* %1002, align 1, !tbaa !12
  %1004 = add nuw nsw i64 %903, 88
  %1005 = getelementptr inbounds float, float* %5, i64 %1004
  %1006 = bitcast float* %1005 to <8 x float>*
  %1007 = load <8 x float>, <8 x float>* %1006, align 1, !tbaa !12
  %1008 = add nuw nsw i64 %903, 96
  %1009 = getelementptr inbounds float, float* %5, i64 %1008
  %1010 = bitcast float* %1009 to <8 x float>*
  %1011 = load <8 x float>, <8 x float>* %1010, align 1, !tbaa !12
  %1012 = add nuw nsw i64 %903, 104
  %1013 = getelementptr inbounds float, float* %5, i64 %1012
  %1014 = bitcast float* %1013 to <8 x float>*
  %1015 = load <8 x float>, <8 x float>* %1014, align 1, !tbaa !12
  %1016 = add nsw i64 %903, %693
  %1017 = getelementptr inbounds float, float* %3, i64 %1016
  %1018 = bitcast float* %1017 to <8 x float>*
  %1019 = load <8 x float>, <8 x float>* %1018, align 1, !tbaa !12
  %1020 = add nsw i64 %1016, 8
  %1021 = getelementptr inbounds float, float* %3, i64 %1020
  %1022 = bitcast float* %1021 to <8 x float>*
  %1023 = load <8 x float>, <8 x float>* %1022, align 1, !tbaa !12
  %1024 = add nsw i64 %1016, 16
  %1025 = getelementptr inbounds float, float* %3, i64 %1024
  %1026 = bitcast float* %1025 to <8 x float>*
  %1027 = load <8 x float>, <8 x float>* %1026, align 1, !tbaa !12
  %1028 = add nsw i64 %1016, 24
  %1029 = getelementptr inbounds float, float* %3, i64 %1028
  %1030 = bitcast float* %1029 to <8 x float>*
  %1031 = load <8 x float>, <8 x float>* %1030, align 1, !tbaa !12
  %1032 = add nsw i64 %1016, 32
  %1033 = getelementptr inbounds float, float* %3, i64 %1032
  %1034 = bitcast float* %1033 to <8 x float>*
  %1035 = load <8 x float>, <8 x float>* %1034, align 1, !tbaa !12
  %1036 = add nsw i64 %1016, 40
  %1037 = getelementptr inbounds float, float* %3, i64 %1036
  %1038 = bitcast float* %1037 to <8 x float>*
  %1039 = load <8 x float>, <8 x float>* %1038, align 1, !tbaa !12
  %1040 = add nsw i64 %1016, 48
  %1041 = getelementptr inbounds float, float* %3, i64 %1040
  %1042 = bitcast float* %1041 to <8 x float>*
  %1043 = load <8 x float>, <8 x float>* %1042, align 1, !tbaa !12
  %1044 = add nsw i64 %1016, 56
  %1045 = getelementptr inbounds float, float* %3, i64 %1044
  %1046 = bitcast float* %1045 to <8 x float>*
  %1047 = load <8 x float>, <8 x float>* %1046, align 1, !tbaa !12
  %1048 = add nsw i64 %1016, 64
  %1049 = getelementptr inbounds float, float* %3, i64 %1048
  %1050 = bitcast float* %1049 to <8 x float>*
  %1051 = load <8 x float>, <8 x float>* %1050, align 1, !tbaa !12
  %1052 = add nsw i64 %1016, 72
  %1053 = getelementptr inbounds float, float* %3, i64 %1052
  %1054 = bitcast float* %1053 to <8 x float>*
  %1055 = load <8 x float>, <8 x float>* %1054, align 1, !tbaa !12
  %1056 = add nsw i64 %1016, 80
  %1057 = getelementptr inbounds float, float* %3, i64 %1056
  %1058 = bitcast float* %1057 to <8 x float>*
  %1059 = load <8 x float>, <8 x float>* %1058, align 1, !tbaa !12
  %1060 = add nsw i64 %1016, 88
  %1061 = getelementptr inbounds float, float* %3, i64 %1060
  %1062 = bitcast float* %1061 to <8 x float>*
  %1063 = load <8 x float>, <8 x float>* %1062, align 1, !tbaa !12
  %1064 = add nsw i64 %1016, 96
  %1065 = getelementptr inbounds float, float* %3, i64 %1064
  %1066 = bitcast float* %1065 to <8 x float>*
  %1067 = load <8 x float>, <8 x float>* %1066, align 1, !tbaa !12
  %1068 = add nsw i64 %1016, 104
  %1069 = getelementptr inbounds float, float* %3, i64 %1068
  %1070 = bitcast float* %1069 to <8 x float>*
  %1071 = load <8 x float>, <8 x float>* %1070, align 1, !tbaa !12
  %1072 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1019, <8 x float> %45, <8 x float> %963) #10
  %1073 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1023, <8 x float> %45, <8 x float> %967) #10
  %1074 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1027, <8 x float> %45, <8 x float> %971) #10
  %1075 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1031, <8 x float> %45, <8 x float> %975) #10
  %1076 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1035, <8 x float> %45, <8 x float> %979) #10
  %1077 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1039, <8 x float> %45, <8 x float> %983) #10
  %1078 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1043, <8 x float> %45, <8 x float> %987) #10
  %1079 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1047, <8 x float> %45, <8 x float> %991) #10
  %1080 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1051, <8 x float> %45, <8 x float> %995) #10
  %1081 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1055, <8 x float> %45, <8 x float> %999) #10
  %1082 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1059, <8 x float> %45, <8 x float> %1003) #10
  %1083 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1063, <8 x float> %45, <8 x float> %1007) #10
  %1084 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1067, <8 x float> %45, <8 x float> %1011) #10
  %1085 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1071, <8 x float> %45, <8 x float> %1015) #10
  store <8 x float> %1072, <8 x float>* %962, align 1, !tbaa !12
  store <8 x float> %1073, <8 x float>* %966, align 1, !tbaa !12
  store <8 x float> %1074, <8 x float>* %970, align 1, !tbaa !12
  store <8 x float> %1075, <8 x float>* %974, align 1, !tbaa !12
  store <8 x float> %1076, <8 x float>* %978, align 1, !tbaa !12
  store <8 x float> %1077, <8 x float>* %982, align 1, !tbaa !12
  store <8 x float> %1078, <8 x float>* %986, align 1, !tbaa !12
  store <8 x float> %1079, <8 x float>* %990, align 1, !tbaa !12
  store <8 x float> %1080, <8 x float>* %994, align 1, !tbaa !12
  store <8 x float> %1081, <8 x float>* %998, align 1, !tbaa !12
  store <8 x float> %1082, <8 x float>* %1002, align 1, !tbaa !12
  store <8 x float> %1083, <8 x float>* %1006, align 1, !tbaa !12
  store <8 x float> %1084, <8 x float>* %1010, align 1, !tbaa !12
  store <8 x float> %1085, <8 x float>* %1014, align 1, !tbaa !12
  %1086 = add nuw nsw i64 %903, 112
  %1087 = icmp ult i64 %1086, %694
  br i1 %1087, label %902, label %896

1088:                                             ; preds = %1095, %689, %896
  %1089 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1090 = icmp sgt i32 %1089, 0
  br i1 %1090, label %1091, label %2672

1091:                                             ; preds = %1088
  %1092 = zext i32 %1089 to i64
  %1093 = trunc i64 %51 to i32
  %1094 = mul nsw i32 %1089, %1093
  br label %1287

1095:                                             ; preds = %897, %1095
  %1096 = phi i64 [ 0, %897 ], [ %1279, %1095 ]
  %1097 = getelementptr inbounds float, float* %5, i64 %1096
  %1098 = getelementptr inbounds float, float* %1097, i64 8
  %1099 = bitcast float* %1098 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1099, i32 0, i32 1, i32 1)
  %1100 = getelementptr inbounds float, float* %3, i64 %1096
  %1101 = getelementptr inbounds float, float* %1100, i64 8
  %1102 = bitcast float* %1101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1102, i32 0, i32 1, i32 1)
  %1103 = getelementptr inbounds float, float* %1097, i64 16
  %1104 = bitcast float* %1103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1104, i32 0, i32 1, i32 1)
  %1105 = getelementptr inbounds float, float* %1100, i64 16
  %1106 = bitcast float* %1105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1106, i32 0, i32 1, i32 1)
  %1107 = getelementptr inbounds float, float* %1097, i64 24
  %1108 = bitcast float* %1107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1108, i32 0, i32 1, i32 1)
  %1109 = getelementptr inbounds float, float* %1100, i64 24
  %1110 = bitcast float* %1109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1110, i32 0, i32 1, i32 1)
  %1111 = getelementptr inbounds float, float* %1097, i64 32
  %1112 = bitcast float* %1111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1112, i32 0, i32 1, i32 1)
  %1113 = getelementptr inbounds float, float* %1100, i64 32
  %1114 = bitcast float* %1113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1114, i32 0, i32 1, i32 1)
  %1115 = getelementptr inbounds float, float* %1097, i64 40
  %1116 = bitcast float* %1115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1116, i32 0, i32 1, i32 1)
  %1117 = getelementptr inbounds float, float* %1100, i64 40
  %1118 = bitcast float* %1117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1118, i32 0, i32 1, i32 1)
  %1119 = getelementptr inbounds float, float* %1097, i64 48
  %1120 = bitcast float* %1119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1120, i32 0, i32 1, i32 1)
  %1121 = getelementptr inbounds float, float* %1100, i64 48
  %1122 = bitcast float* %1121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1122, i32 0, i32 1, i32 1)
  %1123 = getelementptr inbounds float, float* %1097, i64 56
  %1124 = bitcast float* %1123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1124, i32 0, i32 1, i32 1)
  %1125 = getelementptr inbounds float, float* %1100, i64 56
  %1126 = bitcast float* %1125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1126, i32 0, i32 1, i32 1)
  %1127 = getelementptr inbounds float, float* %1097, i64 64
  %1128 = bitcast float* %1127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1128, i32 0, i32 1, i32 1)
  %1129 = getelementptr inbounds float, float* %1100, i64 64
  %1130 = bitcast float* %1129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1130, i32 0, i32 1, i32 1)
  %1131 = getelementptr inbounds float, float* %1097, i64 72
  %1132 = bitcast float* %1131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1132, i32 0, i32 1, i32 1)
  %1133 = getelementptr inbounds float, float* %1100, i64 72
  %1134 = bitcast float* %1133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1134, i32 0, i32 1, i32 1)
  %1135 = getelementptr inbounds float, float* %1097, i64 80
  %1136 = bitcast float* %1135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1136, i32 0, i32 1, i32 1)
  %1137 = getelementptr inbounds float, float* %1100, i64 80
  %1138 = bitcast float* %1137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1138, i32 0, i32 1, i32 1)
  %1139 = getelementptr inbounds float, float* %1097, i64 88
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = getelementptr inbounds float, float* %1100, i64 88
  %1142 = bitcast float* %1141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1142, i32 0, i32 1, i32 1)
  %1143 = getelementptr inbounds float, float* %1097, i64 96
  %1144 = bitcast float* %1143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1144, i32 0, i32 1, i32 1)
  %1145 = getelementptr inbounds float, float* %1100, i64 96
  %1146 = bitcast float* %1145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1146, i32 0, i32 1, i32 1)
  %1147 = getelementptr inbounds float, float* %1097, i64 104
  %1148 = bitcast float* %1147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1148, i32 0, i32 1, i32 1)
  %1149 = getelementptr inbounds float, float* %1100, i64 104
  %1150 = bitcast float* %1149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1150, i32 0, i32 1, i32 1)
  %1151 = getelementptr inbounds float, float* %1097, i64 112
  %1152 = bitcast float* %1151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1152, i32 0, i32 1, i32 1)
  %1153 = getelementptr inbounds float, float* %1100, i64 112
  %1154 = bitcast float* %1153 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1154, i32 0, i32 1, i32 1)
  %1155 = bitcast float* %1097 to <8 x float>*
  %1156 = load <8 x float>, <8 x float>* %1155, align 1, !tbaa !12
  %1157 = or i64 %1096, 8
  %1158 = getelementptr inbounds float, float* %5, i64 %1157
  %1159 = bitcast float* %1158 to <8 x float>*
  %1160 = load <8 x float>, <8 x float>* %1159, align 1, !tbaa !12
  %1161 = add nuw nsw i64 %1096, 16
  %1162 = getelementptr inbounds float, float* %5, i64 %1161
  %1163 = bitcast float* %1162 to <8 x float>*
  %1164 = load <8 x float>, <8 x float>* %1163, align 1, !tbaa !12
  %1165 = add nuw nsw i64 %1096, 24
  %1166 = getelementptr inbounds float, float* %5, i64 %1165
  %1167 = bitcast float* %1166 to <8 x float>*
  %1168 = load <8 x float>, <8 x float>* %1167, align 1, !tbaa !12
  %1169 = add nuw nsw i64 %1096, 32
  %1170 = getelementptr inbounds float, float* %5, i64 %1169
  %1171 = bitcast float* %1170 to <8 x float>*
  %1172 = load <8 x float>, <8 x float>* %1171, align 1, !tbaa !12
  %1173 = add nuw nsw i64 %1096, 40
  %1174 = getelementptr inbounds float, float* %5, i64 %1173
  %1175 = bitcast float* %1174 to <8 x float>*
  %1176 = load <8 x float>, <8 x float>* %1175, align 1, !tbaa !12
  %1177 = add nuw nsw i64 %1096, 48
  %1178 = getelementptr inbounds float, float* %5, i64 %1177
  %1179 = bitcast float* %1178 to <8 x float>*
  %1180 = load <8 x float>, <8 x float>* %1179, align 1, !tbaa !12
  %1181 = add nuw nsw i64 %1096, 56
  %1182 = getelementptr inbounds float, float* %5, i64 %1181
  %1183 = bitcast float* %1182 to <8 x float>*
  %1184 = load <8 x float>, <8 x float>* %1183, align 1, !tbaa !12
  %1185 = add nuw nsw i64 %1096, 64
  %1186 = getelementptr inbounds float, float* %5, i64 %1185
  %1187 = bitcast float* %1186 to <8 x float>*
  %1188 = load <8 x float>, <8 x float>* %1187, align 1, !tbaa !12
  %1189 = add nuw nsw i64 %1096, 72
  %1190 = getelementptr inbounds float, float* %5, i64 %1189
  %1191 = bitcast float* %1190 to <8 x float>*
  %1192 = load <8 x float>, <8 x float>* %1191, align 1, !tbaa !12
  %1193 = add nuw nsw i64 %1096, 80
  %1194 = getelementptr inbounds float, float* %5, i64 %1193
  %1195 = bitcast float* %1194 to <8 x float>*
  %1196 = load <8 x float>, <8 x float>* %1195, align 1, !tbaa !12
  %1197 = add nuw nsw i64 %1096, 88
  %1198 = getelementptr inbounds float, float* %5, i64 %1197
  %1199 = bitcast float* %1198 to <8 x float>*
  %1200 = load <8 x float>, <8 x float>* %1199, align 1, !tbaa !12
  %1201 = add nuw nsw i64 %1096, 96
  %1202 = getelementptr inbounds float, float* %5, i64 %1201
  %1203 = bitcast float* %1202 to <8 x float>*
  %1204 = load <8 x float>, <8 x float>* %1203, align 1, !tbaa !12
  %1205 = add nuw nsw i64 %1096, 104
  %1206 = getelementptr inbounds float, float* %5, i64 %1205
  %1207 = bitcast float* %1206 to <8 x float>*
  %1208 = load <8 x float>, <8 x float>* %1207, align 1, !tbaa !12
  %1209 = add nsw i64 %1096, %900
  %1210 = getelementptr inbounds float, float* %3, i64 %1209
  %1211 = bitcast float* %1210 to <8 x float>*
  %1212 = load <8 x float>, <8 x float>* %1211, align 1, !tbaa !12
  %1213 = add nsw i64 %1209, 8
  %1214 = getelementptr inbounds float, float* %3, i64 %1213
  %1215 = bitcast float* %1214 to <8 x float>*
  %1216 = load <8 x float>, <8 x float>* %1215, align 1, !tbaa !12
  %1217 = add nsw i64 %1209, 16
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i64 %1209, 24
  %1222 = getelementptr inbounds float, float* %3, i64 %1221
  %1223 = bitcast float* %1222 to <8 x float>*
  %1224 = load <8 x float>, <8 x float>* %1223, align 1, !tbaa !12
  %1225 = add nsw i64 %1209, 32
  %1226 = getelementptr inbounds float, float* %3, i64 %1225
  %1227 = bitcast float* %1226 to <8 x float>*
  %1228 = load <8 x float>, <8 x float>* %1227, align 1, !tbaa !12
  %1229 = add nsw i64 %1209, 40
  %1230 = getelementptr inbounds float, float* %3, i64 %1229
  %1231 = bitcast float* %1230 to <8 x float>*
  %1232 = load <8 x float>, <8 x float>* %1231, align 1, !tbaa !12
  %1233 = add nsw i64 %1209, 48
  %1234 = getelementptr inbounds float, float* %3, i64 %1233
  %1235 = bitcast float* %1234 to <8 x float>*
  %1236 = load <8 x float>, <8 x float>* %1235, align 1, !tbaa !12
  %1237 = add nsw i64 %1209, 56
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i64 %1209, 64
  %1242 = getelementptr inbounds float, float* %3, i64 %1241
  %1243 = bitcast float* %1242 to <8 x float>*
  %1244 = load <8 x float>, <8 x float>* %1243, align 1, !tbaa !12
  %1245 = add nsw i64 %1209, 72
  %1246 = getelementptr inbounds float, float* %3, i64 %1245
  %1247 = bitcast float* %1246 to <8 x float>*
  %1248 = load <8 x float>, <8 x float>* %1247, align 1, !tbaa !12
  %1249 = add nsw i64 %1209, 80
  %1250 = getelementptr inbounds float, float* %3, i64 %1249
  %1251 = bitcast float* %1250 to <8 x float>*
  %1252 = load <8 x float>, <8 x float>* %1251, align 1, !tbaa !12
  %1253 = add nsw i64 %1209, 88
  %1254 = getelementptr inbounds float, float* %3, i64 %1253
  %1255 = bitcast float* %1254 to <8 x float>*
  %1256 = load <8 x float>, <8 x float>* %1255, align 1, !tbaa !12
  %1257 = add nsw i64 %1209, 96
  %1258 = getelementptr inbounds float, float* %3, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nsw i64 %1209, 104
  %1262 = getelementptr inbounds float, float* %3, i64 %1261
  %1263 = bitcast float* %1262 to <8 x float>*
  %1264 = load <8 x float>, <8 x float>* %1263, align 1, !tbaa !12
  %1265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1212, <8 x float> %50, <8 x float> %1156) #10
  %1266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1216, <8 x float> %50, <8 x float> %1160) #10
  %1267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %50, <8 x float> %1164) #10
  %1268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1224, <8 x float> %50, <8 x float> %1168) #10
  %1269 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1228, <8 x float> %50, <8 x float> %1172) #10
  %1270 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1232, <8 x float> %50, <8 x float> %1176) #10
  %1271 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1236, <8 x float> %50, <8 x float> %1180) #10
  %1272 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %50, <8 x float> %1184) #10
  %1273 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1244, <8 x float> %50, <8 x float> %1188) #10
  %1274 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1248, <8 x float> %50, <8 x float> %1192) #10
  %1275 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1252, <8 x float> %50, <8 x float> %1196) #10
  %1276 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1256, <8 x float> %50, <8 x float> %1200) #10
  %1277 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1260, <8 x float> %50, <8 x float> %1204) #10
  %1278 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1264, <8 x float> %50, <8 x float> %1208) #10
  store <8 x float> %1265, <8 x float>* %1155, align 1, !tbaa !12
  store <8 x float> %1266, <8 x float>* %1159, align 1, !tbaa !12
  store <8 x float> %1267, <8 x float>* %1163, align 1, !tbaa !12
  store <8 x float> %1268, <8 x float>* %1167, align 1, !tbaa !12
  store <8 x float> %1269, <8 x float>* %1171, align 1, !tbaa !12
  store <8 x float> %1270, <8 x float>* %1175, align 1, !tbaa !12
  store <8 x float> %1271, <8 x float>* %1179, align 1, !tbaa !12
  store <8 x float> %1272, <8 x float>* %1183, align 1, !tbaa !12
  store <8 x float> %1273, <8 x float>* %1187, align 1, !tbaa !12
  store <8 x float> %1274, <8 x float>* %1191, align 1, !tbaa !12
  store <8 x float> %1275, <8 x float>* %1195, align 1, !tbaa !12
  store <8 x float> %1276, <8 x float>* %1199, align 1, !tbaa !12
  store <8 x float> %1277, <8 x float>* %1203, align 1, !tbaa !12
  store <8 x float> %1278, <8 x float>* %1207, align 1, !tbaa !12
  %1279 = add nuw nsw i64 %1096, 112
  %1280 = icmp ult i64 %1279, %901
  br i1 %1280, label %1095, label %1088

1281:                                             ; preds = %1287
  br i1 %1090, label %1282, label %1680

1282:                                             ; preds = %1281
  %1283 = trunc i64 %56 to i32
  %1284 = mul nsw i32 %1089, %1283
  %1285 = sext i32 %1284 to i64
  %1286 = zext i32 %1089 to i64
  br label %1494

1287:                                             ; preds = %1091, %1287
  %1288 = phi i64 [ 0, %1091 ], [ %1486, %1287 ]
  %1289 = getelementptr inbounds float, float* %5, i64 %1288
  %1290 = getelementptr inbounds float, float* %1289, i64 8
  %1291 = bitcast float* %1290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1291, i32 0, i32 1, i32 1)
  %1292 = getelementptr inbounds float, float* %3, i64 %1288
  %1293 = getelementptr inbounds float, float* %1292, i64 8
  %1294 = bitcast float* %1293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1294, i32 0, i32 1, i32 1)
  %1295 = getelementptr inbounds float, float* %1289, i64 16
  %1296 = bitcast float* %1295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1296, i32 0, i32 1, i32 1)
  %1297 = getelementptr inbounds float, float* %1292, i64 16
  %1298 = bitcast float* %1297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1298, i32 0, i32 1, i32 1)
  %1299 = getelementptr inbounds float, float* %1289, i64 24
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %1292, i64 24
  %1302 = bitcast float* %1301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1302, i32 0, i32 1, i32 1)
  %1303 = getelementptr inbounds float, float* %1289, i64 32
  %1304 = bitcast float* %1303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1304, i32 0, i32 1, i32 1)
  %1305 = getelementptr inbounds float, float* %1292, i64 32
  %1306 = bitcast float* %1305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1306, i32 0, i32 1, i32 1)
  %1307 = getelementptr inbounds float, float* %1289, i64 40
  %1308 = bitcast float* %1307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1308, i32 0, i32 1, i32 1)
  %1309 = getelementptr inbounds float, float* %1292, i64 40
  %1310 = bitcast float* %1309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1310, i32 0, i32 1, i32 1)
  %1311 = getelementptr inbounds float, float* %1289, i64 48
  %1312 = bitcast float* %1311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1312, i32 0, i32 1, i32 1)
  %1313 = getelementptr inbounds float, float* %1292, i64 48
  %1314 = bitcast float* %1313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1314, i32 0, i32 1, i32 1)
  %1315 = getelementptr inbounds float, float* %1289, i64 56
  %1316 = bitcast float* %1315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1316, i32 0, i32 1, i32 1)
  %1317 = getelementptr inbounds float, float* %1292, i64 56
  %1318 = bitcast float* %1317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1318, i32 0, i32 1, i32 1)
  %1319 = getelementptr inbounds float, float* %1289, i64 64
  %1320 = bitcast float* %1319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1320, i32 0, i32 1, i32 1)
  %1321 = getelementptr inbounds float, float* %1292, i64 64
  %1322 = bitcast float* %1321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1322, i32 0, i32 1, i32 1)
  %1323 = getelementptr inbounds float, float* %1289, i64 72
  %1324 = bitcast float* %1323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1324, i32 0, i32 1, i32 1)
  %1325 = getelementptr inbounds float, float* %1292, i64 72
  %1326 = bitcast float* %1325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1326, i32 0, i32 1, i32 1)
  %1327 = getelementptr inbounds float, float* %1289, i64 80
  %1328 = bitcast float* %1327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1328, i32 0, i32 1, i32 1)
  %1329 = getelementptr inbounds float, float* %1292, i64 80
  %1330 = bitcast float* %1329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1330, i32 0, i32 1, i32 1)
  %1331 = getelementptr inbounds float, float* %1289, i64 88
  %1332 = bitcast float* %1331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1332, i32 0, i32 1, i32 1)
  %1333 = getelementptr inbounds float, float* %1292, i64 88
  %1334 = bitcast float* %1333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1334, i32 0, i32 1, i32 1)
  %1335 = getelementptr inbounds float, float* %1289, i64 96
  %1336 = bitcast float* %1335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1336, i32 0, i32 1, i32 1)
  %1337 = getelementptr inbounds float, float* %1292, i64 96
  %1338 = bitcast float* %1337 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1338, i32 0, i32 1, i32 1)
  %1339 = getelementptr inbounds float, float* %1289, i64 104
  %1340 = bitcast float* %1339 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1340, i32 0, i32 1, i32 1)
  %1341 = getelementptr inbounds float, float* %1292, i64 104
  %1342 = bitcast float* %1341 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1342, i32 0, i32 1, i32 1)
  %1343 = getelementptr inbounds float, float* %1289, i64 112
  %1344 = bitcast float* %1343 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1344, i32 0, i32 1, i32 1)
  %1345 = getelementptr inbounds float, float* %1292, i64 112
  %1346 = bitcast float* %1345 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1346, i32 0, i32 1, i32 1)
  %1347 = bitcast float* %1289 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = or i64 %1288, 8
  %1350 = getelementptr inbounds float, float* %5, i64 %1349
  %1351 = bitcast float* %1350 to <8 x float>*
  %1352 = load <8 x float>, <8 x float>* %1351, align 1, !tbaa !12
  %1353 = add nuw nsw i64 %1288, 16
  %1354 = getelementptr inbounds float, float* %5, i64 %1353
  %1355 = bitcast float* %1354 to <8 x float>*
  %1356 = load <8 x float>, <8 x float>* %1355, align 1, !tbaa !12
  %1357 = add nuw nsw i64 %1288, 24
  %1358 = getelementptr inbounds float, float* %5, i64 %1357
  %1359 = bitcast float* %1358 to <8 x float>*
  %1360 = load <8 x float>, <8 x float>* %1359, align 1, !tbaa !12
  %1361 = add nuw nsw i64 %1288, 32
  %1362 = getelementptr inbounds float, float* %5, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nuw nsw i64 %1288, 40
  %1366 = getelementptr inbounds float, float* %5, i64 %1365
  %1367 = bitcast float* %1366 to <8 x float>*
  %1368 = load <8 x float>, <8 x float>* %1367, align 1, !tbaa !12
  %1369 = add nuw nsw i64 %1288, 48
  %1370 = getelementptr inbounds float, float* %5, i64 %1369
  %1371 = bitcast float* %1370 to <8 x float>*
  %1372 = load <8 x float>, <8 x float>* %1371, align 1, !tbaa !12
  %1373 = add nuw nsw i64 %1288, 56
  %1374 = getelementptr inbounds float, float* %5, i64 %1373
  %1375 = bitcast float* %1374 to <8 x float>*
  %1376 = load <8 x float>, <8 x float>* %1375, align 1, !tbaa !12
  %1377 = add nuw nsw i64 %1288, 64
  %1378 = getelementptr inbounds float, float* %5, i64 %1377
  %1379 = bitcast float* %1378 to <8 x float>*
  %1380 = load <8 x float>, <8 x float>* %1379, align 1, !tbaa !12
  %1381 = add nuw nsw i64 %1288, 72
  %1382 = getelementptr inbounds float, float* %5, i64 %1381
  %1383 = bitcast float* %1382 to <8 x float>*
  %1384 = load <8 x float>, <8 x float>* %1383, align 1, !tbaa !12
  %1385 = add nuw nsw i64 %1288, 80
  %1386 = getelementptr inbounds float, float* %5, i64 %1385
  %1387 = bitcast float* %1386 to <8 x float>*
  %1388 = load <8 x float>, <8 x float>* %1387, align 1, !tbaa !12
  %1389 = add nuw nsw i64 %1288, 88
  %1390 = getelementptr inbounds float, float* %5, i64 %1389
  %1391 = bitcast float* %1390 to <8 x float>*
  %1392 = load <8 x float>, <8 x float>* %1391, align 1, !tbaa !12
  %1393 = add nuw nsw i64 %1288, 96
  %1394 = getelementptr inbounds float, float* %5, i64 %1393
  %1395 = bitcast float* %1394 to <8 x float>*
  %1396 = load <8 x float>, <8 x float>* %1395, align 1, !tbaa !12
  %1397 = add nuw nsw i64 %1288, 104
  %1398 = getelementptr inbounds float, float* %5, i64 %1397
  %1399 = bitcast float* %1398 to <8 x float>*
  %1400 = load <8 x float>, <8 x float>* %1399, align 1, !tbaa !12
  %1401 = trunc i64 %1288 to i32
  %1402 = add nsw i32 %1094, %1401
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds float, float* %3, i64 %1403
  %1405 = bitcast float* %1404 to <8 x float>*
  %1406 = load <8 x float>, <8 x float>* %1405, align 1, !tbaa !12
  %1407 = add nsw i32 %1402, 8
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds float, float* %3, i64 %1408
  %1410 = bitcast float* %1409 to <8 x float>*
  %1411 = load <8 x float>, <8 x float>* %1410, align 1, !tbaa !12
  %1412 = add nsw i32 %1402, 16
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds float, float* %3, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = add nsw i32 %1402, 24
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds float, float* %3, i64 %1418
  %1420 = bitcast float* %1419 to <8 x float>*
  %1421 = load <8 x float>, <8 x float>* %1420, align 1, !tbaa !12
  %1422 = add nsw i32 %1402, 32
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds float, float* %3, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = add nsw i32 %1402, 40
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds float, float* %3, i64 %1428
  %1430 = bitcast float* %1429 to <8 x float>*
  %1431 = load <8 x float>, <8 x float>* %1430, align 1, !tbaa !12
  %1432 = add nsw i32 %1402, 48
  %1433 = sext i32 %1432 to i64
  %1434 = getelementptr inbounds float, float* %3, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = add nsw i32 %1402, 56
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds float, float* %3, i64 %1438
  %1440 = bitcast float* %1439 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = add nsw i32 %1402, 64
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds float, float* %3, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nsw i32 %1402, 72
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds float, float* %3, i64 %1448
  %1450 = bitcast float* %1449 to <8 x float>*
  %1451 = load <8 x float>, <8 x float>* %1450, align 1, !tbaa !12
  %1452 = add nsw i32 %1402, 80
  %1453 = sext i32 %1452 to i64
  %1454 = getelementptr inbounds float, float* %3, i64 %1453
  %1455 = bitcast float* %1454 to <8 x float>*
  %1456 = load <8 x float>, <8 x float>* %1455, align 1, !tbaa !12
  %1457 = add nsw i32 %1402, 88
  %1458 = sext i32 %1457 to i64
  %1459 = getelementptr inbounds float, float* %3, i64 %1458
  %1460 = bitcast float* %1459 to <8 x float>*
  %1461 = load <8 x float>, <8 x float>* %1460, align 1, !tbaa !12
  %1462 = add nsw i32 %1402, 96
  %1463 = sext i32 %1462 to i64
  %1464 = getelementptr inbounds float, float* %3, i64 %1463
  %1465 = bitcast float* %1464 to <8 x float>*
  %1466 = load <8 x float>, <8 x float>* %1465, align 1, !tbaa !12
  %1467 = add nsw i32 %1402, 104
  %1468 = sext i32 %1467 to i64
  %1469 = getelementptr inbounds float, float* %3, i64 %1468
  %1470 = bitcast float* %1469 to <8 x float>*
  %1471 = load <8 x float>, <8 x float>* %1470, align 1, !tbaa !12
  %1472 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1406, <8 x float> %55, <8 x float> %1348) #10
  %1473 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1411, <8 x float> %55, <8 x float> %1352) #10
  %1474 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1416, <8 x float> %55, <8 x float> %1356) #10
  %1475 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1421, <8 x float> %55, <8 x float> %1360) #10
  %1476 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1426, <8 x float> %55, <8 x float> %1364) #10
  %1477 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1431, <8 x float> %55, <8 x float> %1368) #10
  %1478 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1436, <8 x float> %55, <8 x float> %1372) #10
  %1479 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1441, <8 x float> %55, <8 x float> %1376) #10
  %1480 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1446, <8 x float> %55, <8 x float> %1380) #10
  %1481 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1451, <8 x float> %55, <8 x float> %1384) #10
  %1482 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1456, <8 x float> %55, <8 x float> %1388) #10
  %1483 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1461, <8 x float> %55, <8 x float> %1392) #10
  %1484 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1466, <8 x float> %55, <8 x float> %1396) #10
  %1485 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1471, <8 x float> %55, <8 x float> %1400) #10
  store <8 x float> %1472, <8 x float>* %1347, align 1, !tbaa !12
  store <8 x float> %1473, <8 x float>* %1351, align 1, !tbaa !12
  store <8 x float> %1474, <8 x float>* %1355, align 1, !tbaa !12
  store <8 x float> %1475, <8 x float>* %1359, align 1, !tbaa !12
  store <8 x float> %1476, <8 x float>* %1363, align 1, !tbaa !12
  store <8 x float> %1477, <8 x float>* %1367, align 1, !tbaa !12
  store <8 x float> %1478, <8 x float>* %1371, align 1, !tbaa !12
  store <8 x float> %1479, <8 x float>* %1375, align 1, !tbaa !12
  store <8 x float> %1480, <8 x float>* %1379, align 1, !tbaa !12
  store <8 x float> %1481, <8 x float>* %1383, align 1, !tbaa !12
  store <8 x float> %1482, <8 x float>* %1387, align 1, !tbaa !12
  store <8 x float> %1483, <8 x float>* %1391, align 1, !tbaa !12
  store <8 x float> %1484, <8 x float>* %1395, align 1, !tbaa !12
  store <8 x float> %1485, <8 x float>* %1399, align 1, !tbaa !12
  %1486 = add nuw nsw i64 %1288, 112
  %1487 = icmp ult i64 %1486, %1092
  br i1 %1487, label %1287, label %1281

1488:                                             ; preds = %1494
  br i1 %1090, label %1489, label %1680

1489:                                             ; preds = %1488
  %1490 = trunc i64 %61 to i32
  %1491 = mul nsw i32 %1089, %1490
  %1492 = sext i32 %1491 to i64
  %1493 = zext i32 %1089 to i64
  br label %1687

1494:                                             ; preds = %1282, %1494
  %1495 = phi i64 [ 0, %1282 ], [ %1678, %1494 ]
  %1496 = getelementptr inbounds float, float* %5, i64 %1495
  %1497 = getelementptr inbounds float, float* %1496, i64 8
  %1498 = bitcast float* %1497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1498, i32 0, i32 1, i32 1)
  %1499 = getelementptr inbounds float, float* %3, i64 %1495
  %1500 = getelementptr inbounds float, float* %1499, i64 8
  %1501 = bitcast float* %1500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1501, i32 0, i32 1, i32 1)
  %1502 = getelementptr inbounds float, float* %1496, i64 16
  %1503 = bitcast float* %1502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1503, i32 0, i32 1, i32 1)
  %1504 = getelementptr inbounds float, float* %1499, i64 16
  %1505 = bitcast float* %1504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1505, i32 0, i32 1, i32 1)
  %1506 = getelementptr inbounds float, float* %1496, i64 24
  %1507 = bitcast float* %1506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1507, i32 0, i32 1, i32 1)
  %1508 = getelementptr inbounds float, float* %1499, i64 24
  %1509 = bitcast float* %1508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1509, i32 0, i32 1, i32 1)
  %1510 = getelementptr inbounds float, float* %1496, i64 32
  %1511 = bitcast float* %1510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1511, i32 0, i32 1, i32 1)
  %1512 = getelementptr inbounds float, float* %1499, i64 32
  %1513 = bitcast float* %1512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1513, i32 0, i32 1, i32 1)
  %1514 = getelementptr inbounds float, float* %1496, i64 40
  %1515 = bitcast float* %1514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1515, i32 0, i32 1, i32 1)
  %1516 = getelementptr inbounds float, float* %1499, i64 40
  %1517 = bitcast float* %1516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1517, i32 0, i32 1, i32 1)
  %1518 = getelementptr inbounds float, float* %1496, i64 48
  %1519 = bitcast float* %1518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1519, i32 0, i32 1, i32 1)
  %1520 = getelementptr inbounds float, float* %1499, i64 48
  %1521 = bitcast float* %1520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1521, i32 0, i32 1, i32 1)
  %1522 = getelementptr inbounds float, float* %1496, i64 56
  %1523 = bitcast float* %1522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1523, i32 0, i32 1, i32 1)
  %1524 = getelementptr inbounds float, float* %1499, i64 56
  %1525 = bitcast float* %1524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1525, i32 0, i32 1, i32 1)
  %1526 = getelementptr inbounds float, float* %1496, i64 64
  %1527 = bitcast float* %1526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1527, i32 0, i32 1, i32 1)
  %1528 = getelementptr inbounds float, float* %1499, i64 64
  %1529 = bitcast float* %1528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1529, i32 0, i32 1, i32 1)
  %1530 = getelementptr inbounds float, float* %1496, i64 72
  %1531 = bitcast float* %1530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1531, i32 0, i32 1, i32 1)
  %1532 = getelementptr inbounds float, float* %1499, i64 72
  %1533 = bitcast float* %1532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1533, i32 0, i32 1, i32 1)
  %1534 = getelementptr inbounds float, float* %1496, i64 80
  %1535 = bitcast float* %1534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1535, i32 0, i32 1, i32 1)
  %1536 = getelementptr inbounds float, float* %1499, i64 80
  %1537 = bitcast float* %1536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1537, i32 0, i32 1, i32 1)
  %1538 = getelementptr inbounds float, float* %1496, i64 88
  %1539 = bitcast float* %1538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1539, i32 0, i32 1, i32 1)
  %1540 = getelementptr inbounds float, float* %1499, i64 88
  %1541 = bitcast float* %1540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1541, i32 0, i32 1, i32 1)
  %1542 = getelementptr inbounds float, float* %1496, i64 96
  %1543 = bitcast float* %1542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1543, i32 0, i32 1, i32 1)
  %1544 = getelementptr inbounds float, float* %1499, i64 96
  %1545 = bitcast float* %1544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1545, i32 0, i32 1, i32 1)
  %1546 = getelementptr inbounds float, float* %1496, i64 104
  %1547 = bitcast float* %1546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1547, i32 0, i32 1, i32 1)
  %1548 = getelementptr inbounds float, float* %1499, i64 104
  %1549 = bitcast float* %1548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1549, i32 0, i32 1, i32 1)
  %1550 = getelementptr inbounds float, float* %1496, i64 112
  %1551 = bitcast float* %1550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1551, i32 0, i32 1, i32 1)
  %1552 = getelementptr inbounds float, float* %1499, i64 112
  %1553 = bitcast float* %1552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1553, i32 0, i32 1, i32 1)
  %1554 = bitcast float* %1496 to <8 x float>*
  %1555 = load <8 x float>, <8 x float>* %1554, align 1, !tbaa !12
  %1556 = or i64 %1495, 8
  %1557 = getelementptr inbounds float, float* %5, i64 %1556
  %1558 = bitcast float* %1557 to <8 x float>*
  %1559 = load <8 x float>, <8 x float>* %1558, align 1, !tbaa !12
  %1560 = add nuw nsw i64 %1495, 16
  %1561 = getelementptr inbounds float, float* %5, i64 %1560
  %1562 = bitcast float* %1561 to <8 x float>*
  %1563 = load <8 x float>, <8 x float>* %1562, align 1, !tbaa !12
  %1564 = add nuw nsw i64 %1495, 24
  %1565 = getelementptr inbounds float, float* %5, i64 %1564
  %1566 = bitcast float* %1565 to <8 x float>*
  %1567 = load <8 x float>, <8 x float>* %1566, align 1, !tbaa !12
  %1568 = add nuw nsw i64 %1495, 32
  %1569 = getelementptr inbounds float, float* %5, i64 %1568
  %1570 = bitcast float* %1569 to <8 x float>*
  %1571 = load <8 x float>, <8 x float>* %1570, align 1, !tbaa !12
  %1572 = add nuw nsw i64 %1495, 40
  %1573 = getelementptr inbounds float, float* %5, i64 %1572
  %1574 = bitcast float* %1573 to <8 x float>*
  %1575 = load <8 x float>, <8 x float>* %1574, align 1, !tbaa !12
  %1576 = add nuw nsw i64 %1495, 48
  %1577 = getelementptr inbounds float, float* %5, i64 %1576
  %1578 = bitcast float* %1577 to <8 x float>*
  %1579 = load <8 x float>, <8 x float>* %1578, align 1, !tbaa !12
  %1580 = add nuw nsw i64 %1495, 56
  %1581 = getelementptr inbounds float, float* %5, i64 %1580
  %1582 = bitcast float* %1581 to <8 x float>*
  %1583 = load <8 x float>, <8 x float>* %1582, align 1, !tbaa !12
  %1584 = add nuw nsw i64 %1495, 64
  %1585 = getelementptr inbounds float, float* %5, i64 %1584
  %1586 = bitcast float* %1585 to <8 x float>*
  %1587 = load <8 x float>, <8 x float>* %1586, align 1, !tbaa !12
  %1588 = add nuw nsw i64 %1495, 72
  %1589 = getelementptr inbounds float, float* %5, i64 %1588
  %1590 = bitcast float* %1589 to <8 x float>*
  %1591 = load <8 x float>, <8 x float>* %1590, align 1, !tbaa !12
  %1592 = add nuw nsw i64 %1495, 80
  %1593 = getelementptr inbounds float, float* %5, i64 %1592
  %1594 = bitcast float* %1593 to <8 x float>*
  %1595 = load <8 x float>, <8 x float>* %1594, align 1, !tbaa !12
  %1596 = add nuw nsw i64 %1495, 88
  %1597 = getelementptr inbounds float, float* %5, i64 %1596
  %1598 = bitcast float* %1597 to <8 x float>*
  %1599 = load <8 x float>, <8 x float>* %1598, align 1, !tbaa !12
  %1600 = add nuw nsw i64 %1495, 96
  %1601 = getelementptr inbounds float, float* %5, i64 %1600
  %1602 = bitcast float* %1601 to <8 x float>*
  %1603 = load <8 x float>, <8 x float>* %1602, align 1, !tbaa !12
  %1604 = add nuw nsw i64 %1495, 104
  %1605 = getelementptr inbounds float, float* %5, i64 %1604
  %1606 = bitcast float* %1605 to <8 x float>*
  %1607 = load <8 x float>, <8 x float>* %1606, align 1, !tbaa !12
  %1608 = add nsw i64 %1495, %1285
  %1609 = getelementptr inbounds float, float* %3, i64 %1608
  %1610 = bitcast float* %1609 to <8 x float>*
  %1611 = load <8 x float>, <8 x float>* %1610, align 1, !tbaa !12
  %1612 = add nsw i64 %1608, 8
  %1613 = getelementptr inbounds float, float* %3, i64 %1612
  %1614 = bitcast float* %1613 to <8 x float>*
  %1615 = load <8 x float>, <8 x float>* %1614, align 1, !tbaa !12
  %1616 = add nsw i64 %1608, 16
  %1617 = getelementptr inbounds float, float* %3, i64 %1616
  %1618 = bitcast float* %1617 to <8 x float>*
  %1619 = load <8 x float>, <8 x float>* %1618, align 1, !tbaa !12
  %1620 = add nsw i64 %1608, 24
  %1621 = getelementptr inbounds float, float* %3, i64 %1620
  %1622 = bitcast float* %1621 to <8 x float>*
  %1623 = load <8 x float>, <8 x float>* %1622, align 1, !tbaa !12
  %1624 = add nsw i64 %1608, 32
  %1625 = getelementptr inbounds float, float* %3, i64 %1624
  %1626 = bitcast float* %1625 to <8 x float>*
  %1627 = load <8 x float>, <8 x float>* %1626, align 1, !tbaa !12
  %1628 = add nsw i64 %1608, 40
  %1629 = getelementptr inbounds float, float* %3, i64 %1628
  %1630 = bitcast float* %1629 to <8 x float>*
  %1631 = load <8 x float>, <8 x float>* %1630, align 1, !tbaa !12
  %1632 = add nsw i64 %1608, 48
  %1633 = getelementptr inbounds float, float* %3, i64 %1632
  %1634 = bitcast float* %1633 to <8 x float>*
  %1635 = load <8 x float>, <8 x float>* %1634, align 1, !tbaa !12
  %1636 = add nsw i64 %1608, 56
  %1637 = getelementptr inbounds float, float* %3, i64 %1636
  %1638 = bitcast float* %1637 to <8 x float>*
  %1639 = load <8 x float>, <8 x float>* %1638, align 1, !tbaa !12
  %1640 = add nsw i64 %1608, 64
  %1641 = getelementptr inbounds float, float* %3, i64 %1640
  %1642 = bitcast float* %1641 to <8 x float>*
  %1643 = load <8 x float>, <8 x float>* %1642, align 1, !tbaa !12
  %1644 = add nsw i64 %1608, 72
  %1645 = getelementptr inbounds float, float* %3, i64 %1644
  %1646 = bitcast float* %1645 to <8 x float>*
  %1647 = load <8 x float>, <8 x float>* %1646, align 1, !tbaa !12
  %1648 = add nsw i64 %1608, 80
  %1649 = getelementptr inbounds float, float* %3, i64 %1648
  %1650 = bitcast float* %1649 to <8 x float>*
  %1651 = load <8 x float>, <8 x float>* %1650, align 1, !tbaa !12
  %1652 = add nsw i64 %1608, 88
  %1653 = getelementptr inbounds float, float* %3, i64 %1652
  %1654 = bitcast float* %1653 to <8 x float>*
  %1655 = load <8 x float>, <8 x float>* %1654, align 1, !tbaa !12
  %1656 = add nsw i64 %1608, 96
  %1657 = getelementptr inbounds float, float* %3, i64 %1656
  %1658 = bitcast float* %1657 to <8 x float>*
  %1659 = load <8 x float>, <8 x float>* %1658, align 1, !tbaa !12
  %1660 = add nsw i64 %1608, 104
  %1661 = getelementptr inbounds float, float* %3, i64 %1660
  %1662 = bitcast float* %1661 to <8 x float>*
  %1663 = load <8 x float>, <8 x float>* %1662, align 1, !tbaa !12
  %1664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1611, <8 x float> %60, <8 x float> %1555) #10
  %1665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1615, <8 x float> %60, <8 x float> %1559) #10
  %1666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1619, <8 x float> %60, <8 x float> %1563) #10
  %1667 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1623, <8 x float> %60, <8 x float> %1567) #10
  %1668 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1627, <8 x float> %60, <8 x float> %1571) #10
  %1669 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1631, <8 x float> %60, <8 x float> %1575) #10
  %1670 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1635, <8 x float> %60, <8 x float> %1579) #10
  %1671 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1639, <8 x float> %60, <8 x float> %1583) #10
  %1672 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1643, <8 x float> %60, <8 x float> %1587) #10
  %1673 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1647, <8 x float> %60, <8 x float> %1591) #10
  %1674 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1651, <8 x float> %60, <8 x float> %1595) #10
  %1675 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1655, <8 x float> %60, <8 x float> %1599) #10
  %1676 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1659, <8 x float> %60, <8 x float> %1603) #10
  %1677 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1663, <8 x float> %60, <8 x float> %1607) #10
  store <8 x float> %1664, <8 x float>* %1554, align 1, !tbaa !12
  store <8 x float> %1665, <8 x float>* %1558, align 1, !tbaa !12
  store <8 x float> %1666, <8 x float>* %1562, align 1, !tbaa !12
  store <8 x float> %1667, <8 x float>* %1566, align 1, !tbaa !12
  store <8 x float> %1668, <8 x float>* %1570, align 1, !tbaa !12
  store <8 x float> %1669, <8 x float>* %1574, align 1, !tbaa !12
  store <8 x float> %1670, <8 x float>* %1578, align 1, !tbaa !12
  store <8 x float> %1671, <8 x float>* %1582, align 1, !tbaa !12
  store <8 x float> %1672, <8 x float>* %1586, align 1, !tbaa !12
  store <8 x float> %1673, <8 x float>* %1590, align 1, !tbaa !12
  store <8 x float> %1674, <8 x float>* %1594, align 1, !tbaa !12
  store <8 x float> %1675, <8 x float>* %1598, align 1, !tbaa !12
  store <8 x float> %1676, <8 x float>* %1602, align 1, !tbaa !12
  store <8 x float> %1677, <8 x float>* %1606, align 1, !tbaa !12
  %1678 = add nuw nsw i64 %1495, 112
  %1679 = icmp ult i64 %1678, %1286
  br i1 %1679, label %1494, label %1488

1680:                                             ; preds = %1687, %1281, %1488
  %1681 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1682 = icmp sgt i32 %1681, 0
  br i1 %1682, label %1683, label %2672

1683:                                             ; preds = %1680
  %1684 = zext i32 %1681 to i64
  %1685 = trunc i64 %66 to i32
  %1686 = mul nsw i32 %1681, %1685
  br label %1879

1687:                                             ; preds = %1489, %1687
  %1688 = phi i64 [ 0, %1489 ], [ %1871, %1687 ]
  %1689 = getelementptr inbounds float, float* %5, i64 %1688
  %1690 = getelementptr inbounds float, float* %1689, i64 8
  %1691 = bitcast float* %1690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1691, i32 0, i32 1, i32 1)
  %1692 = getelementptr inbounds float, float* %3, i64 %1688
  %1693 = getelementptr inbounds float, float* %1692, i64 8
  %1694 = bitcast float* %1693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1694, i32 0, i32 1, i32 1)
  %1695 = getelementptr inbounds float, float* %1689, i64 16
  %1696 = bitcast float* %1695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1696, i32 0, i32 1, i32 1)
  %1697 = getelementptr inbounds float, float* %1692, i64 16
  %1698 = bitcast float* %1697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1698, i32 0, i32 1, i32 1)
  %1699 = getelementptr inbounds float, float* %1689, i64 24
  %1700 = bitcast float* %1699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1700, i32 0, i32 1, i32 1)
  %1701 = getelementptr inbounds float, float* %1692, i64 24
  %1702 = bitcast float* %1701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1702, i32 0, i32 1, i32 1)
  %1703 = getelementptr inbounds float, float* %1689, i64 32
  %1704 = bitcast float* %1703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1704, i32 0, i32 1, i32 1)
  %1705 = getelementptr inbounds float, float* %1692, i64 32
  %1706 = bitcast float* %1705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1706, i32 0, i32 1, i32 1)
  %1707 = getelementptr inbounds float, float* %1689, i64 40
  %1708 = bitcast float* %1707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1708, i32 0, i32 1, i32 1)
  %1709 = getelementptr inbounds float, float* %1692, i64 40
  %1710 = bitcast float* %1709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1710, i32 0, i32 1, i32 1)
  %1711 = getelementptr inbounds float, float* %1689, i64 48
  %1712 = bitcast float* %1711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1712, i32 0, i32 1, i32 1)
  %1713 = getelementptr inbounds float, float* %1692, i64 48
  %1714 = bitcast float* %1713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1714, i32 0, i32 1, i32 1)
  %1715 = getelementptr inbounds float, float* %1689, i64 56
  %1716 = bitcast float* %1715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1716, i32 0, i32 1, i32 1)
  %1717 = getelementptr inbounds float, float* %1692, i64 56
  %1718 = bitcast float* %1717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1718, i32 0, i32 1, i32 1)
  %1719 = getelementptr inbounds float, float* %1689, i64 64
  %1720 = bitcast float* %1719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1720, i32 0, i32 1, i32 1)
  %1721 = getelementptr inbounds float, float* %1692, i64 64
  %1722 = bitcast float* %1721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1722, i32 0, i32 1, i32 1)
  %1723 = getelementptr inbounds float, float* %1689, i64 72
  %1724 = bitcast float* %1723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1724, i32 0, i32 1, i32 1)
  %1725 = getelementptr inbounds float, float* %1692, i64 72
  %1726 = bitcast float* %1725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1726, i32 0, i32 1, i32 1)
  %1727 = getelementptr inbounds float, float* %1689, i64 80
  %1728 = bitcast float* %1727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1728, i32 0, i32 1, i32 1)
  %1729 = getelementptr inbounds float, float* %1692, i64 80
  %1730 = bitcast float* %1729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1730, i32 0, i32 1, i32 1)
  %1731 = getelementptr inbounds float, float* %1689, i64 88
  %1732 = bitcast float* %1731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1732, i32 0, i32 1, i32 1)
  %1733 = getelementptr inbounds float, float* %1692, i64 88
  %1734 = bitcast float* %1733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1734, i32 0, i32 1, i32 1)
  %1735 = getelementptr inbounds float, float* %1689, i64 96
  %1736 = bitcast float* %1735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1736, i32 0, i32 1, i32 1)
  %1737 = getelementptr inbounds float, float* %1692, i64 96
  %1738 = bitcast float* %1737 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1738, i32 0, i32 1, i32 1)
  %1739 = getelementptr inbounds float, float* %1689, i64 104
  %1740 = bitcast float* %1739 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1740, i32 0, i32 1, i32 1)
  %1741 = getelementptr inbounds float, float* %1692, i64 104
  %1742 = bitcast float* %1741 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1742, i32 0, i32 1, i32 1)
  %1743 = getelementptr inbounds float, float* %1689, i64 112
  %1744 = bitcast float* %1743 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1744, i32 0, i32 1, i32 1)
  %1745 = getelementptr inbounds float, float* %1692, i64 112
  %1746 = bitcast float* %1745 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1746, i32 0, i32 1, i32 1)
  %1747 = bitcast float* %1689 to <8 x float>*
  %1748 = load <8 x float>, <8 x float>* %1747, align 1, !tbaa !12
  %1749 = or i64 %1688, 8
  %1750 = getelementptr inbounds float, float* %5, i64 %1749
  %1751 = bitcast float* %1750 to <8 x float>*
  %1752 = load <8 x float>, <8 x float>* %1751, align 1, !tbaa !12
  %1753 = add nuw nsw i64 %1688, 16
  %1754 = getelementptr inbounds float, float* %5, i64 %1753
  %1755 = bitcast float* %1754 to <8 x float>*
  %1756 = load <8 x float>, <8 x float>* %1755, align 1, !tbaa !12
  %1757 = add nuw nsw i64 %1688, 24
  %1758 = getelementptr inbounds float, float* %5, i64 %1757
  %1759 = bitcast float* %1758 to <8 x float>*
  %1760 = load <8 x float>, <8 x float>* %1759, align 1, !tbaa !12
  %1761 = add nuw nsw i64 %1688, 32
  %1762 = getelementptr inbounds float, float* %5, i64 %1761
  %1763 = bitcast float* %1762 to <8 x float>*
  %1764 = load <8 x float>, <8 x float>* %1763, align 1, !tbaa !12
  %1765 = add nuw nsw i64 %1688, 40
  %1766 = getelementptr inbounds float, float* %5, i64 %1765
  %1767 = bitcast float* %1766 to <8 x float>*
  %1768 = load <8 x float>, <8 x float>* %1767, align 1, !tbaa !12
  %1769 = add nuw nsw i64 %1688, 48
  %1770 = getelementptr inbounds float, float* %5, i64 %1769
  %1771 = bitcast float* %1770 to <8 x float>*
  %1772 = load <8 x float>, <8 x float>* %1771, align 1, !tbaa !12
  %1773 = add nuw nsw i64 %1688, 56
  %1774 = getelementptr inbounds float, float* %5, i64 %1773
  %1775 = bitcast float* %1774 to <8 x float>*
  %1776 = load <8 x float>, <8 x float>* %1775, align 1, !tbaa !12
  %1777 = add nuw nsw i64 %1688, 64
  %1778 = getelementptr inbounds float, float* %5, i64 %1777
  %1779 = bitcast float* %1778 to <8 x float>*
  %1780 = load <8 x float>, <8 x float>* %1779, align 1, !tbaa !12
  %1781 = add nuw nsw i64 %1688, 72
  %1782 = getelementptr inbounds float, float* %5, i64 %1781
  %1783 = bitcast float* %1782 to <8 x float>*
  %1784 = load <8 x float>, <8 x float>* %1783, align 1, !tbaa !12
  %1785 = add nuw nsw i64 %1688, 80
  %1786 = getelementptr inbounds float, float* %5, i64 %1785
  %1787 = bitcast float* %1786 to <8 x float>*
  %1788 = load <8 x float>, <8 x float>* %1787, align 1, !tbaa !12
  %1789 = add nuw nsw i64 %1688, 88
  %1790 = getelementptr inbounds float, float* %5, i64 %1789
  %1791 = bitcast float* %1790 to <8 x float>*
  %1792 = load <8 x float>, <8 x float>* %1791, align 1, !tbaa !12
  %1793 = add nuw nsw i64 %1688, 96
  %1794 = getelementptr inbounds float, float* %5, i64 %1793
  %1795 = bitcast float* %1794 to <8 x float>*
  %1796 = load <8 x float>, <8 x float>* %1795, align 1, !tbaa !12
  %1797 = add nuw nsw i64 %1688, 104
  %1798 = getelementptr inbounds float, float* %5, i64 %1797
  %1799 = bitcast float* %1798 to <8 x float>*
  %1800 = load <8 x float>, <8 x float>* %1799, align 1, !tbaa !12
  %1801 = add nsw i64 %1688, %1492
  %1802 = getelementptr inbounds float, float* %3, i64 %1801
  %1803 = bitcast float* %1802 to <8 x float>*
  %1804 = load <8 x float>, <8 x float>* %1803, align 1, !tbaa !12
  %1805 = add nsw i64 %1801, 8
  %1806 = getelementptr inbounds float, float* %3, i64 %1805
  %1807 = bitcast float* %1806 to <8 x float>*
  %1808 = load <8 x float>, <8 x float>* %1807, align 1, !tbaa !12
  %1809 = add nsw i64 %1801, 16
  %1810 = getelementptr inbounds float, float* %3, i64 %1809
  %1811 = bitcast float* %1810 to <8 x float>*
  %1812 = load <8 x float>, <8 x float>* %1811, align 1, !tbaa !12
  %1813 = add nsw i64 %1801, 24
  %1814 = getelementptr inbounds float, float* %3, i64 %1813
  %1815 = bitcast float* %1814 to <8 x float>*
  %1816 = load <8 x float>, <8 x float>* %1815, align 1, !tbaa !12
  %1817 = add nsw i64 %1801, 32
  %1818 = getelementptr inbounds float, float* %3, i64 %1817
  %1819 = bitcast float* %1818 to <8 x float>*
  %1820 = load <8 x float>, <8 x float>* %1819, align 1, !tbaa !12
  %1821 = add nsw i64 %1801, 40
  %1822 = getelementptr inbounds float, float* %3, i64 %1821
  %1823 = bitcast float* %1822 to <8 x float>*
  %1824 = load <8 x float>, <8 x float>* %1823, align 1, !tbaa !12
  %1825 = add nsw i64 %1801, 48
  %1826 = getelementptr inbounds float, float* %3, i64 %1825
  %1827 = bitcast float* %1826 to <8 x float>*
  %1828 = load <8 x float>, <8 x float>* %1827, align 1, !tbaa !12
  %1829 = add nsw i64 %1801, 56
  %1830 = getelementptr inbounds float, float* %3, i64 %1829
  %1831 = bitcast float* %1830 to <8 x float>*
  %1832 = load <8 x float>, <8 x float>* %1831, align 1, !tbaa !12
  %1833 = add nsw i64 %1801, 64
  %1834 = getelementptr inbounds float, float* %3, i64 %1833
  %1835 = bitcast float* %1834 to <8 x float>*
  %1836 = load <8 x float>, <8 x float>* %1835, align 1, !tbaa !12
  %1837 = add nsw i64 %1801, 72
  %1838 = getelementptr inbounds float, float* %3, i64 %1837
  %1839 = bitcast float* %1838 to <8 x float>*
  %1840 = load <8 x float>, <8 x float>* %1839, align 1, !tbaa !12
  %1841 = add nsw i64 %1801, 80
  %1842 = getelementptr inbounds float, float* %3, i64 %1841
  %1843 = bitcast float* %1842 to <8 x float>*
  %1844 = load <8 x float>, <8 x float>* %1843, align 1, !tbaa !12
  %1845 = add nsw i64 %1801, 88
  %1846 = getelementptr inbounds float, float* %3, i64 %1845
  %1847 = bitcast float* %1846 to <8 x float>*
  %1848 = load <8 x float>, <8 x float>* %1847, align 1, !tbaa !12
  %1849 = add nsw i64 %1801, 96
  %1850 = getelementptr inbounds float, float* %3, i64 %1849
  %1851 = bitcast float* %1850 to <8 x float>*
  %1852 = load <8 x float>, <8 x float>* %1851, align 1, !tbaa !12
  %1853 = add nsw i64 %1801, 104
  %1854 = getelementptr inbounds float, float* %3, i64 %1853
  %1855 = bitcast float* %1854 to <8 x float>*
  %1856 = load <8 x float>, <8 x float>* %1855, align 1, !tbaa !12
  %1857 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1804, <8 x float> %65, <8 x float> %1748) #10
  %1858 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1808, <8 x float> %65, <8 x float> %1752) #10
  %1859 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1812, <8 x float> %65, <8 x float> %1756) #10
  %1860 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1816, <8 x float> %65, <8 x float> %1760) #10
  %1861 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1820, <8 x float> %65, <8 x float> %1764) #10
  %1862 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1824, <8 x float> %65, <8 x float> %1768) #10
  %1863 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1828, <8 x float> %65, <8 x float> %1772) #10
  %1864 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1832, <8 x float> %65, <8 x float> %1776) #10
  %1865 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1836, <8 x float> %65, <8 x float> %1780) #10
  %1866 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1840, <8 x float> %65, <8 x float> %1784) #10
  %1867 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1844, <8 x float> %65, <8 x float> %1788) #10
  %1868 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1848, <8 x float> %65, <8 x float> %1792) #10
  %1869 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1852, <8 x float> %65, <8 x float> %1796) #10
  %1870 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1856, <8 x float> %65, <8 x float> %1800) #10
  store <8 x float> %1857, <8 x float>* %1747, align 1, !tbaa !12
  store <8 x float> %1858, <8 x float>* %1751, align 1, !tbaa !12
  store <8 x float> %1859, <8 x float>* %1755, align 1, !tbaa !12
  store <8 x float> %1860, <8 x float>* %1759, align 1, !tbaa !12
  store <8 x float> %1861, <8 x float>* %1763, align 1, !tbaa !12
  store <8 x float> %1862, <8 x float>* %1767, align 1, !tbaa !12
  store <8 x float> %1863, <8 x float>* %1771, align 1, !tbaa !12
  store <8 x float> %1864, <8 x float>* %1775, align 1, !tbaa !12
  store <8 x float> %1865, <8 x float>* %1779, align 1, !tbaa !12
  store <8 x float> %1866, <8 x float>* %1783, align 1, !tbaa !12
  store <8 x float> %1867, <8 x float>* %1787, align 1, !tbaa !12
  store <8 x float> %1868, <8 x float>* %1791, align 1, !tbaa !12
  store <8 x float> %1869, <8 x float>* %1795, align 1, !tbaa !12
  store <8 x float> %1870, <8 x float>* %1799, align 1, !tbaa !12
  %1871 = add nuw nsw i64 %1688, 112
  %1872 = icmp ult i64 %1871, %1493
  br i1 %1872, label %1687, label %1680

1873:                                             ; preds = %1879
  br i1 %1682, label %1874, label %2272

1874:                                             ; preds = %1873
  %1875 = trunc i64 %71 to i32
  %1876 = mul nsw i32 %1681, %1875
  %1877 = sext i32 %1876 to i64
  %1878 = zext i32 %1681 to i64
  br label %2086

1879:                                             ; preds = %1683, %1879
  %1880 = phi i64 [ 0, %1683 ], [ %2078, %1879 ]
  %1881 = getelementptr inbounds float, float* %5, i64 %1880
  %1882 = getelementptr inbounds float, float* %1881, i64 8
  %1883 = bitcast float* %1882 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1883, i32 0, i32 1, i32 1)
  %1884 = getelementptr inbounds float, float* %3, i64 %1880
  %1885 = getelementptr inbounds float, float* %1884, i64 8
  %1886 = bitcast float* %1885 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1886, i32 0, i32 1, i32 1)
  %1887 = getelementptr inbounds float, float* %1881, i64 16
  %1888 = bitcast float* %1887 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1888, i32 0, i32 1, i32 1)
  %1889 = getelementptr inbounds float, float* %1884, i64 16
  %1890 = bitcast float* %1889 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1890, i32 0, i32 1, i32 1)
  %1891 = getelementptr inbounds float, float* %1881, i64 24
  %1892 = bitcast float* %1891 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1892, i32 0, i32 1, i32 1)
  %1893 = getelementptr inbounds float, float* %1884, i64 24
  %1894 = bitcast float* %1893 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1894, i32 0, i32 1, i32 1)
  %1895 = getelementptr inbounds float, float* %1881, i64 32
  %1896 = bitcast float* %1895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1896, i32 0, i32 1, i32 1)
  %1897 = getelementptr inbounds float, float* %1884, i64 32
  %1898 = bitcast float* %1897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1898, i32 0, i32 1, i32 1)
  %1899 = getelementptr inbounds float, float* %1881, i64 40
  %1900 = bitcast float* %1899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1900, i32 0, i32 1, i32 1)
  %1901 = getelementptr inbounds float, float* %1884, i64 40
  %1902 = bitcast float* %1901 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1902, i32 0, i32 1, i32 1)
  %1903 = getelementptr inbounds float, float* %1881, i64 48
  %1904 = bitcast float* %1903 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1904, i32 0, i32 1, i32 1)
  %1905 = getelementptr inbounds float, float* %1884, i64 48
  %1906 = bitcast float* %1905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1906, i32 0, i32 1, i32 1)
  %1907 = getelementptr inbounds float, float* %1881, i64 56
  %1908 = bitcast float* %1907 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1908, i32 0, i32 1, i32 1)
  %1909 = getelementptr inbounds float, float* %1884, i64 56
  %1910 = bitcast float* %1909 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1910, i32 0, i32 1, i32 1)
  %1911 = getelementptr inbounds float, float* %1881, i64 64
  %1912 = bitcast float* %1911 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1912, i32 0, i32 1, i32 1)
  %1913 = getelementptr inbounds float, float* %1884, i64 64
  %1914 = bitcast float* %1913 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1914, i32 0, i32 1, i32 1)
  %1915 = getelementptr inbounds float, float* %1881, i64 72
  %1916 = bitcast float* %1915 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1916, i32 0, i32 1, i32 1)
  %1917 = getelementptr inbounds float, float* %1884, i64 72
  %1918 = bitcast float* %1917 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1918, i32 0, i32 1, i32 1)
  %1919 = getelementptr inbounds float, float* %1881, i64 80
  %1920 = bitcast float* %1919 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1920, i32 0, i32 1, i32 1)
  %1921 = getelementptr inbounds float, float* %1884, i64 80
  %1922 = bitcast float* %1921 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1922, i32 0, i32 1, i32 1)
  %1923 = getelementptr inbounds float, float* %1881, i64 88
  %1924 = bitcast float* %1923 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1924, i32 0, i32 1, i32 1)
  %1925 = getelementptr inbounds float, float* %1884, i64 88
  %1926 = bitcast float* %1925 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1926, i32 0, i32 1, i32 1)
  %1927 = getelementptr inbounds float, float* %1881, i64 96
  %1928 = bitcast float* %1927 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1928, i32 0, i32 1, i32 1)
  %1929 = getelementptr inbounds float, float* %1884, i64 96
  %1930 = bitcast float* %1929 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1930, i32 0, i32 1, i32 1)
  %1931 = getelementptr inbounds float, float* %1881, i64 104
  %1932 = bitcast float* %1931 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1932, i32 0, i32 1, i32 1)
  %1933 = getelementptr inbounds float, float* %1884, i64 104
  %1934 = bitcast float* %1933 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1934, i32 0, i32 1, i32 1)
  %1935 = getelementptr inbounds float, float* %1881, i64 112
  %1936 = bitcast float* %1935 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1936, i32 0, i32 1, i32 1)
  %1937 = getelementptr inbounds float, float* %1884, i64 112
  %1938 = bitcast float* %1937 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1938, i32 0, i32 1, i32 1)
  %1939 = bitcast float* %1881 to <8 x float>*
  %1940 = load <8 x float>, <8 x float>* %1939, align 1, !tbaa !12
  %1941 = or i64 %1880, 8
  %1942 = getelementptr inbounds float, float* %5, i64 %1941
  %1943 = bitcast float* %1942 to <8 x float>*
  %1944 = load <8 x float>, <8 x float>* %1943, align 1, !tbaa !12
  %1945 = add nuw nsw i64 %1880, 16
  %1946 = getelementptr inbounds float, float* %5, i64 %1945
  %1947 = bitcast float* %1946 to <8 x float>*
  %1948 = load <8 x float>, <8 x float>* %1947, align 1, !tbaa !12
  %1949 = add nuw nsw i64 %1880, 24
  %1950 = getelementptr inbounds float, float* %5, i64 %1949
  %1951 = bitcast float* %1950 to <8 x float>*
  %1952 = load <8 x float>, <8 x float>* %1951, align 1, !tbaa !12
  %1953 = add nuw nsw i64 %1880, 32
  %1954 = getelementptr inbounds float, float* %5, i64 %1953
  %1955 = bitcast float* %1954 to <8 x float>*
  %1956 = load <8 x float>, <8 x float>* %1955, align 1, !tbaa !12
  %1957 = add nuw nsw i64 %1880, 40
  %1958 = getelementptr inbounds float, float* %5, i64 %1957
  %1959 = bitcast float* %1958 to <8 x float>*
  %1960 = load <8 x float>, <8 x float>* %1959, align 1, !tbaa !12
  %1961 = add nuw nsw i64 %1880, 48
  %1962 = getelementptr inbounds float, float* %5, i64 %1961
  %1963 = bitcast float* %1962 to <8 x float>*
  %1964 = load <8 x float>, <8 x float>* %1963, align 1, !tbaa !12
  %1965 = add nuw nsw i64 %1880, 56
  %1966 = getelementptr inbounds float, float* %5, i64 %1965
  %1967 = bitcast float* %1966 to <8 x float>*
  %1968 = load <8 x float>, <8 x float>* %1967, align 1, !tbaa !12
  %1969 = add nuw nsw i64 %1880, 64
  %1970 = getelementptr inbounds float, float* %5, i64 %1969
  %1971 = bitcast float* %1970 to <8 x float>*
  %1972 = load <8 x float>, <8 x float>* %1971, align 1, !tbaa !12
  %1973 = add nuw nsw i64 %1880, 72
  %1974 = getelementptr inbounds float, float* %5, i64 %1973
  %1975 = bitcast float* %1974 to <8 x float>*
  %1976 = load <8 x float>, <8 x float>* %1975, align 1, !tbaa !12
  %1977 = add nuw nsw i64 %1880, 80
  %1978 = getelementptr inbounds float, float* %5, i64 %1977
  %1979 = bitcast float* %1978 to <8 x float>*
  %1980 = load <8 x float>, <8 x float>* %1979, align 1, !tbaa !12
  %1981 = add nuw nsw i64 %1880, 88
  %1982 = getelementptr inbounds float, float* %5, i64 %1981
  %1983 = bitcast float* %1982 to <8 x float>*
  %1984 = load <8 x float>, <8 x float>* %1983, align 1, !tbaa !12
  %1985 = add nuw nsw i64 %1880, 96
  %1986 = getelementptr inbounds float, float* %5, i64 %1985
  %1987 = bitcast float* %1986 to <8 x float>*
  %1988 = load <8 x float>, <8 x float>* %1987, align 1, !tbaa !12
  %1989 = add nuw nsw i64 %1880, 104
  %1990 = getelementptr inbounds float, float* %5, i64 %1989
  %1991 = bitcast float* %1990 to <8 x float>*
  %1992 = load <8 x float>, <8 x float>* %1991, align 1, !tbaa !12
  %1993 = trunc i64 %1880 to i32
  %1994 = add nsw i32 %1686, %1993
  %1995 = sext i32 %1994 to i64
  %1996 = getelementptr inbounds float, float* %3, i64 %1995
  %1997 = bitcast float* %1996 to <8 x float>*
  %1998 = load <8 x float>, <8 x float>* %1997, align 1, !tbaa !12
  %1999 = add nsw i32 %1994, 8
  %2000 = sext i32 %1999 to i64
  %2001 = getelementptr inbounds float, float* %3, i64 %2000
  %2002 = bitcast float* %2001 to <8 x float>*
  %2003 = load <8 x float>, <8 x float>* %2002, align 1, !tbaa !12
  %2004 = add nsw i32 %1994, 16
  %2005 = sext i32 %2004 to i64
  %2006 = getelementptr inbounds float, float* %3, i64 %2005
  %2007 = bitcast float* %2006 to <8 x float>*
  %2008 = load <8 x float>, <8 x float>* %2007, align 1, !tbaa !12
  %2009 = add nsw i32 %1994, 24
  %2010 = sext i32 %2009 to i64
  %2011 = getelementptr inbounds float, float* %3, i64 %2010
  %2012 = bitcast float* %2011 to <8 x float>*
  %2013 = load <8 x float>, <8 x float>* %2012, align 1, !tbaa !12
  %2014 = add nsw i32 %1994, 32
  %2015 = sext i32 %2014 to i64
  %2016 = getelementptr inbounds float, float* %3, i64 %2015
  %2017 = bitcast float* %2016 to <8 x float>*
  %2018 = load <8 x float>, <8 x float>* %2017, align 1, !tbaa !12
  %2019 = add nsw i32 %1994, 40
  %2020 = sext i32 %2019 to i64
  %2021 = getelementptr inbounds float, float* %3, i64 %2020
  %2022 = bitcast float* %2021 to <8 x float>*
  %2023 = load <8 x float>, <8 x float>* %2022, align 1, !tbaa !12
  %2024 = add nsw i32 %1994, 48
  %2025 = sext i32 %2024 to i64
  %2026 = getelementptr inbounds float, float* %3, i64 %2025
  %2027 = bitcast float* %2026 to <8 x float>*
  %2028 = load <8 x float>, <8 x float>* %2027, align 1, !tbaa !12
  %2029 = add nsw i32 %1994, 56
  %2030 = sext i32 %2029 to i64
  %2031 = getelementptr inbounds float, float* %3, i64 %2030
  %2032 = bitcast float* %2031 to <8 x float>*
  %2033 = load <8 x float>, <8 x float>* %2032, align 1, !tbaa !12
  %2034 = add nsw i32 %1994, 64
  %2035 = sext i32 %2034 to i64
  %2036 = getelementptr inbounds float, float* %3, i64 %2035
  %2037 = bitcast float* %2036 to <8 x float>*
  %2038 = load <8 x float>, <8 x float>* %2037, align 1, !tbaa !12
  %2039 = add nsw i32 %1994, 72
  %2040 = sext i32 %2039 to i64
  %2041 = getelementptr inbounds float, float* %3, i64 %2040
  %2042 = bitcast float* %2041 to <8 x float>*
  %2043 = load <8 x float>, <8 x float>* %2042, align 1, !tbaa !12
  %2044 = add nsw i32 %1994, 80
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds float, float* %3, i64 %2045
  %2047 = bitcast float* %2046 to <8 x float>*
  %2048 = load <8 x float>, <8 x float>* %2047, align 1, !tbaa !12
  %2049 = add nsw i32 %1994, 88
  %2050 = sext i32 %2049 to i64
  %2051 = getelementptr inbounds float, float* %3, i64 %2050
  %2052 = bitcast float* %2051 to <8 x float>*
  %2053 = load <8 x float>, <8 x float>* %2052, align 1, !tbaa !12
  %2054 = add nsw i32 %1994, 96
  %2055 = sext i32 %2054 to i64
  %2056 = getelementptr inbounds float, float* %3, i64 %2055
  %2057 = bitcast float* %2056 to <8 x float>*
  %2058 = load <8 x float>, <8 x float>* %2057, align 1, !tbaa !12
  %2059 = add nsw i32 %1994, 104
  %2060 = sext i32 %2059 to i64
  %2061 = getelementptr inbounds float, float* %3, i64 %2060
  %2062 = bitcast float* %2061 to <8 x float>*
  %2063 = load <8 x float>, <8 x float>* %2062, align 1, !tbaa !12
  %2064 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1998, <8 x float> %70, <8 x float> %1940) #10
  %2065 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2003, <8 x float> %70, <8 x float> %1944) #10
  %2066 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2008, <8 x float> %70, <8 x float> %1948) #10
  %2067 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2013, <8 x float> %70, <8 x float> %1952) #10
  %2068 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2018, <8 x float> %70, <8 x float> %1956) #10
  %2069 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2023, <8 x float> %70, <8 x float> %1960) #10
  %2070 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2028, <8 x float> %70, <8 x float> %1964) #10
  %2071 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2033, <8 x float> %70, <8 x float> %1968) #10
  %2072 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2038, <8 x float> %70, <8 x float> %1972) #10
  %2073 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2043, <8 x float> %70, <8 x float> %1976) #10
  %2074 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2048, <8 x float> %70, <8 x float> %1980) #10
  %2075 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2053, <8 x float> %70, <8 x float> %1984) #10
  %2076 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2058, <8 x float> %70, <8 x float> %1988) #10
  %2077 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2063, <8 x float> %70, <8 x float> %1992) #10
  store <8 x float> %2064, <8 x float>* %1939, align 1, !tbaa !12
  store <8 x float> %2065, <8 x float>* %1943, align 1, !tbaa !12
  store <8 x float> %2066, <8 x float>* %1947, align 1, !tbaa !12
  store <8 x float> %2067, <8 x float>* %1951, align 1, !tbaa !12
  store <8 x float> %2068, <8 x float>* %1955, align 1, !tbaa !12
  store <8 x float> %2069, <8 x float>* %1959, align 1, !tbaa !12
  store <8 x float> %2070, <8 x float>* %1963, align 1, !tbaa !12
  store <8 x float> %2071, <8 x float>* %1967, align 1, !tbaa !12
  store <8 x float> %2072, <8 x float>* %1971, align 1, !tbaa !12
  store <8 x float> %2073, <8 x float>* %1975, align 1, !tbaa !12
  store <8 x float> %2074, <8 x float>* %1979, align 1, !tbaa !12
  store <8 x float> %2075, <8 x float>* %1983, align 1, !tbaa !12
  store <8 x float> %2076, <8 x float>* %1987, align 1, !tbaa !12
  store <8 x float> %2077, <8 x float>* %1991, align 1, !tbaa !12
  %2078 = add nuw nsw i64 %1880, 112
  %2079 = icmp ult i64 %2078, %1684
  br i1 %2079, label %1879, label %1873

2080:                                             ; preds = %2086
  br i1 %1682, label %2081, label %2272

2081:                                             ; preds = %2080
  %2082 = trunc i64 %76 to i32
  %2083 = mul nsw i32 %1681, %2082
  %2084 = sext i32 %2083 to i64
  %2085 = zext i32 %1681 to i64
  br label %2279

2086:                                             ; preds = %1874, %2086
  %2087 = phi i64 [ 0, %1874 ], [ %2270, %2086 ]
  %2088 = getelementptr inbounds float, float* %5, i64 %2087
  %2089 = getelementptr inbounds float, float* %2088, i64 8
  %2090 = bitcast float* %2089 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2090, i32 0, i32 1, i32 1)
  %2091 = getelementptr inbounds float, float* %3, i64 %2087
  %2092 = getelementptr inbounds float, float* %2091, i64 8
  %2093 = bitcast float* %2092 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2093, i32 0, i32 1, i32 1)
  %2094 = getelementptr inbounds float, float* %2088, i64 16
  %2095 = bitcast float* %2094 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2095, i32 0, i32 1, i32 1)
  %2096 = getelementptr inbounds float, float* %2091, i64 16
  %2097 = bitcast float* %2096 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2097, i32 0, i32 1, i32 1)
  %2098 = getelementptr inbounds float, float* %2088, i64 24
  %2099 = bitcast float* %2098 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2099, i32 0, i32 1, i32 1)
  %2100 = getelementptr inbounds float, float* %2091, i64 24
  %2101 = bitcast float* %2100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2101, i32 0, i32 1, i32 1)
  %2102 = getelementptr inbounds float, float* %2088, i64 32
  %2103 = bitcast float* %2102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2103, i32 0, i32 1, i32 1)
  %2104 = getelementptr inbounds float, float* %2091, i64 32
  %2105 = bitcast float* %2104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2105, i32 0, i32 1, i32 1)
  %2106 = getelementptr inbounds float, float* %2088, i64 40
  %2107 = bitcast float* %2106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2107, i32 0, i32 1, i32 1)
  %2108 = getelementptr inbounds float, float* %2091, i64 40
  %2109 = bitcast float* %2108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2109, i32 0, i32 1, i32 1)
  %2110 = getelementptr inbounds float, float* %2088, i64 48
  %2111 = bitcast float* %2110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2111, i32 0, i32 1, i32 1)
  %2112 = getelementptr inbounds float, float* %2091, i64 48
  %2113 = bitcast float* %2112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2113, i32 0, i32 1, i32 1)
  %2114 = getelementptr inbounds float, float* %2088, i64 56
  %2115 = bitcast float* %2114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2115, i32 0, i32 1, i32 1)
  %2116 = getelementptr inbounds float, float* %2091, i64 56
  %2117 = bitcast float* %2116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2117, i32 0, i32 1, i32 1)
  %2118 = getelementptr inbounds float, float* %2088, i64 64
  %2119 = bitcast float* %2118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2119, i32 0, i32 1, i32 1)
  %2120 = getelementptr inbounds float, float* %2091, i64 64
  %2121 = bitcast float* %2120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2121, i32 0, i32 1, i32 1)
  %2122 = getelementptr inbounds float, float* %2088, i64 72
  %2123 = bitcast float* %2122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2123, i32 0, i32 1, i32 1)
  %2124 = getelementptr inbounds float, float* %2091, i64 72
  %2125 = bitcast float* %2124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2125, i32 0, i32 1, i32 1)
  %2126 = getelementptr inbounds float, float* %2088, i64 80
  %2127 = bitcast float* %2126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2127, i32 0, i32 1, i32 1)
  %2128 = getelementptr inbounds float, float* %2091, i64 80
  %2129 = bitcast float* %2128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2129, i32 0, i32 1, i32 1)
  %2130 = getelementptr inbounds float, float* %2088, i64 88
  %2131 = bitcast float* %2130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2131, i32 0, i32 1, i32 1)
  %2132 = getelementptr inbounds float, float* %2091, i64 88
  %2133 = bitcast float* %2132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2133, i32 0, i32 1, i32 1)
  %2134 = getelementptr inbounds float, float* %2088, i64 96
  %2135 = bitcast float* %2134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2135, i32 0, i32 1, i32 1)
  %2136 = getelementptr inbounds float, float* %2091, i64 96
  %2137 = bitcast float* %2136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2137, i32 0, i32 1, i32 1)
  %2138 = getelementptr inbounds float, float* %2088, i64 104
  %2139 = bitcast float* %2138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2139, i32 0, i32 1, i32 1)
  %2140 = getelementptr inbounds float, float* %2091, i64 104
  %2141 = bitcast float* %2140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2141, i32 0, i32 1, i32 1)
  %2142 = getelementptr inbounds float, float* %2088, i64 112
  %2143 = bitcast float* %2142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2143, i32 0, i32 1, i32 1)
  %2144 = getelementptr inbounds float, float* %2091, i64 112
  %2145 = bitcast float* %2144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2145, i32 0, i32 1, i32 1)
  %2146 = bitcast float* %2088 to <8 x float>*
  %2147 = load <8 x float>, <8 x float>* %2146, align 1, !tbaa !12
  %2148 = or i64 %2087, 8
  %2149 = getelementptr inbounds float, float* %5, i64 %2148
  %2150 = bitcast float* %2149 to <8 x float>*
  %2151 = load <8 x float>, <8 x float>* %2150, align 1, !tbaa !12
  %2152 = add nuw nsw i64 %2087, 16
  %2153 = getelementptr inbounds float, float* %5, i64 %2152
  %2154 = bitcast float* %2153 to <8 x float>*
  %2155 = load <8 x float>, <8 x float>* %2154, align 1, !tbaa !12
  %2156 = add nuw nsw i64 %2087, 24
  %2157 = getelementptr inbounds float, float* %5, i64 %2156
  %2158 = bitcast float* %2157 to <8 x float>*
  %2159 = load <8 x float>, <8 x float>* %2158, align 1, !tbaa !12
  %2160 = add nuw nsw i64 %2087, 32
  %2161 = getelementptr inbounds float, float* %5, i64 %2160
  %2162 = bitcast float* %2161 to <8 x float>*
  %2163 = load <8 x float>, <8 x float>* %2162, align 1, !tbaa !12
  %2164 = add nuw nsw i64 %2087, 40
  %2165 = getelementptr inbounds float, float* %5, i64 %2164
  %2166 = bitcast float* %2165 to <8 x float>*
  %2167 = load <8 x float>, <8 x float>* %2166, align 1, !tbaa !12
  %2168 = add nuw nsw i64 %2087, 48
  %2169 = getelementptr inbounds float, float* %5, i64 %2168
  %2170 = bitcast float* %2169 to <8 x float>*
  %2171 = load <8 x float>, <8 x float>* %2170, align 1, !tbaa !12
  %2172 = add nuw nsw i64 %2087, 56
  %2173 = getelementptr inbounds float, float* %5, i64 %2172
  %2174 = bitcast float* %2173 to <8 x float>*
  %2175 = load <8 x float>, <8 x float>* %2174, align 1, !tbaa !12
  %2176 = add nuw nsw i64 %2087, 64
  %2177 = getelementptr inbounds float, float* %5, i64 %2176
  %2178 = bitcast float* %2177 to <8 x float>*
  %2179 = load <8 x float>, <8 x float>* %2178, align 1, !tbaa !12
  %2180 = add nuw nsw i64 %2087, 72
  %2181 = getelementptr inbounds float, float* %5, i64 %2180
  %2182 = bitcast float* %2181 to <8 x float>*
  %2183 = load <8 x float>, <8 x float>* %2182, align 1, !tbaa !12
  %2184 = add nuw nsw i64 %2087, 80
  %2185 = getelementptr inbounds float, float* %5, i64 %2184
  %2186 = bitcast float* %2185 to <8 x float>*
  %2187 = load <8 x float>, <8 x float>* %2186, align 1, !tbaa !12
  %2188 = add nuw nsw i64 %2087, 88
  %2189 = getelementptr inbounds float, float* %5, i64 %2188
  %2190 = bitcast float* %2189 to <8 x float>*
  %2191 = load <8 x float>, <8 x float>* %2190, align 1, !tbaa !12
  %2192 = add nuw nsw i64 %2087, 96
  %2193 = getelementptr inbounds float, float* %5, i64 %2192
  %2194 = bitcast float* %2193 to <8 x float>*
  %2195 = load <8 x float>, <8 x float>* %2194, align 1, !tbaa !12
  %2196 = add nuw nsw i64 %2087, 104
  %2197 = getelementptr inbounds float, float* %5, i64 %2196
  %2198 = bitcast float* %2197 to <8 x float>*
  %2199 = load <8 x float>, <8 x float>* %2198, align 1, !tbaa !12
  %2200 = add nsw i64 %2087, %1877
  %2201 = getelementptr inbounds float, float* %3, i64 %2200
  %2202 = bitcast float* %2201 to <8 x float>*
  %2203 = load <8 x float>, <8 x float>* %2202, align 1, !tbaa !12
  %2204 = add nsw i64 %2200, 8
  %2205 = getelementptr inbounds float, float* %3, i64 %2204
  %2206 = bitcast float* %2205 to <8 x float>*
  %2207 = load <8 x float>, <8 x float>* %2206, align 1, !tbaa !12
  %2208 = add nsw i64 %2200, 16
  %2209 = getelementptr inbounds float, float* %3, i64 %2208
  %2210 = bitcast float* %2209 to <8 x float>*
  %2211 = load <8 x float>, <8 x float>* %2210, align 1, !tbaa !12
  %2212 = add nsw i64 %2200, 24
  %2213 = getelementptr inbounds float, float* %3, i64 %2212
  %2214 = bitcast float* %2213 to <8 x float>*
  %2215 = load <8 x float>, <8 x float>* %2214, align 1, !tbaa !12
  %2216 = add nsw i64 %2200, 32
  %2217 = getelementptr inbounds float, float* %3, i64 %2216
  %2218 = bitcast float* %2217 to <8 x float>*
  %2219 = load <8 x float>, <8 x float>* %2218, align 1, !tbaa !12
  %2220 = add nsw i64 %2200, 40
  %2221 = getelementptr inbounds float, float* %3, i64 %2220
  %2222 = bitcast float* %2221 to <8 x float>*
  %2223 = load <8 x float>, <8 x float>* %2222, align 1, !tbaa !12
  %2224 = add nsw i64 %2200, 48
  %2225 = getelementptr inbounds float, float* %3, i64 %2224
  %2226 = bitcast float* %2225 to <8 x float>*
  %2227 = load <8 x float>, <8 x float>* %2226, align 1, !tbaa !12
  %2228 = add nsw i64 %2200, 56
  %2229 = getelementptr inbounds float, float* %3, i64 %2228
  %2230 = bitcast float* %2229 to <8 x float>*
  %2231 = load <8 x float>, <8 x float>* %2230, align 1, !tbaa !12
  %2232 = add nsw i64 %2200, 64
  %2233 = getelementptr inbounds float, float* %3, i64 %2232
  %2234 = bitcast float* %2233 to <8 x float>*
  %2235 = load <8 x float>, <8 x float>* %2234, align 1, !tbaa !12
  %2236 = add nsw i64 %2200, 72
  %2237 = getelementptr inbounds float, float* %3, i64 %2236
  %2238 = bitcast float* %2237 to <8 x float>*
  %2239 = load <8 x float>, <8 x float>* %2238, align 1, !tbaa !12
  %2240 = add nsw i64 %2200, 80
  %2241 = getelementptr inbounds float, float* %3, i64 %2240
  %2242 = bitcast float* %2241 to <8 x float>*
  %2243 = load <8 x float>, <8 x float>* %2242, align 1, !tbaa !12
  %2244 = add nsw i64 %2200, 88
  %2245 = getelementptr inbounds float, float* %3, i64 %2244
  %2246 = bitcast float* %2245 to <8 x float>*
  %2247 = load <8 x float>, <8 x float>* %2246, align 1, !tbaa !12
  %2248 = add nsw i64 %2200, 96
  %2249 = getelementptr inbounds float, float* %3, i64 %2248
  %2250 = bitcast float* %2249 to <8 x float>*
  %2251 = load <8 x float>, <8 x float>* %2250, align 1, !tbaa !12
  %2252 = add nsw i64 %2200, 104
  %2253 = getelementptr inbounds float, float* %3, i64 %2252
  %2254 = bitcast float* %2253 to <8 x float>*
  %2255 = load <8 x float>, <8 x float>* %2254, align 1, !tbaa !12
  %2256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2203, <8 x float> %75, <8 x float> %2147) #10
  %2257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2207, <8 x float> %75, <8 x float> %2151) #10
  %2258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2211, <8 x float> %75, <8 x float> %2155) #10
  %2259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2215, <8 x float> %75, <8 x float> %2159) #10
  %2260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2219, <8 x float> %75, <8 x float> %2163) #10
  %2261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2223, <8 x float> %75, <8 x float> %2167) #10
  %2262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2227, <8 x float> %75, <8 x float> %2171) #10
  %2263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2231, <8 x float> %75, <8 x float> %2175) #10
  %2264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2235, <8 x float> %75, <8 x float> %2179) #10
  %2265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2239, <8 x float> %75, <8 x float> %2183) #10
  %2266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2243, <8 x float> %75, <8 x float> %2187) #10
  %2267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2247, <8 x float> %75, <8 x float> %2191) #10
  %2268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2251, <8 x float> %75, <8 x float> %2195) #10
  %2269 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2255, <8 x float> %75, <8 x float> %2199) #10
  store <8 x float> %2256, <8 x float>* %2146, align 1, !tbaa !12
  store <8 x float> %2257, <8 x float>* %2150, align 1, !tbaa !12
  store <8 x float> %2258, <8 x float>* %2154, align 1, !tbaa !12
  store <8 x float> %2259, <8 x float>* %2158, align 1, !tbaa !12
  store <8 x float> %2260, <8 x float>* %2162, align 1, !tbaa !12
  store <8 x float> %2261, <8 x float>* %2166, align 1, !tbaa !12
  store <8 x float> %2262, <8 x float>* %2170, align 1, !tbaa !12
  store <8 x float> %2263, <8 x float>* %2174, align 1, !tbaa !12
  store <8 x float> %2264, <8 x float>* %2178, align 1, !tbaa !12
  store <8 x float> %2265, <8 x float>* %2182, align 1, !tbaa !12
  store <8 x float> %2266, <8 x float>* %2186, align 1, !tbaa !12
  store <8 x float> %2267, <8 x float>* %2190, align 1, !tbaa !12
  store <8 x float> %2268, <8 x float>* %2194, align 1, !tbaa !12
  store <8 x float> %2269, <8 x float>* %2198, align 1, !tbaa !12
  %2270 = add nuw nsw i64 %2087, 112
  %2271 = icmp ult i64 %2270, %1878
  br i1 %2271, label %2086, label %2080

2272:                                             ; preds = %2279, %1873, %2080
  %2273 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2274 = icmp sgt i32 %2273, 0
  br i1 %2274, label %2275, label %2672

2275:                                             ; preds = %2272
  %2276 = zext i32 %2273 to i64
  %2277 = trunc i64 %81 to i32
  %2278 = mul nsw i32 %2273, %2277
  br label %2471

2279:                                             ; preds = %2081, %2279
  %2280 = phi i64 [ 0, %2081 ], [ %2463, %2279 ]
  %2281 = getelementptr inbounds float, float* %5, i64 %2280
  %2282 = getelementptr inbounds float, float* %2281, i64 8
  %2283 = bitcast float* %2282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2283, i32 0, i32 1, i32 1)
  %2284 = getelementptr inbounds float, float* %3, i64 %2280
  %2285 = getelementptr inbounds float, float* %2284, i64 8
  %2286 = bitcast float* %2285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2286, i32 0, i32 1, i32 1)
  %2287 = getelementptr inbounds float, float* %2281, i64 16
  %2288 = bitcast float* %2287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2288, i32 0, i32 1, i32 1)
  %2289 = getelementptr inbounds float, float* %2284, i64 16
  %2290 = bitcast float* %2289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2290, i32 0, i32 1, i32 1)
  %2291 = getelementptr inbounds float, float* %2281, i64 24
  %2292 = bitcast float* %2291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2292, i32 0, i32 1, i32 1)
  %2293 = getelementptr inbounds float, float* %2284, i64 24
  %2294 = bitcast float* %2293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2294, i32 0, i32 1, i32 1)
  %2295 = getelementptr inbounds float, float* %2281, i64 32
  %2296 = bitcast float* %2295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2296, i32 0, i32 1, i32 1)
  %2297 = getelementptr inbounds float, float* %2284, i64 32
  %2298 = bitcast float* %2297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2298, i32 0, i32 1, i32 1)
  %2299 = getelementptr inbounds float, float* %2281, i64 40
  %2300 = bitcast float* %2299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2300, i32 0, i32 1, i32 1)
  %2301 = getelementptr inbounds float, float* %2284, i64 40
  %2302 = bitcast float* %2301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2302, i32 0, i32 1, i32 1)
  %2303 = getelementptr inbounds float, float* %2281, i64 48
  %2304 = bitcast float* %2303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2304, i32 0, i32 1, i32 1)
  %2305 = getelementptr inbounds float, float* %2284, i64 48
  %2306 = bitcast float* %2305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2306, i32 0, i32 1, i32 1)
  %2307 = getelementptr inbounds float, float* %2281, i64 56
  %2308 = bitcast float* %2307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2308, i32 0, i32 1, i32 1)
  %2309 = getelementptr inbounds float, float* %2284, i64 56
  %2310 = bitcast float* %2309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2310, i32 0, i32 1, i32 1)
  %2311 = getelementptr inbounds float, float* %2281, i64 64
  %2312 = bitcast float* %2311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2312, i32 0, i32 1, i32 1)
  %2313 = getelementptr inbounds float, float* %2284, i64 64
  %2314 = bitcast float* %2313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2314, i32 0, i32 1, i32 1)
  %2315 = getelementptr inbounds float, float* %2281, i64 72
  %2316 = bitcast float* %2315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2316, i32 0, i32 1, i32 1)
  %2317 = getelementptr inbounds float, float* %2284, i64 72
  %2318 = bitcast float* %2317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2318, i32 0, i32 1, i32 1)
  %2319 = getelementptr inbounds float, float* %2281, i64 80
  %2320 = bitcast float* %2319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2320, i32 0, i32 1, i32 1)
  %2321 = getelementptr inbounds float, float* %2284, i64 80
  %2322 = bitcast float* %2321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2322, i32 0, i32 1, i32 1)
  %2323 = getelementptr inbounds float, float* %2281, i64 88
  %2324 = bitcast float* %2323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2324, i32 0, i32 1, i32 1)
  %2325 = getelementptr inbounds float, float* %2284, i64 88
  %2326 = bitcast float* %2325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2326, i32 0, i32 1, i32 1)
  %2327 = getelementptr inbounds float, float* %2281, i64 96
  %2328 = bitcast float* %2327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2328, i32 0, i32 1, i32 1)
  %2329 = getelementptr inbounds float, float* %2284, i64 96
  %2330 = bitcast float* %2329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2330, i32 0, i32 1, i32 1)
  %2331 = getelementptr inbounds float, float* %2281, i64 104
  %2332 = bitcast float* %2331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2332, i32 0, i32 1, i32 1)
  %2333 = getelementptr inbounds float, float* %2284, i64 104
  %2334 = bitcast float* %2333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2334, i32 0, i32 1, i32 1)
  %2335 = getelementptr inbounds float, float* %2281, i64 112
  %2336 = bitcast float* %2335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2336, i32 0, i32 1, i32 1)
  %2337 = getelementptr inbounds float, float* %2284, i64 112
  %2338 = bitcast float* %2337 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2338, i32 0, i32 1, i32 1)
  %2339 = bitcast float* %2281 to <8 x float>*
  %2340 = load <8 x float>, <8 x float>* %2339, align 1, !tbaa !12
  %2341 = or i64 %2280, 8
  %2342 = getelementptr inbounds float, float* %5, i64 %2341
  %2343 = bitcast float* %2342 to <8 x float>*
  %2344 = load <8 x float>, <8 x float>* %2343, align 1, !tbaa !12
  %2345 = add nuw nsw i64 %2280, 16
  %2346 = getelementptr inbounds float, float* %5, i64 %2345
  %2347 = bitcast float* %2346 to <8 x float>*
  %2348 = load <8 x float>, <8 x float>* %2347, align 1, !tbaa !12
  %2349 = add nuw nsw i64 %2280, 24
  %2350 = getelementptr inbounds float, float* %5, i64 %2349
  %2351 = bitcast float* %2350 to <8 x float>*
  %2352 = load <8 x float>, <8 x float>* %2351, align 1, !tbaa !12
  %2353 = add nuw nsw i64 %2280, 32
  %2354 = getelementptr inbounds float, float* %5, i64 %2353
  %2355 = bitcast float* %2354 to <8 x float>*
  %2356 = load <8 x float>, <8 x float>* %2355, align 1, !tbaa !12
  %2357 = add nuw nsw i64 %2280, 40
  %2358 = getelementptr inbounds float, float* %5, i64 %2357
  %2359 = bitcast float* %2358 to <8 x float>*
  %2360 = load <8 x float>, <8 x float>* %2359, align 1, !tbaa !12
  %2361 = add nuw nsw i64 %2280, 48
  %2362 = getelementptr inbounds float, float* %5, i64 %2361
  %2363 = bitcast float* %2362 to <8 x float>*
  %2364 = load <8 x float>, <8 x float>* %2363, align 1, !tbaa !12
  %2365 = add nuw nsw i64 %2280, 56
  %2366 = getelementptr inbounds float, float* %5, i64 %2365
  %2367 = bitcast float* %2366 to <8 x float>*
  %2368 = load <8 x float>, <8 x float>* %2367, align 1, !tbaa !12
  %2369 = add nuw nsw i64 %2280, 64
  %2370 = getelementptr inbounds float, float* %5, i64 %2369
  %2371 = bitcast float* %2370 to <8 x float>*
  %2372 = load <8 x float>, <8 x float>* %2371, align 1, !tbaa !12
  %2373 = add nuw nsw i64 %2280, 72
  %2374 = getelementptr inbounds float, float* %5, i64 %2373
  %2375 = bitcast float* %2374 to <8 x float>*
  %2376 = load <8 x float>, <8 x float>* %2375, align 1, !tbaa !12
  %2377 = add nuw nsw i64 %2280, 80
  %2378 = getelementptr inbounds float, float* %5, i64 %2377
  %2379 = bitcast float* %2378 to <8 x float>*
  %2380 = load <8 x float>, <8 x float>* %2379, align 1, !tbaa !12
  %2381 = add nuw nsw i64 %2280, 88
  %2382 = getelementptr inbounds float, float* %5, i64 %2381
  %2383 = bitcast float* %2382 to <8 x float>*
  %2384 = load <8 x float>, <8 x float>* %2383, align 1, !tbaa !12
  %2385 = add nuw nsw i64 %2280, 96
  %2386 = getelementptr inbounds float, float* %5, i64 %2385
  %2387 = bitcast float* %2386 to <8 x float>*
  %2388 = load <8 x float>, <8 x float>* %2387, align 1, !tbaa !12
  %2389 = add nuw nsw i64 %2280, 104
  %2390 = getelementptr inbounds float, float* %5, i64 %2389
  %2391 = bitcast float* %2390 to <8 x float>*
  %2392 = load <8 x float>, <8 x float>* %2391, align 1, !tbaa !12
  %2393 = add nsw i64 %2280, %2084
  %2394 = getelementptr inbounds float, float* %3, i64 %2393
  %2395 = bitcast float* %2394 to <8 x float>*
  %2396 = load <8 x float>, <8 x float>* %2395, align 1, !tbaa !12
  %2397 = add nsw i64 %2393, 8
  %2398 = getelementptr inbounds float, float* %3, i64 %2397
  %2399 = bitcast float* %2398 to <8 x float>*
  %2400 = load <8 x float>, <8 x float>* %2399, align 1, !tbaa !12
  %2401 = add nsw i64 %2393, 16
  %2402 = getelementptr inbounds float, float* %3, i64 %2401
  %2403 = bitcast float* %2402 to <8 x float>*
  %2404 = load <8 x float>, <8 x float>* %2403, align 1, !tbaa !12
  %2405 = add nsw i64 %2393, 24
  %2406 = getelementptr inbounds float, float* %3, i64 %2405
  %2407 = bitcast float* %2406 to <8 x float>*
  %2408 = load <8 x float>, <8 x float>* %2407, align 1, !tbaa !12
  %2409 = add nsw i64 %2393, 32
  %2410 = getelementptr inbounds float, float* %3, i64 %2409
  %2411 = bitcast float* %2410 to <8 x float>*
  %2412 = load <8 x float>, <8 x float>* %2411, align 1, !tbaa !12
  %2413 = add nsw i64 %2393, 40
  %2414 = getelementptr inbounds float, float* %3, i64 %2413
  %2415 = bitcast float* %2414 to <8 x float>*
  %2416 = load <8 x float>, <8 x float>* %2415, align 1, !tbaa !12
  %2417 = add nsw i64 %2393, 48
  %2418 = getelementptr inbounds float, float* %3, i64 %2417
  %2419 = bitcast float* %2418 to <8 x float>*
  %2420 = load <8 x float>, <8 x float>* %2419, align 1, !tbaa !12
  %2421 = add nsw i64 %2393, 56
  %2422 = getelementptr inbounds float, float* %3, i64 %2421
  %2423 = bitcast float* %2422 to <8 x float>*
  %2424 = load <8 x float>, <8 x float>* %2423, align 1, !tbaa !12
  %2425 = add nsw i64 %2393, 64
  %2426 = getelementptr inbounds float, float* %3, i64 %2425
  %2427 = bitcast float* %2426 to <8 x float>*
  %2428 = load <8 x float>, <8 x float>* %2427, align 1, !tbaa !12
  %2429 = add nsw i64 %2393, 72
  %2430 = getelementptr inbounds float, float* %3, i64 %2429
  %2431 = bitcast float* %2430 to <8 x float>*
  %2432 = load <8 x float>, <8 x float>* %2431, align 1, !tbaa !12
  %2433 = add nsw i64 %2393, 80
  %2434 = getelementptr inbounds float, float* %3, i64 %2433
  %2435 = bitcast float* %2434 to <8 x float>*
  %2436 = load <8 x float>, <8 x float>* %2435, align 1, !tbaa !12
  %2437 = add nsw i64 %2393, 88
  %2438 = getelementptr inbounds float, float* %3, i64 %2437
  %2439 = bitcast float* %2438 to <8 x float>*
  %2440 = load <8 x float>, <8 x float>* %2439, align 1, !tbaa !12
  %2441 = add nsw i64 %2393, 96
  %2442 = getelementptr inbounds float, float* %3, i64 %2441
  %2443 = bitcast float* %2442 to <8 x float>*
  %2444 = load <8 x float>, <8 x float>* %2443, align 1, !tbaa !12
  %2445 = add nsw i64 %2393, 104
  %2446 = getelementptr inbounds float, float* %3, i64 %2445
  %2447 = bitcast float* %2446 to <8 x float>*
  %2448 = load <8 x float>, <8 x float>* %2447, align 1, !tbaa !12
  %2449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2396, <8 x float> %80, <8 x float> %2340) #10
  %2450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2400, <8 x float> %80, <8 x float> %2344) #10
  %2451 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2404, <8 x float> %80, <8 x float> %2348) #10
  %2452 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2408, <8 x float> %80, <8 x float> %2352) #10
  %2453 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2412, <8 x float> %80, <8 x float> %2356) #10
  %2454 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2416, <8 x float> %80, <8 x float> %2360) #10
  %2455 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2420, <8 x float> %80, <8 x float> %2364) #10
  %2456 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2424, <8 x float> %80, <8 x float> %2368) #10
  %2457 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2428, <8 x float> %80, <8 x float> %2372) #10
  %2458 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2432, <8 x float> %80, <8 x float> %2376) #10
  %2459 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2436, <8 x float> %80, <8 x float> %2380) #10
  %2460 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2440, <8 x float> %80, <8 x float> %2384) #10
  %2461 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2444, <8 x float> %80, <8 x float> %2388) #10
  %2462 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2448, <8 x float> %80, <8 x float> %2392) #10
  store <8 x float> %2449, <8 x float>* %2339, align 1, !tbaa !12
  store <8 x float> %2450, <8 x float>* %2343, align 1, !tbaa !12
  store <8 x float> %2451, <8 x float>* %2347, align 1, !tbaa !12
  store <8 x float> %2452, <8 x float>* %2351, align 1, !tbaa !12
  store <8 x float> %2453, <8 x float>* %2355, align 1, !tbaa !12
  store <8 x float> %2454, <8 x float>* %2359, align 1, !tbaa !12
  store <8 x float> %2455, <8 x float>* %2363, align 1, !tbaa !12
  store <8 x float> %2456, <8 x float>* %2367, align 1, !tbaa !12
  store <8 x float> %2457, <8 x float>* %2371, align 1, !tbaa !12
  store <8 x float> %2458, <8 x float>* %2375, align 1, !tbaa !12
  store <8 x float> %2459, <8 x float>* %2379, align 1, !tbaa !12
  store <8 x float> %2460, <8 x float>* %2383, align 1, !tbaa !12
  store <8 x float> %2461, <8 x float>* %2387, align 1, !tbaa !12
  store <8 x float> %2462, <8 x float>* %2391, align 1, !tbaa !12
  %2463 = add nuw nsw i64 %2280, 112
  %2464 = icmp ult i64 %2463, %2085
  br i1 %2464, label %2279, label %2272

2465:                                             ; preds = %2471
  br i1 %2274, label %2466, label %2672

2466:                                             ; preds = %2465
  %2467 = trunc i64 %86 to i32
  %2468 = mul nsw i32 %2273, %2467
  %2469 = sext i32 %2468 to i64
  %2470 = zext i32 %2273 to i64
  br label %2677

2471:                                             ; preds = %2275, %2471
  %2472 = phi i64 [ 0, %2275 ], [ %2670, %2471 ]
  %2473 = getelementptr inbounds float, float* %5, i64 %2472
  %2474 = getelementptr inbounds float, float* %2473, i64 8
  %2475 = bitcast float* %2474 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2475, i32 0, i32 1, i32 1)
  %2476 = getelementptr inbounds float, float* %3, i64 %2472
  %2477 = getelementptr inbounds float, float* %2476, i64 8
  %2478 = bitcast float* %2477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2478, i32 0, i32 1, i32 1)
  %2479 = getelementptr inbounds float, float* %2473, i64 16
  %2480 = bitcast float* %2479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2480, i32 0, i32 1, i32 1)
  %2481 = getelementptr inbounds float, float* %2476, i64 16
  %2482 = bitcast float* %2481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2482, i32 0, i32 1, i32 1)
  %2483 = getelementptr inbounds float, float* %2473, i64 24
  %2484 = bitcast float* %2483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2484, i32 0, i32 1, i32 1)
  %2485 = getelementptr inbounds float, float* %2476, i64 24
  %2486 = bitcast float* %2485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2486, i32 0, i32 1, i32 1)
  %2487 = getelementptr inbounds float, float* %2473, i64 32
  %2488 = bitcast float* %2487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2488, i32 0, i32 1, i32 1)
  %2489 = getelementptr inbounds float, float* %2476, i64 32
  %2490 = bitcast float* %2489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2490, i32 0, i32 1, i32 1)
  %2491 = getelementptr inbounds float, float* %2473, i64 40
  %2492 = bitcast float* %2491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2492, i32 0, i32 1, i32 1)
  %2493 = getelementptr inbounds float, float* %2476, i64 40
  %2494 = bitcast float* %2493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2494, i32 0, i32 1, i32 1)
  %2495 = getelementptr inbounds float, float* %2473, i64 48
  %2496 = bitcast float* %2495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2496, i32 0, i32 1, i32 1)
  %2497 = getelementptr inbounds float, float* %2476, i64 48
  %2498 = bitcast float* %2497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2498, i32 0, i32 1, i32 1)
  %2499 = getelementptr inbounds float, float* %2473, i64 56
  %2500 = bitcast float* %2499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2500, i32 0, i32 1, i32 1)
  %2501 = getelementptr inbounds float, float* %2476, i64 56
  %2502 = bitcast float* %2501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2502, i32 0, i32 1, i32 1)
  %2503 = getelementptr inbounds float, float* %2473, i64 64
  %2504 = bitcast float* %2503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2504, i32 0, i32 1, i32 1)
  %2505 = getelementptr inbounds float, float* %2476, i64 64
  %2506 = bitcast float* %2505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2506, i32 0, i32 1, i32 1)
  %2507 = getelementptr inbounds float, float* %2473, i64 72
  %2508 = bitcast float* %2507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2508, i32 0, i32 1, i32 1)
  %2509 = getelementptr inbounds float, float* %2476, i64 72
  %2510 = bitcast float* %2509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2510, i32 0, i32 1, i32 1)
  %2511 = getelementptr inbounds float, float* %2473, i64 80
  %2512 = bitcast float* %2511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2512, i32 0, i32 1, i32 1)
  %2513 = getelementptr inbounds float, float* %2476, i64 80
  %2514 = bitcast float* %2513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2514, i32 0, i32 1, i32 1)
  %2515 = getelementptr inbounds float, float* %2473, i64 88
  %2516 = bitcast float* %2515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2516, i32 0, i32 1, i32 1)
  %2517 = getelementptr inbounds float, float* %2476, i64 88
  %2518 = bitcast float* %2517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2518, i32 0, i32 1, i32 1)
  %2519 = getelementptr inbounds float, float* %2473, i64 96
  %2520 = bitcast float* %2519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2520, i32 0, i32 1, i32 1)
  %2521 = getelementptr inbounds float, float* %2476, i64 96
  %2522 = bitcast float* %2521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2522, i32 0, i32 1, i32 1)
  %2523 = getelementptr inbounds float, float* %2473, i64 104
  %2524 = bitcast float* %2523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2524, i32 0, i32 1, i32 1)
  %2525 = getelementptr inbounds float, float* %2476, i64 104
  %2526 = bitcast float* %2525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2526, i32 0, i32 1, i32 1)
  %2527 = getelementptr inbounds float, float* %2473, i64 112
  %2528 = bitcast float* %2527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2528, i32 0, i32 1, i32 1)
  %2529 = getelementptr inbounds float, float* %2476, i64 112
  %2530 = bitcast float* %2529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2530, i32 0, i32 1, i32 1)
  %2531 = bitcast float* %2473 to <8 x float>*
  %2532 = load <8 x float>, <8 x float>* %2531, align 1, !tbaa !12
  %2533 = or i64 %2472, 8
  %2534 = getelementptr inbounds float, float* %5, i64 %2533
  %2535 = bitcast float* %2534 to <8 x float>*
  %2536 = load <8 x float>, <8 x float>* %2535, align 1, !tbaa !12
  %2537 = add nuw nsw i64 %2472, 16
  %2538 = getelementptr inbounds float, float* %5, i64 %2537
  %2539 = bitcast float* %2538 to <8 x float>*
  %2540 = load <8 x float>, <8 x float>* %2539, align 1, !tbaa !12
  %2541 = add nuw nsw i64 %2472, 24
  %2542 = getelementptr inbounds float, float* %5, i64 %2541
  %2543 = bitcast float* %2542 to <8 x float>*
  %2544 = load <8 x float>, <8 x float>* %2543, align 1, !tbaa !12
  %2545 = add nuw nsw i64 %2472, 32
  %2546 = getelementptr inbounds float, float* %5, i64 %2545
  %2547 = bitcast float* %2546 to <8 x float>*
  %2548 = load <8 x float>, <8 x float>* %2547, align 1, !tbaa !12
  %2549 = add nuw nsw i64 %2472, 40
  %2550 = getelementptr inbounds float, float* %5, i64 %2549
  %2551 = bitcast float* %2550 to <8 x float>*
  %2552 = load <8 x float>, <8 x float>* %2551, align 1, !tbaa !12
  %2553 = add nuw nsw i64 %2472, 48
  %2554 = getelementptr inbounds float, float* %5, i64 %2553
  %2555 = bitcast float* %2554 to <8 x float>*
  %2556 = load <8 x float>, <8 x float>* %2555, align 1, !tbaa !12
  %2557 = add nuw nsw i64 %2472, 56
  %2558 = getelementptr inbounds float, float* %5, i64 %2557
  %2559 = bitcast float* %2558 to <8 x float>*
  %2560 = load <8 x float>, <8 x float>* %2559, align 1, !tbaa !12
  %2561 = add nuw nsw i64 %2472, 64
  %2562 = getelementptr inbounds float, float* %5, i64 %2561
  %2563 = bitcast float* %2562 to <8 x float>*
  %2564 = load <8 x float>, <8 x float>* %2563, align 1, !tbaa !12
  %2565 = add nuw nsw i64 %2472, 72
  %2566 = getelementptr inbounds float, float* %5, i64 %2565
  %2567 = bitcast float* %2566 to <8 x float>*
  %2568 = load <8 x float>, <8 x float>* %2567, align 1, !tbaa !12
  %2569 = add nuw nsw i64 %2472, 80
  %2570 = getelementptr inbounds float, float* %5, i64 %2569
  %2571 = bitcast float* %2570 to <8 x float>*
  %2572 = load <8 x float>, <8 x float>* %2571, align 1, !tbaa !12
  %2573 = add nuw nsw i64 %2472, 88
  %2574 = getelementptr inbounds float, float* %5, i64 %2573
  %2575 = bitcast float* %2574 to <8 x float>*
  %2576 = load <8 x float>, <8 x float>* %2575, align 1, !tbaa !12
  %2577 = add nuw nsw i64 %2472, 96
  %2578 = getelementptr inbounds float, float* %5, i64 %2577
  %2579 = bitcast float* %2578 to <8 x float>*
  %2580 = load <8 x float>, <8 x float>* %2579, align 1, !tbaa !12
  %2581 = add nuw nsw i64 %2472, 104
  %2582 = getelementptr inbounds float, float* %5, i64 %2581
  %2583 = bitcast float* %2582 to <8 x float>*
  %2584 = load <8 x float>, <8 x float>* %2583, align 1, !tbaa !12
  %2585 = trunc i64 %2472 to i32
  %2586 = add nsw i32 %2278, %2585
  %2587 = sext i32 %2586 to i64
  %2588 = getelementptr inbounds float, float* %3, i64 %2587
  %2589 = bitcast float* %2588 to <8 x float>*
  %2590 = load <8 x float>, <8 x float>* %2589, align 1, !tbaa !12
  %2591 = add nsw i32 %2586, 8
  %2592 = sext i32 %2591 to i64
  %2593 = getelementptr inbounds float, float* %3, i64 %2592
  %2594 = bitcast float* %2593 to <8 x float>*
  %2595 = load <8 x float>, <8 x float>* %2594, align 1, !tbaa !12
  %2596 = add nsw i32 %2586, 16
  %2597 = sext i32 %2596 to i64
  %2598 = getelementptr inbounds float, float* %3, i64 %2597
  %2599 = bitcast float* %2598 to <8 x float>*
  %2600 = load <8 x float>, <8 x float>* %2599, align 1, !tbaa !12
  %2601 = add nsw i32 %2586, 24
  %2602 = sext i32 %2601 to i64
  %2603 = getelementptr inbounds float, float* %3, i64 %2602
  %2604 = bitcast float* %2603 to <8 x float>*
  %2605 = load <8 x float>, <8 x float>* %2604, align 1, !tbaa !12
  %2606 = add nsw i32 %2586, 32
  %2607 = sext i32 %2606 to i64
  %2608 = getelementptr inbounds float, float* %3, i64 %2607
  %2609 = bitcast float* %2608 to <8 x float>*
  %2610 = load <8 x float>, <8 x float>* %2609, align 1, !tbaa !12
  %2611 = add nsw i32 %2586, 40
  %2612 = sext i32 %2611 to i64
  %2613 = getelementptr inbounds float, float* %3, i64 %2612
  %2614 = bitcast float* %2613 to <8 x float>*
  %2615 = load <8 x float>, <8 x float>* %2614, align 1, !tbaa !12
  %2616 = add nsw i32 %2586, 48
  %2617 = sext i32 %2616 to i64
  %2618 = getelementptr inbounds float, float* %3, i64 %2617
  %2619 = bitcast float* %2618 to <8 x float>*
  %2620 = load <8 x float>, <8 x float>* %2619, align 1, !tbaa !12
  %2621 = add nsw i32 %2586, 56
  %2622 = sext i32 %2621 to i64
  %2623 = getelementptr inbounds float, float* %3, i64 %2622
  %2624 = bitcast float* %2623 to <8 x float>*
  %2625 = load <8 x float>, <8 x float>* %2624, align 1, !tbaa !12
  %2626 = add nsw i32 %2586, 64
  %2627 = sext i32 %2626 to i64
  %2628 = getelementptr inbounds float, float* %3, i64 %2627
  %2629 = bitcast float* %2628 to <8 x float>*
  %2630 = load <8 x float>, <8 x float>* %2629, align 1, !tbaa !12
  %2631 = add nsw i32 %2586, 72
  %2632 = sext i32 %2631 to i64
  %2633 = getelementptr inbounds float, float* %3, i64 %2632
  %2634 = bitcast float* %2633 to <8 x float>*
  %2635 = load <8 x float>, <8 x float>* %2634, align 1, !tbaa !12
  %2636 = add nsw i32 %2586, 80
  %2637 = sext i32 %2636 to i64
  %2638 = getelementptr inbounds float, float* %3, i64 %2637
  %2639 = bitcast float* %2638 to <8 x float>*
  %2640 = load <8 x float>, <8 x float>* %2639, align 1, !tbaa !12
  %2641 = add nsw i32 %2586, 88
  %2642 = sext i32 %2641 to i64
  %2643 = getelementptr inbounds float, float* %3, i64 %2642
  %2644 = bitcast float* %2643 to <8 x float>*
  %2645 = load <8 x float>, <8 x float>* %2644, align 1, !tbaa !12
  %2646 = add nsw i32 %2586, 96
  %2647 = sext i32 %2646 to i64
  %2648 = getelementptr inbounds float, float* %3, i64 %2647
  %2649 = bitcast float* %2648 to <8 x float>*
  %2650 = load <8 x float>, <8 x float>* %2649, align 1, !tbaa !12
  %2651 = add nsw i32 %2586, 104
  %2652 = sext i32 %2651 to i64
  %2653 = getelementptr inbounds float, float* %3, i64 %2652
  %2654 = bitcast float* %2653 to <8 x float>*
  %2655 = load <8 x float>, <8 x float>* %2654, align 1, !tbaa !12
  %2656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2590, <8 x float> %85, <8 x float> %2532) #10
  %2657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2595, <8 x float> %85, <8 x float> %2536) #10
  %2658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2600, <8 x float> %85, <8 x float> %2540) #10
  %2659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2605, <8 x float> %85, <8 x float> %2544) #10
  %2660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2610, <8 x float> %85, <8 x float> %2548) #10
  %2661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2615, <8 x float> %85, <8 x float> %2552) #10
  %2662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2620, <8 x float> %85, <8 x float> %2556) #10
  %2663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2625, <8 x float> %85, <8 x float> %2560) #10
  %2664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2630, <8 x float> %85, <8 x float> %2564) #10
  %2665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2635, <8 x float> %85, <8 x float> %2568) #10
  %2666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2640, <8 x float> %85, <8 x float> %2572) #10
  %2667 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2645, <8 x float> %85, <8 x float> %2576) #10
  %2668 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2650, <8 x float> %85, <8 x float> %2580) #10
  %2669 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2655, <8 x float> %85, <8 x float> %2584) #10
  store <8 x float> %2656, <8 x float>* %2531, align 1, !tbaa !12
  store <8 x float> %2657, <8 x float>* %2535, align 1, !tbaa !12
  store <8 x float> %2658, <8 x float>* %2539, align 1, !tbaa !12
  store <8 x float> %2659, <8 x float>* %2543, align 1, !tbaa !12
  store <8 x float> %2660, <8 x float>* %2547, align 1, !tbaa !12
  store <8 x float> %2661, <8 x float>* %2551, align 1, !tbaa !12
  store <8 x float> %2662, <8 x float>* %2555, align 1, !tbaa !12
  store <8 x float> %2663, <8 x float>* %2559, align 1, !tbaa !12
  store <8 x float> %2664, <8 x float>* %2563, align 1, !tbaa !12
  store <8 x float> %2665, <8 x float>* %2567, align 1, !tbaa !12
  store <8 x float> %2666, <8 x float>* %2571, align 1, !tbaa !12
  store <8 x float> %2667, <8 x float>* %2575, align 1, !tbaa !12
  store <8 x float> %2668, <8 x float>* %2579, align 1, !tbaa !12
  store <8 x float> %2669, <8 x float>* %2583, align 1, !tbaa !12
  %2670 = add nuw nsw i64 %2472, 112
  %2671 = icmp ult i64 %2670, %2276
  br i1 %2671, label %2471, label %2465

2672:                                             ; preds = %2677, %496, %20, %1088, %1680, %2272, %2465
  %2673 = add nuw nsw i64 %21, 14
  %2674 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %2675 = sext i32 %2674 to i64
  %2676 = icmp slt i64 %2673, %2675
  br i1 %2676, label %20, label %8

2677:                                             ; preds = %2466, %2677
  %2678 = phi i64 [ 0, %2466 ], [ %2861, %2677 ]
  %2679 = getelementptr inbounds float, float* %5, i64 %2678
  %2680 = getelementptr inbounds float, float* %2679, i64 8
  %2681 = bitcast float* %2680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2681, i32 0, i32 1, i32 1)
  %2682 = getelementptr inbounds float, float* %3, i64 %2678
  %2683 = getelementptr inbounds float, float* %2682, i64 8
  %2684 = bitcast float* %2683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2684, i32 0, i32 1, i32 1)
  %2685 = getelementptr inbounds float, float* %2679, i64 16
  %2686 = bitcast float* %2685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2686, i32 0, i32 1, i32 1)
  %2687 = getelementptr inbounds float, float* %2682, i64 16
  %2688 = bitcast float* %2687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2688, i32 0, i32 1, i32 1)
  %2689 = getelementptr inbounds float, float* %2679, i64 24
  %2690 = bitcast float* %2689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2690, i32 0, i32 1, i32 1)
  %2691 = getelementptr inbounds float, float* %2682, i64 24
  %2692 = bitcast float* %2691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2692, i32 0, i32 1, i32 1)
  %2693 = getelementptr inbounds float, float* %2679, i64 32
  %2694 = bitcast float* %2693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2694, i32 0, i32 1, i32 1)
  %2695 = getelementptr inbounds float, float* %2682, i64 32
  %2696 = bitcast float* %2695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2696, i32 0, i32 1, i32 1)
  %2697 = getelementptr inbounds float, float* %2679, i64 40
  %2698 = bitcast float* %2697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2698, i32 0, i32 1, i32 1)
  %2699 = getelementptr inbounds float, float* %2682, i64 40
  %2700 = bitcast float* %2699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2700, i32 0, i32 1, i32 1)
  %2701 = getelementptr inbounds float, float* %2679, i64 48
  %2702 = bitcast float* %2701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2702, i32 0, i32 1, i32 1)
  %2703 = getelementptr inbounds float, float* %2682, i64 48
  %2704 = bitcast float* %2703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2704, i32 0, i32 1, i32 1)
  %2705 = getelementptr inbounds float, float* %2679, i64 56
  %2706 = bitcast float* %2705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2706, i32 0, i32 1, i32 1)
  %2707 = getelementptr inbounds float, float* %2682, i64 56
  %2708 = bitcast float* %2707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2708, i32 0, i32 1, i32 1)
  %2709 = getelementptr inbounds float, float* %2679, i64 64
  %2710 = bitcast float* %2709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2710, i32 0, i32 1, i32 1)
  %2711 = getelementptr inbounds float, float* %2682, i64 64
  %2712 = bitcast float* %2711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2712, i32 0, i32 1, i32 1)
  %2713 = getelementptr inbounds float, float* %2679, i64 72
  %2714 = bitcast float* %2713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2714, i32 0, i32 1, i32 1)
  %2715 = getelementptr inbounds float, float* %2682, i64 72
  %2716 = bitcast float* %2715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2716, i32 0, i32 1, i32 1)
  %2717 = getelementptr inbounds float, float* %2679, i64 80
  %2718 = bitcast float* %2717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2718, i32 0, i32 1, i32 1)
  %2719 = getelementptr inbounds float, float* %2682, i64 80
  %2720 = bitcast float* %2719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2720, i32 0, i32 1, i32 1)
  %2721 = getelementptr inbounds float, float* %2679, i64 88
  %2722 = bitcast float* %2721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2722, i32 0, i32 1, i32 1)
  %2723 = getelementptr inbounds float, float* %2682, i64 88
  %2724 = bitcast float* %2723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2724, i32 0, i32 1, i32 1)
  %2725 = getelementptr inbounds float, float* %2679, i64 96
  %2726 = bitcast float* %2725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2726, i32 0, i32 1, i32 1)
  %2727 = getelementptr inbounds float, float* %2682, i64 96
  %2728 = bitcast float* %2727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2728, i32 0, i32 1, i32 1)
  %2729 = getelementptr inbounds float, float* %2679, i64 104
  %2730 = bitcast float* %2729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2730, i32 0, i32 1, i32 1)
  %2731 = getelementptr inbounds float, float* %2682, i64 104
  %2732 = bitcast float* %2731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2732, i32 0, i32 1, i32 1)
  %2733 = getelementptr inbounds float, float* %2679, i64 112
  %2734 = bitcast float* %2733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2734, i32 0, i32 1, i32 1)
  %2735 = getelementptr inbounds float, float* %2682, i64 112
  %2736 = bitcast float* %2735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2736, i32 0, i32 1, i32 1)
  %2737 = bitcast float* %2679 to <8 x float>*
  %2738 = load <8 x float>, <8 x float>* %2737, align 1, !tbaa !12
  %2739 = or i64 %2678, 8
  %2740 = getelementptr inbounds float, float* %5, i64 %2739
  %2741 = bitcast float* %2740 to <8 x float>*
  %2742 = load <8 x float>, <8 x float>* %2741, align 1, !tbaa !12
  %2743 = add nuw nsw i64 %2678, 16
  %2744 = getelementptr inbounds float, float* %5, i64 %2743
  %2745 = bitcast float* %2744 to <8 x float>*
  %2746 = load <8 x float>, <8 x float>* %2745, align 1, !tbaa !12
  %2747 = add nuw nsw i64 %2678, 24
  %2748 = getelementptr inbounds float, float* %5, i64 %2747
  %2749 = bitcast float* %2748 to <8 x float>*
  %2750 = load <8 x float>, <8 x float>* %2749, align 1, !tbaa !12
  %2751 = add nuw nsw i64 %2678, 32
  %2752 = getelementptr inbounds float, float* %5, i64 %2751
  %2753 = bitcast float* %2752 to <8 x float>*
  %2754 = load <8 x float>, <8 x float>* %2753, align 1, !tbaa !12
  %2755 = add nuw nsw i64 %2678, 40
  %2756 = getelementptr inbounds float, float* %5, i64 %2755
  %2757 = bitcast float* %2756 to <8 x float>*
  %2758 = load <8 x float>, <8 x float>* %2757, align 1, !tbaa !12
  %2759 = add nuw nsw i64 %2678, 48
  %2760 = getelementptr inbounds float, float* %5, i64 %2759
  %2761 = bitcast float* %2760 to <8 x float>*
  %2762 = load <8 x float>, <8 x float>* %2761, align 1, !tbaa !12
  %2763 = add nuw nsw i64 %2678, 56
  %2764 = getelementptr inbounds float, float* %5, i64 %2763
  %2765 = bitcast float* %2764 to <8 x float>*
  %2766 = load <8 x float>, <8 x float>* %2765, align 1, !tbaa !12
  %2767 = add nuw nsw i64 %2678, 64
  %2768 = getelementptr inbounds float, float* %5, i64 %2767
  %2769 = bitcast float* %2768 to <8 x float>*
  %2770 = load <8 x float>, <8 x float>* %2769, align 1, !tbaa !12
  %2771 = add nuw nsw i64 %2678, 72
  %2772 = getelementptr inbounds float, float* %5, i64 %2771
  %2773 = bitcast float* %2772 to <8 x float>*
  %2774 = load <8 x float>, <8 x float>* %2773, align 1, !tbaa !12
  %2775 = add nuw nsw i64 %2678, 80
  %2776 = getelementptr inbounds float, float* %5, i64 %2775
  %2777 = bitcast float* %2776 to <8 x float>*
  %2778 = load <8 x float>, <8 x float>* %2777, align 1, !tbaa !12
  %2779 = add nuw nsw i64 %2678, 88
  %2780 = getelementptr inbounds float, float* %5, i64 %2779
  %2781 = bitcast float* %2780 to <8 x float>*
  %2782 = load <8 x float>, <8 x float>* %2781, align 1, !tbaa !12
  %2783 = add nuw nsw i64 %2678, 96
  %2784 = getelementptr inbounds float, float* %5, i64 %2783
  %2785 = bitcast float* %2784 to <8 x float>*
  %2786 = load <8 x float>, <8 x float>* %2785, align 1, !tbaa !12
  %2787 = add nuw nsw i64 %2678, 104
  %2788 = getelementptr inbounds float, float* %5, i64 %2787
  %2789 = bitcast float* %2788 to <8 x float>*
  %2790 = load <8 x float>, <8 x float>* %2789, align 1, !tbaa !12
  %2791 = add nsw i64 %2678, %2469
  %2792 = getelementptr inbounds float, float* %3, i64 %2791
  %2793 = bitcast float* %2792 to <8 x float>*
  %2794 = load <8 x float>, <8 x float>* %2793, align 1, !tbaa !12
  %2795 = add nsw i64 %2791, 8
  %2796 = getelementptr inbounds float, float* %3, i64 %2795
  %2797 = bitcast float* %2796 to <8 x float>*
  %2798 = load <8 x float>, <8 x float>* %2797, align 1, !tbaa !12
  %2799 = add nsw i64 %2791, 16
  %2800 = getelementptr inbounds float, float* %3, i64 %2799
  %2801 = bitcast float* %2800 to <8 x float>*
  %2802 = load <8 x float>, <8 x float>* %2801, align 1, !tbaa !12
  %2803 = add nsw i64 %2791, 24
  %2804 = getelementptr inbounds float, float* %3, i64 %2803
  %2805 = bitcast float* %2804 to <8 x float>*
  %2806 = load <8 x float>, <8 x float>* %2805, align 1, !tbaa !12
  %2807 = add nsw i64 %2791, 32
  %2808 = getelementptr inbounds float, float* %3, i64 %2807
  %2809 = bitcast float* %2808 to <8 x float>*
  %2810 = load <8 x float>, <8 x float>* %2809, align 1, !tbaa !12
  %2811 = add nsw i64 %2791, 40
  %2812 = getelementptr inbounds float, float* %3, i64 %2811
  %2813 = bitcast float* %2812 to <8 x float>*
  %2814 = load <8 x float>, <8 x float>* %2813, align 1, !tbaa !12
  %2815 = add nsw i64 %2791, 48
  %2816 = getelementptr inbounds float, float* %3, i64 %2815
  %2817 = bitcast float* %2816 to <8 x float>*
  %2818 = load <8 x float>, <8 x float>* %2817, align 1, !tbaa !12
  %2819 = add nsw i64 %2791, 56
  %2820 = getelementptr inbounds float, float* %3, i64 %2819
  %2821 = bitcast float* %2820 to <8 x float>*
  %2822 = load <8 x float>, <8 x float>* %2821, align 1, !tbaa !12
  %2823 = add nsw i64 %2791, 64
  %2824 = getelementptr inbounds float, float* %3, i64 %2823
  %2825 = bitcast float* %2824 to <8 x float>*
  %2826 = load <8 x float>, <8 x float>* %2825, align 1, !tbaa !12
  %2827 = add nsw i64 %2791, 72
  %2828 = getelementptr inbounds float, float* %3, i64 %2827
  %2829 = bitcast float* %2828 to <8 x float>*
  %2830 = load <8 x float>, <8 x float>* %2829, align 1, !tbaa !12
  %2831 = add nsw i64 %2791, 80
  %2832 = getelementptr inbounds float, float* %3, i64 %2831
  %2833 = bitcast float* %2832 to <8 x float>*
  %2834 = load <8 x float>, <8 x float>* %2833, align 1, !tbaa !12
  %2835 = add nsw i64 %2791, 88
  %2836 = getelementptr inbounds float, float* %3, i64 %2835
  %2837 = bitcast float* %2836 to <8 x float>*
  %2838 = load <8 x float>, <8 x float>* %2837, align 1, !tbaa !12
  %2839 = add nsw i64 %2791, 96
  %2840 = getelementptr inbounds float, float* %3, i64 %2839
  %2841 = bitcast float* %2840 to <8 x float>*
  %2842 = load <8 x float>, <8 x float>* %2841, align 1, !tbaa !12
  %2843 = add nsw i64 %2791, 104
  %2844 = getelementptr inbounds float, float* %3, i64 %2843
  %2845 = bitcast float* %2844 to <8 x float>*
  %2846 = load <8 x float>, <8 x float>* %2845, align 1, !tbaa !12
  %2847 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2794, <8 x float> %90, <8 x float> %2738) #10
  %2848 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2798, <8 x float> %90, <8 x float> %2742) #10
  %2849 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2802, <8 x float> %90, <8 x float> %2746) #10
  %2850 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2806, <8 x float> %90, <8 x float> %2750) #10
  %2851 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2810, <8 x float> %90, <8 x float> %2754) #10
  %2852 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2814, <8 x float> %90, <8 x float> %2758) #10
  %2853 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2818, <8 x float> %90, <8 x float> %2762) #10
  %2854 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2822, <8 x float> %90, <8 x float> %2766) #10
  %2855 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2826, <8 x float> %90, <8 x float> %2770) #10
  %2856 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2830, <8 x float> %90, <8 x float> %2774) #10
  %2857 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2834, <8 x float> %90, <8 x float> %2778) #10
  %2858 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2838, <8 x float> %90, <8 x float> %2782) #10
  %2859 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2842, <8 x float> %90, <8 x float> %2786) #10
  %2860 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2846, <8 x float> %90, <8 x float> %2790) #10
  store <8 x float> %2847, <8 x float>* %2737, align 1, !tbaa !12
  store <8 x float> %2848, <8 x float>* %2741, align 1, !tbaa !12
  store <8 x float> %2849, <8 x float>* %2745, align 1, !tbaa !12
  store <8 x float> %2850, <8 x float>* %2749, align 1, !tbaa !12
  store <8 x float> %2851, <8 x float>* %2753, align 1, !tbaa !12
  store <8 x float> %2852, <8 x float>* %2757, align 1, !tbaa !12
  store <8 x float> %2853, <8 x float>* %2761, align 1, !tbaa !12
  store <8 x float> %2854, <8 x float>* %2765, align 1, !tbaa !12
  store <8 x float> %2855, <8 x float>* %2769, align 1, !tbaa !12
  store <8 x float> %2856, <8 x float>* %2773, align 1, !tbaa !12
  store <8 x float> %2857, <8 x float>* %2777, align 1, !tbaa !12
  store <8 x float> %2858, <8 x float>* %2781, align 1, !tbaa !12
  store <8 x float> %2859, <8 x float>* %2785, align 1, !tbaa !12
  store <8 x float> %2860, <8 x float>* %2789, align 1, !tbaa !12
  %2861 = add nuw nsw i64 %2678, 112
  %2862 = icmp ult i64 %2861, %2470
  br i1 %2862, label %2677, label %2672
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 406
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui14_uk14.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
