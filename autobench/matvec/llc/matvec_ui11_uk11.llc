; ModuleID = 'codes/matvec_ui11_uk11.cpp'
source_filename = "codes/matvec_ui11_uk11.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui11_uk11.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 88
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 88
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1650, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1650
  %21 = phi i64 [ %1651, %1650 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %1650

78:                                               ; preds = %20
  %79 = zext i32 %76 to i64
  %80 = trunc i64 %21 to i32
  %81 = mul nsw i32 %76, %80
  br label %88

82:                                               ; preds = %88
  br i1 %77, label %83, label %553

83:                                               ; preds = %82
  %84 = trunc i64 %26 to i32
  %85 = mul nsw i32 %76, %84
  %86 = sext i32 %85 to i64
  %87 = zext i32 %76 to i64
  br label %253

88:                                               ; preds = %78, %88
  %89 = phi i64 [ 0, %78 ], [ %245, %88 ]
  %90 = getelementptr inbounds float, float* %5, i64 %89
  %91 = getelementptr inbounds float, float* %90, i64 8
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %3, i64 %89
  %94 = getelementptr inbounds float, float* %93, i64 8
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %90, i64 16
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %93, i64 16
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %90, i64 24
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %93, i64 24
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %90, i64 32
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %93, i64 32
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %90, i64 40
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %93, i64 40
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %90, i64 48
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %93, i64 48
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %90, i64 56
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %93, i64 56
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %90, i64 64
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %93, i64 64
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %90, i64 72
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %93, i64 72
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %90, i64 80
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %93, i64 80
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %90, i64 88
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %93, i64 88
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = bitcast float* %90 to <8 x float>*
  %137 = load <8 x float>, <8 x float>* %136, align 1, !tbaa !12
  %138 = add nuw nsw i64 %89, 8
  %139 = getelementptr inbounds float, float* %5, i64 %138
  %140 = bitcast float* %139 to <8 x float>*
  %141 = load <8 x float>, <8 x float>* %140, align 1, !tbaa !12
  %142 = add nuw nsw i64 %89, 16
  %143 = getelementptr inbounds float, float* %5, i64 %142
  %144 = bitcast float* %143 to <8 x float>*
  %145 = load <8 x float>, <8 x float>* %144, align 1, !tbaa !12
  %146 = add nuw nsw i64 %89, 24
  %147 = getelementptr inbounds float, float* %5, i64 %146
  %148 = bitcast float* %147 to <8 x float>*
  %149 = load <8 x float>, <8 x float>* %148, align 1, !tbaa !12
  %150 = add nuw nsw i64 %89, 32
  %151 = getelementptr inbounds float, float* %5, i64 %150
  %152 = bitcast float* %151 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = add nuw nsw i64 %89, 40
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nuw nsw i64 %89, 48
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = add nuw nsw i64 %89, 56
  %163 = getelementptr inbounds float, float* %5, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = add nuw nsw i64 %89, 64
  %167 = getelementptr inbounds float, float* %5, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = add nuw nsw i64 %89, 72
  %171 = getelementptr inbounds float, float* %5, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = add nuw nsw i64 %89, 80
  %175 = getelementptr inbounds float, float* %5, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = trunc i64 %89 to i32
  %179 = add nsw i32 %81, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds float, float* %3, i64 %180
  %182 = bitcast float* %181 to <8 x float>*
  %183 = load <8 x float>, <8 x float>* %182, align 1, !tbaa !12
  %184 = add nsw i32 %179, 8
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds float, float* %3, i64 %185
  %187 = bitcast float* %186 to <8 x float>*
  %188 = load <8 x float>, <8 x float>* %187, align 1, !tbaa !12
  %189 = add nsw i32 %179, 16
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds float, float* %3, i64 %190
  %192 = bitcast float* %191 to <8 x float>*
  %193 = load <8 x float>, <8 x float>* %192, align 1, !tbaa !12
  %194 = add nsw i32 %179, 24
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds float, float* %3, i64 %195
  %197 = bitcast float* %196 to <8 x float>*
  %198 = load <8 x float>, <8 x float>* %197, align 1, !tbaa !12
  %199 = add nsw i32 %179, 32
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds float, float* %3, i64 %200
  %202 = bitcast float* %201 to <8 x float>*
  %203 = load <8 x float>, <8 x float>* %202, align 1, !tbaa !12
  %204 = add nsw i32 %179, 40
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds float, float* %3, i64 %205
  %207 = bitcast float* %206 to <8 x float>*
  %208 = load <8 x float>, <8 x float>* %207, align 1, !tbaa !12
  %209 = add nsw i32 %179, 48
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds float, float* %3, i64 %210
  %212 = bitcast float* %211 to <8 x float>*
  %213 = load <8 x float>, <8 x float>* %212, align 1, !tbaa !12
  %214 = add nsw i32 %179, 56
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds float, float* %3, i64 %215
  %217 = bitcast float* %216 to <8 x float>*
  %218 = load <8 x float>, <8 x float>* %217, align 1, !tbaa !12
  %219 = add nsw i32 %179, 64
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds float, float* %3, i64 %220
  %222 = bitcast float* %221 to <8 x float>*
  %223 = load <8 x float>, <8 x float>* %222, align 1, !tbaa !12
  %224 = add nsw i32 %179, 72
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds float, float* %3, i64 %225
  %227 = bitcast float* %226 to <8 x float>*
  %228 = load <8 x float>, <8 x float>* %227, align 1, !tbaa !12
  %229 = add nsw i32 %179, 80
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds float, float* %3, i64 %230
  %232 = bitcast float* %231 to <8 x float>*
  %233 = load <8 x float>, <8 x float>* %232, align 1, !tbaa !12
  %234 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %183, <8 x float> %25, <8 x float> %137) #10
  %235 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %188, <8 x float> %25, <8 x float> %141) #10
  %236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %193, <8 x float> %25, <8 x float> %145) #10
  %237 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %198, <8 x float> %25, <8 x float> %149) #10
  %238 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %203, <8 x float> %25, <8 x float> %153) #10
  %239 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %208, <8 x float> %25, <8 x float> %157) #10
  %240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %213, <8 x float> %25, <8 x float> %161) #10
  %241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %218, <8 x float> %25, <8 x float> %165) #10
  %242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %223, <8 x float> %25, <8 x float> %169) #10
  %243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %228, <8 x float> %25, <8 x float> %173) #10
  %244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %233, <8 x float> %25, <8 x float> %177) #10
  store <8 x float> %234, <8 x float>* %136, align 1, !tbaa !12
  store <8 x float> %235, <8 x float>* %140, align 1, !tbaa !12
  store <8 x float> %236, <8 x float>* %144, align 1, !tbaa !12
  store <8 x float> %237, <8 x float>* %148, align 1, !tbaa !12
  store <8 x float> %238, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %239, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %240, <8 x float>* %160, align 1, !tbaa !12
  store <8 x float> %241, <8 x float>* %164, align 1, !tbaa !12
  store <8 x float> %242, <8 x float>* %168, align 1, !tbaa !12
  store <8 x float> %243, <8 x float>* %172, align 1, !tbaa !12
  store <8 x float> %244, <8 x float>* %176, align 1, !tbaa !12
  %245 = add nuw nsw i64 %89, 88
  %246 = icmp ult i64 %245, %79
  br i1 %246, label %88, label %82

247:                                              ; preds = %253
  br i1 %77, label %248, label %553

248:                                              ; preds = %247
  %249 = trunc i64 %31 to i32
  %250 = mul nsw i32 %76, %249
  %251 = sext i32 %250 to i64
  %252 = zext i32 %76 to i64
  br label %406

253:                                              ; preds = %83, %253
  %254 = phi i64 [ 0, %83 ], [ %398, %253 ]
  %255 = getelementptr inbounds float, float* %5, i64 %254
  %256 = getelementptr inbounds float, float* %255, i64 8
  %257 = bitcast float* %256 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %257, i32 0, i32 1, i32 1)
  %258 = getelementptr inbounds float, float* %3, i64 %254
  %259 = getelementptr inbounds float, float* %258, i64 8
  %260 = bitcast float* %259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %260, i32 0, i32 1, i32 1)
  %261 = getelementptr inbounds float, float* %255, i64 16
  %262 = bitcast float* %261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %262, i32 0, i32 1, i32 1)
  %263 = getelementptr inbounds float, float* %258, i64 16
  %264 = bitcast float* %263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %264, i32 0, i32 1, i32 1)
  %265 = getelementptr inbounds float, float* %255, i64 24
  %266 = bitcast float* %265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %266, i32 0, i32 1, i32 1)
  %267 = getelementptr inbounds float, float* %258, i64 24
  %268 = bitcast float* %267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %268, i32 0, i32 1, i32 1)
  %269 = getelementptr inbounds float, float* %255, i64 32
  %270 = bitcast float* %269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %270, i32 0, i32 1, i32 1)
  %271 = getelementptr inbounds float, float* %258, i64 32
  %272 = bitcast float* %271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %272, i32 0, i32 1, i32 1)
  %273 = getelementptr inbounds float, float* %255, i64 40
  %274 = bitcast float* %273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %274, i32 0, i32 1, i32 1)
  %275 = getelementptr inbounds float, float* %258, i64 40
  %276 = bitcast float* %275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %276, i32 0, i32 1, i32 1)
  %277 = getelementptr inbounds float, float* %255, i64 48
  %278 = bitcast float* %277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %278, i32 0, i32 1, i32 1)
  %279 = getelementptr inbounds float, float* %258, i64 48
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %255, i64 56
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %258, i64 56
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %255, i64 64
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %258, i64 64
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %255, i64 72
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %258, i64 72
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %255, i64 80
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %258, i64 80
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %255, i64 88
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %258, i64 88
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = bitcast float* %255 to <8 x float>*
  %302 = load <8 x float>, <8 x float>* %301, align 1, !tbaa !12
  %303 = add nuw nsw i64 %254, 8
  %304 = getelementptr inbounds float, float* %5, i64 %303
  %305 = bitcast float* %304 to <8 x float>*
  %306 = load <8 x float>, <8 x float>* %305, align 1, !tbaa !12
  %307 = add nuw nsw i64 %254, 16
  %308 = getelementptr inbounds float, float* %5, i64 %307
  %309 = bitcast float* %308 to <8 x float>*
  %310 = load <8 x float>, <8 x float>* %309, align 1, !tbaa !12
  %311 = add nuw nsw i64 %254, 24
  %312 = getelementptr inbounds float, float* %5, i64 %311
  %313 = bitcast float* %312 to <8 x float>*
  %314 = load <8 x float>, <8 x float>* %313, align 1, !tbaa !12
  %315 = add nuw nsw i64 %254, 32
  %316 = getelementptr inbounds float, float* %5, i64 %315
  %317 = bitcast float* %316 to <8 x float>*
  %318 = load <8 x float>, <8 x float>* %317, align 1, !tbaa !12
  %319 = add nuw nsw i64 %254, 40
  %320 = getelementptr inbounds float, float* %5, i64 %319
  %321 = bitcast float* %320 to <8 x float>*
  %322 = load <8 x float>, <8 x float>* %321, align 1, !tbaa !12
  %323 = add nuw nsw i64 %254, 48
  %324 = getelementptr inbounds float, float* %5, i64 %323
  %325 = bitcast float* %324 to <8 x float>*
  %326 = load <8 x float>, <8 x float>* %325, align 1, !tbaa !12
  %327 = add nuw nsw i64 %254, 56
  %328 = getelementptr inbounds float, float* %5, i64 %327
  %329 = bitcast float* %328 to <8 x float>*
  %330 = load <8 x float>, <8 x float>* %329, align 1, !tbaa !12
  %331 = add nuw nsw i64 %254, 64
  %332 = getelementptr inbounds float, float* %5, i64 %331
  %333 = bitcast float* %332 to <8 x float>*
  %334 = load <8 x float>, <8 x float>* %333, align 1, !tbaa !12
  %335 = add nuw nsw i64 %254, 72
  %336 = getelementptr inbounds float, float* %5, i64 %335
  %337 = bitcast float* %336 to <8 x float>*
  %338 = load <8 x float>, <8 x float>* %337, align 1, !tbaa !12
  %339 = add nuw nsw i64 %254, 80
  %340 = getelementptr inbounds float, float* %5, i64 %339
  %341 = bitcast float* %340 to <8 x float>*
  %342 = load <8 x float>, <8 x float>* %341, align 1, !tbaa !12
  %343 = add nsw i64 %254, %86
  %344 = getelementptr inbounds float, float* %3, i64 %343
  %345 = bitcast float* %344 to <8 x float>*
  %346 = load <8 x float>, <8 x float>* %345, align 1, !tbaa !12
  %347 = add nsw i64 %343, 8
  %348 = getelementptr inbounds float, float* %3, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %350 = load <8 x float>, <8 x float>* %349, align 1, !tbaa !12
  %351 = add nsw i64 %343, 16
  %352 = getelementptr inbounds float, float* %3, i64 %351
  %353 = bitcast float* %352 to <8 x float>*
  %354 = load <8 x float>, <8 x float>* %353, align 1, !tbaa !12
  %355 = add nsw i64 %343, 24
  %356 = getelementptr inbounds float, float* %3, i64 %355
  %357 = bitcast float* %356 to <8 x float>*
  %358 = load <8 x float>, <8 x float>* %357, align 1, !tbaa !12
  %359 = add nsw i64 %343, 32
  %360 = getelementptr inbounds float, float* %3, i64 %359
  %361 = bitcast float* %360 to <8 x float>*
  %362 = load <8 x float>, <8 x float>* %361, align 1, !tbaa !12
  %363 = add nsw i64 %343, 40
  %364 = getelementptr inbounds float, float* %3, i64 %363
  %365 = bitcast float* %364 to <8 x float>*
  %366 = load <8 x float>, <8 x float>* %365, align 1, !tbaa !12
  %367 = add nsw i64 %343, 48
  %368 = getelementptr inbounds float, float* %3, i64 %367
  %369 = bitcast float* %368 to <8 x float>*
  %370 = load <8 x float>, <8 x float>* %369, align 1, !tbaa !12
  %371 = add nsw i64 %343, 56
  %372 = getelementptr inbounds float, float* %3, i64 %371
  %373 = bitcast float* %372 to <8 x float>*
  %374 = load <8 x float>, <8 x float>* %373, align 1, !tbaa !12
  %375 = add nsw i64 %343, 64
  %376 = getelementptr inbounds float, float* %3, i64 %375
  %377 = bitcast float* %376 to <8 x float>*
  %378 = load <8 x float>, <8 x float>* %377, align 1, !tbaa !12
  %379 = add nsw i64 %343, 72
  %380 = getelementptr inbounds float, float* %3, i64 %379
  %381 = bitcast float* %380 to <8 x float>*
  %382 = load <8 x float>, <8 x float>* %381, align 1, !tbaa !12
  %383 = add nsw i64 %343, 80
  %384 = getelementptr inbounds float, float* %3, i64 %383
  %385 = bitcast float* %384 to <8 x float>*
  %386 = load <8 x float>, <8 x float>* %385, align 1, !tbaa !12
  %387 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %346, <8 x float> %30, <8 x float> %302) #10
  %388 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %350, <8 x float> %30, <8 x float> %306) #10
  %389 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %354, <8 x float> %30, <8 x float> %310) #10
  %390 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %358, <8 x float> %30, <8 x float> %314) #10
  %391 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %362, <8 x float> %30, <8 x float> %318) #10
  %392 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %366, <8 x float> %30, <8 x float> %322) #10
  %393 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %370, <8 x float> %30, <8 x float> %326) #10
  %394 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %374, <8 x float> %30, <8 x float> %330) #10
  %395 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %378, <8 x float> %30, <8 x float> %334) #10
  %396 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %382, <8 x float> %30, <8 x float> %338) #10
  %397 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %386, <8 x float> %30, <8 x float> %342) #10
  store <8 x float> %387, <8 x float>* %301, align 1, !tbaa !12
  store <8 x float> %388, <8 x float>* %305, align 1, !tbaa !12
  store <8 x float> %389, <8 x float>* %309, align 1, !tbaa !12
  store <8 x float> %390, <8 x float>* %313, align 1, !tbaa !12
  store <8 x float> %391, <8 x float>* %317, align 1, !tbaa !12
  store <8 x float> %392, <8 x float>* %321, align 1, !tbaa !12
  store <8 x float> %393, <8 x float>* %325, align 1, !tbaa !12
  store <8 x float> %394, <8 x float>* %329, align 1, !tbaa !12
  store <8 x float> %395, <8 x float>* %333, align 1, !tbaa !12
  store <8 x float> %396, <8 x float>* %337, align 1, !tbaa !12
  store <8 x float> %397, <8 x float>* %341, align 1, !tbaa !12
  %398 = add nuw nsw i64 %254, 88
  %399 = icmp ult i64 %398, %87
  br i1 %399, label %253, label %247

400:                                              ; preds = %406
  br i1 %77, label %401, label %553

401:                                              ; preds = %400
  %402 = trunc i64 %36 to i32
  %403 = mul nsw i32 %76, %402
  %404 = sext i32 %403 to i64
  %405 = zext i32 %76 to i64
  br label %560

406:                                              ; preds = %248, %406
  %407 = phi i64 [ 0, %248 ], [ %551, %406 ]
  %408 = getelementptr inbounds float, float* %5, i64 %407
  %409 = getelementptr inbounds float, float* %408, i64 8
  %410 = bitcast float* %409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %410, i32 0, i32 1, i32 1)
  %411 = getelementptr inbounds float, float* %3, i64 %407
  %412 = getelementptr inbounds float, float* %411, i64 8
  %413 = bitcast float* %412 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %413, i32 0, i32 1, i32 1)
  %414 = getelementptr inbounds float, float* %408, i64 16
  %415 = bitcast float* %414 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %415, i32 0, i32 1, i32 1)
  %416 = getelementptr inbounds float, float* %411, i64 16
  %417 = bitcast float* %416 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %417, i32 0, i32 1, i32 1)
  %418 = getelementptr inbounds float, float* %408, i64 24
  %419 = bitcast float* %418 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %419, i32 0, i32 1, i32 1)
  %420 = getelementptr inbounds float, float* %411, i64 24
  %421 = bitcast float* %420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %421, i32 0, i32 1, i32 1)
  %422 = getelementptr inbounds float, float* %408, i64 32
  %423 = bitcast float* %422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %423, i32 0, i32 1, i32 1)
  %424 = getelementptr inbounds float, float* %411, i64 32
  %425 = bitcast float* %424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %425, i32 0, i32 1, i32 1)
  %426 = getelementptr inbounds float, float* %408, i64 40
  %427 = bitcast float* %426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %427, i32 0, i32 1, i32 1)
  %428 = getelementptr inbounds float, float* %411, i64 40
  %429 = bitcast float* %428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %429, i32 0, i32 1, i32 1)
  %430 = getelementptr inbounds float, float* %408, i64 48
  %431 = bitcast float* %430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %431, i32 0, i32 1, i32 1)
  %432 = getelementptr inbounds float, float* %411, i64 48
  %433 = bitcast float* %432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %433, i32 0, i32 1, i32 1)
  %434 = getelementptr inbounds float, float* %408, i64 56
  %435 = bitcast float* %434 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %435, i32 0, i32 1, i32 1)
  %436 = getelementptr inbounds float, float* %411, i64 56
  %437 = bitcast float* %436 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %437, i32 0, i32 1, i32 1)
  %438 = getelementptr inbounds float, float* %408, i64 64
  %439 = bitcast float* %438 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %439, i32 0, i32 1, i32 1)
  %440 = getelementptr inbounds float, float* %411, i64 64
  %441 = bitcast float* %440 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %441, i32 0, i32 1, i32 1)
  %442 = getelementptr inbounds float, float* %408, i64 72
  %443 = bitcast float* %442 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %443, i32 0, i32 1, i32 1)
  %444 = getelementptr inbounds float, float* %411, i64 72
  %445 = bitcast float* %444 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %445, i32 0, i32 1, i32 1)
  %446 = getelementptr inbounds float, float* %408, i64 80
  %447 = bitcast float* %446 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %447, i32 0, i32 1, i32 1)
  %448 = getelementptr inbounds float, float* %411, i64 80
  %449 = bitcast float* %448 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %449, i32 0, i32 1, i32 1)
  %450 = getelementptr inbounds float, float* %408, i64 88
  %451 = bitcast float* %450 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %451, i32 0, i32 1, i32 1)
  %452 = getelementptr inbounds float, float* %411, i64 88
  %453 = bitcast float* %452 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %453, i32 0, i32 1, i32 1)
  %454 = bitcast float* %408 to <8 x float>*
  %455 = load <8 x float>, <8 x float>* %454, align 1, !tbaa !12
  %456 = add nuw nsw i64 %407, 8
  %457 = getelementptr inbounds float, float* %5, i64 %456
  %458 = bitcast float* %457 to <8 x float>*
  %459 = load <8 x float>, <8 x float>* %458, align 1, !tbaa !12
  %460 = add nuw nsw i64 %407, 16
  %461 = getelementptr inbounds float, float* %5, i64 %460
  %462 = bitcast float* %461 to <8 x float>*
  %463 = load <8 x float>, <8 x float>* %462, align 1, !tbaa !12
  %464 = add nuw nsw i64 %407, 24
  %465 = getelementptr inbounds float, float* %5, i64 %464
  %466 = bitcast float* %465 to <8 x float>*
  %467 = load <8 x float>, <8 x float>* %466, align 1, !tbaa !12
  %468 = add nuw nsw i64 %407, 32
  %469 = getelementptr inbounds float, float* %5, i64 %468
  %470 = bitcast float* %469 to <8 x float>*
  %471 = load <8 x float>, <8 x float>* %470, align 1, !tbaa !12
  %472 = add nuw nsw i64 %407, 40
  %473 = getelementptr inbounds float, float* %5, i64 %472
  %474 = bitcast float* %473 to <8 x float>*
  %475 = load <8 x float>, <8 x float>* %474, align 1, !tbaa !12
  %476 = add nuw nsw i64 %407, 48
  %477 = getelementptr inbounds float, float* %5, i64 %476
  %478 = bitcast float* %477 to <8 x float>*
  %479 = load <8 x float>, <8 x float>* %478, align 1, !tbaa !12
  %480 = add nuw nsw i64 %407, 56
  %481 = getelementptr inbounds float, float* %5, i64 %480
  %482 = bitcast float* %481 to <8 x float>*
  %483 = load <8 x float>, <8 x float>* %482, align 1, !tbaa !12
  %484 = add nuw nsw i64 %407, 64
  %485 = getelementptr inbounds float, float* %5, i64 %484
  %486 = bitcast float* %485 to <8 x float>*
  %487 = load <8 x float>, <8 x float>* %486, align 1, !tbaa !12
  %488 = add nuw nsw i64 %407, 72
  %489 = getelementptr inbounds float, float* %5, i64 %488
  %490 = bitcast float* %489 to <8 x float>*
  %491 = load <8 x float>, <8 x float>* %490, align 1, !tbaa !12
  %492 = add nuw nsw i64 %407, 80
  %493 = getelementptr inbounds float, float* %5, i64 %492
  %494 = bitcast float* %493 to <8 x float>*
  %495 = load <8 x float>, <8 x float>* %494, align 1, !tbaa !12
  %496 = add nsw i64 %407, %251
  %497 = getelementptr inbounds float, float* %3, i64 %496
  %498 = bitcast float* %497 to <8 x float>*
  %499 = load <8 x float>, <8 x float>* %498, align 1, !tbaa !12
  %500 = add nsw i64 %496, 8
  %501 = getelementptr inbounds float, float* %3, i64 %500
  %502 = bitcast float* %501 to <8 x float>*
  %503 = load <8 x float>, <8 x float>* %502, align 1, !tbaa !12
  %504 = add nsw i64 %496, 16
  %505 = getelementptr inbounds float, float* %3, i64 %504
  %506 = bitcast float* %505 to <8 x float>*
  %507 = load <8 x float>, <8 x float>* %506, align 1, !tbaa !12
  %508 = add nsw i64 %496, 24
  %509 = getelementptr inbounds float, float* %3, i64 %508
  %510 = bitcast float* %509 to <8 x float>*
  %511 = load <8 x float>, <8 x float>* %510, align 1, !tbaa !12
  %512 = add nsw i64 %496, 32
  %513 = getelementptr inbounds float, float* %3, i64 %512
  %514 = bitcast float* %513 to <8 x float>*
  %515 = load <8 x float>, <8 x float>* %514, align 1, !tbaa !12
  %516 = add nsw i64 %496, 40
  %517 = getelementptr inbounds float, float* %3, i64 %516
  %518 = bitcast float* %517 to <8 x float>*
  %519 = load <8 x float>, <8 x float>* %518, align 1, !tbaa !12
  %520 = add nsw i64 %496, 48
  %521 = getelementptr inbounds float, float* %3, i64 %520
  %522 = bitcast float* %521 to <8 x float>*
  %523 = load <8 x float>, <8 x float>* %522, align 1, !tbaa !12
  %524 = add nsw i64 %496, 56
  %525 = getelementptr inbounds float, float* %3, i64 %524
  %526 = bitcast float* %525 to <8 x float>*
  %527 = load <8 x float>, <8 x float>* %526, align 1, !tbaa !12
  %528 = add nsw i64 %496, 64
  %529 = getelementptr inbounds float, float* %3, i64 %528
  %530 = bitcast float* %529 to <8 x float>*
  %531 = load <8 x float>, <8 x float>* %530, align 1, !tbaa !12
  %532 = add nsw i64 %496, 72
  %533 = getelementptr inbounds float, float* %3, i64 %532
  %534 = bitcast float* %533 to <8 x float>*
  %535 = load <8 x float>, <8 x float>* %534, align 1, !tbaa !12
  %536 = add nsw i64 %496, 80
  %537 = getelementptr inbounds float, float* %3, i64 %536
  %538 = bitcast float* %537 to <8 x float>*
  %539 = load <8 x float>, <8 x float>* %538, align 1, !tbaa !12
  %540 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %499, <8 x float> %35, <8 x float> %455) #10
  %541 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %503, <8 x float> %35, <8 x float> %459) #10
  %542 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %507, <8 x float> %35, <8 x float> %463) #10
  %543 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %511, <8 x float> %35, <8 x float> %467) #10
  %544 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %515, <8 x float> %35, <8 x float> %471) #10
  %545 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %519, <8 x float> %35, <8 x float> %475) #10
  %546 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %523, <8 x float> %35, <8 x float> %479) #10
  %547 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %527, <8 x float> %35, <8 x float> %483) #10
  %548 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %531, <8 x float> %35, <8 x float> %487) #10
  %549 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %535, <8 x float> %35, <8 x float> %491) #10
  %550 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %539, <8 x float> %35, <8 x float> %495) #10
  store <8 x float> %540, <8 x float>* %454, align 1, !tbaa !12
  store <8 x float> %541, <8 x float>* %458, align 1, !tbaa !12
  store <8 x float> %542, <8 x float>* %462, align 1, !tbaa !12
  store <8 x float> %543, <8 x float>* %466, align 1, !tbaa !12
  store <8 x float> %544, <8 x float>* %470, align 1, !tbaa !12
  store <8 x float> %545, <8 x float>* %474, align 1, !tbaa !12
  store <8 x float> %546, <8 x float>* %478, align 1, !tbaa !12
  store <8 x float> %547, <8 x float>* %482, align 1, !tbaa !12
  store <8 x float> %548, <8 x float>* %486, align 1, !tbaa !12
  store <8 x float> %549, <8 x float>* %490, align 1, !tbaa !12
  store <8 x float> %550, <8 x float>* %494, align 1, !tbaa !12
  %551 = add nuw nsw i64 %407, 88
  %552 = icmp ult i64 %551, %252
  br i1 %552, label %406, label %400

553:                                              ; preds = %560, %82, %247, %400
  %554 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %555 = icmp sgt i32 %554, 0
  br i1 %555, label %556, label %1650

556:                                              ; preds = %553
  %557 = zext i32 %554 to i64
  %558 = trunc i64 %41 to i32
  %559 = mul nsw i32 %554, %558
  br label %713

560:                                              ; preds = %401, %560
  %561 = phi i64 [ 0, %401 ], [ %705, %560 ]
  %562 = getelementptr inbounds float, float* %5, i64 %561
  %563 = getelementptr inbounds float, float* %562, i64 8
  %564 = bitcast float* %563 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %564, i32 0, i32 1, i32 1)
  %565 = getelementptr inbounds float, float* %3, i64 %561
  %566 = getelementptr inbounds float, float* %565, i64 8
  %567 = bitcast float* %566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %567, i32 0, i32 1, i32 1)
  %568 = getelementptr inbounds float, float* %562, i64 16
  %569 = bitcast float* %568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %569, i32 0, i32 1, i32 1)
  %570 = getelementptr inbounds float, float* %565, i64 16
  %571 = bitcast float* %570 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %571, i32 0, i32 1, i32 1)
  %572 = getelementptr inbounds float, float* %562, i64 24
  %573 = bitcast float* %572 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %573, i32 0, i32 1, i32 1)
  %574 = getelementptr inbounds float, float* %565, i64 24
  %575 = bitcast float* %574 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %575, i32 0, i32 1, i32 1)
  %576 = getelementptr inbounds float, float* %562, i64 32
  %577 = bitcast float* %576 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %577, i32 0, i32 1, i32 1)
  %578 = getelementptr inbounds float, float* %565, i64 32
  %579 = bitcast float* %578 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %579, i32 0, i32 1, i32 1)
  %580 = getelementptr inbounds float, float* %562, i64 40
  %581 = bitcast float* %580 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %581, i32 0, i32 1, i32 1)
  %582 = getelementptr inbounds float, float* %565, i64 40
  %583 = bitcast float* %582 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %583, i32 0, i32 1, i32 1)
  %584 = getelementptr inbounds float, float* %562, i64 48
  %585 = bitcast float* %584 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %585, i32 0, i32 1, i32 1)
  %586 = getelementptr inbounds float, float* %565, i64 48
  %587 = bitcast float* %586 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %587, i32 0, i32 1, i32 1)
  %588 = getelementptr inbounds float, float* %562, i64 56
  %589 = bitcast float* %588 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %589, i32 0, i32 1, i32 1)
  %590 = getelementptr inbounds float, float* %565, i64 56
  %591 = bitcast float* %590 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %591, i32 0, i32 1, i32 1)
  %592 = getelementptr inbounds float, float* %562, i64 64
  %593 = bitcast float* %592 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %593, i32 0, i32 1, i32 1)
  %594 = getelementptr inbounds float, float* %565, i64 64
  %595 = bitcast float* %594 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %595, i32 0, i32 1, i32 1)
  %596 = getelementptr inbounds float, float* %562, i64 72
  %597 = bitcast float* %596 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %597, i32 0, i32 1, i32 1)
  %598 = getelementptr inbounds float, float* %565, i64 72
  %599 = bitcast float* %598 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %599, i32 0, i32 1, i32 1)
  %600 = getelementptr inbounds float, float* %562, i64 80
  %601 = bitcast float* %600 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %601, i32 0, i32 1, i32 1)
  %602 = getelementptr inbounds float, float* %565, i64 80
  %603 = bitcast float* %602 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %603, i32 0, i32 1, i32 1)
  %604 = getelementptr inbounds float, float* %562, i64 88
  %605 = bitcast float* %604 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %605, i32 0, i32 1, i32 1)
  %606 = getelementptr inbounds float, float* %565, i64 88
  %607 = bitcast float* %606 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %607, i32 0, i32 1, i32 1)
  %608 = bitcast float* %562 to <8 x float>*
  %609 = load <8 x float>, <8 x float>* %608, align 1, !tbaa !12
  %610 = add nuw nsw i64 %561, 8
  %611 = getelementptr inbounds float, float* %5, i64 %610
  %612 = bitcast float* %611 to <8 x float>*
  %613 = load <8 x float>, <8 x float>* %612, align 1, !tbaa !12
  %614 = add nuw nsw i64 %561, 16
  %615 = getelementptr inbounds float, float* %5, i64 %614
  %616 = bitcast float* %615 to <8 x float>*
  %617 = load <8 x float>, <8 x float>* %616, align 1, !tbaa !12
  %618 = add nuw nsw i64 %561, 24
  %619 = getelementptr inbounds float, float* %5, i64 %618
  %620 = bitcast float* %619 to <8 x float>*
  %621 = load <8 x float>, <8 x float>* %620, align 1, !tbaa !12
  %622 = add nuw nsw i64 %561, 32
  %623 = getelementptr inbounds float, float* %5, i64 %622
  %624 = bitcast float* %623 to <8 x float>*
  %625 = load <8 x float>, <8 x float>* %624, align 1, !tbaa !12
  %626 = add nuw nsw i64 %561, 40
  %627 = getelementptr inbounds float, float* %5, i64 %626
  %628 = bitcast float* %627 to <8 x float>*
  %629 = load <8 x float>, <8 x float>* %628, align 1, !tbaa !12
  %630 = add nuw nsw i64 %561, 48
  %631 = getelementptr inbounds float, float* %5, i64 %630
  %632 = bitcast float* %631 to <8 x float>*
  %633 = load <8 x float>, <8 x float>* %632, align 1, !tbaa !12
  %634 = add nuw nsw i64 %561, 56
  %635 = getelementptr inbounds float, float* %5, i64 %634
  %636 = bitcast float* %635 to <8 x float>*
  %637 = load <8 x float>, <8 x float>* %636, align 1, !tbaa !12
  %638 = add nuw nsw i64 %561, 64
  %639 = getelementptr inbounds float, float* %5, i64 %638
  %640 = bitcast float* %639 to <8 x float>*
  %641 = load <8 x float>, <8 x float>* %640, align 1, !tbaa !12
  %642 = add nuw nsw i64 %561, 72
  %643 = getelementptr inbounds float, float* %5, i64 %642
  %644 = bitcast float* %643 to <8 x float>*
  %645 = load <8 x float>, <8 x float>* %644, align 1, !tbaa !12
  %646 = add nuw nsw i64 %561, 80
  %647 = getelementptr inbounds float, float* %5, i64 %646
  %648 = bitcast float* %647 to <8 x float>*
  %649 = load <8 x float>, <8 x float>* %648, align 1, !tbaa !12
  %650 = add nsw i64 %561, %404
  %651 = getelementptr inbounds float, float* %3, i64 %650
  %652 = bitcast float* %651 to <8 x float>*
  %653 = load <8 x float>, <8 x float>* %652, align 1, !tbaa !12
  %654 = add nsw i64 %650, 8
  %655 = getelementptr inbounds float, float* %3, i64 %654
  %656 = bitcast float* %655 to <8 x float>*
  %657 = load <8 x float>, <8 x float>* %656, align 1, !tbaa !12
  %658 = add nsw i64 %650, 16
  %659 = getelementptr inbounds float, float* %3, i64 %658
  %660 = bitcast float* %659 to <8 x float>*
  %661 = load <8 x float>, <8 x float>* %660, align 1, !tbaa !12
  %662 = add nsw i64 %650, 24
  %663 = getelementptr inbounds float, float* %3, i64 %662
  %664 = bitcast float* %663 to <8 x float>*
  %665 = load <8 x float>, <8 x float>* %664, align 1, !tbaa !12
  %666 = add nsw i64 %650, 32
  %667 = getelementptr inbounds float, float* %3, i64 %666
  %668 = bitcast float* %667 to <8 x float>*
  %669 = load <8 x float>, <8 x float>* %668, align 1, !tbaa !12
  %670 = add nsw i64 %650, 40
  %671 = getelementptr inbounds float, float* %3, i64 %670
  %672 = bitcast float* %671 to <8 x float>*
  %673 = load <8 x float>, <8 x float>* %672, align 1, !tbaa !12
  %674 = add nsw i64 %650, 48
  %675 = getelementptr inbounds float, float* %3, i64 %674
  %676 = bitcast float* %675 to <8 x float>*
  %677 = load <8 x float>, <8 x float>* %676, align 1, !tbaa !12
  %678 = add nsw i64 %650, 56
  %679 = getelementptr inbounds float, float* %3, i64 %678
  %680 = bitcast float* %679 to <8 x float>*
  %681 = load <8 x float>, <8 x float>* %680, align 1, !tbaa !12
  %682 = add nsw i64 %650, 64
  %683 = getelementptr inbounds float, float* %3, i64 %682
  %684 = bitcast float* %683 to <8 x float>*
  %685 = load <8 x float>, <8 x float>* %684, align 1, !tbaa !12
  %686 = add nsw i64 %650, 72
  %687 = getelementptr inbounds float, float* %3, i64 %686
  %688 = bitcast float* %687 to <8 x float>*
  %689 = load <8 x float>, <8 x float>* %688, align 1, !tbaa !12
  %690 = add nsw i64 %650, 80
  %691 = getelementptr inbounds float, float* %3, i64 %690
  %692 = bitcast float* %691 to <8 x float>*
  %693 = load <8 x float>, <8 x float>* %692, align 1, !tbaa !12
  %694 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %653, <8 x float> %40, <8 x float> %609) #10
  %695 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %657, <8 x float> %40, <8 x float> %613) #10
  %696 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %661, <8 x float> %40, <8 x float> %617) #10
  %697 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %665, <8 x float> %40, <8 x float> %621) #10
  %698 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %669, <8 x float> %40, <8 x float> %625) #10
  %699 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %673, <8 x float> %40, <8 x float> %629) #10
  %700 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %677, <8 x float> %40, <8 x float> %633) #10
  %701 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %681, <8 x float> %40, <8 x float> %637) #10
  %702 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %685, <8 x float> %40, <8 x float> %641) #10
  %703 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %689, <8 x float> %40, <8 x float> %645) #10
  %704 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %693, <8 x float> %40, <8 x float> %649) #10
  store <8 x float> %694, <8 x float>* %608, align 1, !tbaa !12
  store <8 x float> %695, <8 x float>* %612, align 1, !tbaa !12
  store <8 x float> %696, <8 x float>* %616, align 1, !tbaa !12
  store <8 x float> %697, <8 x float>* %620, align 1, !tbaa !12
  store <8 x float> %698, <8 x float>* %624, align 1, !tbaa !12
  store <8 x float> %699, <8 x float>* %628, align 1, !tbaa !12
  store <8 x float> %700, <8 x float>* %632, align 1, !tbaa !12
  store <8 x float> %701, <8 x float>* %636, align 1, !tbaa !12
  store <8 x float> %702, <8 x float>* %640, align 1, !tbaa !12
  store <8 x float> %703, <8 x float>* %644, align 1, !tbaa !12
  store <8 x float> %704, <8 x float>* %648, align 1, !tbaa !12
  %705 = add nuw nsw i64 %561, 88
  %706 = icmp ult i64 %705, %405
  br i1 %706, label %560, label %553

707:                                              ; preds = %713
  br i1 %555, label %708, label %1178

708:                                              ; preds = %707
  %709 = trunc i64 %46 to i32
  %710 = mul nsw i32 %554, %709
  %711 = sext i32 %710 to i64
  %712 = zext i32 %554 to i64
  br label %878

713:                                              ; preds = %556, %713
  %714 = phi i64 [ 0, %556 ], [ %870, %713 ]
  %715 = getelementptr inbounds float, float* %5, i64 %714
  %716 = getelementptr inbounds float, float* %715, i64 8
  %717 = bitcast float* %716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %717, i32 0, i32 1, i32 1)
  %718 = getelementptr inbounds float, float* %3, i64 %714
  %719 = getelementptr inbounds float, float* %718, i64 8
  %720 = bitcast float* %719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %720, i32 0, i32 1, i32 1)
  %721 = getelementptr inbounds float, float* %715, i64 16
  %722 = bitcast float* %721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %722, i32 0, i32 1, i32 1)
  %723 = getelementptr inbounds float, float* %718, i64 16
  %724 = bitcast float* %723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %724, i32 0, i32 1, i32 1)
  %725 = getelementptr inbounds float, float* %715, i64 24
  %726 = bitcast float* %725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %726, i32 0, i32 1, i32 1)
  %727 = getelementptr inbounds float, float* %718, i64 24
  %728 = bitcast float* %727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %728, i32 0, i32 1, i32 1)
  %729 = getelementptr inbounds float, float* %715, i64 32
  %730 = bitcast float* %729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %730, i32 0, i32 1, i32 1)
  %731 = getelementptr inbounds float, float* %718, i64 32
  %732 = bitcast float* %731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %732, i32 0, i32 1, i32 1)
  %733 = getelementptr inbounds float, float* %715, i64 40
  %734 = bitcast float* %733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %734, i32 0, i32 1, i32 1)
  %735 = getelementptr inbounds float, float* %718, i64 40
  %736 = bitcast float* %735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %736, i32 0, i32 1, i32 1)
  %737 = getelementptr inbounds float, float* %715, i64 48
  %738 = bitcast float* %737 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %738, i32 0, i32 1, i32 1)
  %739 = getelementptr inbounds float, float* %718, i64 48
  %740 = bitcast float* %739 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %740, i32 0, i32 1, i32 1)
  %741 = getelementptr inbounds float, float* %715, i64 56
  %742 = bitcast float* %741 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %742, i32 0, i32 1, i32 1)
  %743 = getelementptr inbounds float, float* %718, i64 56
  %744 = bitcast float* %743 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %744, i32 0, i32 1, i32 1)
  %745 = getelementptr inbounds float, float* %715, i64 64
  %746 = bitcast float* %745 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %746, i32 0, i32 1, i32 1)
  %747 = getelementptr inbounds float, float* %718, i64 64
  %748 = bitcast float* %747 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %748, i32 0, i32 1, i32 1)
  %749 = getelementptr inbounds float, float* %715, i64 72
  %750 = bitcast float* %749 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %750, i32 0, i32 1, i32 1)
  %751 = getelementptr inbounds float, float* %718, i64 72
  %752 = bitcast float* %751 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %752, i32 0, i32 1, i32 1)
  %753 = getelementptr inbounds float, float* %715, i64 80
  %754 = bitcast float* %753 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %754, i32 0, i32 1, i32 1)
  %755 = getelementptr inbounds float, float* %718, i64 80
  %756 = bitcast float* %755 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %756, i32 0, i32 1, i32 1)
  %757 = getelementptr inbounds float, float* %715, i64 88
  %758 = bitcast float* %757 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %758, i32 0, i32 1, i32 1)
  %759 = getelementptr inbounds float, float* %718, i64 88
  %760 = bitcast float* %759 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %760, i32 0, i32 1, i32 1)
  %761 = bitcast float* %715 to <8 x float>*
  %762 = load <8 x float>, <8 x float>* %761, align 1, !tbaa !12
  %763 = add nuw nsw i64 %714, 8
  %764 = getelementptr inbounds float, float* %5, i64 %763
  %765 = bitcast float* %764 to <8 x float>*
  %766 = load <8 x float>, <8 x float>* %765, align 1, !tbaa !12
  %767 = add nuw nsw i64 %714, 16
  %768 = getelementptr inbounds float, float* %5, i64 %767
  %769 = bitcast float* %768 to <8 x float>*
  %770 = load <8 x float>, <8 x float>* %769, align 1, !tbaa !12
  %771 = add nuw nsw i64 %714, 24
  %772 = getelementptr inbounds float, float* %5, i64 %771
  %773 = bitcast float* %772 to <8 x float>*
  %774 = load <8 x float>, <8 x float>* %773, align 1, !tbaa !12
  %775 = add nuw nsw i64 %714, 32
  %776 = getelementptr inbounds float, float* %5, i64 %775
  %777 = bitcast float* %776 to <8 x float>*
  %778 = load <8 x float>, <8 x float>* %777, align 1, !tbaa !12
  %779 = add nuw nsw i64 %714, 40
  %780 = getelementptr inbounds float, float* %5, i64 %779
  %781 = bitcast float* %780 to <8 x float>*
  %782 = load <8 x float>, <8 x float>* %781, align 1, !tbaa !12
  %783 = add nuw nsw i64 %714, 48
  %784 = getelementptr inbounds float, float* %5, i64 %783
  %785 = bitcast float* %784 to <8 x float>*
  %786 = load <8 x float>, <8 x float>* %785, align 1, !tbaa !12
  %787 = add nuw nsw i64 %714, 56
  %788 = getelementptr inbounds float, float* %5, i64 %787
  %789 = bitcast float* %788 to <8 x float>*
  %790 = load <8 x float>, <8 x float>* %789, align 1, !tbaa !12
  %791 = add nuw nsw i64 %714, 64
  %792 = getelementptr inbounds float, float* %5, i64 %791
  %793 = bitcast float* %792 to <8 x float>*
  %794 = load <8 x float>, <8 x float>* %793, align 1, !tbaa !12
  %795 = add nuw nsw i64 %714, 72
  %796 = getelementptr inbounds float, float* %5, i64 %795
  %797 = bitcast float* %796 to <8 x float>*
  %798 = load <8 x float>, <8 x float>* %797, align 1, !tbaa !12
  %799 = add nuw nsw i64 %714, 80
  %800 = getelementptr inbounds float, float* %5, i64 %799
  %801 = bitcast float* %800 to <8 x float>*
  %802 = load <8 x float>, <8 x float>* %801, align 1, !tbaa !12
  %803 = trunc i64 %714 to i32
  %804 = add nsw i32 %559, %803
  %805 = sext i32 %804 to i64
  %806 = getelementptr inbounds float, float* %3, i64 %805
  %807 = bitcast float* %806 to <8 x float>*
  %808 = load <8 x float>, <8 x float>* %807, align 1, !tbaa !12
  %809 = add nsw i32 %804, 8
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds float, float* %3, i64 %810
  %812 = bitcast float* %811 to <8 x float>*
  %813 = load <8 x float>, <8 x float>* %812, align 1, !tbaa !12
  %814 = add nsw i32 %804, 16
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds float, float* %3, i64 %815
  %817 = bitcast float* %816 to <8 x float>*
  %818 = load <8 x float>, <8 x float>* %817, align 1, !tbaa !12
  %819 = add nsw i32 %804, 24
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds float, float* %3, i64 %820
  %822 = bitcast float* %821 to <8 x float>*
  %823 = load <8 x float>, <8 x float>* %822, align 1, !tbaa !12
  %824 = add nsw i32 %804, 32
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds float, float* %3, i64 %825
  %827 = bitcast float* %826 to <8 x float>*
  %828 = load <8 x float>, <8 x float>* %827, align 1, !tbaa !12
  %829 = add nsw i32 %804, 40
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds float, float* %3, i64 %830
  %832 = bitcast float* %831 to <8 x float>*
  %833 = load <8 x float>, <8 x float>* %832, align 1, !tbaa !12
  %834 = add nsw i32 %804, 48
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds float, float* %3, i64 %835
  %837 = bitcast float* %836 to <8 x float>*
  %838 = load <8 x float>, <8 x float>* %837, align 1, !tbaa !12
  %839 = add nsw i32 %804, 56
  %840 = sext i32 %839 to i64
  %841 = getelementptr inbounds float, float* %3, i64 %840
  %842 = bitcast float* %841 to <8 x float>*
  %843 = load <8 x float>, <8 x float>* %842, align 1, !tbaa !12
  %844 = add nsw i32 %804, 64
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds float, float* %3, i64 %845
  %847 = bitcast float* %846 to <8 x float>*
  %848 = load <8 x float>, <8 x float>* %847, align 1, !tbaa !12
  %849 = add nsw i32 %804, 72
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds float, float* %3, i64 %850
  %852 = bitcast float* %851 to <8 x float>*
  %853 = load <8 x float>, <8 x float>* %852, align 1, !tbaa !12
  %854 = add nsw i32 %804, 80
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds float, float* %3, i64 %855
  %857 = bitcast float* %856 to <8 x float>*
  %858 = load <8 x float>, <8 x float>* %857, align 1, !tbaa !12
  %859 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %808, <8 x float> %45, <8 x float> %762) #10
  %860 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %813, <8 x float> %45, <8 x float> %766) #10
  %861 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %818, <8 x float> %45, <8 x float> %770) #10
  %862 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %823, <8 x float> %45, <8 x float> %774) #10
  %863 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %828, <8 x float> %45, <8 x float> %778) #10
  %864 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %833, <8 x float> %45, <8 x float> %782) #10
  %865 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %838, <8 x float> %45, <8 x float> %786) #10
  %866 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %843, <8 x float> %45, <8 x float> %790) #10
  %867 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %848, <8 x float> %45, <8 x float> %794) #10
  %868 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %853, <8 x float> %45, <8 x float> %798) #10
  %869 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %858, <8 x float> %45, <8 x float> %802) #10
  store <8 x float> %859, <8 x float>* %761, align 1, !tbaa !12
  store <8 x float> %860, <8 x float>* %765, align 1, !tbaa !12
  store <8 x float> %861, <8 x float>* %769, align 1, !tbaa !12
  store <8 x float> %862, <8 x float>* %773, align 1, !tbaa !12
  store <8 x float> %863, <8 x float>* %777, align 1, !tbaa !12
  store <8 x float> %864, <8 x float>* %781, align 1, !tbaa !12
  store <8 x float> %865, <8 x float>* %785, align 1, !tbaa !12
  store <8 x float> %866, <8 x float>* %789, align 1, !tbaa !12
  store <8 x float> %867, <8 x float>* %793, align 1, !tbaa !12
  store <8 x float> %868, <8 x float>* %797, align 1, !tbaa !12
  store <8 x float> %869, <8 x float>* %801, align 1, !tbaa !12
  %870 = add nuw nsw i64 %714, 88
  %871 = icmp ult i64 %870, %557
  br i1 %871, label %713, label %707

872:                                              ; preds = %878
  br i1 %555, label %873, label %1178

873:                                              ; preds = %872
  %874 = trunc i64 %51 to i32
  %875 = mul nsw i32 %554, %874
  %876 = sext i32 %875 to i64
  %877 = zext i32 %554 to i64
  br label %1031

878:                                              ; preds = %708, %878
  %879 = phi i64 [ 0, %708 ], [ %1023, %878 ]
  %880 = getelementptr inbounds float, float* %5, i64 %879
  %881 = getelementptr inbounds float, float* %880, i64 8
  %882 = bitcast float* %881 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %882, i32 0, i32 1, i32 1)
  %883 = getelementptr inbounds float, float* %3, i64 %879
  %884 = getelementptr inbounds float, float* %883, i64 8
  %885 = bitcast float* %884 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %885, i32 0, i32 1, i32 1)
  %886 = getelementptr inbounds float, float* %880, i64 16
  %887 = bitcast float* %886 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %887, i32 0, i32 1, i32 1)
  %888 = getelementptr inbounds float, float* %883, i64 16
  %889 = bitcast float* %888 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %889, i32 0, i32 1, i32 1)
  %890 = getelementptr inbounds float, float* %880, i64 24
  %891 = bitcast float* %890 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %891, i32 0, i32 1, i32 1)
  %892 = getelementptr inbounds float, float* %883, i64 24
  %893 = bitcast float* %892 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %893, i32 0, i32 1, i32 1)
  %894 = getelementptr inbounds float, float* %880, i64 32
  %895 = bitcast float* %894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %895, i32 0, i32 1, i32 1)
  %896 = getelementptr inbounds float, float* %883, i64 32
  %897 = bitcast float* %896 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %897, i32 0, i32 1, i32 1)
  %898 = getelementptr inbounds float, float* %880, i64 40
  %899 = bitcast float* %898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %899, i32 0, i32 1, i32 1)
  %900 = getelementptr inbounds float, float* %883, i64 40
  %901 = bitcast float* %900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %901, i32 0, i32 1, i32 1)
  %902 = getelementptr inbounds float, float* %880, i64 48
  %903 = bitcast float* %902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %903, i32 0, i32 1, i32 1)
  %904 = getelementptr inbounds float, float* %883, i64 48
  %905 = bitcast float* %904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %905, i32 0, i32 1, i32 1)
  %906 = getelementptr inbounds float, float* %880, i64 56
  %907 = bitcast float* %906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %907, i32 0, i32 1, i32 1)
  %908 = getelementptr inbounds float, float* %883, i64 56
  %909 = bitcast float* %908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %909, i32 0, i32 1, i32 1)
  %910 = getelementptr inbounds float, float* %880, i64 64
  %911 = bitcast float* %910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %911, i32 0, i32 1, i32 1)
  %912 = getelementptr inbounds float, float* %883, i64 64
  %913 = bitcast float* %912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %913, i32 0, i32 1, i32 1)
  %914 = getelementptr inbounds float, float* %880, i64 72
  %915 = bitcast float* %914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %915, i32 0, i32 1, i32 1)
  %916 = getelementptr inbounds float, float* %883, i64 72
  %917 = bitcast float* %916 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %917, i32 0, i32 1, i32 1)
  %918 = getelementptr inbounds float, float* %880, i64 80
  %919 = bitcast float* %918 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %919, i32 0, i32 1, i32 1)
  %920 = getelementptr inbounds float, float* %883, i64 80
  %921 = bitcast float* %920 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %921, i32 0, i32 1, i32 1)
  %922 = getelementptr inbounds float, float* %880, i64 88
  %923 = bitcast float* %922 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %923, i32 0, i32 1, i32 1)
  %924 = getelementptr inbounds float, float* %883, i64 88
  %925 = bitcast float* %924 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %925, i32 0, i32 1, i32 1)
  %926 = bitcast float* %880 to <8 x float>*
  %927 = load <8 x float>, <8 x float>* %926, align 1, !tbaa !12
  %928 = add nuw nsw i64 %879, 8
  %929 = getelementptr inbounds float, float* %5, i64 %928
  %930 = bitcast float* %929 to <8 x float>*
  %931 = load <8 x float>, <8 x float>* %930, align 1, !tbaa !12
  %932 = add nuw nsw i64 %879, 16
  %933 = getelementptr inbounds float, float* %5, i64 %932
  %934 = bitcast float* %933 to <8 x float>*
  %935 = load <8 x float>, <8 x float>* %934, align 1, !tbaa !12
  %936 = add nuw nsw i64 %879, 24
  %937 = getelementptr inbounds float, float* %5, i64 %936
  %938 = bitcast float* %937 to <8 x float>*
  %939 = load <8 x float>, <8 x float>* %938, align 1, !tbaa !12
  %940 = add nuw nsw i64 %879, 32
  %941 = getelementptr inbounds float, float* %5, i64 %940
  %942 = bitcast float* %941 to <8 x float>*
  %943 = load <8 x float>, <8 x float>* %942, align 1, !tbaa !12
  %944 = add nuw nsw i64 %879, 40
  %945 = getelementptr inbounds float, float* %5, i64 %944
  %946 = bitcast float* %945 to <8 x float>*
  %947 = load <8 x float>, <8 x float>* %946, align 1, !tbaa !12
  %948 = add nuw nsw i64 %879, 48
  %949 = getelementptr inbounds float, float* %5, i64 %948
  %950 = bitcast float* %949 to <8 x float>*
  %951 = load <8 x float>, <8 x float>* %950, align 1, !tbaa !12
  %952 = add nuw nsw i64 %879, 56
  %953 = getelementptr inbounds float, float* %5, i64 %952
  %954 = bitcast float* %953 to <8 x float>*
  %955 = load <8 x float>, <8 x float>* %954, align 1, !tbaa !12
  %956 = add nuw nsw i64 %879, 64
  %957 = getelementptr inbounds float, float* %5, i64 %956
  %958 = bitcast float* %957 to <8 x float>*
  %959 = load <8 x float>, <8 x float>* %958, align 1, !tbaa !12
  %960 = add nuw nsw i64 %879, 72
  %961 = getelementptr inbounds float, float* %5, i64 %960
  %962 = bitcast float* %961 to <8 x float>*
  %963 = load <8 x float>, <8 x float>* %962, align 1, !tbaa !12
  %964 = add nuw nsw i64 %879, 80
  %965 = getelementptr inbounds float, float* %5, i64 %964
  %966 = bitcast float* %965 to <8 x float>*
  %967 = load <8 x float>, <8 x float>* %966, align 1, !tbaa !12
  %968 = add nsw i64 %879, %711
  %969 = getelementptr inbounds float, float* %3, i64 %968
  %970 = bitcast float* %969 to <8 x float>*
  %971 = load <8 x float>, <8 x float>* %970, align 1, !tbaa !12
  %972 = add nsw i64 %968, 8
  %973 = getelementptr inbounds float, float* %3, i64 %972
  %974 = bitcast float* %973 to <8 x float>*
  %975 = load <8 x float>, <8 x float>* %974, align 1, !tbaa !12
  %976 = add nsw i64 %968, 16
  %977 = getelementptr inbounds float, float* %3, i64 %976
  %978 = bitcast float* %977 to <8 x float>*
  %979 = load <8 x float>, <8 x float>* %978, align 1, !tbaa !12
  %980 = add nsw i64 %968, 24
  %981 = getelementptr inbounds float, float* %3, i64 %980
  %982 = bitcast float* %981 to <8 x float>*
  %983 = load <8 x float>, <8 x float>* %982, align 1, !tbaa !12
  %984 = add nsw i64 %968, 32
  %985 = getelementptr inbounds float, float* %3, i64 %984
  %986 = bitcast float* %985 to <8 x float>*
  %987 = load <8 x float>, <8 x float>* %986, align 1, !tbaa !12
  %988 = add nsw i64 %968, 40
  %989 = getelementptr inbounds float, float* %3, i64 %988
  %990 = bitcast float* %989 to <8 x float>*
  %991 = load <8 x float>, <8 x float>* %990, align 1, !tbaa !12
  %992 = add nsw i64 %968, 48
  %993 = getelementptr inbounds float, float* %3, i64 %992
  %994 = bitcast float* %993 to <8 x float>*
  %995 = load <8 x float>, <8 x float>* %994, align 1, !tbaa !12
  %996 = add nsw i64 %968, 56
  %997 = getelementptr inbounds float, float* %3, i64 %996
  %998 = bitcast float* %997 to <8 x float>*
  %999 = load <8 x float>, <8 x float>* %998, align 1, !tbaa !12
  %1000 = add nsw i64 %968, 64
  %1001 = getelementptr inbounds float, float* %3, i64 %1000
  %1002 = bitcast float* %1001 to <8 x float>*
  %1003 = load <8 x float>, <8 x float>* %1002, align 1, !tbaa !12
  %1004 = add nsw i64 %968, 72
  %1005 = getelementptr inbounds float, float* %3, i64 %1004
  %1006 = bitcast float* %1005 to <8 x float>*
  %1007 = load <8 x float>, <8 x float>* %1006, align 1, !tbaa !12
  %1008 = add nsw i64 %968, 80
  %1009 = getelementptr inbounds float, float* %3, i64 %1008
  %1010 = bitcast float* %1009 to <8 x float>*
  %1011 = load <8 x float>, <8 x float>* %1010, align 1, !tbaa !12
  %1012 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %971, <8 x float> %50, <8 x float> %927) #10
  %1013 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %975, <8 x float> %50, <8 x float> %931) #10
  %1014 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %979, <8 x float> %50, <8 x float> %935) #10
  %1015 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %983, <8 x float> %50, <8 x float> %939) #10
  %1016 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %987, <8 x float> %50, <8 x float> %943) #10
  %1017 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %991, <8 x float> %50, <8 x float> %947) #10
  %1018 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %995, <8 x float> %50, <8 x float> %951) #10
  %1019 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %999, <8 x float> %50, <8 x float> %955) #10
  %1020 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1003, <8 x float> %50, <8 x float> %959) #10
  %1021 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1007, <8 x float> %50, <8 x float> %963) #10
  %1022 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1011, <8 x float> %50, <8 x float> %967) #10
  store <8 x float> %1012, <8 x float>* %926, align 1, !tbaa !12
  store <8 x float> %1013, <8 x float>* %930, align 1, !tbaa !12
  store <8 x float> %1014, <8 x float>* %934, align 1, !tbaa !12
  store <8 x float> %1015, <8 x float>* %938, align 1, !tbaa !12
  store <8 x float> %1016, <8 x float>* %942, align 1, !tbaa !12
  store <8 x float> %1017, <8 x float>* %946, align 1, !tbaa !12
  store <8 x float> %1018, <8 x float>* %950, align 1, !tbaa !12
  store <8 x float> %1019, <8 x float>* %954, align 1, !tbaa !12
  store <8 x float> %1020, <8 x float>* %958, align 1, !tbaa !12
  store <8 x float> %1021, <8 x float>* %962, align 1, !tbaa !12
  store <8 x float> %1022, <8 x float>* %966, align 1, !tbaa !12
  %1023 = add nuw nsw i64 %879, 88
  %1024 = icmp ult i64 %1023, %712
  br i1 %1024, label %878, label %872

1025:                                             ; preds = %1031
  br i1 %555, label %1026, label %1178

1026:                                             ; preds = %1025
  %1027 = trunc i64 %56 to i32
  %1028 = mul nsw i32 %554, %1027
  %1029 = sext i32 %1028 to i64
  %1030 = zext i32 %554 to i64
  br label %1185

1031:                                             ; preds = %873, %1031
  %1032 = phi i64 [ 0, %873 ], [ %1176, %1031 ]
  %1033 = getelementptr inbounds float, float* %5, i64 %1032
  %1034 = getelementptr inbounds float, float* %1033, i64 8
  %1035 = bitcast float* %1034 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1035, i32 0, i32 1, i32 1)
  %1036 = getelementptr inbounds float, float* %3, i64 %1032
  %1037 = getelementptr inbounds float, float* %1036, i64 8
  %1038 = bitcast float* %1037 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1038, i32 0, i32 1, i32 1)
  %1039 = getelementptr inbounds float, float* %1033, i64 16
  %1040 = bitcast float* %1039 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1040, i32 0, i32 1, i32 1)
  %1041 = getelementptr inbounds float, float* %1036, i64 16
  %1042 = bitcast float* %1041 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1042, i32 0, i32 1, i32 1)
  %1043 = getelementptr inbounds float, float* %1033, i64 24
  %1044 = bitcast float* %1043 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1044, i32 0, i32 1, i32 1)
  %1045 = getelementptr inbounds float, float* %1036, i64 24
  %1046 = bitcast float* %1045 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1046, i32 0, i32 1, i32 1)
  %1047 = getelementptr inbounds float, float* %1033, i64 32
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = getelementptr inbounds float, float* %1036, i64 32
  %1050 = bitcast float* %1049 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1050, i32 0, i32 1, i32 1)
  %1051 = getelementptr inbounds float, float* %1033, i64 40
  %1052 = bitcast float* %1051 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1052, i32 0, i32 1, i32 1)
  %1053 = getelementptr inbounds float, float* %1036, i64 40
  %1054 = bitcast float* %1053 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1054, i32 0, i32 1, i32 1)
  %1055 = getelementptr inbounds float, float* %1033, i64 48
  %1056 = bitcast float* %1055 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1056, i32 0, i32 1, i32 1)
  %1057 = getelementptr inbounds float, float* %1036, i64 48
  %1058 = bitcast float* %1057 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1058, i32 0, i32 1, i32 1)
  %1059 = getelementptr inbounds float, float* %1033, i64 56
  %1060 = bitcast float* %1059 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1060, i32 0, i32 1, i32 1)
  %1061 = getelementptr inbounds float, float* %1036, i64 56
  %1062 = bitcast float* %1061 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1062, i32 0, i32 1, i32 1)
  %1063 = getelementptr inbounds float, float* %1033, i64 64
  %1064 = bitcast float* %1063 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1064, i32 0, i32 1, i32 1)
  %1065 = getelementptr inbounds float, float* %1036, i64 64
  %1066 = bitcast float* %1065 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1066, i32 0, i32 1, i32 1)
  %1067 = getelementptr inbounds float, float* %1033, i64 72
  %1068 = bitcast float* %1067 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1068, i32 0, i32 1, i32 1)
  %1069 = getelementptr inbounds float, float* %1036, i64 72
  %1070 = bitcast float* %1069 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1070, i32 0, i32 1, i32 1)
  %1071 = getelementptr inbounds float, float* %1033, i64 80
  %1072 = bitcast float* %1071 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1072, i32 0, i32 1, i32 1)
  %1073 = getelementptr inbounds float, float* %1036, i64 80
  %1074 = bitcast float* %1073 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1074, i32 0, i32 1, i32 1)
  %1075 = getelementptr inbounds float, float* %1033, i64 88
  %1076 = bitcast float* %1075 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1076, i32 0, i32 1, i32 1)
  %1077 = getelementptr inbounds float, float* %1036, i64 88
  %1078 = bitcast float* %1077 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1078, i32 0, i32 1, i32 1)
  %1079 = bitcast float* %1033 to <8 x float>*
  %1080 = load <8 x float>, <8 x float>* %1079, align 1, !tbaa !12
  %1081 = add nuw nsw i64 %1032, 8
  %1082 = getelementptr inbounds float, float* %5, i64 %1081
  %1083 = bitcast float* %1082 to <8 x float>*
  %1084 = load <8 x float>, <8 x float>* %1083, align 1, !tbaa !12
  %1085 = add nuw nsw i64 %1032, 16
  %1086 = getelementptr inbounds float, float* %5, i64 %1085
  %1087 = bitcast float* %1086 to <8 x float>*
  %1088 = load <8 x float>, <8 x float>* %1087, align 1, !tbaa !12
  %1089 = add nuw nsw i64 %1032, 24
  %1090 = getelementptr inbounds float, float* %5, i64 %1089
  %1091 = bitcast float* %1090 to <8 x float>*
  %1092 = load <8 x float>, <8 x float>* %1091, align 1, !tbaa !12
  %1093 = add nuw nsw i64 %1032, 32
  %1094 = getelementptr inbounds float, float* %5, i64 %1093
  %1095 = bitcast float* %1094 to <8 x float>*
  %1096 = load <8 x float>, <8 x float>* %1095, align 1, !tbaa !12
  %1097 = add nuw nsw i64 %1032, 40
  %1098 = getelementptr inbounds float, float* %5, i64 %1097
  %1099 = bitcast float* %1098 to <8 x float>*
  %1100 = load <8 x float>, <8 x float>* %1099, align 1, !tbaa !12
  %1101 = add nuw nsw i64 %1032, 48
  %1102 = getelementptr inbounds float, float* %5, i64 %1101
  %1103 = bitcast float* %1102 to <8 x float>*
  %1104 = load <8 x float>, <8 x float>* %1103, align 1, !tbaa !12
  %1105 = add nuw nsw i64 %1032, 56
  %1106 = getelementptr inbounds float, float* %5, i64 %1105
  %1107 = bitcast float* %1106 to <8 x float>*
  %1108 = load <8 x float>, <8 x float>* %1107, align 1, !tbaa !12
  %1109 = add nuw nsw i64 %1032, 64
  %1110 = getelementptr inbounds float, float* %5, i64 %1109
  %1111 = bitcast float* %1110 to <8 x float>*
  %1112 = load <8 x float>, <8 x float>* %1111, align 1, !tbaa !12
  %1113 = add nuw nsw i64 %1032, 72
  %1114 = getelementptr inbounds float, float* %5, i64 %1113
  %1115 = bitcast float* %1114 to <8 x float>*
  %1116 = load <8 x float>, <8 x float>* %1115, align 1, !tbaa !12
  %1117 = add nuw nsw i64 %1032, 80
  %1118 = getelementptr inbounds float, float* %5, i64 %1117
  %1119 = bitcast float* %1118 to <8 x float>*
  %1120 = load <8 x float>, <8 x float>* %1119, align 1, !tbaa !12
  %1121 = add nsw i64 %1032, %876
  %1122 = getelementptr inbounds float, float* %3, i64 %1121
  %1123 = bitcast float* %1122 to <8 x float>*
  %1124 = load <8 x float>, <8 x float>* %1123, align 1, !tbaa !12
  %1125 = add nsw i64 %1121, 8
  %1126 = getelementptr inbounds float, float* %3, i64 %1125
  %1127 = bitcast float* %1126 to <8 x float>*
  %1128 = load <8 x float>, <8 x float>* %1127, align 1, !tbaa !12
  %1129 = add nsw i64 %1121, 16
  %1130 = getelementptr inbounds float, float* %3, i64 %1129
  %1131 = bitcast float* %1130 to <8 x float>*
  %1132 = load <8 x float>, <8 x float>* %1131, align 1, !tbaa !12
  %1133 = add nsw i64 %1121, 24
  %1134 = getelementptr inbounds float, float* %3, i64 %1133
  %1135 = bitcast float* %1134 to <8 x float>*
  %1136 = load <8 x float>, <8 x float>* %1135, align 1, !tbaa !12
  %1137 = add nsw i64 %1121, 32
  %1138 = getelementptr inbounds float, float* %3, i64 %1137
  %1139 = bitcast float* %1138 to <8 x float>*
  %1140 = load <8 x float>, <8 x float>* %1139, align 1, !tbaa !12
  %1141 = add nsw i64 %1121, 40
  %1142 = getelementptr inbounds float, float* %3, i64 %1141
  %1143 = bitcast float* %1142 to <8 x float>*
  %1144 = load <8 x float>, <8 x float>* %1143, align 1, !tbaa !12
  %1145 = add nsw i64 %1121, 48
  %1146 = getelementptr inbounds float, float* %3, i64 %1145
  %1147 = bitcast float* %1146 to <8 x float>*
  %1148 = load <8 x float>, <8 x float>* %1147, align 1, !tbaa !12
  %1149 = add nsw i64 %1121, 56
  %1150 = getelementptr inbounds float, float* %3, i64 %1149
  %1151 = bitcast float* %1150 to <8 x float>*
  %1152 = load <8 x float>, <8 x float>* %1151, align 1, !tbaa !12
  %1153 = add nsw i64 %1121, 64
  %1154 = getelementptr inbounds float, float* %3, i64 %1153
  %1155 = bitcast float* %1154 to <8 x float>*
  %1156 = load <8 x float>, <8 x float>* %1155, align 1, !tbaa !12
  %1157 = add nsw i64 %1121, 72
  %1158 = getelementptr inbounds float, float* %3, i64 %1157
  %1159 = bitcast float* %1158 to <8 x float>*
  %1160 = load <8 x float>, <8 x float>* %1159, align 1, !tbaa !12
  %1161 = add nsw i64 %1121, 80
  %1162 = getelementptr inbounds float, float* %3, i64 %1161
  %1163 = bitcast float* %1162 to <8 x float>*
  %1164 = load <8 x float>, <8 x float>* %1163, align 1, !tbaa !12
  %1165 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1124, <8 x float> %55, <8 x float> %1080) #10
  %1166 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1128, <8 x float> %55, <8 x float> %1084) #10
  %1167 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1132, <8 x float> %55, <8 x float> %1088) #10
  %1168 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1136, <8 x float> %55, <8 x float> %1092) #10
  %1169 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1140, <8 x float> %55, <8 x float> %1096) #10
  %1170 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1144, <8 x float> %55, <8 x float> %1100) #10
  %1171 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1148, <8 x float> %55, <8 x float> %1104) #10
  %1172 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1152, <8 x float> %55, <8 x float> %1108) #10
  %1173 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1156, <8 x float> %55, <8 x float> %1112) #10
  %1174 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1160, <8 x float> %55, <8 x float> %1116) #10
  %1175 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1164, <8 x float> %55, <8 x float> %1120) #10
  store <8 x float> %1165, <8 x float>* %1079, align 1, !tbaa !12
  store <8 x float> %1166, <8 x float>* %1083, align 1, !tbaa !12
  store <8 x float> %1167, <8 x float>* %1087, align 1, !tbaa !12
  store <8 x float> %1168, <8 x float>* %1091, align 1, !tbaa !12
  store <8 x float> %1169, <8 x float>* %1095, align 1, !tbaa !12
  store <8 x float> %1170, <8 x float>* %1099, align 1, !tbaa !12
  store <8 x float> %1171, <8 x float>* %1103, align 1, !tbaa !12
  store <8 x float> %1172, <8 x float>* %1107, align 1, !tbaa !12
  store <8 x float> %1173, <8 x float>* %1111, align 1, !tbaa !12
  store <8 x float> %1174, <8 x float>* %1115, align 1, !tbaa !12
  store <8 x float> %1175, <8 x float>* %1119, align 1, !tbaa !12
  %1176 = add nuw nsw i64 %1032, 88
  %1177 = icmp ult i64 %1176, %877
  br i1 %1177, label %1031, label %1025

1178:                                             ; preds = %1185, %707, %872, %1025
  %1179 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1180 = icmp sgt i32 %1179, 0
  br i1 %1180, label %1181, label %1650

1181:                                             ; preds = %1178
  %1182 = zext i32 %1179 to i64
  %1183 = trunc i64 %61 to i32
  %1184 = mul nsw i32 %1179, %1183
  br label %1338

1185:                                             ; preds = %1026, %1185
  %1186 = phi i64 [ 0, %1026 ], [ %1330, %1185 ]
  %1187 = getelementptr inbounds float, float* %5, i64 %1186
  %1188 = getelementptr inbounds float, float* %1187, i64 8
  %1189 = bitcast float* %1188 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1189, i32 0, i32 1, i32 1)
  %1190 = getelementptr inbounds float, float* %3, i64 %1186
  %1191 = getelementptr inbounds float, float* %1190, i64 8
  %1192 = bitcast float* %1191 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1192, i32 0, i32 1, i32 1)
  %1193 = getelementptr inbounds float, float* %1187, i64 16
  %1194 = bitcast float* %1193 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1194, i32 0, i32 1, i32 1)
  %1195 = getelementptr inbounds float, float* %1190, i64 16
  %1196 = bitcast float* %1195 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1196, i32 0, i32 1, i32 1)
  %1197 = getelementptr inbounds float, float* %1187, i64 24
  %1198 = bitcast float* %1197 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1198, i32 0, i32 1, i32 1)
  %1199 = getelementptr inbounds float, float* %1190, i64 24
  %1200 = bitcast float* %1199 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1200, i32 0, i32 1, i32 1)
  %1201 = getelementptr inbounds float, float* %1187, i64 32
  %1202 = bitcast float* %1201 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1202, i32 0, i32 1, i32 1)
  %1203 = getelementptr inbounds float, float* %1190, i64 32
  %1204 = bitcast float* %1203 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1204, i32 0, i32 1, i32 1)
  %1205 = getelementptr inbounds float, float* %1187, i64 40
  %1206 = bitcast float* %1205 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1206, i32 0, i32 1, i32 1)
  %1207 = getelementptr inbounds float, float* %1190, i64 40
  %1208 = bitcast float* %1207 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1208, i32 0, i32 1, i32 1)
  %1209 = getelementptr inbounds float, float* %1187, i64 48
  %1210 = bitcast float* %1209 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1210, i32 0, i32 1, i32 1)
  %1211 = getelementptr inbounds float, float* %1190, i64 48
  %1212 = bitcast float* %1211 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1212, i32 0, i32 1, i32 1)
  %1213 = getelementptr inbounds float, float* %1187, i64 56
  %1214 = bitcast float* %1213 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1214, i32 0, i32 1, i32 1)
  %1215 = getelementptr inbounds float, float* %1190, i64 56
  %1216 = bitcast float* %1215 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1216, i32 0, i32 1, i32 1)
  %1217 = getelementptr inbounds float, float* %1187, i64 64
  %1218 = bitcast float* %1217 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1218, i32 0, i32 1, i32 1)
  %1219 = getelementptr inbounds float, float* %1190, i64 64
  %1220 = bitcast float* %1219 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1220, i32 0, i32 1, i32 1)
  %1221 = getelementptr inbounds float, float* %1187, i64 72
  %1222 = bitcast float* %1221 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1222, i32 0, i32 1, i32 1)
  %1223 = getelementptr inbounds float, float* %1190, i64 72
  %1224 = bitcast float* %1223 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1224, i32 0, i32 1, i32 1)
  %1225 = getelementptr inbounds float, float* %1187, i64 80
  %1226 = bitcast float* %1225 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1226, i32 0, i32 1, i32 1)
  %1227 = getelementptr inbounds float, float* %1190, i64 80
  %1228 = bitcast float* %1227 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1228, i32 0, i32 1, i32 1)
  %1229 = getelementptr inbounds float, float* %1187, i64 88
  %1230 = bitcast float* %1229 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1230, i32 0, i32 1, i32 1)
  %1231 = getelementptr inbounds float, float* %1190, i64 88
  %1232 = bitcast float* %1231 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1232, i32 0, i32 1, i32 1)
  %1233 = bitcast float* %1187 to <8 x float>*
  %1234 = load <8 x float>, <8 x float>* %1233, align 1, !tbaa !12
  %1235 = add nuw nsw i64 %1186, 8
  %1236 = getelementptr inbounds float, float* %5, i64 %1235
  %1237 = bitcast float* %1236 to <8 x float>*
  %1238 = load <8 x float>, <8 x float>* %1237, align 1, !tbaa !12
  %1239 = add nuw nsw i64 %1186, 16
  %1240 = getelementptr inbounds float, float* %5, i64 %1239
  %1241 = bitcast float* %1240 to <8 x float>*
  %1242 = load <8 x float>, <8 x float>* %1241, align 1, !tbaa !12
  %1243 = add nuw nsw i64 %1186, 24
  %1244 = getelementptr inbounds float, float* %5, i64 %1243
  %1245 = bitcast float* %1244 to <8 x float>*
  %1246 = load <8 x float>, <8 x float>* %1245, align 1, !tbaa !12
  %1247 = add nuw nsw i64 %1186, 32
  %1248 = getelementptr inbounds float, float* %5, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = add nuw nsw i64 %1186, 40
  %1252 = getelementptr inbounds float, float* %5, i64 %1251
  %1253 = bitcast float* %1252 to <8 x float>*
  %1254 = load <8 x float>, <8 x float>* %1253, align 1, !tbaa !12
  %1255 = add nuw nsw i64 %1186, 48
  %1256 = getelementptr inbounds float, float* %5, i64 %1255
  %1257 = bitcast float* %1256 to <8 x float>*
  %1258 = load <8 x float>, <8 x float>* %1257, align 1, !tbaa !12
  %1259 = add nuw nsw i64 %1186, 56
  %1260 = getelementptr inbounds float, float* %5, i64 %1259
  %1261 = bitcast float* %1260 to <8 x float>*
  %1262 = load <8 x float>, <8 x float>* %1261, align 1, !tbaa !12
  %1263 = add nuw nsw i64 %1186, 64
  %1264 = getelementptr inbounds float, float* %5, i64 %1263
  %1265 = bitcast float* %1264 to <8 x float>*
  %1266 = load <8 x float>, <8 x float>* %1265, align 1, !tbaa !12
  %1267 = add nuw nsw i64 %1186, 72
  %1268 = getelementptr inbounds float, float* %5, i64 %1267
  %1269 = bitcast float* %1268 to <8 x float>*
  %1270 = load <8 x float>, <8 x float>* %1269, align 1, !tbaa !12
  %1271 = add nuw nsw i64 %1186, 80
  %1272 = getelementptr inbounds float, float* %5, i64 %1271
  %1273 = bitcast float* %1272 to <8 x float>*
  %1274 = load <8 x float>, <8 x float>* %1273, align 1, !tbaa !12
  %1275 = add nsw i64 %1186, %1029
  %1276 = getelementptr inbounds float, float* %3, i64 %1275
  %1277 = bitcast float* %1276 to <8 x float>*
  %1278 = load <8 x float>, <8 x float>* %1277, align 1, !tbaa !12
  %1279 = add nsw i64 %1275, 8
  %1280 = getelementptr inbounds float, float* %3, i64 %1279
  %1281 = bitcast float* %1280 to <8 x float>*
  %1282 = load <8 x float>, <8 x float>* %1281, align 1, !tbaa !12
  %1283 = add nsw i64 %1275, 16
  %1284 = getelementptr inbounds float, float* %3, i64 %1283
  %1285 = bitcast float* %1284 to <8 x float>*
  %1286 = load <8 x float>, <8 x float>* %1285, align 1, !tbaa !12
  %1287 = add nsw i64 %1275, 24
  %1288 = getelementptr inbounds float, float* %3, i64 %1287
  %1289 = bitcast float* %1288 to <8 x float>*
  %1290 = load <8 x float>, <8 x float>* %1289, align 1, !tbaa !12
  %1291 = add nsw i64 %1275, 32
  %1292 = getelementptr inbounds float, float* %3, i64 %1291
  %1293 = bitcast float* %1292 to <8 x float>*
  %1294 = load <8 x float>, <8 x float>* %1293, align 1, !tbaa !12
  %1295 = add nsw i64 %1275, 40
  %1296 = getelementptr inbounds float, float* %3, i64 %1295
  %1297 = bitcast float* %1296 to <8 x float>*
  %1298 = load <8 x float>, <8 x float>* %1297, align 1, !tbaa !12
  %1299 = add nsw i64 %1275, 48
  %1300 = getelementptr inbounds float, float* %3, i64 %1299
  %1301 = bitcast float* %1300 to <8 x float>*
  %1302 = load <8 x float>, <8 x float>* %1301, align 1, !tbaa !12
  %1303 = add nsw i64 %1275, 56
  %1304 = getelementptr inbounds float, float* %3, i64 %1303
  %1305 = bitcast float* %1304 to <8 x float>*
  %1306 = load <8 x float>, <8 x float>* %1305, align 1, !tbaa !12
  %1307 = add nsw i64 %1275, 64
  %1308 = getelementptr inbounds float, float* %3, i64 %1307
  %1309 = bitcast float* %1308 to <8 x float>*
  %1310 = load <8 x float>, <8 x float>* %1309, align 1, !tbaa !12
  %1311 = add nsw i64 %1275, 72
  %1312 = getelementptr inbounds float, float* %3, i64 %1311
  %1313 = bitcast float* %1312 to <8 x float>*
  %1314 = load <8 x float>, <8 x float>* %1313, align 1, !tbaa !12
  %1315 = add nsw i64 %1275, 80
  %1316 = getelementptr inbounds float, float* %3, i64 %1315
  %1317 = bitcast float* %1316 to <8 x float>*
  %1318 = load <8 x float>, <8 x float>* %1317, align 1, !tbaa !12
  %1319 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1278, <8 x float> %60, <8 x float> %1234) #10
  %1320 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1282, <8 x float> %60, <8 x float> %1238) #10
  %1321 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1286, <8 x float> %60, <8 x float> %1242) #10
  %1322 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1290, <8 x float> %60, <8 x float> %1246) #10
  %1323 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1294, <8 x float> %60, <8 x float> %1250) #10
  %1324 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1298, <8 x float> %60, <8 x float> %1254) #10
  %1325 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1302, <8 x float> %60, <8 x float> %1258) #10
  %1326 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1306, <8 x float> %60, <8 x float> %1262) #10
  %1327 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1310, <8 x float> %60, <8 x float> %1266) #10
  %1328 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1314, <8 x float> %60, <8 x float> %1270) #10
  %1329 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1318, <8 x float> %60, <8 x float> %1274) #10
  store <8 x float> %1319, <8 x float>* %1233, align 1, !tbaa !12
  store <8 x float> %1320, <8 x float>* %1237, align 1, !tbaa !12
  store <8 x float> %1321, <8 x float>* %1241, align 1, !tbaa !12
  store <8 x float> %1322, <8 x float>* %1245, align 1, !tbaa !12
  store <8 x float> %1323, <8 x float>* %1249, align 1, !tbaa !12
  store <8 x float> %1324, <8 x float>* %1253, align 1, !tbaa !12
  store <8 x float> %1325, <8 x float>* %1257, align 1, !tbaa !12
  store <8 x float> %1326, <8 x float>* %1261, align 1, !tbaa !12
  store <8 x float> %1327, <8 x float>* %1265, align 1, !tbaa !12
  store <8 x float> %1328, <8 x float>* %1269, align 1, !tbaa !12
  store <8 x float> %1329, <8 x float>* %1273, align 1, !tbaa !12
  %1330 = add nuw nsw i64 %1186, 88
  %1331 = icmp ult i64 %1330, %1030
  br i1 %1331, label %1185, label %1178

1332:                                             ; preds = %1338
  br i1 %1180, label %1333, label %1650

1333:                                             ; preds = %1332
  %1334 = trunc i64 %66 to i32
  %1335 = mul nsw i32 %1179, %1334
  %1336 = sext i32 %1335 to i64
  %1337 = zext i32 %1179 to i64
  br label %1503

1338:                                             ; preds = %1181, %1338
  %1339 = phi i64 [ 0, %1181 ], [ %1495, %1338 ]
  %1340 = getelementptr inbounds float, float* %5, i64 %1339
  %1341 = getelementptr inbounds float, float* %1340, i64 8
  %1342 = bitcast float* %1341 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1342, i32 0, i32 1, i32 1)
  %1343 = getelementptr inbounds float, float* %3, i64 %1339
  %1344 = getelementptr inbounds float, float* %1343, i64 8
  %1345 = bitcast float* %1344 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1345, i32 0, i32 1, i32 1)
  %1346 = getelementptr inbounds float, float* %1340, i64 16
  %1347 = bitcast float* %1346 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1347, i32 0, i32 1, i32 1)
  %1348 = getelementptr inbounds float, float* %1343, i64 16
  %1349 = bitcast float* %1348 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1349, i32 0, i32 1, i32 1)
  %1350 = getelementptr inbounds float, float* %1340, i64 24
  %1351 = bitcast float* %1350 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1351, i32 0, i32 1, i32 1)
  %1352 = getelementptr inbounds float, float* %1343, i64 24
  %1353 = bitcast float* %1352 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1353, i32 0, i32 1, i32 1)
  %1354 = getelementptr inbounds float, float* %1340, i64 32
  %1355 = bitcast float* %1354 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1355, i32 0, i32 1, i32 1)
  %1356 = getelementptr inbounds float, float* %1343, i64 32
  %1357 = bitcast float* %1356 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1357, i32 0, i32 1, i32 1)
  %1358 = getelementptr inbounds float, float* %1340, i64 40
  %1359 = bitcast float* %1358 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1359, i32 0, i32 1, i32 1)
  %1360 = getelementptr inbounds float, float* %1343, i64 40
  %1361 = bitcast float* %1360 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1361, i32 0, i32 1, i32 1)
  %1362 = getelementptr inbounds float, float* %1340, i64 48
  %1363 = bitcast float* %1362 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1363, i32 0, i32 1, i32 1)
  %1364 = getelementptr inbounds float, float* %1343, i64 48
  %1365 = bitcast float* %1364 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1365, i32 0, i32 1, i32 1)
  %1366 = getelementptr inbounds float, float* %1340, i64 56
  %1367 = bitcast float* %1366 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1367, i32 0, i32 1, i32 1)
  %1368 = getelementptr inbounds float, float* %1343, i64 56
  %1369 = bitcast float* %1368 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1369, i32 0, i32 1, i32 1)
  %1370 = getelementptr inbounds float, float* %1340, i64 64
  %1371 = bitcast float* %1370 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1371, i32 0, i32 1, i32 1)
  %1372 = getelementptr inbounds float, float* %1343, i64 64
  %1373 = bitcast float* %1372 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1373, i32 0, i32 1, i32 1)
  %1374 = getelementptr inbounds float, float* %1340, i64 72
  %1375 = bitcast float* %1374 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1375, i32 0, i32 1, i32 1)
  %1376 = getelementptr inbounds float, float* %1343, i64 72
  %1377 = bitcast float* %1376 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1377, i32 0, i32 1, i32 1)
  %1378 = getelementptr inbounds float, float* %1340, i64 80
  %1379 = bitcast float* %1378 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1379, i32 0, i32 1, i32 1)
  %1380 = getelementptr inbounds float, float* %1343, i64 80
  %1381 = bitcast float* %1380 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1381, i32 0, i32 1, i32 1)
  %1382 = getelementptr inbounds float, float* %1340, i64 88
  %1383 = bitcast float* %1382 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1383, i32 0, i32 1, i32 1)
  %1384 = getelementptr inbounds float, float* %1343, i64 88
  %1385 = bitcast float* %1384 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1385, i32 0, i32 1, i32 1)
  %1386 = bitcast float* %1340 to <8 x float>*
  %1387 = load <8 x float>, <8 x float>* %1386, align 1, !tbaa !12
  %1388 = add nuw nsw i64 %1339, 8
  %1389 = getelementptr inbounds float, float* %5, i64 %1388
  %1390 = bitcast float* %1389 to <8 x float>*
  %1391 = load <8 x float>, <8 x float>* %1390, align 1, !tbaa !12
  %1392 = add nuw nsw i64 %1339, 16
  %1393 = getelementptr inbounds float, float* %5, i64 %1392
  %1394 = bitcast float* %1393 to <8 x float>*
  %1395 = load <8 x float>, <8 x float>* %1394, align 1, !tbaa !12
  %1396 = add nuw nsw i64 %1339, 24
  %1397 = getelementptr inbounds float, float* %5, i64 %1396
  %1398 = bitcast float* %1397 to <8 x float>*
  %1399 = load <8 x float>, <8 x float>* %1398, align 1, !tbaa !12
  %1400 = add nuw nsw i64 %1339, 32
  %1401 = getelementptr inbounds float, float* %5, i64 %1400
  %1402 = bitcast float* %1401 to <8 x float>*
  %1403 = load <8 x float>, <8 x float>* %1402, align 1, !tbaa !12
  %1404 = add nuw nsw i64 %1339, 40
  %1405 = getelementptr inbounds float, float* %5, i64 %1404
  %1406 = bitcast float* %1405 to <8 x float>*
  %1407 = load <8 x float>, <8 x float>* %1406, align 1, !tbaa !12
  %1408 = add nuw nsw i64 %1339, 48
  %1409 = getelementptr inbounds float, float* %5, i64 %1408
  %1410 = bitcast float* %1409 to <8 x float>*
  %1411 = load <8 x float>, <8 x float>* %1410, align 1, !tbaa !12
  %1412 = add nuw nsw i64 %1339, 56
  %1413 = getelementptr inbounds float, float* %5, i64 %1412
  %1414 = bitcast float* %1413 to <8 x float>*
  %1415 = load <8 x float>, <8 x float>* %1414, align 1, !tbaa !12
  %1416 = add nuw nsw i64 %1339, 64
  %1417 = getelementptr inbounds float, float* %5, i64 %1416
  %1418 = bitcast float* %1417 to <8 x float>*
  %1419 = load <8 x float>, <8 x float>* %1418, align 1, !tbaa !12
  %1420 = add nuw nsw i64 %1339, 72
  %1421 = getelementptr inbounds float, float* %5, i64 %1420
  %1422 = bitcast float* %1421 to <8 x float>*
  %1423 = load <8 x float>, <8 x float>* %1422, align 1, !tbaa !12
  %1424 = add nuw nsw i64 %1339, 80
  %1425 = getelementptr inbounds float, float* %5, i64 %1424
  %1426 = bitcast float* %1425 to <8 x float>*
  %1427 = load <8 x float>, <8 x float>* %1426, align 1, !tbaa !12
  %1428 = trunc i64 %1339 to i32
  %1429 = add nsw i32 %1184, %1428
  %1430 = sext i32 %1429 to i64
  %1431 = getelementptr inbounds float, float* %3, i64 %1430
  %1432 = bitcast float* %1431 to <8 x float>*
  %1433 = load <8 x float>, <8 x float>* %1432, align 1, !tbaa !12
  %1434 = add nsw i32 %1429, 8
  %1435 = sext i32 %1434 to i64
  %1436 = getelementptr inbounds float, float* %3, i64 %1435
  %1437 = bitcast float* %1436 to <8 x float>*
  %1438 = load <8 x float>, <8 x float>* %1437, align 1, !tbaa !12
  %1439 = add nsw i32 %1429, 16
  %1440 = sext i32 %1439 to i64
  %1441 = getelementptr inbounds float, float* %3, i64 %1440
  %1442 = bitcast float* %1441 to <8 x float>*
  %1443 = load <8 x float>, <8 x float>* %1442, align 1, !tbaa !12
  %1444 = add nsw i32 %1429, 24
  %1445 = sext i32 %1444 to i64
  %1446 = getelementptr inbounds float, float* %3, i64 %1445
  %1447 = bitcast float* %1446 to <8 x float>*
  %1448 = load <8 x float>, <8 x float>* %1447, align 1, !tbaa !12
  %1449 = add nsw i32 %1429, 32
  %1450 = sext i32 %1449 to i64
  %1451 = getelementptr inbounds float, float* %3, i64 %1450
  %1452 = bitcast float* %1451 to <8 x float>*
  %1453 = load <8 x float>, <8 x float>* %1452, align 1, !tbaa !12
  %1454 = add nsw i32 %1429, 40
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds float, float* %3, i64 %1455
  %1457 = bitcast float* %1456 to <8 x float>*
  %1458 = load <8 x float>, <8 x float>* %1457, align 1, !tbaa !12
  %1459 = add nsw i32 %1429, 48
  %1460 = sext i32 %1459 to i64
  %1461 = getelementptr inbounds float, float* %3, i64 %1460
  %1462 = bitcast float* %1461 to <8 x float>*
  %1463 = load <8 x float>, <8 x float>* %1462, align 1, !tbaa !12
  %1464 = add nsw i32 %1429, 56
  %1465 = sext i32 %1464 to i64
  %1466 = getelementptr inbounds float, float* %3, i64 %1465
  %1467 = bitcast float* %1466 to <8 x float>*
  %1468 = load <8 x float>, <8 x float>* %1467, align 1, !tbaa !12
  %1469 = add nsw i32 %1429, 64
  %1470 = sext i32 %1469 to i64
  %1471 = getelementptr inbounds float, float* %3, i64 %1470
  %1472 = bitcast float* %1471 to <8 x float>*
  %1473 = load <8 x float>, <8 x float>* %1472, align 1, !tbaa !12
  %1474 = add nsw i32 %1429, 72
  %1475 = sext i32 %1474 to i64
  %1476 = getelementptr inbounds float, float* %3, i64 %1475
  %1477 = bitcast float* %1476 to <8 x float>*
  %1478 = load <8 x float>, <8 x float>* %1477, align 1, !tbaa !12
  %1479 = add nsw i32 %1429, 80
  %1480 = sext i32 %1479 to i64
  %1481 = getelementptr inbounds float, float* %3, i64 %1480
  %1482 = bitcast float* %1481 to <8 x float>*
  %1483 = load <8 x float>, <8 x float>* %1482, align 1, !tbaa !12
  %1484 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1433, <8 x float> %65, <8 x float> %1387) #10
  %1485 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1438, <8 x float> %65, <8 x float> %1391) #10
  %1486 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1443, <8 x float> %65, <8 x float> %1395) #10
  %1487 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1448, <8 x float> %65, <8 x float> %1399) #10
  %1488 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1453, <8 x float> %65, <8 x float> %1403) #10
  %1489 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1458, <8 x float> %65, <8 x float> %1407) #10
  %1490 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1463, <8 x float> %65, <8 x float> %1411) #10
  %1491 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1468, <8 x float> %65, <8 x float> %1415) #10
  %1492 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1473, <8 x float> %65, <8 x float> %1419) #10
  %1493 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1478, <8 x float> %65, <8 x float> %1423) #10
  %1494 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1483, <8 x float> %65, <8 x float> %1427) #10
  store <8 x float> %1484, <8 x float>* %1386, align 1, !tbaa !12
  store <8 x float> %1485, <8 x float>* %1390, align 1, !tbaa !12
  store <8 x float> %1486, <8 x float>* %1394, align 1, !tbaa !12
  store <8 x float> %1487, <8 x float>* %1398, align 1, !tbaa !12
  store <8 x float> %1488, <8 x float>* %1402, align 1, !tbaa !12
  store <8 x float> %1489, <8 x float>* %1406, align 1, !tbaa !12
  store <8 x float> %1490, <8 x float>* %1410, align 1, !tbaa !12
  store <8 x float> %1491, <8 x float>* %1414, align 1, !tbaa !12
  store <8 x float> %1492, <8 x float>* %1418, align 1, !tbaa !12
  store <8 x float> %1493, <8 x float>* %1422, align 1, !tbaa !12
  store <8 x float> %1494, <8 x float>* %1426, align 1, !tbaa !12
  %1495 = add nuw nsw i64 %1339, 88
  %1496 = icmp ult i64 %1495, %1182
  br i1 %1496, label %1338, label %1332

1497:                                             ; preds = %1503
  br i1 %1180, label %1498, label %1650

1498:                                             ; preds = %1497
  %1499 = trunc i64 %71 to i32
  %1500 = mul nsw i32 %1179, %1499
  %1501 = sext i32 %1500 to i64
  %1502 = zext i32 %1179 to i64
  br label %1655

1503:                                             ; preds = %1333, %1503
  %1504 = phi i64 [ 0, %1333 ], [ %1648, %1503 ]
  %1505 = getelementptr inbounds float, float* %5, i64 %1504
  %1506 = getelementptr inbounds float, float* %1505, i64 8
  %1507 = bitcast float* %1506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1507, i32 0, i32 1, i32 1)
  %1508 = getelementptr inbounds float, float* %3, i64 %1504
  %1509 = getelementptr inbounds float, float* %1508, i64 8
  %1510 = bitcast float* %1509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1510, i32 0, i32 1, i32 1)
  %1511 = getelementptr inbounds float, float* %1505, i64 16
  %1512 = bitcast float* %1511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1512, i32 0, i32 1, i32 1)
  %1513 = getelementptr inbounds float, float* %1508, i64 16
  %1514 = bitcast float* %1513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1514, i32 0, i32 1, i32 1)
  %1515 = getelementptr inbounds float, float* %1505, i64 24
  %1516 = bitcast float* %1515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1516, i32 0, i32 1, i32 1)
  %1517 = getelementptr inbounds float, float* %1508, i64 24
  %1518 = bitcast float* %1517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1518, i32 0, i32 1, i32 1)
  %1519 = getelementptr inbounds float, float* %1505, i64 32
  %1520 = bitcast float* %1519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1520, i32 0, i32 1, i32 1)
  %1521 = getelementptr inbounds float, float* %1508, i64 32
  %1522 = bitcast float* %1521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1522, i32 0, i32 1, i32 1)
  %1523 = getelementptr inbounds float, float* %1505, i64 40
  %1524 = bitcast float* %1523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1524, i32 0, i32 1, i32 1)
  %1525 = getelementptr inbounds float, float* %1508, i64 40
  %1526 = bitcast float* %1525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1526, i32 0, i32 1, i32 1)
  %1527 = getelementptr inbounds float, float* %1505, i64 48
  %1528 = bitcast float* %1527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1528, i32 0, i32 1, i32 1)
  %1529 = getelementptr inbounds float, float* %1508, i64 48
  %1530 = bitcast float* %1529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1530, i32 0, i32 1, i32 1)
  %1531 = getelementptr inbounds float, float* %1505, i64 56
  %1532 = bitcast float* %1531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1532, i32 0, i32 1, i32 1)
  %1533 = getelementptr inbounds float, float* %1508, i64 56
  %1534 = bitcast float* %1533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1534, i32 0, i32 1, i32 1)
  %1535 = getelementptr inbounds float, float* %1505, i64 64
  %1536 = bitcast float* %1535 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1536, i32 0, i32 1, i32 1)
  %1537 = getelementptr inbounds float, float* %1508, i64 64
  %1538 = bitcast float* %1537 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1538, i32 0, i32 1, i32 1)
  %1539 = getelementptr inbounds float, float* %1505, i64 72
  %1540 = bitcast float* %1539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1540, i32 0, i32 1, i32 1)
  %1541 = getelementptr inbounds float, float* %1508, i64 72
  %1542 = bitcast float* %1541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1542, i32 0, i32 1, i32 1)
  %1543 = getelementptr inbounds float, float* %1505, i64 80
  %1544 = bitcast float* %1543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1544, i32 0, i32 1, i32 1)
  %1545 = getelementptr inbounds float, float* %1508, i64 80
  %1546 = bitcast float* %1545 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1546, i32 0, i32 1, i32 1)
  %1547 = getelementptr inbounds float, float* %1505, i64 88
  %1548 = bitcast float* %1547 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1548, i32 0, i32 1, i32 1)
  %1549 = getelementptr inbounds float, float* %1508, i64 88
  %1550 = bitcast float* %1549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1550, i32 0, i32 1, i32 1)
  %1551 = bitcast float* %1505 to <8 x float>*
  %1552 = load <8 x float>, <8 x float>* %1551, align 1, !tbaa !12
  %1553 = add nuw nsw i64 %1504, 8
  %1554 = getelementptr inbounds float, float* %5, i64 %1553
  %1555 = bitcast float* %1554 to <8 x float>*
  %1556 = load <8 x float>, <8 x float>* %1555, align 1, !tbaa !12
  %1557 = add nuw nsw i64 %1504, 16
  %1558 = getelementptr inbounds float, float* %5, i64 %1557
  %1559 = bitcast float* %1558 to <8 x float>*
  %1560 = load <8 x float>, <8 x float>* %1559, align 1, !tbaa !12
  %1561 = add nuw nsw i64 %1504, 24
  %1562 = getelementptr inbounds float, float* %5, i64 %1561
  %1563 = bitcast float* %1562 to <8 x float>*
  %1564 = load <8 x float>, <8 x float>* %1563, align 1, !tbaa !12
  %1565 = add nuw nsw i64 %1504, 32
  %1566 = getelementptr inbounds float, float* %5, i64 %1565
  %1567 = bitcast float* %1566 to <8 x float>*
  %1568 = load <8 x float>, <8 x float>* %1567, align 1, !tbaa !12
  %1569 = add nuw nsw i64 %1504, 40
  %1570 = getelementptr inbounds float, float* %5, i64 %1569
  %1571 = bitcast float* %1570 to <8 x float>*
  %1572 = load <8 x float>, <8 x float>* %1571, align 1, !tbaa !12
  %1573 = add nuw nsw i64 %1504, 48
  %1574 = getelementptr inbounds float, float* %5, i64 %1573
  %1575 = bitcast float* %1574 to <8 x float>*
  %1576 = load <8 x float>, <8 x float>* %1575, align 1, !tbaa !12
  %1577 = add nuw nsw i64 %1504, 56
  %1578 = getelementptr inbounds float, float* %5, i64 %1577
  %1579 = bitcast float* %1578 to <8 x float>*
  %1580 = load <8 x float>, <8 x float>* %1579, align 1, !tbaa !12
  %1581 = add nuw nsw i64 %1504, 64
  %1582 = getelementptr inbounds float, float* %5, i64 %1581
  %1583 = bitcast float* %1582 to <8 x float>*
  %1584 = load <8 x float>, <8 x float>* %1583, align 1, !tbaa !12
  %1585 = add nuw nsw i64 %1504, 72
  %1586 = getelementptr inbounds float, float* %5, i64 %1585
  %1587 = bitcast float* %1586 to <8 x float>*
  %1588 = load <8 x float>, <8 x float>* %1587, align 1, !tbaa !12
  %1589 = add nuw nsw i64 %1504, 80
  %1590 = getelementptr inbounds float, float* %5, i64 %1589
  %1591 = bitcast float* %1590 to <8 x float>*
  %1592 = load <8 x float>, <8 x float>* %1591, align 1, !tbaa !12
  %1593 = add nsw i64 %1504, %1336
  %1594 = getelementptr inbounds float, float* %3, i64 %1593
  %1595 = bitcast float* %1594 to <8 x float>*
  %1596 = load <8 x float>, <8 x float>* %1595, align 1, !tbaa !12
  %1597 = add nsw i64 %1593, 8
  %1598 = getelementptr inbounds float, float* %3, i64 %1597
  %1599 = bitcast float* %1598 to <8 x float>*
  %1600 = load <8 x float>, <8 x float>* %1599, align 1, !tbaa !12
  %1601 = add nsw i64 %1593, 16
  %1602 = getelementptr inbounds float, float* %3, i64 %1601
  %1603 = bitcast float* %1602 to <8 x float>*
  %1604 = load <8 x float>, <8 x float>* %1603, align 1, !tbaa !12
  %1605 = add nsw i64 %1593, 24
  %1606 = getelementptr inbounds float, float* %3, i64 %1605
  %1607 = bitcast float* %1606 to <8 x float>*
  %1608 = load <8 x float>, <8 x float>* %1607, align 1, !tbaa !12
  %1609 = add nsw i64 %1593, 32
  %1610 = getelementptr inbounds float, float* %3, i64 %1609
  %1611 = bitcast float* %1610 to <8 x float>*
  %1612 = load <8 x float>, <8 x float>* %1611, align 1, !tbaa !12
  %1613 = add nsw i64 %1593, 40
  %1614 = getelementptr inbounds float, float* %3, i64 %1613
  %1615 = bitcast float* %1614 to <8 x float>*
  %1616 = load <8 x float>, <8 x float>* %1615, align 1, !tbaa !12
  %1617 = add nsw i64 %1593, 48
  %1618 = getelementptr inbounds float, float* %3, i64 %1617
  %1619 = bitcast float* %1618 to <8 x float>*
  %1620 = load <8 x float>, <8 x float>* %1619, align 1, !tbaa !12
  %1621 = add nsw i64 %1593, 56
  %1622 = getelementptr inbounds float, float* %3, i64 %1621
  %1623 = bitcast float* %1622 to <8 x float>*
  %1624 = load <8 x float>, <8 x float>* %1623, align 1, !tbaa !12
  %1625 = add nsw i64 %1593, 64
  %1626 = getelementptr inbounds float, float* %3, i64 %1625
  %1627 = bitcast float* %1626 to <8 x float>*
  %1628 = load <8 x float>, <8 x float>* %1627, align 1, !tbaa !12
  %1629 = add nsw i64 %1593, 72
  %1630 = getelementptr inbounds float, float* %3, i64 %1629
  %1631 = bitcast float* %1630 to <8 x float>*
  %1632 = load <8 x float>, <8 x float>* %1631, align 1, !tbaa !12
  %1633 = add nsw i64 %1593, 80
  %1634 = getelementptr inbounds float, float* %3, i64 %1633
  %1635 = bitcast float* %1634 to <8 x float>*
  %1636 = load <8 x float>, <8 x float>* %1635, align 1, !tbaa !12
  %1637 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1596, <8 x float> %70, <8 x float> %1552) #10
  %1638 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1600, <8 x float> %70, <8 x float> %1556) #10
  %1639 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1604, <8 x float> %70, <8 x float> %1560) #10
  %1640 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1608, <8 x float> %70, <8 x float> %1564) #10
  %1641 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1612, <8 x float> %70, <8 x float> %1568) #10
  %1642 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1616, <8 x float> %70, <8 x float> %1572) #10
  %1643 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1620, <8 x float> %70, <8 x float> %1576) #10
  %1644 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1624, <8 x float> %70, <8 x float> %1580) #10
  %1645 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1628, <8 x float> %70, <8 x float> %1584) #10
  %1646 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1632, <8 x float> %70, <8 x float> %1588) #10
  %1647 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1636, <8 x float> %70, <8 x float> %1592) #10
  store <8 x float> %1637, <8 x float>* %1551, align 1, !tbaa !12
  store <8 x float> %1638, <8 x float>* %1555, align 1, !tbaa !12
  store <8 x float> %1639, <8 x float>* %1559, align 1, !tbaa !12
  store <8 x float> %1640, <8 x float>* %1563, align 1, !tbaa !12
  store <8 x float> %1641, <8 x float>* %1567, align 1, !tbaa !12
  store <8 x float> %1642, <8 x float>* %1571, align 1, !tbaa !12
  store <8 x float> %1643, <8 x float>* %1575, align 1, !tbaa !12
  store <8 x float> %1644, <8 x float>* %1579, align 1, !tbaa !12
  store <8 x float> %1645, <8 x float>* %1583, align 1, !tbaa !12
  store <8 x float> %1646, <8 x float>* %1587, align 1, !tbaa !12
  store <8 x float> %1647, <8 x float>* %1591, align 1, !tbaa !12
  %1648 = add nuw nsw i64 %1504, 88
  %1649 = icmp ult i64 %1648, %1337
  br i1 %1649, label %1503, label %1497

1650:                                             ; preds = %1655, %20, %553, %1178, %1332, %1497
  %1651 = add nuw nsw i64 %21, 11
  %1652 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1653 = sext i32 %1652 to i64
  %1654 = icmp slt i64 %1651, %1653
  br i1 %1654, label %20, label %8

1655:                                             ; preds = %1498, %1655
  %1656 = phi i64 [ 0, %1498 ], [ %1800, %1655 ]
  %1657 = getelementptr inbounds float, float* %5, i64 %1656
  %1658 = getelementptr inbounds float, float* %1657, i64 8
  %1659 = bitcast float* %1658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1659, i32 0, i32 1, i32 1)
  %1660 = getelementptr inbounds float, float* %3, i64 %1656
  %1661 = getelementptr inbounds float, float* %1660, i64 8
  %1662 = bitcast float* %1661 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1662, i32 0, i32 1, i32 1)
  %1663 = getelementptr inbounds float, float* %1657, i64 16
  %1664 = bitcast float* %1663 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1664, i32 0, i32 1, i32 1)
  %1665 = getelementptr inbounds float, float* %1660, i64 16
  %1666 = bitcast float* %1665 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1666, i32 0, i32 1, i32 1)
  %1667 = getelementptr inbounds float, float* %1657, i64 24
  %1668 = bitcast float* %1667 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1668, i32 0, i32 1, i32 1)
  %1669 = getelementptr inbounds float, float* %1660, i64 24
  %1670 = bitcast float* %1669 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1670, i32 0, i32 1, i32 1)
  %1671 = getelementptr inbounds float, float* %1657, i64 32
  %1672 = bitcast float* %1671 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1672, i32 0, i32 1, i32 1)
  %1673 = getelementptr inbounds float, float* %1660, i64 32
  %1674 = bitcast float* %1673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1674, i32 0, i32 1, i32 1)
  %1675 = getelementptr inbounds float, float* %1657, i64 40
  %1676 = bitcast float* %1675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1676, i32 0, i32 1, i32 1)
  %1677 = getelementptr inbounds float, float* %1660, i64 40
  %1678 = bitcast float* %1677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1678, i32 0, i32 1, i32 1)
  %1679 = getelementptr inbounds float, float* %1657, i64 48
  %1680 = bitcast float* %1679 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1680, i32 0, i32 1, i32 1)
  %1681 = getelementptr inbounds float, float* %1660, i64 48
  %1682 = bitcast float* %1681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1682, i32 0, i32 1, i32 1)
  %1683 = getelementptr inbounds float, float* %1657, i64 56
  %1684 = bitcast float* %1683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1684, i32 0, i32 1, i32 1)
  %1685 = getelementptr inbounds float, float* %1660, i64 56
  %1686 = bitcast float* %1685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1686, i32 0, i32 1, i32 1)
  %1687 = getelementptr inbounds float, float* %1657, i64 64
  %1688 = bitcast float* %1687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1688, i32 0, i32 1, i32 1)
  %1689 = getelementptr inbounds float, float* %1660, i64 64
  %1690 = bitcast float* %1689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1690, i32 0, i32 1, i32 1)
  %1691 = getelementptr inbounds float, float* %1657, i64 72
  %1692 = bitcast float* %1691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1692, i32 0, i32 1, i32 1)
  %1693 = getelementptr inbounds float, float* %1660, i64 72
  %1694 = bitcast float* %1693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1694, i32 0, i32 1, i32 1)
  %1695 = getelementptr inbounds float, float* %1657, i64 80
  %1696 = bitcast float* %1695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1696, i32 0, i32 1, i32 1)
  %1697 = getelementptr inbounds float, float* %1660, i64 80
  %1698 = bitcast float* %1697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1698, i32 0, i32 1, i32 1)
  %1699 = getelementptr inbounds float, float* %1657, i64 88
  %1700 = bitcast float* %1699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1700, i32 0, i32 1, i32 1)
  %1701 = getelementptr inbounds float, float* %1660, i64 88
  %1702 = bitcast float* %1701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1702, i32 0, i32 1, i32 1)
  %1703 = bitcast float* %1657 to <8 x float>*
  %1704 = load <8 x float>, <8 x float>* %1703, align 1, !tbaa !12
  %1705 = add nuw nsw i64 %1656, 8
  %1706 = getelementptr inbounds float, float* %5, i64 %1705
  %1707 = bitcast float* %1706 to <8 x float>*
  %1708 = load <8 x float>, <8 x float>* %1707, align 1, !tbaa !12
  %1709 = add nuw nsw i64 %1656, 16
  %1710 = getelementptr inbounds float, float* %5, i64 %1709
  %1711 = bitcast float* %1710 to <8 x float>*
  %1712 = load <8 x float>, <8 x float>* %1711, align 1, !tbaa !12
  %1713 = add nuw nsw i64 %1656, 24
  %1714 = getelementptr inbounds float, float* %5, i64 %1713
  %1715 = bitcast float* %1714 to <8 x float>*
  %1716 = load <8 x float>, <8 x float>* %1715, align 1, !tbaa !12
  %1717 = add nuw nsw i64 %1656, 32
  %1718 = getelementptr inbounds float, float* %5, i64 %1717
  %1719 = bitcast float* %1718 to <8 x float>*
  %1720 = load <8 x float>, <8 x float>* %1719, align 1, !tbaa !12
  %1721 = add nuw nsw i64 %1656, 40
  %1722 = getelementptr inbounds float, float* %5, i64 %1721
  %1723 = bitcast float* %1722 to <8 x float>*
  %1724 = load <8 x float>, <8 x float>* %1723, align 1, !tbaa !12
  %1725 = add nuw nsw i64 %1656, 48
  %1726 = getelementptr inbounds float, float* %5, i64 %1725
  %1727 = bitcast float* %1726 to <8 x float>*
  %1728 = load <8 x float>, <8 x float>* %1727, align 1, !tbaa !12
  %1729 = add nuw nsw i64 %1656, 56
  %1730 = getelementptr inbounds float, float* %5, i64 %1729
  %1731 = bitcast float* %1730 to <8 x float>*
  %1732 = load <8 x float>, <8 x float>* %1731, align 1, !tbaa !12
  %1733 = add nuw nsw i64 %1656, 64
  %1734 = getelementptr inbounds float, float* %5, i64 %1733
  %1735 = bitcast float* %1734 to <8 x float>*
  %1736 = load <8 x float>, <8 x float>* %1735, align 1, !tbaa !12
  %1737 = add nuw nsw i64 %1656, 72
  %1738 = getelementptr inbounds float, float* %5, i64 %1737
  %1739 = bitcast float* %1738 to <8 x float>*
  %1740 = load <8 x float>, <8 x float>* %1739, align 1, !tbaa !12
  %1741 = add nuw nsw i64 %1656, 80
  %1742 = getelementptr inbounds float, float* %5, i64 %1741
  %1743 = bitcast float* %1742 to <8 x float>*
  %1744 = load <8 x float>, <8 x float>* %1743, align 1, !tbaa !12
  %1745 = add nsw i64 %1656, %1501
  %1746 = getelementptr inbounds float, float* %3, i64 %1745
  %1747 = bitcast float* %1746 to <8 x float>*
  %1748 = load <8 x float>, <8 x float>* %1747, align 1, !tbaa !12
  %1749 = add nsw i64 %1745, 8
  %1750 = getelementptr inbounds float, float* %3, i64 %1749
  %1751 = bitcast float* %1750 to <8 x float>*
  %1752 = load <8 x float>, <8 x float>* %1751, align 1, !tbaa !12
  %1753 = add nsw i64 %1745, 16
  %1754 = getelementptr inbounds float, float* %3, i64 %1753
  %1755 = bitcast float* %1754 to <8 x float>*
  %1756 = load <8 x float>, <8 x float>* %1755, align 1, !tbaa !12
  %1757 = add nsw i64 %1745, 24
  %1758 = getelementptr inbounds float, float* %3, i64 %1757
  %1759 = bitcast float* %1758 to <8 x float>*
  %1760 = load <8 x float>, <8 x float>* %1759, align 1, !tbaa !12
  %1761 = add nsw i64 %1745, 32
  %1762 = getelementptr inbounds float, float* %3, i64 %1761
  %1763 = bitcast float* %1762 to <8 x float>*
  %1764 = load <8 x float>, <8 x float>* %1763, align 1, !tbaa !12
  %1765 = add nsw i64 %1745, 40
  %1766 = getelementptr inbounds float, float* %3, i64 %1765
  %1767 = bitcast float* %1766 to <8 x float>*
  %1768 = load <8 x float>, <8 x float>* %1767, align 1, !tbaa !12
  %1769 = add nsw i64 %1745, 48
  %1770 = getelementptr inbounds float, float* %3, i64 %1769
  %1771 = bitcast float* %1770 to <8 x float>*
  %1772 = load <8 x float>, <8 x float>* %1771, align 1, !tbaa !12
  %1773 = add nsw i64 %1745, 56
  %1774 = getelementptr inbounds float, float* %3, i64 %1773
  %1775 = bitcast float* %1774 to <8 x float>*
  %1776 = load <8 x float>, <8 x float>* %1775, align 1, !tbaa !12
  %1777 = add nsw i64 %1745, 64
  %1778 = getelementptr inbounds float, float* %3, i64 %1777
  %1779 = bitcast float* %1778 to <8 x float>*
  %1780 = load <8 x float>, <8 x float>* %1779, align 1, !tbaa !12
  %1781 = add nsw i64 %1745, 72
  %1782 = getelementptr inbounds float, float* %3, i64 %1781
  %1783 = bitcast float* %1782 to <8 x float>*
  %1784 = load <8 x float>, <8 x float>* %1783, align 1, !tbaa !12
  %1785 = add nsw i64 %1745, 80
  %1786 = getelementptr inbounds float, float* %3, i64 %1785
  %1787 = bitcast float* %1786 to <8 x float>*
  %1788 = load <8 x float>, <8 x float>* %1787, align 1, !tbaa !12
  %1789 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1748, <8 x float> %75, <8 x float> %1704) #10
  %1790 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1752, <8 x float> %75, <8 x float> %1708) #10
  %1791 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1756, <8 x float> %75, <8 x float> %1712) #10
  %1792 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1760, <8 x float> %75, <8 x float> %1716) #10
  %1793 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1764, <8 x float> %75, <8 x float> %1720) #10
  %1794 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1768, <8 x float> %75, <8 x float> %1724) #10
  %1795 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1772, <8 x float> %75, <8 x float> %1728) #10
  %1796 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1776, <8 x float> %75, <8 x float> %1732) #10
  %1797 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1780, <8 x float> %75, <8 x float> %1736) #10
  %1798 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1784, <8 x float> %75, <8 x float> %1740) #10
  %1799 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1788, <8 x float> %75, <8 x float> %1744) #10
  store <8 x float> %1789, <8 x float>* %1703, align 1, !tbaa !12
  store <8 x float> %1790, <8 x float>* %1707, align 1, !tbaa !12
  store <8 x float> %1791, <8 x float>* %1711, align 1, !tbaa !12
  store <8 x float> %1792, <8 x float>* %1715, align 1, !tbaa !12
  store <8 x float> %1793, <8 x float>* %1719, align 1, !tbaa !12
  store <8 x float> %1794, <8 x float>* %1723, align 1, !tbaa !12
  store <8 x float> %1795, <8 x float>* %1727, align 1, !tbaa !12
  store <8 x float> %1796, <8 x float>* %1731, align 1, !tbaa !12
  store <8 x float> %1797, <8 x float>* %1735, align 1, !tbaa !12
  store <8 x float> %1798, <8 x float>* %1739, align 1, !tbaa !12
  store <8 x float> %1799, <8 x float>* %1743, align 1, !tbaa !12
  %1800 = add nuw nsw i64 %1656, 88
  %1801 = icmp ult i64 %1800, %1502
  br i1 %1801, label %1655, label %1650
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 253
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui11_uk11.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
