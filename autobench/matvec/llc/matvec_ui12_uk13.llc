; ModuleID = 'codes/matvec_ui12_uk13.cpp'
source_filename = "codes/matvec_ui12_uk13.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui12_uk13.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 96
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 104
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %2140, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %2140
  %21 = phi i64 [ %2141, %2140 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %2140

88:                                               ; preds = %20
  %89 = zext i32 %86 to i64
  %90 = trunc i64 %21 to i32
  %91 = mul nsw i32 %86, %90
  br label %98

92:                                               ; preds = %98
  br i1 %87, label %93, label %437

93:                                               ; preds = %92
  %94 = trunc i64 %26 to i32
  %95 = mul nsw i32 %86, %94
  %96 = sext i32 %95 to i64
  %97 = zext i32 %86 to i64
  br label %277

98:                                               ; preds = %88, %98
  %99 = phi i64 [ 0, %88 ], [ %269, %98 ]
  %100 = getelementptr inbounds float, float* %5, i64 %99
  %101 = getelementptr inbounds float, float* %100, i64 8
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %3, i64 %99
  %104 = getelementptr inbounds float, float* %103, i64 8
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %100, i64 16
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %103, i64 16
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %100, i64 24
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %103, i64 24
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %100, i64 32
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %103, i64 32
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %100, i64 40
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %103, i64 40
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %100, i64 48
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %103, i64 48
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %100, i64 56
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %103, i64 56
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %100, i64 64
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %103, i64 64
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %100, i64 72
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %103, i64 72
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = getelementptr inbounds float, float* %100, i64 80
  %139 = bitcast float* %138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %139, i32 0, i32 1, i32 1)
  %140 = getelementptr inbounds float, float* %103, i64 80
  %141 = bitcast float* %140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %141, i32 0, i32 1, i32 1)
  %142 = getelementptr inbounds float, float* %100, i64 88
  %143 = bitcast float* %142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %143, i32 0, i32 1, i32 1)
  %144 = getelementptr inbounds float, float* %103, i64 88
  %145 = bitcast float* %144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %145, i32 0, i32 1, i32 1)
  %146 = getelementptr inbounds float, float* %100, i64 96
  %147 = bitcast float* %146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %147, i32 0, i32 1, i32 1)
  %148 = getelementptr inbounds float, float* %103, i64 96
  %149 = bitcast float* %148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %149, i32 0, i32 1, i32 1)
  %150 = bitcast float* %100 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = or i64 %99, 8
  %153 = getelementptr inbounds float, float* %5, i64 %152
  %154 = bitcast float* %153 to <8 x float>*
  %155 = load <8 x float>, <8 x float>* %154, align 1, !tbaa !12
  %156 = or i64 %99, 16
  %157 = getelementptr inbounds float, float* %5, i64 %156
  %158 = bitcast float* %157 to <8 x float>*
  %159 = load <8 x float>, <8 x float>* %158, align 1, !tbaa !12
  %160 = or i64 %99, 24
  %161 = getelementptr inbounds float, float* %5, i64 %160
  %162 = bitcast float* %161 to <8 x float>*
  %163 = load <8 x float>, <8 x float>* %162, align 1, !tbaa !12
  %164 = add nuw nsw i64 %99, 32
  %165 = getelementptr inbounds float, float* %5, i64 %164
  %166 = bitcast float* %165 to <8 x float>*
  %167 = load <8 x float>, <8 x float>* %166, align 1, !tbaa !12
  %168 = add nuw nsw i64 %99, 40
  %169 = getelementptr inbounds float, float* %5, i64 %168
  %170 = bitcast float* %169 to <8 x float>*
  %171 = load <8 x float>, <8 x float>* %170, align 1, !tbaa !12
  %172 = add nuw nsw i64 %99, 48
  %173 = getelementptr inbounds float, float* %5, i64 %172
  %174 = bitcast float* %173 to <8 x float>*
  %175 = load <8 x float>, <8 x float>* %174, align 1, !tbaa !12
  %176 = add nuw nsw i64 %99, 56
  %177 = getelementptr inbounds float, float* %5, i64 %176
  %178 = bitcast float* %177 to <8 x float>*
  %179 = load <8 x float>, <8 x float>* %178, align 1, !tbaa !12
  %180 = add nuw nsw i64 %99, 64
  %181 = getelementptr inbounds float, float* %5, i64 %180
  %182 = bitcast float* %181 to <8 x float>*
  %183 = load <8 x float>, <8 x float>* %182, align 1, !tbaa !12
  %184 = add nuw nsw i64 %99, 72
  %185 = getelementptr inbounds float, float* %5, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = add nuw nsw i64 %99, 80
  %189 = getelementptr inbounds float, float* %5, i64 %188
  %190 = bitcast float* %189 to <8 x float>*
  %191 = load <8 x float>, <8 x float>* %190, align 1, !tbaa !12
  %192 = add nuw nsw i64 %99, 88
  %193 = getelementptr inbounds float, float* %5, i64 %192
  %194 = bitcast float* %193 to <8 x float>*
  %195 = load <8 x float>, <8 x float>* %194, align 1, !tbaa !12
  %196 = trunc i64 %99 to i32
  %197 = add nsw i32 %91, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds float, float* %3, i64 %198
  %200 = bitcast float* %199 to <8 x float>*
  %201 = load <8 x float>, <8 x float>* %200, align 1, !tbaa !12
  %202 = add nsw i32 %197, 8
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds float, float* %3, i64 %203
  %205 = bitcast float* %204 to <8 x float>*
  %206 = load <8 x float>, <8 x float>* %205, align 1, !tbaa !12
  %207 = add nsw i32 %197, 16
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds float, float* %3, i64 %208
  %210 = bitcast float* %209 to <8 x float>*
  %211 = load <8 x float>, <8 x float>* %210, align 1, !tbaa !12
  %212 = add nsw i32 %197, 24
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds float, float* %3, i64 %213
  %215 = bitcast float* %214 to <8 x float>*
  %216 = load <8 x float>, <8 x float>* %215, align 1, !tbaa !12
  %217 = add nsw i32 %197, 32
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds float, float* %3, i64 %218
  %220 = bitcast float* %219 to <8 x float>*
  %221 = load <8 x float>, <8 x float>* %220, align 1, !tbaa !12
  %222 = add nsw i32 %197, 40
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds float, float* %3, i64 %223
  %225 = bitcast float* %224 to <8 x float>*
  %226 = load <8 x float>, <8 x float>* %225, align 1, !tbaa !12
  %227 = add nsw i32 %197, 48
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds float, float* %3, i64 %228
  %230 = bitcast float* %229 to <8 x float>*
  %231 = load <8 x float>, <8 x float>* %230, align 1, !tbaa !12
  %232 = add nsw i32 %197, 56
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds float, float* %3, i64 %233
  %235 = bitcast float* %234 to <8 x float>*
  %236 = load <8 x float>, <8 x float>* %235, align 1, !tbaa !12
  %237 = add nsw i32 %197, 64
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds float, float* %3, i64 %238
  %240 = bitcast float* %239 to <8 x float>*
  %241 = load <8 x float>, <8 x float>* %240, align 1, !tbaa !12
  %242 = add nsw i32 %197, 72
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds float, float* %3, i64 %243
  %245 = bitcast float* %244 to <8 x float>*
  %246 = load <8 x float>, <8 x float>* %245, align 1, !tbaa !12
  %247 = add nsw i32 %197, 80
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds float, float* %3, i64 %248
  %250 = bitcast float* %249 to <8 x float>*
  %251 = load <8 x float>, <8 x float>* %250, align 1, !tbaa !12
  %252 = add nsw i32 %197, 88
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds float, float* %3, i64 %253
  %255 = bitcast float* %254 to <8 x float>*
  %256 = load <8 x float>, <8 x float>* %255, align 1, !tbaa !12
  %257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %201, <8 x float> %25, <8 x float> %151) #10
  %258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %206, <8 x float> %25, <8 x float> %155) #10
  %259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %211, <8 x float> %25, <8 x float> %159) #10
  %260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %216, <8 x float> %25, <8 x float> %163) #10
  %261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %221, <8 x float> %25, <8 x float> %167) #10
  %262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %226, <8 x float> %25, <8 x float> %171) #10
  %263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %231, <8 x float> %25, <8 x float> %175) #10
  %264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %236, <8 x float> %25, <8 x float> %179) #10
  %265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %241, <8 x float> %25, <8 x float> %183) #10
  %266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %246, <8 x float> %25, <8 x float> %187) #10
  %267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %251, <8 x float> %25, <8 x float> %191) #10
  %268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %256, <8 x float> %25, <8 x float> %195) #10
  store <8 x float> %257, <8 x float>* %150, align 1, !tbaa !12
  store <8 x float> %258, <8 x float>* %154, align 1, !tbaa !12
  store <8 x float> %259, <8 x float>* %158, align 1, !tbaa !12
  store <8 x float> %260, <8 x float>* %162, align 1, !tbaa !12
  store <8 x float> %261, <8 x float>* %166, align 1, !tbaa !12
  store <8 x float> %262, <8 x float>* %170, align 1, !tbaa !12
  store <8 x float> %263, <8 x float>* %174, align 1, !tbaa !12
  store <8 x float> %264, <8 x float>* %178, align 1, !tbaa !12
  store <8 x float> %265, <8 x float>* %182, align 1, !tbaa !12
  store <8 x float> %266, <8 x float>* %186, align 1, !tbaa !12
  store <8 x float> %267, <8 x float>* %190, align 1, !tbaa !12
  store <8 x float> %268, <8 x float>* %194, align 1, !tbaa !12
  %269 = add nuw nsw i64 %99, 96
  %270 = icmp ult i64 %269, %89
  br i1 %270, label %98, label %92

271:                                              ; preds = %277
  br i1 %87, label %272, label %437

272:                                              ; preds = %271
  %273 = trunc i64 %31 to i32
  %274 = mul nsw i32 %86, %273
  %275 = sext i32 %274 to i64
  %276 = zext i32 %86 to i64
  br label %444

277:                                              ; preds = %93, %277
  %278 = phi i64 [ 0, %93 ], [ %435, %277 ]
  %279 = getelementptr inbounds float, float* %5, i64 %278
  %280 = getelementptr inbounds float, float* %279, i64 8
  %281 = bitcast float* %280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %281, i32 0, i32 1, i32 1)
  %282 = getelementptr inbounds float, float* %3, i64 %278
  %283 = getelementptr inbounds float, float* %282, i64 8
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %279, i64 16
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %282, i64 16
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %279, i64 24
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %282, i64 24
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %279, i64 32
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %282, i64 32
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %279, i64 40
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %282, i64 40
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = getelementptr inbounds float, float* %279, i64 48
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = getelementptr inbounds float, float* %282, i64 48
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %279, i64 56
  %306 = bitcast float* %305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %306, i32 0, i32 1, i32 1)
  %307 = getelementptr inbounds float, float* %282, i64 56
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %279, i64 64
  %310 = bitcast float* %309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %310, i32 0, i32 1, i32 1)
  %311 = getelementptr inbounds float, float* %282, i64 64
  %312 = bitcast float* %311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %312, i32 0, i32 1, i32 1)
  %313 = getelementptr inbounds float, float* %279, i64 72
  %314 = bitcast float* %313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %314, i32 0, i32 1, i32 1)
  %315 = getelementptr inbounds float, float* %282, i64 72
  %316 = bitcast float* %315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %316, i32 0, i32 1, i32 1)
  %317 = getelementptr inbounds float, float* %279, i64 80
  %318 = bitcast float* %317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %318, i32 0, i32 1, i32 1)
  %319 = getelementptr inbounds float, float* %282, i64 80
  %320 = bitcast float* %319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %320, i32 0, i32 1, i32 1)
  %321 = getelementptr inbounds float, float* %279, i64 88
  %322 = bitcast float* %321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %322, i32 0, i32 1, i32 1)
  %323 = getelementptr inbounds float, float* %282, i64 88
  %324 = bitcast float* %323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %324, i32 0, i32 1, i32 1)
  %325 = getelementptr inbounds float, float* %279, i64 96
  %326 = bitcast float* %325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %326, i32 0, i32 1, i32 1)
  %327 = getelementptr inbounds float, float* %282, i64 96
  %328 = bitcast float* %327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %328, i32 0, i32 1, i32 1)
  %329 = bitcast float* %279 to <8 x float>*
  %330 = load <8 x float>, <8 x float>* %329, align 1, !tbaa !12
  %331 = or i64 %278, 8
  %332 = getelementptr inbounds float, float* %5, i64 %331
  %333 = bitcast float* %332 to <8 x float>*
  %334 = load <8 x float>, <8 x float>* %333, align 1, !tbaa !12
  %335 = or i64 %278, 16
  %336 = getelementptr inbounds float, float* %5, i64 %335
  %337 = bitcast float* %336 to <8 x float>*
  %338 = load <8 x float>, <8 x float>* %337, align 1, !tbaa !12
  %339 = or i64 %278, 24
  %340 = getelementptr inbounds float, float* %5, i64 %339
  %341 = bitcast float* %340 to <8 x float>*
  %342 = load <8 x float>, <8 x float>* %341, align 1, !tbaa !12
  %343 = add nuw nsw i64 %278, 32
  %344 = getelementptr inbounds float, float* %5, i64 %343
  %345 = bitcast float* %344 to <8 x float>*
  %346 = load <8 x float>, <8 x float>* %345, align 1, !tbaa !12
  %347 = add nuw nsw i64 %278, 40
  %348 = getelementptr inbounds float, float* %5, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %350 = load <8 x float>, <8 x float>* %349, align 1, !tbaa !12
  %351 = add nuw nsw i64 %278, 48
  %352 = getelementptr inbounds float, float* %5, i64 %351
  %353 = bitcast float* %352 to <8 x float>*
  %354 = load <8 x float>, <8 x float>* %353, align 1, !tbaa !12
  %355 = add nuw nsw i64 %278, 56
  %356 = getelementptr inbounds float, float* %5, i64 %355
  %357 = bitcast float* %356 to <8 x float>*
  %358 = load <8 x float>, <8 x float>* %357, align 1, !tbaa !12
  %359 = add nuw nsw i64 %278, 64
  %360 = getelementptr inbounds float, float* %5, i64 %359
  %361 = bitcast float* %360 to <8 x float>*
  %362 = load <8 x float>, <8 x float>* %361, align 1, !tbaa !12
  %363 = add nuw nsw i64 %278, 72
  %364 = getelementptr inbounds float, float* %5, i64 %363
  %365 = bitcast float* %364 to <8 x float>*
  %366 = load <8 x float>, <8 x float>* %365, align 1, !tbaa !12
  %367 = add nuw nsw i64 %278, 80
  %368 = getelementptr inbounds float, float* %5, i64 %367
  %369 = bitcast float* %368 to <8 x float>*
  %370 = load <8 x float>, <8 x float>* %369, align 1, !tbaa !12
  %371 = add nuw nsw i64 %278, 88
  %372 = getelementptr inbounds float, float* %5, i64 %371
  %373 = bitcast float* %372 to <8 x float>*
  %374 = load <8 x float>, <8 x float>* %373, align 1, !tbaa !12
  %375 = add nsw i64 %278, %96
  %376 = getelementptr inbounds float, float* %3, i64 %375
  %377 = bitcast float* %376 to <8 x float>*
  %378 = load <8 x float>, <8 x float>* %377, align 1, !tbaa !12
  %379 = add nsw i64 %375, 8
  %380 = getelementptr inbounds float, float* %3, i64 %379
  %381 = bitcast float* %380 to <8 x float>*
  %382 = load <8 x float>, <8 x float>* %381, align 1, !tbaa !12
  %383 = add nsw i64 %375, 16
  %384 = getelementptr inbounds float, float* %3, i64 %383
  %385 = bitcast float* %384 to <8 x float>*
  %386 = load <8 x float>, <8 x float>* %385, align 1, !tbaa !12
  %387 = add nsw i64 %375, 24
  %388 = getelementptr inbounds float, float* %3, i64 %387
  %389 = bitcast float* %388 to <8 x float>*
  %390 = load <8 x float>, <8 x float>* %389, align 1, !tbaa !12
  %391 = add nsw i64 %375, 32
  %392 = getelementptr inbounds float, float* %3, i64 %391
  %393 = bitcast float* %392 to <8 x float>*
  %394 = load <8 x float>, <8 x float>* %393, align 1, !tbaa !12
  %395 = add nsw i64 %375, 40
  %396 = getelementptr inbounds float, float* %3, i64 %395
  %397 = bitcast float* %396 to <8 x float>*
  %398 = load <8 x float>, <8 x float>* %397, align 1, !tbaa !12
  %399 = add nsw i64 %375, 48
  %400 = getelementptr inbounds float, float* %3, i64 %399
  %401 = bitcast float* %400 to <8 x float>*
  %402 = load <8 x float>, <8 x float>* %401, align 1, !tbaa !12
  %403 = add nsw i64 %375, 56
  %404 = getelementptr inbounds float, float* %3, i64 %403
  %405 = bitcast float* %404 to <8 x float>*
  %406 = load <8 x float>, <8 x float>* %405, align 1, !tbaa !12
  %407 = add nsw i64 %375, 64
  %408 = getelementptr inbounds float, float* %3, i64 %407
  %409 = bitcast float* %408 to <8 x float>*
  %410 = load <8 x float>, <8 x float>* %409, align 1, !tbaa !12
  %411 = add nsw i64 %375, 72
  %412 = getelementptr inbounds float, float* %3, i64 %411
  %413 = bitcast float* %412 to <8 x float>*
  %414 = load <8 x float>, <8 x float>* %413, align 1, !tbaa !12
  %415 = add nsw i64 %375, 80
  %416 = getelementptr inbounds float, float* %3, i64 %415
  %417 = bitcast float* %416 to <8 x float>*
  %418 = load <8 x float>, <8 x float>* %417, align 1, !tbaa !12
  %419 = add nsw i64 %375, 88
  %420 = getelementptr inbounds float, float* %3, i64 %419
  %421 = bitcast float* %420 to <8 x float>*
  %422 = load <8 x float>, <8 x float>* %421, align 1, !tbaa !12
  %423 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %378, <8 x float> %30, <8 x float> %330) #10
  %424 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %382, <8 x float> %30, <8 x float> %334) #10
  %425 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %386, <8 x float> %30, <8 x float> %338) #10
  %426 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %390, <8 x float> %30, <8 x float> %342) #10
  %427 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %394, <8 x float> %30, <8 x float> %346) #10
  %428 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %398, <8 x float> %30, <8 x float> %350) #10
  %429 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %402, <8 x float> %30, <8 x float> %354) #10
  %430 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %406, <8 x float> %30, <8 x float> %358) #10
  %431 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %410, <8 x float> %30, <8 x float> %362) #10
  %432 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %414, <8 x float> %30, <8 x float> %366) #10
  %433 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %418, <8 x float> %30, <8 x float> %370) #10
  %434 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %422, <8 x float> %30, <8 x float> %374) #10
  store <8 x float> %423, <8 x float>* %329, align 1, !tbaa !12
  store <8 x float> %424, <8 x float>* %333, align 1, !tbaa !12
  store <8 x float> %425, <8 x float>* %337, align 1, !tbaa !12
  store <8 x float> %426, <8 x float>* %341, align 1, !tbaa !12
  store <8 x float> %427, <8 x float>* %345, align 1, !tbaa !12
  store <8 x float> %428, <8 x float>* %349, align 1, !tbaa !12
  store <8 x float> %429, <8 x float>* %353, align 1, !tbaa !12
  store <8 x float> %430, <8 x float>* %357, align 1, !tbaa !12
  store <8 x float> %431, <8 x float>* %361, align 1, !tbaa !12
  store <8 x float> %432, <8 x float>* %365, align 1, !tbaa !12
  store <8 x float> %433, <8 x float>* %369, align 1, !tbaa !12
  store <8 x float> %434, <8 x float>* %373, align 1, !tbaa !12
  %435 = add nuw nsw i64 %278, 96
  %436 = icmp ult i64 %435, %97
  br i1 %436, label %277, label %271

437:                                              ; preds = %444, %92, %271
  %438 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %439 = icmp sgt i32 %438, 0
  br i1 %439, label %440, label %2140

440:                                              ; preds = %437
  %441 = zext i32 %438 to i64
  %442 = trunc i64 %36 to i32
  %443 = mul nsw i32 %438, %442
  br label %610

444:                                              ; preds = %272, %444
  %445 = phi i64 [ 0, %272 ], [ %602, %444 ]
  %446 = getelementptr inbounds float, float* %5, i64 %445
  %447 = getelementptr inbounds float, float* %446, i64 8
  %448 = bitcast float* %447 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %448, i32 0, i32 1, i32 1)
  %449 = getelementptr inbounds float, float* %3, i64 %445
  %450 = getelementptr inbounds float, float* %449, i64 8
  %451 = bitcast float* %450 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %451, i32 0, i32 1, i32 1)
  %452 = getelementptr inbounds float, float* %446, i64 16
  %453 = bitcast float* %452 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %453, i32 0, i32 1, i32 1)
  %454 = getelementptr inbounds float, float* %449, i64 16
  %455 = bitcast float* %454 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %455, i32 0, i32 1, i32 1)
  %456 = getelementptr inbounds float, float* %446, i64 24
  %457 = bitcast float* %456 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %457, i32 0, i32 1, i32 1)
  %458 = getelementptr inbounds float, float* %449, i64 24
  %459 = bitcast float* %458 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %459, i32 0, i32 1, i32 1)
  %460 = getelementptr inbounds float, float* %446, i64 32
  %461 = bitcast float* %460 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %461, i32 0, i32 1, i32 1)
  %462 = getelementptr inbounds float, float* %449, i64 32
  %463 = bitcast float* %462 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %463, i32 0, i32 1, i32 1)
  %464 = getelementptr inbounds float, float* %446, i64 40
  %465 = bitcast float* %464 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %465, i32 0, i32 1, i32 1)
  %466 = getelementptr inbounds float, float* %449, i64 40
  %467 = bitcast float* %466 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %467, i32 0, i32 1, i32 1)
  %468 = getelementptr inbounds float, float* %446, i64 48
  %469 = bitcast float* %468 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %469, i32 0, i32 1, i32 1)
  %470 = getelementptr inbounds float, float* %449, i64 48
  %471 = bitcast float* %470 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %471, i32 0, i32 1, i32 1)
  %472 = getelementptr inbounds float, float* %446, i64 56
  %473 = bitcast float* %472 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %473, i32 0, i32 1, i32 1)
  %474 = getelementptr inbounds float, float* %449, i64 56
  %475 = bitcast float* %474 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %475, i32 0, i32 1, i32 1)
  %476 = getelementptr inbounds float, float* %446, i64 64
  %477 = bitcast float* %476 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %477, i32 0, i32 1, i32 1)
  %478 = getelementptr inbounds float, float* %449, i64 64
  %479 = bitcast float* %478 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %479, i32 0, i32 1, i32 1)
  %480 = getelementptr inbounds float, float* %446, i64 72
  %481 = bitcast float* %480 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %481, i32 0, i32 1, i32 1)
  %482 = getelementptr inbounds float, float* %449, i64 72
  %483 = bitcast float* %482 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %483, i32 0, i32 1, i32 1)
  %484 = getelementptr inbounds float, float* %446, i64 80
  %485 = bitcast float* %484 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %485, i32 0, i32 1, i32 1)
  %486 = getelementptr inbounds float, float* %449, i64 80
  %487 = bitcast float* %486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %487, i32 0, i32 1, i32 1)
  %488 = getelementptr inbounds float, float* %446, i64 88
  %489 = bitcast float* %488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %489, i32 0, i32 1, i32 1)
  %490 = getelementptr inbounds float, float* %449, i64 88
  %491 = bitcast float* %490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %491, i32 0, i32 1, i32 1)
  %492 = getelementptr inbounds float, float* %446, i64 96
  %493 = bitcast float* %492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %493, i32 0, i32 1, i32 1)
  %494 = getelementptr inbounds float, float* %449, i64 96
  %495 = bitcast float* %494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %495, i32 0, i32 1, i32 1)
  %496 = bitcast float* %446 to <8 x float>*
  %497 = load <8 x float>, <8 x float>* %496, align 1, !tbaa !12
  %498 = or i64 %445, 8
  %499 = getelementptr inbounds float, float* %5, i64 %498
  %500 = bitcast float* %499 to <8 x float>*
  %501 = load <8 x float>, <8 x float>* %500, align 1, !tbaa !12
  %502 = or i64 %445, 16
  %503 = getelementptr inbounds float, float* %5, i64 %502
  %504 = bitcast float* %503 to <8 x float>*
  %505 = load <8 x float>, <8 x float>* %504, align 1, !tbaa !12
  %506 = or i64 %445, 24
  %507 = getelementptr inbounds float, float* %5, i64 %506
  %508 = bitcast float* %507 to <8 x float>*
  %509 = load <8 x float>, <8 x float>* %508, align 1, !tbaa !12
  %510 = add nuw nsw i64 %445, 32
  %511 = getelementptr inbounds float, float* %5, i64 %510
  %512 = bitcast float* %511 to <8 x float>*
  %513 = load <8 x float>, <8 x float>* %512, align 1, !tbaa !12
  %514 = add nuw nsw i64 %445, 40
  %515 = getelementptr inbounds float, float* %5, i64 %514
  %516 = bitcast float* %515 to <8 x float>*
  %517 = load <8 x float>, <8 x float>* %516, align 1, !tbaa !12
  %518 = add nuw nsw i64 %445, 48
  %519 = getelementptr inbounds float, float* %5, i64 %518
  %520 = bitcast float* %519 to <8 x float>*
  %521 = load <8 x float>, <8 x float>* %520, align 1, !tbaa !12
  %522 = add nuw nsw i64 %445, 56
  %523 = getelementptr inbounds float, float* %5, i64 %522
  %524 = bitcast float* %523 to <8 x float>*
  %525 = load <8 x float>, <8 x float>* %524, align 1, !tbaa !12
  %526 = add nuw nsw i64 %445, 64
  %527 = getelementptr inbounds float, float* %5, i64 %526
  %528 = bitcast float* %527 to <8 x float>*
  %529 = load <8 x float>, <8 x float>* %528, align 1, !tbaa !12
  %530 = add nuw nsw i64 %445, 72
  %531 = getelementptr inbounds float, float* %5, i64 %530
  %532 = bitcast float* %531 to <8 x float>*
  %533 = load <8 x float>, <8 x float>* %532, align 1, !tbaa !12
  %534 = add nuw nsw i64 %445, 80
  %535 = getelementptr inbounds float, float* %5, i64 %534
  %536 = bitcast float* %535 to <8 x float>*
  %537 = load <8 x float>, <8 x float>* %536, align 1, !tbaa !12
  %538 = add nuw nsw i64 %445, 88
  %539 = getelementptr inbounds float, float* %5, i64 %538
  %540 = bitcast float* %539 to <8 x float>*
  %541 = load <8 x float>, <8 x float>* %540, align 1, !tbaa !12
  %542 = add nsw i64 %445, %275
  %543 = getelementptr inbounds float, float* %3, i64 %542
  %544 = bitcast float* %543 to <8 x float>*
  %545 = load <8 x float>, <8 x float>* %544, align 1, !tbaa !12
  %546 = add nsw i64 %542, 8
  %547 = getelementptr inbounds float, float* %3, i64 %546
  %548 = bitcast float* %547 to <8 x float>*
  %549 = load <8 x float>, <8 x float>* %548, align 1, !tbaa !12
  %550 = add nsw i64 %542, 16
  %551 = getelementptr inbounds float, float* %3, i64 %550
  %552 = bitcast float* %551 to <8 x float>*
  %553 = load <8 x float>, <8 x float>* %552, align 1, !tbaa !12
  %554 = add nsw i64 %542, 24
  %555 = getelementptr inbounds float, float* %3, i64 %554
  %556 = bitcast float* %555 to <8 x float>*
  %557 = load <8 x float>, <8 x float>* %556, align 1, !tbaa !12
  %558 = add nsw i64 %542, 32
  %559 = getelementptr inbounds float, float* %3, i64 %558
  %560 = bitcast float* %559 to <8 x float>*
  %561 = load <8 x float>, <8 x float>* %560, align 1, !tbaa !12
  %562 = add nsw i64 %542, 40
  %563 = getelementptr inbounds float, float* %3, i64 %562
  %564 = bitcast float* %563 to <8 x float>*
  %565 = load <8 x float>, <8 x float>* %564, align 1, !tbaa !12
  %566 = add nsw i64 %542, 48
  %567 = getelementptr inbounds float, float* %3, i64 %566
  %568 = bitcast float* %567 to <8 x float>*
  %569 = load <8 x float>, <8 x float>* %568, align 1, !tbaa !12
  %570 = add nsw i64 %542, 56
  %571 = getelementptr inbounds float, float* %3, i64 %570
  %572 = bitcast float* %571 to <8 x float>*
  %573 = load <8 x float>, <8 x float>* %572, align 1, !tbaa !12
  %574 = add nsw i64 %542, 64
  %575 = getelementptr inbounds float, float* %3, i64 %574
  %576 = bitcast float* %575 to <8 x float>*
  %577 = load <8 x float>, <8 x float>* %576, align 1, !tbaa !12
  %578 = add nsw i64 %542, 72
  %579 = getelementptr inbounds float, float* %3, i64 %578
  %580 = bitcast float* %579 to <8 x float>*
  %581 = load <8 x float>, <8 x float>* %580, align 1, !tbaa !12
  %582 = add nsw i64 %542, 80
  %583 = getelementptr inbounds float, float* %3, i64 %582
  %584 = bitcast float* %583 to <8 x float>*
  %585 = load <8 x float>, <8 x float>* %584, align 1, !tbaa !12
  %586 = add nsw i64 %542, 88
  %587 = getelementptr inbounds float, float* %3, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %589 = load <8 x float>, <8 x float>* %588, align 1, !tbaa !12
  %590 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %545, <8 x float> %35, <8 x float> %497) #10
  %591 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %549, <8 x float> %35, <8 x float> %501) #10
  %592 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %553, <8 x float> %35, <8 x float> %505) #10
  %593 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %557, <8 x float> %35, <8 x float> %509) #10
  %594 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %561, <8 x float> %35, <8 x float> %513) #10
  %595 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %565, <8 x float> %35, <8 x float> %517) #10
  %596 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %569, <8 x float> %35, <8 x float> %521) #10
  %597 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %573, <8 x float> %35, <8 x float> %525) #10
  %598 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %577, <8 x float> %35, <8 x float> %529) #10
  %599 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %581, <8 x float> %35, <8 x float> %533) #10
  %600 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %585, <8 x float> %35, <8 x float> %537) #10
  %601 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %589, <8 x float> %35, <8 x float> %541) #10
  store <8 x float> %590, <8 x float>* %496, align 1, !tbaa !12
  store <8 x float> %591, <8 x float>* %500, align 1, !tbaa !12
  store <8 x float> %592, <8 x float>* %504, align 1, !tbaa !12
  store <8 x float> %593, <8 x float>* %508, align 1, !tbaa !12
  store <8 x float> %594, <8 x float>* %512, align 1, !tbaa !12
  store <8 x float> %595, <8 x float>* %516, align 1, !tbaa !12
  store <8 x float> %596, <8 x float>* %520, align 1, !tbaa !12
  store <8 x float> %597, <8 x float>* %524, align 1, !tbaa !12
  store <8 x float> %598, <8 x float>* %528, align 1, !tbaa !12
  store <8 x float> %599, <8 x float>* %532, align 1, !tbaa !12
  store <8 x float> %600, <8 x float>* %536, align 1, !tbaa !12
  store <8 x float> %601, <8 x float>* %540, align 1, !tbaa !12
  %602 = add nuw nsw i64 %445, 96
  %603 = icmp ult i64 %602, %276
  br i1 %603, label %444, label %437

604:                                              ; preds = %610
  br i1 %439, label %605, label %949

605:                                              ; preds = %604
  %606 = trunc i64 %41 to i32
  %607 = mul nsw i32 %438, %606
  %608 = sext i32 %607 to i64
  %609 = zext i32 %438 to i64
  br label %789

610:                                              ; preds = %440, %610
  %611 = phi i64 [ 0, %440 ], [ %781, %610 ]
  %612 = getelementptr inbounds float, float* %5, i64 %611
  %613 = getelementptr inbounds float, float* %612, i64 8
  %614 = bitcast float* %613 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %614, i32 0, i32 1, i32 1)
  %615 = getelementptr inbounds float, float* %3, i64 %611
  %616 = getelementptr inbounds float, float* %615, i64 8
  %617 = bitcast float* %616 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %617, i32 0, i32 1, i32 1)
  %618 = getelementptr inbounds float, float* %612, i64 16
  %619 = bitcast float* %618 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %619, i32 0, i32 1, i32 1)
  %620 = getelementptr inbounds float, float* %615, i64 16
  %621 = bitcast float* %620 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %621, i32 0, i32 1, i32 1)
  %622 = getelementptr inbounds float, float* %612, i64 24
  %623 = bitcast float* %622 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %623, i32 0, i32 1, i32 1)
  %624 = getelementptr inbounds float, float* %615, i64 24
  %625 = bitcast float* %624 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %625, i32 0, i32 1, i32 1)
  %626 = getelementptr inbounds float, float* %612, i64 32
  %627 = bitcast float* %626 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %627, i32 0, i32 1, i32 1)
  %628 = getelementptr inbounds float, float* %615, i64 32
  %629 = bitcast float* %628 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %629, i32 0, i32 1, i32 1)
  %630 = getelementptr inbounds float, float* %612, i64 40
  %631 = bitcast float* %630 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %631, i32 0, i32 1, i32 1)
  %632 = getelementptr inbounds float, float* %615, i64 40
  %633 = bitcast float* %632 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %633, i32 0, i32 1, i32 1)
  %634 = getelementptr inbounds float, float* %612, i64 48
  %635 = bitcast float* %634 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %635, i32 0, i32 1, i32 1)
  %636 = getelementptr inbounds float, float* %615, i64 48
  %637 = bitcast float* %636 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %637, i32 0, i32 1, i32 1)
  %638 = getelementptr inbounds float, float* %612, i64 56
  %639 = bitcast float* %638 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %639, i32 0, i32 1, i32 1)
  %640 = getelementptr inbounds float, float* %615, i64 56
  %641 = bitcast float* %640 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %641, i32 0, i32 1, i32 1)
  %642 = getelementptr inbounds float, float* %612, i64 64
  %643 = bitcast float* %642 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %643, i32 0, i32 1, i32 1)
  %644 = getelementptr inbounds float, float* %615, i64 64
  %645 = bitcast float* %644 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %645, i32 0, i32 1, i32 1)
  %646 = getelementptr inbounds float, float* %612, i64 72
  %647 = bitcast float* %646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %647, i32 0, i32 1, i32 1)
  %648 = getelementptr inbounds float, float* %615, i64 72
  %649 = bitcast float* %648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %649, i32 0, i32 1, i32 1)
  %650 = getelementptr inbounds float, float* %612, i64 80
  %651 = bitcast float* %650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %651, i32 0, i32 1, i32 1)
  %652 = getelementptr inbounds float, float* %615, i64 80
  %653 = bitcast float* %652 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %653, i32 0, i32 1, i32 1)
  %654 = getelementptr inbounds float, float* %612, i64 88
  %655 = bitcast float* %654 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %655, i32 0, i32 1, i32 1)
  %656 = getelementptr inbounds float, float* %615, i64 88
  %657 = bitcast float* %656 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %657, i32 0, i32 1, i32 1)
  %658 = getelementptr inbounds float, float* %612, i64 96
  %659 = bitcast float* %658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %659, i32 0, i32 1, i32 1)
  %660 = getelementptr inbounds float, float* %615, i64 96
  %661 = bitcast float* %660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %661, i32 0, i32 1, i32 1)
  %662 = bitcast float* %612 to <8 x float>*
  %663 = load <8 x float>, <8 x float>* %662, align 1, !tbaa !12
  %664 = or i64 %611, 8
  %665 = getelementptr inbounds float, float* %5, i64 %664
  %666 = bitcast float* %665 to <8 x float>*
  %667 = load <8 x float>, <8 x float>* %666, align 1, !tbaa !12
  %668 = or i64 %611, 16
  %669 = getelementptr inbounds float, float* %5, i64 %668
  %670 = bitcast float* %669 to <8 x float>*
  %671 = load <8 x float>, <8 x float>* %670, align 1, !tbaa !12
  %672 = or i64 %611, 24
  %673 = getelementptr inbounds float, float* %5, i64 %672
  %674 = bitcast float* %673 to <8 x float>*
  %675 = load <8 x float>, <8 x float>* %674, align 1, !tbaa !12
  %676 = add nuw nsw i64 %611, 32
  %677 = getelementptr inbounds float, float* %5, i64 %676
  %678 = bitcast float* %677 to <8 x float>*
  %679 = load <8 x float>, <8 x float>* %678, align 1, !tbaa !12
  %680 = add nuw nsw i64 %611, 40
  %681 = getelementptr inbounds float, float* %5, i64 %680
  %682 = bitcast float* %681 to <8 x float>*
  %683 = load <8 x float>, <8 x float>* %682, align 1, !tbaa !12
  %684 = add nuw nsw i64 %611, 48
  %685 = getelementptr inbounds float, float* %5, i64 %684
  %686 = bitcast float* %685 to <8 x float>*
  %687 = load <8 x float>, <8 x float>* %686, align 1, !tbaa !12
  %688 = add nuw nsw i64 %611, 56
  %689 = getelementptr inbounds float, float* %5, i64 %688
  %690 = bitcast float* %689 to <8 x float>*
  %691 = load <8 x float>, <8 x float>* %690, align 1, !tbaa !12
  %692 = add nuw nsw i64 %611, 64
  %693 = getelementptr inbounds float, float* %5, i64 %692
  %694 = bitcast float* %693 to <8 x float>*
  %695 = load <8 x float>, <8 x float>* %694, align 1, !tbaa !12
  %696 = add nuw nsw i64 %611, 72
  %697 = getelementptr inbounds float, float* %5, i64 %696
  %698 = bitcast float* %697 to <8 x float>*
  %699 = load <8 x float>, <8 x float>* %698, align 1, !tbaa !12
  %700 = add nuw nsw i64 %611, 80
  %701 = getelementptr inbounds float, float* %5, i64 %700
  %702 = bitcast float* %701 to <8 x float>*
  %703 = load <8 x float>, <8 x float>* %702, align 1, !tbaa !12
  %704 = add nuw nsw i64 %611, 88
  %705 = getelementptr inbounds float, float* %5, i64 %704
  %706 = bitcast float* %705 to <8 x float>*
  %707 = load <8 x float>, <8 x float>* %706, align 1, !tbaa !12
  %708 = trunc i64 %611 to i32
  %709 = add nsw i32 %443, %708
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds float, float* %3, i64 %710
  %712 = bitcast float* %711 to <8 x float>*
  %713 = load <8 x float>, <8 x float>* %712, align 1, !tbaa !12
  %714 = add nsw i32 %709, 8
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds float, float* %3, i64 %715
  %717 = bitcast float* %716 to <8 x float>*
  %718 = load <8 x float>, <8 x float>* %717, align 1, !tbaa !12
  %719 = add nsw i32 %709, 16
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds float, float* %3, i64 %720
  %722 = bitcast float* %721 to <8 x float>*
  %723 = load <8 x float>, <8 x float>* %722, align 1, !tbaa !12
  %724 = add nsw i32 %709, 24
  %725 = sext i32 %724 to i64
  %726 = getelementptr inbounds float, float* %3, i64 %725
  %727 = bitcast float* %726 to <8 x float>*
  %728 = load <8 x float>, <8 x float>* %727, align 1, !tbaa !12
  %729 = add nsw i32 %709, 32
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds float, float* %3, i64 %730
  %732 = bitcast float* %731 to <8 x float>*
  %733 = load <8 x float>, <8 x float>* %732, align 1, !tbaa !12
  %734 = add nsw i32 %709, 40
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds float, float* %3, i64 %735
  %737 = bitcast float* %736 to <8 x float>*
  %738 = load <8 x float>, <8 x float>* %737, align 1, !tbaa !12
  %739 = add nsw i32 %709, 48
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds float, float* %3, i64 %740
  %742 = bitcast float* %741 to <8 x float>*
  %743 = load <8 x float>, <8 x float>* %742, align 1, !tbaa !12
  %744 = add nsw i32 %709, 56
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds float, float* %3, i64 %745
  %747 = bitcast float* %746 to <8 x float>*
  %748 = load <8 x float>, <8 x float>* %747, align 1, !tbaa !12
  %749 = add nsw i32 %709, 64
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds float, float* %3, i64 %750
  %752 = bitcast float* %751 to <8 x float>*
  %753 = load <8 x float>, <8 x float>* %752, align 1, !tbaa !12
  %754 = add nsw i32 %709, 72
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds float, float* %3, i64 %755
  %757 = bitcast float* %756 to <8 x float>*
  %758 = load <8 x float>, <8 x float>* %757, align 1, !tbaa !12
  %759 = add nsw i32 %709, 80
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds float, float* %3, i64 %760
  %762 = bitcast float* %761 to <8 x float>*
  %763 = load <8 x float>, <8 x float>* %762, align 1, !tbaa !12
  %764 = add nsw i32 %709, 88
  %765 = sext i32 %764 to i64
  %766 = getelementptr inbounds float, float* %3, i64 %765
  %767 = bitcast float* %766 to <8 x float>*
  %768 = load <8 x float>, <8 x float>* %767, align 1, !tbaa !12
  %769 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %713, <8 x float> %40, <8 x float> %663) #10
  %770 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %718, <8 x float> %40, <8 x float> %667) #10
  %771 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %723, <8 x float> %40, <8 x float> %671) #10
  %772 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %728, <8 x float> %40, <8 x float> %675) #10
  %773 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %733, <8 x float> %40, <8 x float> %679) #10
  %774 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %738, <8 x float> %40, <8 x float> %683) #10
  %775 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %743, <8 x float> %40, <8 x float> %687) #10
  %776 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %748, <8 x float> %40, <8 x float> %691) #10
  %777 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %753, <8 x float> %40, <8 x float> %695) #10
  %778 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %758, <8 x float> %40, <8 x float> %699) #10
  %779 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %763, <8 x float> %40, <8 x float> %703) #10
  %780 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %768, <8 x float> %40, <8 x float> %707) #10
  store <8 x float> %769, <8 x float>* %662, align 1, !tbaa !12
  store <8 x float> %770, <8 x float>* %666, align 1, !tbaa !12
  store <8 x float> %771, <8 x float>* %670, align 1, !tbaa !12
  store <8 x float> %772, <8 x float>* %674, align 1, !tbaa !12
  store <8 x float> %773, <8 x float>* %678, align 1, !tbaa !12
  store <8 x float> %774, <8 x float>* %682, align 1, !tbaa !12
  store <8 x float> %775, <8 x float>* %686, align 1, !tbaa !12
  store <8 x float> %776, <8 x float>* %690, align 1, !tbaa !12
  store <8 x float> %777, <8 x float>* %694, align 1, !tbaa !12
  store <8 x float> %778, <8 x float>* %698, align 1, !tbaa !12
  store <8 x float> %779, <8 x float>* %702, align 1, !tbaa !12
  store <8 x float> %780, <8 x float>* %706, align 1, !tbaa !12
  %781 = add nuw nsw i64 %611, 96
  %782 = icmp ult i64 %781, %441
  br i1 %782, label %610, label %604

783:                                              ; preds = %789
  br i1 %439, label %784, label %949

784:                                              ; preds = %783
  %785 = trunc i64 %46 to i32
  %786 = mul nsw i32 %438, %785
  %787 = sext i32 %786 to i64
  %788 = zext i32 %438 to i64
  br label %956

789:                                              ; preds = %605, %789
  %790 = phi i64 [ 0, %605 ], [ %947, %789 ]
  %791 = getelementptr inbounds float, float* %5, i64 %790
  %792 = getelementptr inbounds float, float* %791, i64 8
  %793 = bitcast float* %792 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %793, i32 0, i32 1, i32 1)
  %794 = getelementptr inbounds float, float* %3, i64 %790
  %795 = getelementptr inbounds float, float* %794, i64 8
  %796 = bitcast float* %795 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %796, i32 0, i32 1, i32 1)
  %797 = getelementptr inbounds float, float* %791, i64 16
  %798 = bitcast float* %797 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %798, i32 0, i32 1, i32 1)
  %799 = getelementptr inbounds float, float* %794, i64 16
  %800 = bitcast float* %799 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %800, i32 0, i32 1, i32 1)
  %801 = getelementptr inbounds float, float* %791, i64 24
  %802 = bitcast float* %801 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %802, i32 0, i32 1, i32 1)
  %803 = getelementptr inbounds float, float* %794, i64 24
  %804 = bitcast float* %803 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %804, i32 0, i32 1, i32 1)
  %805 = getelementptr inbounds float, float* %791, i64 32
  %806 = bitcast float* %805 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %806, i32 0, i32 1, i32 1)
  %807 = getelementptr inbounds float, float* %794, i64 32
  %808 = bitcast float* %807 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %808, i32 0, i32 1, i32 1)
  %809 = getelementptr inbounds float, float* %791, i64 40
  %810 = bitcast float* %809 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %810, i32 0, i32 1, i32 1)
  %811 = getelementptr inbounds float, float* %794, i64 40
  %812 = bitcast float* %811 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %812, i32 0, i32 1, i32 1)
  %813 = getelementptr inbounds float, float* %791, i64 48
  %814 = bitcast float* %813 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %814, i32 0, i32 1, i32 1)
  %815 = getelementptr inbounds float, float* %794, i64 48
  %816 = bitcast float* %815 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %816, i32 0, i32 1, i32 1)
  %817 = getelementptr inbounds float, float* %791, i64 56
  %818 = bitcast float* %817 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %818, i32 0, i32 1, i32 1)
  %819 = getelementptr inbounds float, float* %794, i64 56
  %820 = bitcast float* %819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %820, i32 0, i32 1, i32 1)
  %821 = getelementptr inbounds float, float* %791, i64 64
  %822 = bitcast float* %821 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %822, i32 0, i32 1, i32 1)
  %823 = getelementptr inbounds float, float* %794, i64 64
  %824 = bitcast float* %823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %824, i32 0, i32 1, i32 1)
  %825 = getelementptr inbounds float, float* %791, i64 72
  %826 = bitcast float* %825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %826, i32 0, i32 1, i32 1)
  %827 = getelementptr inbounds float, float* %794, i64 72
  %828 = bitcast float* %827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %828, i32 0, i32 1, i32 1)
  %829 = getelementptr inbounds float, float* %791, i64 80
  %830 = bitcast float* %829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %830, i32 0, i32 1, i32 1)
  %831 = getelementptr inbounds float, float* %794, i64 80
  %832 = bitcast float* %831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %832, i32 0, i32 1, i32 1)
  %833 = getelementptr inbounds float, float* %791, i64 88
  %834 = bitcast float* %833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %834, i32 0, i32 1, i32 1)
  %835 = getelementptr inbounds float, float* %794, i64 88
  %836 = bitcast float* %835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %836, i32 0, i32 1, i32 1)
  %837 = getelementptr inbounds float, float* %791, i64 96
  %838 = bitcast float* %837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %838, i32 0, i32 1, i32 1)
  %839 = getelementptr inbounds float, float* %794, i64 96
  %840 = bitcast float* %839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %840, i32 0, i32 1, i32 1)
  %841 = bitcast float* %791 to <8 x float>*
  %842 = load <8 x float>, <8 x float>* %841, align 1, !tbaa !12
  %843 = or i64 %790, 8
  %844 = getelementptr inbounds float, float* %5, i64 %843
  %845 = bitcast float* %844 to <8 x float>*
  %846 = load <8 x float>, <8 x float>* %845, align 1, !tbaa !12
  %847 = or i64 %790, 16
  %848 = getelementptr inbounds float, float* %5, i64 %847
  %849 = bitcast float* %848 to <8 x float>*
  %850 = load <8 x float>, <8 x float>* %849, align 1, !tbaa !12
  %851 = or i64 %790, 24
  %852 = getelementptr inbounds float, float* %5, i64 %851
  %853 = bitcast float* %852 to <8 x float>*
  %854 = load <8 x float>, <8 x float>* %853, align 1, !tbaa !12
  %855 = add nuw nsw i64 %790, 32
  %856 = getelementptr inbounds float, float* %5, i64 %855
  %857 = bitcast float* %856 to <8 x float>*
  %858 = load <8 x float>, <8 x float>* %857, align 1, !tbaa !12
  %859 = add nuw nsw i64 %790, 40
  %860 = getelementptr inbounds float, float* %5, i64 %859
  %861 = bitcast float* %860 to <8 x float>*
  %862 = load <8 x float>, <8 x float>* %861, align 1, !tbaa !12
  %863 = add nuw nsw i64 %790, 48
  %864 = getelementptr inbounds float, float* %5, i64 %863
  %865 = bitcast float* %864 to <8 x float>*
  %866 = load <8 x float>, <8 x float>* %865, align 1, !tbaa !12
  %867 = add nuw nsw i64 %790, 56
  %868 = getelementptr inbounds float, float* %5, i64 %867
  %869 = bitcast float* %868 to <8 x float>*
  %870 = load <8 x float>, <8 x float>* %869, align 1, !tbaa !12
  %871 = add nuw nsw i64 %790, 64
  %872 = getelementptr inbounds float, float* %5, i64 %871
  %873 = bitcast float* %872 to <8 x float>*
  %874 = load <8 x float>, <8 x float>* %873, align 1, !tbaa !12
  %875 = add nuw nsw i64 %790, 72
  %876 = getelementptr inbounds float, float* %5, i64 %875
  %877 = bitcast float* %876 to <8 x float>*
  %878 = load <8 x float>, <8 x float>* %877, align 1, !tbaa !12
  %879 = add nuw nsw i64 %790, 80
  %880 = getelementptr inbounds float, float* %5, i64 %879
  %881 = bitcast float* %880 to <8 x float>*
  %882 = load <8 x float>, <8 x float>* %881, align 1, !tbaa !12
  %883 = add nuw nsw i64 %790, 88
  %884 = getelementptr inbounds float, float* %5, i64 %883
  %885 = bitcast float* %884 to <8 x float>*
  %886 = load <8 x float>, <8 x float>* %885, align 1, !tbaa !12
  %887 = add nsw i64 %790, %608
  %888 = getelementptr inbounds float, float* %3, i64 %887
  %889 = bitcast float* %888 to <8 x float>*
  %890 = load <8 x float>, <8 x float>* %889, align 1, !tbaa !12
  %891 = add nsw i64 %887, 8
  %892 = getelementptr inbounds float, float* %3, i64 %891
  %893 = bitcast float* %892 to <8 x float>*
  %894 = load <8 x float>, <8 x float>* %893, align 1, !tbaa !12
  %895 = add nsw i64 %887, 16
  %896 = getelementptr inbounds float, float* %3, i64 %895
  %897 = bitcast float* %896 to <8 x float>*
  %898 = load <8 x float>, <8 x float>* %897, align 1, !tbaa !12
  %899 = add nsw i64 %887, 24
  %900 = getelementptr inbounds float, float* %3, i64 %899
  %901 = bitcast float* %900 to <8 x float>*
  %902 = load <8 x float>, <8 x float>* %901, align 1, !tbaa !12
  %903 = add nsw i64 %887, 32
  %904 = getelementptr inbounds float, float* %3, i64 %903
  %905 = bitcast float* %904 to <8 x float>*
  %906 = load <8 x float>, <8 x float>* %905, align 1, !tbaa !12
  %907 = add nsw i64 %887, 40
  %908 = getelementptr inbounds float, float* %3, i64 %907
  %909 = bitcast float* %908 to <8 x float>*
  %910 = load <8 x float>, <8 x float>* %909, align 1, !tbaa !12
  %911 = add nsw i64 %887, 48
  %912 = getelementptr inbounds float, float* %3, i64 %911
  %913 = bitcast float* %912 to <8 x float>*
  %914 = load <8 x float>, <8 x float>* %913, align 1, !tbaa !12
  %915 = add nsw i64 %887, 56
  %916 = getelementptr inbounds float, float* %3, i64 %915
  %917 = bitcast float* %916 to <8 x float>*
  %918 = load <8 x float>, <8 x float>* %917, align 1, !tbaa !12
  %919 = add nsw i64 %887, 64
  %920 = getelementptr inbounds float, float* %3, i64 %919
  %921 = bitcast float* %920 to <8 x float>*
  %922 = load <8 x float>, <8 x float>* %921, align 1, !tbaa !12
  %923 = add nsw i64 %887, 72
  %924 = getelementptr inbounds float, float* %3, i64 %923
  %925 = bitcast float* %924 to <8 x float>*
  %926 = load <8 x float>, <8 x float>* %925, align 1, !tbaa !12
  %927 = add nsw i64 %887, 80
  %928 = getelementptr inbounds float, float* %3, i64 %927
  %929 = bitcast float* %928 to <8 x float>*
  %930 = load <8 x float>, <8 x float>* %929, align 1, !tbaa !12
  %931 = add nsw i64 %887, 88
  %932 = getelementptr inbounds float, float* %3, i64 %931
  %933 = bitcast float* %932 to <8 x float>*
  %934 = load <8 x float>, <8 x float>* %933, align 1, !tbaa !12
  %935 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %890, <8 x float> %45, <8 x float> %842) #10
  %936 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %894, <8 x float> %45, <8 x float> %846) #10
  %937 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %898, <8 x float> %45, <8 x float> %850) #10
  %938 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %902, <8 x float> %45, <8 x float> %854) #10
  %939 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %906, <8 x float> %45, <8 x float> %858) #10
  %940 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %910, <8 x float> %45, <8 x float> %862) #10
  %941 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %914, <8 x float> %45, <8 x float> %866) #10
  %942 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %918, <8 x float> %45, <8 x float> %870) #10
  %943 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %922, <8 x float> %45, <8 x float> %874) #10
  %944 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %926, <8 x float> %45, <8 x float> %878) #10
  %945 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %930, <8 x float> %45, <8 x float> %882) #10
  %946 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %934, <8 x float> %45, <8 x float> %886) #10
  store <8 x float> %935, <8 x float>* %841, align 1, !tbaa !12
  store <8 x float> %936, <8 x float>* %845, align 1, !tbaa !12
  store <8 x float> %937, <8 x float>* %849, align 1, !tbaa !12
  store <8 x float> %938, <8 x float>* %853, align 1, !tbaa !12
  store <8 x float> %939, <8 x float>* %857, align 1, !tbaa !12
  store <8 x float> %940, <8 x float>* %861, align 1, !tbaa !12
  store <8 x float> %941, <8 x float>* %865, align 1, !tbaa !12
  store <8 x float> %942, <8 x float>* %869, align 1, !tbaa !12
  store <8 x float> %943, <8 x float>* %873, align 1, !tbaa !12
  store <8 x float> %944, <8 x float>* %877, align 1, !tbaa !12
  store <8 x float> %945, <8 x float>* %881, align 1, !tbaa !12
  store <8 x float> %946, <8 x float>* %885, align 1, !tbaa !12
  %947 = add nuw nsw i64 %790, 96
  %948 = icmp ult i64 %947, %609
  br i1 %948, label %789, label %783

949:                                              ; preds = %956, %604, %783
  %950 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %951 = icmp sgt i32 %950, 0
  br i1 %951, label %952, label %2140

952:                                              ; preds = %949
  %953 = zext i32 %950 to i64
  %954 = trunc i64 %51 to i32
  %955 = mul nsw i32 %950, %954
  br label %1122

956:                                              ; preds = %784, %956
  %957 = phi i64 [ 0, %784 ], [ %1114, %956 ]
  %958 = getelementptr inbounds float, float* %5, i64 %957
  %959 = getelementptr inbounds float, float* %958, i64 8
  %960 = bitcast float* %959 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %960, i32 0, i32 1, i32 1)
  %961 = getelementptr inbounds float, float* %3, i64 %957
  %962 = getelementptr inbounds float, float* %961, i64 8
  %963 = bitcast float* %962 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %963, i32 0, i32 1, i32 1)
  %964 = getelementptr inbounds float, float* %958, i64 16
  %965 = bitcast float* %964 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %965, i32 0, i32 1, i32 1)
  %966 = getelementptr inbounds float, float* %961, i64 16
  %967 = bitcast float* %966 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %967, i32 0, i32 1, i32 1)
  %968 = getelementptr inbounds float, float* %958, i64 24
  %969 = bitcast float* %968 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %969, i32 0, i32 1, i32 1)
  %970 = getelementptr inbounds float, float* %961, i64 24
  %971 = bitcast float* %970 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %971, i32 0, i32 1, i32 1)
  %972 = getelementptr inbounds float, float* %958, i64 32
  %973 = bitcast float* %972 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %973, i32 0, i32 1, i32 1)
  %974 = getelementptr inbounds float, float* %961, i64 32
  %975 = bitcast float* %974 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %975, i32 0, i32 1, i32 1)
  %976 = getelementptr inbounds float, float* %958, i64 40
  %977 = bitcast float* %976 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %977, i32 0, i32 1, i32 1)
  %978 = getelementptr inbounds float, float* %961, i64 40
  %979 = bitcast float* %978 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %979, i32 0, i32 1, i32 1)
  %980 = getelementptr inbounds float, float* %958, i64 48
  %981 = bitcast float* %980 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %981, i32 0, i32 1, i32 1)
  %982 = getelementptr inbounds float, float* %961, i64 48
  %983 = bitcast float* %982 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %983, i32 0, i32 1, i32 1)
  %984 = getelementptr inbounds float, float* %958, i64 56
  %985 = bitcast float* %984 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %985, i32 0, i32 1, i32 1)
  %986 = getelementptr inbounds float, float* %961, i64 56
  %987 = bitcast float* %986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %987, i32 0, i32 1, i32 1)
  %988 = getelementptr inbounds float, float* %958, i64 64
  %989 = bitcast float* %988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %989, i32 0, i32 1, i32 1)
  %990 = getelementptr inbounds float, float* %961, i64 64
  %991 = bitcast float* %990 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %991, i32 0, i32 1, i32 1)
  %992 = getelementptr inbounds float, float* %958, i64 72
  %993 = bitcast float* %992 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %993, i32 0, i32 1, i32 1)
  %994 = getelementptr inbounds float, float* %961, i64 72
  %995 = bitcast float* %994 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %995, i32 0, i32 1, i32 1)
  %996 = getelementptr inbounds float, float* %958, i64 80
  %997 = bitcast float* %996 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %997, i32 0, i32 1, i32 1)
  %998 = getelementptr inbounds float, float* %961, i64 80
  %999 = bitcast float* %998 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %999, i32 0, i32 1, i32 1)
  %1000 = getelementptr inbounds float, float* %958, i64 88
  %1001 = bitcast float* %1000 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1001, i32 0, i32 1, i32 1)
  %1002 = getelementptr inbounds float, float* %961, i64 88
  %1003 = bitcast float* %1002 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1003, i32 0, i32 1, i32 1)
  %1004 = getelementptr inbounds float, float* %958, i64 96
  %1005 = bitcast float* %1004 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1005, i32 0, i32 1, i32 1)
  %1006 = getelementptr inbounds float, float* %961, i64 96
  %1007 = bitcast float* %1006 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1007, i32 0, i32 1, i32 1)
  %1008 = bitcast float* %958 to <8 x float>*
  %1009 = load <8 x float>, <8 x float>* %1008, align 1, !tbaa !12
  %1010 = or i64 %957, 8
  %1011 = getelementptr inbounds float, float* %5, i64 %1010
  %1012 = bitcast float* %1011 to <8 x float>*
  %1013 = load <8 x float>, <8 x float>* %1012, align 1, !tbaa !12
  %1014 = or i64 %957, 16
  %1015 = getelementptr inbounds float, float* %5, i64 %1014
  %1016 = bitcast float* %1015 to <8 x float>*
  %1017 = load <8 x float>, <8 x float>* %1016, align 1, !tbaa !12
  %1018 = or i64 %957, 24
  %1019 = getelementptr inbounds float, float* %5, i64 %1018
  %1020 = bitcast float* %1019 to <8 x float>*
  %1021 = load <8 x float>, <8 x float>* %1020, align 1, !tbaa !12
  %1022 = add nuw nsw i64 %957, 32
  %1023 = getelementptr inbounds float, float* %5, i64 %1022
  %1024 = bitcast float* %1023 to <8 x float>*
  %1025 = load <8 x float>, <8 x float>* %1024, align 1, !tbaa !12
  %1026 = add nuw nsw i64 %957, 40
  %1027 = getelementptr inbounds float, float* %5, i64 %1026
  %1028 = bitcast float* %1027 to <8 x float>*
  %1029 = load <8 x float>, <8 x float>* %1028, align 1, !tbaa !12
  %1030 = add nuw nsw i64 %957, 48
  %1031 = getelementptr inbounds float, float* %5, i64 %1030
  %1032 = bitcast float* %1031 to <8 x float>*
  %1033 = load <8 x float>, <8 x float>* %1032, align 1, !tbaa !12
  %1034 = add nuw nsw i64 %957, 56
  %1035 = getelementptr inbounds float, float* %5, i64 %1034
  %1036 = bitcast float* %1035 to <8 x float>*
  %1037 = load <8 x float>, <8 x float>* %1036, align 1, !tbaa !12
  %1038 = add nuw nsw i64 %957, 64
  %1039 = getelementptr inbounds float, float* %5, i64 %1038
  %1040 = bitcast float* %1039 to <8 x float>*
  %1041 = load <8 x float>, <8 x float>* %1040, align 1, !tbaa !12
  %1042 = add nuw nsw i64 %957, 72
  %1043 = getelementptr inbounds float, float* %5, i64 %1042
  %1044 = bitcast float* %1043 to <8 x float>*
  %1045 = load <8 x float>, <8 x float>* %1044, align 1, !tbaa !12
  %1046 = add nuw nsw i64 %957, 80
  %1047 = getelementptr inbounds float, float* %5, i64 %1046
  %1048 = bitcast float* %1047 to <8 x float>*
  %1049 = load <8 x float>, <8 x float>* %1048, align 1, !tbaa !12
  %1050 = add nuw nsw i64 %957, 88
  %1051 = getelementptr inbounds float, float* %5, i64 %1050
  %1052 = bitcast float* %1051 to <8 x float>*
  %1053 = load <8 x float>, <8 x float>* %1052, align 1, !tbaa !12
  %1054 = add nsw i64 %957, %787
  %1055 = getelementptr inbounds float, float* %3, i64 %1054
  %1056 = bitcast float* %1055 to <8 x float>*
  %1057 = load <8 x float>, <8 x float>* %1056, align 1, !tbaa !12
  %1058 = add nsw i64 %1054, 8
  %1059 = getelementptr inbounds float, float* %3, i64 %1058
  %1060 = bitcast float* %1059 to <8 x float>*
  %1061 = load <8 x float>, <8 x float>* %1060, align 1, !tbaa !12
  %1062 = add nsw i64 %1054, 16
  %1063 = getelementptr inbounds float, float* %3, i64 %1062
  %1064 = bitcast float* %1063 to <8 x float>*
  %1065 = load <8 x float>, <8 x float>* %1064, align 1, !tbaa !12
  %1066 = add nsw i64 %1054, 24
  %1067 = getelementptr inbounds float, float* %3, i64 %1066
  %1068 = bitcast float* %1067 to <8 x float>*
  %1069 = load <8 x float>, <8 x float>* %1068, align 1, !tbaa !12
  %1070 = add nsw i64 %1054, 32
  %1071 = getelementptr inbounds float, float* %3, i64 %1070
  %1072 = bitcast float* %1071 to <8 x float>*
  %1073 = load <8 x float>, <8 x float>* %1072, align 1, !tbaa !12
  %1074 = add nsw i64 %1054, 40
  %1075 = getelementptr inbounds float, float* %3, i64 %1074
  %1076 = bitcast float* %1075 to <8 x float>*
  %1077 = load <8 x float>, <8 x float>* %1076, align 1, !tbaa !12
  %1078 = add nsw i64 %1054, 48
  %1079 = getelementptr inbounds float, float* %3, i64 %1078
  %1080 = bitcast float* %1079 to <8 x float>*
  %1081 = load <8 x float>, <8 x float>* %1080, align 1, !tbaa !12
  %1082 = add nsw i64 %1054, 56
  %1083 = getelementptr inbounds float, float* %3, i64 %1082
  %1084 = bitcast float* %1083 to <8 x float>*
  %1085 = load <8 x float>, <8 x float>* %1084, align 1, !tbaa !12
  %1086 = add nsw i64 %1054, 64
  %1087 = getelementptr inbounds float, float* %3, i64 %1086
  %1088 = bitcast float* %1087 to <8 x float>*
  %1089 = load <8 x float>, <8 x float>* %1088, align 1, !tbaa !12
  %1090 = add nsw i64 %1054, 72
  %1091 = getelementptr inbounds float, float* %3, i64 %1090
  %1092 = bitcast float* %1091 to <8 x float>*
  %1093 = load <8 x float>, <8 x float>* %1092, align 1, !tbaa !12
  %1094 = add nsw i64 %1054, 80
  %1095 = getelementptr inbounds float, float* %3, i64 %1094
  %1096 = bitcast float* %1095 to <8 x float>*
  %1097 = load <8 x float>, <8 x float>* %1096, align 1, !tbaa !12
  %1098 = add nsw i64 %1054, 88
  %1099 = getelementptr inbounds float, float* %3, i64 %1098
  %1100 = bitcast float* %1099 to <8 x float>*
  %1101 = load <8 x float>, <8 x float>* %1100, align 1, !tbaa !12
  %1102 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1057, <8 x float> %50, <8 x float> %1009) #10
  %1103 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1061, <8 x float> %50, <8 x float> %1013) #10
  %1104 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1065, <8 x float> %50, <8 x float> %1017) #10
  %1105 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1069, <8 x float> %50, <8 x float> %1021) #10
  %1106 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1073, <8 x float> %50, <8 x float> %1025) #10
  %1107 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1077, <8 x float> %50, <8 x float> %1029) #10
  %1108 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1081, <8 x float> %50, <8 x float> %1033) #10
  %1109 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1085, <8 x float> %50, <8 x float> %1037) #10
  %1110 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1089, <8 x float> %50, <8 x float> %1041) #10
  %1111 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1093, <8 x float> %50, <8 x float> %1045) #10
  %1112 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1097, <8 x float> %50, <8 x float> %1049) #10
  %1113 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1101, <8 x float> %50, <8 x float> %1053) #10
  store <8 x float> %1102, <8 x float>* %1008, align 1, !tbaa !12
  store <8 x float> %1103, <8 x float>* %1012, align 1, !tbaa !12
  store <8 x float> %1104, <8 x float>* %1016, align 1, !tbaa !12
  store <8 x float> %1105, <8 x float>* %1020, align 1, !tbaa !12
  store <8 x float> %1106, <8 x float>* %1024, align 1, !tbaa !12
  store <8 x float> %1107, <8 x float>* %1028, align 1, !tbaa !12
  store <8 x float> %1108, <8 x float>* %1032, align 1, !tbaa !12
  store <8 x float> %1109, <8 x float>* %1036, align 1, !tbaa !12
  store <8 x float> %1110, <8 x float>* %1040, align 1, !tbaa !12
  store <8 x float> %1111, <8 x float>* %1044, align 1, !tbaa !12
  store <8 x float> %1112, <8 x float>* %1048, align 1, !tbaa !12
  store <8 x float> %1113, <8 x float>* %1052, align 1, !tbaa !12
  %1114 = add nuw nsw i64 %957, 96
  %1115 = icmp ult i64 %1114, %788
  br i1 %1115, label %956, label %949

1116:                                             ; preds = %1122
  br i1 %951, label %1117, label %1461

1117:                                             ; preds = %1116
  %1118 = trunc i64 %56 to i32
  %1119 = mul nsw i32 %950, %1118
  %1120 = sext i32 %1119 to i64
  %1121 = zext i32 %950 to i64
  br label %1301

1122:                                             ; preds = %952, %1122
  %1123 = phi i64 [ 0, %952 ], [ %1293, %1122 ]
  %1124 = getelementptr inbounds float, float* %5, i64 %1123
  %1125 = getelementptr inbounds float, float* %1124, i64 8
  %1126 = bitcast float* %1125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1126, i32 0, i32 1, i32 1)
  %1127 = getelementptr inbounds float, float* %3, i64 %1123
  %1128 = getelementptr inbounds float, float* %1127, i64 8
  %1129 = bitcast float* %1128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1129, i32 0, i32 1, i32 1)
  %1130 = getelementptr inbounds float, float* %1124, i64 16
  %1131 = bitcast float* %1130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1131, i32 0, i32 1, i32 1)
  %1132 = getelementptr inbounds float, float* %1127, i64 16
  %1133 = bitcast float* %1132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1133, i32 0, i32 1, i32 1)
  %1134 = getelementptr inbounds float, float* %1124, i64 24
  %1135 = bitcast float* %1134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1135, i32 0, i32 1, i32 1)
  %1136 = getelementptr inbounds float, float* %1127, i64 24
  %1137 = bitcast float* %1136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1137, i32 0, i32 1, i32 1)
  %1138 = getelementptr inbounds float, float* %1124, i64 32
  %1139 = bitcast float* %1138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1139, i32 0, i32 1, i32 1)
  %1140 = getelementptr inbounds float, float* %1127, i64 32
  %1141 = bitcast float* %1140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1141, i32 0, i32 1, i32 1)
  %1142 = getelementptr inbounds float, float* %1124, i64 40
  %1143 = bitcast float* %1142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1143, i32 0, i32 1, i32 1)
  %1144 = getelementptr inbounds float, float* %1127, i64 40
  %1145 = bitcast float* %1144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1145, i32 0, i32 1, i32 1)
  %1146 = getelementptr inbounds float, float* %1124, i64 48
  %1147 = bitcast float* %1146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1147, i32 0, i32 1, i32 1)
  %1148 = getelementptr inbounds float, float* %1127, i64 48
  %1149 = bitcast float* %1148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1149, i32 0, i32 1, i32 1)
  %1150 = getelementptr inbounds float, float* %1124, i64 56
  %1151 = bitcast float* %1150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1151, i32 0, i32 1, i32 1)
  %1152 = getelementptr inbounds float, float* %1127, i64 56
  %1153 = bitcast float* %1152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1153, i32 0, i32 1, i32 1)
  %1154 = getelementptr inbounds float, float* %1124, i64 64
  %1155 = bitcast float* %1154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1155, i32 0, i32 1, i32 1)
  %1156 = getelementptr inbounds float, float* %1127, i64 64
  %1157 = bitcast float* %1156 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1157, i32 0, i32 1, i32 1)
  %1158 = getelementptr inbounds float, float* %1124, i64 72
  %1159 = bitcast float* %1158 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1159, i32 0, i32 1, i32 1)
  %1160 = getelementptr inbounds float, float* %1127, i64 72
  %1161 = bitcast float* %1160 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1161, i32 0, i32 1, i32 1)
  %1162 = getelementptr inbounds float, float* %1124, i64 80
  %1163 = bitcast float* %1162 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1163, i32 0, i32 1, i32 1)
  %1164 = getelementptr inbounds float, float* %1127, i64 80
  %1165 = bitcast float* %1164 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1165, i32 0, i32 1, i32 1)
  %1166 = getelementptr inbounds float, float* %1124, i64 88
  %1167 = bitcast float* %1166 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1167, i32 0, i32 1, i32 1)
  %1168 = getelementptr inbounds float, float* %1127, i64 88
  %1169 = bitcast float* %1168 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1169, i32 0, i32 1, i32 1)
  %1170 = getelementptr inbounds float, float* %1124, i64 96
  %1171 = bitcast float* %1170 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1171, i32 0, i32 1, i32 1)
  %1172 = getelementptr inbounds float, float* %1127, i64 96
  %1173 = bitcast float* %1172 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1173, i32 0, i32 1, i32 1)
  %1174 = bitcast float* %1124 to <8 x float>*
  %1175 = load <8 x float>, <8 x float>* %1174, align 1, !tbaa !12
  %1176 = or i64 %1123, 8
  %1177 = getelementptr inbounds float, float* %5, i64 %1176
  %1178 = bitcast float* %1177 to <8 x float>*
  %1179 = load <8 x float>, <8 x float>* %1178, align 1, !tbaa !12
  %1180 = or i64 %1123, 16
  %1181 = getelementptr inbounds float, float* %5, i64 %1180
  %1182 = bitcast float* %1181 to <8 x float>*
  %1183 = load <8 x float>, <8 x float>* %1182, align 1, !tbaa !12
  %1184 = or i64 %1123, 24
  %1185 = getelementptr inbounds float, float* %5, i64 %1184
  %1186 = bitcast float* %1185 to <8 x float>*
  %1187 = load <8 x float>, <8 x float>* %1186, align 1, !tbaa !12
  %1188 = add nuw nsw i64 %1123, 32
  %1189 = getelementptr inbounds float, float* %5, i64 %1188
  %1190 = bitcast float* %1189 to <8 x float>*
  %1191 = load <8 x float>, <8 x float>* %1190, align 1, !tbaa !12
  %1192 = add nuw nsw i64 %1123, 40
  %1193 = getelementptr inbounds float, float* %5, i64 %1192
  %1194 = bitcast float* %1193 to <8 x float>*
  %1195 = load <8 x float>, <8 x float>* %1194, align 1, !tbaa !12
  %1196 = add nuw nsw i64 %1123, 48
  %1197 = getelementptr inbounds float, float* %5, i64 %1196
  %1198 = bitcast float* %1197 to <8 x float>*
  %1199 = load <8 x float>, <8 x float>* %1198, align 1, !tbaa !12
  %1200 = add nuw nsw i64 %1123, 56
  %1201 = getelementptr inbounds float, float* %5, i64 %1200
  %1202 = bitcast float* %1201 to <8 x float>*
  %1203 = load <8 x float>, <8 x float>* %1202, align 1, !tbaa !12
  %1204 = add nuw nsw i64 %1123, 64
  %1205 = getelementptr inbounds float, float* %5, i64 %1204
  %1206 = bitcast float* %1205 to <8 x float>*
  %1207 = load <8 x float>, <8 x float>* %1206, align 1, !tbaa !12
  %1208 = add nuw nsw i64 %1123, 72
  %1209 = getelementptr inbounds float, float* %5, i64 %1208
  %1210 = bitcast float* %1209 to <8 x float>*
  %1211 = load <8 x float>, <8 x float>* %1210, align 1, !tbaa !12
  %1212 = add nuw nsw i64 %1123, 80
  %1213 = getelementptr inbounds float, float* %5, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nuw nsw i64 %1123, 88
  %1217 = getelementptr inbounds float, float* %5, i64 %1216
  %1218 = bitcast float* %1217 to <8 x float>*
  %1219 = load <8 x float>, <8 x float>* %1218, align 1, !tbaa !12
  %1220 = trunc i64 %1123 to i32
  %1221 = add nsw i32 %955, %1220
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i32 %1221, 8
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i32 %1221, 16
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i32 %1221, 24
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i32 %1221, 32
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nsw i32 %1221, 40
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds float, float* %3, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = add nsw i32 %1221, 48
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds float, float* %3, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = add nsw i32 %1221, 56
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds float, float* %3, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = add nsw i32 %1221, 64
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds float, float* %3, i64 %1262
  %1264 = bitcast float* %1263 to <8 x float>*
  %1265 = load <8 x float>, <8 x float>* %1264, align 1, !tbaa !12
  %1266 = add nsw i32 %1221, 72
  %1267 = sext i32 %1266 to i64
  %1268 = getelementptr inbounds float, float* %3, i64 %1267
  %1269 = bitcast float* %1268 to <8 x float>*
  %1270 = load <8 x float>, <8 x float>* %1269, align 1, !tbaa !12
  %1271 = add nsw i32 %1221, 80
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds float, float* %3, i64 %1272
  %1274 = bitcast float* %1273 to <8 x float>*
  %1275 = load <8 x float>, <8 x float>* %1274, align 1, !tbaa !12
  %1276 = add nsw i32 %1221, 88
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds float, float* %3, i64 %1277
  %1279 = bitcast float* %1278 to <8 x float>*
  %1280 = load <8 x float>, <8 x float>* %1279, align 1, !tbaa !12
  %1281 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %55, <8 x float> %1175) #10
  %1282 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %55, <8 x float> %1179) #10
  %1283 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %55, <8 x float> %1183) #10
  %1284 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %55, <8 x float> %1187) #10
  %1285 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %55, <8 x float> %1191) #10
  %1286 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1250, <8 x float> %55, <8 x float> %1195) #10
  %1287 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1255, <8 x float> %55, <8 x float> %1199) #10
  %1288 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1260, <8 x float> %55, <8 x float> %1203) #10
  %1289 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1265, <8 x float> %55, <8 x float> %1207) #10
  %1290 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1270, <8 x float> %55, <8 x float> %1211) #10
  %1291 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1275, <8 x float> %55, <8 x float> %1215) #10
  %1292 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1280, <8 x float> %55, <8 x float> %1219) #10
  store <8 x float> %1281, <8 x float>* %1174, align 1, !tbaa !12
  store <8 x float> %1282, <8 x float>* %1178, align 1, !tbaa !12
  store <8 x float> %1283, <8 x float>* %1182, align 1, !tbaa !12
  store <8 x float> %1284, <8 x float>* %1186, align 1, !tbaa !12
  store <8 x float> %1285, <8 x float>* %1190, align 1, !tbaa !12
  store <8 x float> %1286, <8 x float>* %1194, align 1, !tbaa !12
  store <8 x float> %1287, <8 x float>* %1198, align 1, !tbaa !12
  store <8 x float> %1288, <8 x float>* %1202, align 1, !tbaa !12
  store <8 x float> %1289, <8 x float>* %1206, align 1, !tbaa !12
  store <8 x float> %1290, <8 x float>* %1210, align 1, !tbaa !12
  store <8 x float> %1291, <8 x float>* %1214, align 1, !tbaa !12
  store <8 x float> %1292, <8 x float>* %1218, align 1, !tbaa !12
  %1293 = add nuw nsw i64 %1123, 96
  %1294 = icmp ult i64 %1293, %953
  br i1 %1294, label %1122, label %1116

1295:                                             ; preds = %1301
  br i1 %951, label %1296, label %1461

1296:                                             ; preds = %1295
  %1297 = trunc i64 %61 to i32
  %1298 = mul nsw i32 %950, %1297
  %1299 = sext i32 %1298 to i64
  %1300 = zext i32 %950 to i64
  br label %1468

1301:                                             ; preds = %1117, %1301
  %1302 = phi i64 [ 0, %1117 ], [ %1459, %1301 ]
  %1303 = getelementptr inbounds float, float* %5, i64 %1302
  %1304 = getelementptr inbounds float, float* %1303, i64 8
  %1305 = bitcast float* %1304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1305, i32 0, i32 1, i32 1)
  %1306 = getelementptr inbounds float, float* %3, i64 %1302
  %1307 = getelementptr inbounds float, float* %1306, i64 8
  %1308 = bitcast float* %1307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1308, i32 0, i32 1, i32 1)
  %1309 = getelementptr inbounds float, float* %1303, i64 16
  %1310 = bitcast float* %1309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1310, i32 0, i32 1, i32 1)
  %1311 = getelementptr inbounds float, float* %1306, i64 16
  %1312 = bitcast float* %1311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1312, i32 0, i32 1, i32 1)
  %1313 = getelementptr inbounds float, float* %1303, i64 24
  %1314 = bitcast float* %1313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1314, i32 0, i32 1, i32 1)
  %1315 = getelementptr inbounds float, float* %1306, i64 24
  %1316 = bitcast float* %1315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1316, i32 0, i32 1, i32 1)
  %1317 = getelementptr inbounds float, float* %1303, i64 32
  %1318 = bitcast float* %1317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1318, i32 0, i32 1, i32 1)
  %1319 = getelementptr inbounds float, float* %1306, i64 32
  %1320 = bitcast float* %1319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1320, i32 0, i32 1, i32 1)
  %1321 = getelementptr inbounds float, float* %1303, i64 40
  %1322 = bitcast float* %1321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1322, i32 0, i32 1, i32 1)
  %1323 = getelementptr inbounds float, float* %1306, i64 40
  %1324 = bitcast float* %1323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1324, i32 0, i32 1, i32 1)
  %1325 = getelementptr inbounds float, float* %1303, i64 48
  %1326 = bitcast float* %1325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1326, i32 0, i32 1, i32 1)
  %1327 = getelementptr inbounds float, float* %1306, i64 48
  %1328 = bitcast float* %1327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1328, i32 0, i32 1, i32 1)
  %1329 = getelementptr inbounds float, float* %1303, i64 56
  %1330 = bitcast float* %1329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1330, i32 0, i32 1, i32 1)
  %1331 = getelementptr inbounds float, float* %1306, i64 56
  %1332 = bitcast float* %1331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1332, i32 0, i32 1, i32 1)
  %1333 = getelementptr inbounds float, float* %1303, i64 64
  %1334 = bitcast float* %1333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1334, i32 0, i32 1, i32 1)
  %1335 = getelementptr inbounds float, float* %1306, i64 64
  %1336 = bitcast float* %1335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1336, i32 0, i32 1, i32 1)
  %1337 = getelementptr inbounds float, float* %1303, i64 72
  %1338 = bitcast float* %1337 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1338, i32 0, i32 1, i32 1)
  %1339 = getelementptr inbounds float, float* %1306, i64 72
  %1340 = bitcast float* %1339 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1340, i32 0, i32 1, i32 1)
  %1341 = getelementptr inbounds float, float* %1303, i64 80
  %1342 = bitcast float* %1341 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1342, i32 0, i32 1, i32 1)
  %1343 = getelementptr inbounds float, float* %1306, i64 80
  %1344 = bitcast float* %1343 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1344, i32 0, i32 1, i32 1)
  %1345 = getelementptr inbounds float, float* %1303, i64 88
  %1346 = bitcast float* %1345 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1346, i32 0, i32 1, i32 1)
  %1347 = getelementptr inbounds float, float* %1306, i64 88
  %1348 = bitcast float* %1347 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1348, i32 0, i32 1, i32 1)
  %1349 = getelementptr inbounds float, float* %1303, i64 96
  %1350 = bitcast float* %1349 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1350, i32 0, i32 1, i32 1)
  %1351 = getelementptr inbounds float, float* %1306, i64 96
  %1352 = bitcast float* %1351 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1352, i32 0, i32 1, i32 1)
  %1353 = bitcast float* %1303 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = or i64 %1302, 8
  %1356 = getelementptr inbounds float, float* %5, i64 %1355
  %1357 = bitcast float* %1356 to <8 x float>*
  %1358 = load <8 x float>, <8 x float>* %1357, align 1, !tbaa !12
  %1359 = or i64 %1302, 16
  %1360 = getelementptr inbounds float, float* %5, i64 %1359
  %1361 = bitcast float* %1360 to <8 x float>*
  %1362 = load <8 x float>, <8 x float>* %1361, align 1, !tbaa !12
  %1363 = or i64 %1302, 24
  %1364 = getelementptr inbounds float, float* %5, i64 %1363
  %1365 = bitcast float* %1364 to <8 x float>*
  %1366 = load <8 x float>, <8 x float>* %1365, align 1, !tbaa !12
  %1367 = add nuw nsw i64 %1302, 32
  %1368 = getelementptr inbounds float, float* %5, i64 %1367
  %1369 = bitcast float* %1368 to <8 x float>*
  %1370 = load <8 x float>, <8 x float>* %1369, align 1, !tbaa !12
  %1371 = add nuw nsw i64 %1302, 40
  %1372 = getelementptr inbounds float, float* %5, i64 %1371
  %1373 = bitcast float* %1372 to <8 x float>*
  %1374 = load <8 x float>, <8 x float>* %1373, align 1, !tbaa !12
  %1375 = add nuw nsw i64 %1302, 48
  %1376 = getelementptr inbounds float, float* %5, i64 %1375
  %1377 = bitcast float* %1376 to <8 x float>*
  %1378 = load <8 x float>, <8 x float>* %1377, align 1, !tbaa !12
  %1379 = add nuw nsw i64 %1302, 56
  %1380 = getelementptr inbounds float, float* %5, i64 %1379
  %1381 = bitcast float* %1380 to <8 x float>*
  %1382 = load <8 x float>, <8 x float>* %1381, align 1, !tbaa !12
  %1383 = add nuw nsw i64 %1302, 64
  %1384 = getelementptr inbounds float, float* %5, i64 %1383
  %1385 = bitcast float* %1384 to <8 x float>*
  %1386 = load <8 x float>, <8 x float>* %1385, align 1, !tbaa !12
  %1387 = add nuw nsw i64 %1302, 72
  %1388 = getelementptr inbounds float, float* %5, i64 %1387
  %1389 = bitcast float* %1388 to <8 x float>*
  %1390 = load <8 x float>, <8 x float>* %1389, align 1, !tbaa !12
  %1391 = add nuw nsw i64 %1302, 80
  %1392 = getelementptr inbounds float, float* %5, i64 %1391
  %1393 = bitcast float* %1392 to <8 x float>*
  %1394 = load <8 x float>, <8 x float>* %1393, align 1, !tbaa !12
  %1395 = add nuw nsw i64 %1302, 88
  %1396 = getelementptr inbounds float, float* %5, i64 %1395
  %1397 = bitcast float* %1396 to <8 x float>*
  %1398 = load <8 x float>, <8 x float>* %1397, align 1, !tbaa !12
  %1399 = add nsw i64 %1302, %1120
  %1400 = getelementptr inbounds float, float* %3, i64 %1399
  %1401 = bitcast float* %1400 to <8 x float>*
  %1402 = load <8 x float>, <8 x float>* %1401, align 1, !tbaa !12
  %1403 = add nsw i64 %1399, 8
  %1404 = getelementptr inbounds float, float* %3, i64 %1403
  %1405 = bitcast float* %1404 to <8 x float>*
  %1406 = load <8 x float>, <8 x float>* %1405, align 1, !tbaa !12
  %1407 = add nsw i64 %1399, 16
  %1408 = getelementptr inbounds float, float* %3, i64 %1407
  %1409 = bitcast float* %1408 to <8 x float>*
  %1410 = load <8 x float>, <8 x float>* %1409, align 1, !tbaa !12
  %1411 = add nsw i64 %1399, 24
  %1412 = getelementptr inbounds float, float* %3, i64 %1411
  %1413 = bitcast float* %1412 to <8 x float>*
  %1414 = load <8 x float>, <8 x float>* %1413, align 1, !tbaa !12
  %1415 = add nsw i64 %1399, 32
  %1416 = getelementptr inbounds float, float* %3, i64 %1415
  %1417 = bitcast float* %1416 to <8 x float>*
  %1418 = load <8 x float>, <8 x float>* %1417, align 1, !tbaa !12
  %1419 = add nsw i64 %1399, 40
  %1420 = getelementptr inbounds float, float* %3, i64 %1419
  %1421 = bitcast float* %1420 to <8 x float>*
  %1422 = load <8 x float>, <8 x float>* %1421, align 1, !tbaa !12
  %1423 = add nsw i64 %1399, 48
  %1424 = getelementptr inbounds float, float* %3, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = add nsw i64 %1399, 56
  %1428 = getelementptr inbounds float, float* %3, i64 %1427
  %1429 = bitcast float* %1428 to <8 x float>*
  %1430 = load <8 x float>, <8 x float>* %1429, align 1, !tbaa !12
  %1431 = add nsw i64 %1399, 64
  %1432 = getelementptr inbounds float, float* %3, i64 %1431
  %1433 = bitcast float* %1432 to <8 x float>*
  %1434 = load <8 x float>, <8 x float>* %1433, align 1, !tbaa !12
  %1435 = add nsw i64 %1399, 72
  %1436 = getelementptr inbounds float, float* %3, i64 %1435
  %1437 = bitcast float* %1436 to <8 x float>*
  %1438 = load <8 x float>, <8 x float>* %1437, align 1, !tbaa !12
  %1439 = add nsw i64 %1399, 80
  %1440 = getelementptr inbounds float, float* %3, i64 %1439
  %1441 = bitcast float* %1440 to <8 x float>*
  %1442 = load <8 x float>, <8 x float>* %1441, align 1, !tbaa !12
  %1443 = add nsw i64 %1399, 88
  %1444 = getelementptr inbounds float, float* %3, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1402, <8 x float> %60, <8 x float> %1354) #10
  %1448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1406, <8 x float> %60, <8 x float> %1358) #10
  %1449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1410, <8 x float> %60, <8 x float> %1362) #10
  %1450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1414, <8 x float> %60, <8 x float> %1366) #10
  %1451 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1418, <8 x float> %60, <8 x float> %1370) #10
  %1452 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1422, <8 x float> %60, <8 x float> %1374) #10
  %1453 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1426, <8 x float> %60, <8 x float> %1378) #10
  %1454 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1430, <8 x float> %60, <8 x float> %1382) #10
  %1455 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1434, <8 x float> %60, <8 x float> %1386) #10
  %1456 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1438, <8 x float> %60, <8 x float> %1390) #10
  %1457 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1442, <8 x float> %60, <8 x float> %1394) #10
  %1458 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1446, <8 x float> %60, <8 x float> %1398) #10
  store <8 x float> %1447, <8 x float>* %1353, align 1, !tbaa !12
  store <8 x float> %1448, <8 x float>* %1357, align 1, !tbaa !12
  store <8 x float> %1449, <8 x float>* %1361, align 1, !tbaa !12
  store <8 x float> %1450, <8 x float>* %1365, align 1, !tbaa !12
  store <8 x float> %1451, <8 x float>* %1369, align 1, !tbaa !12
  store <8 x float> %1452, <8 x float>* %1373, align 1, !tbaa !12
  store <8 x float> %1453, <8 x float>* %1377, align 1, !tbaa !12
  store <8 x float> %1454, <8 x float>* %1381, align 1, !tbaa !12
  store <8 x float> %1455, <8 x float>* %1385, align 1, !tbaa !12
  store <8 x float> %1456, <8 x float>* %1389, align 1, !tbaa !12
  store <8 x float> %1457, <8 x float>* %1393, align 1, !tbaa !12
  store <8 x float> %1458, <8 x float>* %1397, align 1, !tbaa !12
  %1459 = add nuw nsw i64 %1302, 96
  %1460 = icmp ult i64 %1459, %1121
  br i1 %1460, label %1301, label %1295

1461:                                             ; preds = %1468, %1116, %1295
  %1462 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1463 = icmp sgt i32 %1462, 0
  br i1 %1463, label %1464, label %2140

1464:                                             ; preds = %1461
  %1465 = zext i32 %1462 to i64
  %1466 = trunc i64 %66 to i32
  %1467 = mul nsw i32 %1462, %1466
  br label %1634

1468:                                             ; preds = %1296, %1468
  %1469 = phi i64 [ 0, %1296 ], [ %1626, %1468 ]
  %1470 = getelementptr inbounds float, float* %5, i64 %1469
  %1471 = getelementptr inbounds float, float* %1470, i64 8
  %1472 = bitcast float* %1471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1472, i32 0, i32 1, i32 1)
  %1473 = getelementptr inbounds float, float* %3, i64 %1469
  %1474 = getelementptr inbounds float, float* %1473, i64 8
  %1475 = bitcast float* %1474 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1475, i32 0, i32 1, i32 1)
  %1476 = getelementptr inbounds float, float* %1470, i64 16
  %1477 = bitcast float* %1476 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1477, i32 0, i32 1, i32 1)
  %1478 = getelementptr inbounds float, float* %1473, i64 16
  %1479 = bitcast float* %1478 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1479, i32 0, i32 1, i32 1)
  %1480 = getelementptr inbounds float, float* %1470, i64 24
  %1481 = bitcast float* %1480 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1481, i32 0, i32 1, i32 1)
  %1482 = getelementptr inbounds float, float* %1473, i64 24
  %1483 = bitcast float* %1482 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1483, i32 0, i32 1, i32 1)
  %1484 = getelementptr inbounds float, float* %1470, i64 32
  %1485 = bitcast float* %1484 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1485, i32 0, i32 1, i32 1)
  %1486 = getelementptr inbounds float, float* %1473, i64 32
  %1487 = bitcast float* %1486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1487, i32 0, i32 1, i32 1)
  %1488 = getelementptr inbounds float, float* %1470, i64 40
  %1489 = bitcast float* %1488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1489, i32 0, i32 1, i32 1)
  %1490 = getelementptr inbounds float, float* %1473, i64 40
  %1491 = bitcast float* %1490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1491, i32 0, i32 1, i32 1)
  %1492 = getelementptr inbounds float, float* %1470, i64 48
  %1493 = bitcast float* %1492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1493, i32 0, i32 1, i32 1)
  %1494 = getelementptr inbounds float, float* %1473, i64 48
  %1495 = bitcast float* %1494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1495, i32 0, i32 1, i32 1)
  %1496 = getelementptr inbounds float, float* %1470, i64 56
  %1497 = bitcast float* %1496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1497, i32 0, i32 1, i32 1)
  %1498 = getelementptr inbounds float, float* %1473, i64 56
  %1499 = bitcast float* %1498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1499, i32 0, i32 1, i32 1)
  %1500 = getelementptr inbounds float, float* %1470, i64 64
  %1501 = bitcast float* %1500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1501, i32 0, i32 1, i32 1)
  %1502 = getelementptr inbounds float, float* %1473, i64 64
  %1503 = bitcast float* %1502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1503, i32 0, i32 1, i32 1)
  %1504 = getelementptr inbounds float, float* %1470, i64 72
  %1505 = bitcast float* %1504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1505, i32 0, i32 1, i32 1)
  %1506 = getelementptr inbounds float, float* %1473, i64 72
  %1507 = bitcast float* %1506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1507, i32 0, i32 1, i32 1)
  %1508 = getelementptr inbounds float, float* %1470, i64 80
  %1509 = bitcast float* %1508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1509, i32 0, i32 1, i32 1)
  %1510 = getelementptr inbounds float, float* %1473, i64 80
  %1511 = bitcast float* %1510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1511, i32 0, i32 1, i32 1)
  %1512 = getelementptr inbounds float, float* %1470, i64 88
  %1513 = bitcast float* %1512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1513, i32 0, i32 1, i32 1)
  %1514 = getelementptr inbounds float, float* %1473, i64 88
  %1515 = bitcast float* %1514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1515, i32 0, i32 1, i32 1)
  %1516 = getelementptr inbounds float, float* %1470, i64 96
  %1517 = bitcast float* %1516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1517, i32 0, i32 1, i32 1)
  %1518 = getelementptr inbounds float, float* %1473, i64 96
  %1519 = bitcast float* %1518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1519, i32 0, i32 1, i32 1)
  %1520 = bitcast float* %1470 to <8 x float>*
  %1521 = load <8 x float>, <8 x float>* %1520, align 1, !tbaa !12
  %1522 = or i64 %1469, 8
  %1523 = getelementptr inbounds float, float* %5, i64 %1522
  %1524 = bitcast float* %1523 to <8 x float>*
  %1525 = load <8 x float>, <8 x float>* %1524, align 1, !tbaa !12
  %1526 = or i64 %1469, 16
  %1527 = getelementptr inbounds float, float* %5, i64 %1526
  %1528 = bitcast float* %1527 to <8 x float>*
  %1529 = load <8 x float>, <8 x float>* %1528, align 1, !tbaa !12
  %1530 = or i64 %1469, 24
  %1531 = getelementptr inbounds float, float* %5, i64 %1530
  %1532 = bitcast float* %1531 to <8 x float>*
  %1533 = load <8 x float>, <8 x float>* %1532, align 1, !tbaa !12
  %1534 = add nuw nsw i64 %1469, 32
  %1535 = getelementptr inbounds float, float* %5, i64 %1534
  %1536 = bitcast float* %1535 to <8 x float>*
  %1537 = load <8 x float>, <8 x float>* %1536, align 1, !tbaa !12
  %1538 = add nuw nsw i64 %1469, 40
  %1539 = getelementptr inbounds float, float* %5, i64 %1538
  %1540 = bitcast float* %1539 to <8 x float>*
  %1541 = load <8 x float>, <8 x float>* %1540, align 1, !tbaa !12
  %1542 = add nuw nsw i64 %1469, 48
  %1543 = getelementptr inbounds float, float* %5, i64 %1542
  %1544 = bitcast float* %1543 to <8 x float>*
  %1545 = load <8 x float>, <8 x float>* %1544, align 1, !tbaa !12
  %1546 = add nuw nsw i64 %1469, 56
  %1547 = getelementptr inbounds float, float* %5, i64 %1546
  %1548 = bitcast float* %1547 to <8 x float>*
  %1549 = load <8 x float>, <8 x float>* %1548, align 1, !tbaa !12
  %1550 = add nuw nsw i64 %1469, 64
  %1551 = getelementptr inbounds float, float* %5, i64 %1550
  %1552 = bitcast float* %1551 to <8 x float>*
  %1553 = load <8 x float>, <8 x float>* %1552, align 1, !tbaa !12
  %1554 = add nuw nsw i64 %1469, 72
  %1555 = getelementptr inbounds float, float* %5, i64 %1554
  %1556 = bitcast float* %1555 to <8 x float>*
  %1557 = load <8 x float>, <8 x float>* %1556, align 1, !tbaa !12
  %1558 = add nuw nsw i64 %1469, 80
  %1559 = getelementptr inbounds float, float* %5, i64 %1558
  %1560 = bitcast float* %1559 to <8 x float>*
  %1561 = load <8 x float>, <8 x float>* %1560, align 1, !tbaa !12
  %1562 = add nuw nsw i64 %1469, 88
  %1563 = getelementptr inbounds float, float* %5, i64 %1562
  %1564 = bitcast float* %1563 to <8 x float>*
  %1565 = load <8 x float>, <8 x float>* %1564, align 1, !tbaa !12
  %1566 = add nsw i64 %1469, %1299
  %1567 = getelementptr inbounds float, float* %3, i64 %1566
  %1568 = bitcast float* %1567 to <8 x float>*
  %1569 = load <8 x float>, <8 x float>* %1568, align 1, !tbaa !12
  %1570 = add nsw i64 %1566, 8
  %1571 = getelementptr inbounds float, float* %3, i64 %1570
  %1572 = bitcast float* %1571 to <8 x float>*
  %1573 = load <8 x float>, <8 x float>* %1572, align 1, !tbaa !12
  %1574 = add nsw i64 %1566, 16
  %1575 = getelementptr inbounds float, float* %3, i64 %1574
  %1576 = bitcast float* %1575 to <8 x float>*
  %1577 = load <8 x float>, <8 x float>* %1576, align 1, !tbaa !12
  %1578 = add nsw i64 %1566, 24
  %1579 = getelementptr inbounds float, float* %3, i64 %1578
  %1580 = bitcast float* %1579 to <8 x float>*
  %1581 = load <8 x float>, <8 x float>* %1580, align 1, !tbaa !12
  %1582 = add nsw i64 %1566, 32
  %1583 = getelementptr inbounds float, float* %3, i64 %1582
  %1584 = bitcast float* %1583 to <8 x float>*
  %1585 = load <8 x float>, <8 x float>* %1584, align 1, !tbaa !12
  %1586 = add nsw i64 %1566, 40
  %1587 = getelementptr inbounds float, float* %3, i64 %1586
  %1588 = bitcast float* %1587 to <8 x float>*
  %1589 = load <8 x float>, <8 x float>* %1588, align 1, !tbaa !12
  %1590 = add nsw i64 %1566, 48
  %1591 = getelementptr inbounds float, float* %3, i64 %1590
  %1592 = bitcast float* %1591 to <8 x float>*
  %1593 = load <8 x float>, <8 x float>* %1592, align 1, !tbaa !12
  %1594 = add nsw i64 %1566, 56
  %1595 = getelementptr inbounds float, float* %3, i64 %1594
  %1596 = bitcast float* %1595 to <8 x float>*
  %1597 = load <8 x float>, <8 x float>* %1596, align 1, !tbaa !12
  %1598 = add nsw i64 %1566, 64
  %1599 = getelementptr inbounds float, float* %3, i64 %1598
  %1600 = bitcast float* %1599 to <8 x float>*
  %1601 = load <8 x float>, <8 x float>* %1600, align 1, !tbaa !12
  %1602 = add nsw i64 %1566, 72
  %1603 = getelementptr inbounds float, float* %3, i64 %1602
  %1604 = bitcast float* %1603 to <8 x float>*
  %1605 = load <8 x float>, <8 x float>* %1604, align 1, !tbaa !12
  %1606 = add nsw i64 %1566, 80
  %1607 = getelementptr inbounds float, float* %3, i64 %1606
  %1608 = bitcast float* %1607 to <8 x float>*
  %1609 = load <8 x float>, <8 x float>* %1608, align 1, !tbaa !12
  %1610 = add nsw i64 %1566, 88
  %1611 = getelementptr inbounds float, float* %3, i64 %1610
  %1612 = bitcast float* %1611 to <8 x float>*
  %1613 = load <8 x float>, <8 x float>* %1612, align 1, !tbaa !12
  %1614 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1569, <8 x float> %65, <8 x float> %1521) #10
  %1615 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1573, <8 x float> %65, <8 x float> %1525) #10
  %1616 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1577, <8 x float> %65, <8 x float> %1529) #10
  %1617 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1581, <8 x float> %65, <8 x float> %1533) #10
  %1618 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1585, <8 x float> %65, <8 x float> %1537) #10
  %1619 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1589, <8 x float> %65, <8 x float> %1541) #10
  %1620 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1593, <8 x float> %65, <8 x float> %1545) #10
  %1621 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1597, <8 x float> %65, <8 x float> %1549) #10
  %1622 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1601, <8 x float> %65, <8 x float> %1553) #10
  %1623 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1605, <8 x float> %65, <8 x float> %1557) #10
  %1624 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1609, <8 x float> %65, <8 x float> %1561) #10
  %1625 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1613, <8 x float> %65, <8 x float> %1565) #10
  store <8 x float> %1614, <8 x float>* %1520, align 1, !tbaa !12
  store <8 x float> %1615, <8 x float>* %1524, align 1, !tbaa !12
  store <8 x float> %1616, <8 x float>* %1528, align 1, !tbaa !12
  store <8 x float> %1617, <8 x float>* %1532, align 1, !tbaa !12
  store <8 x float> %1618, <8 x float>* %1536, align 1, !tbaa !12
  store <8 x float> %1619, <8 x float>* %1540, align 1, !tbaa !12
  store <8 x float> %1620, <8 x float>* %1544, align 1, !tbaa !12
  store <8 x float> %1621, <8 x float>* %1548, align 1, !tbaa !12
  store <8 x float> %1622, <8 x float>* %1552, align 1, !tbaa !12
  store <8 x float> %1623, <8 x float>* %1556, align 1, !tbaa !12
  store <8 x float> %1624, <8 x float>* %1560, align 1, !tbaa !12
  store <8 x float> %1625, <8 x float>* %1564, align 1, !tbaa !12
  %1626 = add nuw nsw i64 %1469, 96
  %1627 = icmp ult i64 %1626, %1300
  br i1 %1627, label %1468, label %1461

1628:                                             ; preds = %1634
  br i1 %1463, label %1629, label %1973

1629:                                             ; preds = %1628
  %1630 = trunc i64 %71 to i32
  %1631 = mul nsw i32 %1462, %1630
  %1632 = sext i32 %1631 to i64
  %1633 = zext i32 %1462 to i64
  br label %1813

1634:                                             ; preds = %1464, %1634
  %1635 = phi i64 [ 0, %1464 ], [ %1805, %1634 ]
  %1636 = getelementptr inbounds float, float* %5, i64 %1635
  %1637 = getelementptr inbounds float, float* %1636, i64 8
  %1638 = bitcast float* %1637 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1638, i32 0, i32 1, i32 1)
  %1639 = getelementptr inbounds float, float* %3, i64 %1635
  %1640 = getelementptr inbounds float, float* %1639, i64 8
  %1641 = bitcast float* %1640 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1641, i32 0, i32 1, i32 1)
  %1642 = getelementptr inbounds float, float* %1636, i64 16
  %1643 = bitcast float* %1642 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1643, i32 0, i32 1, i32 1)
  %1644 = getelementptr inbounds float, float* %1639, i64 16
  %1645 = bitcast float* %1644 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1645, i32 0, i32 1, i32 1)
  %1646 = getelementptr inbounds float, float* %1636, i64 24
  %1647 = bitcast float* %1646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1647, i32 0, i32 1, i32 1)
  %1648 = getelementptr inbounds float, float* %1639, i64 24
  %1649 = bitcast float* %1648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1649, i32 0, i32 1, i32 1)
  %1650 = getelementptr inbounds float, float* %1636, i64 32
  %1651 = bitcast float* %1650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1651, i32 0, i32 1, i32 1)
  %1652 = getelementptr inbounds float, float* %1639, i64 32
  %1653 = bitcast float* %1652 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1653, i32 0, i32 1, i32 1)
  %1654 = getelementptr inbounds float, float* %1636, i64 40
  %1655 = bitcast float* %1654 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1655, i32 0, i32 1, i32 1)
  %1656 = getelementptr inbounds float, float* %1639, i64 40
  %1657 = bitcast float* %1656 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1657, i32 0, i32 1, i32 1)
  %1658 = getelementptr inbounds float, float* %1636, i64 48
  %1659 = bitcast float* %1658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1659, i32 0, i32 1, i32 1)
  %1660 = getelementptr inbounds float, float* %1639, i64 48
  %1661 = bitcast float* %1660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1661, i32 0, i32 1, i32 1)
  %1662 = getelementptr inbounds float, float* %1636, i64 56
  %1663 = bitcast float* %1662 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1663, i32 0, i32 1, i32 1)
  %1664 = getelementptr inbounds float, float* %1639, i64 56
  %1665 = bitcast float* %1664 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1665, i32 0, i32 1, i32 1)
  %1666 = getelementptr inbounds float, float* %1636, i64 64
  %1667 = bitcast float* %1666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1667, i32 0, i32 1, i32 1)
  %1668 = getelementptr inbounds float, float* %1639, i64 64
  %1669 = bitcast float* %1668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1669, i32 0, i32 1, i32 1)
  %1670 = getelementptr inbounds float, float* %1636, i64 72
  %1671 = bitcast float* %1670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1671, i32 0, i32 1, i32 1)
  %1672 = getelementptr inbounds float, float* %1639, i64 72
  %1673 = bitcast float* %1672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1673, i32 0, i32 1, i32 1)
  %1674 = getelementptr inbounds float, float* %1636, i64 80
  %1675 = bitcast float* %1674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1675, i32 0, i32 1, i32 1)
  %1676 = getelementptr inbounds float, float* %1639, i64 80
  %1677 = bitcast float* %1676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1677, i32 0, i32 1, i32 1)
  %1678 = getelementptr inbounds float, float* %1636, i64 88
  %1679 = bitcast float* %1678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1679, i32 0, i32 1, i32 1)
  %1680 = getelementptr inbounds float, float* %1639, i64 88
  %1681 = bitcast float* %1680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1681, i32 0, i32 1, i32 1)
  %1682 = getelementptr inbounds float, float* %1636, i64 96
  %1683 = bitcast float* %1682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1683, i32 0, i32 1, i32 1)
  %1684 = getelementptr inbounds float, float* %1639, i64 96
  %1685 = bitcast float* %1684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1685, i32 0, i32 1, i32 1)
  %1686 = bitcast float* %1636 to <8 x float>*
  %1687 = load <8 x float>, <8 x float>* %1686, align 1, !tbaa !12
  %1688 = or i64 %1635, 8
  %1689 = getelementptr inbounds float, float* %5, i64 %1688
  %1690 = bitcast float* %1689 to <8 x float>*
  %1691 = load <8 x float>, <8 x float>* %1690, align 1, !tbaa !12
  %1692 = or i64 %1635, 16
  %1693 = getelementptr inbounds float, float* %5, i64 %1692
  %1694 = bitcast float* %1693 to <8 x float>*
  %1695 = load <8 x float>, <8 x float>* %1694, align 1, !tbaa !12
  %1696 = or i64 %1635, 24
  %1697 = getelementptr inbounds float, float* %5, i64 %1696
  %1698 = bitcast float* %1697 to <8 x float>*
  %1699 = load <8 x float>, <8 x float>* %1698, align 1, !tbaa !12
  %1700 = add nuw nsw i64 %1635, 32
  %1701 = getelementptr inbounds float, float* %5, i64 %1700
  %1702 = bitcast float* %1701 to <8 x float>*
  %1703 = load <8 x float>, <8 x float>* %1702, align 1, !tbaa !12
  %1704 = add nuw nsw i64 %1635, 40
  %1705 = getelementptr inbounds float, float* %5, i64 %1704
  %1706 = bitcast float* %1705 to <8 x float>*
  %1707 = load <8 x float>, <8 x float>* %1706, align 1, !tbaa !12
  %1708 = add nuw nsw i64 %1635, 48
  %1709 = getelementptr inbounds float, float* %5, i64 %1708
  %1710 = bitcast float* %1709 to <8 x float>*
  %1711 = load <8 x float>, <8 x float>* %1710, align 1, !tbaa !12
  %1712 = add nuw nsw i64 %1635, 56
  %1713 = getelementptr inbounds float, float* %5, i64 %1712
  %1714 = bitcast float* %1713 to <8 x float>*
  %1715 = load <8 x float>, <8 x float>* %1714, align 1, !tbaa !12
  %1716 = add nuw nsw i64 %1635, 64
  %1717 = getelementptr inbounds float, float* %5, i64 %1716
  %1718 = bitcast float* %1717 to <8 x float>*
  %1719 = load <8 x float>, <8 x float>* %1718, align 1, !tbaa !12
  %1720 = add nuw nsw i64 %1635, 72
  %1721 = getelementptr inbounds float, float* %5, i64 %1720
  %1722 = bitcast float* %1721 to <8 x float>*
  %1723 = load <8 x float>, <8 x float>* %1722, align 1, !tbaa !12
  %1724 = add nuw nsw i64 %1635, 80
  %1725 = getelementptr inbounds float, float* %5, i64 %1724
  %1726 = bitcast float* %1725 to <8 x float>*
  %1727 = load <8 x float>, <8 x float>* %1726, align 1, !tbaa !12
  %1728 = add nuw nsw i64 %1635, 88
  %1729 = getelementptr inbounds float, float* %5, i64 %1728
  %1730 = bitcast float* %1729 to <8 x float>*
  %1731 = load <8 x float>, <8 x float>* %1730, align 1, !tbaa !12
  %1732 = trunc i64 %1635 to i32
  %1733 = add nsw i32 %1467, %1732
  %1734 = sext i32 %1733 to i64
  %1735 = getelementptr inbounds float, float* %3, i64 %1734
  %1736 = bitcast float* %1735 to <8 x float>*
  %1737 = load <8 x float>, <8 x float>* %1736, align 1, !tbaa !12
  %1738 = add nsw i32 %1733, 8
  %1739 = sext i32 %1738 to i64
  %1740 = getelementptr inbounds float, float* %3, i64 %1739
  %1741 = bitcast float* %1740 to <8 x float>*
  %1742 = load <8 x float>, <8 x float>* %1741, align 1, !tbaa !12
  %1743 = add nsw i32 %1733, 16
  %1744 = sext i32 %1743 to i64
  %1745 = getelementptr inbounds float, float* %3, i64 %1744
  %1746 = bitcast float* %1745 to <8 x float>*
  %1747 = load <8 x float>, <8 x float>* %1746, align 1, !tbaa !12
  %1748 = add nsw i32 %1733, 24
  %1749 = sext i32 %1748 to i64
  %1750 = getelementptr inbounds float, float* %3, i64 %1749
  %1751 = bitcast float* %1750 to <8 x float>*
  %1752 = load <8 x float>, <8 x float>* %1751, align 1, !tbaa !12
  %1753 = add nsw i32 %1733, 32
  %1754 = sext i32 %1753 to i64
  %1755 = getelementptr inbounds float, float* %3, i64 %1754
  %1756 = bitcast float* %1755 to <8 x float>*
  %1757 = load <8 x float>, <8 x float>* %1756, align 1, !tbaa !12
  %1758 = add nsw i32 %1733, 40
  %1759 = sext i32 %1758 to i64
  %1760 = getelementptr inbounds float, float* %3, i64 %1759
  %1761 = bitcast float* %1760 to <8 x float>*
  %1762 = load <8 x float>, <8 x float>* %1761, align 1, !tbaa !12
  %1763 = add nsw i32 %1733, 48
  %1764 = sext i32 %1763 to i64
  %1765 = getelementptr inbounds float, float* %3, i64 %1764
  %1766 = bitcast float* %1765 to <8 x float>*
  %1767 = load <8 x float>, <8 x float>* %1766, align 1, !tbaa !12
  %1768 = add nsw i32 %1733, 56
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds float, float* %3, i64 %1769
  %1771 = bitcast float* %1770 to <8 x float>*
  %1772 = load <8 x float>, <8 x float>* %1771, align 1, !tbaa !12
  %1773 = add nsw i32 %1733, 64
  %1774 = sext i32 %1773 to i64
  %1775 = getelementptr inbounds float, float* %3, i64 %1774
  %1776 = bitcast float* %1775 to <8 x float>*
  %1777 = load <8 x float>, <8 x float>* %1776, align 1, !tbaa !12
  %1778 = add nsw i32 %1733, 72
  %1779 = sext i32 %1778 to i64
  %1780 = getelementptr inbounds float, float* %3, i64 %1779
  %1781 = bitcast float* %1780 to <8 x float>*
  %1782 = load <8 x float>, <8 x float>* %1781, align 1, !tbaa !12
  %1783 = add nsw i32 %1733, 80
  %1784 = sext i32 %1783 to i64
  %1785 = getelementptr inbounds float, float* %3, i64 %1784
  %1786 = bitcast float* %1785 to <8 x float>*
  %1787 = load <8 x float>, <8 x float>* %1786, align 1, !tbaa !12
  %1788 = add nsw i32 %1733, 88
  %1789 = sext i32 %1788 to i64
  %1790 = getelementptr inbounds float, float* %3, i64 %1789
  %1791 = bitcast float* %1790 to <8 x float>*
  %1792 = load <8 x float>, <8 x float>* %1791, align 1, !tbaa !12
  %1793 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1737, <8 x float> %70, <8 x float> %1687) #10
  %1794 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1742, <8 x float> %70, <8 x float> %1691) #10
  %1795 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1747, <8 x float> %70, <8 x float> %1695) #10
  %1796 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1752, <8 x float> %70, <8 x float> %1699) #10
  %1797 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1757, <8 x float> %70, <8 x float> %1703) #10
  %1798 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1762, <8 x float> %70, <8 x float> %1707) #10
  %1799 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1767, <8 x float> %70, <8 x float> %1711) #10
  %1800 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1772, <8 x float> %70, <8 x float> %1715) #10
  %1801 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1777, <8 x float> %70, <8 x float> %1719) #10
  %1802 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1782, <8 x float> %70, <8 x float> %1723) #10
  %1803 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1787, <8 x float> %70, <8 x float> %1727) #10
  %1804 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1792, <8 x float> %70, <8 x float> %1731) #10
  store <8 x float> %1793, <8 x float>* %1686, align 1, !tbaa !12
  store <8 x float> %1794, <8 x float>* %1690, align 1, !tbaa !12
  store <8 x float> %1795, <8 x float>* %1694, align 1, !tbaa !12
  store <8 x float> %1796, <8 x float>* %1698, align 1, !tbaa !12
  store <8 x float> %1797, <8 x float>* %1702, align 1, !tbaa !12
  store <8 x float> %1798, <8 x float>* %1706, align 1, !tbaa !12
  store <8 x float> %1799, <8 x float>* %1710, align 1, !tbaa !12
  store <8 x float> %1800, <8 x float>* %1714, align 1, !tbaa !12
  store <8 x float> %1801, <8 x float>* %1718, align 1, !tbaa !12
  store <8 x float> %1802, <8 x float>* %1722, align 1, !tbaa !12
  store <8 x float> %1803, <8 x float>* %1726, align 1, !tbaa !12
  store <8 x float> %1804, <8 x float>* %1730, align 1, !tbaa !12
  %1805 = add nuw nsw i64 %1635, 96
  %1806 = icmp ult i64 %1805, %1465
  br i1 %1806, label %1634, label %1628

1807:                                             ; preds = %1813
  br i1 %1463, label %1808, label %1973

1808:                                             ; preds = %1807
  %1809 = trunc i64 %76 to i32
  %1810 = mul nsw i32 %1462, %1809
  %1811 = sext i32 %1810 to i64
  %1812 = zext i32 %1462 to i64
  br label %1980

1813:                                             ; preds = %1629, %1813
  %1814 = phi i64 [ 0, %1629 ], [ %1971, %1813 ]
  %1815 = getelementptr inbounds float, float* %5, i64 %1814
  %1816 = getelementptr inbounds float, float* %1815, i64 8
  %1817 = bitcast float* %1816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1817, i32 0, i32 1, i32 1)
  %1818 = getelementptr inbounds float, float* %3, i64 %1814
  %1819 = getelementptr inbounds float, float* %1818, i64 8
  %1820 = bitcast float* %1819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1820, i32 0, i32 1, i32 1)
  %1821 = getelementptr inbounds float, float* %1815, i64 16
  %1822 = bitcast float* %1821 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1822, i32 0, i32 1, i32 1)
  %1823 = getelementptr inbounds float, float* %1818, i64 16
  %1824 = bitcast float* %1823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1824, i32 0, i32 1, i32 1)
  %1825 = getelementptr inbounds float, float* %1815, i64 24
  %1826 = bitcast float* %1825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1826, i32 0, i32 1, i32 1)
  %1827 = getelementptr inbounds float, float* %1818, i64 24
  %1828 = bitcast float* %1827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1828, i32 0, i32 1, i32 1)
  %1829 = getelementptr inbounds float, float* %1815, i64 32
  %1830 = bitcast float* %1829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1830, i32 0, i32 1, i32 1)
  %1831 = getelementptr inbounds float, float* %1818, i64 32
  %1832 = bitcast float* %1831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1832, i32 0, i32 1, i32 1)
  %1833 = getelementptr inbounds float, float* %1815, i64 40
  %1834 = bitcast float* %1833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1834, i32 0, i32 1, i32 1)
  %1835 = getelementptr inbounds float, float* %1818, i64 40
  %1836 = bitcast float* %1835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1836, i32 0, i32 1, i32 1)
  %1837 = getelementptr inbounds float, float* %1815, i64 48
  %1838 = bitcast float* %1837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1838, i32 0, i32 1, i32 1)
  %1839 = getelementptr inbounds float, float* %1818, i64 48
  %1840 = bitcast float* %1839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1840, i32 0, i32 1, i32 1)
  %1841 = getelementptr inbounds float, float* %1815, i64 56
  %1842 = bitcast float* %1841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1842, i32 0, i32 1, i32 1)
  %1843 = getelementptr inbounds float, float* %1818, i64 56
  %1844 = bitcast float* %1843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1844, i32 0, i32 1, i32 1)
  %1845 = getelementptr inbounds float, float* %1815, i64 64
  %1846 = bitcast float* %1845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1846, i32 0, i32 1, i32 1)
  %1847 = getelementptr inbounds float, float* %1818, i64 64
  %1848 = bitcast float* %1847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1848, i32 0, i32 1, i32 1)
  %1849 = getelementptr inbounds float, float* %1815, i64 72
  %1850 = bitcast float* %1849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1850, i32 0, i32 1, i32 1)
  %1851 = getelementptr inbounds float, float* %1818, i64 72
  %1852 = bitcast float* %1851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1852, i32 0, i32 1, i32 1)
  %1853 = getelementptr inbounds float, float* %1815, i64 80
  %1854 = bitcast float* %1853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1854, i32 0, i32 1, i32 1)
  %1855 = getelementptr inbounds float, float* %1818, i64 80
  %1856 = bitcast float* %1855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1856, i32 0, i32 1, i32 1)
  %1857 = getelementptr inbounds float, float* %1815, i64 88
  %1858 = bitcast float* %1857 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1858, i32 0, i32 1, i32 1)
  %1859 = getelementptr inbounds float, float* %1818, i64 88
  %1860 = bitcast float* %1859 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1860, i32 0, i32 1, i32 1)
  %1861 = getelementptr inbounds float, float* %1815, i64 96
  %1862 = bitcast float* %1861 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1862, i32 0, i32 1, i32 1)
  %1863 = getelementptr inbounds float, float* %1818, i64 96
  %1864 = bitcast float* %1863 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1864, i32 0, i32 1, i32 1)
  %1865 = bitcast float* %1815 to <8 x float>*
  %1866 = load <8 x float>, <8 x float>* %1865, align 1, !tbaa !12
  %1867 = or i64 %1814, 8
  %1868 = getelementptr inbounds float, float* %5, i64 %1867
  %1869 = bitcast float* %1868 to <8 x float>*
  %1870 = load <8 x float>, <8 x float>* %1869, align 1, !tbaa !12
  %1871 = or i64 %1814, 16
  %1872 = getelementptr inbounds float, float* %5, i64 %1871
  %1873 = bitcast float* %1872 to <8 x float>*
  %1874 = load <8 x float>, <8 x float>* %1873, align 1, !tbaa !12
  %1875 = or i64 %1814, 24
  %1876 = getelementptr inbounds float, float* %5, i64 %1875
  %1877 = bitcast float* %1876 to <8 x float>*
  %1878 = load <8 x float>, <8 x float>* %1877, align 1, !tbaa !12
  %1879 = add nuw nsw i64 %1814, 32
  %1880 = getelementptr inbounds float, float* %5, i64 %1879
  %1881 = bitcast float* %1880 to <8 x float>*
  %1882 = load <8 x float>, <8 x float>* %1881, align 1, !tbaa !12
  %1883 = add nuw nsw i64 %1814, 40
  %1884 = getelementptr inbounds float, float* %5, i64 %1883
  %1885 = bitcast float* %1884 to <8 x float>*
  %1886 = load <8 x float>, <8 x float>* %1885, align 1, !tbaa !12
  %1887 = add nuw nsw i64 %1814, 48
  %1888 = getelementptr inbounds float, float* %5, i64 %1887
  %1889 = bitcast float* %1888 to <8 x float>*
  %1890 = load <8 x float>, <8 x float>* %1889, align 1, !tbaa !12
  %1891 = add nuw nsw i64 %1814, 56
  %1892 = getelementptr inbounds float, float* %5, i64 %1891
  %1893 = bitcast float* %1892 to <8 x float>*
  %1894 = load <8 x float>, <8 x float>* %1893, align 1, !tbaa !12
  %1895 = add nuw nsw i64 %1814, 64
  %1896 = getelementptr inbounds float, float* %5, i64 %1895
  %1897 = bitcast float* %1896 to <8 x float>*
  %1898 = load <8 x float>, <8 x float>* %1897, align 1, !tbaa !12
  %1899 = add nuw nsw i64 %1814, 72
  %1900 = getelementptr inbounds float, float* %5, i64 %1899
  %1901 = bitcast float* %1900 to <8 x float>*
  %1902 = load <8 x float>, <8 x float>* %1901, align 1, !tbaa !12
  %1903 = add nuw nsw i64 %1814, 80
  %1904 = getelementptr inbounds float, float* %5, i64 %1903
  %1905 = bitcast float* %1904 to <8 x float>*
  %1906 = load <8 x float>, <8 x float>* %1905, align 1, !tbaa !12
  %1907 = add nuw nsw i64 %1814, 88
  %1908 = getelementptr inbounds float, float* %5, i64 %1907
  %1909 = bitcast float* %1908 to <8 x float>*
  %1910 = load <8 x float>, <8 x float>* %1909, align 1, !tbaa !12
  %1911 = add nsw i64 %1814, %1632
  %1912 = getelementptr inbounds float, float* %3, i64 %1911
  %1913 = bitcast float* %1912 to <8 x float>*
  %1914 = load <8 x float>, <8 x float>* %1913, align 1, !tbaa !12
  %1915 = add nsw i64 %1911, 8
  %1916 = getelementptr inbounds float, float* %3, i64 %1915
  %1917 = bitcast float* %1916 to <8 x float>*
  %1918 = load <8 x float>, <8 x float>* %1917, align 1, !tbaa !12
  %1919 = add nsw i64 %1911, 16
  %1920 = getelementptr inbounds float, float* %3, i64 %1919
  %1921 = bitcast float* %1920 to <8 x float>*
  %1922 = load <8 x float>, <8 x float>* %1921, align 1, !tbaa !12
  %1923 = add nsw i64 %1911, 24
  %1924 = getelementptr inbounds float, float* %3, i64 %1923
  %1925 = bitcast float* %1924 to <8 x float>*
  %1926 = load <8 x float>, <8 x float>* %1925, align 1, !tbaa !12
  %1927 = add nsw i64 %1911, 32
  %1928 = getelementptr inbounds float, float* %3, i64 %1927
  %1929 = bitcast float* %1928 to <8 x float>*
  %1930 = load <8 x float>, <8 x float>* %1929, align 1, !tbaa !12
  %1931 = add nsw i64 %1911, 40
  %1932 = getelementptr inbounds float, float* %3, i64 %1931
  %1933 = bitcast float* %1932 to <8 x float>*
  %1934 = load <8 x float>, <8 x float>* %1933, align 1, !tbaa !12
  %1935 = add nsw i64 %1911, 48
  %1936 = getelementptr inbounds float, float* %3, i64 %1935
  %1937 = bitcast float* %1936 to <8 x float>*
  %1938 = load <8 x float>, <8 x float>* %1937, align 1, !tbaa !12
  %1939 = add nsw i64 %1911, 56
  %1940 = getelementptr inbounds float, float* %3, i64 %1939
  %1941 = bitcast float* %1940 to <8 x float>*
  %1942 = load <8 x float>, <8 x float>* %1941, align 1, !tbaa !12
  %1943 = add nsw i64 %1911, 64
  %1944 = getelementptr inbounds float, float* %3, i64 %1943
  %1945 = bitcast float* %1944 to <8 x float>*
  %1946 = load <8 x float>, <8 x float>* %1945, align 1, !tbaa !12
  %1947 = add nsw i64 %1911, 72
  %1948 = getelementptr inbounds float, float* %3, i64 %1947
  %1949 = bitcast float* %1948 to <8 x float>*
  %1950 = load <8 x float>, <8 x float>* %1949, align 1, !tbaa !12
  %1951 = add nsw i64 %1911, 80
  %1952 = getelementptr inbounds float, float* %3, i64 %1951
  %1953 = bitcast float* %1952 to <8 x float>*
  %1954 = load <8 x float>, <8 x float>* %1953, align 1, !tbaa !12
  %1955 = add nsw i64 %1911, 88
  %1956 = getelementptr inbounds float, float* %3, i64 %1955
  %1957 = bitcast float* %1956 to <8 x float>*
  %1958 = load <8 x float>, <8 x float>* %1957, align 1, !tbaa !12
  %1959 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1914, <8 x float> %75, <8 x float> %1866) #10
  %1960 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1918, <8 x float> %75, <8 x float> %1870) #10
  %1961 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1922, <8 x float> %75, <8 x float> %1874) #10
  %1962 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1926, <8 x float> %75, <8 x float> %1878) #10
  %1963 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1930, <8 x float> %75, <8 x float> %1882) #10
  %1964 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1934, <8 x float> %75, <8 x float> %1886) #10
  %1965 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1938, <8 x float> %75, <8 x float> %1890) #10
  %1966 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1942, <8 x float> %75, <8 x float> %1894) #10
  %1967 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1946, <8 x float> %75, <8 x float> %1898) #10
  %1968 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1950, <8 x float> %75, <8 x float> %1902) #10
  %1969 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1954, <8 x float> %75, <8 x float> %1906) #10
  %1970 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1958, <8 x float> %75, <8 x float> %1910) #10
  store <8 x float> %1959, <8 x float>* %1865, align 1, !tbaa !12
  store <8 x float> %1960, <8 x float>* %1869, align 1, !tbaa !12
  store <8 x float> %1961, <8 x float>* %1873, align 1, !tbaa !12
  store <8 x float> %1962, <8 x float>* %1877, align 1, !tbaa !12
  store <8 x float> %1963, <8 x float>* %1881, align 1, !tbaa !12
  store <8 x float> %1964, <8 x float>* %1885, align 1, !tbaa !12
  store <8 x float> %1965, <8 x float>* %1889, align 1, !tbaa !12
  store <8 x float> %1966, <8 x float>* %1893, align 1, !tbaa !12
  store <8 x float> %1967, <8 x float>* %1897, align 1, !tbaa !12
  store <8 x float> %1968, <8 x float>* %1901, align 1, !tbaa !12
  store <8 x float> %1969, <8 x float>* %1905, align 1, !tbaa !12
  store <8 x float> %1970, <8 x float>* %1909, align 1, !tbaa !12
  %1971 = add nuw nsw i64 %1814, 96
  %1972 = icmp ult i64 %1971, %1633
  br i1 %1972, label %1813, label %1807

1973:                                             ; preds = %1980, %1628, %1807
  %1974 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1975 = icmp sgt i32 %1974, 0
  br i1 %1975, label %1976, label %2140

1976:                                             ; preds = %1973
  %1977 = zext i32 %1974 to i64
  %1978 = trunc i64 %81 to i32
  %1979 = mul nsw i32 %1974, %1978
  br label %2145

1980:                                             ; preds = %1808, %1980
  %1981 = phi i64 [ 0, %1808 ], [ %2138, %1980 ]
  %1982 = getelementptr inbounds float, float* %5, i64 %1981
  %1983 = getelementptr inbounds float, float* %1982, i64 8
  %1984 = bitcast float* %1983 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1984, i32 0, i32 1, i32 1)
  %1985 = getelementptr inbounds float, float* %3, i64 %1981
  %1986 = getelementptr inbounds float, float* %1985, i64 8
  %1987 = bitcast float* %1986 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1987, i32 0, i32 1, i32 1)
  %1988 = getelementptr inbounds float, float* %1982, i64 16
  %1989 = bitcast float* %1988 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1989, i32 0, i32 1, i32 1)
  %1990 = getelementptr inbounds float, float* %1985, i64 16
  %1991 = bitcast float* %1990 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1991, i32 0, i32 1, i32 1)
  %1992 = getelementptr inbounds float, float* %1982, i64 24
  %1993 = bitcast float* %1992 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1993, i32 0, i32 1, i32 1)
  %1994 = getelementptr inbounds float, float* %1985, i64 24
  %1995 = bitcast float* %1994 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1995, i32 0, i32 1, i32 1)
  %1996 = getelementptr inbounds float, float* %1982, i64 32
  %1997 = bitcast float* %1996 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1997, i32 0, i32 1, i32 1)
  %1998 = getelementptr inbounds float, float* %1985, i64 32
  %1999 = bitcast float* %1998 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1999, i32 0, i32 1, i32 1)
  %2000 = getelementptr inbounds float, float* %1982, i64 40
  %2001 = bitcast float* %2000 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2001, i32 0, i32 1, i32 1)
  %2002 = getelementptr inbounds float, float* %1985, i64 40
  %2003 = bitcast float* %2002 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2003, i32 0, i32 1, i32 1)
  %2004 = getelementptr inbounds float, float* %1982, i64 48
  %2005 = bitcast float* %2004 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2005, i32 0, i32 1, i32 1)
  %2006 = getelementptr inbounds float, float* %1985, i64 48
  %2007 = bitcast float* %2006 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2007, i32 0, i32 1, i32 1)
  %2008 = getelementptr inbounds float, float* %1982, i64 56
  %2009 = bitcast float* %2008 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2009, i32 0, i32 1, i32 1)
  %2010 = getelementptr inbounds float, float* %1985, i64 56
  %2011 = bitcast float* %2010 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2011, i32 0, i32 1, i32 1)
  %2012 = getelementptr inbounds float, float* %1982, i64 64
  %2013 = bitcast float* %2012 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2013, i32 0, i32 1, i32 1)
  %2014 = getelementptr inbounds float, float* %1985, i64 64
  %2015 = bitcast float* %2014 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2015, i32 0, i32 1, i32 1)
  %2016 = getelementptr inbounds float, float* %1982, i64 72
  %2017 = bitcast float* %2016 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2017, i32 0, i32 1, i32 1)
  %2018 = getelementptr inbounds float, float* %1985, i64 72
  %2019 = bitcast float* %2018 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2019, i32 0, i32 1, i32 1)
  %2020 = getelementptr inbounds float, float* %1982, i64 80
  %2021 = bitcast float* %2020 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2021, i32 0, i32 1, i32 1)
  %2022 = getelementptr inbounds float, float* %1985, i64 80
  %2023 = bitcast float* %2022 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2023, i32 0, i32 1, i32 1)
  %2024 = getelementptr inbounds float, float* %1982, i64 88
  %2025 = bitcast float* %2024 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2025, i32 0, i32 1, i32 1)
  %2026 = getelementptr inbounds float, float* %1985, i64 88
  %2027 = bitcast float* %2026 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2027, i32 0, i32 1, i32 1)
  %2028 = getelementptr inbounds float, float* %1982, i64 96
  %2029 = bitcast float* %2028 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2029, i32 0, i32 1, i32 1)
  %2030 = getelementptr inbounds float, float* %1985, i64 96
  %2031 = bitcast float* %2030 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2031, i32 0, i32 1, i32 1)
  %2032 = bitcast float* %1982 to <8 x float>*
  %2033 = load <8 x float>, <8 x float>* %2032, align 1, !tbaa !12
  %2034 = or i64 %1981, 8
  %2035 = getelementptr inbounds float, float* %5, i64 %2034
  %2036 = bitcast float* %2035 to <8 x float>*
  %2037 = load <8 x float>, <8 x float>* %2036, align 1, !tbaa !12
  %2038 = or i64 %1981, 16
  %2039 = getelementptr inbounds float, float* %5, i64 %2038
  %2040 = bitcast float* %2039 to <8 x float>*
  %2041 = load <8 x float>, <8 x float>* %2040, align 1, !tbaa !12
  %2042 = or i64 %1981, 24
  %2043 = getelementptr inbounds float, float* %5, i64 %2042
  %2044 = bitcast float* %2043 to <8 x float>*
  %2045 = load <8 x float>, <8 x float>* %2044, align 1, !tbaa !12
  %2046 = add nuw nsw i64 %1981, 32
  %2047 = getelementptr inbounds float, float* %5, i64 %2046
  %2048 = bitcast float* %2047 to <8 x float>*
  %2049 = load <8 x float>, <8 x float>* %2048, align 1, !tbaa !12
  %2050 = add nuw nsw i64 %1981, 40
  %2051 = getelementptr inbounds float, float* %5, i64 %2050
  %2052 = bitcast float* %2051 to <8 x float>*
  %2053 = load <8 x float>, <8 x float>* %2052, align 1, !tbaa !12
  %2054 = add nuw nsw i64 %1981, 48
  %2055 = getelementptr inbounds float, float* %5, i64 %2054
  %2056 = bitcast float* %2055 to <8 x float>*
  %2057 = load <8 x float>, <8 x float>* %2056, align 1, !tbaa !12
  %2058 = add nuw nsw i64 %1981, 56
  %2059 = getelementptr inbounds float, float* %5, i64 %2058
  %2060 = bitcast float* %2059 to <8 x float>*
  %2061 = load <8 x float>, <8 x float>* %2060, align 1, !tbaa !12
  %2062 = add nuw nsw i64 %1981, 64
  %2063 = getelementptr inbounds float, float* %5, i64 %2062
  %2064 = bitcast float* %2063 to <8 x float>*
  %2065 = load <8 x float>, <8 x float>* %2064, align 1, !tbaa !12
  %2066 = add nuw nsw i64 %1981, 72
  %2067 = getelementptr inbounds float, float* %5, i64 %2066
  %2068 = bitcast float* %2067 to <8 x float>*
  %2069 = load <8 x float>, <8 x float>* %2068, align 1, !tbaa !12
  %2070 = add nuw nsw i64 %1981, 80
  %2071 = getelementptr inbounds float, float* %5, i64 %2070
  %2072 = bitcast float* %2071 to <8 x float>*
  %2073 = load <8 x float>, <8 x float>* %2072, align 1, !tbaa !12
  %2074 = add nuw nsw i64 %1981, 88
  %2075 = getelementptr inbounds float, float* %5, i64 %2074
  %2076 = bitcast float* %2075 to <8 x float>*
  %2077 = load <8 x float>, <8 x float>* %2076, align 1, !tbaa !12
  %2078 = add nsw i64 %1981, %1811
  %2079 = getelementptr inbounds float, float* %3, i64 %2078
  %2080 = bitcast float* %2079 to <8 x float>*
  %2081 = load <8 x float>, <8 x float>* %2080, align 1, !tbaa !12
  %2082 = add nsw i64 %2078, 8
  %2083 = getelementptr inbounds float, float* %3, i64 %2082
  %2084 = bitcast float* %2083 to <8 x float>*
  %2085 = load <8 x float>, <8 x float>* %2084, align 1, !tbaa !12
  %2086 = add nsw i64 %2078, 16
  %2087 = getelementptr inbounds float, float* %3, i64 %2086
  %2088 = bitcast float* %2087 to <8 x float>*
  %2089 = load <8 x float>, <8 x float>* %2088, align 1, !tbaa !12
  %2090 = add nsw i64 %2078, 24
  %2091 = getelementptr inbounds float, float* %3, i64 %2090
  %2092 = bitcast float* %2091 to <8 x float>*
  %2093 = load <8 x float>, <8 x float>* %2092, align 1, !tbaa !12
  %2094 = add nsw i64 %2078, 32
  %2095 = getelementptr inbounds float, float* %3, i64 %2094
  %2096 = bitcast float* %2095 to <8 x float>*
  %2097 = load <8 x float>, <8 x float>* %2096, align 1, !tbaa !12
  %2098 = add nsw i64 %2078, 40
  %2099 = getelementptr inbounds float, float* %3, i64 %2098
  %2100 = bitcast float* %2099 to <8 x float>*
  %2101 = load <8 x float>, <8 x float>* %2100, align 1, !tbaa !12
  %2102 = add nsw i64 %2078, 48
  %2103 = getelementptr inbounds float, float* %3, i64 %2102
  %2104 = bitcast float* %2103 to <8 x float>*
  %2105 = load <8 x float>, <8 x float>* %2104, align 1, !tbaa !12
  %2106 = add nsw i64 %2078, 56
  %2107 = getelementptr inbounds float, float* %3, i64 %2106
  %2108 = bitcast float* %2107 to <8 x float>*
  %2109 = load <8 x float>, <8 x float>* %2108, align 1, !tbaa !12
  %2110 = add nsw i64 %2078, 64
  %2111 = getelementptr inbounds float, float* %3, i64 %2110
  %2112 = bitcast float* %2111 to <8 x float>*
  %2113 = load <8 x float>, <8 x float>* %2112, align 1, !tbaa !12
  %2114 = add nsw i64 %2078, 72
  %2115 = getelementptr inbounds float, float* %3, i64 %2114
  %2116 = bitcast float* %2115 to <8 x float>*
  %2117 = load <8 x float>, <8 x float>* %2116, align 1, !tbaa !12
  %2118 = add nsw i64 %2078, 80
  %2119 = getelementptr inbounds float, float* %3, i64 %2118
  %2120 = bitcast float* %2119 to <8 x float>*
  %2121 = load <8 x float>, <8 x float>* %2120, align 1, !tbaa !12
  %2122 = add nsw i64 %2078, 88
  %2123 = getelementptr inbounds float, float* %3, i64 %2122
  %2124 = bitcast float* %2123 to <8 x float>*
  %2125 = load <8 x float>, <8 x float>* %2124, align 1, !tbaa !12
  %2126 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2081, <8 x float> %80, <8 x float> %2033) #10
  %2127 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2085, <8 x float> %80, <8 x float> %2037) #10
  %2128 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2089, <8 x float> %80, <8 x float> %2041) #10
  %2129 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2093, <8 x float> %80, <8 x float> %2045) #10
  %2130 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2097, <8 x float> %80, <8 x float> %2049) #10
  %2131 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2101, <8 x float> %80, <8 x float> %2053) #10
  %2132 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2105, <8 x float> %80, <8 x float> %2057) #10
  %2133 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2109, <8 x float> %80, <8 x float> %2061) #10
  %2134 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2113, <8 x float> %80, <8 x float> %2065) #10
  %2135 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2117, <8 x float> %80, <8 x float> %2069) #10
  %2136 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2121, <8 x float> %80, <8 x float> %2073) #10
  %2137 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2125, <8 x float> %80, <8 x float> %2077) #10
  store <8 x float> %2126, <8 x float>* %2032, align 1, !tbaa !12
  store <8 x float> %2127, <8 x float>* %2036, align 1, !tbaa !12
  store <8 x float> %2128, <8 x float>* %2040, align 1, !tbaa !12
  store <8 x float> %2129, <8 x float>* %2044, align 1, !tbaa !12
  store <8 x float> %2130, <8 x float>* %2048, align 1, !tbaa !12
  store <8 x float> %2131, <8 x float>* %2052, align 1, !tbaa !12
  store <8 x float> %2132, <8 x float>* %2056, align 1, !tbaa !12
  store <8 x float> %2133, <8 x float>* %2060, align 1, !tbaa !12
  store <8 x float> %2134, <8 x float>* %2064, align 1, !tbaa !12
  store <8 x float> %2135, <8 x float>* %2068, align 1, !tbaa !12
  store <8 x float> %2136, <8 x float>* %2072, align 1, !tbaa !12
  store <8 x float> %2137, <8 x float>* %2076, align 1, !tbaa !12
  %2138 = add nuw nsw i64 %1981, 96
  %2139 = icmp ult i64 %2138, %1812
  br i1 %2139, label %1980, label %1973

2140:                                             ; preds = %2145, %437, %20, %949, %1461, %1973
  %2141 = add nuw nsw i64 %21, 13
  %2142 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %2143 = sext i32 %2142 to i64
  %2144 = icmp slt i64 %2141, %2143
  br i1 %2144, label %20, label %8

2145:                                             ; preds = %1976, %2145
  %2146 = phi i64 [ 0, %1976 ], [ %2316, %2145 ]
  %2147 = getelementptr inbounds float, float* %5, i64 %2146
  %2148 = getelementptr inbounds float, float* %2147, i64 8
  %2149 = bitcast float* %2148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2149, i32 0, i32 1, i32 1)
  %2150 = getelementptr inbounds float, float* %3, i64 %2146
  %2151 = getelementptr inbounds float, float* %2150, i64 8
  %2152 = bitcast float* %2151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2152, i32 0, i32 1, i32 1)
  %2153 = getelementptr inbounds float, float* %2147, i64 16
  %2154 = bitcast float* %2153 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2154, i32 0, i32 1, i32 1)
  %2155 = getelementptr inbounds float, float* %2150, i64 16
  %2156 = bitcast float* %2155 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2156, i32 0, i32 1, i32 1)
  %2157 = getelementptr inbounds float, float* %2147, i64 24
  %2158 = bitcast float* %2157 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2158, i32 0, i32 1, i32 1)
  %2159 = getelementptr inbounds float, float* %2150, i64 24
  %2160 = bitcast float* %2159 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2160, i32 0, i32 1, i32 1)
  %2161 = getelementptr inbounds float, float* %2147, i64 32
  %2162 = bitcast float* %2161 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2162, i32 0, i32 1, i32 1)
  %2163 = getelementptr inbounds float, float* %2150, i64 32
  %2164 = bitcast float* %2163 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2164, i32 0, i32 1, i32 1)
  %2165 = getelementptr inbounds float, float* %2147, i64 40
  %2166 = bitcast float* %2165 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2166, i32 0, i32 1, i32 1)
  %2167 = getelementptr inbounds float, float* %2150, i64 40
  %2168 = bitcast float* %2167 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2168, i32 0, i32 1, i32 1)
  %2169 = getelementptr inbounds float, float* %2147, i64 48
  %2170 = bitcast float* %2169 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2170, i32 0, i32 1, i32 1)
  %2171 = getelementptr inbounds float, float* %2150, i64 48
  %2172 = bitcast float* %2171 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2172, i32 0, i32 1, i32 1)
  %2173 = getelementptr inbounds float, float* %2147, i64 56
  %2174 = bitcast float* %2173 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2174, i32 0, i32 1, i32 1)
  %2175 = getelementptr inbounds float, float* %2150, i64 56
  %2176 = bitcast float* %2175 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2176, i32 0, i32 1, i32 1)
  %2177 = getelementptr inbounds float, float* %2147, i64 64
  %2178 = bitcast float* %2177 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2178, i32 0, i32 1, i32 1)
  %2179 = getelementptr inbounds float, float* %2150, i64 64
  %2180 = bitcast float* %2179 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2180, i32 0, i32 1, i32 1)
  %2181 = getelementptr inbounds float, float* %2147, i64 72
  %2182 = bitcast float* %2181 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2182, i32 0, i32 1, i32 1)
  %2183 = getelementptr inbounds float, float* %2150, i64 72
  %2184 = bitcast float* %2183 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2184, i32 0, i32 1, i32 1)
  %2185 = getelementptr inbounds float, float* %2147, i64 80
  %2186 = bitcast float* %2185 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2186, i32 0, i32 1, i32 1)
  %2187 = getelementptr inbounds float, float* %2150, i64 80
  %2188 = bitcast float* %2187 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2188, i32 0, i32 1, i32 1)
  %2189 = getelementptr inbounds float, float* %2147, i64 88
  %2190 = bitcast float* %2189 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2190, i32 0, i32 1, i32 1)
  %2191 = getelementptr inbounds float, float* %2150, i64 88
  %2192 = bitcast float* %2191 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2192, i32 0, i32 1, i32 1)
  %2193 = getelementptr inbounds float, float* %2147, i64 96
  %2194 = bitcast float* %2193 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2194, i32 0, i32 1, i32 1)
  %2195 = getelementptr inbounds float, float* %2150, i64 96
  %2196 = bitcast float* %2195 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2196, i32 0, i32 1, i32 1)
  %2197 = bitcast float* %2147 to <8 x float>*
  %2198 = load <8 x float>, <8 x float>* %2197, align 1, !tbaa !12
  %2199 = or i64 %2146, 8
  %2200 = getelementptr inbounds float, float* %5, i64 %2199
  %2201 = bitcast float* %2200 to <8 x float>*
  %2202 = load <8 x float>, <8 x float>* %2201, align 1, !tbaa !12
  %2203 = or i64 %2146, 16
  %2204 = getelementptr inbounds float, float* %5, i64 %2203
  %2205 = bitcast float* %2204 to <8 x float>*
  %2206 = load <8 x float>, <8 x float>* %2205, align 1, !tbaa !12
  %2207 = or i64 %2146, 24
  %2208 = getelementptr inbounds float, float* %5, i64 %2207
  %2209 = bitcast float* %2208 to <8 x float>*
  %2210 = load <8 x float>, <8 x float>* %2209, align 1, !tbaa !12
  %2211 = add nuw nsw i64 %2146, 32
  %2212 = getelementptr inbounds float, float* %5, i64 %2211
  %2213 = bitcast float* %2212 to <8 x float>*
  %2214 = load <8 x float>, <8 x float>* %2213, align 1, !tbaa !12
  %2215 = add nuw nsw i64 %2146, 40
  %2216 = getelementptr inbounds float, float* %5, i64 %2215
  %2217 = bitcast float* %2216 to <8 x float>*
  %2218 = load <8 x float>, <8 x float>* %2217, align 1, !tbaa !12
  %2219 = add nuw nsw i64 %2146, 48
  %2220 = getelementptr inbounds float, float* %5, i64 %2219
  %2221 = bitcast float* %2220 to <8 x float>*
  %2222 = load <8 x float>, <8 x float>* %2221, align 1, !tbaa !12
  %2223 = add nuw nsw i64 %2146, 56
  %2224 = getelementptr inbounds float, float* %5, i64 %2223
  %2225 = bitcast float* %2224 to <8 x float>*
  %2226 = load <8 x float>, <8 x float>* %2225, align 1, !tbaa !12
  %2227 = add nuw nsw i64 %2146, 64
  %2228 = getelementptr inbounds float, float* %5, i64 %2227
  %2229 = bitcast float* %2228 to <8 x float>*
  %2230 = load <8 x float>, <8 x float>* %2229, align 1, !tbaa !12
  %2231 = add nuw nsw i64 %2146, 72
  %2232 = getelementptr inbounds float, float* %5, i64 %2231
  %2233 = bitcast float* %2232 to <8 x float>*
  %2234 = load <8 x float>, <8 x float>* %2233, align 1, !tbaa !12
  %2235 = add nuw nsw i64 %2146, 80
  %2236 = getelementptr inbounds float, float* %5, i64 %2235
  %2237 = bitcast float* %2236 to <8 x float>*
  %2238 = load <8 x float>, <8 x float>* %2237, align 1, !tbaa !12
  %2239 = add nuw nsw i64 %2146, 88
  %2240 = getelementptr inbounds float, float* %5, i64 %2239
  %2241 = bitcast float* %2240 to <8 x float>*
  %2242 = load <8 x float>, <8 x float>* %2241, align 1, !tbaa !12
  %2243 = trunc i64 %2146 to i32
  %2244 = add nsw i32 %1979, %2243
  %2245 = sext i32 %2244 to i64
  %2246 = getelementptr inbounds float, float* %3, i64 %2245
  %2247 = bitcast float* %2246 to <8 x float>*
  %2248 = load <8 x float>, <8 x float>* %2247, align 1, !tbaa !12
  %2249 = add nsw i32 %2244, 8
  %2250 = sext i32 %2249 to i64
  %2251 = getelementptr inbounds float, float* %3, i64 %2250
  %2252 = bitcast float* %2251 to <8 x float>*
  %2253 = load <8 x float>, <8 x float>* %2252, align 1, !tbaa !12
  %2254 = add nsw i32 %2244, 16
  %2255 = sext i32 %2254 to i64
  %2256 = getelementptr inbounds float, float* %3, i64 %2255
  %2257 = bitcast float* %2256 to <8 x float>*
  %2258 = load <8 x float>, <8 x float>* %2257, align 1, !tbaa !12
  %2259 = add nsw i32 %2244, 24
  %2260 = sext i32 %2259 to i64
  %2261 = getelementptr inbounds float, float* %3, i64 %2260
  %2262 = bitcast float* %2261 to <8 x float>*
  %2263 = load <8 x float>, <8 x float>* %2262, align 1, !tbaa !12
  %2264 = add nsw i32 %2244, 32
  %2265 = sext i32 %2264 to i64
  %2266 = getelementptr inbounds float, float* %3, i64 %2265
  %2267 = bitcast float* %2266 to <8 x float>*
  %2268 = load <8 x float>, <8 x float>* %2267, align 1, !tbaa !12
  %2269 = add nsw i32 %2244, 40
  %2270 = sext i32 %2269 to i64
  %2271 = getelementptr inbounds float, float* %3, i64 %2270
  %2272 = bitcast float* %2271 to <8 x float>*
  %2273 = load <8 x float>, <8 x float>* %2272, align 1, !tbaa !12
  %2274 = add nsw i32 %2244, 48
  %2275 = sext i32 %2274 to i64
  %2276 = getelementptr inbounds float, float* %3, i64 %2275
  %2277 = bitcast float* %2276 to <8 x float>*
  %2278 = load <8 x float>, <8 x float>* %2277, align 1, !tbaa !12
  %2279 = add nsw i32 %2244, 56
  %2280 = sext i32 %2279 to i64
  %2281 = getelementptr inbounds float, float* %3, i64 %2280
  %2282 = bitcast float* %2281 to <8 x float>*
  %2283 = load <8 x float>, <8 x float>* %2282, align 1, !tbaa !12
  %2284 = add nsw i32 %2244, 64
  %2285 = sext i32 %2284 to i64
  %2286 = getelementptr inbounds float, float* %3, i64 %2285
  %2287 = bitcast float* %2286 to <8 x float>*
  %2288 = load <8 x float>, <8 x float>* %2287, align 1, !tbaa !12
  %2289 = add nsw i32 %2244, 72
  %2290 = sext i32 %2289 to i64
  %2291 = getelementptr inbounds float, float* %3, i64 %2290
  %2292 = bitcast float* %2291 to <8 x float>*
  %2293 = load <8 x float>, <8 x float>* %2292, align 1, !tbaa !12
  %2294 = add nsw i32 %2244, 80
  %2295 = sext i32 %2294 to i64
  %2296 = getelementptr inbounds float, float* %3, i64 %2295
  %2297 = bitcast float* %2296 to <8 x float>*
  %2298 = load <8 x float>, <8 x float>* %2297, align 1, !tbaa !12
  %2299 = add nsw i32 %2244, 88
  %2300 = sext i32 %2299 to i64
  %2301 = getelementptr inbounds float, float* %3, i64 %2300
  %2302 = bitcast float* %2301 to <8 x float>*
  %2303 = load <8 x float>, <8 x float>* %2302, align 1, !tbaa !12
  %2304 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2248, <8 x float> %85, <8 x float> %2198) #10
  %2305 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2253, <8 x float> %85, <8 x float> %2202) #10
  %2306 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2258, <8 x float> %85, <8 x float> %2206) #10
  %2307 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2263, <8 x float> %85, <8 x float> %2210) #10
  %2308 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2268, <8 x float> %85, <8 x float> %2214) #10
  %2309 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2273, <8 x float> %85, <8 x float> %2218) #10
  %2310 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2278, <8 x float> %85, <8 x float> %2222) #10
  %2311 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2283, <8 x float> %85, <8 x float> %2226) #10
  %2312 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2288, <8 x float> %85, <8 x float> %2230) #10
  %2313 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2293, <8 x float> %85, <8 x float> %2234) #10
  %2314 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2298, <8 x float> %85, <8 x float> %2238) #10
  %2315 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2303, <8 x float> %85, <8 x float> %2242) #10
  store <8 x float> %2304, <8 x float>* %2197, align 1, !tbaa !12
  store <8 x float> %2305, <8 x float>* %2201, align 1, !tbaa !12
  store <8 x float> %2306, <8 x float>* %2205, align 1, !tbaa !12
  store <8 x float> %2307, <8 x float>* %2209, align 1, !tbaa !12
  store <8 x float> %2308, <8 x float>* %2213, align 1, !tbaa !12
  store <8 x float> %2309, <8 x float>* %2217, align 1, !tbaa !12
  store <8 x float> %2310, <8 x float>* %2221, align 1, !tbaa !12
  store <8 x float> %2311, <8 x float>* %2225, align 1, !tbaa !12
  store <8 x float> %2312, <8 x float>* %2229, align 1, !tbaa !12
  store <8 x float> %2313, <8 x float>* %2233, align 1, !tbaa !12
  store <8 x float> %2314, <8 x float>* %2237, align 1, !tbaa !12
  store <8 x float> %2315, <8 x float>* %2241, align 1, !tbaa !12
  %2316 = add nuw nsw i64 %2146, 96
  %2317 = icmp ult i64 %2316, %1977
  br i1 %2317, label %2145, label %2140
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 325
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui12_uk13.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
