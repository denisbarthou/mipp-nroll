; ModuleID = 'codes/matvec_ui14_uk11.cpp'
source_filename = "codes/matvec_ui14_uk11.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui14_uk11.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 112
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 88
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %2065, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %2065
  %21 = phi i64 [ %2066, %2065 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %77 = icmp sgt i32 %76, 0
  br i1 %77, label %78, label %2065

78:                                               ; preds = %20
  %79 = zext i32 %76 to i64
  %80 = trunc i64 %21 to i32
  %81 = mul nsw i32 %76, %80
  br label %88

82:                                               ; preds = %88
  br i1 %77, label %83, label %481

83:                                               ; preds = %82
  %84 = trunc i64 %26 to i32
  %85 = mul nsw i32 %76, %84
  %86 = sext i32 %85 to i64
  %87 = zext i32 %76 to i64
  br label %295

88:                                               ; preds = %78, %88
  %89 = phi i64 [ 0, %78 ], [ %287, %88 ]
  %90 = getelementptr inbounds float, float* %5, i64 %89
  %91 = getelementptr inbounds float, float* %90, i64 8
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %3, i64 %89
  %94 = getelementptr inbounds float, float* %93, i64 8
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %90, i64 16
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %93, i64 16
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %90, i64 24
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %93, i64 24
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %90, i64 32
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %93, i64 32
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %90, i64 40
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %93, i64 40
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %90, i64 48
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %93, i64 48
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %90, i64 56
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %93, i64 56
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %90, i64 64
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %93, i64 64
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %90, i64 72
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %93, i64 72
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %90, i64 80
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %93, i64 80
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %90, i64 88
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %93, i64 88
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %90, i64 96
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = getelementptr inbounds float, float* %93, i64 96
  %139 = bitcast float* %138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %139, i32 0, i32 1, i32 1)
  %140 = getelementptr inbounds float, float* %90, i64 104
  %141 = bitcast float* %140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %141, i32 0, i32 1, i32 1)
  %142 = getelementptr inbounds float, float* %93, i64 104
  %143 = bitcast float* %142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %143, i32 0, i32 1, i32 1)
  %144 = getelementptr inbounds float, float* %90, i64 112
  %145 = bitcast float* %144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %145, i32 0, i32 1, i32 1)
  %146 = getelementptr inbounds float, float* %93, i64 112
  %147 = bitcast float* %146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %147, i32 0, i32 1, i32 1)
  %148 = bitcast float* %90 to <8 x float>*
  %149 = load <8 x float>, <8 x float>* %148, align 1, !tbaa !12
  %150 = or i64 %89, 8
  %151 = getelementptr inbounds float, float* %5, i64 %150
  %152 = bitcast float* %151 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = add nuw nsw i64 %89, 16
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nuw nsw i64 %89, 24
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = add nuw nsw i64 %89, 32
  %163 = getelementptr inbounds float, float* %5, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = add nuw nsw i64 %89, 40
  %167 = getelementptr inbounds float, float* %5, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = add nuw nsw i64 %89, 48
  %171 = getelementptr inbounds float, float* %5, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = add nuw nsw i64 %89, 56
  %175 = getelementptr inbounds float, float* %5, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nuw nsw i64 %89, 64
  %179 = getelementptr inbounds float, float* %5, i64 %178
  %180 = bitcast float* %179 to <8 x float>*
  %181 = load <8 x float>, <8 x float>* %180, align 1, !tbaa !12
  %182 = add nuw nsw i64 %89, 72
  %183 = getelementptr inbounds float, float* %5, i64 %182
  %184 = bitcast float* %183 to <8 x float>*
  %185 = load <8 x float>, <8 x float>* %184, align 1, !tbaa !12
  %186 = add nuw nsw i64 %89, 80
  %187 = getelementptr inbounds float, float* %5, i64 %186
  %188 = bitcast float* %187 to <8 x float>*
  %189 = load <8 x float>, <8 x float>* %188, align 1, !tbaa !12
  %190 = add nuw nsw i64 %89, 88
  %191 = getelementptr inbounds float, float* %5, i64 %190
  %192 = bitcast float* %191 to <8 x float>*
  %193 = load <8 x float>, <8 x float>* %192, align 1, !tbaa !12
  %194 = add nuw nsw i64 %89, 96
  %195 = getelementptr inbounds float, float* %5, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = add nuw nsw i64 %89, 104
  %199 = getelementptr inbounds float, float* %5, i64 %198
  %200 = bitcast float* %199 to <8 x float>*
  %201 = load <8 x float>, <8 x float>* %200, align 1, !tbaa !12
  %202 = trunc i64 %89 to i32
  %203 = add nsw i32 %81, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = add nsw i32 %203, 8
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nsw i32 %203, 16
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %3, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %217 = load <8 x float>, <8 x float>* %216, align 1, !tbaa !12
  %218 = add nsw i32 %203, 24
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %3, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %222 = load <8 x float>, <8 x float>* %221, align 1, !tbaa !12
  %223 = add nsw i32 %203, 32
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %3, i64 %224
  %226 = bitcast float* %225 to <8 x float>*
  %227 = load <8 x float>, <8 x float>* %226, align 1, !tbaa !12
  %228 = add nsw i32 %203, 40
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float, float* %3, i64 %229
  %231 = bitcast float* %230 to <8 x float>*
  %232 = load <8 x float>, <8 x float>* %231, align 1, !tbaa !12
  %233 = add nsw i32 %203, 48
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float, float* %3, i64 %234
  %236 = bitcast float* %235 to <8 x float>*
  %237 = load <8 x float>, <8 x float>* %236, align 1, !tbaa !12
  %238 = add nsw i32 %203, 56
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float, float* %3, i64 %239
  %241 = bitcast float* %240 to <8 x float>*
  %242 = load <8 x float>, <8 x float>* %241, align 1, !tbaa !12
  %243 = add nsw i32 %203, 64
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %3, i64 %244
  %246 = bitcast float* %245 to <8 x float>*
  %247 = load <8 x float>, <8 x float>* %246, align 1, !tbaa !12
  %248 = add nsw i32 %203, 72
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds float, float* %3, i64 %249
  %251 = bitcast float* %250 to <8 x float>*
  %252 = load <8 x float>, <8 x float>* %251, align 1, !tbaa !12
  %253 = add nsw i32 %203, 80
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %3, i64 %254
  %256 = bitcast float* %255 to <8 x float>*
  %257 = load <8 x float>, <8 x float>* %256, align 1, !tbaa !12
  %258 = add nsw i32 %203, 88
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds float, float* %3, i64 %259
  %261 = bitcast float* %260 to <8 x float>*
  %262 = load <8 x float>, <8 x float>* %261, align 1, !tbaa !12
  %263 = add nsw i32 %203, 96
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds float, float* %3, i64 %264
  %266 = bitcast float* %265 to <8 x float>*
  %267 = load <8 x float>, <8 x float>* %266, align 1, !tbaa !12
  %268 = add nsw i32 %203, 104
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds float, float* %3, i64 %269
  %271 = bitcast float* %270 to <8 x float>*
  %272 = load <8 x float>, <8 x float>* %271, align 1, !tbaa !12
  %273 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %149) #10
  %274 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %153) #10
  %275 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %217, <8 x float> %25, <8 x float> %157) #10
  %276 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %222, <8 x float> %25, <8 x float> %161) #10
  %277 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %227, <8 x float> %25, <8 x float> %165) #10
  %278 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %232, <8 x float> %25, <8 x float> %169) #10
  %279 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %237, <8 x float> %25, <8 x float> %173) #10
  %280 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %242, <8 x float> %25, <8 x float> %177) #10
  %281 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %247, <8 x float> %25, <8 x float> %181) #10
  %282 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %252, <8 x float> %25, <8 x float> %185) #10
  %283 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %257, <8 x float> %25, <8 x float> %189) #10
  %284 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %262, <8 x float> %25, <8 x float> %193) #10
  %285 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %267, <8 x float> %25, <8 x float> %197) #10
  %286 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %272, <8 x float> %25, <8 x float> %201) #10
  store <8 x float> %273, <8 x float>* %148, align 1, !tbaa !12
  store <8 x float> %274, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %275, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %276, <8 x float>* %160, align 1, !tbaa !12
  store <8 x float> %277, <8 x float>* %164, align 1, !tbaa !12
  store <8 x float> %278, <8 x float>* %168, align 1, !tbaa !12
  store <8 x float> %279, <8 x float>* %172, align 1, !tbaa !12
  store <8 x float> %280, <8 x float>* %176, align 1, !tbaa !12
  store <8 x float> %281, <8 x float>* %180, align 1, !tbaa !12
  store <8 x float> %282, <8 x float>* %184, align 1, !tbaa !12
  store <8 x float> %283, <8 x float>* %188, align 1, !tbaa !12
  store <8 x float> %284, <8 x float>* %192, align 1, !tbaa !12
  store <8 x float> %285, <8 x float>* %196, align 1, !tbaa !12
  store <8 x float> %286, <8 x float>* %200, align 1, !tbaa !12
  %287 = add nuw nsw i64 %89, 112
  %288 = icmp ult i64 %287, %79
  br i1 %288, label %88, label %82

289:                                              ; preds = %295
  br i1 %77, label %290, label %481

290:                                              ; preds = %289
  %291 = trunc i64 %31 to i32
  %292 = mul nsw i32 %76, %291
  %293 = sext i32 %292 to i64
  %294 = zext i32 %76 to i64
  br label %488

295:                                              ; preds = %83, %295
  %296 = phi i64 [ 0, %83 ], [ %479, %295 ]
  %297 = getelementptr inbounds float, float* %5, i64 %296
  %298 = getelementptr inbounds float, float* %297, i64 8
  %299 = bitcast float* %298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %299, i32 0, i32 1, i32 1)
  %300 = getelementptr inbounds float, float* %3, i64 %296
  %301 = getelementptr inbounds float, float* %300, i64 8
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = getelementptr inbounds float, float* %297, i64 16
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %300, i64 16
  %306 = bitcast float* %305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %306, i32 0, i32 1, i32 1)
  %307 = getelementptr inbounds float, float* %297, i64 24
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %300, i64 24
  %310 = bitcast float* %309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %310, i32 0, i32 1, i32 1)
  %311 = getelementptr inbounds float, float* %297, i64 32
  %312 = bitcast float* %311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %312, i32 0, i32 1, i32 1)
  %313 = getelementptr inbounds float, float* %300, i64 32
  %314 = bitcast float* %313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %314, i32 0, i32 1, i32 1)
  %315 = getelementptr inbounds float, float* %297, i64 40
  %316 = bitcast float* %315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %316, i32 0, i32 1, i32 1)
  %317 = getelementptr inbounds float, float* %300, i64 40
  %318 = bitcast float* %317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %318, i32 0, i32 1, i32 1)
  %319 = getelementptr inbounds float, float* %297, i64 48
  %320 = bitcast float* %319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %320, i32 0, i32 1, i32 1)
  %321 = getelementptr inbounds float, float* %300, i64 48
  %322 = bitcast float* %321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %322, i32 0, i32 1, i32 1)
  %323 = getelementptr inbounds float, float* %297, i64 56
  %324 = bitcast float* %323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %324, i32 0, i32 1, i32 1)
  %325 = getelementptr inbounds float, float* %300, i64 56
  %326 = bitcast float* %325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %326, i32 0, i32 1, i32 1)
  %327 = getelementptr inbounds float, float* %297, i64 64
  %328 = bitcast float* %327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %328, i32 0, i32 1, i32 1)
  %329 = getelementptr inbounds float, float* %300, i64 64
  %330 = bitcast float* %329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %330, i32 0, i32 1, i32 1)
  %331 = getelementptr inbounds float, float* %297, i64 72
  %332 = bitcast float* %331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %332, i32 0, i32 1, i32 1)
  %333 = getelementptr inbounds float, float* %300, i64 72
  %334 = bitcast float* %333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %334, i32 0, i32 1, i32 1)
  %335 = getelementptr inbounds float, float* %297, i64 80
  %336 = bitcast float* %335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %336, i32 0, i32 1, i32 1)
  %337 = getelementptr inbounds float, float* %300, i64 80
  %338 = bitcast float* %337 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %338, i32 0, i32 1, i32 1)
  %339 = getelementptr inbounds float, float* %297, i64 88
  %340 = bitcast float* %339 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %340, i32 0, i32 1, i32 1)
  %341 = getelementptr inbounds float, float* %300, i64 88
  %342 = bitcast float* %341 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %342, i32 0, i32 1, i32 1)
  %343 = getelementptr inbounds float, float* %297, i64 96
  %344 = bitcast float* %343 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %344, i32 0, i32 1, i32 1)
  %345 = getelementptr inbounds float, float* %300, i64 96
  %346 = bitcast float* %345 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %346, i32 0, i32 1, i32 1)
  %347 = getelementptr inbounds float, float* %297, i64 104
  %348 = bitcast float* %347 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %348, i32 0, i32 1, i32 1)
  %349 = getelementptr inbounds float, float* %300, i64 104
  %350 = bitcast float* %349 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %350, i32 0, i32 1, i32 1)
  %351 = getelementptr inbounds float, float* %297, i64 112
  %352 = bitcast float* %351 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %352, i32 0, i32 1, i32 1)
  %353 = getelementptr inbounds float, float* %300, i64 112
  %354 = bitcast float* %353 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %354, i32 0, i32 1, i32 1)
  %355 = bitcast float* %297 to <8 x float>*
  %356 = load <8 x float>, <8 x float>* %355, align 1, !tbaa !12
  %357 = or i64 %296, 8
  %358 = getelementptr inbounds float, float* %5, i64 %357
  %359 = bitcast float* %358 to <8 x float>*
  %360 = load <8 x float>, <8 x float>* %359, align 1, !tbaa !12
  %361 = add nuw nsw i64 %296, 16
  %362 = getelementptr inbounds float, float* %5, i64 %361
  %363 = bitcast float* %362 to <8 x float>*
  %364 = load <8 x float>, <8 x float>* %363, align 1, !tbaa !12
  %365 = add nuw nsw i64 %296, 24
  %366 = getelementptr inbounds float, float* %5, i64 %365
  %367 = bitcast float* %366 to <8 x float>*
  %368 = load <8 x float>, <8 x float>* %367, align 1, !tbaa !12
  %369 = add nuw nsw i64 %296, 32
  %370 = getelementptr inbounds float, float* %5, i64 %369
  %371 = bitcast float* %370 to <8 x float>*
  %372 = load <8 x float>, <8 x float>* %371, align 1, !tbaa !12
  %373 = add nuw nsw i64 %296, 40
  %374 = getelementptr inbounds float, float* %5, i64 %373
  %375 = bitcast float* %374 to <8 x float>*
  %376 = load <8 x float>, <8 x float>* %375, align 1, !tbaa !12
  %377 = add nuw nsw i64 %296, 48
  %378 = getelementptr inbounds float, float* %5, i64 %377
  %379 = bitcast float* %378 to <8 x float>*
  %380 = load <8 x float>, <8 x float>* %379, align 1, !tbaa !12
  %381 = add nuw nsw i64 %296, 56
  %382 = getelementptr inbounds float, float* %5, i64 %381
  %383 = bitcast float* %382 to <8 x float>*
  %384 = load <8 x float>, <8 x float>* %383, align 1, !tbaa !12
  %385 = add nuw nsw i64 %296, 64
  %386 = getelementptr inbounds float, float* %5, i64 %385
  %387 = bitcast float* %386 to <8 x float>*
  %388 = load <8 x float>, <8 x float>* %387, align 1, !tbaa !12
  %389 = add nuw nsw i64 %296, 72
  %390 = getelementptr inbounds float, float* %5, i64 %389
  %391 = bitcast float* %390 to <8 x float>*
  %392 = load <8 x float>, <8 x float>* %391, align 1, !tbaa !12
  %393 = add nuw nsw i64 %296, 80
  %394 = getelementptr inbounds float, float* %5, i64 %393
  %395 = bitcast float* %394 to <8 x float>*
  %396 = load <8 x float>, <8 x float>* %395, align 1, !tbaa !12
  %397 = add nuw nsw i64 %296, 88
  %398 = getelementptr inbounds float, float* %5, i64 %397
  %399 = bitcast float* %398 to <8 x float>*
  %400 = load <8 x float>, <8 x float>* %399, align 1, !tbaa !12
  %401 = add nuw nsw i64 %296, 96
  %402 = getelementptr inbounds float, float* %5, i64 %401
  %403 = bitcast float* %402 to <8 x float>*
  %404 = load <8 x float>, <8 x float>* %403, align 1, !tbaa !12
  %405 = add nuw nsw i64 %296, 104
  %406 = getelementptr inbounds float, float* %5, i64 %405
  %407 = bitcast float* %406 to <8 x float>*
  %408 = load <8 x float>, <8 x float>* %407, align 1, !tbaa !12
  %409 = add nsw i64 %296, %86
  %410 = getelementptr inbounds float, float* %3, i64 %409
  %411 = bitcast float* %410 to <8 x float>*
  %412 = load <8 x float>, <8 x float>* %411, align 1, !tbaa !12
  %413 = add nsw i64 %409, 8
  %414 = getelementptr inbounds float, float* %3, i64 %413
  %415 = bitcast float* %414 to <8 x float>*
  %416 = load <8 x float>, <8 x float>* %415, align 1, !tbaa !12
  %417 = add nsw i64 %409, 16
  %418 = getelementptr inbounds float, float* %3, i64 %417
  %419 = bitcast float* %418 to <8 x float>*
  %420 = load <8 x float>, <8 x float>* %419, align 1, !tbaa !12
  %421 = add nsw i64 %409, 24
  %422 = getelementptr inbounds float, float* %3, i64 %421
  %423 = bitcast float* %422 to <8 x float>*
  %424 = load <8 x float>, <8 x float>* %423, align 1, !tbaa !12
  %425 = add nsw i64 %409, 32
  %426 = getelementptr inbounds float, float* %3, i64 %425
  %427 = bitcast float* %426 to <8 x float>*
  %428 = load <8 x float>, <8 x float>* %427, align 1, !tbaa !12
  %429 = add nsw i64 %409, 40
  %430 = getelementptr inbounds float, float* %3, i64 %429
  %431 = bitcast float* %430 to <8 x float>*
  %432 = load <8 x float>, <8 x float>* %431, align 1, !tbaa !12
  %433 = add nsw i64 %409, 48
  %434 = getelementptr inbounds float, float* %3, i64 %433
  %435 = bitcast float* %434 to <8 x float>*
  %436 = load <8 x float>, <8 x float>* %435, align 1, !tbaa !12
  %437 = add nsw i64 %409, 56
  %438 = getelementptr inbounds float, float* %3, i64 %437
  %439 = bitcast float* %438 to <8 x float>*
  %440 = load <8 x float>, <8 x float>* %439, align 1, !tbaa !12
  %441 = add nsw i64 %409, 64
  %442 = getelementptr inbounds float, float* %3, i64 %441
  %443 = bitcast float* %442 to <8 x float>*
  %444 = load <8 x float>, <8 x float>* %443, align 1, !tbaa !12
  %445 = add nsw i64 %409, 72
  %446 = getelementptr inbounds float, float* %3, i64 %445
  %447 = bitcast float* %446 to <8 x float>*
  %448 = load <8 x float>, <8 x float>* %447, align 1, !tbaa !12
  %449 = add nsw i64 %409, 80
  %450 = getelementptr inbounds float, float* %3, i64 %449
  %451 = bitcast float* %450 to <8 x float>*
  %452 = load <8 x float>, <8 x float>* %451, align 1, !tbaa !12
  %453 = add nsw i64 %409, 88
  %454 = getelementptr inbounds float, float* %3, i64 %453
  %455 = bitcast float* %454 to <8 x float>*
  %456 = load <8 x float>, <8 x float>* %455, align 1, !tbaa !12
  %457 = add nsw i64 %409, 96
  %458 = getelementptr inbounds float, float* %3, i64 %457
  %459 = bitcast float* %458 to <8 x float>*
  %460 = load <8 x float>, <8 x float>* %459, align 1, !tbaa !12
  %461 = add nsw i64 %409, 104
  %462 = getelementptr inbounds float, float* %3, i64 %461
  %463 = bitcast float* %462 to <8 x float>*
  %464 = load <8 x float>, <8 x float>* %463, align 1, !tbaa !12
  %465 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %412, <8 x float> %30, <8 x float> %356) #10
  %466 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %416, <8 x float> %30, <8 x float> %360) #10
  %467 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %420, <8 x float> %30, <8 x float> %364) #10
  %468 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %424, <8 x float> %30, <8 x float> %368) #10
  %469 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %428, <8 x float> %30, <8 x float> %372) #10
  %470 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %432, <8 x float> %30, <8 x float> %376) #10
  %471 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %436, <8 x float> %30, <8 x float> %380) #10
  %472 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %440, <8 x float> %30, <8 x float> %384) #10
  %473 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %444, <8 x float> %30, <8 x float> %388) #10
  %474 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %448, <8 x float> %30, <8 x float> %392) #10
  %475 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %452, <8 x float> %30, <8 x float> %396) #10
  %476 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %456, <8 x float> %30, <8 x float> %400) #10
  %477 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %460, <8 x float> %30, <8 x float> %404) #10
  %478 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %464, <8 x float> %30, <8 x float> %408) #10
  store <8 x float> %465, <8 x float>* %355, align 1, !tbaa !12
  store <8 x float> %466, <8 x float>* %359, align 1, !tbaa !12
  store <8 x float> %467, <8 x float>* %363, align 1, !tbaa !12
  store <8 x float> %468, <8 x float>* %367, align 1, !tbaa !12
  store <8 x float> %469, <8 x float>* %371, align 1, !tbaa !12
  store <8 x float> %470, <8 x float>* %375, align 1, !tbaa !12
  store <8 x float> %471, <8 x float>* %379, align 1, !tbaa !12
  store <8 x float> %472, <8 x float>* %383, align 1, !tbaa !12
  store <8 x float> %473, <8 x float>* %387, align 1, !tbaa !12
  store <8 x float> %474, <8 x float>* %391, align 1, !tbaa !12
  store <8 x float> %475, <8 x float>* %395, align 1, !tbaa !12
  store <8 x float> %476, <8 x float>* %399, align 1, !tbaa !12
  store <8 x float> %477, <8 x float>* %403, align 1, !tbaa !12
  store <8 x float> %478, <8 x float>* %407, align 1, !tbaa !12
  %479 = add nuw nsw i64 %296, 112
  %480 = icmp ult i64 %479, %87
  br i1 %480, label %295, label %289

481:                                              ; preds = %488, %82, %289
  %482 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %483 = icmp sgt i32 %482, 0
  br i1 %483, label %484, label %2065

484:                                              ; preds = %481
  %485 = zext i32 %482 to i64
  %486 = trunc i64 %36 to i32
  %487 = mul nsw i32 %482, %486
  br label %680

488:                                              ; preds = %290, %488
  %489 = phi i64 [ 0, %290 ], [ %672, %488 ]
  %490 = getelementptr inbounds float, float* %5, i64 %489
  %491 = getelementptr inbounds float, float* %490, i64 8
  %492 = bitcast float* %491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %492, i32 0, i32 1, i32 1)
  %493 = getelementptr inbounds float, float* %3, i64 %489
  %494 = getelementptr inbounds float, float* %493, i64 8
  %495 = bitcast float* %494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %495, i32 0, i32 1, i32 1)
  %496 = getelementptr inbounds float, float* %490, i64 16
  %497 = bitcast float* %496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %497, i32 0, i32 1, i32 1)
  %498 = getelementptr inbounds float, float* %493, i64 16
  %499 = bitcast float* %498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %499, i32 0, i32 1, i32 1)
  %500 = getelementptr inbounds float, float* %490, i64 24
  %501 = bitcast float* %500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %501, i32 0, i32 1, i32 1)
  %502 = getelementptr inbounds float, float* %493, i64 24
  %503 = bitcast float* %502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %503, i32 0, i32 1, i32 1)
  %504 = getelementptr inbounds float, float* %490, i64 32
  %505 = bitcast float* %504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %505, i32 0, i32 1, i32 1)
  %506 = getelementptr inbounds float, float* %493, i64 32
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %490, i64 40
  %509 = bitcast float* %508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %509, i32 0, i32 1, i32 1)
  %510 = getelementptr inbounds float, float* %493, i64 40
  %511 = bitcast float* %510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %511, i32 0, i32 1, i32 1)
  %512 = getelementptr inbounds float, float* %490, i64 48
  %513 = bitcast float* %512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %513, i32 0, i32 1, i32 1)
  %514 = getelementptr inbounds float, float* %493, i64 48
  %515 = bitcast float* %514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %515, i32 0, i32 1, i32 1)
  %516 = getelementptr inbounds float, float* %490, i64 56
  %517 = bitcast float* %516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %517, i32 0, i32 1, i32 1)
  %518 = getelementptr inbounds float, float* %493, i64 56
  %519 = bitcast float* %518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %519, i32 0, i32 1, i32 1)
  %520 = getelementptr inbounds float, float* %490, i64 64
  %521 = bitcast float* %520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %521, i32 0, i32 1, i32 1)
  %522 = getelementptr inbounds float, float* %493, i64 64
  %523 = bitcast float* %522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %523, i32 0, i32 1, i32 1)
  %524 = getelementptr inbounds float, float* %490, i64 72
  %525 = bitcast float* %524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %525, i32 0, i32 1, i32 1)
  %526 = getelementptr inbounds float, float* %493, i64 72
  %527 = bitcast float* %526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %527, i32 0, i32 1, i32 1)
  %528 = getelementptr inbounds float, float* %490, i64 80
  %529 = bitcast float* %528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %529, i32 0, i32 1, i32 1)
  %530 = getelementptr inbounds float, float* %493, i64 80
  %531 = bitcast float* %530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %531, i32 0, i32 1, i32 1)
  %532 = getelementptr inbounds float, float* %490, i64 88
  %533 = bitcast float* %532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %533, i32 0, i32 1, i32 1)
  %534 = getelementptr inbounds float, float* %493, i64 88
  %535 = bitcast float* %534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %535, i32 0, i32 1, i32 1)
  %536 = getelementptr inbounds float, float* %490, i64 96
  %537 = bitcast float* %536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %537, i32 0, i32 1, i32 1)
  %538 = getelementptr inbounds float, float* %493, i64 96
  %539 = bitcast float* %538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %539, i32 0, i32 1, i32 1)
  %540 = getelementptr inbounds float, float* %490, i64 104
  %541 = bitcast float* %540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %541, i32 0, i32 1, i32 1)
  %542 = getelementptr inbounds float, float* %493, i64 104
  %543 = bitcast float* %542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %543, i32 0, i32 1, i32 1)
  %544 = getelementptr inbounds float, float* %490, i64 112
  %545 = bitcast float* %544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %545, i32 0, i32 1, i32 1)
  %546 = getelementptr inbounds float, float* %493, i64 112
  %547 = bitcast float* %546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %547, i32 0, i32 1, i32 1)
  %548 = bitcast float* %490 to <8 x float>*
  %549 = load <8 x float>, <8 x float>* %548, align 1, !tbaa !12
  %550 = or i64 %489, 8
  %551 = getelementptr inbounds float, float* %5, i64 %550
  %552 = bitcast float* %551 to <8 x float>*
  %553 = load <8 x float>, <8 x float>* %552, align 1, !tbaa !12
  %554 = add nuw nsw i64 %489, 16
  %555 = getelementptr inbounds float, float* %5, i64 %554
  %556 = bitcast float* %555 to <8 x float>*
  %557 = load <8 x float>, <8 x float>* %556, align 1, !tbaa !12
  %558 = add nuw nsw i64 %489, 24
  %559 = getelementptr inbounds float, float* %5, i64 %558
  %560 = bitcast float* %559 to <8 x float>*
  %561 = load <8 x float>, <8 x float>* %560, align 1, !tbaa !12
  %562 = add nuw nsw i64 %489, 32
  %563 = getelementptr inbounds float, float* %5, i64 %562
  %564 = bitcast float* %563 to <8 x float>*
  %565 = load <8 x float>, <8 x float>* %564, align 1, !tbaa !12
  %566 = add nuw nsw i64 %489, 40
  %567 = getelementptr inbounds float, float* %5, i64 %566
  %568 = bitcast float* %567 to <8 x float>*
  %569 = load <8 x float>, <8 x float>* %568, align 1, !tbaa !12
  %570 = add nuw nsw i64 %489, 48
  %571 = getelementptr inbounds float, float* %5, i64 %570
  %572 = bitcast float* %571 to <8 x float>*
  %573 = load <8 x float>, <8 x float>* %572, align 1, !tbaa !12
  %574 = add nuw nsw i64 %489, 56
  %575 = getelementptr inbounds float, float* %5, i64 %574
  %576 = bitcast float* %575 to <8 x float>*
  %577 = load <8 x float>, <8 x float>* %576, align 1, !tbaa !12
  %578 = add nuw nsw i64 %489, 64
  %579 = getelementptr inbounds float, float* %5, i64 %578
  %580 = bitcast float* %579 to <8 x float>*
  %581 = load <8 x float>, <8 x float>* %580, align 1, !tbaa !12
  %582 = add nuw nsw i64 %489, 72
  %583 = getelementptr inbounds float, float* %5, i64 %582
  %584 = bitcast float* %583 to <8 x float>*
  %585 = load <8 x float>, <8 x float>* %584, align 1, !tbaa !12
  %586 = add nuw nsw i64 %489, 80
  %587 = getelementptr inbounds float, float* %5, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %589 = load <8 x float>, <8 x float>* %588, align 1, !tbaa !12
  %590 = add nuw nsw i64 %489, 88
  %591 = getelementptr inbounds float, float* %5, i64 %590
  %592 = bitcast float* %591 to <8 x float>*
  %593 = load <8 x float>, <8 x float>* %592, align 1, !tbaa !12
  %594 = add nuw nsw i64 %489, 96
  %595 = getelementptr inbounds float, float* %5, i64 %594
  %596 = bitcast float* %595 to <8 x float>*
  %597 = load <8 x float>, <8 x float>* %596, align 1, !tbaa !12
  %598 = add nuw nsw i64 %489, 104
  %599 = getelementptr inbounds float, float* %5, i64 %598
  %600 = bitcast float* %599 to <8 x float>*
  %601 = load <8 x float>, <8 x float>* %600, align 1, !tbaa !12
  %602 = add nsw i64 %489, %293
  %603 = getelementptr inbounds float, float* %3, i64 %602
  %604 = bitcast float* %603 to <8 x float>*
  %605 = load <8 x float>, <8 x float>* %604, align 1, !tbaa !12
  %606 = add nsw i64 %602, 8
  %607 = getelementptr inbounds float, float* %3, i64 %606
  %608 = bitcast float* %607 to <8 x float>*
  %609 = load <8 x float>, <8 x float>* %608, align 1, !tbaa !12
  %610 = add nsw i64 %602, 16
  %611 = getelementptr inbounds float, float* %3, i64 %610
  %612 = bitcast float* %611 to <8 x float>*
  %613 = load <8 x float>, <8 x float>* %612, align 1, !tbaa !12
  %614 = add nsw i64 %602, 24
  %615 = getelementptr inbounds float, float* %3, i64 %614
  %616 = bitcast float* %615 to <8 x float>*
  %617 = load <8 x float>, <8 x float>* %616, align 1, !tbaa !12
  %618 = add nsw i64 %602, 32
  %619 = getelementptr inbounds float, float* %3, i64 %618
  %620 = bitcast float* %619 to <8 x float>*
  %621 = load <8 x float>, <8 x float>* %620, align 1, !tbaa !12
  %622 = add nsw i64 %602, 40
  %623 = getelementptr inbounds float, float* %3, i64 %622
  %624 = bitcast float* %623 to <8 x float>*
  %625 = load <8 x float>, <8 x float>* %624, align 1, !tbaa !12
  %626 = add nsw i64 %602, 48
  %627 = getelementptr inbounds float, float* %3, i64 %626
  %628 = bitcast float* %627 to <8 x float>*
  %629 = load <8 x float>, <8 x float>* %628, align 1, !tbaa !12
  %630 = add nsw i64 %602, 56
  %631 = getelementptr inbounds float, float* %3, i64 %630
  %632 = bitcast float* %631 to <8 x float>*
  %633 = load <8 x float>, <8 x float>* %632, align 1, !tbaa !12
  %634 = add nsw i64 %602, 64
  %635 = getelementptr inbounds float, float* %3, i64 %634
  %636 = bitcast float* %635 to <8 x float>*
  %637 = load <8 x float>, <8 x float>* %636, align 1, !tbaa !12
  %638 = add nsw i64 %602, 72
  %639 = getelementptr inbounds float, float* %3, i64 %638
  %640 = bitcast float* %639 to <8 x float>*
  %641 = load <8 x float>, <8 x float>* %640, align 1, !tbaa !12
  %642 = add nsw i64 %602, 80
  %643 = getelementptr inbounds float, float* %3, i64 %642
  %644 = bitcast float* %643 to <8 x float>*
  %645 = load <8 x float>, <8 x float>* %644, align 1, !tbaa !12
  %646 = add nsw i64 %602, 88
  %647 = getelementptr inbounds float, float* %3, i64 %646
  %648 = bitcast float* %647 to <8 x float>*
  %649 = load <8 x float>, <8 x float>* %648, align 1, !tbaa !12
  %650 = add nsw i64 %602, 96
  %651 = getelementptr inbounds float, float* %3, i64 %650
  %652 = bitcast float* %651 to <8 x float>*
  %653 = load <8 x float>, <8 x float>* %652, align 1, !tbaa !12
  %654 = add nsw i64 %602, 104
  %655 = getelementptr inbounds float, float* %3, i64 %654
  %656 = bitcast float* %655 to <8 x float>*
  %657 = load <8 x float>, <8 x float>* %656, align 1, !tbaa !12
  %658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %605, <8 x float> %35, <8 x float> %549) #10
  %659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %609, <8 x float> %35, <8 x float> %553) #10
  %660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %613, <8 x float> %35, <8 x float> %557) #10
  %661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %617, <8 x float> %35, <8 x float> %561) #10
  %662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %621, <8 x float> %35, <8 x float> %565) #10
  %663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %625, <8 x float> %35, <8 x float> %569) #10
  %664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %629, <8 x float> %35, <8 x float> %573) #10
  %665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %633, <8 x float> %35, <8 x float> %577) #10
  %666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %637, <8 x float> %35, <8 x float> %581) #10
  %667 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %641, <8 x float> %35, <8 x float> %585) #10
  %668 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %645, <8 x float> %35, <8 x float> %589) #10
  %669 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %649, <8 x float> %35, <8 x float> %593) #10
  %670 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %653, <8 x float> %35, <8 x float> %597) #10
  %671 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %657, <8 x float> %35, <8 x float> %601) #10
  store <8 x float> %658, <8 x float>* %548, align 1, !tbaa !12
  store <8 x float> %659, <8 x float>* %552, align 1, !tbaa !12
  store <8 x float> %660, <8 x float>* %556, align 1, !tbaa !12
  store <8 x float> %661, <8 x float>* %560, align 1, !tbaa !12
  store <8 x float> %662, <8 x float>* %564, align 1, !tbaa !12
  store <8 x float> %663, <8 x float>* %568, align 1, !tbaa !12
  store <8 x float> %664, <8 x float>* %572, align 1, !tbaa !12
  store <8 x float> %665, <8 x float>* %576, align 1, !tbaa !12
  store <8 x float> %666, <8 x float>* %580, align 1, !tbaa !12
  store <8 x float> %667, <8 x float>* %584, align 1, !tbaa !12
  store <8 x float> %668, <8 x float>* %588, align 1, !tbaa !12
  store <8 x float> %669, <8 x float>* %592, align 1, !tbaa !12
  store <8 x float> %670, <8 x float>* %596, align 1, !tbaa !12
  store <8 x float> %671, <8 x float>* %600, align 1, !tbaa !12
  %672 = add nuw nsw i64 %489, 112
  %673 = icmp ult i64 %672, %294
  br i1 %673, label %488, label %481

674:                                              ; preds = %680
  br i1 %483, label %675, label %1073

675:                                              ; preds = %674
  %676 = trunc i64 %41 to i32
  %677 = mul nsw i32 %482, %676
  %678 = sext i32 %677 to i64
  %679 = zext i32 %482 to i64
  br label %887

680:                                              ; preds = %484, %680
  %681 = phi i64 [ 0, %484 ], [ %879, %680 ]
  %682 = getelementptr inbounds float, float* %5, i64 %681
  %683 = getelementptr inbounds float, float* %682, i64 8
  %684 = bitcast float* %683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %684, i32 0, i32 1, i32 1)
  %685 = getelementptr inbounds float, float* %3, i64 %681
  %686 = getelementptr inbounds float, float* %685, i64 8
  %687 = bitcast float* %686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %687, i32 0, i32 1, i32 1)
  %688 = getelementptr inbounds float, float* %682, i64 16
  %689 = bitcast float* %688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %689, i32 0, i32 1, i32 1)
  %690 = getelementptr inbounds float, float* %685, i64 16
  %691 = bitcast float* %690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %691, i32 0, i32 1, i32 1)
  %692 = getelementptr inbounds float, float* %682, i64 24
  %693 = bitcast float* %692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %693, i32 0, i32 1, i32 1)
  %694 = getelementptr inbounds float, float* %685, i64 24
  %695 = bitcast float* %694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %695, i32 0, i32 1, i32 1)
  %696 = getelementptr inbounds float, float* %682, i64 32
  %697 = bitcast float* %696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %697, i32 0, i32 1, i32 1)
  %698 = getelementptr inbounds float, float* %685, i64 32
  %699 = bitcast float* %698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %699, i32 0, i32 1, i32 1)
  %700 = getelementptr inbounds float, float* %682, i64 40
  %701 = bitcast float* %700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %701, i32 0, i32 1, i32 1)
  %702 = getelementptr inbounds float, float* %685, i64 40
  %703 = bitcast float* %702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %703, i32 0, i32 1, i32 1)
  %704 = getelementptr inbounds float, float* %682, i64 48
  %705 = bitcast float* %704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %705, i32 0, i32 1, i32 1)
  %706 = getelementptr inbounds float, float* %685, i64 48
  %707 = bitcast float* %706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %707, i32 0, i32 1, i32 1)
  %708 = getelementptr inbounds float, float* %682, i64 56
  %709 = bitcast float* %708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %709, i32 0, i32 1, i32 1)
  %710 = getelementptr inbounds float, float* %685, i64 56
  %711 = bitcast float* %710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %711, i32 0, i32 1, i32 1)
  %712 = getelementptr inbounds float, float* %682, i64 64
  %713 = bitcast float* %712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %713, i32 0, i32 1, i32 1)
  %714 = getelementptr inbounds float, float* %685, i64 64
  %715 = bitcast float* %714 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %715, i32 0, i32 1, i32 1)
  %716 = getelementptr inbounds float, float* %682, i64 72
  %717 = bitcast float* %716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %717, i32 0, i32 1, i32 1)
  %718 = getelementptr inbounds float, float* %685, i64 72
  %719 = bitcast float* %718 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %719, i32 0, i32 1, i32 1)
  %720 = getelementptr inbounds float, float* %682, i64 80
  %721 = bitcast float* %720 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %721, i32 0, i32 1, i32 1)
  %722 = getelementptr inbounds float, float* %685, i64 80
  %723 = bitcast float* %722 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %723, i32 0, i32 1, i32 1)
  %724 = getelementptr inbounds float, float* %682, i64 88
  %725 = bitcast float* %724 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %725, i32 0, i32 1, i32 1)
  %726 = getelementptr inbounds float, float* %685, i64 88
  %727 = bitcast float* %726 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %727, i32 0, i32 1, i32 1)
  %728 = getelementptr inbounds float, float* %682, i64 96
  %729 = bitcast float* %728 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %729, i32 0, i32 1, i32 1)
  %730 = getelementptr inbounds float, float* %685, i64 96
  %731 = bitcast float* %730 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %731, i32 0, i32 1, i32 1)
  %732 = getelementptr inbounds float, float* %682, i64 104
  %733 = bitcast float* %732 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %733, i32 0, i32 1, i32 1)
  %734 = getelementptr inbounds float, float* %685, i64 104
  %735 = bitcast float* %734 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %735, i32 0, i32 1, i32 1)
  %736 = getelementptr inbounds float, float* %682, i64 112
  %737 = bitcast float* %736 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %737, i32 0, i32 1, i32 1)
  %738 = getelementptr inbounds float, float* %685, i64 112
  %739 = bitcast float* %738 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %739, i32 0, i32 1, i32 1)
  %740 = bitcast float* %682 to <8 x float>*
  %741 = load <8 x float>, <8 x float>* %740, align 1, !tbaa !12
  %742 = or i64 %681, 8
  %743 = getelementptr inbounds float, float* %5, i64 %742
  %744 = bitcast float* %743 to <8 x float>*
  %745 = load <8 x float>, <8 x float>* %744, align 1, !tbaa !12
  %746 = add nuw nsw i64 %681, 16
  %747 = getelementptr inbounds float, float* %5, i64 %746
  %748 = bitcast float* %747 to <8 x float>*
  %749 = load <8 x float>, <8 x float>* %748, align 1, !tbaa !12
  %750 = add nuw nsw i64 %681, 24
  %751 = getelementptr inbounds float, float* %5, i64 %750
  %752 = bitcast float* %751 to <8 x float>*
  %753 = load <8 x float>, <8 x float>* %752, align 1, !tbaa !12
  %754 = add nuw nsw i64 %681, 32
  %755 = getelementptr inbounds float, float* %5, i64 %754
  %756 = bitcast float* %755 to <8 x float>*
  %757 = load <8 x float>, <8 x float>* %756, align 1, !tbaa !12
  %758 = add nuw nsw i64 %681, 40
  %759 = getelementptr inbounds float, float* %5, i64 %758
  %760 = bitcast float* %759 to <8 x float>*
  %761 = load <8 x float>, <8 x float>* %760, align 1, !tbaa !12
  %762 = add nuw nsw i64 %681, 48
  %763 = getelementptr inbounds float, float* %5, i64 %762
  %764 = bitcast float* %763 to <8 x float>*
  %765 = load <8 x float>, <8 x float>* %764, align 1, !tbaa !12
  %766 = add nuw nsw i64 %681, 56
  %767 = getelementptr inbounds float, float* %5, i64 %766
  %768 = bitcast float* %767 to <8 x float>*
  %769 = load <8 x float>, <8 x float>* %768, align 1, !tbaa !12
  %770 = add nuw nsw i64 %681, 64
  %771 = getelementptr inbounds float, float* %5, i64 %770
  %772 = bitcast float* %771 to <8 x float>*
  %773 = load <8 x float>, <8 x float>* %772, align 1, !tbaa !12
  %774 = add nuw nsw i64 %681, 72
  %775 = getelementptr inbounds float, float* %5, i64 %774
  %776 = bitcast float* %775 to <8 x float>*
  %777 = load <8 x float>, <8 x float>* %776, align 1, !tbaa !12
  %778 = add nuw nsw i64 %681, 80
  %779 = getelementptr inbounds float, float* %5, i64 %778
  %780 = bitcast float* %779 to <8 x float>*
  %781 = load <8 x float>, <8 x float>* %780, align 1, !tbaa !12
  %782 = add nuw nsw i64 %681, 88
  %783 = getelementptr inbounds float, float* %5, i64 %782
  %784 = bitcast float* %783 to <8 x float>*
  %785 = load <8 x float>, <8 x float>* %784, align 1, !tbaa !12
  %786 = add nuw nsw i64 %681, 96
  %787 = getelementptr inbounds float, float* %5, i64 %786
  %788 = bitcast float* %787 to <8 x float>*
  %789 = load <8 x float>, <8 x float>* %788, align 1, !tbaa !12
  %790 = add nuw nsw i64 %681, 104
  %791 = getelementptr inbounds float, float* %5, i64 %790
  %792 = bitcast float* %791 to <8 x float>*
  %793 = load <8 x float>, <8 x float>* %792, align 1, !tbaa !12
  %794 = trunc i64 %681 to i32
  %795 = add nsw i32 %487, %794
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds float, float* %3, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %799 = load <8 x float>, <8 x float>* %798, align 1, !tbaa !12
  %800 = add nsw i32 %795, 8
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds float, float* %3, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nsw i32 %795, 16
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds float, float* %3, i64 %806
  %808 = bitcast float* %807 to <8 x float>*
  %809 = load <8 x float>, <8 x float>* %808, align 1, !tbaa !12
  %810 = add nsw i32 %795, 24
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds float, float* %3, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %814 = load <8 x float>, <8 x float>* %813, align 1, !tbaa !12
  %815 = add nsw i32 %795, 32
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds float, float* %3, i64 %816
  %818 = bitcast float* %817 to <8 x float>*
  %819 = load <8 x float>, <8 x float>* %818, align 1, !tbaa !12
  %820 = add nsw i32 %795, 40
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float, float* %3, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %824 = load <8 x float>, <8 x float>* %823, align 1, !tbaa !12
  %825 = add nsw i32 %795, 48
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds float, float* %3, i64 %826
  %828 = bitcast float* %827 to <8 x float>*
  %829 = load <8 x float>, <8 x float>* %828, align 1, !tbaa !12
  %830 = add nsw i32 %795, 56
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds float, float* %3, i64 %831
  %833 = bitcast float* %832 to <8 x float>*
  %834 = load <8 x float>, <8 x float>* %833, align 1, !tbaa !12
  %835 = add nsw i32 %795, 64
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float, float* %3, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nsw i32 %795, 72
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds float, float* %3, i64 %841
  %843 = bitcast float* %842 to <8 x float>*
  %844 = load <8 x float>, <8 x float>* %843, align 1, !tbaa !12
  %845 = add nsw i32 %795, 80
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds float, float* %3, i64 %846
  %848 = bitcast float* %847 to <8 x float>*
  %849 = load <8 x float>, <8 x float>* %848, align 1, !tbaa !12
  %850 = add nsw i32 %795, 88
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds float, float* %3, i64 %851
  %853 = bitcast float* %852 to <8 x float>*
  %854 = load <8 x float>, <8 x float>* %853, align 1, !tbaa !12
  %855 = add nsw i32 %795, 96
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds float, float* %3, i64 %856
  %858 = bitcast float* %857 to <8 x float>*
  %859 = load <8 x float>, <8 x float>* %858, align 1, !tbaa !12
  %860 = add nsw i32 %795, 104
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds float, float* %3, i64 %861
  %863 = bitcast float* %862 to <8 x float>*
  %864 = load <8 x float>, <8 x float>* %863, align 1, !tbaa !12
  %865 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %799, <8 x float> %40, <8 x float> %741) #10
  %866 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %804, <8 x float> %40, <8 x float> %745) #10
  %867 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %809, <8 x float> %40, <8 x float> %749) #10
  %868 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %814, <8 x float> %40, <8 x float> %753) #10
  %869 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %819, <8 x float> %40, <8 x float> %757) #10
  %870 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %824, <8 x float> %40, <8 x float> %761) #10
  %871 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %829, <8 x float> %40, <8 x float> %765) #10
  %872 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %834, <8 x float> %40, <8 x float> %769) #10
  %873 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %839, <8 x float> %40, <8 x float> %773) #10
  %874 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %844, <8 x float> %40, <8 x float> %777) #10
  %875 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %849, <8 x float> %40, <8 x float> %781) #10
  %876 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %854, <8 x float> %40, <8 x float> %785) #10
  %877 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %859, <8 x float> %40, <8 x float> %789) #10
  %878 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %864, <8 x float> %40, <8 x float> %793) #10
  store <8 x float> %865, <8 x float>* %740, align 1, !tbaa !12
  store <8 x float> %866, <8 x float>* %744, align 1, !tbaa !12
  store <8 x float> %867, <8 x float>* %748, align 1, !tbaa !12
  store <8 x float> %868, <8 x float>* %752, align 1, !tbaa !12
  store <8 x float> %869, <8 x float>* %756, align 1, !tbaa !12
  store <8 x float> %870, <8 x float>* %760, align 1, !tbaa !12
  store <8 x float> %871, <8 x float>* %764, align 1, !tbaa !12
  store <8 x float> %872, <8 x float>* %768, align 1, !tbaa !12
  store <8 x float> %873, <8 x float>* %772, align 1, !tbaa !12
  store <8 x float> %874, <8 x float>* %776, align 1, !tbaa !12
  store <8 x float> %875, <8 x float>* %780, align 1, !tbaa !12
  store <8 x float> %876, <8 x float>* %784, align 1, !tbaa !12
  store <8 x float> %877, <8 x float>* %788, align 1, !tbaa !12
  store <8 x float> %878, <8 x float>* %792, align 1, !tbaa !12
  %879 = add nuw nsw i64 %681, 112
  %880 = icmp ult i64 %879, %485
  br i1 %880, label %680, label %674

881:                                              ; preds = %887
  br i1 %483, label %882, label %1073

882:                                              ; preds = %881
  %883 = trunc i64 %46 to i32
  %884 = mul nsw i32 %482, %883
  %885 = sext i32 %884 to i64
  %886 = zext i32 %482 to i64
  br label %1080

887:                                              ; preds = %675, %887
  %888 = phi i64 [ 0, %675 ], [ %1071, %887 ]
  %889 = getelementptr inbounds float, float* %5, i64 %888
  %890 = getelementptr inbounds float, float* %889, i64 8
  %891 = bitcast float* %890 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %891, i32 0, i32 1, i32 1)
  %892 = getelementptr inbounds float, float* %3, i64 %888
  %893 = getelementptr inbounds float, float* %892, i64 8
  %894 = bitcast float* %893 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %894, i32 0, i32 1, i32 1)
  %895 = getelementptr inbounds float, float* %889, i64 16
  %896 = bitcast float* %895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %896, i32 0, i32 1, i32 1)
  %897 = getelementptr inbounds float, float* %892, i64 16
  %898 = bitcast float* %897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %898, i32 0, i32 1, i32 1)
  %899 = getelementptr inbounds float, float* %889, i64 24
  %900 = bitcast float* %899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %900, i32 0, i32 1, i32 1)
  %901 = getelementptr inbounds float, float* %892, i64 24
  %902 = bitcast float* %901 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %902, i32 0, i32 1, i32 1)
  %903 = getelementptr inbounds float, float* %889, i64 32
  %904 = bitcast float* %903 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %904, i32 0, i32 1, i32 1)
  %905 = getelementptr inbounds float, float* %892, i64 32
  %906 = bitcast float* %905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %906, i32 0, i32 1, i32 1)
  %907 = getelementptr inbounds float, float* %889, i64 40
  %908 = bitcast float* %907 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %908, i32 0, i32 1, i32 1)
  %909 = getelementptr inbounds float, float* %892, i64 40
  %910 = bitcast float* %909 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %910, i32 0, i32 1, i32 1)
  %911 = getelementptr inbounds float, float* %889, i64 48
  %912 = bitcast float* %911 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %912, i32 0, i32 1, i32 1)
  %913 = getelementptr inbounds float, float* %892, i64 48
  %914 = bitcast float* %913 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %914, i32 0, i32 1, i32 1)
  %915 = getelementptr inbounds float, float* %889, i64 56
  %916 = bitcast float* %915 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %916, i32 0, i32 1, i32 1)
  %917 = getelementptr inbounds float, float* %892, i64 56
  %918 = bitcast float* %917 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %918, i32 0, i32 1, i32 1)
  %919 = getelementptr inbounds float, float* %889, i64 64
  %920 = bitcast float* %919 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %920, i32 0, i32 1, i32 1)
  %921 = getelementptr inbounds float, float* %892, i64 64
  %922 = bitcast float* %921 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %922, i32 0, i32 1, i32 1)
  %923 = getelementptr inbounds float, float* %889, i64 72
  %924 = bitcast float* %923 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %924, i32 0, i32 1, i32 1)
  %925 = getelementptr inbounds float, float* %892, i64 72
  %926 = bitcast float* %925 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %926, i32 0, i32 1, i32 1)
  %927 = getelementptr inbounds float, float* %889, i64 80
  %928 = bitcast float* %927 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %928, i32 0, i32 1, i32 1)
  %929 = getelementptr inbounds float, float* %892, i64 80
  %930 = bitcast float* %929 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %930, i32 0, i32 1, i32 1)
  %931 = getelementptr inbounds float, float* %889, i64 88
  %932 = bitcast float* %931 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %932, i32 0, i32 1, i32 1)
  %933 = getelementptr inbounds float, float* %892, i64 88
  %934 = bitcast float* %933 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %934, i32 0, i32 1, i32 1)
  %935 = getelementptr inbounds float, float* %889, i64 96
  %936 = bitcast float* %935 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %936, i32 0, i32 1, i32 1)
  %937 = getelementptr inbounds float, float* %892, i64 96
  %938 = bitcast float* %937 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %938, i32 0, i32 1, i32 1)
  %939 = getelementptr inbounds float, float* %889, i64 104
  %940 = bitcast float* %939 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %940, i32 0, i32 1, i32 1)
  %941 = getelementptr inbounds float, float* %892, i64 104
  %942 = bitcast float* %941 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %942, i32 0, i32 1, i32 1)
  %943 = getelementptr inbounds float, float* %889, i64 112
  %944 = bitcast float* %943 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %944, i32 0, i32 1, i32 1)
  %945 = getelementptr inbounds float, float* %892, i64 112
  %946 = bitcast float* %945 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %946, i32 0, i32 1, i32 1)
  %947 = bitcast float* %889 to <8 x float>*
  %948 = load <8 x float>, <8 x float>* %947, align 1, !tbaa !12
  %949 = or i64 %888, 8
  %950 = getelementptr inbounds float, float* %5, i64 %949
  %951 = bitcast float* %950 to <8 x float>*
  %952 = load <8 x float>, <8 x float>* %951, align 1, !tbaa !12
  %953 = add nuw nsw i64 %888, 16
  %954 = getelementptr inbounds float, float* %5, i64 %953
  %955 = bitcast float* %954 to <8 x float>*
  %956 = load <8 x float>, <8 x float>* %955, align 1, !tbaa !12
  %957 = add nuw nsw i64 %888, 24
  %958 = getelementptr inbounds float, float* %5, i64 %957
  %959 = bitcast float* %958 to <8 x float>*
  %960 = load <8 x float>, <8 x float>* %959, align 1, !tbaa !12
  %961 = add nuw nsw i64 %888, 32
  %962 = getelementptr inbounds float, float* %5, i64 %961
  %963 = bitcast float* %962 to <8 x float>*
  %964 = load <8 x float>, <8 x float>* %963, align 1, !tbaa !12
  %965 = add nuw nsw i64 %888, 40
  %966 = getelementptr inbounds float, float* %5, i64 %965
  %967 = bitcast float* %966 to <8 x float>*
  %968 = load <8 x float>, <8 x float>* %967, align 1, !tbaa !12
  %969 = add nuw nsw i64 %888, 48
  %970 = getelementptr inbounds float, float* %5, i64 %969
  %971 = bitcast float* %970 to <8 x float>*
  %972 = load <8 x float>, <8 x float>* %971, align 1, !tbaa !12
  %973 = add nuw nsw i64 %888, 56
  %974 = getelementptr inbounds float, float* %5, i64 %973
  %975 = bitcast float* %974 to <8 x float>*
  %976 = load <8 x float>, <8 x float>* %975, align 1, !tbaa !12
  %977 = add nuw nsw i64 %888, 64
  %978 = getelementptr inbounds float, float* %5, i64 %977
  %979 = bitcast float* %978 to <8 x float>*
  %980 = load <8 x float>, <8 x float>* %979, align 1, !tbaa !12
  %981 = add nuw nsw i64 %888, 72
  %982 = getelementptr inbounds float, float* %5, i64 %981
  %983 = bitcast float* %982 to <8 x float>*
  %984 = load <8 x float>, <8 x float>* %983, align 1, !tbaa !12
  %985 = add nuw nsw i64 %888, 80
  %986 = getelementptr inbounds float, float* %5, i64 %985
  %987 = bitcast float* %986 to <8 x float>*
  %988 = load <8 x float>, <8 x float>* %987, align 1, !tbaa !12
  %989 = add nuw nsw i64 %888, 88
  %990 = getelementptr inbounds float, float* %5, i64 %989
  %991 = bitcast float* %990 to <8 x float>*
  %992 = load <8 x float>, <8 x float>* %991, align 1, !tbaa !12
  %993 = add nuw nsw i64 %888, 96
  %994 = getelementptr inbounds float, float* %5, i64 %993
  %995 = bitcast float* %994 to <8 x float>*
  %996 = load <8 x float>, <8 x float>* %995, align 1, !tbaa !12
  %997 = add nuw nsw i64 %888, 104
  %998 = getelementptr inbounds float, float* %5, i64 %997
  %999 = bitcast float* %998 to <8 x float>*
  %1000 = load <8 x float>, <8 x float>* %999, align 1, !tbaa !12
  %1001 = add nsw i64 %888, %678
  %1002 = getelementptr inbounds float, float* %3, i64 %1001
  %1003 = bitcast float* %1002 to <8 x float>*
  %1004 = load <8 x float>, <8 x float>* %1003, align 1, !tbaa !12
  %1005 = add nsw i64 %1001, 8
  %1006 = getelementptr inbounds float, float* %3, i64 %1005
  %1007 = bitcast float* %1006 to <8 x float>*
  %1008 = load <8 x float>, <8 x float>* %1007, align 1, !tbaa !12
  %1009 = add nsw i64 %1001, 16
  %1010 = getelementptr inbounds float, float* %3, i64 %1009
  %1011 = bitcast float* %1010 to <8 x float>*
  %1012 = load <8 x float>, <8 x float>* %1011, align 1, !tbaa !12
  %1013 = add nsw i64 %1001, 24
  %1014 = getelementptr inbounds float, float* %3, i64 %1013
  %1015 = bitcast float* %1014 to <8 x float>*
  %1016 = load <8 x float>, <8 x float>* %1015, align 1, !tbaa !12
  %1017 = add nsw i64 %1001, 32
  %1018 = getelementptr inbounds float, float* %3, i64 %1017
  %1019 = bitcast float* %1018 to <8 x float>*
  %1020 = load <8 x float>, <8 x float>* %1019, align 1, !tbaa !12
  %1021 = add nsw i64 %1001, 40
  %1022 = getelementptr inbounds float, float* %3, i64 %1021
  %1023 = bitcast float* %1022 to <8 x float>*
  %1024 = load <8 x float>, <8 x float>* %1023, align 1, !tbaa !12
  %1025 = add nsw i64 %1001, 48
  %1026 = getelementptr inbounds float, float* %3, i64 %1025
  %1027 = bitcast float* %1026 to <8 x float>*
  %1028 = load <8 x float>, <8 x float>* %1027, align 1, !tbaa !12
  %1029 = add nsw i64 %1001, 56
  %1030 = getelementptr inbounds float, float* %3, i64 %1029
  %1031 = bitcast float* %1030 to <8 x float>*
  %1032 = load <8 x float>, <8 x float>* %1031, align 1, !tbaa !12
  %1033 = add nsw i64 %1001, 64
  %1034 = getelementptr inbounds float, float* %3, i64 %1033
  %1035 = bitcast float* %1034 to <8 x float>*
  %1036 = load <8 x float>, <8 x float>* %1035, align 1, !tbaa !12
  %1037 = add nsw i64 %1001, 72
  %1038 = getelementptr inbounds float, float* %3, i64 %1037
  %1039 = bitcast float* %1038 to <8 x float>*
  %1040 = load <8 x float>, <8 x float>* %1039, align 1, !tbaa !12
  %1041 = add nsw i64 %1001, 80
  %1042 = getelementptr inbounds float, float* %3, i64 %1041
  %1043 = bitcast float* %1042 to <8 x float>*
  %1044 = load <8 x float>, <8 x float>* %1043, align 1, !tbaa !12
  %1045 = add nsw i64 %1001, 88
  %1046 = getelementptr inbounds float, float* %3, i64 %1045
  %1047 = bitcast float* %1046 to <8 x float>*
  %1048 = load <8 x float>, <8 x float>* %1047, align 1, !tbaa !12
  %1049 = add nsw i64 %1001, 96
  %1050 = getelementptr inbounds float, float* %3, i64 %1049
  %1051 = bitcast float* %1050 to <8 x float>*
  %1052 = load <8 x float>, <8 x float>* %1051, align 1, !tbaa !12
  %1053 = add nsw i64 %1001, 104
  %1054 = getelementptr inbounds float, float* %3, i64 %1053
  %1055 = bitcast float* %1054 to <8 x float>*
  %1056 = load <8 x float>, <8 x float>* %1055, align 1, !tbaa !12
  %1057 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1004, <8 x float> %45, <8 x float> %948) #10
  %1058 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1008, <8 x float> %45, <8 x float> %952) #10
  %1059 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1012, <8 x float> %45, <8 x float> %956) #10
  %1060 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1016, <8 x float> %45, <8 x float> %960) #10
  %1061 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1020, <8 x float> %45, <8 x float> %964) #10
  %1062 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1024, <8 x float> %45, <8 x float> %968) #10
  %1063 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1028, <8 x float> %45, <8 x float> %972) #10
  %1064 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1032, <8 x float> %45, <8 x float> %976) #10
  %1065 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1036, <8 x float> %45, <8 x float> %980) #10
  %1066 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1040, <8 x float> %45, <8 x float> %984) #10
  %1067 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1044, <8 x float> %45, <8 x float> %988) #10
  %1068 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1048, <8 x float> %45, <8 x float> %992) #10
  %1069 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1052, <8 x float> %45, <8 x float> %996) #10
  %1070 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1056, <8 x float> %45, <8 x float> %1000) #10
  store <8 x float> %1057, <8 x float>* %947, align 1, !tbaa !12
  store <8 x float> %1058, <8 x float>* %951, align 1, !tbaa !12
  store <8 x float> %1059, <8 x float>* %955, align 1, !tbaa !12
  store <8 x float> %1060, <8 x float>* %959, align 1, !tbaa !12
  store <8 x float> %1061, <8 x float>* %963, align 1, !tbaa !12
  store <8 x float> %1062, <8 x float>* %967, align 1, !tbaa !12
  store <8 x float> %1063, <8 x float>* %971, align 1, !tbaa !12
  store <8 x float> %1064, <8 x float>* %975, align 1, !tbaa !12
  store <8 x float> %1065, <8 x float>* %979, align 1, !tbaa !12
  store <8 x float> %1066, <8 x float>* %983, align 1, !tbaa !12
  store <8 x float> %1067, <8 x float>* %987, align 1, !tbaa !12
  store <8 x float> %1068, <8 x float>* %991, align 1, !tbaa !12
  store <8 x float> %1069, <8 x float>* %995, align 1, !tbaa !12
  store <8 x float> %1070, <8 x float>* %999, align 1, !tbaa !12
  %1071 = add nuw nsw i64 %888, 112
  %1072 = icmp ult i64 %1071, %679
  br i1 %1072, label %887, label %881

1073:                                             ; preds = %1080, %674, %881
  %1074 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1075 = icmp sgt i32 %1074, 0
  br i1 %1075, label %1076, label %2065

1076:                                             ; preds = %1073
  %1077 = zext i32 %1074 to i64
  %1078 = trunc i64 %51 to i32
  %1079 = mul nsw i32 %1074, %1078
  br label %1272

1080:                                             ; preds = %882, %1080
  %1081 = phi i64 [ 0, %882 ], [ %1264, %1080 ]
  %1082 = getelementptr inbounds float, float* %5, i64 %1081
  %1083 = getelementptr inbounds float, float* %1082, i64 8
  %1084 = bitcast float* %1083 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1084, i32 0, i32 1, i32 1)
  %1085 = getelementptr inbounds float, float* %3, i64 %1081
  %1086 = getelementptr inbounds float, float* %1085, i64 8
  %1087 = bitcast float* %1086 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1087, i32 0, i32 1, i32 1)
  %1088 = getelementptr inbounds float, float* %1082, i64 16
  %1089 = bitcast float* %1088 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1089, i32 0, i32 1, i32 1)
  %1090 = getelementptr inbounds float, float* %1085, i64 16
  %1091 = bitcast float* %1090 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1091, i32 0, i32 1, i32 1)
  %1092 = getelementptr inbounds float, float* %1082, i64 24
  %1093 = bitcast float* %1092 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1093, i32 0, i32 1, i32 1)
  %1094 = getelementptr inbounds float, float* %1085, i64 24
  %1095 = bitcast float* %1094 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1095, i32 0, i32 1, i32 1)
  %1096 = getelementptr inbounds float, float* %1082, i64 32
  %1097 = bitcast float* %1096 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1097, i32 0, i32 1, i32 1)
  %1098 = getelementptr inbounds float, float* %1085, i64 32
  %1099 = bitcast float* %1098 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1099, i32 0, i32 1, i32 1)
  %1100 = getelementptr inbounds float, float* %1082, i64 40
  %1101 = bitcast float* %1100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1101, i32 0, i32 1, i32 1)
  %1102 = getelementptr inbounds float, float* %1085, i64 40
  %1103 = bitcast float* %1102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1103, i32 0, i32 1, i32 1)
  %1104 = getelementptr inbounds float, float* %1082, i64 48
  %1105 = bitcast float* %1104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1105, i32 0, i32 1, i32 1)
  %1106 = getelementptr inbounds float, float* %1085, i64 48
  %1107 = bitcast float* %1106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1107, i32 0, i32 1, i32 1)
  %1108 = getelementptr inbounds float, float* %1082, i64 56
  %1109 = bitcast float* %1108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1109, i32 0, i32 1, i32 1)
  %1110 = getelementptr inbounds float, float* %1085, i64 56
  %1111 = bitcast float* %1110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1111, i32 0, i32 1, i32 1)
  %1112 = getelementptr inbounds float, float* %1082, i64 64
  %1113 = bitcast float* %1112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1113, i32 0, i32 1, i32 1)
  %1114 = getelementptr inbounds float, float* %1085, i64 64
  %1115 = bitcast float* %1114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1115, i32 0, i32 1, i32 1)
  %1116 = getelementptr inbounds float, float* %1082, i64 72
  %1117 = bitcast float* %1116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1117, i32 0, i32 1, i32 1)
  %1118 = getelementptr inbounds float, float* %1085, i64 72
  %1119 = bitcast float* %1118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1119, i32 0, i32 1, i32 1)
  %1120 = getelementptr inbounds float, float* %1082, i64 80
  %1121 = bitcast float* %1120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1121, i32 0, i32 1, i32 1)
  %1122 = getelementptr inbounds float, float* %1085, i64 80
  %1123 = bitcast float* %1122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1123, i32 0, i32 1, i32 1)
  %1124 = getelementptr inbounds float, float* %1082, i64 88
  %1125 = bitcast float* %1124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1125, i32 0, i32 1, i32 1)
  %1126 = getelementptr inbounds float, float* %1085, i64 88
  %1127 = bitcast float* %1126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1127, i32 0, i32 1, i32 1)
  %1128 = getelementptr inbounds float, float* %1082, i64 96
  %1129 = bitcast float* %1128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1129, i32 0, i32 1, i32 1)
  %1130 = getelementptr inbounds float, float* %1085, i64 96
  %1131 = bitcast float* %1130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1131, i32 0, i32 1, i32 1)
  %1132 = getelementptr inbounds float, float* %1082, i64 104
  %1133 = bitcast float* %1132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1133, i32 0, i32 1, i32 1)
  %1134 = getelementptr inbounds float, float* %1085, i64 104
  %1135 = bitcast float* %1134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1135, i32 0, i32 1, i32 1)
  %1136 = getelementptr inbounds float, float* %1082, i64 112
  %1137 = bitcast float* %1136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1137, i32 0, i32 1, i32 1)
  %1138 = getelementptr inbounds float, float* %1085, i64 112
  %1139 = bitcast float* %1138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1139, i32 0, i32 1, i32 1)
  %1140 = bitcast float* %1082 to <8 x float>*
  %1141 = load <8 x float>, <8 x float>* %1140, align 1, !tbaa !12
  %1142 = or i64 %1081, 8
  %1143 = getelementptr inbounds float, float* %5, i64 %1142
  %1144 = bitcast float* %1143 to <8 x float>*
  %1145 = load <8 x float>, <8 x float>* %1144, align 1, !tbaa !12
  %1146 = add nuw nsw i64 %1081, 16
  %1147 = getelementptr inbounds float, float* %5, i64 %1146
  %1148 = bitcast float* %1147 to <8 x float>*
  %1149 = load <8 x float>, <8 x float>* %1148, align 1, !tbaa !12
  %1150 = add nuw nsw i64 %1081, 24
  %1151 = getelementptr inbounds float, float* %5, i64 %1150
  %1152 = bitcast float* %1151 to <8 x float>*
  %1153 = load <8 x float>, <8 x float>* %1152, align 1, !tbaa !12
  %1154 = add nuw nsw i64 %1081, 32
  %1155 = getelementptr inbounds float, float* %5, i64 %1154
  %1156 = bitcast float* %1155 to <8 x float>*
  %1157 = load <8 x float>, <8 x float>* %1156, align 1, !tbaa !12
  %1158 = add nuw nsw i64 %1081, 40
  %1159 = getelementptr inbounds float, float* %5, i64 %1158
  %1160 = bitcast float* %1159 to <8 x float>*
  %1161 = load <8 x float>, <8 x float>* %1160, align 1, !tbaa !12
  %1162 = add nuw nsw i64 %1081, 48
  %1163 = getelementptr inbounds float, float* %5, i64 %1162
  %1164 = bitcast float* %1163 to <8 x float>*
  %1165 = load <8 x float>, <8 x float>* %1164, align 1, !tbaa !12
  %1166 = add nuw nsw i64 %1081, 56
  %1167 = getelementptr inbounds float, float* %5, i64 %1166
  %1168 = bitcast float* %1167 to <8 x float>*
  %1169 = load <8 x float>, <8 x float>* %1168, align 1, !tbaa !12
  %1170 = add nuw nsw i64 %1081, 64
  %1171 = getelementptr inbounds float, float* %5, i64 %1170
  %1172 = bitcast float* %1171 to <8 x float>*
  %1173 = load <8 x float>, <8 x float>* %1172, align 1, !tbaa !12
  %1174 = add nuw nsw i64 %1081, 72
  %1175 = getelementptr inbounds float, float* %5, i64 %1174
  %1176 = bitcast float* %1175 to <8 x float>*
  %1177 = load <8 x float>, <8 x float>* %1176, align 1, !tbaa !12
  %1178 = add nuw nsw i64 %1081, 80
  %1179 = getelementptr inbounds float, float* %5, i64 %1178
  %1180 = bitcast float* %1179 to <8 x float>*
  %1181 = load <8 x float>, <8 x float>* %1180, align 1, !tbaa !12
  %1182 = add nuw nsw i64 %1081, 88
  %1183 = getelementptr inbounds float, float* %5, i64 %1182
  %1184 = bitcast float* %1183 to <8 x float>*
  %1185 = load <8 x float>, <8 x float>* %1184, align 1, !tbaa !12
  %1186 = add nuw nsw i64 %1081, 96
  %1187 = getelementptr inbounds float, float* %5, i64 %1186
  %1188 = bitcast float* %1187 to <8 x float>*
  %1189 = load <8 x float>, <8 x float>* %1188, align 1, !tbaa !12
  %1190 = add nuw nsw i64 %1081, 104
  %1191 = getelementptr inbounds float, float* %5, i64 %1190
  %1192 = bitcast float* %1191 to <8 x float>*
  %1193 = load <8 x float>, <8 x float>* %1192, align 1, !tbaa !12
  %1194 = add nsw i64 %1081, %885
  %1195 = getelementptr inbounds float, float* %3, i64 %1194
  %1196 = bitcast float* %1195 to <8 x float>*
  %1197 = load <8 x float>, <8 x float>* %1196, align 1, !tbaa !12
  %1198 = add nsw i64 %1194, 8
  %1199 = getelementptr inbounds float, float* %3, i64 %1198
  %1200 = bitcast float* %1199 to <8 x float>*
  %1201 = load <8 x float>, <8 x float>* %1200, align 1, !tbaa !12
  %1202 = add nsw i64 %1194, 16
  %1203 = getelementptr inbounds float, float* %3, i64 %1202
  %1204 = bitcast float* %1203 to <8 x float>*
  %1205 = load <8 x float>, <8 x float>* %1204, align 1, !tbaa !12
  %1206 = add nsw i64 %1194, 24
  %1207 = getelementptr inbounds float, float* %3, i64 %1206
  %1208 = bitcast float* %1207 to <8 x float>*
  %1209 = load <8 x float>, <8 x float>* %1208, align 1, !tbaa !12
  %1210 = add nsw i64 %1194, 32
  %1211 = getelementptr inbounds float, float* %3, i64 %1210
  %1212 = bitcast float* %1211 to <8 x float>*
  %1213 = load <8 x float>, <8 x float>* %1212, align 1, !tbaa !12
  %1214 = add nsw i64 %1194, 40
  %1215 = getelementptr inbounds float, float* %3, i64 %1214
  %1216 = bitcast float* %1215 to <8 x float>*
  %1217 = load <8 x float>, <8 x float>* %1216, align 1, !tbaa !12
  %1218 = add nsw i64 %1194, 48
  %1219 = getelementptr inbounds float, float* %3, i64 %1218
  %1220 = bitcast float* %1219 to <8 x float>*
  %1221 = load <8 x float>, <8 x float>* %1220, align 1, !tbaa !12
  %1222 = add nsw i64 %1194, 56
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i64 %1194, 64
  %1227 = getelementptr inbounds float, float* %3, i64 %1226
  %1228 = bitcast float* %1227 to <8 x float>*
  %1229 = load <8 x float>, <8 x float>* %1228, align 1, !tbaa !12
  %1230 = add nsw i64 %1194, 72
  %1231 = getelementptr inbounds float, float* %3, i64 %1230
  %1232 = bitcast float* %1231 to <8 x float>*
  %1233 = load <8 x float>, <8 x float>* %1232, align 1, !tbaa !12
  %1234 = add nsw i64 %1194, 80
  %1235 = getelementptr inbounds float, float* %3, i64 %1234
  %1236 = bitcast float* %1235 to <8 x float>*
  %1237 = load <8 x float>, <8 x float>* %1236, align 1, !tbaa !12
  %1238 = add nsw i64 %1194, 88
  %1239 = getelementptr inbounds float, float* %3, i64 %1238
  %1240 = bitcast float* %1239 to <8 x float>*
  %1241 = load <8 x float>, <8 x float>* %1240, align 1, !tbaa !12
  %1242 = add nsw i64 %1194, 96
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nsw i64 %1194, 104
  %1247 = getelementptr inbounds float, float* %3, i64 %1246
  %1248 = bitcast float* %1247 to <8 x float>*
  %1249 = load <8 x float>, <8 x float>* %1248, align 1, !tbaa !12
  %1250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1197, <8 x float> %50, <8 x float> %1141) #10
  %1251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1201, <8 x float> %50, <8 x float> %1145) #10
  %1252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1205, <8 x float> %50, <8 x float> %1149) #10
  %1253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1209, <8 x float> %50, <8 x float> %1153) #10
  %1254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1213, <8 x float> %50, <8 x float> %1157) #10
  %1255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1217, <8 x float> %50, <8 x float> %1161) #10
  %1256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1221, <8 x float> %50, <8 x float> %1165) #10
  %1257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %50, <8 x float> %1169) #10
  %1258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1229, <8 x float> %50, <8 x float> %1173) #10
  %1259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1233, <8 x float> %50, <8 x float> %1177) #10
  %1260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1237, <8 x float> %50, <8 x float> %1181) #10
  %1261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1241, <8 x float> %50, <8 x float> %1185) #10
  %1262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %50, <8 x float> %1189) #10
  %1263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1249, <8 x float> %50, <8 x float> %1193) #10
  store <8 x float> %1250, <8 x float>* %1140, align 1, !tbaa !12
  store <8 x float> %1251, <8 x float>* %1144, align 1, !tbaa !12
  store <8 x float> %1252, <8 x float>* %1148, align 1, !tbaa !12
  store <8 x float> %1253, <8 x float>* %1152, align 1, !tbaa !12
  store <8 x float> %1254, <8 x float>* %1156, align 1, !tbaa !12
  store <8 x float> %1255, <8 x float>* %1160, align 1, !tbaa !12
  store <8 x float> %1256, <8 x float>* %1164, align 1, !tbaa !12
  store <8 x float> %1257, <8 x float>* %1168, align 1, !tbaa !12
  store <8 x float> %1258, <8 x float>* %1172, align 1, !tbaa !12
  store <8 x float> %1259, <8 x float>* %1176, align 1, !tbaa !12
  store <8 x float> %1260, <8 x float>* %1180, align 1, !tbaa !12
  store <8 x float> %1261, <8 x float>* %1184, align 1, !tbaa !12
  store <8 x float> %1262, <8 x float>* %1188, align 1, !tbaa !12
  store <8 x float> %1263, <8 x float>* %1192, align 1, !tbaa !12
  %1264 = add nuw nsw i64 %1081, 112
  %1265 = icmp ult i64 %1264, %886
  br i1 %1265, label %1080, label %1073

1266:                                             ; preds = %1272
  br i1 %1075, label %1267, label %1665

1267:                                             ; preds = %1266
  %1268 = trunc i64 %56 to i32
  %1269 = mul nsw i32 %1074, %1268
  %1270 = sext i32 %1269 to i64
  %1271 = zext i32 %1074 to i64
  br label %1479

1272:                                             ; preds = %1076, %1272
  %1273 = phi i64 [ 0, %1076 ], [ %1471, %1272 ]
  %1274 = getelementptr inbounds float, float* %5, i64 %1273
  %1275 = getelementptr inbounds float, float* %1274, i64 8
  %1276 = bitcast float* %1275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1276, i32 0, i32 1, i32 1)
  %1277 = getelementptr inbounds float, float* %3, i64 %1273
  %1278 = getelementptr inbounds float, float* %1277, i64 8
  %1279 = bitcast float* %1278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1279, i32 0, i32 1, i32 1)
  %1280 = getelementptr inbounds float, float* %1274, i64 16
  %1281 = bitcast float* %1280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1281, i32 0, i32 1, i32 1)
  %1282 = getelementptr inbounds float, float* %1277, i64 16
  %1283 = bitcast float* %1282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1283, i32 0, i32 1, i32 1)
  %1284 = getelementptr inbounds float, float* %1274, i64 24
  %1285 = bitcast float* %1284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1285, i32 0, i32 1, i32 1)
  %1286 = getelementptr inbounds float, float* %1277, i64 24
  %1287 = bitcast float* %1286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1287, i32 0, i32 1, i32 1)
  %1288 = getelementptr inbounds float, float* %1274, i64 32
  %1289 = bitcast float* %1288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1289, i32 0, i32 1, i32 1)
  %1290 = getelementptr inbounds float, float* %1277, i64 32
  %1291 = bitcast float* %1290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1291, i32 0, i32 1, i32 1)
  %1292 = getelementptr inbounds float, float* %1274, i64 40
  %1293 = bitcast float* %1292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1293, i32 0, i32 1, i32 1)
  %1294 = getelementptr inbounds float, float* %1277, i64 40
  %1295 = bitcast float* %1294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1295, i32 0, i32 1, i32 1)
  %1296 = getelementptr inbounds float, float* %1274, i64 48
  %1297 = bitcast float* %1296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1297, i32 0, i32 1, i32 1)
  %1298 = getelementptr inbounds float, float* %1277, i64 48
  %1299 = bitcast float* %1298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1299, i32 0, i32 1, i32 1)
  %1300 = getelementptr inbounds float, float* %1274, i64 56
  %1301 = bitcast float* %1300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1301, i32 0, i32 1, i32 1)
  %1302 = getelementptr inbounds float, float* %1277, i64 56
  %1303 = bitcast float* %1302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1303, i32 0, i32 1, i32 1)
  %1304 = getelementptr inbounds float, float* %1274, i64 64
  %1305 = bitcast float* %1304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1305, i32 0, i32 1, i32 1)
  %1306 = getelementptr inbounds float, float* %1277, i64 64
  %1307 = bitcast float* %1306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1307, i32 0, i32 1, i32 1)
  %1308 = getelementptr inbounds float, float* %1274, i64 72
  %1309 = bitcast float* %1308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1309, i32 0, i32 1, i32 1)
  %1310 = getelementptr inbounds float, float* %1277, i64 72
  %1311 = bitcast float* %1310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1311, i32 0, i32 1, i32 1)
  %1312 = getelementptr inbounds float, float* %1274, i64 80
  %1313 = bitcast float* %1312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1313, i32 0, i32 1, i32 1)
  %1314 = getelementptr inbounds float, float* %1277, i64 80
  %1315 = bitcast float* %1314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1315, i32 0, i32 1, i32 1)
  %1316 = getelementptr inbounds float, float* %1274, i64 88
  %1317 = bitcast float* %1316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1317, i32 0, i32 1, i32 1)
  %1318 = getelementptr inbounds float, float* %1277, i64 88
  %1319 = bitcast float* %1318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1319, i32 0, i32 1, i32 1)
  %1320 = getelementptr inbounds float, float* %1274, i64 96
  %1321 = bitcast float* %1320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1321, i32 0, i32 1, i32 1)
  %1322 = getelementptr inbounds float, float* %1277, i64 96
  %1323 = bitcast float* %1322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1323, i32 0, i32 1, i32 1)
  %1324 = getelementptr inbounds float, float* %1274, i64 104
  %1325 = bitcast float* %1324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1325, i32 0, i32 1, i32 1)
  %1326 = getelementptr inbounds float, float* %1277, i64 104
  %1327 = bitcast float* %1326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1327, i32 0, i32 1, i32 1)
  %1328 = getelementptr inbounds float, float* %1274, i64 112
  %1329 = bitcast float* %1328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1329, i32 0, i32 1, i32 1)
  %1330 = getelementptr inbounds float, float* %1277, i64 112
  %1331 = bitcast float* %1330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1331, i32 0, i32 1, i32 1)
  %1332 = bitcast float* %1274 to <8 x float>*
  %1333 = load <8 x float>, <8 x float>* %1332, align 1, !tbaa !12
  %1334 = or i64 %1273, 8
  %1335 = getelementptr inbounds float, float* %5, i64 %1334
  %1336 = bitcast float* %1335 to <8 x float>*
  %1337 = load <8 x float>, <8 x float>* %1336, align 1, !tbaa !12
  %1338 = add nuw nsw i64 %1273, 16
  %1339 = getelementptr inbounds float, float* %5, i64 %1338
  %1340 = bitcast float* %1339 to <8 x float>*
  %1341 = load <8 x float>, <8 x float>* %1340, align 1, !tbaa !12
  %1342 = add nuw nsw i64 %1273, 24
  %1343 = getelementptr inbounds float, float* %5, i64 %1342
  %1344 = bitcast float* %1343 to <8 x float>*
  %1345 = load <8 x float>, <8 x float>* %1344, align 1, !tbaa !12
  %1346 = add nuw nsw i64 %1273, 32
  %1347 = getelementptr inbounds float, float* %5, i64 %1346
  %1348 = bitcast float* %1347 to <8 x float>*
  %1349 = load <8 x float>, <8 x float>* %1348, align 1, !tbaa !12
  %1350 = add nuw nsw i64 %1273, 40
  %1351 = getelementptr inbounds float, float* %5, i64 %1350
  %1352 = bitcast float* %1351 to <8 x float>*
  %1353 = load <8 x float>, <8 x float>* %1352, align 1, !tbaa !12
  %1354 = add nuw nsw i64 %1273, 48
  %1355 = getelementptr inbounds float, float* %5, i64 %1354
  %1356 = bitcast float* %1355 to <8 x float>*
  %1357 = load <8 x float>, <8 x float>* %1356, align 1, !tbaa !12
  %1358 = add nuw nsw i64 %1273, 56
  %1359 = getelementptr inbounds float, float* %5, i64 %1358
  %1360 = bitcast float* %1359 to <8 x float>*
  %1361 = load <8 x float>, <8 x float>* %1360, align 1, !tbaa !12
  %1362 = add nuw nsw i64 %1273, 64
  %1363 = getelementptr inbounds float, float* %5, i64 %1362
  %1364 = bitcast float* %1363 to <8 x float>*
  %1365 = load <8 x float>, <8 x float>* %1364, align 1, !tbaa !12
  %1366 = add nuw nsw i64 %1273, 72
  %1367 = getelementptr inbounds float, float* %5, i64 %1366
  %1368 = bitcast float* %1367 to <8 x float>*
  %1369 = load <8 x float>, <8 x float>* %1368, align 1, !tbaa !12
  %1370 = add nuw nsw i64 %1273, 80
  %1371 = getelementptr inbounds float, float* %5, i64 %1370
  %1372 = bitcast float* %1371 to <8 x float>*
  %1373 = load <8 x float>, <8 x float>* %1372, align 1, !tbaa !12
  %1374 = add nuw nsw i64 %1273, 88
  %1375 = getelementptr inbounds float, float* %5, i64 %1374
  %1376 = bitcast float* %1375 to <8 x float>*
  %1377 = load <8 x float>, <8 x float>* %1376, align 1, !tbaa !12
  %1378 = add nuw nsw i64 %1273, 96
  %1379 = getelementptr inbounds float, float* %5, i64 %1378
  %1380 = bitcast float* %1379 to <8 x float>*
  %1381 = load <8 x float>, <8 x float>* %1380, align 1, !tbaa !12
  %1382 = add nuw nsw i64 %1273, 104
  %1383 = getelementptr inbounds float, float* %5, i64 %1382
  %1384 = bitcast float* %1383 to <8 x float>*
  %1385 = load <8 x float>, <8 x float>* %1384, align 1, !tbaa !12
  %1386 = trunc i64 %1273 to i32
  %1387 = add nsw i32 %1079, %1386
  %1388 = sext i32 %1387 to i64
  %1389 = getelementptr inbounds float, float* %3, i64 %1388
  %1390 = bitcast float* %1389 to <8 x float>*
  %1391 = load <8 x float>, <8 x float>* %1390, align 1, !tbaa !12
  %1392 = add nsw i32 %1387, 8
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds float, float* %3, i64 %1393
  %1395 = bitcast float* %1394 to <8 x float>*
  %1396 = load <8 x float>, <8 x float>* %1395, align 1, !tbaa !12
  %1397 = add nsw i32 %1387, 16
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds float, float* %3, i64 %1398
  %1400 = bitcast float* %1399 to <8 x float>*
  %1401 = load <8 x float>, <8 x float>* %1400, align 1, !tbaa !12
  %1402 = add nsw i32 %1387, 24
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds float, float* %3, i64 %1403
  %1405 = bitcast float* %1404 to <8 x float>*
  %1406 = load <8 x float>, <8 x float>* %1405, align 1, !tbaa !12
  %1407 = add nsw i32 %1387, 32
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds float, float* %3, i64 %1408
  %1410 = bitcast float* %1409 to <8 x float>*
  %1411 = load <8 x float>, <8 x float>* %1410, align 1, !tbaa !12
  %1412 = add nsw i32 %1387, 40
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds float, float* %3, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = add nsw i32 %1387, 48
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds float, float* %3, i64 %1418
  %1420 = bitcast float* %1419 to <8 x float>*
  %1421 = load <8 x float>, <8 x float>* %1420, align 1, !tbaa !12
  %1422 = add nsw i32 %1387, 56
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds float, float* %3, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = add nsw i32 %1387, 64
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds float, float* %3, i64 %1428
  %1430 = bitcast float* %1429 to <8 x float>*
  %1431 = load <8 x float>, <8 x float>* %1430, align 1, !tbaa !12
  %1432 = add nsw i32 %1387, 72
  %1433 = sext i32 %1432 to i64
  %1434 = getelementptr inbounds float, float* %3, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = add nsw i32 %1387, 80
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds float, float* %3, i64 %1438
  %1440 = bitcast float* %1439 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = add nsw i32 %1387, 88
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds float, float* %3, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nsw i32 %1387, 96
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds float, float* %3, i64 %1448
  %1450 = bitcast float* %1449 to <8 x float>*
  %1451 = load <8 x float>, <8 x float>* %1450, align 1, !tbaa !12
  %1452 = add nsw i32 %1387, 104
  %1453 = sext i32 %1452 to i64
  %1454 = getelementptr inbounds float, float* %3, i64 %1453
  %1455 = bitcast float* %1454 to <8 x float>*
  %1456 = load <8 x float>, <8 x float>* %1455, align 1, !tbaa !12
  %1457 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1391, <8 x float> %55, <8 x float> %1333) #10
  %1458 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1396, <8 x float> %55, <8 x float> %1337) #10
  %1459 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1401, <8 x float> %55, <8 x float> %1341) #10
  %1460 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1406, <8 x float> %55, <8 x float> %1345) #10
  %1461 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1411, <8 x float> %55, <8 x float> %1349) #10
  %1462 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1416, <8 x float> %55, <8 x float> %1353) #10
  %1463 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1421, <8 x float> %55, <8 x float> %1357) #10
  %1464 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1426, <8 x float> %55, <8 x float> %1361) #10
  %1465 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1431, <8 x float> %55, <8 x float> %1365) #10
  %1466 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1436, <8 x float> %55, <8 x float> %1369) #10
  %1467 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1441, <8 x float> %55, <8 x float> %1373) #10
  %1468 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1446, <8 x float> %55, <8 x float> %1377) #10
  %1469 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1451, <8 x float> %55, <8 x float> %1381) #10
  %1470 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1456, <8 x float> %55, <8 x float> %1385) #10
  store <8 x float> %1457, <8 x float>* %1332, align 1, !tbaa !12
  store <8 x float> %1458, <8 x float>* %1336, align 1, !tbaa !12
  store <8 x float> %1459, <8 x float>* %1340, align 1, !tbaa !12
  store <8 x float> %1460, <8 x float>* %1344, align 1, !tbaa !12
  store <8 x float> %1461, <8 x float>* %1348, align 1, !tbaa !12
  store <8 x float> %1462, <8 x float>* %1352, align 1, !tbaa !12
  store <8 x float> %1463, <8 x float>* %1356, align 1, !tbaa !12
  store <8 x float> %1464, <8 x float>* %1360, align 1, !tbaa !12
  store <8 x float> %1465, <8 x float>* %1364, align 1, !tbaa !12
  store <8 x float> %1466, <8 x float>* %1368, align 1, !tbaa !12
  store <8 x float> %1467, <8 x float>* %1372, align 1, !tbaa !12
  store <8 x float> %1468, <8 x float>* %1376, align 1, !tbaa !12
  store <8 x float> %1469, <8 x float>* %1380, align 1, !tbaa !12
  store <8 x float> %1470, <8 x float>* %1384, align 1, !tbaa !12
  %1471 = add nuw nsw i64 %1273, 112
  %1472 = icmp ult i64 %1471, %1077
  br i1 %1472, label %1272, label %1266

1473:                                             ; preds = %1479
  br i1 %1075, label %1474, label %1665

1474:                                             ; preds = %1473
  %1475 = trunc i64 %61 to i32
  %1476 = mul nsw i32 %1074, %1475
  %1477 = sext i32 %1476 to i64
  %1478 = zext i32 %1074 to i64
  br label %1672

1479:                                             ; preds = %1267, %1479
  %1480 = phi i64 [ 0, %1267 ], [ %1663, %1479 ]
  %1481 = getelementptr inbounds float, float* %5, i64 %1480
  %1482 = getelementptr inbounds float, float* %1481, i64 8
  %1483 = bitcast float* %1482 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1483, i32 0, i32 1, i32 1)
  %1484 = getelementptr inbounds float, float* %3, i64 %1480
  %1485 = getelementptr inbounds float, float* %1484, i64 8
  %1486 = bitcast float* %1485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1486, i32 0, i32 1, i32 1)
  %1487 = getelementptr inbounds float, float* %1481, i64 16
  %1488 = bitcast float* %1487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1488, i32 0, i32 1, i32 1)
  %1489 = getelementptr inbounds float, float* %1484, i64 16
  %1490 = bitcast float* %1489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1490, i32 0, i32 1, i32 1)
  %1491 = getelementptr inbounds float, float* %1481, i64 24
  %1492 = bitcast float* %1491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1492, i32 0, i32 1, i32 1)
  %1493 = getelementptr inbounds float, float* %1484, i64 24
  %1494 = bitcast float* %1493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1494, i32 0, i32 1, i32 1)
  %1495 = getelementptr inbounds float, float* %1481, i64 32
  %1496 = bitcast float* %1495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1496, i32 0, i32 1, i32 1)
  %1497 = getelementptr inbounds float, float* %1484, i64 32
  %1498 = bitcast float* %1497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1498, i32 0, i32 1, i32 1)
  %1499 = getelementptr inbounds float, float* %1481, i64 40
  %1500 = bitcast float* %1499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1500, i32 0, i32 1, i32 1)
  %1501 = getelementptr inbounds float, float* %1484, i64 40
  %1502 = bitcast float* %1501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1502, i32 0, i32 1, i32 1)
  %1503 = getelementptr inbounds float, float* %1481, i64 48
  %1504 = bitcast float* %1503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1504, i32 0, i32 1, i32 1)
  %1505 = getelementptr inbounds float, float* %1484, i64 48
  %1506 = bitcast float* %1505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1506, i32 0, i32 1, i32 1)
  %1507 = getelementptr inbounds float, float* %1481, i64 56
  %1508 = bitcast float* %1507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1508, i32 0, i32 1, i32 1)
  %1509 = getelementptr inbounds float, float* %1484, i64 56
  %1510 = bitcast float* %1509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1510, i32 0, i32 1, i32 1)
  %1511 = getelementptr inbounds float, float* %1481, i64 64
  %1512 = bitcast float* %1511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1512, i32 0, i32 1, i32 1)
  %1513 = getelementptr inbounds float, float* %1484, i64 64
  %1514 = bitcast float* %1513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1514, i32 0, i32 1, i32 1)
  %1515 = getelementptr inbounds float, float* %1481, i64 72
  %1516 = bitcast float* %1515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1516, i32 0, i32 1, i32 1)
  %1517 = getelementptr inbounds float, float* %1484, i64 72
  %1518 = bitcast float* %1517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1518, i32 0, i32 1, i32 1)
  %1519 = getelementptr inbounds float, float* %1481, i64 80
  %1520 = bitcast float* %1519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1520, i32 0, i32 1, i32 1)
  %1521 = getelementptr inbounds float, float* %1484, i64 80
  %1522 = bitcast float* %1521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1522, i32 0, i32 1, i32 1)
  %1523 = getelementptr inbounds float, float* %1481, i64 88
  %1524 = bitcast float* %1523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1524, i32 0, i32 1, i32 1)
  %1525 = getelementptr inbounds float, float* %1484, i64 88
  %1526 = bitcast float* %1525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1526, i32 0, i32 1, i32 1)
  %1527 = getelementptr inbounds float, float* %1481, i64 96
  %1528 = bitcast float* %1527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1528, i32 0, i32 1, i32 1)
  %1529 = getelementptr inbounds float, float* %1484, i64 96
  %1530 = bitcast float* %1529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1530, i32 0, i32 1, i32 1)
  %1531 = getelementptr inbounds float, float* %1481, i64 104
  %1532 = bitcast float* %1531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1532, i32 0, i32 1, i32 1)
  %1533 = getelementptr inbounds float, float* %1484, i64 104
  %1534 = bitcast float* %1533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1534, i32 0, i32 1, i32 1)
  %1535 = getelementptr inbounds float, float* %1481, i64 112
  %1536 = bitcast float* %1535 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1536, i32 0, i32 1, i32 1)
  %1537 = getelementptr inbounds float, float* %1484, i64 112
  %1538 = bitcast float* %1537 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1538, i32 0, i32 1, i32 1)
  %1539 = bitcast float* %1481 to <8 x float>*
  %1540 = load <8 x float>, <8 x float>* %1539, align 1, !tbaa !12
  %1541 = or i64 %1480, 8
  %1542 = getelementptr inbounds float, float* %5, i64 %1541
  %1543 = bitcast float* %1542 to <8 x float>*
  %1544 = load <8 x float>, <8 x float>* %1543, align 1, !tbaa !12
  %1545 = add nuw nsw i64 %1480, 16
  %1546 = getelementptr inbounds float, float* %5, i64 %1545
  %1547 = bitcast float* %1546 to <8 x float>*
  %1548 = load <8 x float>, <8 x float>* %1547, align 1, !tbaa !12
  %1549 = add nuw nsw i64 %1480, 24
  %1550 = getelementptr inbounds float, float* %5, i64 %1549
  %1551 = bitcast float* %1550 to <8 x float>*
  %1552 = load <8 x float>, <8 x float>* %1551, align 1, !tbaa !12
  %1553 = add nuw nsw i64 %1480, 32
  %1554 = getelementptr inbounds float, float* %5, i64 %1553
  %1555 = bitcast float* %1554 to <8 x float>*
  %1556 = load <8 x float>, <8 x float>* %1555, align 1, !tbaa !12
  %1557 = add nuw nsw i64 %1480, 40
  %1558 = getelementptr inbounds float, float* %5, i64 %1557
  %1559 = bitcast float* %1558 to <8 x float>*
  %1560 = load <8 x float>, <8 x float>* %1559, align 1, !tbaa !12
  %1561 = add nuw nsw i64 %1480, 48
  %1562 = getelementptr inbounds float, float* %5, i64 %1561
  %1563 = bitcast float* %1562 to <8 x float>*
  %1564 = load <8 x float>, <8 x float>* %1563, align 1, !tbaa !12
  %1565 = add nuw nsw i64 %1480, 56
  %1566 = getelementptr inbounds float, float* %5, i64 %1565
  %1567 = bitcast float* %1566 to <8 x float>*
  %1568 = load <8 x float>, <8 x float>* %1567, align 1, !tbaa !12
  %1569 = add nuw nsw i64 %1480, 64
  %1570 = getelementptr inbounds float, float* %5, i64 %1569
  %1571 = bitcast float* %1570 to <8 x float>*
  %1572 = load <8 x float>, <8 x float>* %1571, align 1, !tbaa !12
  %1573 = add nuw nsw i64 %1480, 72
  %1574 = getelementptr inbounds float, float* %5, i64 %1573
  %1575 = bitcast float* %1574 to <8 x float>*
  %1576 = load <8 x float>, <8 x float>* %1575, align 1, !tbaa !12
  %1577 = add nuw nsw i64 %1480, 80
  %1578 = getelementptr inbounds float, float* %5, i64 %1577
  %1579 = bitcast float* %1578 to <8 x float>*
  %1580 = load <8 x float>, <8 x float>* %1579, align 1, !tbaa !12
  %1581 = add nuw nsw i64 %1480, 88
  %1582 = getelementptr inbounds float, float* %5, i64 %1581
  %1583 = bitcast float* %1582 to <8 x float>*
  %1584 = load <8 x float>, <8 x float>* %1583, align 1, !tbaa !12
  %1585 = add nuw nsw i64 %1480, 96
  %1586 = getelementptr inbounds float, float* %5, i64 %1585
  %1587 = bitcast float* %1586 to <8 x float>*
  %1588 = load <8 x float>, <8 x float>* %1587, align 1, !tbaa !12
  %1589 = add nuw nsw i64 %1480, 104
  %1590 = getelementptr inbounds float, float* %5, i64 %1589
  %1591 = bitcast float* %1590 to <8 x float>*
  %1592 = load <8 x float>, <8 x float>* %1591, align 1, !tbaa !12
  %1593 = add nsw i64 %1480, %1270
  %1594 = getelementptr inbounds float, float* %3, i64 %1593
  %1595 = bitcast float* %1594 to <8 x float>*
  %1596 = load <8 x float>, <8 x float>* %1595, align 1, !tbaa !12
  %1597 = add nsw i64 %1593, 8
  %1598 = getelementptr inbounds float, float* %3, i64 %1597
  %1599 = bitcast float* %1598 to <8 x float>*
  %1600 = load <8 x float>, <8 x float>* %1599, align 1, !tbaa !12
  %1601 = add nsw i64 %1593, 16
  %1602 = getelementptr inbounds float, float* %3, i64 %1601
  %1603 = bitcast float* %1602 to <8 x float>*
  %1604 = load <8 x float>, <8 x float>* %1603, align 1, !tbaa !12
  %1605 = add nsw i64 %1593, 24
  %1606 = getelementptr inbounds float, float* %3, i64 %1605
  %1607 = bitcast float* %1606 to <8 x float>*
  %1608 = load <8 x float>, <8 x float>* %1607, align 1, !tbaa !12
  %1609 = add nsw i64 %1593, 32
  %1610 = getelementptr inbounds float, float* %3, i64 %1609
  %1611 = bitcast float* %1610 to <8 x float>*
  %1612 = load <8 x float>, <8 x float>* %1611, align 1, !tbaa !12
  %1613 = add nsw i64 %1593, 40
  %1614 = getelementptr inbounds float, float* %3, i64 %1613
  %1615 = bitcast float* %1614 to <8 x float>*
  %1616 = load <8 x float>, <8 x float>* %1615, align 1, !tbaa !12
  %1617 = add nsw i64 %1593, 48
  %1618 = getelementptr inbounds float, float* %3, i64 %1617
  %1619 = bitcast float* %1618 to <8 x float>*
  %1620 = load <8 x float>, <8 x float>* %1619, align 1, !tbaa !12
  %1621 = add nsw i64 %1593, 56
  %1622 = getelementptr inbounds float, float* %3, i64 %1621
  %1623 = bitcast float* %1622 to <8 x float>*
  %1624 = load <8 x float>, <8 x float>* %1623, align 1, !tbaa !12
  %1625 = add nsw i64 %1593, 64
  %1626 = getelementptr inbounds float, float* %3, i64 %1625
  %1627 = bitcast float* %1626 to <8 x float>*
  %1628 = load <8 x float>, <8 x float>* %1627, align 1, !tbaa !12
  %1629 = add nsw i64 %1593, 72
  %1630 = getelementptr inbounds float, float* %3, i64 %1629
  %1631 = bitcast float* %1630 to <8 x float>*
  %1632 = load <8 x float>, <8 x float>* %1631, align 1, !tbaa !12
  %1633 = add nsw i64 %1593, 80
  %1634 = getelementptr inbounds float, float* %3, i64 %1633
  %1635 = bitcast float* %1634 to <8 x float>*
  %1636 = load <8 x float>, <8 x float>* %1635, align 1, !tbaa !12
  %1637 = add nsw i64 %1593, 88
  %1638 = getelementptr inbounds float, float* %3, i64 %1637
  %1639 = bitcast float* %1638 to <8 x float>*
  %1640 = load <8 x float>, <8 x float>* %1639, align 1, !tbaa !12
  %1641 = add nsw i64 %1593, 96
  %1642 = getelementptr inbounds float, float* %3, i64 %1641
  %1643 = bitcast float* %1642 to <8 x float>*
  %1644 = load <8 x float>, <8 x float>* %1643, align 1, !tbaa !12
  %1645 = add nsw i64 %1593, 104
  %1646 = getelementptr inbounds float, float* %3, i64 %1645
  %1647 = bitcast float* %1646 to <8 x float>*
  %1648 = load <8 x float>, <8 x float>* %1647, align 1, !tbaa !12
  %1649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1596, <8 x float> %60, <8 x float> %1540) #10
  %1650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1600, <8 x float> %60, <8 x float> %1544) #10
  %1651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1604, <8 x float> %60, <8 x float> %1548) #10
  %1652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1608, <8 x float> %60, <8 x float> %1552) #10
  %1653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1612, <8 x float> %60, <8 x float> %1556) #10
  %1654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1616, <8 x float> %60, <8 x float> %1560) #10
  %1655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1620, <8 x float> %60, <8 x float> %1564) #10
  %1656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1624, <8 x float> %60, <8 x float> %1568) #10
  %1657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1628, <8 x float> %60, <8 x float> %1572) #10
  %1658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1632, <8 x float> %60, <8 x float> %1576) #10
  %1659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1636, <8 x float> %60, <8 x float> %1580) #10
  %1660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1640, <8 x float> %60, <8 x float> %1584) #10
  %1661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1644, <8 x float> %60, <8 x float> %1588) #10
  %1662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1648, <8 x float> %60, <8 x float> %1592) #10
  store <8 x float> %1649, <8 x float>* %1539, align 1, !tbaa !12
  store <8 x float> %1650, <8 x float>* %1543, align 1, !tbaa !12
  store <8 x float> %1651, <8 x float>* %1547, align 1, !tbaa !12
  store <8 x float> %1652, <8 x float>* %1551, align 1, !tbaa !12
  store <8 x float> %1653, <8 x float>* %1555, align 1, !tbaa !12
  store <8 x float> %1654, <8 x float>* %1559, align 1, !tbaa !12
  store <8 x float> %1655, <8 x float>* %1563, align 1, !tbaa !12
  store <8 x float> %1656, <8 x float>* %1567, align 1, !tbaa !12
  store <8 x float> %1657, <8 x float>* %1571, align 1, !tbaa !12
  store <8 x float> %1658, <8 x float>* %1575, align 1, !tbaa !12
  store <8 x float> %1659, <8 x float>* %1579, align 1, !tbaa !12
  store <8 x float> %1660, <8 x float>* %1583, align 1, !tbaa !12
  store <8 x float> %1661, <8 x float>* %1587, align 1, !tbaa !12
  store <8 x float> %1662, <8 x float>* %1591, align 1, !tbaa !12
  %1663 = add nuw nsw i64 %1480, 112
  %1664 = icmp ult i64 %1663, %1271
  br i1 %1664, label %1479, label %1473

1665:                                             ; preds = %1672, %1266, %1473
  %1666 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1667 = icmp sgt i32 %1666, 0
  br i1 %1667, label %1668, label %2065

1668:                                             ; preds = %1665
  %1669 = zext i32 %1666 to i64
  %1670 = trunc i64 %66 to i32
  %1671 = mul nsw i32 %1666, %1670
  br label %1864

1672:                                             ; preds = %1474, %1672
  %1673 = phi i64 [ 0, %1474 ], [ %1856, %1672 ]
  %1674 = getelementptr inbounds float, float* %5, i64 %1673
  %1675 = getelementptr inbounds float, float* %1674, i64 8
  %1676 = bitcast float* %1675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1676, i32 0, i32 1, i32 1)
  %1677 = getelementptr inbounds float, float* %3, i64 %1673
  %1678 = getelementptr inbounds float, float* %1677, i64 8
  %1679 = bitcast float* %1678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1679, i32 0, i32 1, i32 1)
  %1680 = getelementptr inbounds float, float* %1674, i64 16
  %1681 = bitcast float* %1680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1681, i32 0, i32 1, i32 1)
  %1682 = getelementptr inbounds float, float* %1677, i64 16
  %1683 = bitcast float* %1682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1683, i32 0, i32 1, i32 1)
  %1684 = getelementptr inbounds float, float* %1674, i64 24
  %1685 = bitcast float* %1684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1685, i32 0, i32 1, i32 1)
  %1686 = getelementptr inbounds float, float* %1677, i64 24
  %1687 = bitcast float* %1686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1687, i32 0, i32 1, i32 1)
  %1688 = getelementptr inbounds float, float* %1674, i64 32
  %1689 = bitcast float* %1688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1689, i32 0, i32 1, i32 1)
  %1690 = getelementptr inbounds float, float* %1677, i64 32
  %1691 = bitcast float* %1690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1691, i32 0, i32 1, i32 1)
  %1692 = getelementptr inbounds float, float* %1674, i64 40
  %1693 = bitcast float* %1692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1693, i32 0, i32 1, i32 1)
  %1694 = getelementptr inbounds float, float* %1677, i64 40
  %1695 = bitcast float* %1694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1695, i32 0, i32 1, i32 1)
  %1696 = getelementptr inbounds float, float* %1674, i64 48
  %1697 = bitcast float* %1696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1697, i32 0, i32 1, i32 1)
  %1698 = getelementptr inbounds float, float* %1677, i64 48
  %1699 = bitcast float* %1698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1699, i32 0, i32 1, i32 1)
  %1700 = getelementptr inbounds float, float* %1674, i64 56
  %1701 = bitcast float* %1700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1701, i32 0, i32 1, i32 1)
  %1702 = getelementptr inbounds float, float* %1677, i64 56
  %1703 = bitcast float* %1702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1703, i32 0, i32 1, i32 1)
  %1704 = getelementptr inbounds float, float* %1674, i64 64
  %1705 = bitcast float* %1704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1705, i32 0, i32 1, i32 1)
  %1706 = getelementptr inbounds float, float* %1677, i64 64
  %1707 = bitcast float* %1706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1707, i32 0, i32 1, i32 1)
  %1708 = getelementptr inbounds float, float* %1674, i64 72
  %1709 = bitcast float* %1708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1709, i32 0, i32 1, i32 1)
  %1710 = getelementptr inbounds float, float* %1677, i64 72
  %1711 = bitcast float* %1710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1711, i32 0, i32 1, i32 1)
  %1712 = getelementptr inbounds float, float* %1674, i64 80
  %1713 = bitcast float* %1712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1713, i32 0, i32 1, i32 1)
  %1714 = getelementptr inbounds float, float* %1677, i64 80
  %1715 = bitcast float* %1714 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1715, i32 0, i32 1, i32 1)
  %1716 = getelementptr inbounds float, float* %1674, i64 88
  %1717 = bitcast float* %1716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1717, i32 0, i32 1, i32 1)
  %1718 = getelementptr inbounds float, float* %1677, i64 88
  %1719 = bitcast float* %1718 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1719, i32 0, i32 1, i32 1)
  %1720 = getelementptr inbounds float, float* %1674, i64 96
  %1721 = bitcast float* %1720 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1721, i32 0, i32 1, i32 1)
  %1722 = getelementptr inbounds float, float* %1677, i64 96
  %1723 = bitcast float* %1722 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1723, i32 0, i32 1, i32 1)
  %1724 = getelementptr inbounds float, float* %1674, i64 104
  %1725 = bitcast float* %1724 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1725, i32 0, i32 1, i32 1)
  %1726 = getelementptr inbounds float, float* %1677, i64 104
  %1727 = bitcast float* %1726 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1727, i32 0, i32 1, i32 1)
  %1728 = getelementptr inbounds float, float* %1674, i64 112
  %1729 = bitcast float* %1728 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1729, i32 0, i32 1, i32 1)
  %1730 = getelementptr inbounds float, float* %1677, i64 112
  %1731 = bitcast float* %1730 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1731, i32 0, i32 1, i32 1)
  %1732 = bitcast float* %1674 to <8 x float>*
  %1733 = load <8 x float>, <8 x float>* %1732, align 1, !tbaa !12
  %1734 = or i64 %1673, 8
  %1735 = getelementptr inbounds float, float* %5, i64 %1734
  %1736 = bitcast float* %1735 to <8 x float>*
  %1737 = load <8 x float>, <8 x float>* %1736, align 1, !tbaa !12
  %1738 = add nuw nsw i64 %1673, 16
  %1739 = getelementptr inbounds float, float* %5, i64 %1738
  %1740 = bitcast float* %1739 to <8 x float>*
  %1741 = load <8 x float>, <8 x float>* %1740, align 1, !tbaa !12
  %1742 = add nuw nsw i64 %1673, 24
  %1743 = getelementptr inbounds float, float* %5, i64 %1742
  %1744 = bitcast float* %1743 to <8 x float>*
  %1745 = load <8 x float>, <8 x float>* %1744, align 1, !tbaa !12
  %1746 = add nuw nsw i64 %1673, 32
  %1747 = getelementptr inbounds float, float* %5, i64 %1746
  %1748 = bitcast float* %1747 to <8 x float>*
  %1749 = load <8 x float>, <8 x float>* %1748, align 1, !tbaa !12
  %1750 = add nuw nsw i64 %1673, 40
  %1751 = getelementptr inbounds float, float* %5, i64 %1750
  %1752 = bitcast float* %1751 to <8 x float>*
  %1753 = load <8 x float>, <8 x float>* %1752, align 1, !tbaa !12
  %1754 = add nuw nsw i64 %1673, 48
  %1755 = getelementptr inbounds float, float* %5, i64 %1754
  %1756 = bitcast float* %1755 to <8 x float>*
  %1757 = load <8 x float>, <8 x float>* %1756, align 1, !tbaa !12
  %1758 = add nuw nsw i64 %1673, 56
  %1759 = getelementptr inbounds float, float* %5, i64 %1758
  %1760 = bitcast float* %1759 to <8 x float>*
  %1761 = load <8 x float>, <8 x float>* %1760, align 1, !tbaa !12
  %1762 = add nuw nsw i64 %1673, 64
  %1763 = getelementptr inbounds float, float* %5, i64 %1762
  %1764 = bitcast float* %1763 to <8 x float>*
  %1765 = load <8 x float>, <8 x float>* %1764, align 1, !tbaa !12
  %1766 = add nuw nsw i64 %1673, 72
  %1767 = getelementptr inbounds float, float* %5, i64 %1766
  %1768 = bitcast float* %1767 to <8 x float>*
  %1769 = load <8 x float>, <8 x float>* %1768, align 1, !tbaa !12
  %1770 = add nuw nsw i64 %1673, 80
  %1771 = getelementptr inbounds float, float* %5, i64 %1770
  %1772 = bitcast float* %1771 to <8 x float>*
  %1773 = load <8 x float>, <8 x float>* %1772, align 1, !tbaa !12
  %1774 = add nuw nsw i64 %1673, 88
  %1775 = getelementptr inbounds float, float* %5, i64 %1774
  %1776 = bitcast float* %1775 to <8 x float>*
  %1777 = load <8 x float>, <8 x float>* %1776, align 1, !tbaa !12
  %1778 = add nuw nsw i64 %1673, 96
  %1779 = getelementptr inbounds float, float* %5, i64 %1778
  %1780 = bitcast float* %1779 to <8 x float>*
  %1781 = load <8 x float>, <8 x float>* %1780, align 1, !tbaa !12
  %1782 = add nuw nsw i64 %1673, 104
  %1783 = getelementptr inbounds float, float* %5, i64 %1782
  %1784 = bitcast float* %1783 to <8 x float>*
  %1785 = load <8 x float>, <8 x float>* %1784, align 1, !tbaa !12
  %1786 = add nsw i64 %1673, %1477
  %1787 = getelementptr inbounds float, float* %3, i64 %1786
  %1788 = bitcast float* %1787 to <8 x float>*
  %1789 = load <8 x float>, <8 x float>* %1788, align 1, !tbaa !12
  %1790 = add nsw i64 %1786, 8
  %1791 = getelementptr inbounds float, float* %3, i64 %1790
  %1792 = bitcast float* %1791 to <8 x float>*
  %1793 = load <8 x float>, <8 x float>* %1792, align 1, !tbaa !12
  %1794 = add nsw i64 %1786, 16
  %1795 = getelementptr inbounds float, float* %3, i64 %1794
  %1796 = bitcast float* %1795 to <8 x float>*
  %1797 = load <8 x float>, <8 x float>* %1796, align 1, !tbaa !12
  %1798 = add nsw i64 %1786, 24
  %1799 = getelementptr inbounds float, float* %3, i64 %1798
  %1800 = bitcast float* %1799 to <8 x float>*
  %1801 = load <8 x float>, <8 x float>* %1800, align 1, !tbaa !12
  %1802 = add nsw i64 %1786, 32
  %1803 = getelementptr inbounds float, float* %3, i64 %1802
  %1804 = bitcast float* %1803 to <8 x float>*
  %1805 = load <8 x float>, <8 x float>* %1804, align 1, !tbaa !12
  %1806 = add nsw i64 %1786, 40
  %1807 = getelementptr inbounds float, float* %3, i64 %1806
  %1808 = bitcast float* %1807 to <8 x float>*
  %1809 = load <8 x float>, <8 x float>* %1808, align 1, !tbaa !12
  %1810 = add nsw i64 %1786, 48
  %1811 = getelementptr inbounds float, float* %3, i64 %1810
  %1812 = bitcast float* %1811 to <8 x float>*
  %1813 = load <8 x float>, <8 x float>* %1812, align 1, !tbaa !12
  %1814 = add nsw i64 %1786, 56
  %1815 = getelementptr inbounds float, float* %3, i64 %1814
  %1816 = bitcast float* %1815 to <8 x float>*
  %1817 = load <8 x float>, <8 x float>* %1816, align 1, !tbaa !12
  %1818 = add nsw i64 %1786, 64
  %1819 = getelementptr inbounds float, float* %3, i64 %1818
  %1820 = bitcast float* %1819 to <8 x float>*
  %1821 = load <8 x float>, <8 x float>* %1820, align 1, !tbaa !12
  %1822 = add nsw i64 %1786, 72
  %1823 = getelementptr inbounds float, float* %3, i64 %1822
  %1824 = bitcast float* %1823 to <8 x float>*
  %1825 = load <8 x float>, <8 x float>* %1824, align 1, !tbaa !12
  %1826 = add nsw i64 %1786, 80
  %1827 = getelementptr inbounds float, float* %3, i64 %1826
  %1828 = bitcast float* %1827 to <8 x float>*
  %1829 = load <8 x float>, <8 x float>* %1828, align 1, !tbaa !12
  %1830 = add nsw i64 %1786, 88
  %1831 = getelementptr inbounds float, float* %3, i64 %1830
  %1832 = bitcast float* %1831 to <8 x float>*
  %1833 = load <8 x float>, <8 x float>* %1832, align 1, !tbaa !12
  %1834 = add nsw i64 %1786, 96
  %1835 = getelementptr inbounds float, float* %3, i64 %1834
  %1836 = bitcast float* %1835 to <8 x float>*
  %1837 = load <8 x float>, <8 x float>* %1836, align 1, !tbaa !12
  %1838 = add nsw i64 %1786, 104
  %1839 = getelementptr inbounds float, float* %3, i64 %1838
  %1840 = bitcast float* %1839 to <8 x float>*
  %1841 = load <8 x float>, <8 x float>* %1840, align 1, !tbaa !12
  %1842 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1789, <8 x float> %65, <8 x float> %1733) #10
  %1843 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1793, <8 x float> %65, <8 x float> %1737) #10
  %1844 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1797, <8 x float> %65, <8 x float> %1741) #10
  %1845 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1801, <8 x float> %65, <8 x float> %1745) #10
  %1846 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1805, <8 x float> %65, <8 x float> %1749) #10
  %1847 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1809, <8 x float> %65, <8 x float> %1753) #10
  %1848 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1813, <8 x float> %65, <8 x float> %1757) #10
  %1849 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1817, <8 x float> %65, <8 x float> %1761) #10
  %1850 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1821, <8 x float> %65, <8 x float> %1765) #10
  %1851 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1825, <8 x float> %65, <8 x float> %1769) #10
  %1852 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1829, <8 x float> %65, <8 x float> %1773) #10
  %1853 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1833, <8 x float> %65, <8 x float> %1777) #10
  %1854 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1837, <8 x float> %65, <8 x float> %1781) #10
  %1855 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1841, <8 x float> %65, <8 x float> %1785) #10
  store <8 x float> %1842, <8 x float>* %1732, align 1, !tbaa !12
  store <8 x float> %1843, <8 x float>* %1736, align 1, !tbaa !12
  store <8 x float> %1844, <8 x float>* %1740, align 1, !tbaa !12
  store <8 x float> %1845, <8 x float>* %1744, align 1, !tbaa !12
  store <8 x float> %1846, <8 x float>* %1748, align 1, !tbaa !12
  store <8 x float> %1847, <8 x float>* %1752, align 1, !tbaa !12
  store <8 x float> %1848, <8 x float>* %1756, align 1, !tbaa !12
  store <8 x float> %1849, <8 x float>* %1760, align 1, !tbaa !12
  store <8 x float> %1850, <8 x float>* %1764, align 1, !tbaa !12
  store <8 x float> %1851, <8 x float>* %1768, align 1, !tbaa !12
  store <8 x float> %1852, <8 x float>* %1772, align 1, !tbaa !12
  store <8 x float> %1853, <8 x float>* %1776, align 1, !tbaa !12
  store <8 x float> %1854, <8 x float>* %1780, align 1, !tbaa !12
  store <8 x float> %1855, <8 x float>* %1784, align 1, !tbaa !12
  %1856 = add nuw nsw i64 %1673, 112
  %1857 = icmp ult i64 %1856, %1478
  br i1 %1857, label %1672, label %1665

1858:                                             ; preds = %1864
  br i1 %1667, label %1859, label %2065

1859:                                             ; preds = %1858
  %1860 = trunc i64 %71 to i32
  %1861 = mul nsw i32 %1666, %1860
  %1862 = sext i32 %1861 to i64
  %1863 = zext i32 %1666 to i64
  br label %2070

1864:                                             ; preds = %1668, %1864
  %1865 = phi i64 [ 0, %1668 ], [ %2063, %1864 ]
  %1866 = getelementptr inbounds float, float* %5, i64 %1865
  %1867 = getelementptr inbounds float, float* %1866, i64 8
  %1868 = bitcast float* %1867 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1868, i32 0, i32 1, i32 1)
  %1869 = getelementptr inbounds float, float* %3, i64 %1865
  %1870 = getelementptr inbounds float, float* %1869, i64 8
  %1871 = bitcast float* %1870 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1871, i32 0, i32 1, i32 1)
  %1872 = getelementptr inbounds float, float* %1866, i64 16
  %1873 = bitcast float* %1872 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1873, i32 0, i32 1, i32 1)
  %1874 = getelementptr inbounds float, float* %1869, i64 16
  %1875 = bitcast float* %1874 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1875, i32 0, i32 1, i32 1)
  %1876 = getelementptr inbounds float, float* %1866, i64 24
  %1877 = bitcast float* %1876 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1877, i32 0, i32 1, i32 1)
  %1878 = getelementptr inbounds float, float* %1869, i64 24
  %1879 = bitcast float* %1878 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1879, i32 0, i32 1, i32 1)
  %1880 = getelementptr inbounds float, float* %1866, i64 32
  %1881 = bitcast float* %1880 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1881, i32 0, i32 1, i32 1)
  %1882 = getelementptr inbounds float, float* %1869, i64 32
  %1883 = bitcast float* %1882 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1883, i32 0, i32 1, i32 1)
  %1884 = getelementptr inbounds float, float* %1866, i64 40
  %1885 = bitcast float* %1884 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1885, i32 0, i32 1, i32 1)
  %1886 = getelementptr inbounds float, float* %1869, i64 40
  %1887 = bitcast float* %1886 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1887, i32 0, i32 1, i32 1)
  %1888 = getelementptr inbounds float, float* %1866, i64 48
  %1889 = bitcast float* %1888 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1889, i32 0, i32 1, i32 1)
  %1890 = getelementptr inbounds float, float* %1869, i64 48
  %1891 = bitcast float* %1890 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1891, i32 0, i32 1, i32 1)
  %1892 = getelementptr inbounds float, float* %1866, i64 56
  %1893 = bitcast float* %1892 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1893, i32 0, i32 1, i32 1)
  %1894 = getelementptr inbounds float, float* %1869, i64 56
  %1895 = bitcast float* %1894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1895, i32 0, i32 1, i32 1)
  %1896 = getelementptr inbounds float, float* %1866, i64 64
  %1897 = bitcast float* %1896 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1897, i32 0, i32 1, i32 1)
  %1898 = getelementptr inbounds float, float* %1869, i64 64
  %1899 = bitcast float* %1898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1899, i32 0, i32 1, i32 1)
  %1900 = getelementptr inbounds float, float* %1866, i64 72
  %1901 = bitcast float* %1900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1901, i32 0, i32 1, i32 1)
  %1902 = getelementptr inbounds float, float* %1869, i64 72
  %1903 = bitcast float* %1902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1903, i32 0, i32 1, i32 1)
  %1904 = getelementptr inbounds float, float* %1866, i64 80
  %1905 = bitcast float* %1904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1905, i32 0, i32 1, i32 1)
  %1906 = getelementptr inbounds float, float* %1869, i64 80
  %1907 = bitcast float* %1906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1907, i32 0, i32 1, i32 1)
  %1908 = getelementptr inbounds float, float* %1866, i64 88
  %1909 = bitcast float* %1908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1909, i32 0, i32 1, i32 1)
  %1910 = getelementptr inbounds float, float* %1869, i64 88
  %1911 = bitcast float* %1910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1911, i32 0, i32 1, i32 1)
  %1912 = getelementptr inbounds float, float* %1866, i64 96
  %1913 = bitcast float* %1912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1913, i32 0, i32 1, i32 1)
  %1914 = getelementptr inbounds float, float* %1869, i64 96
  %1915 = bitcast float* %1914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1915, i32 0, i32 1, i32 1)
  %1916 = getelementptr inbounds float, float* %1866, i64 104
  %1917 = bitcast float* %1916 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1917, i32 0, i32 1, i32 1)
  %1918 = getelementptr inbounds float, float* %1869, i64 104
  %1919 = bitcast float* %1918 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1919, i32 0, i32 1, i32 1)
  %1920 = getelementptr inbounds float, float* %1866, i64 112
  %1921 = bitcast float* %1920 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1921, i32 0, i32 1, i32 1)
  %1922 = getelementptr inbounds float, float* %1869, i64 112
  %1923 = bitcast float* %1922 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1923, i32 0, i32 1, i32 1)
  %1924 = bitcast float* %1866 to <8 x float>*
  %1925 = load <8 x float>, <8 x float>* %1924, align 1, !tbaa !12
  %1926 = or i64 %1865, 8
  %1927 = getelementptr inbounds float, float* %5, i64 %1926
  %1928 = bitcast float* %1927 to <8 x float>*
  %1929 = load <8 x float>, <8 x float>* %1928, align 1, !tbaa !12
  %1930 = add nuw nsw i64 %1865, 16
  %1931 = getelementptr inbounds float, float* %5, i64 %1930
  %1932 = bitcast float* %1931 to <8 x float>*
  %1933 = load <8 x float>, <8 x float>* %1932, align 1, !tbaa !12
  %1934 = add nuw nsw i64 %1865, 24
  %1935 = getelementptr inbounds float, float* %5, i64 %1934
  %1936 = bitcast float* %1935 to <8 x float>*
  %1937 = load <8 x float>, <8 x float>* %1936, align 1, !tbaa !12
  %1938 = add nuw nsw i64 %1865, 32
  %1939 = getelementptr inbounds float, float* %5, i64 %1938
  %1940 = bitcast float* %1939 to <8 x float>*
  %1941 = load <8 x float>, <8 x float>* %1940, align 1, !tbaa !12
  %1942 = add nuw nsw i64 %1865, 40
  %1943 = getelementptr inbounds float, float* %5, i64 %1942
  %1944 = bitcast float* %1943 to <8 x float>*
  %1945 = load <8 x float>, <8 x float>* %1944, align 1, !tbaa !12
  %1946 = add nuw nsw i64 %1865, 48
  %1947 = getelementptr inbounds float, float* %5, i64 %1946
  %1948 = bitcast float* %1947 to <8 x float>*
  %1949 = load <8 x float>, <8 x float>* %1948, align 1, !tbaa !12
  %1950 = add nuw nsw i64 %1865, 56
  %1951 = getelementptr inbounds float, float* %5, i64 %1950
  %1952 = bitcast float* %1951 to <8 x float>*
  %1953 = load <8 x float>, <8 x float>* %1952, align 1, !tbaa !12
  %1954 = add nuw nsw i64 %1865, 64
  %1955 = getelementptr inbounds float, float* %5, i64 %1954
  %1956 = bitcast float* %1955 to <8 x float>*
  %1957 = load <8 x float>, <8 x float>* %1956, align 1, !tbaa !12
  %1958 = add nuw nsw i64 %1865, 72
  %1959 = getelementptr inbounds float, float* %5, i64 %1958
  %1960 = bitcast float* %1959 to <8 x float>*
  %1961 = load <8 x float>, <8 x float>* %1960, align 1, !tbaa !12
  %1962 = add nuw nsw i64 %1865, 80
  %1963 = getelementptr inbounds float, float* %5, i64 %1962
  %1964 = bitcast float* %1963 to <8 x float>*
  %1965 = load <8 x float>, <8 x float>* %1964, align 1, !tbaa !12
  %1966 = add nuw nsw i64 %1865, 88
  %1967 = getelementptr inbounds float, float* %5, i64 %1966
  %1968 = bitcast float* %1967 to <8 x float>*
  %1969 = load <8 x float>, <8 x float>* %1968, align 1, !tbaa !12
  %1970 = add nuw nsw i64 %1865, 96
  %1971 = getelementptr inbounds float, float* %5, i64 %1970
  %1972 = bitcast float* %1971 to <8 x float>*
  %1973 = load <8 x float>, <8 x float>* %1972, align 1, !tbaa !12
  %1974 = add nuw nsw i64 %1865, 104
  %1975 = getelementptr inbounds float, float* %5, i64 %1974
  %1976 = bitcast float* %1975 to <8 x float>*
  %1977 = load <8 x float>, <8 x float>* %1976, align 1, !tbaa !12
  %1978 = trunc i64 %1865 to i32
  %1979 = add nsw i32 %1671, %1978
  %1980 = sext i32 %1979 to i64
  %1981 = getelementptr inbounds float, float* %3, i64 %1980
  %1982 = bitcast float* %1981 to <8 x float>*
  %1983 = load <8 x float>, <8 x float>* %1982, align 1, !tbaa !12
  %1984 = add nsw i32 %1979, 8
  %1985 = sext i32 %1984 to i64
  %1986 = getelementptr inbounds float, float* %3, i64 %1985
  %1987 = bitcast float* %1986 to <8 x float>*
  %1988 = load <8 x float>, <8 x float>* %1987, align 1, !tbaa !12
  %1989 = add nsw i32 %1979, 16
  %1990 = sext i32 %1989 to i64
  %1991 = getelementptr inbounds float, float* %3, i64 %1990
  %1992 = bitcast float* %1991 to <8 x float>*
  %1993 = load <8 x float>, <8 x float>* %1992, align 1, !tbaa !12
  %1994 = add nsw i32 %1979, 24
  %1995 = sext i32 %1994 to i64
  %1996 = getelementptr inbounds float, float* %3, i64 %1995
  %1997 = bitcast float* %1996 to <8 x float>*
  %1998 = load <8 x float>, <8 x float>* %1997, align 1, !tbaa !12
  %1999 = add nsw i32 %1979, 32
  %2000 = sext i32 %1999 to i64
  %2001 = getelementptr inbounds float, float* %3, i64 %2000
  %2002 = bitcast float* %2001 to <8 x float>*
  %2003 = load <8 x float>, <8 x float>* %2002, align 1, !tbaa !12
  %2004 = add nsw i32 %1979, 40
  %2005 = sext i32 %2004 to i64
  %2006 = getelementptr inbounds float, float* %3, i64 %2005
  %2007 = bitcast float* %2006 to <8 x float>*
  %2008 = load <8 x float>, <8 x float>* %2007, align 1, !tbaa !12
  %2009 = add nsw i32 %1979, 48
  %2010 = sext i32 %2009 to i64
  %2011 = getelementptr inbounds float, float* %3, i64 %2010
  %2012 = bitcast float* %2011 to <8 x float>*
  %2013 = load <8 x float>, <8 x float>* %2012, align 1, !tbaa !12
  %2014 = add nsw i32 %1979, 56
  %2015 = sext i32 %2014 to i64
  %2016 = getelementptr inbounds float, float* %3, i64 %2015
  %2017 = bitcast float* %2016 to <8 x float>*
  %2018 = load <8 x float>, <8 x float>* %2017, align 1, !tbaa !12
  %2019 = add nsw i32 %1979, 64
  %2020 = sext i32 %2019 to i64
  %2021 = getelementptr inbounds float, float* %3, i64 %2020
  %2022 = bitcast float* %2021 to <8 x float>*
  %2023 = load <8 x float>, <8 x float>* %2022, align 1, !tbaa !12
  %2024 = add nsw i32 %1979, 72
  %2025 = sext i32 %2024 to i64
  %2026 = getelementptr inbounds float, float* %3, i64 %2025
  %2027 = bitcast float* %2026 to <8 x float>*
  %2028 = load <8 x float>, <8 x float>* %2027, align 1, !tbaa !12
  %2029 = add nsw i32 %1979, 80
  %2030 = sext i32 %2029 to i64
  %2031 = getelementptr inbounds float, float* %3, i64 %2030
  %2032 = bitcast float* %2031 to <8 x float>*
  %2033 = load <8 x float>, <8 x float>* %2032, align 1, !tbaa !12
  %2034 = add nsw i32 %1979, 88
  %2035 = sext i32 %2034 to i64
  %2036 = getelementptr inbounds float, float* %3, i64 %2035
  %2037 = bitcast float* %2036 to <8 x float>*
  %2038 = load <8 x float>, <8 x float>* %2037, align 1, !tbaa !12
  %2039 = add nsw i32 %1979, 96
  %2040 = sext i32 %2039 to i64
  %2041 = getelementptr inbounds float, float* %3, i64 %2040
  %2042 = bitcast float* %2041 to <8 x float>*
  %2043 = load <8 x float>, <8 x float>* %2042, align 1, !tbaa !12
  %2044 = add nsw i32 %1979, 104
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds float, float* %3, i64 %2045
  %2047 = bitcast float* %2046 to <8 x float>*
  %2048 = load <8 x float>, <8 x float>* %2047, align 1, !tbaa !12
  %2049 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1983, <8 x float> %70, <8 x float> %1925) #10
  %2050 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1988, <8 x float> %70, <8 x float> %1929) #10
  %2051 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1993, <8 x float> %70, <8 x float> %1933) #10
  %2052 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1998, <8 x float> %70, <8 x float> %1937) #10
  %2053 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2003, <8 x float> %70, <8 x float> %1941) #10
  %2054 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2008, <8 x float> %70, <8 x float> %1945) #10
  %2055 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2013, <8 x float> %70, <8 x float> %1949) #10
  %2056 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2018, <8 x float> %70, <8 x float> %1953) #10
  %2057 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2023, <8 x float> %70, <8 x float> %1957) #10
  %2058 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2028, <8 x float> %70, <8 x float> %1961) #10
  %2059 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2033, <8 x float> %70, <8 x float> %1965) #10
  %2060 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2038, <8 x float> %70, <8 x float> %1969) #10
  %2061 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2043, <8 x float> %70, <8 x float> %1973) #10
  %2062 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2048, <8 x float> %70, <8 x float> %1977) #10
  store <8 x float> %2049, <8 x float>* %1924, align 1, !tbaa !12
  store <8 x float> %2050, <8 x float>* %1928, align 1, !tbaa !12
  store <8 x float> %2051, <8 x float>* %1932, align 1, !tbaa !12
  store <8 x float> %2052, <8 x float>* %1936, align 1, !tbaa !12
  store <8 x float> %2053, <8 x float>* %1940, align 1, !tbaa !12
  store <8 x float> %2054, <8 x float>* %1944, align 1, !tbaa !12
  store <8 x float> %2055, <8 x float>* %1948, align 1, !tbaa !12
  store <8 x float> %2056, <8 x float>* %1952, align 1, !tbaa !12
  store <8 x float> %2057, <8 x float>* %1956, align 1, !tbaa !12
  store <8 x float> %2058, <8 x float>* %1960, align 1, !tbaa !12
  store <8 x float> %2059, <8 x float>* %1964, align 1, !tbaa !12
  store <8 x float> %2060, <8 x float>* %1968, align 1, !tbaa !12
  store <8 x float> %2061, <8 x float>* %1972, align 1, !tbaa !12
  store <8 x float> %2062, <8 x float>* %1976, align 1, !tbaa !12
  %2063 = add nuw nsw i64 %1865, 112
  %2064 = icmp ult i64 %2063, %1669
  br i1 %2064, label %1864, label %1858

2065:                                             ; preds = %2070, %481, %20, %1073, %1665, %1858
  %2066 = add nuw nsw i64 %21, 11
  %2067 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %2068 = sext i32 %2067 to i64
  %2069 = icmp slt i64 %2066, %2068
  br i1 %2069, label %20, label %8

2070:                                             ; preds = %1859, %2070
  %2071 = phi i64 [ 0, %1859 ], [ %2254, %2070 ]
  %2072 = getelementptr inbounds float, float* %5, i64 %2071
  %2073 = getelementptr inbounds float, float* %2072, i64 8
  %2074 = bitcast float* %2073 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2074, i32 0, i32 1, i32 1)
  %2075 = getelementptr inbounds float, float* %3, i64 %2071
  %2076 = getelementptr inbounds float, float* %2075, i64 8
  %2077 = bitcast float* %2076 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2077, i32 0, i32 1, i32 1)
  %2078 = getelementptr inbounds float, float* %2072, i64 16
  %2079 = bitcast float* %2078 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2079, i32 0, i32 1, i32 1)
  %2080 = getelementptr inbounds float, float* %2075, i64 16
  %2081 = bitcast float* %2080 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2081, i32 0, i32 1, i32 1)
  %2082 = getelementptr inbounds float, float* %2072, i64 24
  %2083 = bitcast float* %2082 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2083, i32 0, i32 1, i32 1)
  %2084 = getelementptr inbounds float, float* %2075, i64 24
  %2085 = bitcast float* %2084 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2085, i32 0, i32 1, i32 1)
  %2086 = getelementptr inbounds float, float* %2072, i64 32
  %2087 = bitcast float* %2086 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2087, i32 0, i32 1, i32 1)
  %2088 = getelementptr inbounds float, float* %2075, i64 32
  %2089 = bitcast float* %2088 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2089, i32 0, i32 1, i32 1)
  %2090 = getelementptr inbounds float, float* %2072, i64 40
  %2091 = bitcast float* %2090 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2091, i32 0, i32 1, i32 1)
  %2092 = getelementptr inbounds float, float* %2075, i64 40
  %2093 = bitcast float* %2092 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2093, i32 0, i32 1, i32 1)
  %2094 = getelementptr inbounds float, float* %2072, i64 48
  %2095 = bitcast float* %2094 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2095, i32 0, i32 1, i32 1)
  %2096 = getelementptr inbounds float, float* %2075, i64 48
  %2097 = bitcast float* %2096 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2097, i32 0, i32 1, i32 1)
  %2098 = getelementptr inbounds float, float* %2072, i64 56
  %2099 = bitcast float* %2098 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2099, i32 0, i32 1, i32 1)
  %2100 = getelementptr inbounds float, float* %2075, i64 56
  %2101 = bitcast float* %2100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2101, i32 0, i32 1, i32 1)
  %2102 = getelementptr inbounds float, float* %2072, i64 64
  %2103 = bitcast float* %2102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2103, i32 0, i32 1, i32 1)
  %2104 = getelementptr inbounds float, float* %2075, i64 64
  %2105 = bitcast float* %2104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2105, i32 0, i32 1, i32 1)
  %2106 = getelementptr inbounds float, float* %2072, i64 72
  %2107 = bitcast float* %2106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2107, i32 0, i32 1, i32 1)
  %2108 = getelementptr inbounds float, float* %2075, i64 72
  %2109 = bitcast float* %2108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2109, i32 0, i32 1, i32 1)
  %2110 = getelementptr inbounds float, float* %2072, i64 80
  %2111 = bitcast float* %2110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2111, i32 0, i32 1, i32 1)
  %2112 = getelementptr inbounds float, float* %2075, i64 80
  %2113 = bitcast float* %2112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2113, i32 0, i32 1, i32 1)
  %2114 = getelementptr inbounds float, float* %2072, i64 88
  %2115 = bitcast float* %2114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2115, i32 0, i32 1, i32 1)
  %2116 = getelementptr inbounds float, float* %2075, i64 88
  %2117 = bitcast float* %2116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2117, i32 0, i32 1, i32 1)
  %2118 = getelementptr inbounds float, float* %2072, i64 96
  %2119 = bitcast float* %2118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2119, i32 0, i32 1, i32 1)
  %2120 = getelementptr inbounds float, float* %2075, i64 96
  %2121 = bitcast float* %2120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2121, i32 0, i32 1, i32 1)
  %2122 = getelementptr inbounds float, float* %2072, i64 104
  %2123 = bitcast float* %2122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2123, i32 0, i32 1, i32 1)
  %2124 = getelementptr inbounds float, float* %2075, i64 104
  %2125 = bitcast float* %2124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2125, i32 0, i32 1, i32 1)
  %2126 = getelementptr inbounds float, float* %2072, i64 112
  %2127 = bitcast float* %2126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2127, i32 0, i32 1, i32 1)
  %2128 = getelementptr inbounds float, float* %2075, i64 112
  %2129 = bitcast float* %2128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %2129, i32 0, i32 1, i32 1)
  %2130 = bitcast float* %2072 to <8 x float>*
  %2131 = load <8 x float>, <8 x float>* %2130, align 1, !tbaa !12
  %2132 = or i64 %2071, 8
  %2133 = getelementptr inbounds float, float* %5, i64 %2132
  %2134 = bitcast float* %2133 to <8 x float>*
  %2135 = load <8 x float>, <8 x float>* %2134, align 1, !tbaa !12
  %2136 = add nuw nsw i64 %2071, 16
  %2137 = getelementptr inbounds float, float* %5, i64 %2136
  %2138 = bitcast float* %2137 to <8 x float>*
  %2139 = load <8 x float>, <8 x float>* %2138, align 1, !tbaa !12
  %2140 = add nuw nsw i64 %2071, 24
  %2141 = getelementptr inbounds float, float* %5, i64 %2140
  %2142 = bitcast float* %2141 to <8 x float>*
  %2143 = load <8 x float>, <8 x float>* %2142, align 1, !tbaa !12
  %2144 = add nuw nsw i64 %2071, 32
  %2145 = getelementptr inbounds float, float* %5, i64 %2144
  %2146 = bitcast float* %2145 to <8 x float>*
  %2147 = load <8 x float>, <8 x float>* %2146, align 1, !tbaa !12
  %2148 = add nuw nsw i64 %2071, 40
  %2149 = getelementptr inbounds float, float* %5, i64 %2148
  %2150 = bitcast float* %2149 to <8 x float>*
  %2151 = load <8 x float>, <8 x float>* %2150, align 1, !tbaa !12
  %2152 = add nuw nsw i64 %2071, 48
  %2153 = getelementptr inbounds float, float* %5, i64 %2152
  %2154 = bitcast float* %2153 to <8 x float>*
  %2155 = load <8 x float>, <8 x float>* %2154, align 1, !tbaa !12
  %2156 = add nuw nsw i64 %2071, 56
  %2157 = getelementptr inbounds float, float* %5, i64 %2156
  %2158 = bitcast float* %2157 to <8 x float>*
  %2159 = load <8 x float>, <8 x float>* %2158, align 1, !tbaa !12
  %2160 = add nuw nsw i64 %2071, 64
  %2161 = getelementptr inbounds float, float* %5, i64 %2160
  %2162 = bitcast float* %2161 to <8 x float>*
  %2163 = load <8 x float>, <8 x float>* %2162, align 1, !tbaa !12
  %2164 = add nuw nsw i64 %2071, 72
  %2165 = getelementptr inbounds float, float* %5, i64 %2164
  %2166 = bitcast float* %2165 to <8 x float>*
  %2167 = load <8 x float>, <8 x float>* %2166, align 1, !tbaa !12
  %2168 = add nuw nsw i64 %2071, 80
  %2169 = getelementptr inbounds float, float* %5, i64 %2168
  %2170 = bitcast float* %2169 to <8 x float>*
  %2171 = load <8 x float>, <8 x float>* %2170, align 1, !tbaa !12
  %2172 = add nuw nsw i64 %2071, 88
  %2173 = getelementptr inbounds float, float* %5, i64 %2172
  %2174 = bitcast float* %2173 to <8 x float>*
  %2175 = load <8 x float>, <8 x float>* %2174, align 1, !tbaa !12
  %2176 = add nuw nsw i64 %2071, 96
  %2177 = getelementptr inbounds float, float* %5, i64 %2176
  %2178 = bitcast float* %2177 to <8 x float>*
  %2179 = load <8 x float>, <8 x float>* %2178, align 1, !tbaa !12
  %2180 = add nuw nsw i64 %2071, 104
  %2181 = getelementptr inbounds float, float* %5, i64 %2180
  %2182 = bitcast float* %2181 to <8 x float>*
  %2183 = load <8 x float>, <8 x float>* %2182, align 1, !tbaa !12
  %2184 = add nsw i64 %2071, %1862
  %2185 = getelementptr inbounds float, float* %3, i64 %2184
  %2186 = bitcast float* %2185 to <8 x float>*
  %2187 = load <8 x float>, <8 x float>* %2186, align 1, !tbaa !12
  %2188 = add nsw i64 %2184, 8
  %2189 = getelementptr inbounds float, float* %3, i64 %2188
  %2190 = bitcast float* %2189 to <8 x float>*
  %2191 = load <8 x float>, <8 x float>* %2190, align 1, !tbaa !12
  %2192 = add nsw i64 %2184, 16
  %2193 = getelementptr inbounds float, float* %3, i64 %2192
  %2194 = bitcast float* %2193 to <8 x float>*
  %2195 = load <8 x float>, <8 x float>* %2194, align 1, !tbaa !12
  %2196 = add nsw i64 %2184, 24
  %2197 = getelementptr inbounds float, float* %3, i64 %2196
  %2198 = bitcast float* %2197 to <8 x float>*
  %2199 = load <8 x float>, <8 x float>* %2198, align 1, !tbaa !12
  %2200 = add nsw i64 %2184, 32
  %2201 = getelementptr inbounds float, float* %3, i64 %2200
  %2202 = bitcast float* %2201 to <8 x float>*
  %2203 = load <8 x float>, <8 x float>* %2202, align 1, !tbaa !12
  %2204 = add nsw i64 %2184, 40
  %2205 = getelementptr inbounds float, float* %3, i64 %2204
  %2206 = bitcast float* %2205 to <8 x float>*
  %2207 = load <8 x float>, <8 x float>* %2206, align 1, !tbaa !12
  %2208 = add nsw i64 %2184, 48
  %2209 = getelementptr inbounds float, float* %3, i64 %2208
  %2210 = bitcast float* %2209 to <8 x float>*
  %2211 = load <8 x float>, <8 x float>* %2210, align 1, !tbaa !12
  %2212 = add nsw i64 %2184, 56
  %2213 = getelementptr inbounds float, float* %3, i64 %2212
  %2214 = bitcast float* %2213 to <8 x float>*
  %2215 = load <8 x float>, <8 x float>* %2214, align 1, !tbaa !12
  %2216 = add nsw i64 %2184, 64
  %2217 = getelementptr inbounds float, float* %3, i64 %2216
  %2218 = bitcast float* %2217 to <8 x float>*
  %2219 = load <8 x float>, <8 x float>* %2218, align 1, !tbaa !12
  %2220 = add nsw i64 %2184, 72
  %2221 = getelementptr inbounds float, float* %3, i64 %2220
  %2222 = bitcast float* %2221 to <8 x float>*
  %2223 = load <8 x float>, <8 x float>* %2222, align 1, !tbaa !12
  %2224 = add nsw i64 %2184, 80
  %2225 = getelementptr inbounds float, float* %3, i64 %2224
  %2226 = bitcast float* %2225 to <8 x float>*
  %2227 = load <8 x float>, <8 x float>* %2226, align 1, !tbaa !12
  %2228 = add nsw i64 %2184, 88
  %2229 = getelementptr inbounds float, float* %3, i64 %2228
  %2230 = bitcast float* %2229 to <8 x float>*
  %2231 = load <8 x float>, <8 x float>* %2230, align 1, !tbaa !12
  %2232 = add nsw i64 %2184, 96
  %2233 = getelementptr inbounds float, float* %3, i64 %2232
  %2234 = bitcast float* %2233 to <8 x float>*
  %2235 = load <8 x float>, <8 x float>* %2234, align 1, !tbaa !12
  %2236 = add nsw i64 %2184, 104
  %2237 = getelementptr inbounds float, float* %3, i64 %2236
  %2238 = bitcast float* %2237 to <8 x float>*
  %2239 = load <8 x float>, <8 x float>* %2238, align 1, !tbaa !12
  %2240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2187, <8 x float> %75, <8 x float> %2131) #10
  %2241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2191, <8 x float> %75, <8 x float> %2135) #10
  %2242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2195, <8 x float> %75, <8 x float> %2139) #10
  %2243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2199, <8 x float> %75, <8 x float> %2143) #10
  %2244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2203, <8 x float> %75, <8 x float> %2147) #10
  %2245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2207, <8 x float> %75, <8 x float> %2151) #10
  %2246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2211, <8 x float> %75, <8 x float> %2155) #10
  %2247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2215, <8 x float> %75, <8 x float> %2159) #10
  %2248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2219, <8 x float> %75, <8 x float> %2163) #10
  %2249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2223, <8 x float> %75, <8 x float> %2167) #10
  %2250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2227, <8 x float> %75, <8 x float> %2171) #10
  %2251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2231, <8 x float> %75, <8 x float> %2175) #10
  %2252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2235, <8 x float> %75, <8 x float> %2179) #10
  %2253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2239, <8 x float> %75, <8 x float> %2183) #10
  store <8 x float> %2240, <8 x float>* %2130, align 1, !tbaa !12
  store <8 x float> %2241, <8 x float>* %2134, align 1, !tbaa !12
  store <8 x float> %2242, <8 x float>* %2138, align 1, !tbaa !12
  store <8 x float> %2243, <8 x float>* %2142, align 1, !tbaa !12
  store <8 x float> %2244, <8 x float>* %2146, align 1, !tbaa !12
  store <8 x float> %2245, <8 x float>* %2150, align 1, !tbaa !12
  store <8 x float> %2246, <8 x float>* %2154, align 1, !tbaa !12
  store <8 x float> %2247, <8 x float>* %2158, align 1, !tbaa !12
  store <8 x float> %2248, <8 x float>* %2162, align 1, !tbaa !12
  store <8 x float> %2249, <8 x float>* %2166, align 1, !tbaa !12
  store <8 x float> %2250, <8 x float>* %2170, align 1, !tbaa !12
  store <8 x float> %2251, <8 x float>* %2174, align 1, !tbaa !12
  store <8 x float> %2252, <8 x float>* %2178, align 1, !tbaa !12
  store <8 x float> %2253, <8 x float>* %2182, align 1, !tbaa !12
  %2254 = add nuw nsw i64 %2071, 112
  %2255 = icmp ult i64 %2254, %1863
  br i1 %2255, label %2070, label %2065
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 319
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui14_uk11.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
