; ModuleID = 'codes/matvec_ui14_uk9.cpp'
source_filename = "codes/matvec_ui14_uk9.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui14_uk9.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 112
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 72
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1655, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1655
  %21 = phi i64 [ %1656, %1655 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %1655

68:                                               ; preds = %20
  %69 = zext i32 %66 to i64
  %70 = trunc i64 %21 to i32
  %71 = mul nsw i32 %66, %70
  br label %78

72:                                               ; preds = %78
  br i1 %67, label %73, label %471

73:                                               ; preds = %72
  %74 = trunc i64 %26 to i32
  %75 = mul nsw i32 %66, %74
  %76 = sext i32 %75 to i64
  %77 = zext i32 %66 to i64
  br label %285

78:                                               ; preds = %68, %78
  %79 = phi i64 [ 0, %68 ], [ %277, %78 ]
  %80 = getelementptr inbounds float, float* %5, i64 %79
  %81 = getelementptr inbounds float, float* %80, i64 8
  %82 = bitcast float* %81 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %82, i32 0, i32 1, i32 1)
  %83 = getelementptr inbounds float, float* %3, i64 %79
  %84 = getelementptr inbounds float, float* %83, i64 8
  %85 = bitcast float* %84 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %85, i32 0, i32 1, i32 1)
  %86 = getelementptr inbounds float, float* %80, i64 16
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %83, i64 16
  %89 = bitcast float* %88 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %89, i32 0, i32 1, i32 1)
  %90 = getelementptr inbounds float, float* %80, i64 24
  %91 = bitcast float* %90 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %91, i32 0, i32 1, i32 1)
  %92 = getelementptr inbounds float, float* %83, i64 24
  %93 = bitcast float* %92 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %93, i32 0, i32 1, i32 1)
  %94 = getelementptr inbounds float, float* %80, i64 32
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %83, i64 32
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %80, i64 40
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %83, i64 40
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %80, i64 48
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %83, i64 48
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %80, i64 56
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %83, i64 56
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %80, i64 64
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %83, i64 64
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %80, i64 72
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %83, i64 72
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %80, i64 80
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %83, i64 80
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %80, i64 88
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %83, i64 88
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %80, i64 96
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %83, i64 96
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %80, i64 104
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %83, i64 104
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %80, i64 112
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %83, i64 112
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = bitcast float* %80 to <8 x float>*
  %139 = load <8 x float>, <8 x float>* %138, align 1, !tbaa !12
  %140 = or i64 %79, 8
  %141 = getelementptr inbounds float, float* %5, i64 %140
  %142 = bitcast float* %141 to <8 x float>*
  %143 = load <8 x float>, <8 x float>* %142, align 1, !tbaa !12
  %144 = add nuw nsw i64 %79, 16
  %145 = getelementptr inbounds float, float* %5, i64 %144
  %146 = bitcast float* %145 to <8 x float>*
  %147 = load <8 x float>, <8 x float>* %146, align 1, !tbaa !12
  %148 = add nuw nsw i64 %79, 24
  %149 = getelementptr inbounds float, float* %5, i64 %148
  %150 = bitcast float* %149 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = add nuw nsw i64 %79, 32
  %153 = getelementptr inbounds float, float* %5, i64 %152
  %154 = bitcast float* %153 to <8 x float>*
  %155 = load <8 x float>, <8 x float>* %154, align 1, !tbaa !12
  %156 = add nuw nsw i64 %79, 40
  %157 = getelementptr inbounds float, float* %5, i64 %156
  %158 = bitcast float* %157 to <8 x float>*
  %159 = load <8 x float>, <8 x float>* %158, align 1, !tbaa !12
  %160 = add nuw nsw i64 %79, 48
  %161 = getelementptr inbounds float, float* %5, i64 %160
  %162 = bitcast float* %161 to <8 x float>*
  %163 = load <8 x float>, <8 x float>* %162, align 1, !tbaa !12
  %164 = add nuw nsw i64 %79, 56
  %165 = getelementptr inbounds float, float* %5, i64 %164
  %166 = bitcast float* %165 to <8 x float>*
  %167 = load <8 x float>, <8 x float>* %166, align 1, !tbaa !12
  %168 = add nuw nsw i64 %79, 64
  %169 = getelementptr inbounds float, float* %5, i64 %168
  %170 = bitcast float* %169 to <8 x float>*
  %171 = load <8 x float>, <8 x float>* %170, align 1, !tbaa !12
  %172 = add nuw nsw i64 %79, 72
  %173 = getelementptr inbounds float, float* %5, i64 %172
  %174 = bitcast float* %173 to <8 x float>*
  %175 = load <8 x float>, <8 x float>* %174, align 1, !tbaa !12
  %176 = add nuw nsw i64 %79, 80
  %177 = getelementptr inbounds float, float* %5, i64 %176
  %178 = bitcast float* %177 to <8 x float>*
  %179 = load <8 x float>, <8 x float>* %178, align 1, !tbaa !12
  %180 = add nuw nsw i64 %79, 88
  %181 = getelementptr inbounds float, float* %5, i64 %180
  %182 = bitcast float* %181 to <8 x float>*
  %183 = load <8 x float>, <8 x float>* %182, align 1, !tbaa !12
  %184 = add nuw nsw i64 %79, 96
  %185 = getelementptr inbounds float, float* %5, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = add nuw nsw i64 %79, 104
  %189 = getelementptr inbounds float, float* %5, i64 %188
  %190 = bitcast float* %189 to <8 x float>*
  %191 = load <8 x float>, <8 x float>* %190, align 1, !tbaa !12
  %192 = trunc i64 %79 to i32
  %193 = add nsw i32 %71, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %3, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = add nsw i32 %193, 8
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %3, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nsw i32 %193, 16
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = add nsw i32 %193, 24
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nsw i32 %193, 32
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %3, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %217 = load <8 x float>, <8 x float>* %216, align 1, !tbaa !12
  %218 = add nsw i32 %193, 40
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %3, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %222 = load <8 x float>, <8 x float>* %221, align 1, !tbaa !12
  %223 = add nsw i32 %193, 48
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %3, i64 %224
  %226 = bitcast float* %225 to <8 x float>*
  %227 = load <8 x float>, <8 x float>* %226, align 1, !tbaa !12
  %228 = add nsw i32 %193, 56
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float, float* %3, i64 %229
  %231 = bitcast float* %230 to <8 x float>*
  %232 = load <8 x float>, <8 x float>* %231, align 1, !tbaa !12
  %233 = add nsw i32 %193, 64
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float, float* %3, i64 %234
  %236 = bitcast float* %235 to <8 x float>*
  %237 = load <8 x float>, <8 x float>* %236, align 1, !tbaa !12
  %238 = add nsw i32 %193, 72
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float, float* %3, i64 %239
  %241 = bitcast float* %240 to <8 x float>*
  %242 = load <8 x float>, <8 x float>* %241, align 1, !tbaa !12
  %243 = add nsw i32 %193, 80
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %3, i64 %244
  %246 = bitcast float* %245 to <8 x float>*
  %247 = load <8 x float>, <8 x float>* %246, align 1, !tbaa !12
  %248 = add nsw i32 %193, 88
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds float, float* %3, i64 %249
  %251 = bitcast float* %250 to <8 x float>*
  %252 = load <8 x float>, <8 x float>* %251, align 1, !tbaa !12
  %253 = add nsw i32 %193, 96
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %3, i64 %254
  %256 = bitcast float* %255 to <8 x float>*
  %257 = load <8 x float>, <8 x float>* %256, align 1, !tbaa !12
  %258 = add nsw i32 %193, 104
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds float, float* %3, i64 %259
  %261 = bitcast float* %260 to <8 x float>*
  %262 = load <8 x float>, <8 x float>* %261, align 1, !tbaa !12
  %263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %197, <8 x float> %25, <8 x float> %139) #10
  %264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %202, <8 x float> %25, <8 x float> %143) #10
  %265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %147) #10
  %266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %151) #10
  %267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %217, <8 x float> %25, <8 x float> %155) #10
  %268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %222, <8 x float> %25, <8 x float> %159) #10
  %269 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %227, <8 x float> %25, <8 x float> %163) #10
  %270 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %232, <8 x float> %25, <8 x float> %167) #10
  %271 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %237, <8 x float> %25, <8 x float> %171) #10
  %272 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %242, <8 x float> %25, <8 x float> %175) #10
  %273 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %247, <8 x float> %25, <8 x float> %179) #10
  %274 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %252, <8 x float> %25, <8 x float> %183) #10
  %275 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %257, <8 x float> %25, <8 x float> %187) #10
  %276 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %262, <8 x float> %25, <8 x float> %191) #10
  store <8 x float> %263, <8 x float>* %138, align 1, !tbaa !12
  store <8 x float> %264, <8 x float>* %142, align 1, !tbaa !12
  store <8 x float> %265, <8 x float>* %146, align 1, !tbaa !12
  store <8 x float> %266, <8 x float>* %150, align 1, !tbaa !12
  store <8 x float> %267, <8 x float>* %154, align 1, !tbaa !12
  store <8 x float> %268, <8 x float>* %158, align 1, !tbaa !12
  store <8 x float> %269, <8 x float>* %162, align 1, !tbaa !12
  store <8 x float> %270, <8 x float>* %166, align 1, !tbaa !12
  store <8 x float> %271, <8 x float>* %170, align 1, !tbaa !12
  store <8 x float> %272, <8 x float>* %174, align 1, !tbaa !12
  store <8 x float> %273, <8 x float>* %178, align 1, !tbaa !12
  store <8 x float> %274, <8 x float>* %182, align 1, !tbaa !12
  store <8 x float> %275, <8 x float>* %186, align 1, !tbaa !12
  store <8 x float> %276, <8 x float>* %190, align 1, !tbaa !12
  %277 = add nuw nsw i64 %79, 112
  %278 = icmp ult i64 %277, %69
  br i1 %278, label %78, label %72

279:                                              ; preds = %285
  br i1 %67, label %280, label %471

280:                                              ; preds = %279
  %281 = trunc i64 %31 to i32
  %282 = mul nsw i32 %66, %281
  %283 = sext i32 %282 to i64
  %284 = zext i32 %66 to i64
  br label %478

285:                                              ; preds = %73, %285
  %286 = phi i64 [ 0, %73 ], [ %469, %285 ]
  %287 = getelementptr inbounds float, float* %5, i64 %286
  %288 = getelementptr inbounds float, float* %287, i64 8
  %289 = bitcast float* %288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %289, i32 0, i32 1, i32 1)
  %290 = getelementptr inbounds float, float* %3, i64 %286
  %291 = getelementptr inbounds float, float* %290, i64 8
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %287, i64 16
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %290, i64 16
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %287, i64 24
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %290, i64 24
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = getelementptr inbounds float, float* %287, i64 32
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = getelementptr inbounds float, float* %290, i64 32
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %287, i64 40
  %306 = bitcast float* %305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %306, i32 0, i32 1, i32 1)
  %307 = getelementptr inbounds float, float* %290, i64 40
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %287, i64 48
  %310 = bitcast float* %309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %310, i32 0, i32 1, i32 1)
  %311 = getelementptr inbounds float, float* %290, i64 48
  %312 = bitcast float* %311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %312, i32 0, i32 1, i32 1)
  %313 = getelementptr inbounds float, float* %287, i64 56
  %314 = bitcast float* %313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %314, i32 0, i32 1, i32 1)
  %315 = getelementptr inbounds float, float* %290, i64 56
  %316 = bitcast float* %315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %316, i32 0, i32 1, i32 1)
  %317 = getelementptr inbounds float, float* %287, i64 64
  %318 = bitcast float* %317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %318, i32 0, i32 1, i32 1)
  %319 = getelementptr inbounds float, float* %290, i64 64
  %320 = bitcast float* %319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %320, i32 0, i32 1, i32 1)
  %321 = getelementptr inbounds float, float* %287, i64 72
  %322 = bitcast float* %321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %322, i32 0, i32 1, i32 1)
  %323 = getelementptr inbounds float, float* %290, i64 72
  %324 = bitcast float* %323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %324, i32 0, i32 1, i32 1)
  %325 = getelementptr inbounds float, float* %287, i64 80
  %326 = bitcast float* %325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %326, i32 0, i32 1, i32 1)
  %327 = getelementptr inbounds float, float* %290, i64 80
  %328 = bitcast float* %327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %328, i32 0, i32 1, i32 1)
  %329 = getelementptr inbounds float, float* %287, i64 88
  %330 = bitcast float* %329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %330, i32 0, i32 1, i32 1)
  %331 = getelementptr inbounds float, float* %290, i64 88
  %332 = bitcast float* %331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %332, i32 0, i32 1, i32 1)
  %333 = getelementptr inbounds float, float* %287, i64 96
  %334 = bitcast float* %333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %334, i32 0, i32 1, i32 1)
  %335 = getelementptr inbounds float, float* %290, i64 96
  %336 = bitcast float* %335 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %336, i32 0, i32 1, i32 1)
  %337 = getelementptr inbounds float, float* %287, i64 104
  %338 = bitcast float* %337 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %338, i32 0, i32 1, i32 1)
  %339 = getelementptr inbounds float, float* %290, i64 104
  %340 = bitcast float* %339 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %340, i32 0, i32 1, i32 1)
  %341 = getelementptr inbounds float, float* %287, i64 112
  %342 = bitcast float* %341 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %342, i32 0, i32 1, i32 1)
  %343 = getelementptr inbounds float, float* %290, i64 112
  %344 = bitcast float* %343 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %344, i32 0, i32 1, i32 1)
  %345 = bitcast float* %287 to <8 x float>*
  %346 = load <8 x float>, <8 x float>* %345, align 1, !tbaa !12
  %347 = or i64 %286, 8
  %348 = getelementptr inbounds float, float* %5, i64 %347
  %349 = bitcast float* %348 to <8 x float>*
  %350 = load <8 x float>, <8 x float>* %349, align 1, !tbaa !12
  %351 = add nuw nsw i64 %286, 16
  %352 = getelementptr inbounds float, float* %5, i64 %351
  %353 = bitcast float* %352 to <8 x float>*
  %354 = load <8 x float>, <8 x float>* %353, align 1, !tbaa !12
  %355 = add nuw nsw i64 %286, 24
  %356 = getelementptr inbounds float, float* %5, i64 %355
  %357 = bitcast float* %356 to <8 x float>*
  %358 = load <8 x float>, <8 x float>* %357, align 1, !tbaa !12
  %359 = add nuw nsw i64 %286, 32
  %360 = getelementptr inbounds float, float* %5, i64 %359
  %361 = bitcast float* %360 to <8 x float>*
  %362 = load <8 x float>, <8 x float>* %361, align 1, !tbaa !12
  %363 = add nuw nsw i64 %286, 40
  %364 = getelementptr inbounds float, float* %5, i64 %363
  %365 = bitcast float* %364 to <8 x float>*
  %366 = load <8 x float>, <8 x float>* %365, align 1, !tbaa !12
  %367 = add nuw nsw i64 %286, 48
  %368 = getelementptr inbounds float, float* %5, i64 %367
  %369 = bitcast float* %368 to <8 x float>*
  %370 = load <8 x float>, <8 x float>* %369, align 1, !tbaa !12
  %371 = add nuw nsw i64 %286, 56
  %372 = getelementptr inbounds float, float* %5, i64 %371
  %373 = bitcast float* %372 to <8 x float>*
  %374 = load <8 x float>, <8 x float>* %373, align 1, !tbaa !12
  %375 = add nuw nsw i64 %286, 64
  %376 = getelementptr inbounds float, float* %5, i64 %375
  %377 = bitcast float* %376 to <8 x float>*
  %378 = load <8 x float>, <8 x float>* %377, align 1, !tbaa !12
  %379 = add nuw nsw i64 %286, 72
  %380 = getelementptr inbounds float, float* %5, i64 %379
  %381 = bitcast float* %380 to <8 x float>*
  %382 = load <8 x float>, <8 x float>* %381, align 1, !tbaa !12
  %383 = add nuw nsw i64 %286, 80
  %384 = getelementptr inbounds float, float* %5, i64 %383
  %385 = bitcast float* %384 to <8 x float>*
  %386 = load <8 x float>, <8 x float>* %385, align 1, !tbaa !12
  %387 = add nuw nsw i64 %286, 88
  %388 = getelementptr inbounds float, float* %5, i64 %387
  %389 = bitcast float* %388 to <8 x float>*
  %390 = load <8 x float>, <8 x float>* %389, align 1, !tbaa !12
  %391 = add nuw nsw i64 %286, 96
  %392 = getelementptr inbounds float, float* %5, i64 %391
  %393 = bitcast float* %392 to <8 x float>*
  %394 = load <8 x float>, <8 x float>* %393, align 1, !tbaa !12
  %395 = add nuw nsw i64 %286, 104
  %396 = getelementptr inbounds float, float* %5, i64 %395
  %397 = bitcast float* %396 to <8 x float>*
  %398 = load <8 x float>, <8 x float>* %397, align 1, !tbaa !12
  %399 = add nsw i64 %286, %76
  %400 = getelementptr inbounds float, float* %3, i64 %399
  %401 = bitcast float* %400 to <8 x float>*
  %402 = load <8 x float>, <8 x float>* %401, align 1, !tbaa !12
  %403 = add nsw i64 %399, 8
  %404 = getelementptr inbounds float, float* %3, i64 %403
  %405 = bitcast float* %404 to <8 x float>*
  %406 = load <8 x float>, <8 x float>* %405, align 1, !tbaa !12
  %407 = add nsw i64 %399, 16
  %408 = getelementptr inbounds float, float* %3, i64 %407
  %409 = bitcast float* %408 to <8 x float>*
  %410 = load <8 x float>, <8 x float>* %409, align 1, !tbaa !12
  %411 = add nsw i64 %399, 24
  %412 = getelementptr inbounds float, float* %3, i64 %411
  %413 = bitcast float* %412 to <8 x float>*
  %414 = load <8 x float>, <8 x float>* %413, align 1, !tbaa !12
  %415 = add nsw i64 %399, 32
  %416 = getelementptr inbounds float, float* %3, i64 %415
  %417 = bitcast float* %416 to <8 x float>*
  %418 = load <8 x float>, <8 x float>* %417, align 1, !tbaa !12
  %419 = add nsw i64 %399, 40
  %420 = getelementptr inbounds float, float* %3, i64 %419
  %421 = bitcast float* %420 to <8 x float>*
  %422 = load <8 x float>, <8 x float>* %421, align 1, !tbaa !12
  %423 = add nsw i64 %399, 48
  %424 = getelementptr inbounds float, float* %3, i64 %423
  %425 = bitcast float* %424 to <8 x float>*
  %426 = load <8 x float>, <8 x float>* %425, align 1, !tbaa !12
  %427 = add nsw i64 %399, 56
  %428 = getelementptr inbounds float, float* %3, i64 %427
  %429 = bitcast float* %428 to <8 x float>*
  %430 = load <8 x float>, <8 x float>* %429, align 1, !tbaa !12
  %431 = add nsw i64 %399, 64
  %432 = getelementptr inbounds float, float* %3, i64 %431
  %433 = bitcast float* %432 to <8 x float>*
  %434 = load <8 x float>, <8 x float>* %433, align 1, !tbaa !12
  %435 = add nsw i64 %399, 72
  %436 = getelementptr inbounds float, float* %3, i64 %435
  %437 = bitcast float* %436 to <8 x float>*
  %438 = load <8 x float>, <8 x float>* %437, align 1, !tbaa !12
  %439 = add nsw i64 %399, 80
  %440 = getelementptr inbounds float, float* %3, i64 %439
  %441 = bitcast float* %440 to <8 x float>*
  %442 = load <8 x float>, <8 x float>* %441, align 1, !tbaa !12
  %443 = add nsw i64 %399, 88
  %444 = getelementptr inbounds float, float* %3, i64 %443
  %445 = bitcast float* %444 to <8 x float>*
  %446 = load <8 x float>, <8 x float>* %445, align 1, !tbaa !12
  %447 = add nsw i64 %399, 96
  %448 = getelementptr inbounds float, float* %3, i64 %447
  %449 = bitcast float* %448 to <8 x float>*
  %450 = load <8 x float>, <8 x float>* %449, align 1, !tbaa !12
  %451 = add nsw i64 %399, 104
  %452 = getelementptr inbounds float, float* %3, i64 %451
  %453 = bitcast float* %452 to <8 x float>*
  %454 = load <8 x float>, <8 x float>* %453, align 1, !tbaa !12
  %455 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %402, <8 x float> %30, <8 x float> %346) #10
  %456 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %406, <8 x float> %30, <8 x float> %350) #10
  %457 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %410, <8 x float> %30, <8 x float> %354) #10
  %458 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %414, <8 x float> %30, <8 x float> %358) #10
  %459 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %418, <8 x float> %30, <8 x float> %362) #10
  %460 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %422, <8 x float> %30, <8 x float> %366) #10
  %461 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %426, <8 x float> %30, <8 x float> %370) #10
  %462 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %430, <8 x float> %30, <8 x float> %374) #10
  %463 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %434, <8 x float> %30, <8 x float> %378) #10
  %464 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %438, <8 x float> %30, <8 x float> %382) #10
  %465 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %442, <8 x float> %30, <8 x float> %386) #10
  %466 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %446, <8 x float> %30, <8 x float> %390) #10
  %467 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %450, <8 x float> %30, <8 x float> %394) #10
  %468 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %454, <8 x float> %30, <8 x float> %398) #10
  store <8 x float> %455, <8 x float>* %345, align 1, !tbaa !12
  store <8 x float> %456, <8 x float>* %349, align 1, !tbaa !12
  store <8 x float> %457, <8 x float>* %353, align 1, !tbaa !12
  store <8 x float> %458, <8 x float>* %357, align 1, !tbaa !12
  store <8 x float> %459, <8 x float>* %361, align 1, !tbaa !12
  store <8 x float> %460, <8 x float>* %365, align 1, !tbaa !12
  store <8 x float> %461, <8 x float>* %369, align 1, !tbaa !12
  store <8 x float> %462, <8 x float>* %373, align 1, !tbaa !12
  store <8 x float> %463, <8 x float>* %377, align 1, !tbaa !12
  store <8 x float> %464, <8 x float>* %381, align 1, !tbaa !12
  store <8 x float> %465, <8 x float>* %385, align 1, !tbaa !12
  store <8 x float> %466, <8 x float>* %389, align 1, !tbaa !12
  store <8 x float> %467, <8 x float>* %393, align 1, !tbaa !12
  store <8 x float> %468, <8 x float>* %397, align 1, !tbaa !12
  %469 = add nuw nsw i64 %286, 112
  %470 = icmp ult i64 %469, %77
  br i1 %470, label %285, label %279

471:                                              ; preds = %478, %72, %279
  %472 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %473 = icmp sgt i32 %472, 0
  br i1 %473, label %474, label %1655

474:                                              ; preds = %471
  %475 = zext i32 %472 to i64
  %476 = trunc i64 %36 to i32
  %477 = mul nsw i32 %472, %476
  br label %670

478:                                              ; preds = %280, %478
  %479 = phi i64 [ 0, %280 ], [ %662, %478 ]
  %480 = getelementptr inbounds float, float* %5, i64 %479
  %481 = getelementptr inbounds float, float* %480, i64 8
  %482 = bitcast float* %481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %482, i32 0, i32 1, i32 1)
  %483 = getelementptr inbounds float, float* %3, i64 %479
  %484 = getelementptr inbounds float, float* %483, i64 8
  %485 = bitcast float* %484 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %485, i32 0, i32 1, i32 1)
  %486 = getelementptr inbounds float, float* %480, i64 16
  %487 = bitcast float* %486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %487, i32 0, i32 1, i32 1)
  %488 = getelementptr inbounds float, float* %483, i64 16
  %489 = bitcast float* %488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %489, i32 0, i32 1, i32 1)
  %490 = getelementptr inbounds float, float* %480, i64 24
  %491 = bitcast float* %490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %491, i32 0, i32 1, i32 1)
  %492 = getelementptr inbounds float, float* %483, i64 24
  %493 = bitcast float* %492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %493, i32 0, i32 1, i32 1)
  %494 = getelementptr inbounds float, float* %480, i64 32
  %495 = bitcast float* %494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %495, i32 0, i32 1, i32 1)
  %496 = getelementptr inbounds float, float* %483, i64 32
  %497 = bitcast float* %496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %497, i32 0, i32 1, i32 1)
  %498 = getelementptr inbounds float, float* %480, i64 40
  %499 = bitcast float* %498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %499, i32 0, i32 1, i32 1)
  %500 = getelementptr inbounds float, float* %483, i64 40
  %501 = bitcast float* %500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %501, i32 0, i32 1, i32 1)
  %502 = getelementptr inbounds float, float* %480, i64 48
  %503 = bitcast float* %502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %503, i32 0, i32 1, i32 1)
  %504 = getelementptr inbounds float, float* %483, i64 48
  %505 = bitcast float* %504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %505, i32 0, i32 1, i32 1)
  %506 = getelementptr inbounds float, float* %480, i64 56
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %483, i64 56
  %509 = bitcast float* %508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %509, i32 0, i32 1, i32 1)
  %510 = getelementptr inbounds float, float* %480, i64 64
  %511 = bitcast float* %510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %511, i32 0, i32 1, i32 1)
  %512 = getelementptr inbounds float, float* %483, i64 64
  %513 = bitcast float* %512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %513, i32 0, i32 1, i32 1)
  %514 = getelementptr inbounds float, float* %480, i64 72
  %515 = bitcast float* %514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %515, i32 0, i32 1, i32 1)
  %516 = getelementptr inbounds float, float* %483, i64 72
  %517 = bitcast float* %516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %517, i32 0, i32 1, i32 1)
  %518 = getelementptr inbounds float, float* %480, i64 80
  %519 = bitcast float* %518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %519, i32 0, i32 1, i32 1)
  %520 = getelementptr inbounds float, float* %483, i64 80
  %521 = bitcast float* %520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %521, i32 0, i32 1, i32 1)
  %522 = getelementptr inbounds float, float* %480, i64 88
  %523 = bitcast float* %522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %523, i32 0, i32 1, i32 1)
  %524 = getelementptr inbounds float, float* %483, i64 88
  %525 = bitcast float* %524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %525, i32 0, i32 1, i32 1)
  %526 = getelementptr inbounds float, float* %480, i64 96
  %527 = bitcast float* %526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %527, i32 0, i32 1, i32 1)
  %528 = getelementptr inbounds float, float* %483, i64 96
  %529 = bitcast float* %528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %529, i32 0, i32 1, i32 1)
  %530 = getelementptr inbounds float, float* %480, i64 104
  %531 = bitcast float* %530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %531, i32 0, i32 1, i32 1)
  %532 = getelementptr inbounds float, float* %483, i64 104
  %533 = bitcast float* %532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %533, i32 0, i32 1, i32 1)
  %534 = getelementptr inbounds float, float* %480, i64 112
  %535 = bitcast float* %534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %535, i32 0, i32 1, i32 1)
  %536 = getelementptr inbounds float, float* %483, i64 112
  %537 = bitcast float* %536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %537, i32 0, i32 1, i32 1)
  %538 = bitcast float* %480 to <8 x float>*
  %539 = load <8 x float>, <8 x float>* %538, align 1, !tbaa !12
  %540 = or i64 %479, 8
  %541 = getelementptr inbounds float, float* %5, i64 %540
  %542 = bitcast float* %541 to <8 x float>*
  %543 = load <8 x float>, <8 x float>* %542, align 1, !tbaa !12
  %544 = add nuw nsw i64 %479, 16
  %545 = getelementptr inbounds float, float* %5, i64 %544
  %546 = bitcast float* %545 to <8 x float>*
  %547 = load <8 x float>, <8 x float>* %546, align 1, !tbaa !12
  %548 = add nuw nsw i64 %479, 24
  %549 = getelementptr inbounds float, float* %5, i64 %548
  %550 = bitcast float* %549 to <8 x float>*
  %551 = load <8 x float>, <8 x float>* %550, align 1, !tbaa !12
  %552 = add nuw nsw i64 %479, 32
  %553 = getelementptr inbounds float, float* %5, i64 %552
  %554 = bitcast float* %553 to <8 x float>*
  %555 = load <8 x float>, <8 x float>* %554, align 1, !tbaa !12
  %556 = add nuw nsw i64 %479, 40
  %557 = getelementptr inbounds float, float* %5, i64 %556
  %558 = bitcast float* %557 to <8 x float>*
  %559 = load <8 x float>, <8 x float>* %558, align 1, !tbaa !12
  %560 = add nuw nsw i64 %479, 48
  %561 = getelementptr inbounds float, float* %5, i64 %560
  %562 = bitcast float* %561 to <8 x float>*
  %563 = load <8 x float>, <8 x float>* %562, align 1, !tbaa !12
  %564 = add nuw nsw i64 %479, 56
  %565 = getelementptr inbounds float, float* %5, i64 %564
  %566 = bitcast float* %565 to <8 x float>*
  %567 = load <8 x float>, <8 x float>* %566, align 1, !tbaa !12
  %568 = add nuw nsw i64 %479, 64
  %569 = getelementptr inbounds float, float* %5, i64 %568
  %570 = bitcast float* %569 to <8 x float>*
  %571 = load <8 x float>, <8 x float>* %570, align 1, !tbaa !12
  %572 = add nuw nsw i64 %479, 72
  %573 = getelementptr inbounds float, float* %5, i64 %572
  %574 = bitcast float* %573 to <8 x float>*
  %575 = load <8 x float>, <8 x float>* %574, align 1, !tbaa !12
  %576 = add nuw nsw i64 %479, 80
  %577 = getelementptr inbounds float, float* %5, i64 %576
  %578 = bitcast float* %577 to <8 x float>*
  %579 = load <8 x float>, <8 x float>* %578, align 1, !tbaa !12
  %580 = add nuw nsw i64 %479, 88
  %581 = getelementptr inbounds float, float* %5, i64 %580
  %582 = bitcast float* %581 to <8 x float>*
  %583 = load <8 x float>, <8 x float>* %582, align 1, !tbaa !12
  %584 = add nuw nsw i64 %479, 96
  %585 = getelementptr inbounds float, float* %5, i64 %584
  %586 = bitcast float* %585 to <8 x float>*
  %587 = load <8 x float>, <8 x float>* %586, align 1, !tbaa !12
  %588 = add nuw nsw i64 %479, 104
  %589 = getelementptr inbounds float, float* %5, i64 %588
  %590 = bitcast float* %589 to <8 x float>*
  %591 = load <8 x float>, <8 x float>* %590, align 1, !tbaa !12
  %592 = add nsw i64 %479, %283
  %593 = getelementptr inbounds float, float* %3, i64 %592
  %594 = bitcast float* %593 to <8 x float>*
  %595 = load <8 x float>, <8 x float>* %594, align 1, !tbaa !12
  %596 = add nsw i64 %592, 8
  %597 = getelementptr inbounds float, float* %3, i64 %596
  %598 = bitcast float* %597 to <8 x float>*
  %599 = load <8 x float>, <8 x float>* %598, align 1, !tbaa !12
  %600 = add nsw i64 %592, 16
  %601 = getelementptr inbounds float, float* %3, i64 %600
  %602 = bitcast float* %601 to <8 x float>*
  %603 = load <8 x float>, <8 x float>* %602, align 1, !tbaa !12
  %604 = add nsw i64 %592, 24
  %605 = getelementptr inbounds float, float* %3, i64 %604
  %606 = bitcast float* %605 to <8 x float>*
  %607 = load <8 x float>, <8 x float>* %606, align 1, !tbaa !12
  %608 = add nsw i64 %592, 32
  %609 = getelementptr inbounds float, float* %3, i64 %608
  %610 = bitcast float* %609 to <8 x float>*
  %611 = load <8 x float>, <8 x float>* %610, align 1, !tbaa !12
  %612 = add nsw i64 %592, 40
  %613 = getelementptr inbounds float, float* %3, i64 %612
  %614 = bitcast float* %613 to <8 x float>*
  %615 = load <8 x float>, <8 x float>* %614, align 1, !tbaa !12
  %616 = add nsw i64 %592, 48
  %617 = getelementptr inbounds float, float* %3, i64 %616
  %618 = bitcast float* %617 to <8 x float>*
  %619 = load <8 x float>, <8 x float>* %618, align 1, !tbaa !12
  %620 = add nsw i64 %592, 56
  %621 = getelementptr inbounds float, float* %3, i64 %620
  %622 = bitcast float* %621 to <8 x float>*
  %623 = load <8 x float>, <8 x float>* %622, align 1, !tbaa !12
  %624 = add nsw i64 %592, 64
  %625 = getelementptr inbounds float, float* %3, i64 %624
  %626 = bitcast float* %625 to <8 x float>*
  %627 = load <8 x float>, <8 x float>* %626, align 1, !tbaa !12
  %628 = add nsw i64 %592, 72
  %629 = getelementptr inbounds float, float* %3, i64 %628
  %630 = bitcast float* %629 to <8 x float>*
  %631 = load <8 x float>, <8 x float>* %630, align 1, !tbaa !12
  %632 = add nsw i64 %592, 80
  %633 = getelementptr inbounds float, float* %3, i64 %632
  %634 = bitcast float* %633 to <8 x float>*
  %635 = load <8 x float>, <8 x float>* %634, align 1, !tbaa !12
  %636 = add nsw i64 %592, 88
  %637 = getelementptr inbounds float, float* %3, i64 %636
  %638 = bitcast float* %637 to <8 x float>*
  %639 = load <8 x float>, <8 x float>* %638, align 1, !tbaa !12
  %640 = add nsw i64 %592, 96
  %641 = getelementptr inbounds float, float* %3, i64 %640
  %642 = bitcast float* %641 to <8 x float>*
  %643 = load <8 x float>, <8 x float>* %642, align 1, !tbaa !12
  %644 = add nsw i64 %592, 104
  %645 = getelementptr inbounds float, float* %3, i64 %644
  %646 = bitcast float* %645 to <8 x float>*
  %647 = load <8 x float>, <8 x float>* %646, align 1, !tbaa !12
  %648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %595, <8 x float> %35, <8 x float> %539) #10
  %649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %599, <8 x float> %35, <8 x float> %543) #10
  %650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %603, <8 x float> %35, <8 x float> %547) #10
  %651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %607, <8 x float> %35, <8 x float> %551) #10
  %652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %611, <8 x float> %35, <8 x float> %555) #10
  %653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %615, <8 x float> %35, <8 x float> %559) #10
  %654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %619, <8 x float> %35, <8 x float> %563) #10
  %655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %623, <8 x float> %35, <8 x float> %567) #10
  %656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %627, <8 x float> %35, <8 x float> %571) #10
  %657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %631, <8 x float> %35, <8 x float> %575) #10
  %658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %635, <8 x float> %35, <8 x float> %579) #10
  %659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %639, <8 x float> %35, <8 x float> %583) #10
  %660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %643, <8 x float> %35, <8 x float> %587) #10
  %661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %647, <8 x float> %35, <8 x float> %591) #10
  store <8 x float> %648, <8 x float>* %538, align 1, !tbaa !12
  store <8 x float> %649, <8 x float>* %542, align 1, !tbaa !12
  store <8 x float> %650, <8 x float>* %546, align 1, !tbaa !12
  store <8 x float> %651, <8 x float>* %550, align 1, !tbaa !12
  store <8 x float> %652, <8 x float>* %554, align 1, !tbaa !12
  store <8 x float> %653, <8 x float>* %558, align 1, !tbaa !12
  store <8 x float> %654, <8 x float>* %562, align 1, !tbaa !12
  store <8 x float> %655, <8 x float>* %566, align 1, !tbaa !12
  store <8 x float> %656, <8 x float>* %570, align 1, !tbaa !12
  store <8 x float> %657, <8 x float>* %574, align 1, !tbaa !12
  store <8 x float> %658, <8 x float>* %578, align 1, !tbaa !12
  store <8 x float> %659, <8 x float>* %582, align 1, !tbaa !12
  store <8 x float> %660, <8 x float>* %586, align 1, !tbaa !12
  store <8 x float> %661, <8 x float>* %590, align 1, !tbaa !12
  %662 = add nuw nsw i64 %479, 112
  %663 = icmp ult i64 %662, %284
  br i1 %663, label %478, label %471

664:                                              ; preds = %670
  br i1 %473, label %665, label %1063

665:                                              ; preds = %664
  %666 = trunc i64 %41 to i32
  %667 = mul nsw i32 %472, %666
  %668 = sext i32 %667 to i64
  %669 = zext i32 %472 to i64
  br label %877

670:                                              ; preds = %474, %670
  %671 = phi i64 [ 0, %474 ], [ %869, %670 ]
  %672 = getelementptr inbounds float, float* %5, i64 %671
  %673 = getelementptr inbounds float, float* %672, i64 8
  %674 = bitcast float* %673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %674, i32 0, i32 1, i32 1)
  %675 = getelementptr inbounds float, float* %3, i64 %671
  %676 = getelementptr inbounds float, float* %675, i64 8
  %677 = bitcast float* %676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %677, i32 0, i32 1, i32 1)
  %678 = getelementptr inbounds float, float* %672, i64 16
  %679 = bitcast float* %678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %679, i32 0, i32 1, i32 1)
  %680 = getelementptr inbounds float, float* %675, i64 16
  %681 = bitcast float* %680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %681, i32 0, i32 1, i32 1)
  %682 = getelementptr inbounds float, float* %672, i64 24
  %683 = bitcast float* %682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %683, i32 0, i32 1, i32 1)
  %684 = getelementptr inbounds float, float* %675, i64 24
  %685 = bitcast float* %684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %685, i32 0, i32 1, i32 1)
  %686 = getelementptr inbounds float, float* %672, i64 32
  %687 = bitcast float* %686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %687, i32 0, i32 1, i32 1)
  %688 = getelementptr inbounds float, float* %675, i64 32
  %689 = bitcast float* %688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %689, i32 0, i32 1, i32 1)
  %690 = getelementptr inbounds float, float* %672, i64 40
  %691 = bitcast float* %690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %691, i32 0, i32 1, i32 1)
  %692 = getelementptr inbounds float, float* %675, i64 40
  %693 = bitcast float* %692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %693, i32 0, i32 1, i32 1)
  %694 = getelementptr inbounds float, float* %672, i64 48
  %695 = bitcast float* %694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %695, i32 0, i32 1, i32 1)
  %696 = getelementptr inbounds float, float* %675, i64 48
  %697 = bitcast float* %696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %697, i32 0, i32 1, i32 1)
  %698 = getelementptr inbounds float, float* %672, i64 56
  %699 = bitcast float* %698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %699, i32 0, i32 1, i32 1)
  %700 = getelementptr inbounds float, float* %675, i64 56
  %701 = bitcast float* %700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %701, i32 0, i32 1, i32 1)
  %702 = getelementptr inbounds float, float* %672, i64 64
  %703 = bitcast float* %702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %703, i32 0, i32 1, i32 1)
  %704 = getelementptr inbounds float, float* %675, i64 64
  %705 = bitcast float* %704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %705, i32 0, i32 1, i32 1)
  %706 = getelementptr inbounds float, float* %672, i64 72
  %707 = bitcast float* %706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %707, i32 0, i32 1, i32 1)
  %708 = getelementptr inbounds float, float* %675, i64 72
  %709 = bitcast float* %708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %709, i32 0, i32 1, i32 1)
  %710 = getelementptr inbounds float, float* %672, i64 80
  %711 = bitcast float* %710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %711, i32 0, i32 1, i32 1)
  %712 = getelementptr inbounds float, float* %675, i64 80
  %713 = bitcast float* %712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %713, i32 0, i32 1, i32 1)
  %714 = getelementptr inbounds float, float* %672, i64 88
  %715 = bitcast float* %714 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %715, i32 0, i32 1, i32 1)
  %716 = getelementptr inbounds float, float* %675, i64 88
  %717 = bitcast float* %716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %717, i32 0, i32 1, i32 1)
  %718 = getelementptr inbounds float, float* %672, i64 96
  %719 = bitcast float* %718 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %719, i32 0, i32 1, i32 1)
  %720 = getelementptr inbounds float, float* %675, i64 96
  %721 = bitcast float* %720 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %721, i32 0, i32 1, i32 1)
  %722 = getelementptr inbounds float, float* %672, i64 104
  %723 = bitcast float* %722 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %723, i32 0, i32 1, i32 1)
  %724 = getelementptr inbounds float, float* %675, i64 104
  %725 = bitcast float* %724 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %725, i32 0, i32 1, i32 1)
  %726 = getelementptr inbounds float, float* %672, i64 112
  %727 = bitcast float* %726 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %727, i32 0, i32 1, i32 1)
  %728 = getelementptr inbounds float, float* %675, i64 112
  %729 = bitcast float* %728 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %729, i32 0, i32 1, i32 1)
  %730 = bitcast float* %672 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = or i64 %671, 8
  %733 = getelementptr inbounds float, float* %5, i64 %732
  %734 = bitcast float* %733 to <8 x float>*
  %735 = load <8 x float>, <8 x float>* %734, align 1, !tbaa !12
  %736 = add nuw nsw i64 %671, 16
  %737 = getelementptr inbounds float, float* %5, i64 %736
  %738 = bitcast float* %737 to <8 x float>*
  %739 = load <8 x float>, <8 x float>* %738, align 1, !tbaa !12
  %740 = add nuw nsw i64 %671, 24
  %741 = getelementptr inbounds float, float* %5, i64 %740
  %742 = bitcast float* %741 to <8 x float>*
  %743 = load <8 x float>, <8 x float>* %742, align 1, !tbaa !12
  %744 = add nuw nsw i64 %671, 32
  %745 = getelementptr inbounds float, float* %5, i64 %744
  %746 = bitcast float* %745 to <8 x float>*
  %747 = load <8 x float>, <8 x float>* %746, align 1, !tbaa !12
  %748 = add nuw nsw i64 %671, 40
  %749 = getelementptr inbounds float, float* %5, i64 %748
  %750 = bitcast float* %749 to <8 x float>*
  %751 = load <8 x float>, <8 x float>* %750, align 1, !tbaa !12
  %752 = add nuw nsw i64 %671, 48
  %753 = getelementptr inbounds float, float* %5, i64 %752
  %754 = bitcast float* %753 to <8 x float>*
  %755 = load <8 x float>, <8 x float>* %754, align 1, !tbaa !12
  %756 = add nuw nsw i64 %671, 56
  %757 = getelementptr inbounds float, float* %5, i64 %756
  %758 = bitcast float* %757 to <8 x float>*
  %759 = load <8 x float>, <8 x float>* %758, align 1, !tbaa !12
  %760 = add nuw nsw i64 %671, 64
  %761 = getelementptr inbounds float, float* %5, i64 %760
  %762 = bitcast float* %761 to <8 x float>*
  %763 = load <8 x float>, <8 x float>* %762, align 1, !tbaa !12
  %764 = add nuw nsw i64 %671, 72
  %765 = getelementptr inbounds float, float* %5, i64 %764
  %766 = bitcast float* %765 to <8 x float>*
  %767 = load <8 x float>, <8 x float>* %766, align 1, !tbaa !12
  %768 = add nuw nsw i64 %671, 80
  %769 = getelementptr inbounds float, float* %5, i64 %768
  %770 = bitcast float* %769 to <8 x float>*
  %771 = load <8 x float>, <8 x float>* %770, align 1, !tbaa !12
  %772 = add nuw nsw i64 %671, 88
  %773 = getelementptr inbounds float, float* %5, i64 %772
  %774 = bitcast float* %773 to <8 x float>*
  %775 = load <8 x float>, <8 x float>* %774, align 1, !tbaa !12
  %776 = add nuw nsw i64 %671, 96
  %777 = getelementptr inbounds float, float* %5, i64 %776
  %778 = bitcast float* %777 to <8 x float>*
  %779 = load <8 x float>, <8 x float>* %778, align 1, !tbaa !12
  %780 = add nuw nsw i64 %671, 104
  %781 = getelementptr inbounds float, float* %5, i64 %780
  %782 = bitcast float* %781 to <8 x float>*
  %783 = load <8 x float>, <8 x float>* %782, align 1, !tbaa !12
  %784 = trunc i64 %671 to i32
  %785 = add nsw i32 %477, %784
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds float, float* %3, i64 %786
  %788 = bitcast float* %787 to <8 x float>*
  %789 = load <8 x float>, <8 x float>* %788, align 1, !tbaa !12
  %790 = add nsw i32 %785, 8
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds float, float* %3, i64 %791
  %793 = bitcast float* %792 to <8 x float>*
  %794 = load <8 x float>, <8 x float>* %793, align 1, !tbaa !12
  %795 = add nsw i32 %785, 16
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds float, float* %3, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %799 = load <8 x float>, <8 x float>* %798, align 1, !tbaa !12
  %800 = add nsw i32 %785, 24
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds float, float* %3, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nsw i32 %785, 32
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds float, float* %3, i64 %806
  %808 = bitcast float* %807 to <8 x float>*
  %809 = load <8 x float>, <8 x float>* %808, align 1, !tbaa !12
  %810 = add nsw i32 %785, 40
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds float, float* %3, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %814 = load <8 x float>, <8 x float>* %813, align 1, !tbaa !12
  %815 = add nsw i32 %785, 48
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds float, float* %3, i64 %816
  %818 = bitcast float* %817 to <8 x float>*
  %819 = load <8 x float>, <8 x float>* %818, align 1, !tbaa !12
  %820 = add nsw i32 %785, 56
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float, float* %3, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %824 = load <8 x float>, <8 x float>* %823, align 1, !tbaa !12
  %825 = add nsw i32 %785, 64
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds float, float* %3, i64 %826
  %828 = bitcast float* %827 to <8 x float>*
  %829 = load <8 x float>, <8 x float>* %828, align 1, !tbaa !12
  %830 = add nsw i32 %785, 72
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds float, float* %3, i64 %831
  %833 = bitcast float* %832 to <8 x float>*
  %834 = load <8 x float>, <8 x float>* %833, align 1, !tbaa !12
  %835 = add nsw i32 %785, 80
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float, float* %3, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nsw i32 %785, 88
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds float, float* %3, i64 %841
  %843 = bitcast float* %842 to <8 x float>*
  %844 = load <8 x float>, <8 x float>* %843, align 1, !tbaa !12
  %845 = add nsw i32 %785, 96
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds float, float* %3, i64 %846
  %848 = bitcast float* %847 to <8 x float>*
  %849 = load <8 x float>, <8 x float>* %848, align 1, !tbaa !12
  %850 = add nsw i32 %785, 104
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds float, float* %3, i64 %851
  %853 = bitcast float* %852 to <8 x float>*
  %854 = load <8 x float>, <8 x float>* %853, align 1, !tbaa !12
  %855 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %789, <8 x float> %40, <8 x float> %731) #10
  %856 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %794, <8 x float> %40, <8 x float> %735) #10
  %857 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %799, <8 x float> %40, <8 x float> %739) #10
  %858 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %804, <8 x float> %40, <8 x float> %743) #10
  %859 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %809, <8 x float> %40, <8 x float> %747) #10
  %860 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %814, <8 x float> %40, <8 x float> %751) #10
  %861 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %819, <8 x float> %40, <8 x float> %755) #10
  %862 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %824, <8 x float> %40, <8 x float> %759) #10
  %863 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %829, <8 x float> %40, <8 x float> %763) #10
  %864 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %834, <8 x float> %40, <8 x float> %767) #10
  %865 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %839, <8 x float> %40, <8 x float> %771) #10
  %866 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %844, <8 x float> %40, <8 x float> %775) #10
  %867 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %849, <8 x float> %40, <8 x float> %779) #10
  %868 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %854, <8 x float> %40, <8 x float> %783) #10
  store <8 x float> %855, <8 x float>* %730, align 1, !tbaa !12
  store <8 x float> %856, <8 x float>* %734, align 1, !tbaa !12
  store <8 x float> %857, <8 x float>* %738, align 1, !tbaa !12
  store <8 x float> %858, <8 x float>* %742, align 1, !tbaa !12
  store <8 x float> %859, <8 x float>* %746, align 1, !tbaa !12
  store <8 x float> %860, <8 x float>* %750, align 1, !tbaa !12
  store <8 x float> %861, <8 x float>* %754, align 1, !tbaa !12
  store <8 x float> %862, <8 x float>* %758, align 1, !tbaa !12
  store <8 x float> %863, <8 x float>* %762, align 1, !tbaa !12
  store <8 x float> %864, <8 x float>* %766, align 1, !tbaa !12
  store <8 x float> %865, <8 x float>* %770, align 1, !tbaa !12
  store <8 x float> %866, <8 x float>* %774, align 1, !tbaa !12
  store <8 x float> %867, <8 x float>* %778, align 1, !tbaa !12
  store <8 x float> %868, <8 x float>* %782, align 1, !tbaa !12
  %869 = add nuw nsw i64 %671, 112
  %870 = icmp ult i64 %869, %475
  br i1 %870, label %670, label %664

871:                                              ; preds = %877
  br i1 %473, label %872, label %1063

872:                                              ; preds = %871
  %873 = trunc i64 %46 to i32
  %874 = mul nsw i32 %472, %873
  %875 = sext i32 %874 to i64
  %876 = zext i32 %472 to i64
  br label %1070

877:                                              ; preds = %665, %877
  %878 = phi i64 [ 0, %665 ], [ %1061, %877 ]
  %879 = getelementptr inbounds float, float* %5, i64 %878
  %880 = getelementptr inbounds float, float* %879, i64 8
  %881 = bitcast float* %880 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %881, i32 0, i32 1, i32 1)
  %882 = getelementptr inbounds float, float* %3, i64 %878
  %883 = getelementptr inbounds float, float* %882, i64 8
  %884 = bitcast float* %883 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %884, i32 0, i32 1, i32 1)
  %885 = getelementptr inbounds float, float* %879, i64 16
  %886 = bitcast float* %885 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %886, i32 0, i32 1, i32 1)
  %887 = getelementptr inbounds float, float* %882, i64 16
  %888 = bitcast float* %887 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %888, i32 0, i32 1, i32 1)
  %889 = getelementptr inbounds float, float* %879, i64 24
  %890 = bitcast float* %889 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %890, i32 0, i32 1, i32 1)
  %891 = getelementptr inbounds float, float* %882, i64 24
  %892 = bitcast float* %891 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %892, i32 0, i32 1, i32 1)
  %893 = getelementptr inbounds float, float* %879, i64 32
  %894 = bitcast float* %893 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %894, i32 0, i32 1, i32 1)
  %895 = getelementptr inbounds float, float* %882, i64 32
  %896 = bitcast float* %895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %896, i32 0, i32 1, i32 1)
  %897 = getelementptr inbounds float, float* %879, i64 40
  %898 = bitcast float* %897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %898, i32 0, i32 1, i32 1)
  %899 = getelementptr inbounds float, float* %882, i64 40
  %900 = bitcast float* %899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %900, i32 0, i32 1, i32 1)
  %901 = getelementptr inbounds float, float* %879, i64 48
  %902 = bitcast float* %901 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %902, i32 0, i32 1, i32 1)
  %903 = getelementptr inbounds float, float* %882, i64 48
  %904 = bitcast float* %903 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %904, i32 0, i32 1, i32 1)
  %905 = getelementptr inbounds float, float* %879, i64 56
  %906 = bitcast float* %905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %906, i32 0, i32 1, i32 1)
  %907 = getelementptr inbounds float, float* %882, i64 56
  %908 = bitcast float* %907 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %908, i32 0, i32 1, i32 1)
  %909 = getelementptr inbounds float, float* %879, i64 64
  %910 = bitcast float* %909 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %910, i32 0, i32 1, i32 1)
  %911 = getelementptr inbounds float, float* %882, i64 64
  %912 = bitcast float* %911 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %912, i32 0, i32 1, i32 1)
  %913 = getelementptr inbounds float, float* %879, i64 72
  %914 = bitcast float* %913 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %914, i32 0, i32 1, i32 1)
  %915 = getelementptr inbounds float, float* %882, i64 72
  %916 = bitcast float* %915 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %916, i32 0, i32 1, i32 1)
  %917 = getelementptr inbounds float, float* %879, i64 80
  %918 = bitcast float* %917 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %918, i32 0, i32 1, i32 1)
  %919 = getelementptr inbounds float, float* %882, i64 80
  %920 = bitcast float* %919 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %920, i32 0, i32 1, i32 1)
  %921 = getelementptr inbounds float, float* %879, i64 88
  %922 = bitcast float* %921 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %922, i32 0, i32 1, i32 1)
  %923 = getelementptr inbounds float, float* %882, i64 88
  %924 = bitcast float* %923 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %924, i32 0, i32 1, i32 1)
  %925 = getelementptr inbounds float, float* %879, i64 96
  %926 = bitcast float* %925 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %926, i32 0, i32 1, i32 1)
  %927 = getelementptr inbounds float, float* %882, i64 96
  %928 = bitcast float* %927 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %928, i32 0, i32 1, i32 1)
  %929 = getelementptr inbounds float, float* %879, i64 104
  %930 = bitcast float* %929 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %930, i32 0, i32 1, i32 1)
  %931 = getelementptr inbounds float, float* %882, i64 104
  %932 = bitcast float* %931 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %932, i32 0, i32 1, i32 1)
  %933 = getelementptr inbounds float, float* %879, i64 112
  %934 = bitcast float* %933 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %934, i32 0, i32 1, i32 1)
  %935 = getelementptr inbounds float, float* %882, i64 112
  %936 = bitcast float* %935 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %936, i32 0, i32 1, i32 1)
  %937 = bitcast float* %879 to <8 x float>*
  %938 = load <8 x float>, <8 x float>* %937, align 1, !tbaa !12
  %939 = or i64 %878, 8
  %940 = getelementptr inbounds float, float* %5, i64 %939
  %941 = bitcast float* %940 to <8 x float>*
  %942 = load <8 x float>, <8 x float>* %941, align 1, !tbaa !12
  %943 = add nuw nsw i64 %878, 16
  %944 = getelementptr inbounds float, float* %5, i64 %943
  %945 = bitcast float* %944 to <8 x float>*
  %946 = load <8 x float>, <8 x float>* %945, align 1, !tbaa !12
  %947 = add nuw nsw i64 %878, 24
  %948 = getelementptr inbounds float, float* %5, i64 %947
  %949 = bitcast float* %948 to <8 x float>*
  %950 = load <8 x float>, <8 x float>* %949, align 1, !tbaa !12
  %951 = add nuw nsw i64 %878, 32
  %952 = getelementptr inbounds float, float* %5, i64 %951
  %953 = bitcast float* %952 to <8 x float>*
  %954 = load <8 x float>, <8 x float>* %953, align 1, !tbaa !12
  %955 = add nuw nsw i64 %878, 40
  %956 = getelementptr inbounds float, float* %5, i64 %955
  %957 = bitcast float* %956 to <8 x float>*
  %958 = load <8 x float>, <8 x float>* %957, align 1, !tbaa !12
  %959 = add nuw nsw i64 %878, 48
  %960 = getelementptr inbounds float, float* %5, i64 %959
  %961 = bitcast float* %960 to <8 x float>*
  %962 = load <8 x float>, <8 x float>* %961, align 1, !tbaa !12
  %963 = add nuw nsw i64 %878, 56
  %964 = getelementptr inbounds float, float* %5, i64 %963
  %965 = bitcast float* %964 to <8 x float>*
  %966 = load <8 x float>, <8 x float>* %965, align 1, !tbaa !12
  %967 = add nuw nsw i64 %878, 64
  %968 = getelementptr inbounds float, float* %5, i64 %967
  %969 = bitcast float* %968 to <8 x float>*
  %970 = load <8 x float>, <8 x float>* %969, align 1, !tbaa !12
  %971 = add nuw nsw i64 %878, 72
  %972 = getelementptr inbounds float, float* %5, i64 %971
  %973 = bitcast float* %972 to <8 x float>*
  %974 = load <8 x float>, <8 x float>* %973, align 1, !tbaa !12
  %975 = add nuw nsw i64 %878, 80
  %976 = getelementptr inbounds float, float* %5, i64 %975
  %977 = bitcast float* %976 to <8 x float>*
  %978 = load <8 x float>, <8 x float>* %977, align 1, !tbaa !12
  %979 = add nuw nsw i64 %878, 88
  %980 = getelementptr inbounds float, float* %5, i64 %979
  %981 = bitcast float* %980 to <8 x float>*
  %982 = load <8 x float>, <8 x float>* %981, align 1, !tbaa !12
  %983 = add nuw nsw i64 %878, 96
  %984 = getelementptr inbounds float, float* %5, i64 %983
  %985 = bitcast float* %984 to <8 x float>*
  %986 = load <8 x float>, <8 x float>* %985, align 1, !tbaa !12
  %987 = add nuw nsw i64 %878, 104
  %988 = getelementptr inbounds float, float* %5, i64 %987
  %989 = bitcast float* %988 to <8 x float>*
  %990 = load <8 x float>, <8 x float>* %989, align 1, !tbaa !12
  %991 = add nsw i64 %878, %668
  %992 = getelementptr inbounds float, float* %3, i64 %991
  %993 = bitcast float* %992 to <8 x float>*
  %994 = load <8 x float>, <8 x float>* %993, align 1, !tbaa !12
  %995 = add nsw i64 %991, 8
  %996 = getelementptr inbounds float, float* %3, i64 %995
  %997 = bitcast float* %996 to <8 x float>*
  %998 = load <8 x float>, <8 x float>* %997, align 1, !tbaa !12
  %999 = add nsw i64 %991, 16
  %1000 = getelementptr inbounds float, float* %3, i64 %999
  %1001 = bitcast float* %1000 to <8 x float>*
  %1002 = load <8 x float>, <8 x float>* %1001, align 1, !tbaa !12
  %1003 = add nsw i64 %991, 24
  %1004 = getelementptr inbounds float, float* %3, i64 %1003
  %1005 = bitcast float* %1004 to <8 x float>*
  %1006 = load <8 x float>, <8 x float>* %1005, align 1, !tbaa !12
  %1007 = add nsw i64 %991, 32
  %1008 = getelementptr inbounds float, float* %3, i64 %1007
  %1009 = bitcast float* %1008 to <8 x float>*
  %1010 = load <8 x float>, <8 x float>* %1009, align 1, !tbaa !12
  %1011 = add nsw i64 %991, 40
  %1012 = getelementptr inbounds float, float* %3, i64 %1011
  %1013 = bitcast float* %1012 to <8 x float>*
  %1014 = load <8 x float>, <8 x float>* %1013, align 1, !tbaa !12
  %1015 = add nsw i64 %991, 48
  %1016 = getelementptr inbounds float, float* %3, i64 %1015
  %1017 = bitcast float* %1016 to <8 x float>*
  %1018 = load <8 x float>, <8 x float>* %1017, align 1, !tbaa !12
  %1019 = add nsw i64 %991, 56
  %1020 = getelementptr inbounds float, float* %3, i64 %1019
  %1021 = bitcast float* %1020 to <8 x float>*
  %1022 = load <8 x float>, <8 x float>* %1021, align 1, !tbaa !12
  %1023 = add nsw i64 %991, 64
  %1024 = getelementptr inbounds float, float* %3, i64 %1023
  %1025 = bitcast float* %1024 to <8 x float>*
  %1026 = load <8 x float>, <8 x float>* %1025, align 1, !tbaa !12
  %1027 = add nsw i64 %991, 72
  %1028 = getelementptr inbounds float, float* %3, i64 %1027
  %1029 = bitcast float* %1028 to <8 x float>*
  %1030 = load <8 x float>, <8 x float>* %1029, align 1, !tbaa !12
  %1031 = add nsw i64 %991, 80
  %1032 = getelementptr inbounds float, float* %3, i64 %1031
  %1033 = bitcast float* %1032 to <8 x float>*
  %1034 = load <8 x float>, <8 x float>* %1033, align 1, !tbaa !12
  %1035 = add nsw i64 %991, 88
  %1036 = getelementptr inbounds float, float* %3, i64 %1035
  %1037 = bitcast float* %1036 to <8 x float>*
  %1038 = load <8 x float>, <8 x float>* %1037, align 1, !tbaa !12
  %1039 = add nsw i64 %991, 96
  %1040 = getelementptr inbounds float, float* %3, i64 %1039
  %1041 = bitcast float* %1040 to <8 x float>*
  %1042 = load <8 x float>, <8 x float>* %1041, align 1, !tbaa !12
  %1043 = add nsw i64 %991, 104
  %1044 = getelementptr inbounds float, float* %3, i64 %1043
  %1045 = bitcast float* %1044 to <8 x float>*
  %1046 = load <8 x float>, <8 x float>* %1045, align 1, !tbaa !12
  %1047 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %994, <8 x float> %45, <8 x float> %938) #10
  %1048 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %998, <8 x float> %45, <8 x float> %942) #10
  %1049 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1002, <8 x float> %45, <8 x float> %946) #10
  %1050 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1006, <8 x float> %45, <8 x float> %950) #10
  %1051 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1010, <8 x float> %45, <8 x float> %954) #10
  %1052 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1014, <8 x float> %45, <8 x float> %958) #10
  %1053 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1018, <8 x float> %45, <8 x float> %962) #10
  %1054 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1022, <8 x float> %45, <8 x float> %966) #10
  %1055 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1026, <8 x float> %45, <8 x float> %970) #10
  %1056 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1030, <8 x float> %45, <8 x float> %974) #10
  %1057 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1034, <8 x float> %45, <8 x float> %978) #10
  %1058 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1038, <8 x float> %45, <8 x float> %982) #10
  %1059 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1042, <8 x float> %45, <8 x float> %986) #10
  %1060 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1046, <8 x float> %45, <8 x float> %990) #10
  store <8 x float> %1047, <8 x float>* %937, align 1, !tbaa !12
  store <8 x float> %1048, <8 x float>* %941, align 1, !tbaa !12
  store <8 x float> %1049, <8 x float>* %945, align 1, !tbaa !12
  store <8 x float> %1050, <8 x float>* %949, align 1, !tbaa !12
  store <8 x float> %1051, <8 x float>* %953, align 1, !tbaa !12
  store <8 x float> %1052, <8 x float>* %957, align 1, !tbaa !12
  store <8 x float> %1053, <8 x float>* %961, align 1, !tbaa !12
  store <8 x float> %1054, <8 x float>* %965, align 1, !tbaa !12
  store <8 x float> %1055, <8 x float>* %969, align 1, !tbaa !12
  store <8 x float> %1056, <8 x float>* %973, align 1, !tbaa !12
  store <8 x float> %1057, <8 x float>* %977, align 1, !tbaa !12
  store <8 x float> %1058, <8 x float>* %981, align 1, !tbaa !12
  store <8 x float> %1059, <8 x float>* %985, align 1, !tbaa !12
  store <8 x float> %1060, <8 x float>* %989, align 1, !tbaa !12
  %1061 = add nuw nsw i64 %878, 112
  %1062 = icmp ult i64 %1061, %669
  br i1 %1062, label %877, label %871

1063:                                             ; preds = %1070, %664, %871
  %1064 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1065 = icmp sgt i32 %1064, 0
  br i1 %1065, label %1066, label %1655

1066:                                             ; preds = %1063
  %1067 = zext i32 %1064 to i64
  %1068 = trunc i64 %51 to i32
  %1069 = mul nsw i32 %1064, %1068
  br label %1262

1070:                                             ; preds = %872, %1070
  %1071 = phi i64 [ 0, %872 ], [ %1254, %1070 ]
  %1072 = getelementptr inbounds float, float* %5, i64 %1071
  %1073 = getelementptr inbounds float, float* %1072, i64 8
  %1074 = bitcast float* %1073 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1074, i32 0, i32 1, i32 1)
  %1075 = getelementptr inbounds float, float* %3, i64 %1071
  %1076 = getelementptr inbounds float, float* %1075, i64 8
  %1077 = bitcast float* %1076 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1077, i32 0, i32 1, i32 1)
  %1078 = getelementptr inbounds float, float* %1072, i64 16
  %1079 = bitcast float* %1078 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1079, i32 0, i32 1, i32 1)
  %1080 = getelementptr inbounds float, float* %1075, i64 16
  %1081 = bitcast float* %1080 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1081, i32 0, i32 1, i32 1)
  %1082 = getelementptr inbounds float, float* %1072, i64 24
  %1083 = bitcast float* %1082 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1083, i32 0, i32 1, i32 1)
  %1084 = getelementptr inbounds float, float* %1075, i64 24
  %1085 = bitcast float* %1084 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1085, i32 0, i32 1, i32 1)
  %1086 = getelementptr inbounds float, float* %1072, i64 32
  %1087 = bitcast float* %1086 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1087, i32 0, i32 1, i32 1)
  %1088 = getelementptr inbounds float, float* %1075, i64 32
  %1089 = bitcast float* %1088 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1089, i32 0, i32 1, i32 1)
  %1090 = getelementptr inbounds float, float* %1072, i64 40
  %1091 = bitcast float* %1090 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1091, i32 0, i32 1, i32 1)
  %1092 = getelementptr inbounds float, float* %1075, i64 40
  %1093 = bitcast float* %1092 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1093, i32 0, i32 1, i32 1)
  %1094 = getelementptr inbounds float, float* %1072, i64 48
  %1095 = bitcast float* %1094 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1095, i32 0, i32 1, i32 1)
  %1096 = getelementptr inbounds float, float* %1075, i64 48
  %1097 = bitcast float* %1096 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1097, i32 0, i32 1, i32 1)
  %1098 = getelementptr inbounds float, float* %1072, i64 56
  %1099 = bitcast float* %1098 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1099, i32 0, i32 1, i32 1)
  %1100 = getelementptr inbounds float, float* %1075, i64 56
  %1101 = bitcast float* %1100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1101, i32 0, i32 1, i32 1)
  %1102 = getelementptr inbounds float, float* %1072, i64 64
  %1103 = bitcast float* %1102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1103, i32 0, i32 1, i32 1)
  %1104 = getelementptr inbounds float, float* %1075, i64 64
  %1105 = bitcast float* %1104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1105, i32 0, i32 1, i32 1)
  %1106 = getelementptr inbounds float, float* %1072, i64 72
  %1107 = bitcast float* %1106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1107, i32 0, i32 1, i32 1)
  %1108 = getelementptr inbounds float, float* %1075, i64 72
  %1109 = bitcast float* %1108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1109, i32 0, i32 1, i32 1)
  %1110 = getelementptr inbounds float, float* %1072, i64 80
  %1111 = bitcast float* %1110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1111, i32 0, i32 1, i32 1)
  %1112 = getelementptr inbounds float, float* %1075, i64 80
  %1113 = bitcast float* %1112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1113, i32 0, i32 1, i32 1)
  %1114 = getelementptr inbounds float, float* %1072, i64 88
  %1115 = bitcast float* %1114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1115, i32 0, i32 1, i32 1)
  %1116 = getelementptr inbounds float, float* %1075, i64 88
  %1117 = bitcast float* %1116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1117, i32 0, i32 1, i32 1)
  %1118 = getelementptr inbounds float, float* %1072, i64 96
  %1119 = bitcast float* %1118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1119, i32 0, i32 1, i32 1)
  %1120 = getelementptr inbounds float, float* %1075, i64 96
  %1121 = bitcast float* %1120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1121, i32 0, i32 1, i32 1)
  %1122 = getelementptr inbounds float, float* %1072, i64 104
  %1123 = bitcast float* %1122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1123, i32 0, i32 1, i32 1)
  %1124 = getelementptr inbounds float, float* %1075, i64 104
  %1125 = bitcast float* %1124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1125, i32 0, i32 1, i32 1)
  %1126 = getelementptr inbounds float, float* %1072, i64 112
  %1127 = bitcast float* %1126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1127, i32 0, i32 1, i32 1)
  %1128 = getelementptr inbounds float, float* %1075, i64 112
  %1129 = bitcast float* %1128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1129, i32 0, i32 1, i32 1)
  %1130 = bitcast float* %1072 to <8 x float>*
  %1131 = load <8 x float>, <8 x float>* %1130, align 1, !tbaa !12
  %1132 = or i64 %1071, 8
  %1133 = getelementptr inbounds float, float* %5, i64 %1132
  %1134 = bitcast float* %1133 to <8 x float>*
  %1135 = load <8 x float>, <8 x float>* %1134, align 1, !tbaa !12
  %1136 = add nuw nsw i64 %1071, 16
  %1137 = getelementptr inbounds float, float* %5, i64 %1136
  %1138 = bitcast float* %1137 to <8 x float>*
  %1139 = load <8 x float>, <8 x float>* %1138, align 1, !tbaa !12
  %1140 = add nuw nsw i64 %1071, 24
  %1141 = getelementptr inbounds float, float* %5, i64 %1140
  %1142 = bitcast float* %1141 to <8 x float>*
  %1143 = load <8 x float>, <8 x float>* %1142, align 1, !tbaa !12
  %1144 = add nuw nsw i64 %1071, 32
  %1145 = getelementptr inbounds float, float* %5, i64 %1144
  %1146 = bitcast float* %1145 to <8 x float>*
  %1147 = load <8 x float>, <8 x float>* %1146, align 1, !tbaa !12
  %1148 = add nuw nsw i64 %1071, 40
  %1149 = getelementptr inbounds float, float* %5, i64 %1148
  %1150 = bitcast float* %1149 to <8 x float>*
  %1151 = load <8 x float>, <8 x float>* %1150, align 1, !tbaa !12
  %1152 = add nuw nsw i64 %1071, 48
  %1153 = getelementptr inbounds float, float* %5, i64 %1152
  %1154 = bitcast float* %1153 to <8 x float>*
  %1155 = load <8 x float>, <8 x float>* %1154, align 1, !tbaa !12
  %1156 = add nuw nsw i64 %1071, 56
  %1157 = getelementptr inbounds float, float* %5, i64 %1156
  %1158 = bitcast float* %1157 to <8 x float>*
  %1159 = load <8 x float>, <8 x float>* %1158, align 1, !tbaa !12
  %1160 = add nuw nsw i64 %1071, 64
  %1161 = getelementptr inbounds float, float* %5, i64 %1160
  %1162 = bitcast float* %1161 to <8 x float>*
  %1163 = load <8 x float>, <8 x float>* %1162, align 1, !tbaa !12
  %1164 = add nuw nsw i64 %1071, 72
  %1165 = getelementptr inbounds float, float* %5, i64 %1164
  %1166 = bitcast float* %1165 to <8 x float>*
  %1167 = load <8 x float>, <8 x float>* %1166, align 1, !tbaa !12
  %1168 = add nuw nsw i64 %1071, 80
  %1169 = getelementptr inbounds float, float* %5, i64 %1168
  %1170 = bitcast float* %1169 to <8 x float>*
  %1171 = load <8 x float>, <8 x float>* %1170, align 1, !tbaa !12
  %1172 = add nuw nsw i64 %1071, 88
  %1173 = getelementptr inbounds float, float* %5, i64 %1172
  %1174 = bitcast float* %1173 to <8 x float>*
  %1175 = load <8 x float>, <8 x float>* %1174, align 1, !tbaa !12
  %1176 = add nuw nsw i64 %1071, 96
  %1177 = getelementptr inbounds float, float* %5, i64 %1176
  %1178 = bitcast float* %1177 to <8 x float>*
  %1179 = load <8 x float>, <8 x float>* %1178, align 1, !tbaa !12
  %1180 = add nuw nsw i64 %1071, 104
  %1181 = getelementptr inbounds float, float* %5, i64 %1180
  %1182 = bitcast float* %1181 to <8 x float>*
  %1183 = load <8 x float>, <8 x float>* %1182, align 1, !tbaa !12
  %1184 = add nsw i64 %1071, %875
  %1185 = getelementptr inbounds float, float* %3, i64 %1184
  %1186 = bitcast float* %1185 to <8 x float>*
  %1187 = load <8 x float>, <8 x float>* %1186, align 1, !tbaa !12
  %1188 = add nsw i64 %1184, 8
  %1189 = getelementptr inbounds float, float* %3, i64 %1188
  %1190 = bitcast float* %1189 to <8 x float>*
  %1191 = load <8 x float>, <8 x float>* %1190, align 1, !tbaa !12
  %1192 = add nsw i64 %1184, 16
  %1193 = getelementptr inbounds float, float* %3, i64 %1192
  %1194 = bitcast float* %1193 to <8 x float>*
  %1195 = load <8 x float>, <8 x float>* %1194, align 1, !tbaa !12
  %1196 = add nsw i64 %1184, 24
  %1197 = getelementptr inbounds float, float* %3, i64 %1196
  %1198 = bitcast float* %1197 to <8 x float>*
  %1199 = load <8 x float>, <8 x float>* %1198, align 1, !tbaa !12
  %1200 = add nsw i64 %1184, 32
  %1201 = getelementptr inbounds float, float* %3, i64 %1200
  %1202 = bitcast float* %1201 to <8 x float>*
  %1203 = load <8 x float>, <8 x float>* %1202, align 1, !tbaa !12
  %1204 = add nsw i64 %1184, 40
  %1205 = getelementptr inbounds float, float* %3, i64 %1204
  %1206 = bitcast float* %1205 to <8 x float>*
  %1207 = load <8 x float>, <8 x float>* %1206, align 1, !tbaa !12
  %1208 = add nsw i64 %1184, 48
  %1209 = getelementptr inbounds float, float* %3, i64 %1208
  %1210 = bitcast float* %1209 to <8 x float>*
  %1211 = load <8 x float>, <8 x float>* %1210, align 1, !tbaa !12
  %1212 = add nsw i64 %1184, 56
  %1213 = getelementptr inbounds float, float* %3, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nsw i64 %1184, 64
  %1217 = getelementptr inbounds float, float* %3, i64 %1216
  %1218 = bitcast float* %1217 to <8 x float>*
  %1219 = load <8 x float>, <8 x float>* %1218, align 1, !tbaa !12
  %1220 = add nsw i64 %1184, 72
  %1221 = getelementptr inbounds float, float* %3, i64 %1220
  %1222 = bitcast float* %1221 to <8 x float>*
  %1223 = load <8 x float>, <8 x float>* %1222, align 1, !tbaa !12
  %1224 = add nsw i64 %1184, 80
  %1225 = getelementptr inbounds float, float* %3, i64 %1224
  %1226 = bitcast float* %1225 to <8 x float>*
  %1227 = load <8 x float>, <8 x float>* %1226, align 1, !tbaa !12
  %1228 = add nsw i64 %1184, 88
  %1229 = getelementptr inbounds float, float* %3, i64 %1228
  %1230 = bitcast float* %1229 to <8 x float>*
  %1231 = load <8 x float>, <8 x float>* %1230, align 1, !tbaa !12
  %1232 = add nsw i64 %1184, 96
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i64 %1184, 104
  %1237 = getelementptr inbounds float, float* %3, i64 %1236
  %1238 = bitcast float* %1237 to <8 x float>*
  %1239 = load <8 x float>, <8 x float>* %1238, align 1, !tbaa !12
  %1240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1187, <8 x float> %50, <8 x float> %1131) #10
  %1241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1191, <8 x float> %50, <8 x float> %1135) #10
  %1242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1195, <8 x float> %50, <8 x float> %1139) #10
  %1243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1199, <8 x float> %50, <8 x float> %1143) #10
  %1244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1203, <8 x float> %50, <8 x float> %1147) #10
  %1245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1207, <8 x float> %50, <8 x float> %1151) #10
  %1246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1211, <8 x float> %50, <8 x float> %1155) #10
  %1247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1215, <8 x float> %50, <8 x float> %1159) #10
  %1248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1219, <8 x float> %50, <8 x float> %1163) #10
  %1249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1223, <8 x float> %50, <8 x float> %1167) #10
  %1250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1227, <8 x float> %50, <8 x float> %1171) #10
  %1251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1231, <8 x float> %50, <8 x float> %1175) #10
  %1252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %50, <8 x float> %1179) #10
  %1253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1239, <8 x float> %50, <8 x float> %1183) #10
  store <8 x float> %1240, <8 x float>* %1130, align 1, !tbaa !12
  store <8 x float> %1241, <8 x float>* %1134, align 1, !tbaa !12
  store <8 x float> %1242, <8 x float>* %1138, align 1, !tbaa !12
  store <8 x float> %1243, <8 x float>* %1142, align 1, !tbaa !12
  store <8 x float> %1244, <8 x float>* %1146, align 1, !tbaa !12
  store <8 x float> %1245, <8 x float>* %1150, align 1, !tbaa !12
  store <8 x float> %1246, <8 x float>* %1154, align 1, !tbaa !12
  store <8 x float> %1247, <8 x float>* %1158, align 1, !tbaa !12
  store <8 x float> %1248, <8 x float>* %1162, align 1, !tbaa !12
  store <8 x float> %1249, <8 x float>* %1166, align 1, !tbaa !12
  store <8 x float> %1250, <8 x float>* %1170, align 1, !tbaa !12
  store <8 x float> %1251, <8 x float>* %1174, align 1, !tbaa !12
  store <8 x float> %1252, <8 x float>* %1178, align 1, !tbaa !12
  store <8 x float> %1253, <8 x float>* %1182, align 1, !tbaa !12
  %1254 = add nuw nsw i64 %1071, 112
  %1255 = icmp ult i64 %1254, %876
  br i1 %1255, label %1070, label %1063

1256:                                             ; preds = %1262
  br i1 %1065, label %1257, label %1655

1257:                                             ; preds = %1256
  %1258 = trunc i64 %56 to i32
  %1259 = mul nsw i32 %1064, %1258
  %1260 = sext i32 %1259 to i64
  %1261 = zext i32 %1064 to i64
  br label %1469

1262:                                             ; preds = %1066, %1262
  %1263 = phi i64 [ 0, %1066 ], [ %1461, %1262 ]
  %1264 = getelementptr inbounds float, float* %5, i64 %1263
  %1265 = getelementptr inbounds float, float* %1264, i64 8
  %1266 = bitcast float* %1265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1266, i32 0, i32 1, i32 1)
  %1267 = getelementptr inbounds float, float* %3, i64 %1263
  %1268 = getelementptr inbounds float, float* %1267, i64 8
  %1269 = bitcast float* %1268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1269, i32 0, i32 1, i32 1)
  %1270 = getelementptr inbounds float, float* %1264, i64 16
  %1271 = bitcast float* %1270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1271, i32 0, i32 1, i32 1)
  %1272 = getelementptr inbounds float, float* %1267, i64 16
  %1273 = bitcast float* %1272 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1273, i32 0, i32 1, i32 1)
  %1274 = getelementptr inbounds float, float* %1264, i64 24
  %1275 = bitcast float* %1274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1275, i32 0, i32 1, i32 1)
  %1276 = getelementptr inbounds float, float* %1267, i64 24
  %1277 = bitcast float* %1276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1277, i32 0, i32 1, i32 1)
  %1278 = getelementptr inbounds float, float* %1264, i64 32
  %1279 = bitcast float* %1278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1279, i32 0, i32 1, i32 1)
  %1280 = getelementptr inbounds float, float* %1267, i64 32
  %1281 = bitcast float* %1280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1281, i32 0, i32 1, i32 1)
  %1282 = getelementptr inbounds float, float* %1264, i64 40
  %1283 = bitcast float* %1282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1283, i32 0, i32 1, i32 1)
  %1284 = getelementptr inbounds float, float* %1267, i64 40
  %1285 = bitcast float* %1284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1285, i32 0, i32 1, i32 1)
  %1286 = getelementptr inbounds float, float* %1264, i64 48
  %1287 = bitcast float* %1286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1287, i32 0, i32 1, i32 1)
  %1288 = getelementptr inbounds float, float* %1267, i64 48
  %1289 = bitcast float* %1288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1289, i32 0, i32 1, i32 1)
  %1290 = getelementptr inbounds float, float* %1264, i64 56
  %1291 = bitcast float* %1290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1291, i32 0, i32 1, i32 1)
  %1292 = getelementptr inbounds float, float* %1267, i64 56
  %1293 = bitcast float* %1292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1293, i32 0, i32 1, i32 1)
  %1294 = getelementptr inbounds float, float* %1264, i64 64
  %1295 = bitcast float* %1294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1295, i32 0, i32 1, i32 1)
  %1296 = getelementptr inbounds float, float* %1267, i64 64
  %1297 = bitcast float* %1296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1297, i32 0, i32 1, i32 1)
  %1298 = getelementptr inbounds float, float* %1264, i64 72
  %1299 = bitcast float* %1298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1299, i32 0, i32 1, i32 1)
  %1300 = getelementptr inbounds float, float* %1267, i64 72
  %1301 = bitcast float* %1300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1301, i32 0, i32 1, i32 1)
  %1302 = getelementptr inbounds float, float* %1264, i64 80
  %1303 = bitcast float* %1302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1303, i32 0, i32 1, i32 1)
  %1304 = getelementptr inbounds float, float* %1267, i64 80
  %1305 = bitcast float* %1304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1305, i32 0, i32 1, i32 1)
  %1306 = getelementptr inbounds float, float* %1264, i64 88
  %1307 = bitcast float* %1306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1307, i32 0, i32 1, i32 1)
  %1308 = getelementptr inbounds float, float* %1267, i64 88
  %1309 = bitcast float* %1308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1309, i32 0, i32 1, i32 1)
  %1310 = getelementptr inbounds float, float* %1264, i64 96
  %1311 = bitcast float* %1310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1311, i32 0, i32 1, i32 1)
  %1312 = getelementptr inbounds float, float* %1267, i64 96
  %1313 = bitcast float* %1312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1313, i32 0, i32 1, i32 1)
  %1314 = getelementptr inbounds float, float* %1264, i64 104
  %1315 = bitcast float* %1314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1315, i32 0, i32 1, i32 1)
  %1316 = getelementptr inbounds float, float* %1267, i64 104
  %1317 = bitcast float* %1316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1317, i32 0, i32 1, i32 1)
  %1318 = getelementptr inbounds float, float* %1264, i64 112
  %1319 = bitcast float* %1318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1319, i32 0, i32 1, i32 1)
  %1320 = getelementptr inbounds float, float* %1267, i64 112
  %1321 = bitcast float* %1320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1321, i32 0, i32 1, i32 1)
  %1322 = bitcast float* %1264 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = or i64 %1263, 8
  %1325 = getelementptr inbounds float, float* %5, i64 %1324
  %1326 = bitcast float* %1325 to <8 x float>*
  %1327 = load <8 x float>, <8 x float>* %1326, align 1, !tbaa !12
  %1328 = add nuw nsw i64 %1263, 16
  %1329 = getelementptr inbounds float, float* %5, i64 %1328
  %1330 = bitcast float* %1329 to <8 x float>*
  %1331 = load <8 x float>, <8 x float>* %1330, align 1, !tbaa !12
  %1332 = add nuw nsw i64 %1263, 24
  %1333 = getelementptr inbounds float, float* %5, i64 %1332
  %1334 = bitcast float* %1333 to <8 x float>*
  %1335 = load <8 x float>, <8 x float>* %1334, align 1, !tbaa !12
  %1336 = add nuw nsw i64 %1263, 32
  %1337 = getelementptr inbounds float, float* %5, i64 %1336
  %1338 = bitcast float* %1337 to <8 x float>*
  %1339 = load <8 x float>, <8 x float>* %1338, align 1, !tbaa !12
  %1340 = add nuw nsw i64 %1263, 40
  %1341 = getelementptr inbounds float, float* %5, i64 %1340
  %1342 = bitcast float* %1341 to <8 x float>*
  %1343 = load <8 x float>, <8 x float>* %1342, align 1, !tbaa !12
  %1344 = add nuw nsw i64 %1263, 48
  %1345 = getelementptr inbounds float, float* %5, i64 %1344
  %1346 = bitcast float* %1345 to <8 x float>*
  %1347 = load <8 x float>, <8 x float>* %1346, align 1, !tbaa !12
  %1348 = add nuw nsw i64 %1263, 56
  %1349 = getelementptr inbounds float, float* %5, i64 %1348
  %1350 = bitcast float* %1349 to <8 x float>*
  %1351 = load <8 x float>, <8 x float>* %1350, align 1, !tbaa !12
  %1352 = add nuw nsw i64 %1263, 64
  %1353 = getelementptr inbounds float, float* %5, i64 %1352
  %1354 = bitcast float* %1353 to <8 x float>*
  %1355 = load <8 x float>, <8 x float>* %1354, align 1, !tbaa !12
  %1356 = add nuw nsw i64 %1263, 72
  %1357 = getelementptr inbounds float, float* %5, i64 %1356
  %1358 = bitcast float* %1357 to <8 x float>*
  %1359 = load <8 x float>, <8 x float>* %1358, align 1, !tbaa !12
  %1360 = add nuw nsw i64 %1263, 80
  %1361 = getelementptr inbounds float, float* %5, i64 %1360
  %1362 = bitcast float* %1361 to <8 x float>*
  %1363 = load <8 x float>, <8 x float>* %1362, align 1, !tbaa !12
  %1364 = add nuw nsw i64 %1263, 88
  %1365 = getelementptr inbounds float, float* %5, i64 %1364
  %1366 = bitcast float* %1365 to <8 x float>*
  %1367 = load <8 x float>, <8 x float>* %1366, align 1, !tbaa !12
  %1368 = add nuw nsw i64 %1263, 96
  %1369 = getelementptr inbounds float, float* %5, i64 %1368
  %1370 = bitcast float* %1369 to <8 x float>*
  %1371 = load <8 x float>, <8 x float>* %1370, align 1, !tbaa !12
  %1372 = add nuw nsw i64 %1263, 104
  %1373 = getelementptr inbounds float, float* %5, i64 %1372
  %1374 = bitcast float* %1373 to <8 x float>*
  %1375 = load <8 x float>, <8 x float>* %1374, align 1, !tbaa !12
  %1376 = trunc i64 %1263 to i32
  %1377 = add nsw i32 %1069, %1376
  %1378 = sext i32 %1377 to i64
  %1379 = getelementptr inbounds float, float* %3, i64 %1378
  %1380 = bitcast float* %1379 to <8 x float>*
  %1381 = load <8 x float>, <8 x float>* %1380, align 1, !tbaa !12
  %1382 = add nsw i32 %1377, 8
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds float, float* %3, i64 %1383
  %1385 = bitcast float* %1384 to <8 x float>*
  %1386 = load <8 x float>, <8 x float>* %1385, align 1, !tbaa !12
  %1387 = add nsw i32 %1377, 16
  %1388 = sext i32 %1387 to i64
  %1389 = getelementptr inbounds float, float* %3, i64 %1388
  %1390 = bitcast float* %1389 to <8 x float>*
  %1391 = load <8 x float>, <8 x float>* %1390, align 1, !tbaa !12
  %1392 = add nsw i32 %1377, 24
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds float, float* %3, i64 %1393
  %1395 = bitcast float* %1394 to <8 x float>*
  %1396 = load <8 x float>, <8 x float>* %1395, align 1, !tbaa !12
  %1397 = add nsw i32 %1377, 32
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds float, float* %3, i64 %1398
  %1400 = bitcast float* %1399 to <8 x float>*
  %1401 = load <8 x float>, <8 x float>* %1400, align 1, !tbaa !12
  %1402 = add nsw i32 %1377, 40
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds float, float* %3, i64 %1403
  %1405 = bitcast float* %1404 to <8 x float>*
  %1406 = load <8 x float>, <8 x float>* %1405, align 1, !tbaa !12
  %1407 = add nsw i32 %1377, 48
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds float, float* %3, i64 %1408
  %1410 = bitcast float* %1409 to <8 x float>*
  %1411 = load <8 x float>, <8 x float>* %1410, align 1, !tbaa !12
  %1412 = add nsw i32 %1377, 56
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds float, float* %3, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = add nsw i32 %1377, 64
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds float, float* %3, i64 %1418
  %1420 = bitcast float* %1419 to <8 x float>*
  %1421 = load <8 x float>, <8 x float>* %1420, align 1, !tbaa !12
  %1422 = add nsw i32 %1377, 72
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds float, float* %3, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = add nsw i32 %1377, 80
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds float, float* %3, i64 %1428
  %1430 = bitcast float* %1429 to <8 x float>*
  %1431 = load <8 x float>, <8 x float>* %1430, align 1, !tbaa !12
  %1432 = add nsw i32 %1377, 88
  %1433 = sext i32 %1432 to i64
  %1434 = getelementptr inbounds float, float* %3, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = add nsw i32 %1377, 96
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds float, float* %3, i64 %1438
  %1440 = bitcast float* %1439 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = add nsw i32 %1377, 104
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds float, float* %3, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1381, <8 x float> %55, <8 x float> %1323) #10
  %1448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1386, <8 x float> %55, <8 x float> %1327) #10
  %1449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1391, <8 x float> %55, <8 x float> %1331) #10
  %1450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1396, <8 x float> %55, <8 x float> %1335) #10
  %1451 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1401, <8 x float> %55, <8 x float> %1339) #10
  %1452 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1406, <8 x float> %55, <8 x float> %1343) #10
  %1453 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1411, <8 x float> %55, <8 x float> %1347) #10
  %1454 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1416, <8 x float> %55, <8 x float> %1351) #10
  %1455 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1421, <8 x float> %55, <8 x float> %1355) #10
  %1456 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1426, <8 x float> %55, <8 x float> %1359) #10
  %1457 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1431, <8 x float> %55, <8 x float> %1363) #10
  %1458 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1436, <8 x float> %55, <8 x float> %1367) #10
  %1459 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1441, <8 x float> %55, <8 x float> %1371) #10
  %1460 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1446, <8 x float> %55, <8 x float> %1375) #10
  store <8 x float> %1447, <8 x float>* %1322, align 1, !tbaa !12
  store <8 x float> %1448, <8 x float>* %1326, align 1, !tbaa !12
  store <8 x float> %1449, <8 x float>* %1330, align 1, !tbaa !12
  store <8 x float> %1450, <8 x float>* %1334, align 1, !tbaa !12
  store <8 x float> %1451, <8 x float>* %1338, align 1, !tbaa !12
  store <8 x float> %1452, <8 x float>* %1342, align 1, !tbaa !12
  store <8 x float> %1453, <8 x float>* %1346, align 1, !tbaa !12
  store <8 x float> %1454, <8 x float>* %1350, align 1, !tbaa !12
  store <8 x float> %1455, <8 x float>* %1354, align 1, !tbaa !12
  store <8 x float> %1456, <8 x float>* %1358, align 1, !tbaa !12
  store <8 x float> %1457, <8 x float>* %1362, align 1, !tbaa !12
  store <8 x float> %1458, <8 x float>* %1366, align 1, !tbaa !12
  store <8 x float> %1459, <8 x float>* %1370, align 1, !tbaa !12
  store <8 x float> %1460, <8 x float>* %1374, align 1, !tbaa !12
  %1461 = add nuw nsw i64 %1263, 112
  %1462 = icmp ult i64 %1461, %1067
  br i1 %1462, label %1262, label %1256

1463:                                             ; preds = %1469
  br i1 %1065, label %1464, label %1655

1464:                                             ; preds = %1463
  %1465 = trunc i64 %61 to i32
  %1466 = mul nsw i32 %1064, %1465
  %1467 = sext i32 %1466 to i64
  %1468 = zext i32 %1064 to i64
  br label %1660

1469:                                             ; preds = %1257, %1469
  %1470 = phi i64 [ 0, %1257 ], [ %1653, %1469 ]
  %1471 = getelementptr inbounds float, float* %5, i64 %1470
  %1472 = getelementptr inbounds float, float* %1471, i64 8
  %1473 = bitcast float* %1472 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1473, i32 0, i32 1, i32 1)
  %1474 = getelementptr inbounds float, float* %3, i64 %1470
  %1475 = getelementptr inbounds float, float* %1474, i64 8
  %1476 = bitcast float* %1475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1476, i32 0, i32 1, i32 1)
  %1477 = getelementptr inbounds float, float* %1471, i64 16
  %1478 = bitcast float* %1477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1478, i32 0, i32 1, i32 1)
  %1479 = getelementptr inbounds float, float* %1474, i64 16
  %1480 = bitcast float* %1479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1480, i32 0, i32 1, i32 1)
  %1481 = getelementptr inbounds float, float* %1471, i64 24
  %1482 = bitcast float* %1481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1482, i32 0, i32 1, i32 1)
  %1483 = getelementptr inbounds float, float* %1474, i64 24
  %1484 = bitcast float* %1483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1484, i32 0, i32 1, i32 1)
  %1485 = getelementptr inbounds float, float* %1471, i64 32
  %1486 = bitcast float* %1485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1486, i32 0, i32 1, i32 1)
  %1487 = getelementptr inbounds float, float* %1474, i64 32
  %1488 = bitcast float* %1487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1488, i32 0, i32 1, i32 1)
  %1489 = getelementptr inbounds float, float* %1471, i64 40
  %1490 = bitcast float* %1489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1490, i32 0, i32 1, i32 1)
  %1491 = getelementptr inbounds float, float* %1474, i64 40
  %1492 = bitcast float* %1491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1492, i32 0, i32 1, i32 1)
  %1493 = getelementptr inbounds float, float* %1471, i64 48
  %1494 = bitcast float* %1493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1494, i32 0, i32 1, i32 1)
  %1495 = getelementptr inbounds float, float* %1474, i64 48
  %1496 = bitcast float* %1495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1496, i32 0, i32 1, i32 1)
  %1497 = getelementptr inbounds float, float* %1471, i64 56
  %1498 = bitcast float* %1497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1498, i32 0, i32 1, i32 1)
  %1499 = getelementptr inbounds float, float* %1474, i64 56
  %1500 = bitcast float* %1499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1500, i32 0, i32 1, i32 1)
  %1501 = getelementptr inbounds float, float* %1471, i64 64
  %1502 = bitcast float* %1501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1502, i32 0, i32 1, i32 1)
  %1503 = getelementptr inbounds float, float* %1474, i64 64
  %1504 = bitcast float* %1503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1504, i32 0, i32 1, i32 1)
  %1505 = getelementptr inbounds float, float* %1471, i64 72
  %1506 = bitcast float* %1505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1506, i32 0, i32 1, i32 1)
  %1507 = getelementptr inbounds float, float* %1474, i64 72
  %1508 = bitcast float* %1507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1508, i32 0, i32 1, i32 1)
  %1509 = getelementptr inbounds float, float* %1471, i64 80
  %1510 = bitcast float* %1509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1510, i32 0, i32 1, i32 1)
  %1511 = getelementptr inbounds float, float* %1474, i64 80
  %1512 = bitcast float* %1511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1512, i32 0, i32 1, i32 1)
  %1513 = getelementptr inbounds float, float* %1471, i64 88
  %1514 = bitcast float* %1513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1514, i32 0, i32 1, i32 1)
  %1515 = getelementptr inbounds float, float* %1474, i64 88
  %1516 = bitcast float* %1515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1516, i32 0, i32 1, i32 1)
  %1517 = getelementptr inbounds float, float* %1471, i64 96
  %1518 = bitcast float* %1517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1518, i32 0, i32 1, i32 1)
  %1519 = getelementptr inbounds float, float* %1474, i64 96
  %1520 = bitcast float* %1519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1520, i32 0, i32 1, i32 1)
  %1521 = getelementptr inbounds float, float* %1471, i64 104
  %1522 = bitcast float* %1521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1522, i32 0, i32 1, i32 1)
  %1523 = getelementptr inbounds float, float* %1474, i64 104
  %1524 = bitcast float* %1523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1524, i32 0, i32 1, i32 1)
  %1525 = getelementptr inbounds float, float* %1471, i64 112
  %1526 = bitcast float* %1525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1526, i32 0, i32 1, i32 1)
  %1527 = getelementptr inbounds float, float* %1474, i64 112
  %1528 = bitcast float* %1527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1528, i32 0, i32 1, i32 1)
  %1529 = bitcast float* %1471 to <8 x float>*
  %1530 = load <8 x float>, <8 x float>* %1529, align 1, !tbaa !12
  %1531 = or i64 %1470, 8
  %1532 = getelementptr inbounds float, float* %5, i64 %1531
  %1533 = bitcast float* %1532 to <8 x float>*
  %1534 = load <8 x float>, <8 x float>* %1533, align 1, !tbaa !12
  %1535 = add nuw nsw i64 %1470, 16
  %1536 = getelementptr inbounds float, float* %5, i64 %1535
  %1537 = bitcast float* %1536 to <8 x float>*
  %1538 = load <8 x float>, <8 x float>* %1537, align 1, !tbaa !12
  %1539 = add nuw nsw i64 %1470, 24
  %1540 = getelementptr inbounds float, float* %5, i64 %1539
  %1541 = bitcast float* %1540 to <8 x float>*
  %1542 = load <8 x float>, <8 x float>* %1541, align 1, !tbaa !12
  %1543 = add nuw nsw i64 %1470, 32
  %1544 = getelementptr inbounds float, float* %5, i64 %1543
  %1545 = bitcast float* %1544 to <8 x float>*
  %1546 = load <8 x float>, <8 x float>* %1545, align 1, !tbaa !12
  %1547 = add nuw nsw i64 %1470, 40
  %1548 = getelementptr inbounds float, float* %5, i64 %1547
  %1549 = bitcast float* %1548 to <8 x float>*
  %1550 = load <8 x float>, <8 x float>* %1549, align 1, !tbaa !12
  %1551 = add nuw nsw i64 %1470, 48
  %1552 = getelementptr inbounds float, float* %5, i64 %1551
  %1553 = bitcast float* %1552 to <8 x float>*
  %1554 = load <8 x float>, <8 x float>* %1553, align 1, !tbaa !12
  %1555 = add nuw nsw i64 %1470, 56
  %1556 = getelementptr inbounds float, float* %5, i64 %1555
  %1557 = bitcast float* %1556 to <8 x float>*
  %1558 = load <8 x float>, <8 x float>* %1557, align 1, !tbaa !12
  %1559 = add nuw nsw i64 %1470, 64
  %1560 = getelementptr inbounds float, float* %5, i64 %1559
  %1561 = bitcast float* %1560 to <8 x float>*
  %1562 = load <8 x float>, <8 x float>* %1561, align 1, !tbaa !12
  %1563 = add nuw nsw i64 %1470, 72
  %1564 = getelementptr inbounds float, float* %5, i64 %1563
  %1565 = bitcast float* %1564 to <8 x float>*
  %1566 = load <8 x float>, <8 x float>* %1565, align 1, !tbaa !12
  %1567 = add nuw nsw i64 %1470, 80
  %1568 = getelementptr inbounds float, float* %5, i64 %1567
  %1569 = bitcast float* %1568 to <8 x float>*
  %1570 = load <8 x float>, <8 x float>* %1569, align 1, !tbaa !12
  %1571 = add nuw nsw i64 %1470, 88
  %1572 = getelementptr inbounds float, float* %5, i64 %1571
  %1573 = bitcast float* %1572 to <8 x float>*
  %1574 = load <8 x float>, <8 x float>* %1573, align 1, !tbaa !12
  %1575 = add nuw nsw i64 %1470, 96
  %1576 = getelementptr inbounds float, float* %5, i64 %1575
  %1577 = bitcast float* %1576 to <8 x float>*
  %1578 = load <8 x float>, <8 x float>* %1577, align 1, !tbaa !12
  %1579 = add nuw nsw i64 %1470, 104
  %1580 = getelementptr inbounds float, float* %5, i64 %1579
  %1581 = bitcast float* %1580 to <8 x float>*
  %1582 = load <8 x float>, <8 x float>* %1581, align 1, !tbaa !12
  %1583 = add nsw i64 %1470, %1260
  %1584 = getelementptr inbounds float, float* %3, i64 %1583
  %1585 = bitcast float* %1584 to <8 x float>*
  %1586 = load <8 x float>, <8 x float>* %1585, align 1, !tbaa !12
  %1587 = add nsw i64 %1583, 8
  %1588 = getelementptr inbounds float, float* %3, i64 %1587
  %1589 = bitcast float* %1588 to <8 x float>*
  %1590 = load <8 x float>, <8 x float>* %1589, align 1, !tbaa !12
  %1591 = add nsw i64 %1583, 16
  %1592 = getelementptr inbounds float, float* %3, i64 %1591
  %1593 = bitcast float* %1592 to <8 x float>*
  %1594 = load <8 x float>, <8 x float>* %1593, align 1, !tbaa !12
  %1595 = add nsw i64 %1583, 24
  %1596 = getelementptr inbounds float, float* %3, i64 %1595
  %1597 = bitcast float* %1596 to <8 x float>*
  %1598 = load <8 x float>, <8 x float>* %1597, align 1, !tbaa !12
  %1599 = add nsw i64 %1583, 32
  %1600 = getelementptr inbounds float, float* %3, i64 %1599
  %1601 = bitcast float* %1600 to <8 x float>*
  %1602 = load <8 x float>, <8 x float>* %1601, align 1, !tbaa !12
  %1603 = add nsw i64 %1583, 40
  %1604 = getelementptr inbounds float, float* %3, i64 %1603
  %1605 = bitcast float* %1604 to <8 x float>*
  %1606 = load <8 x float>, <8 x float>* %1605, align 1, !tbaa !12
  %1607 = add nsw i64 %1583, 48
  %1608 = getelementptr inbounds float, float* %3, i64 %1607
  %1609 = bitcast float* %1608 to <8 x float>*
  %1610 = load <8 x float>, <8 x float>* %1609, align 1, !tbaa !12
  %1611 = add nsw i64 %1583, 56
  %1612 = getelementptr inbounds float, float* %3, i64 %1611
  %1613 = bitcast float* %1612 to <8 x float>*
  %1614 = load <8 x float>, <8 x float>* %1613, align 1, !tbaa !12
  %1615 = add nsw i64 %1583, 64
  %1616 = getelementptr inbounds float, float* %3, i64 %1615
  %1617 = bitcast float* %1616 to <8 x float>*
  %1618 = load <8 x float>, <8 x float>* %1617, align 1, !tbaa !12
  %1619 = add nsw i64 %1583, 72
  %1620 = getelementptr inbounds float, float* %3, i64 %1619
  %1621 = bitcast float* %1620 to <8 x float>*
  %1622 = load <8 x float>, <8 x float>* %1621, align 1, !tbaa !12
  %1623 = add nsw i64 %1583, 80
  %1624 = getelementptr inbounds float, float* %3, i64 %1623
  %1625 = bitcast float* %1624 to <8 x float>*
  %1626 = load <8 x float>, <8 x float>* %1625, align 1, !tbaa !12
  %1627 = add nsw i64 %1583, 88
  %1628 = getelementptr inbounds float, float* %3, i64 %1627
  %1629 = bitcast float* %1628 to <8 x float>*
  %1630 = load <8 x float>, <8 x float>* %1629, align 1, !tbaa !12
  %1631 = add nsw i64 %1583, 96
  %1632 = getelementptr inbounds float, float* %3, i64 %1631
  %1633 = bitcast float* %1632 to <8 x float>*
  %1634 = load <8 x float>, <8 x float>* %1633, align 1, !tbaa !12
  %1635 = add nsw i64 %1583, 104
  %1636 = getelementptr inbounds float, float* %3, i64 %1635
  %1637 = bitcast float* %1636 to <8 x float>*
  %1638 = load <8 x float>, <8 x float>* %1637, align 1, !tbaa !12
  %1639 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1586, <8 x float> %60, <8 x float> %1530) #10
  %1640 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1590, <8 x float> %60, <8 x float> %1534) #10
  %1641 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1594, <8 x float> %60, <8 x float> %1538) #10
  %1642 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1598, <8 x float> %60, <8 x float> %1542) #10
  %1643 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1602, <8 x float> %60, <8 x float> %1546) #10
  %1644 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1606, <8 x float> %60, <8 x float> %1550) #10
  %1645 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1610, <8 x float> %60, <8 x float> %1554) #10
  %1646 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1614, <8 x float> %60, <8 x float> %1558) #10
  %1647 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1618, <8 x float> %60, <8 x float> %1562) #10
  %1648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1622, <8 x float> %60, <8 x float> %1566) #10
  %1649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1626, <8 x float> %60, <8 x float> %1570) #10
  %1650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1630, <8 x float> %60, <8 x float> %1574) #10
  %1651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1634, <8 x float> %60, <8 x float> %1578) #10
  %1652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1638, <8 x float> %60, <8 x float> %1582) #10
  store <8 x float> %1639, <8 x float>* %1529, align 1, !tbaa !12
  store <8 x float> %1640, <8 x float>* %1533, align 1, !tbaa !12
  store <8 x float> %1641, <8 x float>* %1537, align 1, !tbaa !12
  store <8 x float> %1642, <8 x float>* %1541, align 1, !tbaa !12
  store <8 x float> %1643, <8 x float>* %1545, align 1, !tbaa !12
  store <8 x float> %1644, <8 x float>* %1549, align 1, !tbaa !12
  store <8 x float> %1645, <8 x float>* %1553, align 1, !tbaa !12
  store <8 x float> %1646, <8 x float>* %1557, align 1, !tbaa !12
  store <8 x float> %1647, <8 x float>* %1561, align 1, !tbaa !12
  store <8 x float> %1648, <8 x float>* %1565, align 1, !tbaa !12
  store <8 x float> %1649, <8 x float>* %1569, align 1, !tbaa !12
  store <8 x float> %1650, <8 x float>* %1573, align 1, !tbaa !12
  store <8 x float> %1651, <8 x float>* %1577, align 1, !tbaa !12
  store <8 x float> %1652, <8 x float>* %1581, align 1, !tbaa !12
  %1653 = add nuw nsw i64 %1470, 112
  %1654 = icmp ult i64 %1653, %1261
  br i1 %1654, label %1469, label %1463

1655:                                             ; preds = %1660, %20, %471, %1063, %1256, %1463
  %1656 = add nuw nsw i64 %21, 9
  %1657 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1658 = sext i32 %1657 to i64
  %1659 = icmp slt i64 %1656, %1658
  br i1 %1659, label %20, label %8

1660:                                             ; preds = %1464, %1660
  %1661 = phi i64 [ 0, %1464 ], [ %1844, %1660 ]
  %1662 = getelementptr inbounds float, float* %5, i64 %1661
  %1663 = getelementptr inbounds float, float* %1662, i64 8
  %1664 = bitcast float* %1663 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1664, i32 0, i32 1, i32 1)
  %1665 = getelementptr inbounds float, float* %3, i64 %1661
  %1666 = getelementptr inbounds float, float* %1665, i64 8
  %1667 = bitcast float* %1666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1667, i32 0, i32 1, i32 1)
  %1668 = getelementptr inbounds float, float* %1662, i64 16
  %1669 = bitcast float* %1668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1669, i32 0, i32 1, i32 1)
  %1670 = getelementptr inbounds float, float* %1665, i64 16
  %1671 = bitcast float* %1670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1671, i32 0, i32 1, i32 1)
  %1672 = getelementptr inbounds float, float* %1662, i64 24
  %1673 = bitcast float* %1672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1673, i32 0, i32 1, i32 1)
  %1674 = getelementptr inbounds float, float* %1665, i64 24
  %1675 = bitcast float* %1674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1675, i32 0, i32 1, i32 1)
  %1676 = getelementptr inbounds float, float* %1662, i64 32
  %1677 = bitcast float* %1676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1677, i32 0, i32 1, i32 1)
  %1678 = getelementptr inbounds float, float* %1665, i64 32
  %1679 = bitcast float* %1678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1679, i32 0, i32 1, i32 1)
  %1680 = getelementptr inbounds float, float* %1662, i64 40
  %1681 = bitcast float* %1680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1681, i32 0, i32 1, i32 1)
  %1682 = getelementptr inbounds float, float* %1665, i64 40
  %1683 = bitcast float* %1682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1683, i32 0, i32 1, i32 1)
  %1684 = getelementptr inbounds float, float* %1662, i64 48
  %1685 = bitcast float* %1684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1685, i32 0, i32 1, i32 1)
  %1686 = getelementptr inbounds float, float* %1665, i64 48
  %1687 = bitcast float* %1686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1687, i32 0, i32 1, i32 1)
  %1688 = getelementptr inbounds float, float* %1662, i64 56
  %1689 = bitcast float* %1688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1689, i32 0, i32 1, i32 1)
  %1690 = getelementptr inbounds float, float* %1665, i64 56
  %1691 = bitcast float* %1690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1691, i32 0, i32 1, i32 1)
  %1692 = getelementptr inbounds float, float* %1662, i64 64
  %1693 = bitcast float* %1692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1693, i32 0, i32 1, i32 1)
  %1694 = getelementptr inbounds float, float* %1665, i64 64
  %1695 = bitcast float* %1694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1695, i32 0, i32 1, i32 1)
  %1696 = getelementptr inbounds float, float* %1662, i64 72
  %1697 = bitcast float* %1696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1697, i32 0, i32 1, i32 1)
  %1698 = getelementptr inbounds float, float* %1665, i64 72
  %1699 = bitcast float* %1698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1699, i32 0, i32 1, i32 1)
  %1700 = getelementptr inbounds float, float* %1662, i64 80
  %1701 = bitcast float* %1700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1701, i32 0, i32 1, i32 1)
  %1702 = getelementptr inbounds float, float* %1665, i64 80
  %1703 = bitcast float* %1702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1703, i32 0, i32 1, i32 1)
  %1704 = getelementptr inbounds float, float* %1662, i64 88
  %1705 = bitcast float* %1704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1705, i32 0, i32 1, i32 1)
  %1706 = getelementptr inbounds float, float* %1665, i64 88
  %1707 = bitcast float* %1706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1707, i32 0, i32 1, i32 1)
  %1708 = getelementptr inbounds float, float* %1662, i64 96
  %1709 = bitcast float* %1708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1709, i32 0, i32 1, i32 1)
  %1710 = getelementptr inbounds float, float* %1665, i64 96
  %1711 = bitcast float* %1710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1711, i32 0, i32 1, i32 1)
  %1712 = getelementptr inbounds float, float* %1662, i64 104
  %1713 = bitcast float* %1712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1713, i32 0, i32 1, i32 1)
  %1714 = getelementptr inbounds float, float* %1665, i64 104
  %1715 = bitcast float* %1714 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1715, i32 0, i32 1, i32 1)
  %1716 = getelementptr inbounds float, float* %1662, i64 112
  %1717 = bitcast float* %1716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1717, i32 0, i32 1, i32 1)
  %1718 = getelementptr inbounds float, float* %1665, i64 112
  %1719 = bitcast float* %1718 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1719, i32 0, i32 1, i32 1)
  %1720 = bitcast float* %1662 to <8 x float>*
  %1721 = load <8 x float>, <8 x float>* %1720, align 1, !tbaa !12
  %1722 = or i64 %1661, 8
  %1723 = getelementptr inbounds float, float* %5, i64 %1722
  %1724 = bitcast float* %1723 to <8 x float>*
  %1725 = load <8 x float>, <8 x float>* %1724, align 1, !tbaa !12
  %1726 = add nuw nsw i64 %1661, 16
  %1727 = getelementptr inbounds float, float* %5, i64 %1726
  %1728 = bitcast float* %1727 to <8 x float>*
  %1729 = load <8 x float>, <8 x float>* %1728, align 1, !tbaa !12
  %1730 = add nuw nsw i64 %1661, 24
  %1731 = getelementptr inbounds float, float* %5, i64 %1730
  %1732 = bitcast float* %1731 to <8 x float>*
  %1733 = load <8 x float>, <8 x float>* %1732, align 1, !tbaa !12
  %1734 = add nuw nsw i64 %1661, 32
  %1735 = getelementptr inbounds float, float* %5, i64 %1734
  %1736 = bitcast float* %1735 to <8 x float>*
  %1737 = load <8 x float>, <8 x float>* %1736, align 1, !tbaa !12
  %1738 = add nuw nsw i64 %1661, 40
  %1739 = getelementptr inbounds float, float* %5, i64 %1738
  %1740 = bitcast float* %1739 to <8 x float>*
  %1741 = load <8 x float>, <8 x float>* %1740, align 1, !tbaa !12
  %1742 = add nuw nsw i64 %1661, 48
  %1743 = getelementptr inbounds float, float* %5, i64 %1742
  %1744 = bitcast float* %1743 to <8 x float>*
  %1745 = load <8 x float>, <8 x float>* %1744, align 1, !tbaa !12
  %1746 = add nuw nsw i64 %1661, 56
  %1747 = getelementptr inbounds float, float* %5, i64 %1746
  %1748 = bitcast float* %1747 to <8 x float>*
  %1749 = load <8 x float>, <8 x float>* %1748, align 1, !tbaa !12
  %1750 = add nuw nsw i64 %1661, 64
  %1751 = getelementptr inbounds float, float* %5, i64 %1750
  %1752 = bitcast float* %1751 to <8 x float>*
  %1753 = load <8 x float>, <8 x float>* %1752, align 1, !tbaa !12
  %1754 = add nuw nsw i64 %1661, 72
  %1755 = getelementptr inbounds float, float* %5, i64 %1754
  %1756 = bitcast float* %1755 to <8 x float>*
  %1757 = load <8 x float>, <8 x float>* %1756, align 1, !tbaa !12
  %1758 = add nuw nsw i64 %1661, 80
  %1759 = getelementptr inbounds float, float* %5, i64 %1758
  %1760 = bitcast float* %1759 to <8 x float>*
  %1761 = load <8 x float>, <8 x float>* %1760, align 1, !tbaa !12
  %1762 = add nuw nsw i64 %1661, 88
  %1763 = getelementptr inbounds float, float* %5, i64 %1762
  %1764 = bitcast float* %1763 to <8 x float>*
  %1765 = load <8 x float>, <8 x float>* %1764, align 1, !tbaa !12
  %1766 = add nuw nsw i64 %1661, 96
  %1767 = getelementptr inbounds float, float* %5, i64 %1766
  %1768 = bitcast float* %1767 to <8 x float>*
  %1769 = load <8 x float>, <8 x float>* %1768, align 1, !tbaa !12
  %1770 = add nuw nsw i64 %1661, 104
  %1771 = getelementptr inbounds float, float* %5, i64 %1770
  %1772 = bitcast float* %1771 to <8 x float>*
  %1773 = load <8 x float>, <8 x float>* %1772, align 1, !tbaa !12
  %1774 = add nsw i64 %1661, %1467
  %1775 = getelementptr inbounds float, float* %3, i64 %1774
  %1776 = bitcast float* %1775 to <8 x float>*
  %1777 = load <8 x float>, <8 x float>* %1776, align 1, !tbaa !12
  %1778 = add nsw i64 %1774, 8
  %1779 = getelementptr inbounds float, float* %3, i64 %1778
  %1780 = bitcast float* %1779 to <8 x float>*
  %1781 = load <8 x float>, <8 x float>* %1780, align 1, !tbaa !12
  %1782 = add nsw i64 %1774, 16
  %1783 = getelementptr inbounds float, float* %3, i64 %1782
  %1784 = bitcast float* %1783 to <8 x float>*
  %1785 = load <8 x float>, <8 x float>* %1784, align 1, !tbaa !12
  %1786 = add nsw i64 %1774, 24
  %1787 = getelementptr inbounds float, float* %3, i64 %1786
  %1788 = bitcast float* %1787 to <8 x float>*
  %1789 = load <8 x float>, <8 x float>* %1788, align 1, !tbaa !12
  %1790 = add nsw i64 %1774, 32
  %1791 = getelementptr inbounds float, float* %3, i64 %1790
  %1792 = bitcast float* %1791 to <8 x float>*
  %1793 = load <8 x float>, <8 x float>* %1792, align 1, !tbaa !12
  %1794 = add nsw i64 %1774, 40
  %1795 = getelementptr inbounds float, float* %3, i64 %1794
  %1796 = bitcast float* %1795 to <8 x float>*
  %1797 = load <8 x float>, <8 x float>* %1796, align 1, !tbaa !12
  %1798 = add nsw i64 %1774, 48
  %1799 = getelementptr inbounds float, float* %3, i64 %1798
  %1800 = bitcast float* %1799 to <8 x float>*
  %1801 = load <8 x float>, <8 x float>* %1800, align 1, !tbaa !12
  %1802 = add nsw i64 %1774, 56
  %1803 = getelementptr inbounds float, float* %3, i64 %1802
  %1804 = bitcast float* %1803 to <8 x float>*
  %1805 = load <8 x float>, <8 x float>* %1804, align 1, !tbaa !12
  %1806 = add nsw i64 %1774, 64
  %1807 = getelementptr inbounds float, float* %3, i64 %1806
  %1808 = bitcast float* %1807 to <8 x float>*
  %1809 = load <8 x float>, <8 x float>* %1808, align 1, !tbaa !12
  %1810 = add nsw i64 %1774, 72
  %1811 = getelementptr inbounds float, float* %3, i64 %1810
  %1812 = bitcast float* %1811 to <8 x float>*
  %1813 = load <8 x float>, <8 x float>* %1812, align 1, !tbaa !12
  %1814 = add nsw i64 %1774, 80
  %1815 = getelementptr inbounds float, float* %3, i64 %1814
  %1816 = bitcast float* %1815 to <8 x float>*
  %1817 = load <8 x float>, <8 x float>* %1816, align 1, !tbaa !12
  %1818 = add nsw i64 %1774, 88
  %1819 = getelementptr inbounds float, float* %3, i64 %1818
  %1820 = bitcast float* %1819 to <8 x float>*
  %1821 = load <8 x float>, <8 x float>* %1820, align 1, !tbaa !12
  %1822 = add nsw i64 %1774, 96
  %1823 = getelementptr inbounds float, float* %3, i64 %1822
  %1824 = bitcast float* %1823 to <8 x float>*
  %1825 = load <8 x float>, <8 x float>* %1824, align 1, !tbaa !12
  %1826 = add nsw i64 %1774, 104
  %1827 = getelementptr inbounds float, float* %3, i64 %1826
  %1828 = bitcast float* %1827 to <8 x float>*
  %1829 = load <8 x float>, <8 x float>* %1828, align 1, !tbaa !12
  %1830 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1777, <8 x float> %65, <8 x float> %1721) #10
  %1831 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1781, <8 x float> %65, <8 x float> %1725) #10
  %1832 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1785, <8 x float> %65, <8 x float> %1729) #10
  %1833 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1789, <8 x float> %65, <8 x float> %1733) #10
  %1834 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1793, <8 x float> %65, <8 x float> %1737) #10
  %1835 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1797, <8 x float> %65, <8 x float> %1741) #10
  %1836 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1801, <8 x float> %65, <8 x float> %1745) #10
  %1837 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1805, <8 x float> %65, <8 x float> %1749) #10
  %1838 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1809, <8 x float> %65, <8 x float> %1753) #10
  %1839 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1813, <8 x float> %65, <8 x float> %1757) #10
  %1840 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1817, <8 x float> %65, <8 x float> %1761) #10
  %1841 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1821, <8 x float> %65, <8 x float> %1765) #10
  %1842 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1825, <8 x float> %65, <8 x float> %1769) #10
  %1843 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1829, <8 x float> %65, <8 x float> %1773) #10
  store <8 x float> %1830, <8 x float>* %1720, align 1, !tbaa !12
  store <8 x float> %1831, <8 x float>* %1724, align 1, !tbaa !12
  store <8 x float> %1832, <8 x float>* %1728, align 1, !tbaa !12
  store <8 x float> %1833, <8 x float>* %1732, align 1, !tbaa !12
  store <8 x float> %1834, <8 x float>* %1736, align 1, !tbaa !12
  store <8 x float> %1835, <8 x float>* %1740, align 1, !tbaa !12
  store <8 x float> %1836, <8 x float>* %1744, align 1, !tbaa !12
  store <8 x float> %1837, <8 x float>* %1748, align 1, !tbaa !12
  store <8 x float> %1838, <8 x float>* %1752, align 1, !tbaa !12
  store <8 x float> %1839, <8 x float>* %1756, align 1, !tbaa !12
  store <8 x float> %1840, <8 x float>* %1760, align 1, !tbaa !12
  store <8 x float> %1841, <8 x float>* %1764, align 1, !tbaa !12
  store <8 x float> %1842, <8 x float>* %1768, align 1, !tbaa !12
  store <8 x float> %1843, <8 x float>* %1772, align 1, !tbaa !12
  %1844 = add nuw nsw i64 %1661, 112
  %1845 = icmp ult i64 %1844, %1468
  br i1 %1845, label %1660, label %1655
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 261
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui14_uk9.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
