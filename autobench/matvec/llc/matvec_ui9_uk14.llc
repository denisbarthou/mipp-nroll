; ModuleID = 'codes/matvec_ui9_uk14.cpp'
source_filename = "codes/matvec_ui9_uk14.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui9_uk14.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 72
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 112
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1791, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1791
  %21 = phi i64 [ %1792, %1791 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = add nuw nsw i64 %21, 13
  %87 = getelementptr inbounds float, float* %4, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !18
  %89 = insertelement <8 x float> undef, float %88, i32 0
  %90 = shufflevector <8 x float> %89, <8 x float> undef, <8 x i32> zeroinitializer
  %91 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %1791

93:                                               ; preds = %20
  %94 = zext i32 %91 to i64
  %95 = trunc i64 %21 to i32
  %96 = mul nsw i32 %91, %95
  br label %103

97:                                               ; preds = %103
  br i1 %92, label %98, label %488

98:                                               ; preds = %97
  %99 = trunc i64 %26 to i32
  %100 = mul nsw i32 %91, %99
  %101 = sext i32 %100 to i64
  %102 = zext i32 %91 to i64
  br label %240

103:                                              ; preds = %93, %103
  %104 = phi i64 [ 0, %93 ], [ %232, %103 ]
  %105 = getelementptr inbounds float, float* %5, i64 %104
  %106 = getelementptr inbounds float, float* %105, i64 8
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %3, i64 %104
  %109 = getelementptr inbounds float, float* %108, i64 8
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %105, i64 16
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %108, i64 16
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %105, i64 24
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %108, i64 24
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %105, i64 32
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %108, i64 32
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %105, i64 40
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %108, i64 40
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %105, i64 48
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %108, i64 48
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %105, i64 56
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %108, i64 56
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %105, i64 64
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = getelementptr inbounds float, float* %108, i64 64
  %138 = bitcast float* %137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %138, i32 0, i32 1, i32 1)
  %139 = getelementptr inbounds float, float* %105, i64 72
  %140 = bitcast float* %139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %140, i32 0, i32 1, i32 1)
  %141 = getelementptr inbounds float, float* %108, i64 72
  %142 = bitcast float* %141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %142, i32 0, i32 1, i32 1)
  %143 = bitcast float* %105 to <8 x float>*
  %144 = load <8 x float>, <8 x float>* %143, align 1, !tbaa !12
  %145 = add nuw nsw i64 %104, 8
  %146 = getelementptr inbounds float, float* %5, i64 %145
  %147 = bitcast float* %146 to <8 x float>*
  %148 = load <8 x float>, <8 x float>* %147, align 1, !tbaa !12
  %149 = add nuw nsw i64 %104, 16
  %150 = getelementptr inbounds float, float* %5, i64 %149
  %151 = bitcast float* %150 to <8 x float>*
  %152 = load <8 x float>, <8 x float>* %151, align 1, !tbaa !12
  %153 = add nuw nsw i64 %104, 24
  %154 = getelementptr inbounds float, float* %5, i64 %153
  %155 = bitcast float* %154 to <8 x float>*
  %156 = load <8 x float>, <8 x float>* %155, align 1, !tbaa !12
  %157 = add nuw nsw i64 %104, 32
  %158 = getelementptr inbounds float, float* %5, i64 %157
  %159 = bitcast float* %158 to <8 x float>*
  %160 = load <8 x float>, <8 x float>* %159, align 1, !tbaa !12
  %161 = add nuw nsw i64 %104, 40
  %162 = getelementptr inbounds float, float* %5, i64 %161
  %163 = bitcast float* %162 to <8 x float>*
  %164 = load <8 x float>, <8 x float>* %163, align 1, !tbaa !12
  %165 = add nuw nsw i64 %104, 48
  %166 = getelementptr inbounds float, float* %5, i64 %165
  %167 = bitcast float* %166 to <8 x float>*
  %168 = load <8 x float>, <8 x float>* %167, align 1, !tbaa !12
  %169 = add nuw nsw i64 %104, 56
  %170 = getelementptr inbounds float, float* %5, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nuw nsw i64 %104, 64
  %174 = getelementptr inbounds float, float* %5, i64 %173
  %175 = bitcast float* %174 to <8 x float>*
  %176 = load <8 x float>, <8 x float>* %175, align 1, !tbaa !12
  %177 = trunc i64 %104 to i32
  %178 = add nsw i32 %96, %177
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds float, float* %3, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = add nsw i32 %178, 8
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds float, float* %3, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = add nsw i32 %178, 16
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %3, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nsw i32 %178, 24
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %3, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = add nsw i32 %178, 32
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %3, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nsw i32 %178, 40
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = add nsw i32 %178, 48
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nsw i32 %178, 56
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %3, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %217 = load <8 x float>, <8 x float>* %216, align 1, !tbaa !12
  %218 = add nsw i32 %178, 64
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %3, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %222 = load <8 x float>, <8 x float>* %221, align 1, !tbaa !12
  %223 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %182, <8 x float> %25, <8 x float> %144) #10
  %224 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %187, <8 x float> %25, <8 x float> %148) #10
  %225 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %192, <8 x float> %25, <8 x float> %152) #10
  %226 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %197, <8 x float> %25, <8 x float> %156) #10
  %227 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %202, <8 x float> %25, <8 x float> %160) #10
  %228 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %164) #10
  %229 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %168) #10
  %230 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %217, <8 x float> %25, <8 x float> %172) #10
  %231 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %222, <8 x float> %25, <8 x float> %176) #10
  store <8 x float> %223, <8 x float>* %143, align 1, !tbaa !12
  store <8 x float> %224, <8 x float>* %147, align 1, !tbaa !12
  store <8 x float> %225, <8 x float>* %151, align 1, !tbaa !12
  store <8 x float> %226, <8 x float>* %155, align 1, !tbaa !12
  store <8 x float> %227, <8 x float>* %159, align 1, !tbaa !12
  store <8 x float> %228, <8 x float>* %163, align 1, !tbaa !12
  store <8 x float> %229, <8 x float>* %167, align 1, !tbaa !12
  store <8 x float> %230, <8 x float>* %171, align 1, !tbaa !12
  store <8 x float> %231, <8 x float>* %175, align 1, !tbaa !12
  %232 = add nuw nsw i64 %104, 72
  %233 = icmp ult i64 %232, %94
  br i1 %233, label %103, label %97

234:                                              ; preds = %240
  br i1 %92, label %235, label %488

235:                                              ; preds = %234
  %236 = trunc i64 %31 to i32
  %237 = mul nsw i32 %91, %236
  %238 = sext i32 %237 to i64
  %239 = zext i32 %91 to i64
  br label %367

240:                                              ; preds = %98, %240
  %241 = phi i64 [ 0, %98 ], [ %359, %240 ]
  %242 = getelementptr inbounds float, float* %5, i64 %241
  %243 = getelementptr inbounds float, float* %242, i64 8
  %244 = bitcast float* %243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %244, i32 0, i32 1, i32 1)
  %245 = getelementptr inbounds float, float* %3, i64 %241
  %246 = getelementptr inbounds float, float* %245, i64 8
  %247 = bitcast float* %246 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %247, i32 0, i32 1, i32 1)
  %248 = getelementptr inbounds float, float* %242, i64 16
  %249 = bitcast float* %248 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %249, i32 0, i32 1, i32 1)
  %250 = getelementptr inbounds float, float* %245, i64 16
  %251 = bitcast float* %250 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %251, i32 0, i32 1, i32 1)
  %252 = getelementptr inbounds float, float* %242, i64 24
  %253 = bitcast float* %252 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %253, i32 0, i32 1, i32 1)
  %254 = getelementptr inbounds float, float* %245, i64 24
  %255 = bitcast float* %254 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %255, i32 0, i32 1, i32 1)
  %256 = getelementptr inbounds float, float* %242, i64 32
  %257 = bitcast float* %256 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %257, i32 0, i32 1, i32 1)
  %258 = getelementptr inbounds float, float* %245, i64 32
  %259 = bitcast float* %258 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %259, i32 0, i32 1, i32 1)
  %260 = getelementptr inbounds float, float* %242, i64 40
  %261 = bitcast float* %260 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %261, i32 0, i32 1, i32 1)
  %262 = getelementptr inbounds float, float* %245, i64 40
  %263 = bitcast float* %262 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %263, i32 0, i32 1, i32 1)
  %264 = getelementptr inbounds float, float* %242, i64 48
  %265 = bitcast float* %264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %265, i32 0, i32 1, i32 1)
  %266 = getelementptr inbounds float, float* %245, i64 48
  %267 = bitcast float* %266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %267, i32 0, i32 1, i32 1)
  %268 = getelementptr inbounds float, float* %242, i64 56
  %269 = bitcast float* %268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %269, i32 0, i32 1, i32 1)
  %270 = getelementptr inbounds float, float* %245, i64 56
  %271 = bitcast float* %270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %271, i32 0, i32 1, i32 1)
  %272 = getelementptr inbounds float, float* %242, i64 64
  %273 = bitcast float* %272 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %273, i32 0, i32 1, i32 1)
  %274 = getelementptr inbounds float, float* %245, i64 64
  %275 = bitcast float* %274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %275, i32 0, i32 1, i32 1)
  %276 = getelementptr inbounds float, float* %242, i64 72
  %277 = bitcast float* %276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %277, i32 0, i32 1, i32 1)
  %278 = getelementptr inbounds float, float* %245, i64 72
  %279 = bitcast float* %278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %279, i32 0, i32 1, i32 1)
  %280 = bitcast float* %242 to <8 x float>*
  %281 = load <8 x float>, <8 x float>* %280, align 1, !tbaa !12
  %282 = add nuw nsw i64 %241, 8
  %283 = getelementptr inbounds float, float* %5, i64 %282
  %284 = bitcast float* %283 to <8 x float>*
  %285 = load <8 x float>, <8 x float>* %284, align 1, !tbaa !12
  %286 = add nuw nsw i64 %241, 16
  %287 = getelementptr inbounds float, float* %5, i64 %286
  %288 = bitcast float* %287 to <8 x float>*
  %289 = load <8 x float>, <8 x float>* %288, align 1, !tbaa !12
  %290 = add nuw nsw i64 %241, 24
  %291 = getelementptr inbounds float, float* %5, i64 %290
  %292 = bitcast float* %291 to <8 x float>*
  %293 = load <8 x float>, <8 x float>* %292, align 1, !tbaa !12
  %294 = add nuw nsw i64 %241, 32
  %295 = getelementptr inbounds float, float* %5, i64 %294
  %296 = bitcast float* %295 to <8 x float>*
  %297 = load <8 x float>, <8 x float>* %296, align 1, !tbaa !12
  %298 = add nuw nsw i64 %241, 40
  %299 = getelementptr inbounds float, float* %5, i64 %298
  %300 = bitcast float* %299 to <8 x float>*
  %301 = load <8 x float>, <8 x float>* %300, align 1, !tbaa !12
  %302 = add nuw nsw i64 %241, 48
  %303 = getelementptr inbounds float, float* %5, i64 %302
  %304 = bitcast float* %303 to <8 x float>*
  %305 = load <8 x float>, <8 x float>* %304, align 1, !tbaa !12
  %306 = add nuw nsw i64 %241, 56
  %307 = getelementptr inbounds float, float* %5, i64 %306
  %308 = bitcast float* %307 to <8 x float>*
  %309 = load <8 x float>, <8 x float>* %308, align 1, !tbaa !12
  %310 = add nuw nsw i64 %241, 64
  %311 = getelementptr inbounds float, float* %5, i64 %310
  %312 = bitcast float* %311 to <8 x float>*
  %313 = load <8 x float>, <8 x float>* %312, align 1, !tbaa !12
  %314 = add nsw i64 %241, %101
  %315 = getelementptr inbounds float, float* %3, i64 %314
  %316 = bitcast float* %315 to <8 x float>*
  %317 = load <8 x float>, <8 x float>* %316, align 1, !tbaa !12
  %318 = add nsw i64 %314, 8
  %319 = getelementptr inbounds float, float* %3, i64 %318
  %320 = bitcast float* %319 to <8 x float>*
  %321 = load <8 x float>, <8 x float>* %320, align 1, !tbaa !12
  %322 = add nsw i64 %314, 16
  %323 = getelementptr inbounds float, float* %3, i64 %322
  %324 = bitcast float* %323 to <8 x float>*
  %325 = load <8 x float>, <8 x float>* %324, align 1, !tbaa !12
  %326 = add nsw i64 %314, 24
  %327 = getelementptr inbounds float, float* %3, i64 %326
  %328 = bitcast float* %327 to <8 x float>*
  %329 = load <8 x float>, <8 x float>* %328, align 1, !tbaa !12
  %330 = add nsw i64 %314, 32
  %331 = getelementptr inbounds float, float* %3, i64 %330
  %332 = bitcast float* %331 to <8 x float>*
  %333 = load <8 x float>, <8 x float>* %332, align 1, !tbaa !12
  %334 = add nsw i64 %314, 40
  %335 = getelementptr inbounds float, float* %3, i64 %334
  %336 = bitcast float* %335 to <8 x float>*
  %337 = load <8 x float>, <8 x float>* %336, align 1, !tbaa !12
  %338 = add nsw i64 %314, 48
  %339 = getelementptr inbounds float, float* %3, i64 %338
  %340 = bitcast float* %339 to <8 x float>*
  %341 = load <8 x float>, <8 x float>* %340, align 1, !tbaa !12
  %342 = add nsw i64 %314, 56
  %343 = getelementptr inbounds float, float* %3, i64 %342
  %344 = bitcast float* %343 to <8 x float>*
  %345 = load <8 x float>, <8 x float>* %344, align 1, !tbaa !12
  %346 = add nsw i64 %314, 64
  %347 = getelementptr inbounds float, float* %3, i64 %346
  %348 = bitcast float* %347 to <8 x float>*
  %349 = load <8 x float>, <8 x float>* %348, align 1, !tbaa !12
  %350 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %317, <8 x float> %30, <8 x float> %281) #10
  %351 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %321, <8 x float> %30, <8 x float> %285) #10
  %352 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %325, <8 x float> %30, <8 x float> %289) #10
  %353 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %329, <8 x float> %30, <8 x float> %293) #10
  %354 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %333, <8 x float> %30, <8 x float> %297) #10
  %355 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %337, <8 x float> %30, <8 x float> %301) #10
  %356 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %341, <8 x float> %30, <8 x float> %305) #10
  %357 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %345, <8 x float> %30, <8 x float> %309) #10
  %358 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %349, <8 x float> %30, <8 x float> %313) #10
  store <8 x float> %350, <8 x float>* %280, align 1, !tbaa !12
  store <8 x float> %351, <8 x float>* %284, align 1, !tbaa !12
  store <8 x float> %352, <8 x float>* %288, align 1, !tbaa !12
  store <8 x float> %353, <8 x float>* %292, align 1, !tbaa !12
  store <8 x float> %354, <8 x float>* %296, align 1, !tbaa !12
  store <8 x float> %355, <8 x float>* %300, align 1, !tbaa !12
  store <8 x float> %356, <8 x float>* %304, align 1, !tbaa !12
  store <8 x float> %357, <8 x float>* %308, align 1, !tbaa !12
  store <8 x float> %358, <8 x float>* %312, align 1, !tbaa !12
  %359 = add nuw nsw i64 %241, 72
  %360 = icmp ult i64 %359, %102
  br i1 %360, label %240, label %234

361:                                              ; preds = %367
  br i1 %92, label %362, label %488

362:                                              ; preds = %361
  %363 = trunc i64 %36 to i32
  %364 = mul nsw i32 %91, %363
  %365 = sext i32 %364 to i64
  %366 = zext i32 %91 to i64
  br label %495

367:                                              ; preds = %235, %367
  %368 = phi i64 [ 0, %235 ], [ %486, %367 ]
  %369 = getelementptr inbounds float, float* %5, i64 %368
  %370 = getelementptr inbounds float, float* %369, i64 8
  %371 = bitcast float* %370 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %371, i32 0, i32 1, i32 1)
  %372 = getelementptr inbounds float, float* %3, i64 %368
  %373 = getelementptr inbounds float, float* %372, i64 8
  %374 = bitcast float* %373 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %374, i32 0, i32 1, i32 1)
  %375 = getelementptr inbounds float, float* %369, i64 16
  %376 = bitcast float* %375 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %376, i32 0, i32 1, i32 1)
  %377 = getelementptr inbounds float, float* %372, i64 16
  %378 = bitcast float* %377 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %378, i32 0, i32 1, i32 1)
  %379 = getelementptr inbounds float, float* %369, i64 24
  %380 = bitcast float* %379 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %380, i32 0, i32 1, i32 1)
  %381 = getelementptr inbounds float, float* %372, i64 24
  %382 = bitcast float* %381 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %382, i32 0, i32 1, i32 1)
  %383 = getelementptr inbounds float, float* %369, i64 32
  %384 = bitcast float* %383 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %384, i32 0, i32 1, i32 1)
  %385 = getelementptr inbounds float, float* %372, i64 32
  %386 = bitcast float* %385 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %386, i32 0, i32 1, i32 1)
  %387 = getelementptr inbounds float, float* %369, i64 40
  %388 = bitcast float* %387 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %388, i32 0, i32 1, i32 1)
  %389 = getelementptr inbounds float, float* %372, i64 40
  %390 = bitcast float* %389 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %390, i32 0, i32 1, i32 1)
  %391 = getelementptr inbounds float, float* %369, i64 48
  %392 = bitcast float* %391 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %392, i32 0, i32 1, i32 1)
  %393 = getelementptr inbounds float, float* %372, i64 48
  %394 = bitcast float* %393 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %394, i32 0, i32 1, i32 1)
  %395 = getelementptr inbounds float, float* %369, i64 56
  %396 = bitcast float* %395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %396, i32 0, i32 1, i32 1)
  %397 = getelementptr inbounds float, float* %372, i64 56
  %398 = bitcast float* %397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %398, i32 0, i32 1, i32 1)
  %399 = getelementptr inbounds float, float* %369, i64 64
  %400 = bitcast float* %399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %400, i32 0, i32 1, i32 1)
  %401 = getelementptr inbounds float, float* %372, i64 64
  %402 = bitcast float* %401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %402, i32 0, i32 1, i32 1)
  %403 = getelementptr inbounds float, float* %369, i64 72
  %404 = bitcast float* %403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %404, i32 0, i32 1, i32 1)
  %405 = getelementptr inbounds float, float* %372, i64 72
  %406 = bitcast float* %405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %406, i32 0, i32 1, i32 1)
  %407 = bitcast float* %369 to <8 x float>*
  %408 = load <8 x float>, <8 x float>* %407, align 1, !tbaa !12
  %409 = add nuw nsw i64 %368, 8
  %410 = getelementptr inbounds float, float* %5, i64 %409
  %411 = bitcast float* %410 to <8 x float>*
  %412 = load <8 x float>, <8 x float>* %411, align 1, !tbaa !12
  %413 = add nuw nsw i64 %368, 16
  %414 = getelementptr inbounds float, float* %5, i64 %413
  %415 = bitcast float* %414 to <8 x float>*
  %416 = load <8 x float>, <8 x float>* %415, align 1, !tbaa !12
  %417 = add nuw nsw i64 %368, 24
  %418 = getelementptr inbounds float, float* %5, i64 %417
  %419 = bitcast float* %418 to <8 x float>*
  %420 = load <8 x float>, <8 x float>* %419, align 1, !tbaa !12
  %421 = add nuw nsw i64 %368, 32
  %422 = getelementptr inbounds float, float* %5, i64 %421
  %423 = bitcast float* %422 to <8 x float>*
  %424 = load <8 x float>, <8 x float>* %423, align 1, !tbaa !12
  %425 = add nuw nsw i64 %368, 40
  %426 = getelementptr inbounds float, float* %5, i64 %425
  %427 = bitcast float* %426 to <8 x float>*
  %428 = load <8 x float>, <8 x float>* %427, align 1, !tbaa !12
  %429 = add nuw nsw i64 %368, 48
  %430 = getelementptr inbounds float, float* %5, i64 %429
  %431 = bitcast float* %430 to <8 x float>*
  %432 = load <8 x float>, <8 x float>* %431, align 1, !tbaa !12
  %433 = add nuw nsw i64 %368, 56
  %434 = getelementptr inbounds float, float* %5, i64 %433
  %435 = bitcast float* %434 to <8 x float>*
  %436 = load <8 x float>, <8 x float>* %435, align 1, !tbaa !12
  %437 = add nuw nsw i64 %368, 64
  %438 = getelementptr inbounds float, float* %5, i64 %437
  %439 = bitcast float* %438 to <8 x float>*
  %440 = load <8 x float>, <8 x float>* %439, align 1, !tbaa !12
  %441 = add nsw i64 %368, %238
  %442 = getelementptr inbounds float, float* %3, i64 %441
  %443 = bitcast float* %442 to <8 x float>*
  %444 = load <8 x float>, <8 x float>* %443, align 1, !tbaa !12
  %445 = add nsw i64 %441, 8
  %446 = getelementptr inbounds float, float* %3, i64 %445
  %447 = bitcast float* %446 to <8 x float>*
  %448 = load <8 x float>, <8 x float>* %447, align 1, !tbaa !12
  %449 = add nsw i64 %441, 16
  %450 = getelementptr inbounds float, float* %3, i64 %449
  %451 = bitcast float* %450 to <8 x float>*
  %452 = load <8 x float>, <8 x float>* %451, align 1, !tbaa !12
  %453 = add nsw i64 %441, 24
  %454 = getelementptr inbounds float, float* %3, i64 %453
  %455 = bitcast float* %454 to <8 x float>*
  %456 = load <8 x float>, <8 x float>* %455, align 1, !tbaa !12
  %457 = add nsw i64 %441, 32
  %458 = getelementptr inbounds float, float* %3, i64 %457
  %459 = bitcast float* %458 to <8 x float>*
  %460 = load <8 x float>, <8 x float>* %459, align 1, !tbaa !12
  %461 = add nsw i64 %441, 40
  %462 = getelementptr inbounds float, float* %3, i64 %461
  %463 = bitcast float* %462 to <8 x float>*
  %464 = load <8 x float>, <8 x float>* %463, align 1, !tbaa !12
  %465 = add nsw i64 %441, 48
  %466 = getelementptr inbounds float, float* %3, i64 %465
  %467 = bitcast float* %466 to <8 x float>*
  %468 = load <8 x float>, <8 x float>* %467, align 1, !tbaa !12
  %469 = add nsw i64 %441, 56
  %470 = getelementptr inbounds float, float* %3, i64 %469
  %471 = bitcast float* %470 to <8 x float>*
  %472 = load <8 x float>, <8 x float>* %471, align 1, !tbaa !12
  %473 = add nsw i64 %441, 64
  %474 = getelementptr inbounds float, float* %3, i64 %473
  %475 = bitcast float* %474 to <8 x float>*
  %476 = load <8 x float>, <8 x float>* %475, align 1, !tbaa !12
  %477 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %444, <8 x float> %35, <8 x float> %408) #10
  %478 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %448, <8 x float> %35, <8 x float> %412) #10
  %479 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %452, <8 x float> %35, <8 x float> %416) #10
  %480 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %456, <8 x float> %35, <8 x float> %420) #10
  %481 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %460, <8 x float> %35, <8 x float> %424) #10
  %482 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %464, <8 x float> %35, <8 x float> %428) #10
  %483 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %468, <8 x float> %35, <8 x float> %432) #10
  %484 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %472, <8 x float> %35, <8 x float> %436) #10
  %485 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %476, <8 x float> %35, <8 x float> %440) #10
  store <8 x float> %477, <8 x float>* %407, align 1, !tbaa !12
  store <8 x float> %478, <8 x float>* %411, align 1, !tbaa !12
  store <8 x float> %479, <8 x float>* %415, align 1, !tbaa !12
  store <8 x float> %480, <8 x float>* %419, align 1, !tbaa !12
  store <8 x float> %481, <8 x float>* %423, align 1, !tbaa !12
  store <8 x float> %482, <8 x float>* %427, align 1, !tbaa !12
  store <8 x float> %483, <8 x float>* %431, align 1, !tbaa !12
  store <8 x float> %484, <8 x float>* %435, align 1, !tbaa !12
  store <8 x float> %485, <8 x float>* %439, align 1, !tbaa !12
  %486 = add nuw nsw i64 %368, 72
  %487 = icmp ult i64 %486, %239
  br i1 %487, label %367, label %361

488:                                              ; preds = %495, %97, %234, %361
  %489 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %490 = icmp sgt i32 %489, 0
  br i1 %490, label %491, label %1791

491:                                              ; preds = %488
  %492 = zext i32 %489 to i64
  %493 = trunc i64 %41 to i32
  %494 = mul nsw i32 %489, %493
  br label %622

495:                                              ; preds = %362, %495
  %496 = phi i64 [ 0, %362 ], [ %614, %495 ]
  %497 = getelementptr inbounds float, float* %5, i64 %496
  %498 = getelementptr inbounds float, float* %497, i64 8
  %499 = bitcast float* %498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %499, i32 0, i32 1, i32 1)
  %500 = getelementptr inbounds float, float* %3, i64 %496
  %501 = getelementptr inbounds float, float* %500, i64 8
  %502 = bitcast float* %501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %502, i32 0, i32 1, i32 1)
  %503 = getelementptr inbounds float, float* %497, i64 16
  %504 = bitcast float* %503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %504, i32 0, i32 1, i32 1)
  %505 = getelementptr inbounds float, float* %500, i64 16
  %506 = bitcast float* %505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %506, i32 0, i32 1, i32 1)
  %507 = getelementptr inbounds float, float* %497, i64 24
  %508 = bitcast float* %507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %508, i32 0, i32 1, i32 1)
  %509 = getelementptr inbounds float, float* %500, i64 24
  %510 = bitcast float* %509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %510, i32 0, i32 1, i32 1)
  %511 = getelementptr inbounds float, float* %497, i64 32
  %512 = bitcast float* %511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %512, i32 0, i32 1, i32 1)
  %513 = getelementptr inbounds float, float* %500, i64 32
  %514 = bitcast float* %513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %514, i32 0, i32 1, i32 1)
  %515 = getelementptr inbounds float, float* %497, i64 40
  %516 = bitcast float* %515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %516, i32 0, i32 1, i32 1)
  %517 = getelementptr inbounds float, float* %500, i64 40
  %518 = bitcast float* %517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %518, i32 0, i32 1, i32 1)
  %519 = getelementptr inbounds float, float* %497, i64 48
  %520 = bitcast float* %519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %520, i32 0, i32 1, i32 1)
  %521 = getelementptr inbounds float, float* %500, i64 48
  %522 = bitcast float* %521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %522, i32 0, i32 1, i32 1)
  %523 = getelementptr inbounds float, float* %497, i64 56
  %524 = bitcast float* %523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %524, i32 0, i32 1, i32 1)
  %525 = getelementptr inbounds float, float* %500, i64 56
  %526 = bitcast float* %525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %526, i32 0, i32 1, i32 1)
  %527 = getelementptr inbounds float, float* %497, i64 64
  %528 = bitcast float* %527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %528, i32 0, i32 1, i32 1)
  %529 = getelementptr inbounds float, float* %500, i64 64
  %530 = bitcast float* %529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %530, i32 0, i32 1, i32 1)
  %531 = getelementptr inbounds float, float* %497, i64 72
  %532 = bitcast float* %531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %532, i32 0, i32 1, i32 1)
  %533 = getelementptr inbounds float, float* %500, i64 72
  %534 = bitcast float* %533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %534, i32 0, i32 1, i32 1)
  %535 = bitcast float* %497 to <8 x float>*
  %536 = load <8 x float>, <8 x float>* %535, align 1, !tbaa !12
  %537 = add nuw nsw i64 %496, 8
  %538 = getelementptr inbounds float, float* %5, i64 %537
  %539 = bitcast float* %538 to <8 x float>*
  %540 = load <8 x float>, <8 x float>* %539, align 1, !tbaa !12
  %541 = add nuw nsw i64 %496, 16
  %542 = getelementptr inbounds float, float* %5, i64 %541
  %543 = bitcast float* %542 to <8 x float>*
  %544 = load <8 x float>, <8 x float>* %543, align 1, !tbaa !12
  %545 = add nuw nsw i64 %496, 24
  %546 = getelementptr inbounds float, float* %5, i64 %545
  %547 = bitcast float* %546 to <8 x float>*
  %548 = load <8 x float>, <8 x float>* %547, align 1, !tbaa !12
  %549 = add nuw nsw i64 %496, 32
  %550 = getelementptr inbounds float, float* %5, i64 %549
  %551 = bitcast float* %550 to <8 x float>*
  %552 = load <8 x float>, <8 x float>* %551, align 1, !tbaa !12
  %553 = add nuw nsw i64 %496, 40
  %554 = getelementptr inbounds float, float* %5, i64 %553
  %555 = bitcast float* %554 to <8 x float>*
  %556 = load <8 x float>, <8 x float>* %555, align 1, !tbaa !12
  %557 = add nuw nsw i64 %496, 48
  %558 = getelementptr inbounds float, float* %5, i64 %557
  %559 = bitcast float* %558 to <8 x float>*
  %560 = load <8 x float>, <8 x float>* %559, align 1, !tbaa !12
  %561 = add nuw nsw i64 %496, 56
  %562 = getelementptr inbounds float, float* %5, i64 %561
  %563 = bitcast float* %562 to <8 x float>*
  %564 = load <8 x float>, <8 x float>* %563, align 1, !tbaa !12
  %565 = add nuw nsw i64 %496, 64
  %566 = getelementptr inbounds float, float* %5, i64 %565
  %567 = bitcast float* %566 to <8 x float>*
  %568 = load <8 x float>, <8 x float>* %567, align 1, !tbaa !12
  %569 = add nsw i64 %496, %365
  %570 = getelementptr inbounds float, float* %3, i64 %569
  %571 = bitcast float* %570 to <8 x float>*
  %572 = load <8 x float>, <8 x float>* %571, align 1, !tbaa !12
  %573 = add nsw i64 %569, 8
  %574 = getelementptr inbounds float, float* %3, i64 %573
  %575 = bitcast float* %574 to <8 x float>*
  %576 = load <8 x float>, <8 x float>* %575, align 1, !tbaa !12
  %577 = add nsw i64 %569, 16
  %578 = getelementptr inbounds float, float* %3, i64 %577
  %579 = bitcast float* %578 to <8 x float>*
  %580 = load <8 x float>, <8 x float>* %579, align 1, !tbaa !12
  %581 = add nsw i64 %569, 24
  %582 = getelementptr inbounds float, float* %3, i64 %581
  %583 = bitcast float* %582 to <8 x float>*
  %584 = load <8 x float>, <8 x float>* %583, align 1, !tbaa !12
  %585 = add nsw i64 %569, 32
  %586 = getelementptr inbounds float, float* %3, i64 %585
  %587 = bitcast float* %586 to <8 x float>*
  %588 = load <8 x float>, <8 x float>* %587, align 1, !tbaa !12
  %589 = add nsw i64 %569, 40
  %590 = getelementptr inbounds float, float* %3, i64 %589
  %591 = bitcast float* %590 to <8 x float>*
  %592 = load <8 x float>, <8 x float>* %591, align 1, !tbaa !12
  %593 = add nsw i64 %569, 48
  %594 = getelementptr inbounds float, float* %3, i64 %593
  %595 = bitcast float* %594 to <8 x float>*
  %596 = load <8 x float>, <8 x float>* %595, align 1, !tbaa !12
  %597 = add nsw i64 %569, 56
  %598 = getelementptr inbounds float, float* %3, i64 %597
  %599 = bitcast float* %598 to <8 x float>*
  %600 = load <8 x float>, <8 x float>* %599, align 1, !tbaa !12
  %601 = add nsw i64 %569, 64
  %602 = getelementptr inbounds float, float* %3, i64 %601
  %603 = bitcast float* %602 to <8 x float>*
  %604 = load <8 x float>, <8 x float>* %603, align 1, !tbaa !12
  %605 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %572, <8 x float> %40, <8 x float> %536) #10
  %606 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %576, <8 x float> %40, <8 x float> %540) #10
  %607 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %580, <8 x float> %40, <8 x float> %544) #10
  %608 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %584, <8 x float> %40, <8 x float> %548) #10
  %609 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %588, <8 x float> %40, <8 x float> %552) #10
  %610 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %592, <8 x float> %40, <8 x float> %556) #10
  %611 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %596, <8 x float> %40, <8 x float> %560) #10
  %612 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %600, <8 x float> %40, <8 x float> %564) #10
  %613 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %604, <8 x float> %40, <8 x float> %568) #10
  store <8 x float> %605, <8 x float>* %535, align 1, !tbaa !12
  store <8 x float> %606, <8 x float>* %539, align 1, !tbaa !12
  store <8 x float> %607, <8 x float>* %543, align 1, !tbaa !12
  store <8 x float> %608, <8 x float>* %547, align 1, !tbaa !12
  store <8 x float> %609, <8 x float>* %551, align 1, !tbaa !12
  store <8 x float> %610, <8 x float>* %555, align 1, !tbaa !12
  store <8 x float> %611, <8 x float>* %559, align 1, !tbaa !12
  store <8 x float> %612, <8 x float>* %563, align 1, !tbaa !12
  store <8 x float> %613, <8 x float>* %567, align 1, !tbaa !12
  %614 = add nuw nsw i64 %496, 72
  %615 = icmp ult i64 %614, %366
  br i1 %615, label %495, label %488

616:                                              ; preds = %622
  br i1 %490, label %617, label %1007

617:                                              ; preds = %616
  %618 = trunc i64 %46 to i32
  %619 = mul nsw i32 %489, %618
  %620 = sext i32 %619 to i64
  %621 = zext i32 %489 to i64
  br label %759

622:                                              ; preds = %491, %622
  %623 = phi i64 [ 0, %491 ], [ %751, %622 ]
  %624 = getelementptr inbounds float, float* %5, i64 %623
  %625 = getelementptr inbounds float, float* %624, i64 8
  %626 = bitcast float* %625 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %626, i32 0, i32 1, i32 1)
  %627 = getelementptr inbounds float, float* %3, i64 %623
  %628 = getelementptr inbounds float, float* %627, i64 8
  %629 = bitcast float* %628 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %629, i32 0, i32 1, i32 1)
  %630 = getelementptr inbounds float, float* %624, i64 16
  %631 = bitcast float* %630 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %631, i32 0, i32 1, i32 1)
  %632 = getelementptr inbounds float, float* %627, i64 16
  %633 = bitcast float* %632 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %633, i32 0, i32 1, i32 1)
  %634 = getelementptr inbounds float, float* %624, i64 24
  %635 = bitcast float* %634 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %635, i32 0, i32 1, i32 1)
  %636 = getelementptr inbounds float, float* %627, i64 24
  %637 = bitcast float* %636 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %637, i32 0, i32 1, i32 1)
  %638 = getelementptr inbounds float, float* %624, i64 32
  %639 = bitcast float* %638 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %639, i32 0, i32 1, i32 1)
  %640 = getelementptr inbounds float, float* %627, i64 32
  %641 = bitcast float* %640 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %641, i32 0, i32 1, i32 1)
  %642 = getelementptr inbounds float, float* %624, i64 40
  %643 = bitcast float* %642 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %643, i32 0, i32 1, i32 1)
  %644 = getelementptr inbounds float, float* %627, i64 40
  %645 = bitcast float* %644 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %645, i32 0, i32 1, i32 1)
  %646 = getelementptr inbounds float, float* %624, i64 48
  %647 = bitcast float* %646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %647, i32 0, i32 1, i32 1)
  %648 = getelementptr inbounds float, float* %627, i64 48
  %649 = bitcast float* %648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %649, i32 0, i32 1, i32 1)
  %650 = getelementptr inbounds float, float* %624, i64 56
  %651 = bitcast float* %650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %651, i32 0, i32 1, i32 1)
  %652 = getelementptr inbounds float, float* %627, i64 56
  %653 = bitcast float* %652 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %653, i32 0, i32 1, i32 1)
  %654 = getelementptr inbounds float, float* %624, i64 64
  %655 = bitcast float* %654 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %655, i32 0, i32 1, i32 1)
  %656 = getelementptr inbounds float, float* %627, i64 64
  %657 = bitcast float* %656 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %657, i32 0, i32 1, i32 1)
  %658 = getelementptr inbounds float, float* %624, i64 72
  %659 = bitcast float* %658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %659, i32 0, i32 1, i32 1)
  %660 = getelementptr inbounds float, float* %627, i64 72
  %661 = bitcast float* %660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %661, i32 0, i32 1, i32 1)
  %662 = bitcast float* %624 to <8 x float>*
  %663 = load <8 x float>, <8 x float>* %662, align 1, !tbaa !12
  %664 = add nuw nsw i64 %623, 8
  %665 = getelementptr inbounds float, float* %5, i64 %664
  %666 = bitcast float* %665 to <8 x float>*
  %667 = load <8 x float>, <8 x float>* %666, align 1, !tbaa !12
  %668 = add nuw nsw i64 %623, 16
  %669 = getelementptr inbounds float, float* %5, i64 %668
  %670 = bitcast float* %669 to <8 x float>*
  %671 = load <8 x float>, <8 x float>* %670, align 1, !tbaa !12
  %672 = add nuw nsw i64 %623, 24
  %673 = getelementptr inbounds float, float* %5, i64 %672
  %674 = bitcast float* %673 to <8 x float>*
  %675 = load <8 x float>, <8 x float>* %674, align 1, !tbaa !12
  %676 = add nuw nsw i64 %623, 32
  %677 = getelementptr inbounds float, float* %5, i64 %676
  %678 = bitcast float* %677 to <8 x float>*
  %679 = load <8 x float>, <8 x float>* %678, align 1, !tbaa !12
  %680 = add nuw nsw i64 %623, 40
  %681 = getelementptr inbounds float, float* %5, i64 %680
  %682 = bitcast float* %681 to <8 x float>*
  %683 = load <8 x float>, <8 x float>* %682, align 1, !tbaa !12
  %684 = add nuw nsw i64 %623, 48
  %685 = getelementptr inbounds float, float* %5, i64 %684
  %686 = bitcast float* %685 to <8 x float>*
  %687 = load <8 x float>, <8 x float>* %686, align 1, !tbaa !12
  %688 = add nuw nsw i64 %623, 56
  %689 = getelementptr inbounds float, float* %5, i64 %688
  %690 = bitcast float* %689 to <8 x float>*
  %691 = load <8 x float>, <8 x float>* %690, align 1, !tbaa !12
  %692 = add nuw nsw i64 %623, 64
  %693 = getelementptr inbounds float, float* %5, i64 %692
  %694 = bitcast float* %693 to <8 x float>*
  %695 = load <8 x float>, <8 x float>* %694, align 1, !tbaa !12
  %696 = trunc i64 %623 to i32
  %697 = add nsw i32 %494, %696
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds float, float* %3, i64 %698
  %700 = bitcast float* %699 to <8 x float>*
  %701 = load <8 x float>, <8 x float>* %700, align 1, !tbaa !12
  %702 = add nsw i32 %697, 8
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds float, float* %3, i64 %703
  %705 = bitcast float* %704 to <8 x float>*
  %706 = load <8 x float>, <8 x float>* %705, align 1, !tbaa !12
  %707 = add nsw i32 %697, 16
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds float, float* %3, i64 %708
  %710 = bitcast float* %709 to <8 x float>*
  %711 = load <8 x float>, <8 x float>* %710, align 1, !tbaa !12
  %712 = add nsw i32 %697, 24
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds float, float* %3, i64 %713
  %715 = bitcast float* %714 to <8 x float>*
  %716 = load <8 x float>, <8 x float>* %715, align 1, !tbaa !12
  %717 = add nsw i32 %697, 32
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds float, float* %3, i64 %718
  %720 = bitcast float* %719 to <8 x float>*
  %721 = load <8 x float>, <8 x float>* %720, align 1, !tbaa !12
  %722 = add nsw i32 %697, 40
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds float, float* %3, i64 %723
  %725 = bitcast float* %724 to <8 x float>*
  %726 = load <8 x float>, <8 x float>* %725, align 1, !tbaa !12
  %727 = add nsw i32 %697, 48
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds float, float* %3, i64 %728
  %730 = bitcast float* %729 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = add nsw i32 %697, 56
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds float, float* %3, i64 %733
  %735 = bitcast float* %734 to <8 x float>*
  %736 = load <8 x float>, <8 x float>* %735, align 1, !tbaa !12
  %737 = add nsw i32 %697, 64
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds float, float* %3, i64 %738
  %740 = bitcast float* %739 to <8 x float>*
  %741 = load <8 x float>, <8 x float>* %740, align 1, !tbaa !12
  %742 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %701, <8 x float> %45, <8 x float> %663) #10
  %743 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %706, <8 x float> %45, <8 x float> %667) #10
  %744 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %711, <8 x float> %45, <8 x float> %671) #10
  %745 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %716, <8 x float> %45, <8 x float> %675) #10
  %746 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %721, <8 x float> %45, <8 x float> %679) #10
  %747 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %726, <8 x float> %45, <8 x float> %683) #10
  %748 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %731, <8 x float> %45, <8 x float> %687) #10
  %749 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %736, <8 x float> %45, <8 x float> %691) #10
  %750 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %741, <8 x float> %45, <8 x float> %695) #10
  store <8 x float> %742, <8 x float>* %662, align 1, !tbaa !12
  store <8 x float> %743, <8 x float>* %666, align 1, !tbaa !12
  store <8 x float> %744, <8 x float>* %670, align 1, !tbaa !12
  store <8 x float> %745, <8 x float>* %674, align 1, !tbaa !12
  store <8 x float> %746, <8 x float>* %678, align 1, !tbaa !12
  store <8 x float> %747, <8 x float>* %682, align 1, !tbaa !12
  store <8 x float> %748, <8 x float>* %686, align 1, !tbaa !12
  store <8 x float> %749, <8 x float>* %690, align 1, !tbaa !12
  store <8 x float> %750, <8 x float>* %694, align 1, !tbaa !12
  %751 = add nuw nsw i64 %623, 72
  %752 = icmp ult i64 %751, %492
  br i1 %752, label %622, label %616

753:                                              ; preds = %759
  br i1 %490, label %754, label %1007

754:                                              ; preds = %753
  %755 = trunc i64 %51 to i32
  %756 = mul nsw i32 %489, %755
  %757 = sext i32 %756 to i64
  %758 = zext i32 %489 to i64
  br label %886

759:                                              ; preds = %617, %759
  %760 = phi i64 [ 0, %617 ], [ %878, %759 ]
  %761 = getelementptr inbounds float, float* %5, i64 %760
  %762 = getelementptr inbounds float, float* %761, i64 8
  %763 = bitcast float* %762 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %763, i32 0, i32 1, i32 1)
  %764 = getelementptr inbounds float, float* %3, i64 %760
  %765 = getelementptr inbounds float, float* %764, i64 8
  %766 = bitcast float* %765 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %766, i32 0, i32 1, i32 1)
  %767 = getelementptr inbounds float, float* %761, i64 16
  %768 = bitcast float* %767 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %768, i32 0, i32 1, i32 1)
  %769 = getelementptr inbounds float, float* %764, i64 16
  %770 = bitcast float* %769 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %770, i32 0, i32 1, i32 1)
  %771 = getelementptr inbounds float, float* %761, i64 24
  %772 = bitcast float* %771 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %772, i32 0, i32 1, i32 1)
  %773 = getelementptr inbounds float, float* %764, i64 24
  %774 = bitcast float* %773 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %774, i32 0, i32 1, i32 1)
  %775 = getelementptr inbounds float, float* %761, i64 32
  %776 = bitcast float* %775 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %776, i32 0, i32 1, i32 1)
  %777 = getelementptr inbounds float, float* %764, i64 32
  %778 = bitcast float* %777 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %778, i32 0, i32 1, i32 1)
  %779 = getelementptr inbounds float, float* %761, i64 40
  %780 = bitcast float* %779 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %780, i32 0, i32 1, i32 1)
  %781 = getelementptr inbounds float, float* %764, i64 40
  %782 = bitcast float* %781 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %782, i32 0, i32 1, i32 1)
  %783 = getelementptr inbounds float, float* %761, i64 48
  %784 = bitcast float* %783 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %784, i32 0, i32 1, i32 1)
  %785 = getelementptr inbounds float, float* %764, i64 48
  %786 = bitcast float* %785 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %786, i32 0, i32 1, i32 1)
  %787 = getelementptr inbounds float, float* %761, i64 56
  %788 = bitcast float* %787 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %788, i32 0, i32 1, i32 1)
  %789 = getelementptr inbounds float, float* %764, i64 56
  %790 = bitcast float* %789 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %790, i32 0, i32 1, i32 1)
  %791 = getelementptr inbounds float, float* %761, i64 64
  %792 = bitcast float* %791 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %792, i32 0, i32 1, i32 1)
  %793 = getelementptr inbounds float, float* %764, i64 64
  %794 = bitcast float* %793 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %794, i32 0, i32 1, i32 1)
  %795 = getelementptr inbounds float, float* %761, i64 72
  %796 = bitcast float* %795 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %796, i32 0, i32 1, i32 1)
  %797 = getelementptr inbounds float, float* %764, i64 72
  %798 = bitcast float* %797 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %798, i32 0, i32 1, i32 1)
  %799 = bitcast float* %761 to <8 x float>*
  %800 = load <8 x float>, <8 x float>* %799, align 1, !tbaa !12
  %801 = add nuw nsw i64 %760, 8
  %802 = getelementptr inbounds float, float* %5, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nuw nsw i64 %760, 16
  %806 = getelementptr inbounds float, float* %5, i64 %805
  %807 = bitcast float* %806 to <8 x float>*
  %808 = load <8 x float>, <8 x float>* %807, align 1, !tbaa !12
  %809 = add nuw nsw i64 %760, 24
  %810 = getelementptr inbounds float, float* %5, i64 %809
  %811 = bitcast float* %810 to <8 x float>*
  %812 = load <8 x float>, <8 x float>* %811, align 1, !tbaa !12
  %813 = add nuw nsw i64 %760, 32
  %814 = getelementptr inbounds float, float* %5, i64 %813
  %815 = bitcast float* %814 to <8 x float>*
  %816 = load <8 x float>, <8 x float>* %815, align 1, !tbaa !12
  %817 = add nuw nsw i64 %760, 40
  %818 = getelementptr inbounds float, float* %5, i64 %817
  %819 = bitcast float* %818 to <8 x float>*
  %820 = load <8 x float>, <8 x float>* %819, align 1, !tbaa !12
  %821 = add nuw nsw i64 %760, 48
  %822 = getelementptr inbounds float, float* %5, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %824 = load <8 x float>, <8 x float>* %823, align 1, !tbaa !12
  %825 = add nuw nsw i64 %760, 56
  %826 = getelementptr inbounds float, float* %5, i64 %825
  %827 = bitcast float* %826 to <8 x float>*
  %828 = load <8 x float>, <8 x float>* %827, align 1, !tbaa !12
  %829 = add nuw nsw i64 %760, 64
  %830 = getelementptr inbounds float, float* %5, i64 %829
  %831 = bitcast float* %830 to <8 x float>*
  %832 = load <8 x float>, <8 x float>* %831, align 1, !tbaa !12
  %833 = add nsw i64 %760, %620
  %834 = getelementptr inbounds float, float* %3, i64 %833
  %835 = bitcast float* %834 to <8 x float>*
  %836 = load <8 x float>, <8 x float>* %835, align 1, !tbaa !12
  %837 = add nsw i64 %833, 8
  %838 = getelementptr inbounds float, float* %3, i64 %837
  %839 = bitcast float* %838 to <8 x float>*
  %840 = load <8 x float>, <8 x float>* %839, align 1, !tbaa !12
  %841 = add nsw i64 %833, 16
  %842 = getelementptr inbounds float, float* %3, i64 %841
  %843 = bitcast float* %842 to <8 x float>*
  %844 = load <8 x float>, <8 x float>* %843, align 1, !tbaa !12
  %845 = add nsw i64 %833, 24
  %846 = getelementptr inbounds float, float* %3, i64 %845
  %847 = bitcast float* %846 to <8 x float>*
  %848 = load <8 x float>, <8 x float>* %847, align 1, !tbaa !12
  %849 = add nsw i64 %833, 32
  %850 = getelementptr inbounds float, float* %3, i64 %849
  %851 = bitcast float* %850 to <8 x float>*
  %852 = load <8 x float>, <8 x float>* %851, align 1, !tbaa !12
  %853 = add nsw i64 %833, 40
  %854 = getelementptr inbounds float, float* %3, i64 %853
  %855 = bitcast float* %854 to <8 x float>*
  %856 = load <8 x float>, <8 x float>* %855, align 1, !tbaa !12
  %857 = add nsw i64 %833, 48
  %858 = getelementptr inbounds float, float* %3, i64 %857
  %859 = bitcast float* %858 to <8 x float>*
  %860 = load <8 x float>, <8 x float>* %859, align 1, !tbaa !12
  %861 = add nsw i64 %833, 56
  %862 = getelementptr inbounds float, float* %3, i64 %861
  %863 = bitcast float* %862 to <8 x float>*
  %864 = load <8 x float>, <8 x float>* %863, align 1, !tbaa !12
  %865 = add nsw i64 %833, 64
  %866 = getelementptr inbounds float, float* %3, i64 %865
  %867 = bitcast float* %866 to <8 x float>*
  %868 = load <8 x float>, <8 x float>* %867, align 1, !tbaa !12
  %869 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %836, <8 x float> %50, <8 x float> %800) #10
  %870 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %840, <8 x float> %50, <8 x float> %804) #10
  %871 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %844, <8 x float> %50, <8 x float> %808) #10
  %872 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %848, <8 x float> %50, <8 x float> %812) #10
  %873 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %852, <8 x float> %50, <8 x float> %816) #10
  %874 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %856, <8 x float> %50, <8 x float> %820) #10
  %875 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %860, <8 x float> %50, <8 x float> %824) #10
  %876 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %864, <8 x float> %50, <8 x float> %828) #10
  %877 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %868, <8 x float> %50, <8 x float> %832) #10
  store <8 x float> %869, <8 x float>* %799, align 1, !tbaa !12
  store <8 x float> %870, <8 x float>* %803, align 1, !tbaa !12
  store <8 x float> %871, <8 x float>* %807, align 1, !tbaa !12
  store <8 x float> %872, <8 x float>* %811, align 1, !tbaa !12
  store <8 x float> %873, <8 x float>* %815, align 1, !tbaa !12
  store <8 x float> %874, <8 x float>* %819, align 1, !tbaa !12
  store <8 x float> %875, <8 x float>* %823, align 1, !tbaa !12
  store <8 x float> %876, <8 x float>* %827, align 1, !tbaa !12
  store <8 x float> %877, <8 x float>* %831, align 1, !tbaa !12
  %878 = add nuw nsw i64 %760, 72
  %879 = icmp ult i64 %878, %621
  br i1 %879, label %759, label %753

880:                                              ; preds = %886
  br i1 %490, label %881, label %1007

881:                                              ; preds = %880
  %882 = trunc i64 %56 to i32
  %883 = mul nsw i32 %489, %882
  %884 = sext i32 %883 to i64
  %885 = zext i32 %489 to i64
  br label %1014

886:                                              ; preds = %754, %886
  %887 = phi i64 [ 0, %754 ], [ %1005, %886 ]
  %888 = getelementptr inbounds float, float* %5, i64 %887
  %889 = getelementptr inbounds float, float* %888, i64 8
  %890 = bitcast float* %889 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %890, i32 0, i32 1, i32 1)
  %891 = getelementptr inbounds float, float* %3, i64 %887
  %892 = getelementptr inbounds float, float* %891, i64 8
  %893 = bitcast float* %892 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %893, i32 0, i32 1, i32 1)
  %894 = getelementptr inbounds float, float* %888, i64 16
  %895 = bitcast float* %894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %895, i32 0, i32 1, i32 1)
  %896 = getelementptr inbounds float, float* %891, i64 16
  %897 = bitcast float* %896 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %897, i32 0, i32 1, i32 1)
  %898 = getelementptr inbounds float, float* %888, i64 24
  %899 = bitcast float* %898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %899, i32 0, i32 1, i32 1)
  %900 = getelementptr inbounds float, float* %891, i64 24
  %901 = bitcast float* %900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %901, i32 0, i32 1, i32 1)
  %902 = getelementptr inbounds float, float* %888, i64 32
  %903 = bitcast float* %902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %903, i32 0, i32 1, i32 1)
  %904 = getelementptr inbounds float, float* %891, i64 32
  %905 = bitcast float* %904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %905, i32 0, i32 1, i32 1)
  %906 = getelementptr inbounds float, float* %888, i64 40
  %907 = bitcast float* %906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %907, i32 0, i32 1, i32 1)
  %908 = getelementptr inbounds float, float* %891, i64 40
  %909 = bitcast float* %908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %909, i32 0, i32 1, i32 1)
  %910 = getelementptr inbounds float, float* %888, i64 48
  %911 = bitcast float* %910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %911, i32 0, i32 1, i32 1)
  %912 = getelementptr inbounds float, float* %891, i64 48
  %913 = bitcast float* %912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %913, i32 0, i32 1, i32 1)
  %914 = getelementptr inbounds float, float* %888, i64 56
  %915 = bitcast float* %914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %915, i32 0, i32 1, i32 1)
  %916 = getelementptr inbounds float, float* %891, i64 56
  %917 = bitcast float* %916 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %917, i32 0, i32 1, i32 1)
  %918 = getelementptr inbounds float, float* %888, i64 64
  %919 = bitcast float* %918 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %919, i32 0, i32 1, i32 1)
  %920 = getelementptr inbounds float, float* %891, i64 64
  %921 = bitcast float* %920 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %921, i32 0, i32 1, i32 1)
  %922 = getelementptr inbounds float, float* %888, i64 72
  %923 = bitcast float* %922 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %923, i32 0, i32 1, i32 1)
  %924 = getelementptr inbounds float, float* %891, i64 72
  %925 = bitcast float* %924 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %925, i32 0, i32 1, i32 1)
  %926 = bitcast float* %888 to <8 x float>*
  %927 = load <8 x float>, <8 x float>* %926, align 1, !tbaa !12
  %928 = add nuw nsw i64 %887, 8
  %929 = getelementptr inbounds float, float* %5, i64 %928
  %930 = bitcast float* %929 to <8 x float>*
  %931 = load <8 x float>, <8 x float>* %930, align 1, !tbaa !12
  %932 = add nuw nsw i64 %887, 16
  %933 = getelementptr inbounds float, float* %5, i64 %932
  %934 = bitcast float* %933 to <8 x float>*
  %935 = load <8 x float>, <8 x float>* %934, align 1, !tbaa !12
  %936 = add nuw nsw i64 %887, 24
  %937 = getelementptr inbounds float, float* %5, i64 %936
  %938 = bitcast float* %937 to <8 x float>*
  %939 = load <8 x float>, <8 x float>* %938, align 1, !tbaa !12
  %940 = add nuw nsw i64 %887, 32
  %941 = getelementptr inbounds float, float* %5, i64 %940
  %942 = bitcast float* %941 to <8 x float>*
  %943 = load <8 x float>, <8 x float>* %942, align 1, !tbaa !12
  %944 = add nuw nsw i64 %887, 40
  %945 = getelementptr inbounds float, float* %5, i64 %944
  %946 = bitcast float* %945 to <8 x float>*
  %947 = load <8 x float>, <8 x float>* %946, align 1, !tbaa !12
  %948 = add nuw nsw i64 %887, 48
  %949 = getelementptr inbounds float, float* %5, i64 %948
  %950 = bitcast float* %949 to <8 x float>*
  %951 = load <8 x float>, <8 x float>* %950, align 1, !tbaa !12
  %952 = add nuw nsw i64 %887, 56
  %953 = getelementptr inbounds float, float* %5, i64 %952
  %954 = bitcast float* %953 to <8 x float>*
  %955 = load <8 x float>, <8 x float>* %954, align 1, !tbaa !12
  %956 = add nuw nsw i64 %887, 64
  %957 = getelementptr inbounds float, float* %5, i64 %956
  %958 = bitcast float* %957 to <8 x float>*
  %959 = load <8 x float>, <8 x float>* %958, align 1, !tbaa !12
  %960 = add nsw i64 %887, %757
  %961 = getelementptr inbounds float, float* %3, i64 %960
  %962 = bitcast float* %961 to <8 x float>*
  %963 = load <8 x float>, <8 x float>* %962, align 1, !tbaa !12
  %964 = add nsw i64 %960, 8
  %965 = getelementptr inbounds float, float* %3, i64 %964
  %966 = bitcast float* %965 to <8 x float>*
  %967 = load <8 x float>, <8 x float>* %966, align 1, !tbaa !12
  %968 = add nsw i64 %960, 16
  %969 = getelementptr inbounds float, float* %3, i64 %968
  %970 = bitcast float* %969 to <8 x float>*
  %971 = load <8 x float>, <8 x float>* %970, align 1, !tbaa !12
  %972 = add nsw i64 %960, 24
  %973 = getelementptr inbounds float, float* %3, i64 %972
  %974 = bitcast float* %973 to <8 x float>*
  %975 = load <8 x float>, <8 x float>* %974, align 1, !tbaa !12
  %976 = add nsw i64 %960, 32
  %977 = getelementptr inbounds float, float* %3, i64 %976
  %978 = bitcast float* %977 to <8 x float>*
  %979 = load <8 x float>, <8 x float>* %978, align 1, !tbaa !12
  %980 = add nsw i64 %960, 40
  %981 = getelementptr inbounds float, float* %3, i64 %980
  %982 = bitcast float* %981 to <8 x float>*
  %983 = load <8 x float>, <8 x float>* %982, align 1, !tbaa !12
  %984 = add nsw i64 %960, 48
  %985 = getelementptr inbounds float, float* %3, i64 %984
  %986 = bitcast float* %985 to <8 x float>*
  %987 = load <8 x float>, <8 x float>* %986, align 1, !tbaa !12
  %988 = add nsw i64 %960, 56
  %989 = getelementptr inbounds float, float* %3, i64 %988
  %990 = bitcast float* %989 to <8 x float>*
  %991 = load <8 x float>, <8 x float>* %990, align 1, !tbaa !12
  %992 = add nsw i64 %960, 64
  %993 = getelementptr inbounds float, float* %3, i64 %992
  %994 = bitcast float* %993 to <8 x float>*
  %995 = load <8 x float>, <8 x float>* %994, align 1, !tbaa !12
  %996 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %963, <8 x float> %55, <8 x float> %927) #10
  %997 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %967, <8 x float> %55, <8 x float> %931) #10
  %998 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %971, <8 x float> %55, <8 x float> %935) #10
  %999 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %975, <8 x float> %55, <8 x float> %939) #10
  %1000 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %979, <8 x float> %55, <8 x float> %943) #10
  %1001 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %983, <8 x float> %55, <8 x float> %947) #10
  %1002 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %987, <8 x float> %55, <8 x float> %951) #10
  %1003 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %991, <8 x float> %55, <8 x float> %955) #10
  %1004 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %995, <8 x float> %55, <8 x float> %959) #10
  store <8 x float> %996, <8 x float>* %926, align 1, !tbaa !12
  store <8 x float> %997, <8 x float>* %930, align 1, !tbaa !12
  store <8 x float> %998, <8 x float>* %934, align 1, !tbaa !12
  store <8 x float> %999, <8 x float>* %938, align 1, !tbaa !12
  store <8 x float> %1000, <8 x float>* %942, align 1, !tbaa !12
  store <8 x float> %1001, <8 x float>* %946, align 1, !tbaa !12
  store <8 x float> %1002, <8 x float>* %950, align 1, !tbaa !12
  store <8 x float> %1003, <8 x float>* %954, align 1, !tbaa !12
  store <8 x float> %1004, <8 x float>* %958, align 1, !tbaa !12
  %1005 = add nuw nsw i64 %887, 72
  %1006 = icmp ult i64 %1005, %758
  br i1 %1006, label %886, label %880

1007:                                             ; preds = %1014, %616, %753, %880
  %1008 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1009 = icmp sgt i32 %1008, 0
  br i1 %1009, label %1010, label %1791

1010:                                             ; preds = %1007
  %1011 = zext i32 %1008 to i64
  %1012 = trunc i64 %61 to i32
  %1013 = mul nsw i32 %1008, %1012
  br label %1141

1014:                                             ; preds = %881, %1014
  %1015 = phi i64 [ 0, %881 ], [ %1133, %1014 ]
  %1016 = getelementptr inbounds float, float* %5, i64 %1015
  %1017 = getelementptr inbounds float, float* %1016, i64 8
  %1018 = bitcast float* %1017 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1018, i32 0, i32 1, i32 1)
  %1019 = getelementptr inbounds float, float* %3, i64 %1015
  %1020 = getelementptr inbounds float, float* %1019, i64 8
  %1021 = bitcast float* %1020 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1021, i32 0, i32 1, i32 1)
  %1022 = getelementptr inbounds float, float* %1016, i64 16
  %1023 = bitcast float* %1022 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1023, i32 0, i32 1, i32 1)
  %1024 = getelementptr inbounds float, float* %1019, i64 16
  %1025 = bitcast float* %1024 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1025, i32 0, i32 1, i32 1)
  %1026 = getelementptr inbounds float, float* %1016, i64 24
  %1027 = bitcast float* %1026 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1027, i32 0, i32 1, i32 1)
  %1028 = getelementptr inbounds float, float* %1019, i64 24
  %1029 = bitcast float* %1028 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1029, i32 0, i32 1, i32 1)
  %1030 = getelementptr inbounds float, float* %1016, i64 32
  %1031 = bitcast float* %1030 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1031, i32 0, i32 1, i32 1)
  %1032 = getelementptr inbounds float, float* %1019, i64 32
  %1033 = bitcast float* %1032 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1033, i32 0, i32 1, i32 1)
  %1034 = getelementptr inbounds float, float* %1016, i64 40
  %1035 = bitcast float* %1034 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1035, i32 0, i32 1, i32 1)
  %1036 = getelementptr inbounds float, float* %1019, i64 40
  %1037 = bitcast float* %1036 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1037, i32 0, i32 1, i32 1)
  %1038 = getelementptr inbounds float, float* %1016, i64 48
  %1039 = bitcast float* %1038 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1039, i32 0, i32 1, i32 1)
  %1040 = getelementptr inbounds float, float* %1019, i64 48
  %1041 = bitcast float* %1040 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1041, i32 0, i32 1, i32 1)
  %1042 = getelementptr inbounds float, float* %1016, i64 56
  %1043 = bitcast float* %1042 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1043, i32 0, i32 1, i32 1)
  %1044 = getelementptr inbounds float, float* %1019, i64 56
  %1045 = bitcast float* %1044 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1045, i32 0, i32 1, i32 1)
  %1046 = getelementptr inbounds float, float* %1016, i64 64
  %1047 = bitcast float* %1046 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1047, i32 0, i32 1, i32 1)
  %1048 = getelementptr inbounds float, float* %1019, i64 64
  %1049 = bitcast float* %1048 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1049, i32 0, i32 1, i32 1)
  %1050 = getelementptr inbounds float, float* %1016, i64 72
  %1051 = bitcast float* %1050 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1051, i32 0, i32 1, i32 1)
  %1052 = getelementptr inbounds float, float* %1019, i64 72
  %1053 = bitcast float* %1052 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1053, i32 0, i32 1, i32 1)
  %1054 = bitcast float* %1016 to <8 x float>*
  %1055 = load <8 x float>, <8 x float>* %1054, align 1, !tbaa !12
  %1056 = add nuw nsw i64 %1015, 8
  %1057 = getelementptr inbounds float, float* %5, i64 %1056
  %1058 = bitcast float* %1057 to <8 x float>*
  %1059 = load <8 x float>, <8 x float>* %1058, align 1, !tbaa !12
  %1060 = add nuw nsw i64 %1015, 16
  %1061 = getelementptr inbounds float, float* %5, i64 %1060
  %1062 = bitcast float* %1061 to <8 x float>*
  %1063 = load <8 x float>, <8 x float>* %1062, align 1, !tbaa !12
  %1064 = add nuw nsw i64 %1015, 24
  %1065 = getelementptr inbounds float, float* %5, i64 %1064
  %1066 = bitcast float* %1065 to <8 x float>*
  %1067 = load <8 x float>, <8 x float>* %1066, align 1, !tbaa !12
  %1068 = add nuw nsw i64 %1015, 32
  %1069 = getelementptr inbounds float, float* %5, i64 %1068
  %1070 = bitcast float* %1069 to <8 x float>*
  %1071 = load <8 x float>, <8 x float>* %1070, align 1, !tbaa !12
  %1072 = add nuw nsw i64 %1015, 40
  %1073 = getelementptr inbounds float, float* %5, i64 %1072
  %1074 = bitcast float* %1073 to <8 x float>*
  %1075 = load <8 x float>, <8 x float>* %1074, align 1, !tbaa !12
  %1076 = add nuw nsw i64 %1015, 48
  %1077 = getelementptr inbounds float, float* %5, i64 %1076
  %1078 = bitcast float* %1077 to <8 x float>*
  %1079 = load <8 x float>, <8 x float>* %1078, align 1, !tbaa !12
  %1080 = add nuw nsw i64 %1015, 56
  %1081 = getelementptr inbounds float, float* %5, i64 %1080
  %1082 = bitcast float* %1081 to <8 x float>*
  %1083 = load <8 x float>, <8 x float>* %1082, align 1, !tbaa !12
  %1084 = add nuw nsw i64 %1015, 64
  %1085 = getelementptr inbounds float, float* %5, i64 %1084
  %1086 = bitcast float* %1085 to <8 x float>*
  %1087 = load <8 x float>, <8 x float>* %1086, align 1, !tbaa !12
  %1088 = add nsw i64 %1015, %884
  %1089 = getelementptr inbounds float, float* %3, i64 %1088
  %1090 = bitcast float* %1089 to <8 x float>*
  %1091 = load <8 x float>, <8 x float>* %1090, align 1, !tbaa !12
  %1092 = add nsw i64 %1088, 8
  %1093 = getelementptr inbounds float, float* %3, i64 %1092
  %1094 = bitcast float* %1093 to <8 x float>*
  %1095 = load <8 x float>, <8 x float>* %1094, align 1, !tbaa !12
  %1096 = add nsw i64 %1088, 16
  %1097 = getelementptr inbounds float, float* %3, i64 %1096
  %1098 = bitcast float* %1097 to <8 x float>*
  %1099 = load <8 x float>, <8 x float>* %1098, align 1, !tbaa !12
  %1100 = add nsw i64 %1088, 24
  %1101 = getelementptr inbounds float, float* %3, i64 %1100
  %1102 = bitcast float* %1101 to <8 x float>*
  %1103 = load <8 x float>, <8 x float>* %1102, align 1, !tbaa !12
  %1104 = add nsw i64 %1088, 32
  %1105 = getelementptr inbounds float, float* %3, i64 %1104
  %1106 = bitcast float* %1105 to <8 x float>*
  %1107 = load <8 x float>, <8 x float>* %1106, align 1, !tbaa !12
  %1108 = add nsw i64 %1088, 40
  %1109 = getelementptr inbounds float, float* %3, i64 %1108
  %1110 = bitcast float* %1109 to <8 x float>*
  %1111 = load <8 x float>, <8 x float>* %1110, align 1, !tbaa !12
  %1112 = add nsw i64 %1088, 48
  %1113 = getelementptr inbounds float, float* %3, i64 %1112
  %1114 = bitcast float* %1113 to <8 x float>*
  %1115 = load <8 x float>, <8 x float>* %1114, align 1, !tbaa !12
  %1116 = add nsw i64 %1088, 56
  %1117 = getelementptr inbounds float, float* %3, i64 %1116
  %1118 = bitcast float* %1117 to <8 x float>*
  %1119 = load <8 x float>, <8 x float>* %1118, align 1, !tbaa !12
  %1120 = add nsw i64 %1088, 64
  %1121 = getelementptr inbounds float, float* %3, i64 %1120
  %1122 = bitcast float* %1121 to <8 x float>*
  %1123 = load <8 x float>, <8 x float>* %1122, align 1, !tbaa !12
  %1124 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1091, <8 x float> %60, <8 x float> %1055) #10
  %1125 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1095, <8 x float> %60, <8 x float> %1059) #10
  %1126 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1099, <8 x float> %60, <8 x float> %1063) #10
  %1127 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1103, <8 x float> %60, <8 x float> %1067) #10
  %1128 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1107, <8 x float> %60, <8 x float> %1071) #10
  %1129 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1111, <8 x float> %60, <8 x float> %1075) #10
  %1130 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1115, <8 x float> %60, <8 x float> %1079) #10
  %1131 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1119, <8 x float> %60, <8 x float> %1083) #10
  %1132 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1123, <8 x float> %60, <8 x float> %1087) #10
  store <8 x float> %1124, <8 x float>* %1054, align 1, !tbaa !12
  store <8 x float> %1125, <8 x float>* %1058, align 1, !tbaa !12
  store <8 x float> %1126, <8 x float>* %1062, align 1, !tbaa !12
  store <8 x float> %1127, <8 x float>* %1066, align 1, !tbaa !12
  store <8 x float> %1128, <8 x float>* %1070, align 1, !tbaa !12
  store <8 x float> %1129, <8 x float>* %1074, align 1, !tbaa !12
  store <8 x float> %1130, <8 x float>* %1078, align 1, !tbaa !12
  store <8 x float> %1131, <8 x float>* %1082, align 1, !tbaa !12
  store <8 x float> %1132, <8 x float>* %1086, align 1, !tbaa !12
  %1133 = add nuw nsw i64 %1015, 72
  %1134 = icmp ult i64 %1133, %885
  br i1 %1134, label %1014, label %1007

1135:                                             ; preds = %1141
  br i1 %1009, label %1136, label %1526

1136:                                             ; preds = %1135
  %1137 = trunc i64 %66 to i32
  %1138 = mul nsw i32 %1008, %1137
  %1139 = sext i32 %1138 to i64
  %1140 = zext i32 %1008 to i64
  br label %1278

1141:                                             ; preds = %1010, %1141
  %1142 = phi i64 [ 0, %1010 ], [ %1270, %1141 ]
  %1143 = getelementptr inbounds float, float* %5, i64 %1142
  %1144 = getelementptr inbounds float, float* %1143, i64 8
  %1145 = bitcast float* %1144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1145, i32 0, i32 1, i32 1)
  %1146 = getelementptr inbounds float, float* %3, i64 %1142
  %1147 = getelementptr inbounds float, float* %1146, i64 8
  %1148 = bitcast float* %1147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1148, i32 0, i32 1, i32 1)
  %1149 = getelementptr inbounds float, float* %1143, i64 16
  %1150 = bitcast float* %1149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1150, i32 0, i32 1, i32 1)
  %1151 = getelementptr inbounds float, float* %1146, i64 16
  %1152 = bitcast float* %1151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1152, i32 0, i32 1, i32 1)
  %1153 = getelementptr inbounds float, float* %1143, i64 24
  %1154 = bitcast float* %1153 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1154, i32 0, i32 1, i32 1)
  %1155 = getelementptr inbounds float, float* %1146, i64 24
  %1156 = bitcast float* %1155 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1156, i32 0, i32 1, i32 1)
  %1157 = getelementptr inbounds float, float* %1143, i64 32
  %1158 = bitcast float* %1157 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1158, i32 0, i32 1, i32 1)
  %1159 = getelementptr inbounds float, float* %1146, i64 32
  %1160 = bitcast float* %1159 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1160, i32 0, i32 1, i32 1)
  %1161 = getelementptr inbounds float, float* %1143, i64 40
  %1162 = bitcast float* %1161 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1162, i32 0, i32 1, i32 1)
  %1163 = getelementptr inbounds float, float* %1146, i64 40
  %1164 = bitcast float* %1163 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1164, i32 0, i32 1, i32 1)
  %1165 = getelementptr inbounds float, float* %1143, i64 48
  %1166 = bitcast float* %1165 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1166, i32 0, i32 1, i32 1)
  %1167 = getelementptr inbounds float, float* %1146, i64 48
  %1168 = bitcast float* %1167 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1168, i32 0, i32 1, i32 1)
  %1169 = getelementptr inbounds float, float* %1143, i64 56
  %1170 = bitcast float* %1169 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1170, i32 0, i32 1, i32 1)
  %1171 = getelementptr inbounds float, float* %1146, i64 56
  %1172 = bitcast float* %1171 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1172, i32 0, i32 1, i32 1)
  %1173 = getelementptr inbounds float, float* %1143, i64 64
  %1174 = bitcast float* %1173 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1174, i32 0, i32 1, i32 1)
  %1175 = getelementptr inbounds float, float* %1146, i64 64
  %1176 = bitcast float* %1175 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1176, i32 0, i32 1, i32 1)
  %1177 = getelementptr inbounds float, float* %1143, i64 72
  %1178 = bitcast float* %1177 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1178, i32 0, i32 1, i32 1)
  %1179 = getelementptr inbounds float, float* %1146, i64 72
  %1180 = bitcast float* %1179 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1180, i32 0, i32 1, i32 1)
  %1181 = bitcast float* %1143 to <8 x float>*
  %1182 = load <8 x float>, <8 x float>* %1181, align 1, !tbaa !12
  %1183 = add nuw nsw i64 %1142, 8
  %1184 = getelementptr inbounds float, float* %5, i64 %1183
  %1185 = bitcast float* %1184 to <8 x float>*
  %1186 = load <8 x float>, <8 x float>* %1185, align 1, !tbaa !12
  %1187 = add nuw nsw i64 %1142, 16
  %1188 = getelementptr inbounds float, float* %5, i64 %1187
  %1189 = bitcast float* %1188 to <8 x float>*
  %1190 = load <8 x float>, <8 x float>* %1189, align 1, !tbaa !12
  %1191 = add nuw nsw i64 %1142, 24
  %1192 = getelementptr inbounds float, float* %5, i64 %1191
  %1193 = bitcast float* %1192 to <8 x float>*
  %1194 = load <8 x float>, <8 x float>* %1193, align 1, !tbaa !12
  %1195 = add nuw nsw i64 %1142, 32
  %1196 = getelementptr inbounds float, float* %5, i64 %1195
  %1197 = bitcast float* %1196 to <8 x float>*
  %1198 = load <8 x float>, <8 x float>* %1197, align 1, !tbaa !12
  %1199 = add nuw nsw i64 %1142, 40
  %1200 = getelementptr inbounds float, float* %5, i64 %1199
  %1201 = bitcast float* %1200 to <8 x float>*
  %1202 = load <8 x float>, <8 x float>* %1201, align 1, !tbaa !12
  %1203 = add nuw nsw i64 %1142, 48
  %1204 = getelementptr inbounds float, float* %5, i64 %1203
  %1205 = bitcast float* %1204 to <8 x float>*
  %1206 = load <8 x float>, <8 x float>* %1205, align 1, !tbaa !12
  %1207 = add nuw nsw i64 %1142, 56
  %1208 = getelementptr inbounds float, float* %5, i64 %1207
  %1209 = bitcast float* %1208 to <8 x float>*
  %1210 = load <8 x float>, <8 x float>* %1209, align 1, !tbaa !12
  %1211 = add nuw nsw i64 %1142, 64
  %1212 = getelementptr inbounds float, float* %5, i64 %1211
  %1213 = bitcast float* %1212 to <8 x float>*
  %1214 = load <8 x float>, <8 x float>* %1213, align 1, !tbaa !12
  %1215 = trunc i64 %1142 to i32
  %1216 = add nsw i32 %1013, %1215
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i32 %1216, 8
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i32 %1216, 16
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i32 %1216, 24
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i32 %1216, 32
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i32 %1216, 40
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nsw i32 %1216, 48
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds float, float* %3, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = add nsw i32 %1216, 56
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds float, float* %3, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = add nsw i32 %1216, 64
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds float, float* %3, i64 %1257
  %1259 = bitcast float* %1258 to <8 x float>*
  %1260 = load <8 x float>, <8 x float>* %1259, align 1, !tbaa !12
  %1261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %65, <8 x float> %1182) #10
  %1262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %65, <8 x float> %1186) #10
  %1263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %65, <8 x float> %1190) #10
  %1264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %65, <8 x float> %1194) #10
  %1265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %65, <8 x float> %1198) #10
  %1266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %65, <8 x float> %1202) #10
  %1267 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1250, <8 x float> %65, <8 x float> %1206) #10
  %1268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1255, <8 x float> %65, <8 x float> %1210) #10
  %1269 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1260, <8 x float> %65, <8 x float> %1214) #10
  store <8 x float> %1261, <8 x float>* %1181, align 1, !tbaa !12
  store <8 x float> %1262, <8 x float>* %1185, align 1, !tbaa !12
  store <8 x float> %1263, <8 x float>* %1189, align 1, !tbaa !12
  store <8 x float> %1264, <8 x float>* %1193, align 1, !tbaa !12
  store <8 x float> %1265, <8 x float>* %1197, align 1, !tbaa !12
  store <8 x float> %1266, <8 x float>* %1201, align 1, !tbaa !12
  store <8 x float> %1267, <8 x float>* %1205, align 1, !tbaa !12
  store <8 x float> %1268, <8 x float>* %1209, align 1, !tbaa !12
  store <8 x float> %1269, <8 x float>* %1213, align 1, !tbaa !12
  %1270 = add nuw nsw i64 %1142, 72
  %1271 = icmp ult i64 %1270, %1011
  br i1 %1271, label %1141, label %1135

1272:                                             ; preds = %1278
  br i1 %1009, label %1273, label %1526

1273:                                             ; preds = %1272
  %1274 = trunc i64 %71 to i32
  %1275 = mul nsw i32 %1008, %1274
  %1276 = sext i32 %1275 to i64
  %1277 = zext i32 %1008 to i64
  br label %1405

1278:                                             ; preds = %1136, %1278
  %1279 = phi i64 [ 0, %1136 ], [ %1397, %1278 ]
  %1280 = getelementptr inbounds float, float* %5, i64 %1279
  %1281 = getelementptr inbounds float, float* %1280, i64 8
  %1282 = bitcast float* %1281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1282, i32 0, i32 1, i32 1)
  %1283 = getelementptr inbounds float, float* %3, i64 %1279
  %1284 = getelementptr inbounds float, float* %1283, i64 8
  %1285 = bitcast float* %1284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1285, i32 0, i32 1, i32 1)
  %1286 = getelementptr inbounds float, float* %1280, i64 16
  %1287 = bitcast float* %1286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1287, i32 0, i32 1, i32 1)
  %1288 = getelementptr inbounds float, float* %1283, i64 16
  %1289 = bitcast float* %1288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1289, i32 0, i32 1, i32 1)
  %1290 = getelementptr inbounds float, float* %1280, i64 24
  %1291 = bitcast float* %1290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1291, i32 0, i32 1, i32 1)
  %1292 = getelementptr inbounds float, float* %1283, i64 24
  %1293 = bitcast float* %1292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1293, i32 0, i32 1, i32 1)
  %1294 = getelementptr inbounds float, float* %1280, i64 32
  %1295 = bitcast float* %1294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1295, i32 0, i32 1, i32 1)
  %1296 = getelementptr inbounds float, float* %1283, i64 32
  %1297 = bitcast float* %1296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1297, i32 0, i32 1, i32 1)
  %1298 = getelementptr inbounds float, float* %1280, i64 40
  %1299 = bitcast float* %1298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1299, i32 0, i32 1, i32 1)
  %1300 = getelementptr inbounds float, float* %1283, i64 40
  %1301 = bitcast float* %1300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1301, i32 0, i32 1, i32 1)
  %1302 = getelementptr inbounds float, float* %1280, i64 48
  %1303 = bitcast float* %1302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1303, i32 0, i32 1, i32 1)
  %1304 = getelementptr inbounds float, float* %1283, i64 48
  %1305 = bitcast float* %1304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1305, i32 0, i32 1, i32 1)
  %1306 = getelementptr inbounds float, float* %1280, i64 56
  %1307 = bitcast float* %1306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1307, i32 0, i32 1, i32 1)
  %1308 = getelementptr inbounds float, float* %1283, i64 56
  %1309 = bitcast float* %1308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1309, i32 0, i32 1, i32 1)
  %1310 = getelementptr inbounds float, float* %1280, i64 64
  %1311 = bitcast float* %1310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1311, i32 0, i32 1, i32 1)
  %1312 = getelementptr inbounds float, float* %1283, i64 64
  %1313 = bitcast float* %1312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1313, i32 0, i32 1, i32 1)
  %1314 = getelementptr inbounds float, float* %1280, i64 72
  %1315 = bitcast float* %1314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1315, i32 0, i32 1, i32 1)
  %1316 = getelementptr inbounds float, float* %1283, i64 72
  %1317 = bitcast float* %1316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1317, i32 0, i32 1, i32 1)
  %1318 = bitcast float* %1280 to <8 x float>*
  %1319 = load <8 x float>, <8 x float>* %1318, align 1, !tbaa !12
  %1320 = add nuw nsw i64 %1279, 8
  %1321 = getelementptr inbounds float, float* %5, i64 %1320
  %1322 = bitcast float* %1321 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = add nuw nsw i64 %1279, 16
  %1325 = getelementptr inbounds float, float* %5, i64 %1324
  %1326 = bitcast float* %1325 to <8 x float>*
  %1327 = load <8 x float>, <8 x float>* %1326, align 1, !tbaa !12
  %1328 = add nuw nsw i64 %1279, 24
  %1329 = getelementptr inbounds float, float* %5, i64 %1328
  %1330 = bitcast float* %1329 to <8 x float>*
  %1331 = load <8 x float>, <8 x float>* %1330, align 1, !tbaa !12
  %1332 = add nuw nsw i64 %1279, 32
  %1333 = getelementptr inbounds float, float* %5, i64 %1332
  %1334 = bitcast float* %1333 to <8 x float>*
  %1335 = load <8 x float>, <8 x float>* %1334, align 1, !tbaa !12
  %1336 = add nuw nsw i64 %1279, 40
  %1337 = getelementptr inbounds float, float* %5, i64 %1336
  %1338 = bitcast float* %1337 to <8 x float>*
  %1339 = load <8 x float>, <8 x float>* %1338, align 1, !tbaa !12
  %1340 = add nuw nsw i64 %1279, 48
  %1341 = getelementptr inbounds float, float* %5, i64 %1340
  %1342 = bitcast float* %1341 to <8 x float>*
  %1343 = load <8 x float>, <8 x float>* %1342, align 1, !tbaa !12
  %1344 = add nuw nsw i64 %1279, 56
  %1345 = getelementptr inbounds float, float* %5, i64 %1344
  %1346 = bitcast float* %1345 to <8 x float>*
  %1347 = load <8 x float>, <8 x float>* %1346, align 1, !tbaa !12
  %1348 = add nuw nsw i64 %1279, 64
  %1349 = getelementptr inbounds float, float* %5, i64 %1348
  %1350 = bitcast float* %1349 to <8 x float>*
  %1351 = load <8 x float>, <8 x float>* %1350, align 1, !tbaa !12
  %1352 = add nsw i64 %1279, %1139
  %1353 = getelementptr inbounds float, float* %3, i64 %1352
  %1354 = bitcast float* %1353 to <8 x float>*
  %1355 = load <8 x float>, <8 x float>* %1354, align 1, !tbaa !12
  %1356 = add nsw i64 %1352, 8
  %1357 = getelementptr inbounds float, float* %3, i64 %1356
  %1358 = bitcast float* %1357 to <8 x float>*
  %1359 = load <8 x float>, <8 x float>* %1358, align 1, !tbaa !12
  %1360 = add nsw i64 %1352, 16
  %1361 = getelementptr inbounds float, float* %3, i64 %1360
  %1362 = bitcast float* %1361 to <8 x float>*
  %1363 = load <8 x float>, <8 x float>* %1362, align 1, !tbaa !12
  %1364 = add nsw i64 %1352, 24
  %1365 = getelementptr inbounds float, float* %3, i64 %1364
  %1366 = bitcast float* %1365 to <8 x float>*
  %1367 = load <8 x float>, <8 x float>* %1366, align 1, !tbaa !12
  %1368 = add nsw i64 %1352, 32
  %1369 = getelementptr inbounds float, float* %3, i64 %1368
  %1370 = bitcast float* %1369 to <8 x float>*
  %1371 = load <8 x float>, <8 x float>* %1370, align 1, !tbaa !12
  %1372 = add nsw i64 %1352, 40
  %1373 = getelementptr inbounds float, float* %3, i64 %1372
  %1374 = bitcast float* %1373 to <8 x float>*
  %1375 = load <8 x float>, <8 x float>* %1374, align 1, !tbaa !12
  %1376 = add nsw i64 %1352, 48
  %1377 = getelementptr inbounds float, float* %3, i64 %1376
  %1378 = bitcast float* %1377 to <8 x float>*
  %1379 = load <8 x float>, <8 x float>* %1378, align 1, !tbaa !12
  %1380 = add nsw i64 %1352, 56
  %1381 = getelementptr inbounds float, float* %3, i64 %1380
  %1382 = bitcast float* %1381 to <8 x float>*
  %1383 = load <8 x float>, <8 x float>* %1382, align 1, !tbaa !12
  %1384 = add nsw i64 %1352, 64
  %1385 = getelementptr inbounds float, float* %3, i64 %1384
  %1386 = bitcast float* %1385 to <8 x float>*
  %1387 = load <8 x float>, <8 x float>* %1386, align 1, !tbaa !12
  %1388 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1355, <8 x float> %70, <8 x float> %1319) #10
  %1389 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1359, <8 x float> %70, <8 x float> %1323) #10
  %1390 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1363, <8 x float> %70, <8 x float> %1327) #10
  %1391 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1367, <8 x float> %70, <8 x float> %1331) #10
  %1392 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1371, <8 x float> %70, <8 x float> %1335) #10
  %1393 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1375, <8 x float> %70, <8 x float> %1339) #10
  %1394 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1379, <8 x float> %70, <8 x float> %1343) #10
  %1395 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1383, <8 x float> %70, <8 x float> %1347) #10
  %1396 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1387, <8 x float> %70, <8 x float> %1351) #10
  store <8 x float> %1388, <8 x float>* %1318, align 1, !tbaa !12
  store <8 x float> %1389, <8 x float>* %1322, align 1, !tbaa !12
  store <8 x float> %1390, <8 x float>* %1326, align 1, !tbaa !12
  store <8 x float> %1391, <8 x float>* %1330, align 1, !tbaa !12
  store <8 x float> %1392, <8 x float>* %1334, align 1, !tbaa !12
  store <8 x float> %1393, <8 x float>* %1338, align 1, !tbaa !12
  store <8 x float> %1394, <8 x float>* %1342, align 1, !tbaa !12
  store <8 x float> %1395, <8 x float>* %1346, align 1, !tbaa !12
  store <8 x float> %1396, <8 x float>* %1350, align 1, !tbaa !12
  %1397 = add nuw nsw i64 %1279, 72
  %1398 = icmp ult i64 %1397, %1140
  br i1 %1398, label %1278, label %1272

1399:                                             ; preds = %1405
  br i1 %1009, label %1400, label %1526

1400:                                             ; preds = %1399
  %1401 = trunc i64 %76 to i32
  %1402 = mul nsw i32 %1008, %1401
  %1403 = sext i32 %1402 to i64
  %1404 = zext i32 %1008 to i64
  br label %1533

1405:                                             ; preds = %1273, %1405
  %1406 = phi i64 [ 0, %1273 ], [ %1524, %1405 ]
  %1407 = getelementptr inbounds float, float* %5, i64 %1406
  %1408 = getelementptr inbounds float, float* %1407, i64 8
  %1409 = bitcast float* %1408 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1409, i32 0, i32 1, i32 1)
  %1410 = getelementptr inbounds float, float* %3, i64 %1406
  %1411 = getelementptr inbounds float, float* %1410, i64 8
  %1412 = bitcast float* %1411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1412, i32 0, i32 1, i32 1)
  %1413 = getelementptr inbounds float, float* %1407, i64 16
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %1410, i64 16
  %1416 = bitcast float* %1415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1416, i32 0, i32 1, i32 1)
  %1417 = getelementptr inbounds float, float* %1407, i64 24
  %1418 = bitcast float* %1417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1418, i32 0, i32 1, i32 1)
  %1419 = getelementptr inbounds float, float* %1410, i64 24
  %1420 = bitcast float* %1419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1420, i32 0, i32 1, i32 1)
  %1421 = getelementptr inbounds float, float* %1407, i64 32
  %1422 = bitcast float* %1421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1422, i32 0, i32 1, i32 1)
  %1423 = getelementptr inbounds float, float* %1410, i64 32
  %1424 = bitcast float* %1423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1424, i32 0, i32 1, i32 1)
  %1425 = getelementptr inbounds float, float* %1407, i64 40
  %1426 = bitcast float* %1425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1426, i32 0, i32 1, i32 1)
  %1427 = getelementptr inbounds float, float* %1410, i64 40
  %1428 = bitcast float* %1427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1428, i32 0, i32 1, i32 1)
  %1429 = getelementptr inbounds float, float* %1407, i64 48
  %1430 = bitcast float* %1429 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1430, i32 0, i32 1, i32 1)
  %1431 = getelementptr inbounds float, float* %1410, i64 48
  %1432 = bitcast float* %1431 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1432, i32 0, i32 1, i32 1)
  %1433 = getelementptr inbounds float, float* %1407, i64 56
  %1434 = bitcast float* %1433 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1434, i32 0, i32 1, i32 1)
  %1435 = getelementptr inbounds float, float* %1410, i64 56
  %1436 = bitcast float* %1435 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1436, i32 0, i32 1, i32 1)
  %1437 = getelementptr inbounds float, float* %1407, i64 64
  %1438 = bitcast float* %1437 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1438, i32 0, i32 1, i32 1)
  %1439 = getelementptr inbounds float, float* %1410, i64 64
  %1440 = bitcast float* %1439 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1440, i32 0, i32 1, i32 1)
  %1441 = getelementptr inbounds float, float* %1407, i64 72
  %1442 = bitcast float* %1441 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1442, i32 0, i32 1, i32 1)
  %1443 = getelementptr inbounds float, float* %1410, i64 72
  %1444 = bitcast float* %1443 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1444, i32 0, i32 1, i32 1)
  %1445 = bitcast float* %1407 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nuw nsw i64 %1406, 8
  %1448 = getelementptr inbounds float, float* %5, i64 %1447
  %1449 = bitcast float* %1448 to <8 x float>*
  %1450 = load <8 x float>, <8 x float>* %1449, align 1, !tbaa !12
  %1451 = add nuw nsw i64 %1406, 16
  %1452 = getelementptr inbounds float, float* %5, i64 %1451
  %1453 = bitcast float* %1452 to <8 x float>*
  %1454 = load <8 x float>, <8 x float>* %1453, align 1, !tbaa !12
  %1455 = add nuw nsw i64 %1406, 24
  %1456 = getelementptr inbounds float, float* %5, i64 %1455
  %1457 = bitcast float* %1456 to <8 x float>*
  %1458 = load <8 x float>, <8 x float>* %1457, align 1, !tbaa !12
  %1459 = add nuw nsw i64 %1406, 32
  %1460 = getelementptr inbounds float, float* %5, i64 %1459
  %1461 = bitcast float* %1460 to <8 x float>*
  %1462 = load <8 x float>, <8 x float>* %1461, align 1, !tbaa !12
  %1463 = add nuw nsw i64 %1406, 40
  %1464 = getelementptr inbounds float, float* %5, i64 %1463
  %1465 = bitcast float* %1464 to <8 x float>*
  %1466 = load <8 x float>, <8 x float>* %1465, align 1, !tbaa !12
  %1467 = add nuw nsw i64 %1406, 48
  %1468 = getelementptr inbounds float, float* %5, i64 %1467
  %1469 = bitcast float* %1468 to <8 x float>*
  %1470 = load <8 x float>, <8 x float>* %1469, align 1, !tbaa !12
  %1471 = add nuw nsw i64 %1406, 56
  %1472 = getelementptr inbounds float, float* %5, i64 %1471
  %1473 = bitcast float* %1472 to <8 x float>*
  %1474 = load <8 x float>, <8 x float>* %1473, align 1, !tbaa !12
  %1475 = add nuw nsw i64 %1406, 64
  %1476 = getelementptr inbounds float, float* %5, i64 %1475
  %1477 = bitcast float* %1476 to <8 x float>*
  %1478 = load <8 x float>, <8 x float>* %1477, align 1, !tbaa !12
  %1479 = add nsw i64 %1406, %1276
  %1480 = getelementptr inbounds float, float* %3, i64 %1479
  %1481 = bitcast float* %1480 to <8 x float>*
  %1482 = load <8 x float>, <8 x float>* %1481, align 1, !tbaa !12
  %1483 = add nsw i64 %1479, 8
  %1484 = getelementptr inbounds float, float* %3, i64 %1483
  %1485 = bitcast float* %1484 to <8 x float>*
  %1486 = load <8 x float>, <8 x float>* %1485, align 1, !tbaa !12
  %1487 = add nsw i64 %1479, 16
  %1488 = getelementptr inbounds float, float* %3, i64 %1487
  %1489 = bitcast float* %1488 to <8 x float>*
  %1490 = load <8 x float>, <8 x float>* %1489, align 1, !tbaa !12
  %1491 = add nsw i64 %1479, 24
  %1492 = getelementptr inbounds float, float* %3, i64 %1491
  %1493 = bitcast float* %1492 to <8 x float>*
  %1494 = load <8 x float>, <8 x float>* %1493, align 1, !tbaa !12
  %1495 = add nsw i64 %1479, 32
  %1496 = getelementptr inbounds float, float* %3, i64 %1495
  %1497 = bitcast float* %1496 to <8 x float>*
  %1498 = load <8 x float>, <8 x float>* %1497, align 1, !tbaa !12
  %1499 = add nsw i64 %1479, 40
  %1500 = getelementptr inbounds float, float* %3, i64 %1499
  %1501 = bitcast float* %1500 to <8 x float>*
  %1502 = load <8 x float>, <8 x float>* %1501, align 1, !tbaa !12
  %1503 = add nsw i64 %1479, 48
  %1504 = getelementptr inbounds float, float* %3, i64 %1503
  %1505 = bitcast float* %1504 to <8 x float>*
  %1506 = load <8 x float>, <8 x float>* %1505, align 1, !tbaa !12
  %1507 = add nsw i64 %1479, 56
  %1508 = getelementptr inbounds float, float* %3, i64 %1507
  %1509 = bitcast float* %1508 to <8 x float>*
  %1510 = load <8 x float>, <8 x float>* %1509, align 1, !tbaa !12
  %1511 = add nsw i64 %1479, 64
  %1512 = getelementptr inbounds float, float* %3, i64 %1511
  %1513 = bitcast float* %1512 to <8 x float>*
  %1514 = load <8 x float>, <8 x float>* %1513, align 1, !tbaa !12
  %1515 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1482, <8 x float> %75, <8 x float> %1446) #10
  %1516 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1486, <8 x float> %75, <8 x float> %1450) #10
  %1517 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1490, <8 x float> %75, <8 x float> %1454) #10
  %1518 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1494, <8 x float> %75, <8 x float> %1458) #10
  %1519 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1498, <8 x float> %75, <8 x float> %1462) #10
  %1520 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1502, <8 x float> %75, <8 x float> %1466) #10
  %1521 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1506, <8 x float> %75, <8 x float> %1470) #10
  %1522 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1510, <8 x float> %75, <8 x float> %1474) #10
  %1523 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1514, <8 x float> %75, <8 x float> %1478) #10
  store <8 x float> %1515, <8 x float>* %1445, align 1, !tbaa !12
  store <8 x float> %1516, <8 x float>* %1449, align 1, !tbaa !12
  store <8 x float> %1517, <8 x float>* %1453, align 1, !tbaa !12
  store <8 x float> %1518, <8 x float>* %1457, align 1, !tbaa !12
  store <8 x float> %1519, <8 x float>* %1461, align 1, !tbaa !12
  store <8 x float> %1520, <8 x float>* %1465, align 1, !tbaa !12
  store <8 x float> %1521, <8 x float>* %1469, align 1, !tbaa !12
  store <8 x float> %1522, <8 x float>* %1473, align 1, !tbaa !12
  store <8 x float> %1523, <8 x float>* %1477, align 1, !tbaa !12
  %1524 = add nuw nsw i64 %1406, 72
  %1525 = icmp ult i64 %1524, %1277
  br i1 %1525, label %1405, label %1399

1526:                                             ; preds = %1533, %1135, %1272, %1399
  %1527 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1528 = icmp sgt i32 %1527, 0
  br i1 %1528, label %1529, label %1791

1529:                                             ; preds = %1526
  %1530 = zext i32 %1527 to i64
  %1531 = trunc i64 %81 to i32
  %1532 = mul nsw i32 %1527, %1531
  br label %1660

1533:                                             ; preds = %1400, %1533
  %1534 = phi i64 [ 0, %1400 ], [ %1652, %1533 ]
  %1535 = getelementptr inbounds float, float* %5, i64 %1534
  %1536 = getelementptr inbounds float, float* %1535, i64 8
  %1537 = bitcast float* %1536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1537, i32 0, i32 1, i32 1)
  %1538 = getelementptr inbounds float, float* %3, i64 %1534
  %1539 = getelementptr inbounds float, float* %1538, i64 8
  %1540 = bitcast float* %1539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1540, i32 0, i32 1, i32 1)
  %1541 = getelementptr inbounds float, float* %1535, i64 16
  %1542 = bitcast float* %1541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1542, i32 0, i32 1, i32 1)
  %1543 = getelementptr inbounds float, float* %1538, i64 16
  %1544 = bitcast float* %1543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1544, i32 0, i32 1, i32 1)
  %1545 = getelementptr inbounds float, float* %1535, i64 24
  %1546 = bitcast float* %1545 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1546, i32 0, i32 1, i32 1)
  %1547 = getelementptr inbounds float, float* %1538, i64 24
  %1548 = bitcast float* %1547 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1548, i32 0, i32 1, i32 1)
  %1549 = getelementptr inbounds float, float* %1535, i64 32
  %1550 = bitcast float* %1549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1550, i32 0, i32 1, i32 1)
  %1551 = getelementptr inbounds float, float* %1538, i64 32
  %1552 = bitcast float* %1551 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1552, i32 0, i32 1, i32 1)
  %1553 = getelementptr inbounds float, float* %1535, i64 40
  %1554 = bitcast float* %1553 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1554, i32 0, i32 1, i32 1)
  %1555 = getelementptr inbounds float, float* %1538, i64 40
  %1556 = bitcast float* %1555 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1556, i32 0, i32 1, i32 1)
  %1557 = getelementptr inbounds float, float* %1535, i64 48
  %1558 = bitcast float* %1557 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1558, i32 0, i32 1, i32 1)
  %1559 = getelementptr inbounds float, float* %1538, i64 48
  %1560 = bitcast float* %1559 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1560, i32 0, i32 1, i32 1)
  %1561 = getelementptr inbounds float, float* %1535, i64 56
  %1562 = bitcast float* %1561 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1562, i32 0, i32 1, i32 1)
  %1563 = getelementptr inbounds float, float* %1538, i64 56
  %1564 = bitcast float* %1563 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1564, i32 0, i32 1, i32 1)
  %1565 = getelementptr inbounds float, float* %1535, i64 64
  %1566 = bitcast float* %1565 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1566, i32 0, i32 1, i32 1)
  %1567 = getelementptr inbounds float, float* %1538, i64 64
  %1568 = bitcast float* %1567 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1568, i32 0, i32 1, i32 1)
  %1569 = getelementptr inbounds float, float* %1535, i64 72
  %1570 = bitcast float* %1569 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1570, i32 0, i32 1, i32 1)
  %1571 = getelementptr inbounds float, float* %1538, i64 72
  %1572 = bitcast float* %1571 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1572, i32 0, i32 1, i32 1)
  %1573 = bitcast float* %1535 to <8 x float>*
  %1574 = load <8 x float>, <8 x float>* %1573, align 1, !tbaa !12
  %1575 = add nuw nsw i64 %1534, 8
  %1576 = getelementptr inbounds float, float* %5, i64 %1575
  %1577 = bitcast float* %1576 to <8 x float>*
  %1578 = load <8 x float>, <8 x float>* %1577, align 1, !tbaa !12
  %1579 = add nuw nsw i64 %1534, 16
  %1580 = getelementptr inbounds float, float* %5, i64 %1579
  %1581 = bitcast float* %1580 to <8 x float>*
  %1582 = load <8 x float>, <8 x float>* %1581, align 1, !tbaa !12
  %1583 = add nuw nsw i64 %1534, 24
  %1584 = getelementptr inbounds float, float* %5, i64 %1583
  %1585 = bitcast float* %1584 to <8 x float>*
  %1586 = load <8 x float>, <8 x float>* %1585, align 1, !tbaa !12
  %1587 = add nuw nsw i64 %1534, 32
  %1588 = getelementptr inbounds float, float* %5, i64 %1587
  %1589 = bitcast float* %1588 to <8 x float>*
  %1590 = load <8 x float>, <8 x float>* %1589, align 1, !tbaa !12
  %1591 = add nuw nsw i64 %1534, 40
  %1592 = getelementptr inbounds float, float* %5, i64 %1591
  %1593 = bitcast float* %1592 to <8 x float>*
  %1594 = load <8 x float>, <8 x float>* %1593, align 1, !tbaa !12
  %1595 = add nuw nsw i64 %1534, 48
  %1596 = getelementptr inbounds float, float* %5, i64 %1595
  %1597 = bitcast float* %1596 to <8 x float>*
  %1598 = load <8 x float>, <8 x float>* %1597, align 1, !tbaa !12
  %1599 = add nuw nsw i64 %1534, 56
  %1600 = getelementptr inbounds float, float* %5, i64 %1599
  %1601 = bitcast float* %1600 to <8 x float>*
  %1602 = load <8 x float>, <8 x float>* %1601, align 1, !tbaa !12
  %1603 = add nuw nsw i64 %1534, 64
  %1604 = getelementptr inbounds float, float* %5, i64 %1603
  %1605 = bitcast float* %1604 to <8 x float>*
  %1606 = load <8 x float>, <8 x float>* %1605, align 1, !tbaa !12
  %1607 = add nsw i64 %1534, %1403
  %1608 = getelementptr inbounds float, float* %3, i64 %1607
  %1609 = bitcast float* %1608 to <8 x float>*
  %1610 = load <8 x float>, <8 x float>* %1609, align 1, !tbaa !12
  %1611 = add nsw i64 %1607, 8
  %1612 = getelementptr inbounds float, float* %3, i64 %1611
  %1613 = bitcast float* %1612 to <8 x float>*
  %1614 = load <8 x float>, <8 x float>* %1613, align 1, !tbaa !12
  %1615 = add nsw i64 %1607, 16
  %1616 = getelementptr inbounds float, float* %3, i64 %1615
  %1617 = bitcast float* %1616 to <8 x float>*
  %1618 = load <8 x float>, <8 x float>* %1617, align 1, !tbaa !12
  %1619 = add nsw i64 %1607, 24
  %1620 = getelementptr inbounds float, float* %3, i64 %1619
  %1621 = bitcast float* %1620 to <8 x float>*
  %1622 = load <8 x float>, <8 x float>* %1621, align 1, !tbaa !12
  %1623 = add nsw i64 %1607, 32
  %1624 = getelementptr inbounds float, float* %3, i64 %1623
  %1625 = bitcast float* %1624 to <8 x float>*
  %1626 = load <8 x float>, <8 x float>* %1625, align 1, !tbaa !12
  %1627 = add nsw i64 %1607, 40
  %1628 = getelementptr inbounds float, float* %3, i64 %1627
  %1629 = bitcast float* %1628 to <8 x float>*
  %1630 = load <8 x float>, <8 x float>* %1629, align 1, !tbaa !12
  %1631 = add nsw i64 %1607, 48
  %1632 = getelementptr inbounds float, float* %3, i64 %1631
  %1633 = bitcast float* %1632 to <8 x float>*
  %1634 = load <8 x float>, <8 x float>* %1633, align 1, !tbaa !12
  %1635 = add nsw i64 %1607, 56
  %1636 = getelementptr inbounds float, float* %3, i64 %1635
  %1637 = bitcast float* %1636 to <8 x float>*
  %1638 = load <8 x float>, <8 x float>* %1637, align 1, !tbaa !12
  %1639 = add nsw i64 %1607, 64
  %1640 = getelementptr inbounds float, float* %3, i64 %1639
  %1641 = bitcast float* %1640 to <8 x float>*
  %1642 = load <8 x float>, <8 x float>* %1641, align 1, !tbaa !12
  %1643 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1610, <8 x float> %80, <8 x float> %1574) #10
  %1644 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1614, <8 x float> %80, <8 x float> %1578) #10
  %1645 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1618, <8 x float> %80, <8 x float> %1582) #10
  %1646 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1622, <8 x float> %80, <8 x float> %1586) #10
  %1647 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1626, <8 x float> %80, <8 x float> %1590) #10
  %1648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1630, <8 x float> %80, <8 x float> %1594) #10
  %1649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1634, <8 x float> %80, <8 x float> %1598) #10
  %1650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1638, <8 x float> %80, <8 x float> %1602) #10
  %1651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1642, <8 x float> %80, <8 x float> %1606) #10
  store <8 x float> %1643, <8 x float>* %1573, align 1, !tbaa !12
  store <8 x float> %1644, <8 x float>* %1577, align 1, !tbaa !12
  store <8 x float> %1645, <8 x float>* %1581, align 1, !tbaa !12
  store <8 x float> %1646, <8 x float>* %1585, align 1, !tbaa !12
  store <8 x float> %1647, <8 x float>* %1589, align 1, !tbaa !12
  store <8 x float> %1648, <8 x float>* %1593, align 1, !tbaa !12
  store <8 x float> %1649, <8 x float>* %1597, align 1, !tbaa !12
  store <8 x float> %1650, <8 x float>* %1601, align 1, !tbaa !12
  store <8 x float> %1651, <8 x float>* %1605, align 1, !tbaa !12
  %1652 = add nuw nsw i64 %1534, 72
  %1653 = icmp ult i64 %1652, %1404
  br i1 %1653, label %1533, label %1526

1654:                                             ; preds = %1660
  br i1 %1528, label %1655, label %1791

1655:                                             ; preds = %1654
  %1656 = trunc i64 %86 to i32
  %1657 = mul nsw i32 %1527, %1656
  %1658 = sext i32 %1657 to i64
  %1659 = zext i32 %1527 to i64
  br label %1796

1660:                                             ; preds = %1529, %1660
  %1661 = phi i64 [ 0, %1529 ], [ %1789, %1660 ]
  %1662 = getelementptr inbounds float, float* %5, i64 %1661
  %1663 = getelementptr inbounds float, float* %1662, i64 8
  %1664 = bitcast float* %1663 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1664, i32 0, i32 1, i32 1)
  %1665 = getelementptr inbounds float, float* %3, i64 %1661
  %1666 = getelementptr inbounds float, float* %1665, i64 8
  %1667 = bitcast float* %1666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1667, i32 0, i32 1, i32 1)
  %1668 = getelementptr inbounds float, float* %1662, i64 16
  %1669 = bitcast float* %1668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1669, i32 0, i32 1, i32 1)
  %1670 = getelementptr inbounds float, float* %1665, i64 16
  %1671 = bitcast float* %1670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1671, i32 0, i32 1, i32 1)
  %1672 = getelementptr inbounds float, float* %1662, i64 24
  %1673 = bitcast float* %1672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1673, i32 0, i32 1, i32 1)
  %1674 = getelementptr inbounds float, float* %1665, i64 24
  %1675 = bitcast float* %1674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1675, i32 0, i32 1, i32 1)
  %1676 = getelementptr inbounds float, float* %1662, i64 32
  %1677 = bitcast float* %1676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1677, i32 0, i32 1, i32 1)
  %1678 = getelementptr inbounds float, float* %1665, i64 32
  %1679 = bitcast float* %1678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1679, i32 0, i32 1, i32 1)
  %1680 = getelementptr inbounds float, float* %1662, i64 40
  %1681 = bitcast float* %1680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1681, i32 0, i32 1, i32 1)
  %1682 = getelementptr inbounds float, float* %1665, i64 40
  %1683 = bitcast float* %1682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1683, i32 0, i32 1, i32 1)
  %1684 = getelementptr inbounds float, float* %1662, i64 48
  %1685 = bitcast float* %1684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1685, i32 0, i32 1, i32 1)
  %1686 = getelementptr inbounds float, float* %1665, i64 48
  %1687 = bitcast float* %1686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1687, i32 0, i32 1, i32 1)
  %1688 = getelementptr inbounds float, float* %1662, i64 56
  %1689 = bitcast float* %1688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1689, i32 0, i32 1, i32 1)
  %1690 = getelementptr inbounds float, float* %1665, i64 56
  %1691 = bitcast float* %1690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1691, i32 0, i32 1, i32 1)
  %1692 = getelementptr inbounds float, float* %1662, i64 64
  %1693 = bitcast float* %1692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1693, i32 0, i32 1, i32 1)
  %1694 = getelementptr inbounds float, float* %1665, i64 64
  %1695 = bitcast float* %1694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1695, i32 0, i32 1, i32 1)
  %1696 = getelementptr inbounds float, float* %1662, i64 72
  %1697 = bitcast float* %1696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1697, i32 0, i32 1, i32 1)
  %1698 = getelementptr inbounds float, float* %1665, i64 72
  %1699 = bitcast float* %1698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1699, i32 0, i32 1, i32 1)
  %1700 = bitcast float* %1662 to <8 x float>*
  %1701 = load <8 x float>, <8 x float>* %1700, align 1, !tbaa !12
  %1702 = add nuw nsw i64 %1661, 8
  %1703 = getelementptr inbounds float, float* %5, i64 %1702
  %1704 = bitcast float* %1703 to <8 x float>*
  %1705 = load <8 x float>, <8 x float>* %1704, align 1, !tbaa !12
  %1706 = add nuw nsw i64 %1661, 16
  %1707 = getelementptr inbounds float, float* %5, i64 %1706
  %1708 = bitcast float* %1707 to <8 x float>*
  %1709 = load <8 x float>, <8 x float>* %1708, align 1, !tbaa !12
  %1710 = add nuw nsw i64 %1661, 24
  %1711 = getelementptr inbounds float, float* %5, i64 %1710
  %1712 = bitcast float* %1711 to <8 x float>*
  %1713 = load <8 x float>, <8 x float>* %1712, align 1, !tbaa !12
  %1714 = add nuw nsw i64 %1661, 32
  %1715 = getelementptr inbounds float, float* %5, i64 %1714
  %1716 = bitcast float* %1715 to <8 x float>*
  %1717 = load <8 x float>, <8 x float>* %1716, align 1, !tbaa !12
  %1718 = add nuw nsw i64 %1661, 40
  %1719 = getelementptr inbounds float, float* %5, i64 %1718
  %1720 = bitcast float* %1719 to <8 x float>*
  %1721 = load <8 x float>, <8 x float>* %1720, align 1, !tbaa !12
  %1722 = add nuw nsw i64 %1661, 48
  %1723 = getelementptr inbounds float, float* %5, i64 %1722
  %1724 = bitcast float* %1723 to <8 x float>*
  %1725 = load <8 x float>, <8 x float>* %1724, align 1, !tbaa !12
  %1726 = add nuw nsw i64 %1661, 56
  %1727 = getelementptr inbounds float, float* %5, i64 %1726
  %1728 = bitcast float* %1727 to <8 x float>*
  %1729 = load <8 x float>, <8 x float>* %1728, align 1, !tbaa !12
  %1730 = add nuw nsw i64 %1661, 64
  %1731 = getelementptr inbounds float, float* %5, i64 %1730
  %1732 = bitcast float* %1731 to <8 x float>*
  %1733 = load <8 x float>, <8 x float>* %1732, align 1, !tbaa !12
  %1734 = trunc i64 %1661 to i32
  %1735 = add nsw i32 %1532, %1734
  %1736 = sext i32 %1735 to i64
  %1737 = getelementptr inbounds float, float* %3, i64 %1736
  %1738 = bitcast float* %1737 to <8 x float>*
  %1739 = load <8 x float>, <8 x float>* %1738, align 1, !tbaa !12
  %1740 = add nsw i32 %1735, 8
  %1741 = sext i32 %1740 to i64
  %1742 = getelementptr inbounds float, float* %3, i64 %1741
  %1743 = bitcast float* %1742 to <8 x float>*
  %1744 = load <8 x float>, <8 x float>* %1743, align 1, !tbaa !12
  %1745 = add nsw i32 %1735, 16
  %1746 = sext i32 %1745 to i64
  %1747 = getelementptr inbounds float, float* %3, i64 %1746
  %1748 = bitcast float* %1747 to <8 x float>*
  %1749 = load <8 x float>, <8 x float>* %1748, align 1, !tbaa !12
  %1750 = add nsw i32 %1735, 24
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds float, float* %3, i64 %1751
  %1753 = bitcast float* %1752 to <8 x float>*
  %1754 = load <8 x float>, <8 x float>* %1753, align 1, !tbaa !12
  %1755 = add nsw i32 %1735, 32
  %1756 = sext i32 %1755 to i64
  %1757 = getelementptr inbounds float, float* %3, i64 %1756
  %1758 = bitcast float* %1757 to <8 x float>*
  %1759 = load <8 x float>, <8 x float>* %1758, align 1, !tbaa !12
  %1760 = add nsw i32 %1735, 40
  %1761 = sext i32 %1760 to i64
  %1762 = getelementptr inbounds float, float* %3, i64 %1761
  %1763 = bitcast float* %1762 to <8 x float>*
  %1764 = load <8 x float>, <8 x float>* %1763, align 1, !tbaa !12
  %1765 = add nsw i32 %1735, 48
  %1766 = sext i32 %1765 to i64
  %1767 = getelementptr inbounds float, float* %3, i64 %1766
  %1768 = bitcast float* %1767 to <8 x float>*
  %1769 = load <8 x float>, <8 x float>* %1768, align 1, !tbaa !12
  %1770 = add nsw i32 %1735, 56
  %1771 = sext i32 %1770 to i64
  %1772 = getelementptr inbounds float, float* %3, i64 %1771
  %1773 = bitcast float* %1772 to <8 x float>*
  %1774 = load <8 x float>, <8 x float>* %1773, align 1, !tbaa !12
  %1775 = add nsw i32 %1735, 64
  %1776 = sext i32 %1775 to i64
  %1777 = getelementptr inbounds float, float* %3, i64 %1776
  %1778 = bitcast float* %1777 to <8 x float>*
  %1779 = load <8 x float>, <8 x float>* %1778, align 1, !tbaa !12
  %1780 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1739, <8 x float> %85, <8 x float> %1701) #10
  %1781 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1744, <8 x float> %85, <8 x float> %1705) #10
  %1782 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1749, <8 x float> %85, <8 x float> %1709) #10
  %1783 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1754, <8 x float> %85, <8 x float> %1713) #10
  %1784 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1759, <8 x float> %85, <8 x float> %1717) #10
  %1785 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1764, <8 x float> %85, <8 x float> %1721) #10
  %1786 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1769, <8 x float> %85, <8 x float> %1725) #10
  %1787 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1774, <8 x float> %85, <8 x float> %1729) #10
  %1788 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1779, <8 x float> %85, <8 x float> %1733) #10
  store <8 x float> %1780, <8 x float>* %1700, align 1, !tbaa !12
  store <8 x float> %1781, <8 x float>* %1704, align 1, !tbaa !12
  store <8 x float> %1782, <8 x float>* %1708, align 1, !tbaa !12
  store <8 x float> %1783, <8 x float>* %1712, align 1, !tbaa !12
  store <8 x float> %1784, <8 x float>* %1716, align 1, !tbaa !12
  store <8 x float> %1785, <8 x float>* %1720, align 1, !tbaa !12
  store <8 x float> %1786, <8 x float>* %1724, align 1, !tbaa !12
  store <8 x float> %1787, <8 x float>* %1728, align 1, !tbaa !12
  store <8 x float> %1788, <8 x float>* %1732, align 1, !tbaa !12
  %1789 = add nuw nsw i64 %1661, 72
  %1790 = icmp ult i64 %1789, %1530
  br i1 %1790, label %1660, label %1654

1791:                                             ; preds = %1796, %488, %20, %1007, %1526, %1654
  %1792 = add nuw nsw i64 %21, 14
  %1793 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1794 = sext i32 %1793 to i64
  %1795 = icmp slt i64 %1792, %1794
  br i1 %1795, label %20, label %8

1796:                                             ; preds = %1655, %1796
  %1797 = phi i64 [ 0, %1655 ], [ %1915, %1796 ]
  %1798 = getelementptr inbounds float, float* %5, i64 %1797
  %1799 = getelementptr inbounds float, float* %1798, i64 8
  %1800 = bitcast float* %1799 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1800, i32 0, i32 1, i32 1)
  %1801 = getelementptr inbounds float, float* %3, i64 %1797
  %1802 = getelementptr inbounds float, float* %1801, i64 8
  %1803 = bitcast float* %1802 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1803, i32 0, i32 1, i32 1)
  %1804 = getelementptr inbounds float, float* %1798, i64 16
  %1805 = bitcast float* %1804 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1805, i32 0, i32 1, i32 1)
  %1806 = getelementptr inbounds float, float* %1801, i64 16
  %1807 = bitcast float* %1806 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1807, i32 0, i32 1, i32 1)
  %1808 = getelementptr inbounds float, float* %1798, i64 24
  %1809 = bitcast float* %1808 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1809, i32 0, i32 1, i32 1)
  %1810 = getelementptr inbounds float, float* %1801, i64 24
  %1811 = bitcast float* %1810 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1811, i32 0, i32 1, i32 1)
  %1812 = getelementptr inbounds float, float* %1798, i64 32
  %1813 = bitcast float* %1812 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1813, i32 0, i32 1, i32 1)
  %1814 = getelementptr inbounds float, float* %1801, i64 32
  %1815 = bitcast float* %1814 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1815, i32 0, i32 1, i32 1)
  %1816 = getelementptr inbounds float, float* %1798, i64 40
  %1817 = bitcast float* %1816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1817, i32 0, i32 1, i32 1)
  %1818 = getelementptr inbounds float, float* %1801, i64 40
  %1819 = bitcast float* %1818 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1819, i32 0, i32 1, i32 1)
  %1820 = getelementptr inbounds float, float* %1798, i64 48
  %1821 = bitcast float* %1820 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1821, i32 0, i32 1, i32 1)
  %1822 = getelementptr inbounds float, float* %1801, i64 48
  %1823 = bitcast float* %1822 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1823, i32 0, i32 1, i32 1)
  %1824 = getelementptr inbounds float, float* %1798, i64 56
  %1825 = bitcast float* %1824 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1825, i32 0, i32 1, i32 1)
  %1826 = getelementptr inbounds float, float* %1801, i64 56
  %1827 = bitcast float* %1826 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1827, i32 0, i32 1, i32 1)
  %1828 = getelementptr inbounds float, float* %1798, i64 64
  %1829 = bitcast float* %1828 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1829, i32 0, i32 1, i32 1)
  %1830 = getelementptr inbounds float, float* %1801, i64 64
  %1831 = bitcast float* %1830 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1831, i32 0, i32 1, i32 1)
  %1832 = getelementptr inbounds float, float* %1798, i64 72
  %1833 = bitcast float* %1832 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1833, i32 0, i32 1, i32 1)
  %1834 = getelementptr inbounds float, float* %1801, i64 72
  %1835 = bitcast float* %1834 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1835, i32 0, i32 1, i32 1)
  %1836 = bitcast float* %1798 to <8 x float>*
  %1837 = load <8 x float>, <8 x float>* %1836, align 1, !tbaa !12
  %1838 = add nuw nsw i64 %1797, 8
  %1839 = getelementptr inbounds float, float* %5, i64 %1838
  %1840 = bitcast float* %1839 to <8 x float>*
  %1841 = load <8 x float>, <8 x float>* %1840, align 1, !tbaa !12
  %1842 = add nuw nsw i64 %1797, 16
  %1843 = getelementptr inbounds float, float* %5, i64 %1842
  %1844 = bitcast float* %1843 to <8 x float>*
  %1845 = load <8 x float>, <8 x float>* %1844, align 1, !tbaa !12
  %1846 = add nuw nsw i64 %1797, 24
  %1847 = getelementptr inbounds float, float* %5, i64 %1846
  %1848 = bitcast float* %1847 to <8 x float>*
  %1849 = load <8 x float>, <8 x float>* %1848, align 1, !tbaa !12
  %1850 = add nuw nsw i64 %1797, 32
  %1851 = getelementptr inbounds float, float* %5, i64 %1850
  %1852 = bitcast float* %1851 to <8 x float>*
  %1853 = load <8 x float>, <8 x float>* %1852, align 1, !tbaa !12
  %1854 = add nuw nsw i64 %1797, 40
  %1855 = getelementptr inbounds float, float* %5, i64 %1854
  %1856 = bitcast float* %1855 to <8 x float>*
  %1857 = load <8 x float>, <8 x float>* %1856, align 1, !tbaa !12
  %1858 = add nuw nsw i64 %1797, 48
  %1859 = getelementptr inbounds float, float* %5, i64 %1858
  %1860 = bitcast float* %1859 to <8 x float>*
  %1861 = load <8 x float>, <8 x float>* %1860, align 1, !tbaa !12
  %1862 = add nuw nsw i64 %1797, 56
  %1863 = getelementptr inbounds float, float* %5, i64 %1862
  %1864 = bitcast float* %1863 to <8 x float>*
  %1865 = load <8 x float>, <8 x float>* %1864, align 1, !tbaa !12
  %1866 = add nuw nsw i64 %1797, 64
  %1867 = getelementptr inbounds float, float* %5, i64 %1866
  %1868 = bitcast float* %1867 to <8 x float>*
  %1869 = load <8 x float>, <8 x float>* %1868, align 1, !tbaa !12
  %1870 = add nsw i64 %1797, %1658
  %1871 = getelementptr inbounds float, float* %3, i64 %1870
  %1872 = bitcast float* %1871 to <8 x float>*
  %1873 = load <8 x float>, <8 x float>* %1872, align 1, !tbaa !12
  %1874 = add nsw i64 %1870, 8
  %1875 = getelementptr inbounds float, float* %3, i64 %1874
  %1876 = bitcast float* %1875 to <8 x float>*
  %1877 = load <8 x float>, <8 x float>* %1876, align 1, !tbaa !12
  %1878 = add nsw i64 %1870, 16
  %1879 = getelementptr inbounds float, float* %3, i64 %1878
  %1880 = bitcast float* %1879 to <8 x float>*
  %1881 = load <8 x float>, <8 x float>* %1880, align 1, !tbaa !12
  %1882 = add nsw i64 %1870, 24
  %1883 = getelementptr inbounds float, float* %3, i64 %1882
  %1884 = bitcast float* %1883 to <8 x float>*
  %1885 = load <8 x float>, <8 x float>* %1884, align 1, !tbaa !12
  %1886 = add nsw i64 %1870, 32
  %1887 = getelementptr inbounds float, float* %3, i64 %1886
  %1888 = bitcast float* %1887 to <8 x float>*
  %1889 = load <8 x float>, <8 x float>* %1888, align 1, !tbaa !12
  %1890 = add nsw i64 %1870, 40
  %1891 = getelementptr inbounds float, float* %3, i64 %1890
  %1892 = bitcast float* %1891 to <8 x float>*
  %1893 = load <8 x float>, <8 x float>* %1892, align 1, !tbaa !12
  %1894 = add nsw i64 %1870, 48
  %1895 = getelementptr inbounds float, float* %3, i64 %1894
  %1896 = bitcast float* %1895 to <8 x float>*
  %1897 = load <8 x float>, <8 x float>* %1896, align 1, !tbaa !12
  %1898 = add nsw i64 %1870, 56
  %1899 = getelementptr inbounds float, float* %3, i64 %1898
  %1900 = bitcast float* %1899 to <8 x float>*
  %1901 = load <8 x float>, <8 x float>* %1900, align 1, !tbaa !12
  %1902 = add nsw i64 %1870, 64
  %1903 = getelementptr inbounds float, float* %3, i64 %1902
  %1904 = bitcast float* %1903 to <8 x float>*
  %1905 = load <8 x float>, <8 x float>* %1904, align 1, !tbaa !12
  %1906 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1873, <8 x float> %90, <8 x float> %1837) #10
  %1907 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1877, <8 x float> %90, <8 x float> %1841) #10
  %1908 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1881, <8 x float> %90, <8 x float> %1845) #10
  %1909 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1885, <8 x float> %90, <8 x float> %1849) #10
  %1910 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1889, <8 x float> %90, <8 x float> %1853) #10
  %1911 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1893, <8 x float> %90, <8 x float> %1857) #10
  %1912 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1897, <8 x float> %90, <8 x float> %1861) #10
  %1913 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1901, <8 x float> %90, <8 x float> %1865) #10
  %1914 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1905, <8 x float> %90, <8 x float> %1869) #10
  store <8 x float> %1906, <8 x float>* %1836, align 1, !tbaa !12
  store <8 x float> %1907, <8 x float>* %1840, align 1, !tbaa !12
  store <8 x float> %1908, <8 x float>* %1844, align 1, !tbaa !12
  store <8 x float> %1909, <8 x float>* %1848, align 1, !tbaa !12
  store <8 x float> %1910, <8 x float>* %1852, align 1, !tbaa !12
  store <8 x float> %1911, <8 x float>* %1856, align 1, !tbaa !12
  store <8 x float> %1912, <8 x float>* %1860, align 1, !tbaa !12
  store <8 x float> %1913, <8 x float>* %1864, align 1, !tbaa !12
  store <8 x float> %1914, <8 x float>* %1868, align 1, !tbaa !12
  %1915 = add nuw nsw i64 %1797, 72
  %1916 = icmp ult i64 %1915, %1659
  br i1 %1916, label %1796, label %1791
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 266
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui9_uk14.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
