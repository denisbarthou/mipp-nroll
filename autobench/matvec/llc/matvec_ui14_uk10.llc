; ModuleID = 'codes/matvec_ui14_uk10.cpp'
source_filename = "codes/matvec_ui14_uk10.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui14_uk10.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 112
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 80
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1853, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1853
  %21 = phi i64 [ %1854, %1853 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %72 = icmp sgt i32 %71, 0
  br i1 %72, label %73, label %1853

73:                                               ; preds = %20
  %74 = zext i32 %71 to i64
  %75 = trunc i64 %21 to i32
  %76 = mul nsw i32 %71, %75
  br label %83

77:                                               ; preds = %83
  br i1 %72, label %78, label %476

78:                                               ; preds = %77
  %79 = trunc i64 %26 to i32
  %80 = mul nsw i32 %71, %79
  %81 = sext i32 %80 to i64
  %82 = zext i32 %71 to i64
  br label %290

83:                                               ; preds = %73, %83
  %84 = phi i64 [ 0, %73 ], [ %282, %83 ]
  %85 = getelementptr inbounds float, float* %5, i64 %84
  %86 = getelementptr inbounds float, float* %85, i64 8
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %3, i64 %84
  %89 = getelementptr inbounds float, float* %88, i64 8
  %90 = bitcast float* %89 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %90, i32 0, i32 1, i32 1)
  %91 = getelementptr inbounds float, float* %85, i64 16
  %92 = bitcast float* %91 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %92, i32 0, i32 1, i32 1)
  %93 = getelementptr inbounds float, float* %88, i64 16
  %94 = bitcast float* %93 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %94, i32 0, i32 1, i32 1)
  %95 = getelementptr inbounds float, float* %85, i64 24
  %96 = bitcast float* %95 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %96, i32 0, i32 1, i32 1)
  %97 = getelementptr inbounds float, float* %88, i64 24
  %98 = bitcast float* %97 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %98, i32 0, i32 1, i32 1)
  %99 = getelementptr inbounds float, float* %85, i64 32
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %88, i64 32
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %85, i64 40
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %88, i64 40
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %85, i64 48
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %88, i64 48
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %85, i64 56
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %88, i64 56
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %85, i64 64
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %88, i64 64
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %85, i64 72
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %88, i64 72
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %85, i64 80
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %88, i64 80
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %85, i64 88
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %88, i64 88
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %85, i64 96
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %88, i64 96
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %85, i64 104
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = getelementptr inbounds float, float* %88, i64 104
  %138 = bitcast float* %137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %138, i32 0, i32 1, i32 1)
  %139 = getelementptr inbounds float, float* %85, i64 112
  %140 = bitcast float* %139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %140, i32 0, i32 1, i32 1)
  %141 = getelementptr inbounds float, float* %88, i64 112
  %142 = bitcast float* %141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %142, i32 0, i32 1, i32 1)
  %143 = bitcast float* %85 to <8 x float>*
  %144 = load <8 x float>, <8 x float>* %143, align 1, !tbaa !12
  %145 = or i64 %84, 8
  %146 = getelementptr inbounds float, float* %5, i64 %145
  %147 = bitcast float* %146 to <8 x float>*
  %148 = load <8 x float>, <8 x float>* %147, align 1, !tbaa !12
  %149 = add nuw nsw i64 %84, 16
  %150 = getelementptr inbounds float, float* %5, i64 %149
  %151 = bitcast float* %150 to <8 x float>*
  %152 = load <8 x float>, <8 x float>* %151, align 1, !tbaa !12
  %153 = add nuw nsw i64 %84, 24
  %154 = getelementptr inbounds float, float* %5, i64 %153
  %155 = bitcast float* %154 to <8 x float>*
  %156 = load <8 x float>, <8 x float>* %155, align 1, !tbaa !12
  %157 = add nuw nsw i64 %84, 32
  %158 = getelementptr inbounds float, float* %5, i64 %157
  %159 = bitcast float* %158 to <8 x float>*
  %160 = load <8 x float>, <8 x float>* %159, align 1, !tbaa !12
  %161 = add nuw nsw i64 %84, 40
  %162 = getelementptr inbounds float, float* %5, i64 %161
  %163 = bitcast float* %162 to <8 x float>*
  %164 = load <8 x float>, <8 x float>* %163, align 1, !tbaa !12
  %165 = add nuw nsw i64 %84, 48
  %166 = getelementptr inbounds float, float* %5, i64 %165
  %167 = bitcast float* %166 to <8 x float>*
  %168 = load <8 x float>, <8 x float>* %167, align 1, !tbaa !12
  %169 = add nuw nsw i64 %84, 56
  %170 = getelementptr inbounds float, float* %5, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nuw nsw i64 %84, 64
  %174 = getelementptr inbounds float, float* %5, i64 %173
  %175 = bitcast float* %174 to <8 x float>*
  %176 = load <8 x float>, <8 x float>* %175, align 1, !tbaa !12
  %177 = add nuw nsw i64 %84, 72
  %178 = getelementptr inbounds float, float* %5, i64 %177
  %179 = bitcast float* %178 to <8 x float>*
  %180 = load <8 x float>, <8 x float>* %179, align 1, !tbaa !12
  %181 = add nuw nsw i64 %84, 80
  %182 = getelementptr inbounds float, float* %5, i64 %181
  %183 = bitcast float* %182 to <8 x float>*
  %184 = load <8 x float>, <8 x float>* %183, align 1, !tbaa !12
  %185 = add nuw nsw i64 %84, 88
  %186 = getelementptr inbounds float, float* %5, i64 %185
  %187 = bitcast float* %186 to <8 x float>*
  %188 = load <8 x float>, <8 x float>* %187, align 1, !tbaa !12
  %189 = add nuw nsw i64 %84, 96
  %190 = getelementptr inbounds float, float* %5, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nuw nsw i64 %84, 104
  %194 = getelementptr inbounds float, float* %5, i64 %193
  %195 = bitcast float* %194 to <8 x float>*
  %196 = load <8 x float>, <8 x float>* %195, align 1, !tbaa !12
  %197 = trunc i64 %84 to i32
  %198 = add nsw i32 %76, %197
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %3, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nsw i32 %198, 8
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = add nsw i32 %198, 16
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nsw i32 %198, 24
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %3, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %217 = load <8 x float>, <8 x float>* %216, align 1, !tbaa !12
  %218 = add nsw i32 %198, 32
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %3, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %222 = load <8 x float>, <8 x float>* %221, align 1, !tbaa !12
  %223 = add nsw i32 %198, 40
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %3, i64 %224
  %226 = bitcast float* %225 to <8 x float>*
  %227 = load <8 x float>, <8 x float>* %226, align 1, !tbaa !12
  %228 = add nsw i32 %198, 48
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float, float* %3, i64 %229
  %231 = bitcast float* %230 to <8 x float>*
  %232 = load <8 x float>, <8 x float>* %231, align 1, !tbaa !12
  %233 = add nsw i32 %198, 56
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float, float* %3, i64 %234
  %236 = bitcast float* %235 to <8 x float>*
  %237 = load <8 x float>, <8 x float>* %236, align 1, !tbaa !12
  %238 = add nsw i32 %198, 64
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float, float* %3, i64 %239
  %241 = bitcast float* %240 to <8 x float>*
  %242 = load <8 x float>, <8 x float>* %241, align 1, !tbaa !12
  %243 = add nsw i32 %198, 72
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %3, i64 %244
  %246 = bitcast float* %245 to <8 x float>*
  %247 = load <8 x float>, <8 x float>* %246, align 1, !tbaa !12
  %248 = add nsw i32 %198, 80
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds float, float* %3, i64 %249
  %251 = bitcast float* %250 to <8 x float>*
  %252 = load <8 x float>, <8 x float>* %251, align 1, !tbaa !12
  %253 = add nsw i32 %198, 88
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %3, i64 %254
  %256 = bitcast float* %255 to <8 x float>*
  %257 = load <8 x float>, <8 x float>* %256, align 1, !tbaa !12
  %258 = add nsw i32 %198, 96
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds float, float* %3, i64 %259
  %261 = bitcast float* %260 to <8 x float>*
  %262 = load <8 x float>, <8 x float>* %261, align 1, !tbaa !12
  %263 = add nsw i32 %198, 104
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds float, float* %3, i64 %264
  %266 = bitcast float* %265 to <8 x float>*
  %267 = load <8 x float>, <8 x float>* %266, align 1, !tbaa !12
  %268 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %202, <8 x float> %25, <8 x float> %144) #10
  %269 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %148) #10
  %270 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %152) #10
  %271 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %217, <8 x float> %25, <8 x float> %156) #10
  %272 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %222, <8 x float> %25, <8 x float> %160) #10
  %273 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %227, <8 x float> %25, <8 x float> %164) #10
  %274 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %232, <8 x float> %25, <8 x float> %168) #10
  %275 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %237, <8 x float> %25, <8 x float> %172) #10
  %276 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %242, <8 x float> %25, <8 x float> %176) #10
  %277 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %247, <8 x float> %25, <8 x float> %180) #10
  %278 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %252, <8 x float> %25, <8 x float> %184) #10
  %279 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %257, <8 x float> %25, <8 x float> %188) #10
  %280 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %262, <8 x float> %25, <8 x float> %192) #10
  %281 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %267, <8 x float> %25, <8 x float> %196) #10
  store <8 x float> %268, <8 x float>* %143, align 1, !tbaa !12
  store <8 x float> %269, <8 x float>* %147, align 1, !tbaa !12
  store <8 x float> %270, <8 x float>* %151, align 1, !tbaa !12
  store <8 x float> %271, <8 x float>* %155, align 1, !tbaa !12
  store <8 x float> %272, <8 x float>* %159, align 1, !tbaa !12
  store <8 x float> %273, <8 x float>* %163, align 1, !tbaa !12
  store <8 x float> %274, <8 x float>* %167, align 1, !tbaa !12
  store <8 x float> %275, <8 x float>* %171, align 1, !tbaa !12
  store <8 x float> %276, <8 x float>* %175, align 1, !tbaa !12
  store <8 x float> %277, <8 x float>* %179, align 1, !tbaa !12
  store <8 x float> %278, <8 x float>* %183, align 1, !tbaa !12
  store <8 x float> %279, <8 x float>* %187, align 1, !tbaa !12
  store <8 x float> %280, <8 x float>* %191, align 1, !tbaa !12
  store <8 x float> %281, <8 x float>* %195, align 1, !tbaa !12
  %282 = add nuw nsw i64 %84, 112
  %283 = icmp ult i64 %282, %74
  br i1 %283, label %83, label %77

284:                                              ; preds = %290
  br i1 %72, label %285, label %476

285:                                              ; preds = %284
  %286 = trunc i64 %31 to i32
  %287 = mul nsw i32 %71, %286
  %288 = sext i32 %287 to i64
  %289 = zext i32 %71 to i64
  br label %483

290:                                              ; preds = %78, %290
  %291 = phi i64 [ 0, %78 ], [ %474, %290 ]
  %292 = getelementptr inbounds float, float* %5, i64 %291
  %293 = getelementptr inbounds float, float* %292, i64 8
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %3, i64 %291
  %296 = getelementptr inbounds float, float* %295, i64 8
  %297 = bitcast float* %296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %297, i32 0, i32 1, i32 1)
  %298 = getelementptr inbounds float, float* %292, i64 16
  %299 = bitcast float* %298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %299, i32 0, i32 1, i32 1)
  %300 = getelementptr inbounds float, float* %295, i64 16
  %301 = bitcast float* %300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %301, i32 0, i32 1, i32 1)
  %302 = getelementptr inbounds float, float* %292, i64 24
  %303 = bitcast float* %302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %303, i32 0, i32 1, i32 1)
  %304 = getelementptr inbounds float, float* %295, i64 24
  %305 = bitcast float* %304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %305, i32 0, i32 1, i32 1)
  %306 = getelementptr inbounds float, float* %292, i64 32
  %307 = bitcast float* %306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %307, i32 0, i32 1, i32 1)
  %308 = getelementptr inbounds float, float* %295, i64 32
  %309 = bitcast float* %308 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %309, i32 0, i32 1, i32 1)
  %310 = getelementptr inbounds float, float* %292, i64 40
  %311 = bitcast float* %310 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %311, i32 0, i32 1, i32 1)
  %312 = getelementptr inbounds float, float* %295, i64 40
  %313 = bitcast float* %312 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %313, i32 0, i32 1, i32 1)
  %314 = getelementptr inbounds float, float* %292, i64 48
  %315 = bitcast float* %314 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %315, i32 0, i32 1, i32 1)
  %316 = getelementptr inbounds float, float* %295, i64 48
  %317 = bitcast float* %316 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %317, i32 0, i32 1, i32 1)
  %318 = getelementptr inbounds float, float* %292, i64 56
  %319 = bitcast float* %318 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %319, i32 0, i32 1, i32 1)
  %320 = getelementptr inbounds float, float* %295, i64 56
  %321 = bitcast float* %320 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %321, i32 0, i32 1, i32 1)
  %322 = getelementptr inbounds float, float* %292, i64 64
  %323 = bitcast float* %322 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %323, i32 0, i32 1, i32 1)
  %324 = getelementptr inbounds float, float* %295, i64 64
  %325 = bitcast float* %324 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %325, i32 0, i32 1, i32 1)
  %326 = getelementptr inbounds float, float* %292, i64 72
  %327 = bitcast float* %326 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %327, i32 0, i32 1, i32 1)
  %328 = getelementptr inbounds float, float* %295, i64 72
  %329 = bitcast float* %328 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %329, i32 0, i32 1, i32 1)
  %330 = getelementptr inbounds float, float* %292, i64 80
  %331 = bitcast float* %330 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %331, i32 0, i32 1, i32 1)
  %332 = getelementptr inbounds float, float* %295, i64 80
  %333 = bitcast float* %332 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %333, i32 0, i32 1, i32 1)
  %334 = getelementptr inbounds float, float* %292, i64 88
  %335 = bitcast float* %334 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %335, i32 0, i32 1, i32 1)
  %336 = getelementptr inbounds float, float* %295, i64 88
  %337 = bitcast float* %336 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %337, i32 0, i32 1, i32 1)
  %338 = getelementptr inbounds float, float* %292, i64 96
  %339 = bitcast float* %338 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %339, i32 0, i32 1, i32 1)
  %340 = getelementptr inbounds float, float* %295, i64 96
  %341 = bitcast float* %340 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %341, i32 0, i32 1, i32 1)
  %342 = getelementptr inbounds float, float* %292, i64 104
  %343 = bitcast float* %342 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %343, i32 0, i32 1, i32 1)
  %344 = getelementptr inbounds float, float* %295, i64 104
  %345 = bitcast float* %344 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %345, i32 0, i32 1, i32 1)
  %346 = getelementptr inbounds float, float* %292, i64 112
  %347 = bitcast float* %346 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %347, i32 0, i32 1, i32 1)
  %348 = getelementptr inbounds float, float* %295, i64 112
  %349 = bitcast float* %348 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %349, i32 0, i32 1, i32 1)
  %350 = bitcast float* %292 to <8 x float>*
  %351 = load <8 x float>, <8 x float>* %350, align 1, !tbaa !12
  %352 = or i64 %291, 8
  %353 = getelementptr inbounds float, float* %5, i64 %352
  %354 = bitcast float* %353 to <8 x float>*
  %355 = load <8 x float>, <8 x float>* %354, align 1, !tbaa !12
  %356 = add nuw nsw i64 %291, 16
  %357 = getelementptr inbounds float, float* %5, i64 %356
  %358 = bitcast float* %357 to <8 x float>*
  %359 = load <8 x float>, <8 x float>* %358, align 1, !tbaa !12
  %360 = add nuw nsw i64 %291, 24
  %361 = getelementptr inbounds float, float* %5, i64 %360
  %362 = bitcast float* %361 to <8 x float>*
  %363 = load <8 x float>, <8 x float>* %362, align 1, !tbaa !12
  %364 = add nuw nsw i64 %291, 32
  %365 = getelementptr inbounds float, float* %5, i64 %364
  %366 = bitcast float* %365 to <8 x float>*
  %367 = load <8 x float>, <8 x float>* %366, align 1, !tbaa !12
  %368 = add nuw nsw i64 %291, 40
  %369 = getelementptr inbounds float, float* %5, i64 %368
  %370 = bitcast float* %369 to <8 x float>*
  %371 = load <8 x float>, <8 x float>* %370, align 1, !tbaa !12
  %372 = add nuw nsw i64 %291, 48
  %373 = getelementptr inbounds float, float* %5, i64 %372
  %374 = bitcast float* %373 to <8 x float>*
  %375 = load <8 x float>, <8 x float>* %374, align 1, !tbaa !12
  %376 = add nuw nsw i64 %291, 56
  %377 = getelementptr inbounds float, float* %5, i64 %376
  %378 = bitcast float* %377 to <8 x float>*
  %379 = load <8 x float>, <8 x float>* %378, align 1, !tbaa !12
  %380 = add nuw nsw i64 %291, 64
  %381 = getelementptr inbounds float, float* %5, i64 %380
  %382 = bitcast float* %381 to <8 x float>*
  %383 = load <8 x float>, <8 x float>* %382, align 1, !tbaa !12
  %384 = add nuw nsw i64 %291, 72
  %385 = getelementptr inbounds float, float* %5, i64 %384
  %386 = bitcast float* %385 to <8 x float>*
  %387 = load <8 x float>, <8 x float>* %386, align 1, !tbaa !12
  %388 = add nuw nsw i64 %291, 80
  %389 = getelementptr inbounds float, float* %5, i64 %388
  %390 = bitcast float* %389 to <8 x float>*
  %391 = load <8 x float>, <8 x float>* %390, align 1, !tbaa !12
  %392 = add nuw nsw i64 %291, 88
  %393 = getelementptr inbounds float, float* %5, i64 %392
  %394 = bitcast float* %393 to <8 x float>*
  %395 = load <8 x float>, <8 x float>* %394, align 1, !tbaa !12
  %396 = add nuw nsw i64 %291, 96
  %397 = getelementptr inbounds float, float* %5, i64 %396
  %398 = bitcast float* %397 to <8 x float>*
  %399 = load <8 x float>, <8 x float>* %398, align 1, !tbaa !12
  %400 = add nuw nsw i64 %291, 104
  %401 = getelementptr inbounds float, float* %5, i64 %400
  %402 = bitcast float* %401 to <8 x float>*
  %403 = load <8 x float>, <8 x float>* %402, align 1, !tbaa !12
  %404 = add nsw i64 %291, %81
  %405 = getelementptr inbounds float, float* %3, i64 %404
  %406 = bitcast float* %405 to <8 x float>*
  %407 = load <8 x float>, <8 x float>* %406, align 1, !tbaa !12
  %408 = add nsw i64 %404, 8
  %409 = getelementptr inbounds float, float* %3, i64 %408
  %410 = bitcast float* %409 to <8 x float>*
  %411 = load <8 x float>, <8 x float>* %410, align 1, !tbaa !12
  %412 = add nsw i64 %404, 16
  %413 = getelementptr inbounds float, float* %3, i64 %412
  %414 = bitcast float* %413 to <8 x float>*
  %415 = load <8 x float>, <8 x float>* %414, align 1, !tbaa !12
  %416 = add nsw i64 %404, 24
  %417 = getelementptr inbounds float, float* %3, i64 %416
  %418 = bitcast float* %417 to <8 x float>*
  %419 = load <8 x float>, <8 x float>* %418, align 1, !tbaa !12
  %420 = add nsw i64 %404, 32
  %421 = getelementptr inbounds float, float* %3, i64 %420
  %422 = bitcast float* %421 to <8 x float>*
  %423 = load <8 x float>, <8 x float>* %422, align 1, !tbaa !12
  %424 = add nsw i64 %404, 40
  %425 = getelementptr inbounds float, float* %3, i64 %424
  %426 = bitcast float* %425 to <8 x float>*
  %427 = load <8 x float>, <8 x float>* %426, align 1, !tbaa !12
  %428 = add nsw i64 %404, 48
  %429 = getelementptr inbounds float, float* %3, i64 %428
  %430 = bitcast float* %429 to <8 x float>*
  %431 = load <8 x float>, <8 x float>* %430, align 1, !tbaa !12
  %432 = add nsw i64 %404, 56
  %433 = getelementptr inbounds float, float* %3, i64 %432
  %434 = bitcast float* %433 to <8 x float>*
  %435 = load <8 x float>, <8 x float>* %434, align 1, !tbaa !12
  %436 = add nsw i64 %404, 64
  %437 = getelementptr inbounds float, float* %3, i64 %436
  %438 = bitcast float* %437 to <8 x float>*
  %439 = load <8 x float>, <8 x float>* %438, align 1, !tbaa !12
  %440 = add nsw i64 %404, 72
  %441 = getelementptr inbounds float, float* %3, i64 %440
  %442 = bitcast float* %441 to <8 x float>*
  %443 = load <8 x float>, <8 x float>* %442, align 1, !tbaa !12
  %444 = add nsw i64 %404, 80
  %445 = getelementptr inbounds float, float* %3, i64 %444
  %446 = bitcast float* %445 to <8 x float>*
  %447 = load <8 x float>, <8 x float>* %446, align 1, !tbaa !12
  %448 = add nsw i64 %404, 88
  %449 = getelementptr inbounds float, float* %3, i64 %448
  %450 = bitcast float* %449 to <8 x float>*
  %451 = load <8 x float>, <8 x float>* %450, align 1, !tbaa !12
  %452 = add nsw i64 %404, 96
  %453 = getelementptr inbounds float, float* %3, i64 %452
  %454 = bitcast float* %453 to <8 x float>*
  %455 = load <8 x float>, <8 x float>* %454, align 1, !tbaa !12
  %456 = add nsw i64 %404, 104
  %457 = getelementptr inbounds float, float* %3, i64 %456
  %458 = bitcast float* %457 to <8 x float>*
  %459 = load <8 x float>, <8 x float>* %458, align 1, !tbaa !12
  %460 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %407, <8 x float> %30, <8 x float> %351) #10
  %461 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %411, <8 x float> %30, <8 x float> %355) #10
  %462 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %415, <8 x float> %30, <8 x float> %359) #10
  %463 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %419, <8 x float> %30, <8 x float> %363) #10
  %464 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %423, <8 x float> %30, <8 x float> %367) #10
  %465 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %427, <8 x float> %30, <8 x float> %371) #10
  %466 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %431, <8 x float> %30, <8 x float> %375) #10
  %467 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %435, <8 x float> %30, <8 x float> %379) #10
  %468 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %439, <8 x float> %30, <8 x float> %383) #10
  %469 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %443, <8 x float> %30, <8 x float> %387) #10
  %470 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %447, <8 x float> %30, <8 x float> %391) #10
  %471 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %451, <8 x float> %30, <8 x float> %395) #10
  %472 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %455, <8 x float> %30, <8 x float> %399) #10
  %473 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %459, <8 x float> %30, <8 x float> %403) #10
  store <8 x float> %460, <8 x float>* %350, align 1, !tbaa !12
  store <8 x float> %461, <8 x float>* %354, align 1, !tbaa !12
  store <8 x float> %462, <8 x float>* %358, align 1, !tbaa !12
  store <8 x float> %463, <8 x float>* %362, align 1, !tbaa !12
  store <8 x float> %464, <8 x float>* %366, align 1, !tbaa !12
  store <8 x float> %465, <8 x float>* %370, align 1, !tbaa !12
  store <8 x float> %466, <8 x float>* %374, align 1, !tbaa !12
  store <8 x float> %467, <8 x float>* %378, align 1, !tbaa !12
  store <8 x float> %468, <8 x float>* %382, align 1, !tbaa !12
  store <8 x float> %469, <8 x float>* %386, align 1, !tbaa !12
  store <8 x float> %470, <8 x float>* %390, align 1, !tbaa !12
  store <8 x float> %471, <8 x float>* %394, align 1, !tbaa !12
  store <8 x float> %472, <8 x float>* %398, align 1, !tbaa !12
  store <8 x float> %473, <8 x float>* %402, align 1, !tbaa !12
  %474 = add nuw nsw i64 %291, 112
  %475 = icmp ult i64 %474, %82
  br i1 %475, label %290, label %284

476:                                              ; preds = %483, %77, %284
  %477 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %478 = icmp sgt i32 %477, 0
  br i1 %478, label %479, label %1853

479:                                              ; preds = %476
  %480 = zext i32 %477 to i64
  %481 = trunc i64 %36 to i32
  %482 = mul nsw i32 %477, %481
  br label %675

483:                                              ; preds = %285, %483
  %484 = phi i64 [ 0, %285 ], [ %667, %483 ]
  %485 = getelementptr inbounds float, float* %5, i64 %484
  %486 = getelementptr inbounds float, float* %485, i64 8
  %487 = bitcast float* %486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %487, i32 0, i32 1, i32 1)
  %488 = getelementptr inbounds float, float* %3, i64 %484
  %489 = getelementptr inbounds float, float* %488, i64 8
  %490 = bitcast float* %489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %490, i32 0, i32 1, i32 1)
  %491 = getelementptr inbounds float, float* %485, i64 16
  %492 = bitcast float* %491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %492, i32 0, i32 1, i32 1)
  %493 = getelementptr inbounds float, float* %488, i64 16
  %494 = bitcast float* %493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %494, i32 0, i32 1, i32 1)
  %495 = getelementptr inbounds float, float* %485, i64 24
  %496 = bitcast float* %495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %496, i32 0, i32 1, i32 1)
  %497 = getelementptr inbounds float, float* %488, i64 24
  %498 = bitcast float* %497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %498, i32 0, i32 1, i32 1)
  %499 = getelementptr inbounds float, float* %485, i64 32
  %500 = bitcast float* %499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %500, i32 0, i32 1, i32 1)
  %501 = getelementptr inbounds float, float* %488, i64 32
  %502 = bitcast float* %501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %502, i32 0, i32 1, i32 1)
  %503 = getelementptr inbounds float, float* %485, i64 40
  %504 = bitcast float* %503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %504, i32 0, i32 1, i32 1)
  %505 = getelementptr inbounds float, float* %488, i64 40
  %506 = bitcast float* %505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %506, i32 0, i32 1, i32 1)
  %507 = getelementptr inbounds float, float* %485, i64 48
  %508 = bitcast float* %507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %508, i32 0, i32 1, i32 1)
  %509 = getelementptr inbounds float, float* %488, i64 48
  %510 = bitcast float* %509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %510, i32 0, i32 1, i32 1)
  %511 = getelementptr inbounds float, float* %485, i64 56
  %512 = bitcast float* %511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %512, i32 0, i32 1, i32 1)
  %513 = getelementptr inbounds float, float* %488, i64 56
  %514 = bitcast float* %513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %514, i32 0, i32 1, i32 1)
  %515 = getelementptr inbounds float, float* %485, i64 64
  %516 = bitcast float* %515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %516, i32 0, i32 1, i32 1)
  %517 = getelementptr inbounds float, float* %488, i64 64
  %518 = bitcast float* %517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %518, i32 0, i32 1, i32 1)
  %519 = getelementptr inbounds float, float* %485, i64 72
  %520 = bitcast float* %519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %520, i32 0, i32 1, i32 1)
  %521 = getelementptr inbounds float, float* %488, i64 72
  %522 = bitcast float* %521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %522, i32 0, i32 1, i32 1)
  %523 = getelementptr inbounds float, float* %485, i64 80
  %524 = bitcast float* %523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %524, i32 0, i32 1, i32 1)
  %525 = getelementptr inbounds float, float* %488, i64 80
  %526 = bitcast float* %525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %526, i32 0, i32 1, i32 1)
  %527 = getelementptr inbounds float, float* %485, i64 88
  %528 = bitcast float* %527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %528, i32 0, i32 1, i32 1)
  %529 = getelementptr inbounds float, float* %488, i64 88
  %530 = bitcast float* %529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %530, i32 0, i32 1, i32 1)
  %531 = getelementptr inbounds float, float* %485, i64 96
  %532 = bitcast float* %531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %532, i32 0, i32 1, i32 1)
  %533 = getelementptr inbounds float, float* %488, i64 96
  %534 = bitcast float* %533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %534, i32 0, i32 1, i32 1)
  %535 = getelementptr inbounds float, float* %485, i64 104
  %536 = bitcast float* %535 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %536, i32 0, i32 1, i32 1)
  %537 = getelementptr inbounds float, float* %488, i64 104
  %538 = bitcast float* %537 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %538, i32 0, i32 1, i32 1)
  %539 = getelementptr inbounds float, float* %485, i64 112
  %540 = bitcast float* %539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %540, i32 0, i32 1, i32 1)
  %541 = getelementptr inbounds float, float* %488, i64 112
  %542 = bitcast float* %541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %542, i32 0, i32 1, i32 1)
  %543 = bitcast float* %485 to <8 x float>*
  %544 = load <8 x float>, <8 x float>* %543, align 1, !tbaa !12
  %545 = or i64 %484, 8
  %546 = getelementptr inbounds float, float* %5, i64 %545
  %547 = bitcast float* %546 to <8 x float>*
  %548 = load <8 x float>, <8 x float>* %547, align 1, !tbaa !12
  %549 = add nuw nsw i64 %484, 16
  %550 = getelementptr inbounds float, float* %5, i64 %549
  %551 = bitcast float* %550 to <8 x float>*
  %552 = load <8 x float>, <8 x float>* %551, align 1, !tbaa !12
  %553 = add nuw nsw i64 %484, 24
  %554 = getelementptr inbounds float, float* %5, i64 %553
  %555 = bitcast float* %554 to <8 x float>*
  %556 = load <8 x float>, <8 x float>* %555, align 1, !tbaa !12
  %557 = add nuw nsw i64 %484, 32
  %558 = getelementptr inbounds float, float* %5, i64 %557
  %559 = bitcast float* %558 to <8 x float>*
  %560 = load <8 x float>, <8 x float>* %559, align 1, !tbaa !12
  %561 = add nuw nsw i64 %484, 40
  %562 = getelementptr inbounds float, float* %5, i64 %561
  %563 = bitcast float* %562 to <8 x float>*
  %564 = load <8 x float>, <8 x float>* %563, align 1, !tbaa !12
  %565 = add nuw nsw i64 %484, 48
  %566 = getelementptr inbounds float, float* %5, i64 %565
  %567 = bitcast float* %566 to <8 x float>*
  %568 = load <8 x float>, <8 x float>* %567, align 1, !tbaa !12
  %569 = add nuw nsw i64 %484, 56
  %570 = getelementptr inbounds float, float* %5, i64 %569
  %571 = bitcast float* %570 to <8 x float>*
  %572 = load <8 x float>, <8 x float>* %571, align 1, !tbaa !12
  %573 = add nuw nsw i64 %484, 64
  %574 = getelementptr inbounds float, float* %5, i64 %573
  %575 = bitcast float* %574 to <8 x float>*
  %576 = load <8 x float>, <8 x float>* %575, align 1, !tbaa !12
  %577 = add nuw nsw i64 %484, 72
  %578 = getelementptr inbounds float, float* %5, i64 %577
  %579 = bitcast float* %578 to <8 x float>*
  %580 = load <8 x float>, <8 x float>* %579, align 1, !tbaa !12
  %581 = add nuw nsw i64 %484, 80
  %582 = getelementptr inbounds float, float* %5, i64 %581
  %583 = bitcast float* %582 to <8 x float>*
  %584 = load <8 x float>, <8 x float>* %583, align 1, !tbaa !12
  %585 = add nuw nsw i64 %484, 88
  %586 = getelementptr inbounds float, float* %5, i64 %585
  %587 = bitcast float* %586 to <8 x float>*
  %588 = load <8 x float>, <8 x float>* %587, align 1, !tbaa !12
  %589 = add nuw nsw i64 %484, 96
  %590 = getelementptr inbounds float, float* %5, i64 %589
  %591 = bitcast float* %590 to <8 x float>*
  %592 = load <8 x float>, <8 x float>* %591, align 1, !tbaa !12
  %593 = add nuw nsw i64 %484, 104
  %594 = getelementptr inbounds float, float* %5, i64 %593
  %595 = bitcast float* %594 to <8 x float>*
  %596 = load <8 x float>, <8 x float>* %595, align 1, !tbaa !12
  %597 = add nsw i64 %484, %288
  %598 = getelementptr inbounds float, float* %3, i64 %597
  %599 = bitcast float* %598 to <8 x float>*
  %600 = load <8 x float>, <8 x float>* %599, align 1, !tbaa !12
  %601 = add nsw i64 %597, 8
  %602 = getelementptr inbounds float, float* %3, i64 %601
  %603 = bitcast float* %602 to <8 x float>*
  %604 = load <8 x float>, <8 x float>* %603, align 1, !tbaa !12
  %605 = add nsw i64 %597, 16
  %606 = getelementptr inbounds float, float* %3, i64 %605
  %607 = bitcast float* %606 to <8 x float>*
  %608 = load <8 x float>, <8 x float>* %607, align 1, !tbaa !12
  %609 = add nsw i64 %597, 24
  %610 = getelementptr inbounds float, float* %3, i64 %609
  %611 = bitcast float* %610 to <8 x float>*
  %612 = load <8 x float>, <8 x float>* %611, align 1, !tbaa !12
  %613 = add nsw i64 %597, 32
  %614 = getelementptr inbounds float, float* %3, i64 %613
  %615 = bitcast float* %614 to <8 x float>*
  %616 = load <8 x float>, <8 x float>* %615, align 1, !tbaa !12
  %617 = add nsw i64 %597, 40
  %618 = getelementptr inbounds float, float* %3, i64 %617
  %619 = bitcast float* %618 to <8 x float>*
  %620 = load <8 x float>, <8 x float>* %619, align 1, !tbaa !12
  %621 = add nsw i64 %597, 48
  %622 = getelementptr inbounds float, float* %3, i64 %621
  %623 = bitcast float* %622 to <8 x float>*
  %624 = load <8 x float>, <8 x float>* %623, align 1, !tbaa !12
  %625 = add nsw i64 %597, 56
  %626 = getelementptr inbounds float, float* %3, i64 %625
  %627 = bitcast float* %626 to <8 x float>*
  %628 = load <8 x float>, <8 x float>* %627, align 1, !tbaa !12
  %629 = add nsw i64 %597, 64
  %630 = getelementptr inbounds float, float* %3, i64 %629
  %631 = bitcast float* %630 to <8 x float>*
  %632 = load <8 x float>, <8 x float>* %631, align 1, !tbaa !12
  %633 = add nsw i64 %597, 72
  %634 = getelementptr inbounds float, float* %3, i64 %633
  %635 = bitcast float* %634 to <8 x float>*
  %636 = load <8 x float>, <8 x float>* %635, align 1, !tbaa !12
  %637 = add nsw i64 %597, 80
  %638 = getelementptr inbounds float, float* %3, i64 %637
  %639 = bitcast float* %638 to <8 x float>*
  %640 = load <8 x float>, <8 x float>* %639, align 1, !tbaa !12
  %641 = add nsw i64 %597, 88
  %642 = getelementptr inbounds float, float* %3, i64 %641
  %643 = bitcast float* %642 to <8 x float>*
  %644 = load <8 x float>, <8 x float>* %643, align 1, !tbaa !12
  %645 = add nsw i64 %597, 96
  %646 = getelementptr inbounds float, float* %3, i64 %645
  %647 = bitcast float* %646 to <8 x float>*
  %648 = load <8 x float>, <8 x float>* %647, align 1, !tbaa !12
  %649 = add nsw i64 %597, 104
  %650 = getelementptr inbounds float, float* %3, i64 %649
  %651 = bitcast float* %650 to <8 x float>*
  %652 = load <8 x float>, <8 x float>* %651, align 1, !tbaa !12
  %653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %600, <8 x float> %35, <8 x float> %544) #10
  %654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %604, <8 x float> %35, <8 x float> %548) #10
  %655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %608, <8 x float> %35, <8 x float> %552) #10
  %656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %612, <8 x float> %35, <8 x float> %556) #10
  %657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %616, <8 x float> %35, <8 x float> %560) #10
  %658 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %620, <8 x float> %35, <8 x float> %564) #10
  %659 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %624, <8 x float> %35, <8 x float> %568) #10
  %660 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %628, <8 x float> %35, <8 x float> %572) #10
  %661 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %632, <8 x float> %35, <8 x float> %576) #10
  %662 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %636, <8 x float> %35, <8 x float> %580) #10
  %663 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %640, <8 x float> %35, <8 x float> %584) #10
  %664 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %644, <8 x float> %35, <8 x float> %588) #10
  %665 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %648, <8 x float> %35, <8 x float> %592) #10
  %666 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %652, <8 x float> %35, <8 x float> %596) #10
  store <8 x float> %653, <8 x float>* %543, align 1, !tbaa !12
  store <8 x float> %654, <8 x float>* %547, align 1, !tbaa !12
  store <8 x float> %655, <8 x float>* %551, align 1, !tbaa !12
  store <8 x float> %656, <8 x float>* %555, align 1, !tbaa !12
  store <8 x float> %657, <8 x float>* %559, align 1, !tbaa !12
  store <8 x float> %658, <8 x float>* %563, align 1, !tbaa !12
  store <8 x float> %659, <8 x float>* %567, align 1, !tbaa !12
  store <8 x float> %660, <8 x float>* %571, align 1, !tbaa !12
  store <8 x float> %661, <8 x float>* %575, align 1, !tbaa !12
  store <8 x float> %662, <8 x float>* %579, align 1, !tbaa !12
  store <8 x float> %663, <8 x float>* %583, align 1, !tbaa !12
  store <8 x float> %664, <8 x float>* %587, align 1, !tbaa !12
  store <8 x float> %665, <8 x float>* %591, align 1, !tbaa !12
  store <8 x float> %666, <8 x float>* %595, align 1, !tbaa !12
  %667 = add nuw nsw i64 %484, 112
  %668 = icmp ult i64 %667, %289
  br i1 %668, label %483, label %476

669:                                              ; preds = %675
  br i1 %478, label %670, label %1068

670:                                              ; preds = %669
  %671 = trunc i64 %41 to i32
  %672 = mul nsw i32 %477, %671
  %673 = sext i32 %672 to i64
  %674 = zext i32 %477 to i64
  br label %882

675:                                              ; preds = %479, %675
  %676 = phi i64 [ 0, %479 ], [ %874, %675 ]
  %677 = getelementptr inbounds float, float* %5, i64 %676
  %678 = getelementptr inbounds float, float* %677, i64 8
  %679 = bitcast float* %678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %679, i32 0, i32 1, i32 1)
  %680 = getelementptr inbounds float, float* %3, i64 %676
  %681 = getelementptr inbounds float, float* %680, i64 8
  %682 = bitcast float* %681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %682, i32 0, i32 1, i32 1)
  %683 = getelementptr inbounds float, float* %677, i64 16
  %684 = bitcast float* %683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %684, i32 0, i32 1, i32 1)
  %685 = getelementptr inbounds float, float* %680, i64 16
  %686 = bitcast float* %685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %686, i32 0, i32 1, i32 1)
  %687 = getelementptr inbounds float, float* %677, i64 24
  %688 = bitcast float* %687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %688, i32 0, i32 1, i32 1)
  %689 = getelementptr inbounds float, float* %680, i64 24
  %690 = bitcast float* %689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %690, i32 0, i32 1, i32 1)
  %691 = getelementptr inbounds float, float* %677, i64 32
  %692 = bitcast float* %691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %692, i32 0, i32 1, i32 1)
  %693 = getelementptr inbounds float, float* %680, i64 32
  %694 = bitcast float* %693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %694, i32 0, i32 1, i32 1)
  %695 = getelementptr inbounds float, float* %677, i64 40
  %696 = bitcast float* %695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %696, i32 0, i32 1, i32 1)
  %697 = getelementptr inbounds float, float* %680, i64 40
  %698 = bitcast float* %697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %698, i32 0, i32 1, i32 1)
  %699 = getelementptr inbounds float, float* %677, i64 48
  %700 = bitcast float* %699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %700, i32 0, i32 1, i32 1)
  %701 = getelementptr inbounds float, float* %680, i64 48
  %702 = bitcast float* %701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %702, i32 0, i32 1, i32 1)
  %703 = getelementptr inbounds float, float* %677, i64 56
  %704 = bitcast float* %703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %704, i32 0, i32 1, i32 1)
  %705 = getelementptr inbounds float, float* %680, i64 56
  %706 = bitcast float* %705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %706, i32 0, i32 1, i32 1)
  %707 = getelementptr inbounds float, float* %677, i64 64
  %708 = bitcast float* %707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %708, i32 0, i32 1, i32 1)
  %709 = getelementptr inbounds float, float* %680, i64 64
  %710 = bitcast float* %709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %710, i32 0, i32 1, i32 1)
  %711 = getelementptr inbounds float, float* %677, i64 72
  %712 = bitcast float* %711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %712, i32 0, i32 1, i32 1)
  %713 = getelementptr inbounds float, float* %680, i64 72
  %714 = bitcast float* %713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %714, i32 0, i32 1, i32 1)
  %715 = getelementptr inbounds float, float* %677, i64 80
  %716 = bitcast float* %715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %716, i32 0, i32 1, i32 1)
  %717 = getelementptr inbounds float, float* %680, i64 80
  %718 = bitcast float* %717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %718, i32 0, i32 1, i32 1)
  %719 = getelementptr inbounds float, float* %677, i64 88
  %720 = bitcast float* %719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %720, i32 0, i32 1, i32 1)
  %721 = getelementptr inbounds float, float* %680, i64 88
  %722 = bitcast float* %721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %722, i32 0, i32 1, i32 1)
  %723 = getelementptr inbounds float, float* %677, i64 96
  %724 = bitcast float* %723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %724, i32 0, i32 1, i32 1)
  %725 = getelementptr inbounds float, float* %680, i64 96
  %726 = bitcast float* %725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %726, i32 0, i32 1, i32 1)
  %727 = getelementptr inbounds float, float* %677, i64 104
  %728 = bitcast float* %727 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %728, i32 0, i32 1, i32 1)
  %729 = getelementptr inbounds float, float* %680, i64 104
  %730 = bitcast float* %729 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %730, i32 0, i32 1, i32 1)
  %731 = getelementptr inbounds float, float* %677, i64 112
  %732 = bitcast float* %731 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %732, i32 0, i32 1, i32 1)
  %733 = getelementptr inbounds float, float* %680, i64 112
  %734 = bitcast float* %733 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %734, i32 0, i32 1, i32 1)
  %735 = bitcast float* %677 to <8 x float>*
  %736 = load <8 x float>, <8 x float>* %735, align 1, !tbaa !12
  %737 = or i64 %676, 8
  %738 = getelementptr inbounds float, float* %5, i64 %737
  %739 = bitcast float* %738 to <8 x float>*
  %740 = load <8 x float>, <8 x float>* %739, align 1, !tbaa !12
  %741 = add nuw nsw i64 %676, 16
  %742 = getelementptr inbounds float, float* %5, i64 %741
  %743 = bitcast float* %742 to <8 x float>*
  %744 = load <8 x float>, <8 x float>* %743, align 1, !tbaa !12
  %745 = add nuw nsw i64 %676, 24
  %746 = getelementptr inbounds float, float* %5, i64 %745
  %747 = bitcast float* %746 to <8 x float>*
  %748 = load <8 x float>, <8 x float>* %747, align 1, !tbaa !12
  %749 = add nuw nsw i64 %676, 32
  %750 = getelementptr inbounds float, float* %5, i64 %749
  %751 = bitcast float* %750 to <8 x float>*
  %752 = load <8 x float>, <8 x float>* %751, align 1, !tbaa !12
  %753 = add nuw nsw i64 %676, 40
  %754 = getelementptr inbounds float, float* %5, i64 %753
  %755 = bitcast float* %754 to <8 x float>*
  %756 = load <8 x float>, <8 x float>* %755, align 1, !tbaa !12
  %757 = add nuw nsw i64 %676, 48
  %758 = getelementptr inbounds float, float* %5, i64 %757
  %759 = bitcast float* %758 to <8 x float>*
  %760 = load <8 x float>, <8 x float>* %759, align 1, !tbaa !12
  %761 = add nuw nsw i64 %676, 56
  %762 = getelementptr inbounds float, float* %5, i64 %761
  %763 = bitcast float* %762 to <8 x float>*
  %764 = load <8 x float>, <8 x float>* %763, align 1, !tbaa !12
  %765 = add nuw nsw i64 %676, 64
  %766 = getelementptr inbounds float, float* %5, i64 %765
  %767 = bitcast float* %766 to <8 x float>*
  %768 = load <8 x float>, <8 x float>* %767, align 1, !tbaa !12
  %769 = add nuw nsw i64 %676, 72
  %770 = getelementptr inbounds float, float* %5, i64 %769
  %771 = bitcast float* %770 to <8 x float>*
  %772 = load <8 x float>, <8 x float>* %771, align 1, !tbaa !12
  %773 = add nuw nsw i64 %676, 80
  %774 = getelementptr inbounds float, float* %5, i64 %773
  %775 = bitcast float* %774 to <8 x float>*
  %776 = load <8 x float>, <8 x float>* %775, align 1, !tbaa !12
  %777 = add nuw nsw i64 %676, 88
  %778 = getelementptr inbounds float, float* %5, i64 %777
  %779 = bitcast float* %778 to <8 x float>*
  %780 = load <8 x float>, <8 x float>* %779, align 1, !tbaa !12
  %781 = add nuw nsw i64 %676, 96
  %782 = getelementptr inbounds float, float* %5, i64 %781
  %783 = bitcast float* %782 to <8 x float>*
  %784 = load <8 x float>, <8 x float>* %783, align 1, !tbaa !12
  %785 = add nuw nsw i64 %676, 104
  %786 = getelementptr inbounds float, float* %5, i64 %785
  %787 = bitcast float* %786 to <8 x float>*
  %788 = load <8 x float>, <8 x float>* %787, align 1, !tbaa !12
  %789 = trunc i64 %676 to i32
  %790 = add nsw i32 %482, %789
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds float, float* %3, i64 %791
  %793 = bitcast float* %792 to <8 x float>*
  %794 = load <8 x float>, <8 x float>* %793, align 1, !tbaa !12
  %795 = add nsw i32 %790, 8
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds float, float* %3, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %799 = load <8 x float>, <8 x float>* %798, align 1, !tbaa !12
  %800 = add nsw i32 %790, 16
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds float, float* %3, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nsw i32 %790, 24
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds float, float* %3, i64 %806
  %808 = bitcast float* %807 to <8 x float>*
  %809 = load <8 x float>, <8 x float>* %808, align 1, !tbaa !12
  %810 = add nsw i32 %790, 32
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds float, float* %3, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %814 = load <8 x float>, <8 x float>* %813, align 1, !tbaa !12
  %815 = add nsw i32 %790, 40
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds float, float* %3, i64 %816
  %818 = bitcast float* %817 to <8 x float>*
  %819 = load <8 x float>, <8 x float>* %818, align 1, !tbaa !12
  %820 = add nsw i32 %790, 48
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float, float* %3, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %824 = load <8 x float>, <8 x float>* %823, align 1, !tbaa !12
  %825 = add nsw i32 %790, 56
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds float, float* %3, i64 %826
  %828 = bitcast float* %827 to <8 x float>*
  %829 = load <8 x float>, <8 x float>* %828, align 1, !tbaa !12
  %830 = add nsw i32 %790, 64
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds float, float* %3, i64 %831
  %833 = bitcast float* %832 to <8 x float>*
  %834 = load <8 x float>, <8 x float>* %833, align 1, !tbaa !12
  %835 = add nsw i32 %790, 72
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float, float* %3, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nsw i32 %790, 80
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds float, float* %3, i64 %841
  %843 = bitcast float* %842 to <8 x float>*
  %844 = load <8 x float>, <8 x float>* %843, align 1, !tbaa !12
  %845 = add nsw i32 %790, 88
  %846 = sext i32 %845 to i64
  %847 = getelementptr inbounds float, float* %3, i64 %846
  %848 = bitcast float* %847 to <8 x float>*
  %849 = load <8 x float>, <8 x float>* %848, align 1, !tbaa !12
  %850 = add nsw i32 %790, 96
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds float, float* %3, i64 %851
  %853 = bitcast float* %852 to <8 x float>*
  %854 = load <8 x float>, <8 x float>* %853, align 1, !tbaa !12
  %855 = add nsw i32 %790, 104
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds float, float* %3, i64 %856
  %858 = bitcast float* %857 to <8 x float>*
  %859 = load <8 x float>, <8 x float>* %858, align 1, !tbaa !12
  %860 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %794, <8 x float> %40, <8 x float> %736) #10
  %861 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %799, <8 x float> %40, <8 x float> %740) #10
  %862 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %804, <8 x float> %40, <8 x float> %744) #10
  %863 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %809, <8 x float> %40, <8 x float> %748) #10
  %864 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %814, <8 x float> %40, <8 x float> %752) #10
  %865 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %819, <8 x float> %40, <8 x float> %756) #10
  %866 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %824, <8 x float> %40, <8 x float> %760) #10
  %867 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %829, <8 x float> %40, <8 x float> %764) #10
  %868 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %834, <8 x float> %40, <8 x float> %768) #10
  %869 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %839, <8 x float> %40, <8 x float> %772) #10
  %870 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %844, <8 x float> %40, <8 x float> %776) #10
  %871 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %849, <8 x float> %40, <8 x float> %780) #10
  %872 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %854, <8 x float> %40, <8 x float> %784) #10
  %873 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %859, <8 x float> %40, <8 x float> %788) #10
  store <8 x float> %860, <8 x float>* %735, align 1, !tbaa !12
  store <8 x float> %861, <8 x float>* %739, align 1, !tbaa !12
  store <8 x float> %862, <8 x float>* %743, align 1, !tbaa !12
  store <8 x float> %863, <8 x float>* %747, align 1, !tbaa !12
  store <8 x float> %864, <8 x float>* %751, align 1, !tbaa !12
  store <8 x float> %865, <8 x float>* %755, align 1, !tbaa !12
  store <8 x float> %866, <8 x float>* %759, align 1, !tbaa !12
  store <8 x float> %867, <8 x float>* %763, align 1, !tbaa !12
  store <8 x float> %868, <8 x float>* %767, align 1, !tbaa !12
  store <8 x float> %869, <8 x float>* %771, align 1, !tbaa !12
  store <8 x float> %870, <8 x float>* %775, align 1, !tbaa !12
  store <8 x float> %871, <8 x float>* %779, align 1, !tbaa !12
  store <8 x float> %872, <8 x float>* %783, align 1, !tbaa !12
  store <8 x float> %873, <8 x float>* %787, align 1, !tbaa !12
  %874 = add nuw nsw i64 %676, 112
  %875 = icmp ult i64 %874, %480
  br i1 %875, label %675, label %669

876:                                              ; preds = %882
  br i1 %478, label %877, label %1068

877:                                              ; preds = %876
  %878 = trunc i64 %46 to i32
  %879 = mul nsw i32 %477, %878
  %880 = sext i32 %879 to i64
  %881 = zext i32 %477 to i64
  br label %1075

882:                                              ; preds = %670, %882
  %883 = phi i64 [ 0, %670 ], [ %1066, %882 ]
  %884 = getelementptr inbounds float, float* %5, i64 %883
  %885 = getelementptr inbounds float, float* %884, i64 8
  %886 = bitcast float* %885 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %886, i32 0, i32 1, i32 1)
  %887 = getelementptr inbounds float, float* %3, i64 %883
  %888 = getelementptr inbounds float, float* %887, i64 8
  %889 = bitcast float* %888 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %889, i32 0, i32 1, i32 1)
  %890 = getelementptr inbounds float, float* %884, i64 16
  %891 = bitcast float* %890 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %891, i32 0, i32 1, i32 1)
  %892 = getelementptr inbounds float, float* %887, i64 16
  %893 = bitcast float* %892 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %893, i32 0, i32 1, i32 1)
  %894 = getelementptr inbounds float, float* %884, i64 24
  %895 = bitcast float* %894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %895, i32 0, i32 1, i32 1)
  %896 = getelementptr inbounds float, float* %887, i64 24
  %897 = bitcast float* %896 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %897, i32 0, i32 1, i32 1)
  %898 = getelementptr inbounds float, float* %884, i64 32
  %899 = bitcast float* %898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %899, i32 0, i32 1, i32 1)
  %900 = getelementptr inbounds float, float* %887, i64 32
  %901 = bitcast float* %900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %901, i32 0, i32 1, i32 1)
  %902 = getelementptr inbounds float, float* %884, i64 40
  %903 = bitcast float* %902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %903, i32 0, i32 1, i32 1)
  %904 = getelementptr inbounds float, float* %887, i64 40
  %905 = bitcast float* %904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %905, i32 0, i32 1, i32 1)
  %906 = getelementptr inbounds float, float* %884, i64 48
  %907 = bitcast float* %906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %907, i32 0, i32 1, i32 1)
  %908 = getelementptr inbounds float, float* %887, i64 48
  %909 = bitcast float* %908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %909, i32 0, i32 1, i32 1)
  %910 = getelementptr inbounds float, float* %884, i64 56
  %911 = bitcast float* %910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %911, i32 0, i32 1, i32 1)
  %912 = getelementptr inbounds float, float* %887, i64 56
  %913 = bitcast float* %912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %913, i32 0, i32 1, i32 1)
  %914 = getelementptr inbounds float, float* %884, i64 64
  %915 = bitcast float* %914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %915, i32 0, i32 1, i32 1)
  %916 = getelementptr inbounds float, float* %887, i64 64
  %917 = bitcast float* %916 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %917, i32 0, i32 1, i32 1)
  %918 = getelementptr inbounds float, float* %884, i64 72
  %919 = bitcast float* %918 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %919, i32 0, i32 1, i32 1)
  %920 = getelementptr inbounds float, float* %887, i64 72
  %921 = bitcast float* %920 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %921, i32 0, i32 1, i32 1)
  %922 = getelementptr inbounds float, float* %884, i64 80
  %923 = bitcast float* %922 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %923, i32 0, i32 1, i32 1)
  %924 = getelementptr inbounds float, float* %887, i64 80
  %925 = bitcast float* %924 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %925, i32 0, i32 1, i32 1)
  %926 = getelementptr inbounds float, float* %884, i64 88
  %927 = bitcast float* %926 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %927, i32 0, i32 1, i32 1)
  %928 = getelementptr inbounds float, float* %887, i64 88
  %929 = bitcast float* %928 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %929, i32 0, i32 1, i32 1)
  %930 = getelementptr inbounds float, float* %884, i64 96
  %931 = bitcast float* %930 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %931, i32 0, i32 1, i32 1)
  %932 = getelementptr inbounds float, float* %887, i64 96
  %933 = bitcast float* %932 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %933, i32 0, i32 1, i32 1)
  %934 = getelementptr inbounds float, float* %884, i64 104
  %935 = bitcast float* %934 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %935, i32 0, i32 1, i32 1)
  %936 = getelementptr inbounds float, float* %887, i64 104
  %937 = bitcast float* %936 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %937, i32 0, i32 1, i32 1)
  %938 = getelementptr inbounds float, float* %884, i64 112
  %939 = bitcast float* %938 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %939, i32 0, i32 1, i32 1)
  %940 = getelementptr inbounds float, float* %887, i64 112
  %941 = bitcast float* %940 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %941, i32 0, i32 1, i32 1)
  %942 = bitcast float* %884 to <8 x float>*
  %943 = load <8 x float>, <8 x float>* %942, align 1, !tbaa !12
  %944 = or i64 %883, 8
  %945 = getelementptr inbounds float, float* %5, i64 %944
  %946 = bitcast float* %945 to <8 x float>*
  %947 = load <8 x float>, <8 x float>* %946, align 1, !tbaa !12
  %948 = add nuw nsw i64 %883, 16
  %949 = getelementptr inbounds float, float* %5, i64 %948
  %950 = bitcast float* %949 to <8 x float>*
  %951 = load <8 x float>, <8 x float>* %950, align 1, !tbaa !12
  %952 = add nuw nsw i64 %883, 24
  %953 = getelementptr inbounds float, float* %5, i64 %952
  %954 = bitcast float* %953 to <8 x float>*
  %955 = load <8 x float>, <8 x float>* %954, align 1, !tbaa !12
  %956 = add nuw nsw i64 %883, 32
  %957 = getelementptr inbounds float, float* %5, i64 %956
  %958 = bitcast float* %957 to <8 x float>*
  %959 = load <8 x float>, <8 x float>* %958, align 1, !tbaa !12
  %960 = add nuw nsw i64 %883, 40
  %961 = getelementptr inbounds float, float* %5, i64 %960
  %962 = bitcast float* %961 to <8 x float>*
  %963 = load <8 x float>, <8 x float>* %962, align 1, !tbaa !12
  %964 = add nuw nsw i64 %883, 48
  %965 = getelementptr inbounds float, float* %5, i64 %964
  %966 = bitcast float* %965 to <8 x float>*
  %967 = load <8 x float>, <8 x float>* %966, align 1, !tbaa !12
  %968 = add nuw nsw i64 %883, 56
  %969 = getelementptr inbounds float, float* %5, i64 %968
  %970 = bitcast float* %969 to <8 x float>*
  %971 = load <8 x float>, <8 x float>* %970, align 1, !tbaa !12
  %972 = add nuw nsw i64 %883, 64
  %973 = getelementptr inbounds float, float* %5, i64 %972
  %974 = bitcast float* %973 to <8 x float>*
  %975 = load <8 x float>, <8 x float>* %974, align 1, !tbaa !12
  %976 = add nuw nsw i64 %883, 72
  %977 = getelementptr inbounds float, float* %5, i64 %976
  %978 = bitcast float* %977 to <8 x float>*
  %979 = load <8 x float>, <8 x float>* %978, align 1, !tbaa !12
  %980 = add nuw nsw i64 %883, 80
  %981 = getelementptr inbounds float, float* %5, i64 %980
  %982 = bitcast float* %981 to <8 x float>*
  %983 = load <8 x float>, <8 x float>* %982, align 1, !tbaa !12
  %984 = add nuw nsw i64 %883, 88
  %985 = getelementptr inbounds float, float* %5, i64 %984
  %986 = bitcast float* %985 to <8 x float>*
  %987 = load <8 x float>, <8 x float>* %986, align 1, !tbaa !12
  %988 = add nuw nsw i64 %883, 96
  %989 = getelementptr inbounds float, float* %5, i64 %988
  %990 = bitcast float* %989 to <8 x float>*
  %991 = load <8 x float>, <8 x float>* %990, align 1, !tbaa !12
  %992 = add nuw nsw i64 %883, 104
  %993 = getelementptr inbounds float, float* %5, i64 %992
  %994 = bitcast float* %993 to <8 x float>*
  %995 = load <8 x float>, <8 x float>* %994, align 1, !tbaa !12
  %996 = add nsw i64 %883, %673
  %997 = getelementptr inbounds float, float* %3, i64 %996
  %998 = bitcast float* %997 to <8 x float>*
  %999 = load <8 x float>, <8 x float>* %998, align 1, !tbaa !12
  %1000 = add nsw i64 %996, 8
  %1001 = getelementptr inbounds float, float* %3, i64 %1000
  %1002 = bitcast float* %1001 to <8 x float>*
  %1003 = load <8 x float>, <8 x float>* %1002, align 1, !tbaa !12
  %1004 = add nsw i64 %996, 16
  %1005 = getelementptr inbounds float, float* %3, i64 %1004
  %1006 = bitcast float* %1005 to <8 x float>*
  %1007 = load <8 x float>, <8 x float>* %1006, align 1, !tbaa !12
  %1008 = add nsw i64 %996, 24
  %1009 = getelementptr inbounds float, float* %3, i64 %1008
  %1010 = bitcast float* %1009 to <8 x float>*
  %1011 = load <8 x float>, <8 x float>* %1010, align 1, !tbaa !12
  %1012 = add nsw i64 %996, 32
  %1013 = getelementptr inbounds float, float* %3, i64 %1012
  %1014 = bitcast float* %1013 to <8 x float>*
  %1015 = load <8 x float>, <8 x float>* %1014, align 1, !tbaa !12
  %1016 = add nsw i64 %996, 40
  %1017 = getelementptr inbounds float, float* %3, i64 %1016
  %1018 = bitcast float* %1017 to <8 x float>*
  %1019 = load <8 x float>, <8 x float>* %1018, align 1, !tbaa !12
  %1020 = add nsw i64 %996, 48
  %1021 = getelementptr inbounds float, float* %3, i64 %1020
  %1022 = bitcast float* %1021 to <8 x float>*
  %1023 = load <8 x float>, <8 x float>* %1022, align 1, !tbaa !12
  %1024 = add nsw i64 %996, 56
  %1025 = getelementptr inbounds float, float* %3, i64 %1024
  %1026 = bitcast float* %1025 to <8 x float>*
  %1027 = load <8 x float>, <8 x float>* %1026, align 1, !tbaa !12
  %1028 = add nsw i64 %996, 64
  %1029 = getelementptr inbounds float, float* %3, i64 %1028
  %1030 = bitcast float* %1029 to <8 x float>*
  %1031 = load <8 x float>, <8 x float>* %1030, align 1, !tbaa !12
  %1032 = add nsw i64 %996, 72
  %1033 = getelementptr inbounds float, float* %3, i64 %1032
  %1034 = bitcast float* %1033 to <8 x float>*
  %1035 = load <8 x float>, <8 x float>* %1034, align 1, !tbaa !12
  %1036 = add nsw i64 %996, 80
  %1037 = getelementptr inbounds float, float* %3, i64 %1036
  %1038 = bitcast float* %1037 to <8 x float>*
  %1039 = load <8 x float>, <8 x float>* %1038, align 1, !tbaa !12
  %1040 = add nsw i64 %996, 88
  %1041 = getelementptr inbounds float, float* %3, i64 %1040
  %1042 = bitcast float* %1041 to <8 x float>*
  %1043 = load <8 x float>, <8 x float>* %1042, align 1, !tbaa !12
  %1044 = add nsw i64 %996, 96
  %1045 = getelementptr inbounds float, float* %3, i64 %1044
  %1046 = bitcast float* %1045 to <8 x float>*
  %1047 = load <8 x float>, <8 x float>* %1046, align 1, !tbaa !12
  %1048 = add nsw i64 %996, 104
  %1049 = getelementptr inbounds float, float* %3, i64 %1048
  %1050 = bitcast float* %1049 to <8 x float>*
  %1051 = load <8 x float>, <8 x float>* %1050, align 1, !tbaa !12
  %1052 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %999, <8 x float> %45, <8 x float> %943) #10
  %1053 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1003, <8 x float> %45, <8 x float> %947) #10
  %1054 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1007, <8 x float> %45, <8 x float> %951) #10
  %1055 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1011, <8 x float> %45, <8 x float> %955) #10
  %1056 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1015, <8 x float> %45, <8 x float> %959) #10
  %1057 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1019, <8 x float> %45, <8 x float> %963) #10
  %1058 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1023, <8 x float> %45, <8 x float> %967) #10
  %1059 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1027, <8 x float> %45, <8 x float> %971) #10
  %1060 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1031, <8 x float> %45, <8 x float> %975) #10
  %1061 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1035, <8 x float> %45, <8 x float> %979) #10
  %1062 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1039, <8 x float> %45, <8 x float> %983) #10
  %1063 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1043, <8 x float> %45, <8 x float> %987) #10
  %1064 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1047, <8 x float> %45, <8 x float> %991) #10
  %1065 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1051, <8 x float> %45, <8 x float> %995) #10
  store <8 x float> %1052, <8 x float>* %942, align 1, !tbaa !12
  store <8 x float> %1053, <8 x float>* %946, align 1, !tbaa !12
  store <8 x float> %1054, <8 x float>* %950, align 1, !tbaa !12
  store <8 x float> %1055, <8 x float>* %954, align 1, !tbaa !12
  store <8 x float> %1056, <8 x float>* %958, align 1, !tbaa !12
  store <8 x float> %1057, <8 x float>* %962, align 1, !tbaa !12
  store <8 x float> %1058, <8 x float>* %966, align 1, !tbaa !12
  store <8 x float> %1059, <8 x float>* %970, align 1, !tbaa !12
  store <8 x float> %1060, <8 x float>* %974, align 1, !tbaa !12
  store <8 x float> %1061, <8 x float>* %978, align 1, !tbaa !12
  store <8 x float> %1062, <8 x float>* %982, align 1, !tbaa !12
  store <8 x float> %1063, <8 x float>* %986, align 1, !tbaa !12
  store <8 x float> %1064, <8 x float>* %990, align 1, !tbaa !12
  store <8 x float> %1065, <8 x float>* %994, align 1, !tbaa !12
  %1066 = add nuw nsw i64 %883, 112
  %1067 = icmp ult i64 %1066, %674
  br i1 %1067, label %882, label %876

1068:                                             ; preds = %1075, %669, %876
  %1069 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1070 = icmp sgt i32 %1069, 0
  br i1 %1070, label %1071, label %1853

1071:                                             ; preds = %1068
  %1072 = zext i32 %1069 to i64
  %1073 = trunc i64 %51 to i32
  %1074 = mul nsw i32 %1069, %1073
  br label %1267

1075:                                             ; preds = %877, %1075
  %1076 = phi i64 [ 0, %877 ], [ %1259, %1075 ]
  %1077 = getelementptr inbounds float, float* %5, i64 %1076
  %1078 = getelementptr inbounds float, float* %1077, i64 8
  %1079 = bitcast float* %1078 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1079, i32 0, i32 1, i32 1)
  %1080 = getelementptr inbounds float, float* %3, i64 %1076
  %1081 = getelementptr inbounds float, float* %1080, i64 8
  %1082 = bitcast float* %1081 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1082, i32 0, i32 1, i32 1)
  %1083 = getelementptr inbounds float, float* %1077, i64 16
  %1084 = bitcast float* %1083 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1084, i32 0, i32 1, i32 1)
  %1085 = getelementptr inbounds float, float* %1080, i64 16
  %1086 = bitcast float* %1085 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1086, i32 0, i32 1, i32 1)
  %1087 = getelementptr inbounds float, float* %1077, i64 24
  %1088 = bitcast float* %1087 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1088, i32 0, i32 1, i32 1)
  %1089 = getelementptr inbounds float, float* %1080, i64 24
  %1090 = bitcast float* %1089 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1090, i32 0, i32 1, i32 1)
  %1091 = getelementptr inbounds float, float* %1077, i64 32
  %1092 = bitcast float* %1091 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1092, i32 0, i32 1, i32 1)
  %1093 = getelementptr inbounds float, float* %1080, i64 32
  %1094 = bitcast float* %1093 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1094, i32 0, i32 1, i32 1)
  %1095 = getelementptr inbounds float, float* %1077, i64 40
  %1096 = bitcast float* %1095 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1096, i32 0, i32 1, i32 1)
  %1097 = getelementptr inbounds float, float* %1080, i64 40
  %1098 = bitcast float* %1097 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1098, i32 0, i32 1, i32 1)
  %1099 = getelementptr inbounds float, float* %1077, i64 48
  %1100 = bitcast float* %1099 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1100, i32 0, i32 1, i32 1)
  %1101 = getelementptr inbounds float, float* %1080, i64 48
  %1102 = bitcast float* %1101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1102, i32 0, i32 1, i32 1)
  %1103 = getelementptr inbounds float, float* %1077, i64 56
  %1104 = bitcast float* %1103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1104, i32 0, i32 1, i32 1)
  %1105 = getelementptr inbounds float, float* %1080, i64 56
  %1106 = bitcast float* %1105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1106, i32 0, i32 1, i32 1)
  %1107 = getelementptr inbounds float, float* %1077, i64 64
  %1108 = bitcast float* %1107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1108, i32 0, i32 1, i32 1)
  %1109 = getelementptr inbounds float, float* %1080, i64 64
  %1110 = bitcast float* %1109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1110, i32 0, i32 1, i32 1)
  %1111 = getelementptr inbounds float, float* %1077, i64 72
  %1112 = bitcast float* %1111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1112, i32 0, i32 1, i32 1)
  %1113 = getelementptr inbounds float, float* %1080, i64 72
  %1114 = bitcast float* %1113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1114, i32 0, i32 1, i32 1)
  %1115 = getelementptr inbounds float, float* %1077, i64 80
  %1116 = bitcast float* %1115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1116, i32 0, i32 1, i32 1)
  %1117 = getelementptr inbounds float, float* %1080, i64 80
  %1118 = bitcast float* %1117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1118, i32 0, i32 1, i32 1)
  %1119 = getelementptr inbounds float, float* %1077, i64 88
  %1120 = bitcast float* %1119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1120, i32 0, i32 1, i32 1)
  %1121 = getelementptr inbounds float, float* %1080, i64 88
  %1122 = bitcast float* %1121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1122, i32 0, i32 1, i32 1)
  %1123 = getelementptr inbounds float, float* %1077, i64 96
  %1124 = bitcast float* %1123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1124, i32 0, i32 1, i32 1)
  %1125 = getelementptr inbounds float, float* %1080, i64 96
  %1126 = bitcast float* %1125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1126, i32 0, i32 1, i32 1)
  %1127 = getelementptr inbounds float, float* %1077, i64 104
  %1128 = bitcast float* %1127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1128, i32 0, i32 1, i32 1)
  %1129 = getelementptr inbounds float, float* %1080, i64 104
  %1130 = bitcast float* %1129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1130, i32 0, i32 1, i32 1)
  %1131 = getelementptr inbounds float, float* %1077, i64 112
  %1132 = bitcast float* %1131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1132, i32 0, i32 1, i32 1)
  %1133 = getelementptr inbounds float, float* %1080, i64 112
  %1134 = bitcast float* %1133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1134, i32 0, i32 1, i32 1)
  %1135 = bitcast float* %1077 to <8 x float>*
  %1136 = load <8 x float>, <8 x float>* %1135, align 1, !tbaa !12
  %1137 = or i64 %1076, 8
  %1138 = getelementptr inbounds float, float* %5, i64 %1137
  %1139 = bitcast float* %1138 to <8 x float>*
  %1140 = load <8 x float>, <8 x float>* %1139, align 1, !tbaa !12
  %1141 = add nuw nsw i64 %1076, 16
  %1142 = getelementptr inbounds float, float* %5, i64 %1141
  %1143 = bitcast float* %1142 to <8 x float>*
  %1144 = load <8 x float>, <8 x float>* %1143, align 1, !tbaa !12
  %1145 = add nuw nsw i64 %1076, 24
  %1146 = getelementptr inbounds float, float* %5, i64 %1145
  %1147 = bitcast float* %1146 to <8 x float>*
  %1148 = load <8 x float>, <8 x float>* %1147, align 1, !tbaa !12
  %1149 = add nuw nsw i64 %1076, 32
  %1150 = getelementptr inbounds float, float* %5, i64 %1149
  %1151 = bitcast float* %1150 to <8 x float>*
  %1152 = load <8 x float>, <8 x float>* %1151, align 1, !tbaa !12
  %1153 = add nuw nsw i64 %1076, 40
  %1154 = getelementptr inbounds float, float* %5, i64 %1153
  %1155 = bitcast float* %1154 to <8 x float>*
  %1156 = load <8 x float>, <8 x float>* %1155, align 1, !tbaa !12
  %1157 = add nuw nsw i64 %1076, 48
  %1158 = getelementptr inbounds float, float* %5, i64 %1157
  %1159 = bitcast float* %1158 to <8 x float>*
  %1160 = load <8 x float>, <8 x float>* %1159, align 1, !tbaa !12
  %1161 = add nuw nsw i64 %1076, 56
  %1162 = getelementptr inbounds float, float* %5, i64 %1161
  %1163 = bitcast float* %1162 to <8 x float>*
  %1164 = load <8 x float>, <8 x float>* %1163, align 1, !tbaa !12
  %1165 = add nuw nsw i64 %1076, 64
  %1166 = getelementptr inbounds float, float* %5, i64 %1165
  %1167 = bitcast float* %1166 to <8 x float>*
  %1168 = load <8 x float>, <8 x float>* %1167, align 1, !tbaa !12
  %1169 = add nuw nsw i64 %1076, 72
  %1170 = getelementptr inbounds float, float* %5, i64 %1169
  %1171 = bitcast float* %1170 to <8 x float>*
  %1172 = load <8 x float>, <8 x float>* %1171, align 1, !tbaa !12
  %1173 = add nuw nsw i64 %1076, 80
  %1174 = getelementptr inbounds float, float* %5, i64 %1173
  %1175 = bitcast float* %1174 to <8 x float>*
  %1176 = load <8 x float>, <8 x float>* %1175, align 1, !tbaa !12
  %1177 = add nuw nsw i64 %1076, 88
  %1178 = getelementptr inbounds float, float* %5, i64 %1177
  %1179 = bitcast float* %1178 to <8 x float>*
  %1180 = load <8 x float>, <8 x float>* %1179, align 1, !tbaa !12
  %1181 = add nuw nsw i64 %1076, 96
  %1182 = getelementptr inbounds float, float* %5, i64 %1181
  %1183 = bitcast float* %1182 to <8 x float>*
  %1184 = load <8 x float>, <8 x float>* %1183, align 1, !tbaa !12
  %1185 = add nuw nsw i64 %1076, 104
  %1186 = getelementptr inbounds float, float* %5, i64 %1185
  %1187 = bitcast float* %1186 to <8 x float>*
  %1188 = load <8 x float>, <8 x float>* %1187, align 1, !tbaa !12
  %1189 = add nsw i64 %1076, %880
  %1190 = getelementptr inbounds float, float* %3, i64 %1189
  %1191 = bitcast float* %1190 to <8 x float>*
  %1192 = load <8 x float>, <8 x float>* %1191, align 1, !tbaa !12
  %1193 = add nsw i64 %1189, 8
  %1194 = getelementptr inbounds float, float* %3, i64 %1193
  %1195 = bitcast float* %1194 to <8 x float>*
  %1196 = load <8 x float>, <8 x float>* %1195, align 1, !tbaa !12
  %1197 = add nsw i64 %1189, 16
  %1198 = getelementptr inbounds float, float* %3, i64 %1197
  %1199 = bitcast float* %1198 to <8 x float>*
  %1200 = load <8 x float>, <8 x float>* %1199, align 1, !tbaa !12
  %1201 = add nsw i64 %1189, 24
  %1202 = getelementptr inbounds float, float* %3, i64 %1201
  %1203 = bitcast float* %1202 to <8 x float>*
  %1204 = load <8 x float>, <8 x float>* %1203, align 1, !tbaa !12
  %1205 = add nsw i64 %1189, 32
  %1206 = getelementptr inbounds float, float* %3, i64 %1205
  %1207 = bitcast float* %1206 to <8 x float>*
  %1208 = load <8 x float>, <8 x float>* %1207, align 1, !tbaa !12
  %1209 = add nsw i64 %1189, 40
  %1210 = getelementptr inbounds float, float* %3, i64 %1209
  %1211 = bitcast float* %1210 to <8 x float>*
  %1212 = load <8 x float>, <8 x float>* %1211, align 1, !tbaa !12
  %1213 = add nsw i64 %1189, 48
  %1214 = getelementptr inbounds float, float* %3, i64 %1213
  %1215 = bitcast float* %1214 to <8 x float>*
  %1216 = load <8 x float>, <8 x float>* %1215, align 1, !tbaa !12
  %1217 = add nsw i64 %1189, 56
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i64 %1189, 64
  %1222 = getelementptr inbounds float, float* %3, i64 %1221
  %1223 = bitcast float* %1222 to <8 x float>*
  %1224 = load <8 x float>, <8 x float>* %1223, align 1, !tbaa !12
  %1225 = add nsw i64 %1189, 72
  %1226 = getelementptr inbounds float, float* %3, i64 %1225
  %1227 = bitcast float* %1226 to <8 x float>*
  %1228 = load <8 x float>, <8 x float>* %1227, align 1, !tbaa !12
  %1229 = add nsw i64 %1189, 80
  %1230 = getelementptr inbounds float, float* %3, i64 %1229
  %1231 = bitcast float* %1230 to <8 x float>*
  %1232 = load <8 x float>, <8 x float>* %1231, align 1, !tbaa !12
  %1233 = add nsw i64 %1189, 88
  %1234 = getelementptr inbounds float, float* %3, i64 %1233
  %1235 = bitcast float* %1234 to <8 x float>*
  %1236 = load <8 x float>, <8 x float>* %1235, align 1, !tbaa !12
  %1237 = add nsw i64 %1189, 96
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i64 %1189, 104
  %1242 = getelementptr inbounds float, float* %3, i64 %1241
  %1243 = bitcast float* %1242 to <8 x float>*
  %1244 = load <8 x float>, <8 x float>* %1243, align 1, !tbaa !12
  %1245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1192, <8 x float> %50, <8 x float> %1136) #10
  %1246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1196, <8 x float> %50, <8 x float> %1140) #10
  %1247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1200, <8 x float> %50, <8 x float> %1144) #10
  %1248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1204, <8 x float> %50, <8 x float> %1148) #10
  %1249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1208, <8 x float> %50, <8 x float> %1152) #10
  %1250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1212, <8 x float> %50, <8 x float> %1156) #10
  %1251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1216, <8 x float> %50, <8 x float> %1160) #10
  %1252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %50, <8 x float> %1164) #10
  %1253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1224, <8 x float> %50, <8 x float> %1168) #10
  %1254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1228, <8 x float> %50, <8 x float> %1172) #10
  %1255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1232, <8 x float> %50, <8 x float> %1176) #10
  %1256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1236, <8 x float> %50, <8 x float> %1180) #10
  %1257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %50, <8 x float> %1184) #10
  %1258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1244, <8 x float> %50, <8 x float> %1188) #10
  store <8 x float> %1245, <8 x float>* %1135, align 1, !tbaa !12
  store <8 x float> %1246, <8 x float>* %1139, align 1, !tbaa !12
  store <8 x float> %1247, <8 x float>* %1143, align 1, !tbaa !12
  store <8 x float> %1248, <8 x float>* %1147, align 1, !tbaa !12
  store <8 x float> %1249, <8 x float>* %1151, align 1, !tbaa !12
  store <8 x float> %1250, <8 x float>* %1155, align 1, !tbaa !12
  store <8 x float> %1251, <8 x float>* %1159, align 1, !tbaa !12
  store <8 x float> %1252, <8 x float>* %1163, align 1, !tbaa !12
  store <8 x float> %1253, <8 x float>* %1167, align 1, !tbaa !12
  store <8 x float> %1254, <8 x float>* %1171, align 1, !tbaa !12
  store <8 x float> %1255, <8 x float>* %1175, align 1, !tbaa !12
  store <8 x float> %1256, <8 x float>* %1179, align 1, !tbaa !12
  store <8 x float> %1257, <8 x float>* %1183, align 1, !tbaa !12
  store <8 x float> %1258, <8 x float>* %1187, align 1, !tbaa !12
  %1259 = add nuw nsw i64 %1076, 112
  %1260 = icmp ult i64 %1259, %881
  br i1 %1260, label %1075, label %1068

1261:                                             ; preds = %1267
  br i1 %1070, label %1262, label %1660

1262:                                             ; preds = %1261
  %1263 = trunc i64 %56 to i32
  %1264 = mul nsw i32 %1069, %1263
  %1265 = sext i32 %1264 to i64
  %1266 = zext i32 %1069 to i64
  br label %1474

1267:                                             ; preds = %1071, %1267
  %1268 = phi i64 [ 0, %1071 ], [ %1466, %1267 ]
  %1269 = getelementptr inbounds float, float* %5, i64 %1268
  %1270 = getelementptr inbounds float, float* %1269, i64 8
  %1271 = bitcast float* %1270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1271, i32 0, i32 1, i32 1)
  %1272 = getelementptr inbounds float, float* %3, i64 %1268
  %1273 = getelementptr inbounds float, float* %1272, i64 8
  %1274 = bitcast float* %1273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1274, i32 0, i32 1, i32 1)
  %1275 = getelementptr inbounds float, float* %1269, i64 16
  %1276 = bitcast float* %1275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1276, i32 0, i32 1, i32 1)
  %1277 = getelementptr inbounds float, float* %1272, i64 16
  %1278 = bitcast float* %1277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1278, i32 0, i32 1, i32 1)
  %1279 = getelementptr inbounds float, float* %1269, i64 24
  %1280 = bitcast float* %1279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1280, i32 0, i32 1, i32 1)
  %1281 = getelementptr inbounds float, float* %1272, i64 24
  %1282 = bitcast float* %1281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1282, i32 0, i32 1, i32 1)
  %1283 = getelementptr inbounds float, float* %1269, i64 32
  %1284 = bitcast float* %1283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1284, i32 0, i32 1, i32 1)
  %1285 = getelementptr inbounds float, float* %1272, i64 32
  %1286 = bitcast float* %1285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1286, i32 0, i32 1, i32 1)
  %1287 = getelementptr inbounds float, float* %1269, i64 40
  %1288 = bitcast float* %1287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1288, i32 0, i32 1, i32 1)
  %1289 = getelementptr inbounds float, float* %1272, i64 40
  %1290 = bitcast float* %1289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1290, i32 0, i32 1, i32 1)
  %1291 = getelementptr inbounds float, float* %1269, i64 48
  %1292 = bitcast float* %1291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1292, i32 0, i32 1, i32 1)
  %1293 = getelementptr inbounds float, float* %1272, i64 48
  %1294 = bitcast float* %1293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1294, i32 0, i32 1, i32 1)
  %1295 = getelementptr inbounds float, float* %1269, i64 56
  %1296 = bitcast float* %1295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1296, i32 0, i32 1, i32 1)
  %1297 = getelementptr inbounds float, float* %1272, i64 56
  %1298 = bitcast float* %1297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1298, i32 0, i32 1, i32 1)
  %1299 = getelementptr inbounds float, float* %1269, i64 64
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %1272, i64 64
  %1302 = bitcast float* %1301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1302, i32 0, i32 1, i32 1)
  %1303 = getelementptr inbounds float, float* %1269, i64 72
  %1304 = bitcast float* %1303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1304, i32 0, i32 1, i32 1)
  %1305 = getelementptr inbounds float, float* %1272, i64 72
  %1306 = bitcast float* %1305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1306, i32 0, i32 1, i32 1)
  %1307 = getelementptr inbounds float, float* %1269, i64 80
  %1308 = bitcast float* %1307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1308, i32 0, i32 1, i32 1)
  %1309 = getelementptr inbounds float, float* %1272, i64 80
  %1310 = bitcast float* %1309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1310, i32 0, i32 1, i32 1)
  %1311 = getelementptr inbounds float, float* %1269, i64 88
  %1312 = bitcast float* %1311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1312, i32 0, i32 1, i32 1)
  %1313 = getelementptr inbounds float, float* %1272, i64 88
  %1314 = bitcast float* %1313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1314, i32 0, i32 1, i32 1)
  %1315 = getelementptr inbounds float, float* %1269, i64 96
  %1316 = bitcast float* %1315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1316, i32 0, i32 1, i32 1)
  %1317 = getelementptr inbounds float, float* %1272, i64 96
  %1318 = bitcast float* %1317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1318, i32 0, i32 1, i32 1)
  %1319 = getelementptr inbounds float, float* %1269, i64 104
  %1320 = bitcast float* %1319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1320, i32 0, i32 1, i32 1)
  %1321 = getelementptr inbounds float, float* %1272, i64 104
  %1322 = bitcast float* %1321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1322, i32 0, i32 1, i32 1)
  %1323 = getelementptr inbounds float, float* %1269, i64 112
  %1324 = bitcast float* %1323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1324, i32 0, i32 1, i32 1)
  %1325 = getelementptr inbounds float, float* %1272, i64 112
  %1326 = bitcast float* %1325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1326, i32 0, i32 1, i32 1)
  %1327 = bitcast float* %1269 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = or i64 %1268, 8
  %1330 = getelementptr inbounds float, float* %5, i64 %1329
  %1331 = bitcast float* %1330 to <8 x float>*
  %1332 = load <8 x float>, <8 x float>* %1331, align 1, !tbaa !12
  %1333 = add nuw nsw i64 %1268, 16
  %1334 = getelementptr inbounds float, float* %5, i64 %1333
  %1335 = bitcast float* %1334 to <8 x float>*
  %1336 = load <8 x float>, <8 x float>* %1335, align 1, !tbaa !12
  %1337 = add nuw nsw i64 %1268, 24
  %1338 = getelementptr inbounds float, float* %5, i64 %1337
  %1339 = bitcast float* %1338 to <8 x float>*
  %1340 = load <8 x float>, <8 x float>* %1339, align 1, !tbaa !12
  %1341 = add nuw nsw i64 %1268, 32
  %1342 = getelementptr inbounds float, float* %5, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nuw nsw i64 %1268, 40
  %1346 = getelementptr inbounds float, float* %5, i64 %1345
  %1347 = bitcast float* %1346 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = add nuw nsw i64 %1268, 48
  %1350 = getelementptr inbounds float, float* %5, i64 %1349
  %1351 = bitcast float* %1350 to <8 x float>*
  %1352 = load <8 x float>, <8 x float>* %1351, align 1, !tbaa !12
  %1353 = add nuw nsw i64 %1268, 56
  %1354 = getelementptr inbounds float, float* %5, i64 %1353
  %1355 = bitcast float* %1354 to <8 x float>*
  %1356 = load <8 x float>, <8 x float>* %1355, align 1, !tbaa !12
  %1357 = add nuw nsw i64 %1268, 64
  %1358 = getelementptr inbounds float, float* %5, i64 %1357
  %1359 = bitcast float* %1358 to <8 x float>*
  %1360 = load <8 x float>, <8 x float>* %1359, align 1, !tbaa !12
  %1361 = add nuw nsw i64 %1268, 72
  %1362 = getelementptr inbounds float, float* %5, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nuw nsw i64 %1268, 80
  %1366 = getelementptr inbounds float, float* %5, i64 %1365
  %1367 = bitcast float* %1366 to <8 x float>*
  %1368 = load <8 x float>, <8 x float>* %1367, align 1, !tbaa !12
  %1369 = add nuw nsw i64 %1268, 88
  %1370 = getelementptr inbounds float, float* %5, i64 %1369
  %1371 = bitcast float* %1370 to <8 x float>*
  %1372 = load <8 x float>, <8 x float>* %1371, align 1, !tbaa !12
  %1373 = add nuw nsw i64 %1268, 96
  %1374 = getelementptr inbounds float, float* %5, i64 %1373
  %1375 = bitcast float* %1374 to <8 x float>*
  %1376 = load <8 x float>, <8 x float>* %1375, align 1, !tbaa !12
  %1377 = add nuw nsw i64 %1268, 104
  %1378 = getelementptr inbounds float, float* %5, i64 %1377
  %1379 = bitcast float* %1378 to <8 x float>*
  %1380 = load <8 x float>, <8 x float>* %1379, align 1, !tbaa !12
  %1381 = trunc i64 %1268 to i32
  %1382 = add nsw i32 %1074, %1381
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds float, float* %3, i64 %1383
  %1385 = bitcast float* %1384 to <8 x float>*
  %1386 = load <8 x float>, <8 x float>* %1385, align 1, !tbaa !12
  %1387 = add nsw i32 %1382, 8
  %1388 = sext i32 %1387 to i64
  %1389 = getelementptr inbounds float, float* %3, i64 %1388
  %1390 = bitcast float* %1389 to <8 x float>*
  %1391 = load <8 x float>, <8 x float>* %1390, align 1, !tbaa !12
  %1392 = add nsw i32 %1382, 16
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds float, float* %3, i64 %1393
  %1395 = bitcast float* %1394 to <8 x float>*
  %1396 = load <8 x float>, <8 x float>* %1395, align 1, !tbaa !12
  %1397 = add nsw i32 %1382, 24
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds float, float* %3, i64 %1398
  %1400 = bitcast float* %1399 to <8 x float>*
  %1401 = load <8 x float>, <8 x float>* %1400, align 1, !tbaa !12
  %1402 = add nsw i32 %1382, 32
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds float, float* %3, i64 %1403
  %1405 = bitcast float* %1404 to <8 x float>*
  %1406 = load <8 x float>, <8 x float>* %1405, align 1, !tbaa !12
  %1407 = add nsw i32 %1382, 40
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds float, float* %3, i64 %1408
  %1410 = bitcast float* %1409 to <8 x float>*
  %1411 = load <8 x float>, <8 x float>* %1410, align 1, !tbaa !12
  %1412 = add nsw i32 %1382, 48
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds float, float* %3, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = add nsw i32 %1382, 56
  %1418 = sext i32 %1417 to i64
  %1419 = getelementptr inbounds float, float* %3, i64 %1418
  %1420 = bitcast float* %1419 to <8 x float>*
  %1421 = load <8 x float>, <8 x float>* %1420, align 1, !tbaa !12
  %1422 = add nsw i32 %1382, 64
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds float, float* %3, i64 %1423
  %1425 = bitcast float* %1424 to <8 x float>*
  %1426 = load <8 x float>, <8 x float>* %1425, align 1, !tbaa !12
  %1427 = add nsw i32 %1382, 72
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds float, float* %3, i64 %1428
  %1430 = bitcast float* %1429 to <8 x float>*
  %1431 = load <8 x float>, <8 x float>* %1430, align 1, !tbaa !12
  %1432 = add nsw i32 %1382, 80
  %1433 = sext i32 %1432 to i64
  %1434 = getelementptr inbounds float, float* %3, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = add nsw i32 %1382, 88
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds float, float* %3, i64 %1438
  %1440 = bitcast float* %1439 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = add nsw i32 %1382, 96
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds float, float* %3, i64 %1443
  %1445 = bitcast float* %1444 to <8 x float>*
  %1446 = load <8 x float>, <8 x float>* %1445, align 1, !tbaa !12
  %1447 = add nsw i32 %1382, 104
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds float, float* %3, i64 %1448
  %1450 = bitcast float* %1449 to <8 x float>*
  %1451 = load <8 x float>, <8 x float>* %1450, align 1, !tbaa !12
  %1452 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1386, <8 x float> %55, <8 x float> %1328) #10
  %1453 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1391, <8 x float> %55, <8 x float> %1332) #10
  %1454 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1396, <8 x float> %55, <8 x float> %1336) #10
  %1455 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1401, <8 x float> %55, <8 x float> %1340) #10
  %1456 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1406, <8 x float> %55, <8 x float> %1344) #10
  %1457 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1411, <8 x float> %55, <8 x float> %1348) #10
  %1458 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1416, <8 x float> %55, <8 x float> %1352) #10
  %1459 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1421, <8 x float> %55, <8 x float> %1356) #10
  %1460 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1426, <8 x float> %55, <8 x float> %1360) #10
  %1461 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1431, <8 x float> %55, <8 x float> %1364) #10
  %1462 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1436, <8 x float> %55, <8 x float> %1368) #10
  %1463 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1441, <8 x float> %55, <8 x float> %1372) #10
  %1464 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1446, <8 x float> %55, <8 x float> %1376) #10
  %1465 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1451, <8 x float> %55, <8 x float> %1380) #10
  store <8 x float> %1452, <8 x float>* %1327, align 1, !tbaa !12
  store <8 x float> %1453, <8 x float>* %1331, align 1, !tbaa !12
  store <8 x float> %1454, <8 x float>* %1335, align 1, !tbaa !12
  store <8 x float> %1455, <8 x float>* %1339, align 1, !tbaa !12
  store <8 x float> %1456, <8 x float>* %1343, align 1, !tbaa !12
  store <8 x float> %1457, <8 x float>* %1347, align 1, !tbaa !12
  store <8 x float> %1458, <8 x float>* %1351, align 1, !tbaa !12
  store <8 x float> %1459, <8 x float>* %1355, align 1, !tbaa !12
  store <8 x float> %1460, <8 x float>* %1359, align 1, !tbaa !12
  store <8 x float> %1461, <8 x float>* %1363, align 1, !tbaa !12
  store <8 x float> %1462, <8 x float>* %1367, align 1, !tbaa !12
  store <8 x float> %1463, <8 x float>* %1371, align 1, !tbaa !12
  store <8 x float> %1464, <8 x float>* %1375, align 1, !tbaa !12
  store <8 x float> %1465, <8 x float>* %1379, align 1, !tbaa !12
  %1466 = add nuw nsw i64 %1268, 112
  %1467 = icmp ult i64 %1466, %1072
  br i1 %1467, label %1267, label %1261

1468:                                             ; preds = %1474
  br i1 %1070, label %1469, label %1660

1469:                                             ; preds = %1468
  %1470 = trunc i64 %61 to i32
  %1471 = mul nsw i32 %1069, %1470
  %1472 = sext i32 %1471 to i64
  %1473 = zext i32 %1069 to i64
  br label %1667

1474:                                             ; preds = %1262, %1474
  %1475 = phi i64 [ 0, %1262 ], [ %1658, %1474 ]
  %1476 = getelementptr inbounds float, float* %5, i64 %1475
  %1477 = getelementptr inbounds float, float* %1476, i64 8
  %1478 = bitcast float* %1477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1478, i32 0, i32 1, i32 1)
  %1479 = getelementptr inbounds float, float* %3, i64 %1475
  %1480 = getelementptr inbounds float, float* %1479, i64 8
  %1481 = bitcast float* %1480 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1481, i32 0, i32 1, i32 1)
  %1482 = getelementptr inbounds float, float* %1476, i64 16
  %1483 = bitcast float* %1482 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1483, i32 0, i32 1, i32 1)
  %1484 = getelementptr inbounds float, float* %1479, i64 16
  %1485 = bitcast float* %1484 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1485, i32 0, i32 1, i32 1)
  %1486 = getelementptr inbounds float, float* %1476, i64 24
  %1487 = bitcast float* %1486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1487, i32 0, i32 1, i32 1)
  %1488 = getelementptr inbounds float, float* %1479, i64 24
  %1489 = bitcast float* %1488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1489, i32 0, i32 1, i32 1)
  %1490 = getelementptr inbounds float, float* %1476, i64 32
  %1491 = bitcast float* %1490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1491, i32 0, i32 1, i32 1)
  %1492 = getelementptr inbounds float, float* %1479, i64 32
  %1493 = bitcast float* %1492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1493, i32 0, i32 1, i32 1)
  %1494 = getelementptr inbounds float, float* %1476, i64 40
  %1495 = bitcast float* %1494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1495, i32 0, i32 1, i32 1)
  %1496 = getelementptr inbounds float, float* %1479, i64 40
  %1497 = bitcast float* %1496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1497, i32 0, i32 1, i32 1)
  %1498 = getelementptr inbounds float, float* %1476, i64 48
  %1499 = bitcast float* %1498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1499, i32 0, i32 1, i32 1)
  %1500 = getelementptr inbounds float, float* %1479, i64 48
  %1501 = bitcast float* %1500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1501, i32 0, i32 1, i32 1)
  %1502 = getelementptr inbounds float, float* %1476, i64 56
  %1503 = bitcast float* %1502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1503, i32 0, i32 1, i32 1)
  %1504 = getelementptr inbounds float, float* %1479, i64 56
  %1505 = bitcast float* %1504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1505, i32 0, i32 1, i32 1)
  %1506 = getelementptr inbounds float, float* %1476, i64 64
  %1507 = bitcast float* %1506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1507, i32 0, i32 1, i32 1)
  %1508 = getelementptr inbounds float, float* %1479, i64 64
  %1509 = bitcast float* %1508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1509, i32 0, i32 1, i32 1)
  %1510 = getelementptr inbounds float, float* %1476, i64 72
  %1511 = bitcast float* %1510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1511, i32 0, i32 1, i32 1)
  %1512 = getelementptr inbounds float, float* %1479, i64 72
  %1513 = bitcast float* %1512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1513, i32 0, i32 1, i32 1)
  %1514 = getelementptr inbounds float, float* %1476, i64 80
  %1515 = bitcast float* %1514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1515, i32 0, i32 1, i32 1)
  %1516 = getelementptr inbounds float, float* %1479, i64 80
  %1517 = bitcast float* %1516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1517, i32 0, i32 1, i32 1)
  %1518 = getelementptr inbounds float, float* %1476, i64 88
  %1519 = bitcast float* %1518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1519, i32 0, i32 1, i32 1)
  %1520 = getelementptr inbounds float, float* %1479, i64 88
  %1521 = bitcast float* %1520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1521, i32 0, i32 1, i32 1)
  %1522 = getelementptr inbounds float, float* %1476, i64 96
  %1523 = bitcast float* %1522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1523, i32 0, i32 1, i32 1)
  %1524 = getelementptr inbounds float, float* %1479, i64 96
  %1525 = bitcast float* %1524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1525, i32 0, i32 1, i32 1)
  %1526 = getelementptr inbounds float, float* %1476, i64 104
  %1527 = bitcast float* %1526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1527, i32 0, i32 1, i32 1)
  %1528 = getelementptr inbounds float, float* %1479, i64 104
  %1529 = bitcast float* %1528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1529, i32 0, i32 1, i32 1)
  %1530 = getelementptr inbounds float, float* %1476, i64 112
  %1531 = bitcast float* %1530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1531, i32 0, i32 1, i32 1)
  %1532 = getelementptr inbounds float, float* %1479, i64 112
  %1533 = bitcast float* %1532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1533, i32 0, i32 1, i32 1)
  %1534 = bitcast float* %1476 to <8 x float>*
  %1535 = load <8 x float>, <8 x float>* %1534, align 1, !tbaa !12
  %1536 = or i64 %1475, 8
  %1537 = getelementptr inbounds float, float* %5, i64 %1536
  %1538 = bitcast float* %1537 to <8 x float>*
  %1539 = load <8 x float>, <8 x float>* %1538, align 1, !tbaa !12
  %1540 = add nuw nsw i64 %1475, 16
  %1541 = getelementptr inbounds float, float* %5, i64 %1540
  %1542 = bitcast float* %1541 to <8 x float>*
  %1543 = load <8 x float>, <8 x float>* %1542, align 1, !tbaa !12
  %1544 = add nuw nsw i64 %1475, 24
  %1545 = getelementptr inbounds float, float* %5, i64 %1544
  %1546 = bitcast float* %1545 to <8 x float>*
  %1547 = load <8 x float>, <8 x float>* %1546, align 1, !tbaa !12
  %1548 = add nuw nsw i64 %1475, 32
  %1549 = getelementptr inbounds float, float* %5, i64 %1548
  %1550 = bitcast float* %1549 to <8 x float>*
  %1551 = load <8 x float>, <8 x float>* %1550, align 1, !tbaa !12
  %1552 = add nuw nsw i64 %1475, 40
  %1553 = getelementptr inbounds float, float* %5, i64 %1552
  %1554 = bitcast float* %1553 to <8 x float>*
  %1555 = load <8 x float>, <8 x float>* %1554, align 1, !tbaa !12
  %1556 = add nuw nsw i64 %1475, 48
  %1557 = getelementptr inbounds float, float* %5, i64 %1556
  %1558 = bitcast float* %1557 to <8 x float>*
  %1559 = load <8 x float>, <8 x float>* %1558, align 1, !tbaa !12
  %1560 = add nuw nsw i64 %1475, 56
  %1561 = getelementptr inbounds float, float* %5, i64 %1560
  %1562 = bitcast float* %1561 to <8 x float>*
  %1563 = load <8 x float>, <8 x float>* %1562, align 1, !tbaa !12
  %1564 = add nuw nsw i64 %1475, 64
  %1565 = getelementptr inbounds float, float* %5, i64 %1564
  %1566 = bitcast float* %1565 to <8 x float>*
  %1567 = load <8 x float>, <8 x float>* %1566, align 1, !tbaa !12
  %1568 = add nuw nsw i64 %1475, 72
  %1569 = getelementptr inbounds float, float* %5, i64 %1568
  %1570 = bitcast float* %1569 to <8 x float>*
  %1571 = load <8 x float>, <8 x float>* %1570, align 1, !tbaa !12
  %1572 = add nuw nsw i64 %1475, 80
  %1573 = getelementptr inbounds float, float* %5, i64 %1572
  %1574 = bitcast float* %1573 to <8 x float>*
  %1575 = load <8 x float>, <8 x float>* %1574, align 1, !tbaa !12
  %1576 = add nuw nsw i64 %1475, 88
  %1577 = getelementptr inbounds float, float* %5, i64 %1576
  %1578 = bitcast float* %1577 to <8 x float>*
  %1579 = load <8 x float>, <8 x float>* %1578, align 1, !tbaa !12
  %1580 = add nuw nsw i64 %1475, 96
  %1581 = getelementptr inbounds float, float* %5, i64 %1580
  %1582 = bitcast float* %1581 to <8 x float>*
  %1583 = load <8 x float>, <8 x float>* %1582, align 1, !tbaa !12
  %1584 = add nuw nsw i64 %1475, 104
  %1585 = getelementptr inbounds float, float* %5, i64 %1584
  %1586 = bitcast float* %1585 to <8 x float>*
  %1587 = load <8 x float>, <8 x float>* %1586, align 1, !tbaa !12
  %1588 = add nsw i64 %1475, %1265
  %1589 = getelementptr inbounds float, float* %3, i64 %1588
  %1590 = bitcast float* %1589 to <8 x float>*
  %1591 = load <8 x float>, <8 x float>* %1590, align 1, !tbaa !12
  %1592 = add nsw i64 %1588, 8
  %1593 = getelementptr inbounds float, float* %3, i64 %1592
  %1594 = bitcast float* %1593 to <8 x float>*
  %1595 = load <8 x float>, <8 x float>* %1594, align 1, !tbaa !12
  %1596 = add nsw i64 %1588, 16
  %1597 = getelementptr inbounds float, float* %3, i64 %1596
  %1598 = bitcast float* %1597 to <8 x float>*
  %1599 = load <8 x float>, <8 x float>* %1598, align 1, !tbaa !12
  %1600 = add nsw i64 %1588, 24
  %1601 = getelementptr inbounds float, float* %3, i64 %1600
  %1602 = bitcast float* %1601 to <8 x float>*
  %1603 = load <8 x float>, <8 x float>* %1602, align 1, !tbaa !12
  %1604 = add nsw i64 %1588, 32
  %1605 = getelementptr inbounds float, float* %3, i64 %1604
  %1606 = bitcast float* %1605 to <8 x float>*
  %1607 = load <8 x float>, <8 x float>* %1606, align 1, !tbaa !12
  %1608 = add nsw i64 %1588, 40
  %1609 = getelementptr inbounds float, float* %3, i64 %1608
  %1610 = bitcast float* %1609 to <8 x float>*
  %1611 = load <8 x float>, <8 x float>* %1610, align 1, !tbaa !12
  %1612 = add nsw i64 %1588, 48
  %1613 = getelementptr inbounds float, float* %3, i64 %1612
  %1614 = bitcast float* %1613 to <8 x float>*
  %1615 = load <8 x float>, <8 x float>* %1614, align 1, !tbaa !12
  %1616 = add nsw i64 %1588, 56
  %1617 = getelementptr inbounds float, float* %3, i64 %1616
  %1618 = bitcast float* %1617 to <8 x float>*
  %1619 = load <8 x float>, <8 x float>* %1618, align 1, !tbaa !12
  %1620 = add nsw i64 %1588, 64
  %1621 = getelementptr inbounds float, float* %3, i64 %1620
  %1622 = bitcast float* %1621 to <8 x float>*
  %1623 = load <8 x float>, <8 x float>* %1622, align 1, !tbaa !12
  %1624 = add nsw i64 %1588, 72
  %1625 = getelementptr inbounds float, float* %3, i64 %1624
  %1626 = bitcast float* %1625 to <8 x float>*
  %1627 = load <8 x float>, <8 x float>* %1626, align 1, !tbaa !12
  %1628 = add nsw i64 %1588, 80
  %1629 = getelementptr inbounds float, float* %3, i64 %1628
  %1630 = bitcast float* %1629 to <8 x float>*
  %1631 = load <8 x float>, <8 x float>* %1630, align 1, !tbaa !12
  %1632 = add nsw i64 %1588, 88
  %1633 = getelementptr inbounds float, float* %3, i64 %1632
  %1634 = bitcast float* %1633 to <8 x float>*
  %1635 = load <8 x float>, <8 x float>* %1634, align 1, !tbaa !12
  %1636 = add nsw i64 %1588, 96
  %1637 = getelementptr inbounds float, float* %3, i64 %1636
  %1638 = bitcast float* %1637 to <8 x float>*
  %1639 = load <8 x float>, <8 x float>* %1638, align 1, !tbaa !12
  %1640 = add nsw i64 %1588, 104
  %1641 = getelementptr inbounds float, float* %3, i64 %1640
  %1642 = bitcast float* %1641 to <8 x float>*
  %1643 = load <8 x float>, <8 x float>* %1642, align 1, !tbaa !12
  %1644 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1591, <8 x float> %60, <8 x float> %1535) #10
  %1645 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1595, <8 x float> %60, <8 x float> %1539) #10
  %1646 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1599, <8 x float> %60, <8 x float> %1543) #10
  %1647 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1603, <8 x float> %60, <8 x float> %1547) #10
  %1648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1607, <8 x float> %60, <8 x float> %1551) #10
  %1649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1611, <8 x float> %60, <8 x float> %1555) #10
  %1650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1615, <8 x float> %60, <8 x float> %1559) #10
  %1651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1619, <8 x float> %60, <8 x float> %1563) #10
  %1652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1623, <8 x float> %60, <8 x float> %1567) #10
  %1653 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1627, <8 x float> %60, <8 x float> %1571) #10
  %1654 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1631, <8 x float> %60, <8 x float> %1575) #10
  %1655 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1635, <8 x float> %60, <8 x float> %1579) #10
  %1656 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1639, <8 x float> %60, <8 x float> %1583) #10
  %1657 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1643, <8 x float> %60, <8 x float> %1587) #10
  store <8 x float> %1644, <8 x float>* %1534, align 1, !tbaa !12
  store <8 x float> %1645, <8 x float>* %1538, align 1, !tbaa !12
  store <8 x float> %1646, <8 x float>* %1542, align 1, !tbaa !12
  store <8 x float> %1647, <8 x float>* %1546, align 1, !tbaa !12
  store <8 x float> %1648, <8 x float>* %1550, align 1, !tbaa !12
  store <8 x float> %1649, <8 x float>* %1554, align 1, !tbaa !12
  store <8 x float> %1650, <8 x float>* %1558, align 1, !tbaa !12
  store <8 x float> %1651, <8 x float>* %1562, align 1, !tbaa !12
  store <8 x float> %1652, <8 x float>* %1566, align 1, !tbaa !12
  store <8 x float> %1653, <8 x float>* %1570, align 1, !tbaa !12
  store <8 x float> %1654, <8 x float>* %1574, align 1, !tbaa !12
  store <8 x float> %1655, <8 x float>* %1578, align 1, !tbaa !12
  store <8 x float> %1656, <8 x float>* %1582, align 1, !tbaa !12
  store <8 x float> %1657, <8 x float>* %1586, align 1, !tbaa !12
  %1658 = add nuw nsw i64 %1475, 112
  %1659 = icmp ult i64 %1658, %1266
  br i1 %1659, label %1474, label %1468

1660:                                             ; preds = %1667, %1261, %1468
  %1661 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1662 = icmp sgt i32 %1661, 0
  br i1 %1662, label %1663, label %1853

1663:                                             ; preds = %1660
  %1664 = zext i32 %1661 to i64
  %1665 = trunc i64 %66 to i32
  %1666 = mul nsw i32 %1661, %1665
  br label %1858

1667:                                             ; preds = %1469, %1667
  %1668 = phi i64 [ 0, %1469 ], [ %1851, %1667 ]
  %1669 = getelementptr inbounds float, float* %5, i64 %1668
  %1670 = getelementptr inbounds float, float* %1669, i64 8
  %1671 = bitcast float* %1670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1671, i32 0, i32 1, i32 1)
  %1672 = getelementptr inbounds float, float* %3, i64 %1668
  %1673 = getelementptr inbounds float, float* %1672, i64 8
  %1674 = bitcast float* %1673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1674, i32 0, i32 1, i32 1)
  %1675 = getelementptr inbounds float, float* %1669, i64 16
  %1676 = bitcast float* %1675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1676, i32 0, i32 1, i32 1)
  %1677 = getelementptr inbounds float, float* %1672, i64 16
  %1678 = bitcast float* %1677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1678, i32 0, i32 1, i32 1)
  %1679 = getelementptr inbounds float, float* %1669, i64 24
  %1680 = bitcast float* %1679 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1680, i32 0, i32 1, i32 1)
  %1681 = getelementptr inbounds float, float* %1672, i64 24
  %1682 = bitcast float* %1681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1682, i32 0, i32 1, i32 1)
  %1683 = getelementptr inbounds float, float* %1669, i64 32
  %1684 = bitcast float* %1683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1684, i32 0, i32 1, i32 1)
  %1685 = getelementptr inbounds float, float* %1672, i64 32
  %1686 = bitcast float* %1685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1686, i32 0, i32 1, i32 1)
  %1687 = getelementptr inbounds float, float* %1669, i64 40
  %1688 = bitcast float* %1687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1688, i32 0, i32 1, i32 1)
  %1689 = getelementptr inbounds float, float* %1672, i64 40
  %1690 = bitcast float* %1689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1690, i32 0, i32 1, i32 1)
  %1691 = getelementptr inbounds float, float* %1669, i64 48
  %1692 = bitcast float* %1691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1692, i32 0, i32 1, i32 1)
  %1693 = getelementptr inbounds float, float* %1672, i64 48
  %1694 = bitcast float* %1693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1694, i32 0, i32 1, i32 1)
  %1695 = getelementptr inbounds float, float* %1669, i64 56
  %1696 = bitcast float* %1695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1696, i32 0, i32 1, i32 1)
  %1697 = getelementptr inbounds float, float* %1672, i64 56
  %1698 = bitcast float* %1697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1698, i32 0, i32 1, i32 1)
  %1699 = getelementptr inbounds float, float* %1669, i64 64
  %1700 = bitcast float* %1699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1700, i32 0, i32 1, i32 1)
  %1701 = getelementptr inbounds float, float* %1672, i64 64
  %1702 = bitcast float* %1701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1702, i32 0, i32 1, i32 1)
  %1703 = getelementptr inbounds float, float* %1669, i64 72
  %1704 = bitcast float* %1703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1704, i32 0, i32 1, i32 1)
  %1705 = getelementptr inbounds float, float* %1672, i64 72
  %1706 = bitcast float* %1705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1706, i32 0, i32 1, i32 1)
  %1707 = getelementptr inbounds float, float* %1669, i64 80
  %1708 = bitcast float* %1707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1708, i32 0, i32 1, i32 1)
  %1709 = getelementptr inbounds float, float* %1672, i64 80
  %1710 = bitcast float* %1709 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1710, i32 0, i32 1, i32 1)
  %1711 = getelementptr inbounds float, float* %1669, i64 88
  %1712 = bitcast float* %1711 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1712, i32 0, i32 1, i32 1)
  %1713 = getelementptr inbounds float, float* %1672, i64 88
  %1714 = bitcast float* %1713 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1714, i32 0, i32 1, i32 1)
  %1715 = getelementptr inbounds float, float* %1669, i64 96
  %1716 = bitcast float* %1715 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1716, i32 0, i32 1, i32 1)
  %1717 = getelementptr inbounds float, float* %1672, i64 96
  %1718 = bitcast float* %1717 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1718, i32 0, i32 1, i32 1)
  %1719 = getelementptr inbounds float, float* %1669, i64 104
  %1720 = bitcast float* %1719 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1720, i32 0, i32 1, i32 1)
  %1721 = getelementptr inbounds float, float* %1672, i64 104
  %1722 = bitcast float* %1721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1722, i32 0, i32 1, i32 1)
  %1723 = getelementptr inbounds float, float* %1669, i64 112
  %1724 = bitcast float* %1723 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1724, i32 0, i32 1, i32 1)
  %1725 = getelementptr inbounds float, float* %1672, i64 112
  %1726 = bitcast float* %1725 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1726, i32 0, i32 1, i32 1)
  %1727 = bitcast float* %1669 to <8 x float>*
  %1728 = load <8 x float>, <8 x float>* %1727, align 1, !tbaa !12
  %1729 = or i64 %1668, 8
  %1730 = getelementptr inbounds float, float* %5, i64 %1729
  %1731 = bitcast float* %1730 to <8 x float>*
  %1732 = load <8 x float>, <8 x float>* %1731, align 1, !tbaa !12
  %1733 = add nuw nsw i64 %1668, 16
  %1734 = getelementptr inbounds float, float* %5, i64 %1733
  %1735 = bitcast float* %1734 to <8 x float>*
  %1736 = load <8 x float>, <8 x float>* %1735, align 1, !tbaa !12
  %1737 = add nuw nsw i64 %1668, 24
  %1738 = getelementptr inbounds float, float* %5, i64 %1737
  %1739 = bitcast float* %1738 to <8 x float>*
  %1740 = load <8 x float>, <8 x float>* %1739, align 1, !tbaa !12
  %1741 = add nuw nsw i64 %1668, 32
  %1742 = getelementptr inbounds float, float* %5, i64 %1741
  %1743 = bitcast float* %1742 to <8 x float>*
  %1744 = load <8 x float>, <8 x float>* %1743, align 1, !tbaa !12
  %1745 = add nuw nsw i64 %1668, 40
  %1746 = getelementptr inbounds float, float* %5, i64 %1745
  %1747 = bitcast float* %1746 to <8 x float>*
  %1748 = load <8 x float>, <8 x float>* %1747, align 1, !tbaa !12
  %1749 = add nuw nsw i64 %1668, 48
  %1750 = getelementptr inbounds float, float* %5, i64 %1749
  %1751 = bitcast float* %1750 to <8 x float>*
  %1752 = load <8 x float>, <8 x float>* %1751, align 1, !tbaa !12
  %1753 = add nuw nsw i64 %1668, 56
  %1754 = getelementptr inbounds float, float* %5, i64 %1753
  %1755 = bitcast float* %1754 to <8 x float>*
  %1756 = load <8 x float>, <8 x float>* %1755, align 1, !tbaa !12
  %1757 = add nuw nsw i64 %1668, 64
  %1758 = getelementptr inbounds float, float* %5, i64 %1757
  %1759 = bitcast float* %1758 to <8 x float>*
  %1760 = load <8 x float>, <8 x float>* %1759, align 1, !tbaa !12
  %1761 = add nuw nsw i64 %1668, 72
  %1762 = getelementptr inbounds float, float* %5, i64 %1761
  %1763 = bitcast float* %1762 to <8 x float>*
  %1764 = load <8 x float>, <8 x float>* %1763, align 1, !tbaa !12
  %1765 = add nuw nsw i64 %1668, 80
  %1766 = getelementptr inbounds float, float* %5, i64 %1765
  %1767 = bitcast float* %1766 to <8 x float>*
  %1768 = load <8 x float>, <8 x float>* %1767, align 1, !tbaa !12
  %1769 = add nuw nsw i64 %1668, 88
  %1770 = getelementptr inbounds float, float* %5, i64 %1769
  %1771 = bitcast float* %1770 to <8 x float>*
  %1772 = load <8 x float>, <8 x float>* %1771, align 1, !tbaa !12
  %1773 = add nuw nsw i64 %1668, 96
  %1774 = getelementptr inbounds float, float* %5, i64 %1773
  %1775 = bitcast float* %1774 to <8 x float>*
  %1776 = load <8 x float>, <8 x float>* %1775, align 1, !tbaa !12
  %1777 = add nuw nsw i64 %1668, 104
  %1778 = getelementptr inbounds float, float* %5, i64 %1777
  %1779 = bitcast float* %1778 to <8 x float>*
  %1780 = load <8 x float>, <8 x float>* %1779, align 1, !tbaa !12
  %1781 = add nsw i64 %1668, %1472
  %1782 = getelementptr inbounds float, float* %3, i64 %1781
  %1783 = bitcast float* %1782 to <8 x float>*
  %1784 = load <8 x float>, <8 x float>* %1783, align 1, !tbaa !12
  %1785 = add nsw i64 %1781, 8
  %1786 = getelementptr inbounds float, float* %3, i64 %1785
  %1787 = bitcast float* %1786 to <8 x float>*
  %1788 = load <8 x float>, <8 x float>* %1787, align 1, !tbaa !12
  %1789 = add nsw i64 %1781, 16
  %1790 = getelementptr inbounds float, float* %3, i64 %1789
  %1791 = bitcast float* %1790 to <8 x float>*
  %1792 = load <8 x float>, <8 x float>* %1791, align 1, !tbaa !12
  %1793 = add nsw i64 %1781, 24
  %1794 = getelementptr inbounds float, float* %3, i64 %1793
  %1795 = bitcast float* %1794 to <8 x float>*
  %1796 = load <8 x float>, <8 x float>* %1795, align 1, !tbaa !12
  %1797 = add nsw i64 %1781, 32
  %1798 = getelementptr inbounds float, float* %3, i64 %1797
  %1799 = bitcast float* %1798 to <8 x float>*
  %1800 = load <8 x float>, <8 x float>* %1799, align 1, !tbaa !12
  %1801 = add nsw i64 %1781, 40
  %1802 = getelementptr inbounds float, float* %3, i64 %1801
  %1803 = bitcast float* %1802 to <8 x float>*
  %1804 = load <8 x float>, <8 x float>* %1803, align 1, !tbaa !12
  %1805 = add nsw i64 %1781, 48
  %1806 = getelementptr inbounds float, float* %3, i64 %1805
  %1807 = bitcast float* %1806 to <8 x float>*
  %1808 = load <8 x float>, <8 x float>* %1807, align 1, !tbaa !12
  %1809 = add nsw i64 %1781, 56
  %1810 = getelementptr inbounds float, float* %3, i64 %1809
  %1811 = bitcast float* %1810 to <8 x float>*
  %1812 = load <8 x float>, <8 x float>* %1811, align 1, !tbaa !12
  %1813 = add nsw i64 %1781, 64
  %1814 = getelementptr inbounds float, float* %3, i64 %1813
  %1815 = bitcast float* %1814 to <8 x float>*
  %1816 = load <8 x float>, <8 x float>* %1815, align 1, !tbaa !12
  %1817 = add nsw i64 %1781, 72
  %1818 = getelementptr inbounds float, float* %3, i64 %1817
  %1819 = bitcast float* %1818 to <8 x float>*
  %1820 = load <8 x float>, <8 x float>* %1819, align 1, !tbaa !12
  %1821 = add nsw i64 %1781, 80
  %1822 = getelementptr inbounds float, float* %3, i64 %1821
  %1823 = bitcast float* %1822 to <8 x float>*
  %1824 = load <8 x float>, <8 x float>* %1823, align 1, !tbaa !12
  %1825 = add nsw i64 %1781, 88
  %1826 = getelementptr inbounds float, float* %3, i64 %1825
  %1827 = bitcast float* %1826 to <8 x float>*
  %1828 = load <8 x float>, <8 x float>* %1827, align 1, !tbaa !12
  %1829 = add nsw i64 %1781, 96
  %1830 = getelementptr inbounds float, float* %3, i64 %1829
  %1831 = bitcast float* %1830 to <8 x float>*
  %1832 = load <8 x float>, <8 x float>* %1831, align 1, !tbaa !12
  %1833 = add nsw i64 %1781, 104
  %1834 = getelementptr inbounds float, float* %3, i64 %1833
  %1835 = bitcast float* %1834 to <8 x float>*
  %1836 = load <8 x float>, <8 x float>* %1835, align 1, !tbaa !12
  %1837 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1784, <8 x float> %65, <8 x float> %1728) #10
  %1838 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1788, <8 x float> %65, <8 x float> %1732) #10
  %1839 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1792, <8 x float> %65, <8 x float> %1736) #10
  %1840 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1796, <8 x float> %65, <8 x float> %1740) #10
  %1841 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1800, <8 x float> %65, <8 x float> %1744) #10
  %1842 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1804, <8 x float> %65, <8 x float> %1748) #10
  %1843 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1808, <8 x float> %65, <8 x float> %1752) #10
  %1844 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1812, <8 x float> %65, <8 x float> %1756) #10
  %1845 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1816, <8 x float> %65, <8 x float> %1760) #10
  %1846 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1820, <8 x float> %65, <8 x float> %1764) #10
  %1847 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1824, <8 x float> %65, <8 x float> %1768) #10
  %1848 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1828, <8 x float> %65, <8 x float> %1772) #10
  %1849 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1832, <8 x float> %65, <8 x float> %1776) #10
  %1850 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1836, <8 x float> %65, <8 x float> %1780) #10
  store <8 x float> %1837, <8 x float>* %1727, align 1, !tbaa !12
  store <8 x float> %1838, <8 x float>* %1731, align 1, !tbaa !12
  store <8 x float> %1839, <8 x float>* %1735, align 1, !tbaa !12
  store <8 x float> %1840, <8 x float>* %1739, align 1, !tbaa !12
  store <8 x float> %1841, <8 x float>* %1743, align 1, !tbaa !12
  store <8 x float> %1842, <8 x float>* %1747, align 1, !tbaa !12
  store <8 x float> %1843, <8 x float>* %1751, align 1, !tbaa !12
  store <8 x float> %1844, <8 x float>* %1755, align 1, !tbaa !12
  store <8 x float> %1845, <8 x float>* %1759, align 1, !tbaa !12
  store <8 x float> %1846, <8 x float>* %1763, align 1, !tbaa !12
  store <8 x float> %1847, <8 x float>* %1767, align 1, !tbaa !12
  store <8 x float> %1848, <8 x float>* %1771, align 1, !tbaa !12
  store <8 x float> %1849, <8 x float>* %1775, align 1, !tbaa !12
  store <8 x float> %1850, <8 x float>* %1779, align 1, !tbaa !12
  %1851 = add nuw nsw i64 %1668, 112
  %1852 = icmp ult i64 %1851, %1473
  br i1 %1852, label %1667, label %1660

1853:                                             ; preds = %1858, %476, %20, %1068, %1660
  %1854 = add nuw nsw i64 %21, 10
  %1855 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1856 = sext i32 %1855 to i64
  %1857 = icmp slt i64 %1854, %1856
  br i1 %1857, label %20, label %8

1858:                                             ; preds = %1663, %1858
  %1859 = phi i64 [ 0, %1663 ], [ %2057, %1858 ]
  %1860 = getelementptr inbounds float, float* %5, i64 %1859
  %1861 = getelementptr inbounds float, float* %1860, i64 8
  %1862 = bitcast float* %1861 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1862, i32 0, i32 1, i32 1)
  %1863 = getelementptr inbounds float, float* %3, i64 %1859
  %1864 = getelementptr inbounds float, float* %1863, i64 8
  %1865 = bitcast float* %1864 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1865, i32 0, i32 1, i32 1)
  %1866 = getelementptr inbounds float, float* %1860, i64 16
  %1867 = bitcast float* %1866 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1867, i32 0, i32 1, i32 1)
  %1868 = getelementptr inbounds float, float* %1863, i64 16
  %1869 = bitcast float* %1868 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1869, i32 0, i32 1, i32 1)
  %1870 = getelementptr inbounds float, float* %1860, i64 24
  %1871 = bitcast float* %1870 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1871, i32 0, i32 1, i32 1)
  %1872 = getelementptr inbounds float, float* %1863, i64 24
  %1873 = bitcast float* %1872 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1873, i32 0, i32 1, i32 1)
  %1874 = getelementptr inbounds float, float* %1860, i64 32
  %1875 = bitcast float* %1874 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1875, i32 0, i32 1, i32 1)
  %1876 = getelementptr inbounds float, float* %1863, i64 32
  %1877 = bitcast float* %1876 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1877, i32 0, i32 1, i32 1)
  %1878 = getelementptr inbounds float, float* %1860, i64 40
  %1879 = bitcast float* %1878 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1879, i32 0, i32 1, i32 1)
  %1880 = getelementptr inbounds float, float* %1863, i64 40
  %1881 = bitcast float* %1880 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1881, i32 0, i32 1, i32 1)
  %1882 = getelementptr inbounds float, float* %1860, i64 48
  %1883 = bitcast float* %1882 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1883, i32 0, i32 1, i32 1)
  %1884 = getelementptr inbounds float, float* %1863, i64 48
  %1885 = bitcast float* %1884 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1885, i32 0, i32 1, i32 1)
  %1886 = getelementptr inbounds float, float* %1860, i64 56
  %1887 = bitcast float* %1886 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1887, i32 0, i32 1, i32 1)
  %1888 = getelementptr inbounds float, float* %1863, i64 56
  %1889 = bitcast float* %1888 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1889, i32 0, i32 1, i32 1)
  %1890 = getelementptr inbounds float, float* %1860, i64 64
  %1891 = bitcast float* %1890 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1891, i32 0, i32 1, i32 1)
  %1892 = getelementptr inbounds float, float* %1863, i64 64
  %1893 = bitcast float* %1892 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1893, i32 0, i32 1, i32 1)
  %1894 = getelementptr inbounds float, float* %1860, i64 72
  %1895 = bitcast float* %1894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1895, i32 0, i32 1, i32 1)
  %1896 = getelementptr inbounds float, float* %1863, i64 72
  %1897 = bitcast float* %1896 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1897, i32 0, i32 1, i32 1)
  %1898 = getelementptr inbounds float, float* %1860, i64 80
  %1899 = bitcast float* %1898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1899, i32 0, i32 1, i32 1)
  %1900 = getelementptr inbounds float, float* %1863, i64 80
  %1901 = bitcast float* %1900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1901, i32 0, i32 1, i32 1)
  %1902 = getelementptr inbounds float, float* %1860, i64 88
  %1903 = bitcast float* %1902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1903, i32 0, i32 1, i32 1)
  %1904 = getelementptr inbounds float, float* %1863, i64 88
  %1905 = bitcast float* %1904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1905, i32 0, i32 1, i32 1)
  %1906 = getelementptr inbounds float, float* %1860, i64 96
  %1907 = bitcast float* %1906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1907, i32 0, i32 1, i32 1)
  %1908 = getelementptr inbounds float, float* %1863, i64 96
  %1909 = bitcast float* %1908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1909, i32 0, i32 1, i32 1)
  %1910 = getelementptr inbounds float, float* %1860, i64 104
  %1911 = bitcast float* %1910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1911, i32 0, i32 1, i32 1)
  %1912 = getelementptr inbounds float, float* %1863, i64 104
  %1913 = bitcast float* %1912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1913, i32 0, i32 1, i32 1)
  %1914 = getelementptr inbounds float, float* %1860, i64 112
  %1915 = bitcast float* %1914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1915, i32 0, i32 1, i32 1)
  %1916 = getelementptr inbounds float, float* %1863, i64 112
  %1917 = bitcast float* %1916 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1917, i32 0, i32 1, i32 1)
  %1918 = bitcast float* %1860 to <8 x float>*
  %1919 = load <8 x float>, <8 x float>* %1918, align 1, !tbaa !12
  %1920 = or i64 %1859, 8
  %1921 = getelementptr inbounds float, float* %5, i64 %1920
  %1922 = bitcast float* %1921 to <8 x float>*
  %1923 = load <8 x float>, <8 x float>* %1922, align 1, !tbaa !12
  %1924 = add nuw nsw i64 %1859, 16
  %1925 = getelementptr inbounds float, float* %5, i64 %1924
  %1926 = bitcast float* %1925 to <8 x float>*
  %1927 = load <8 x float>, <8 x float>* %1926, align 1, !tbaa !12
  %1928 = add nuw nsw i64 %1859, 24
  %1929 = getelementptr inbounds float, float* %5, i64 %1928
  %1930 = bitcast float* %1929 to <8 x float>*
  %1931 = load <8 x float>, <8 x float>* %1930, align 1, !tbaa !12
  %1932 = add nuw nsw i64 %1859, 32
  %1933 = getelementptr inbounds float, float* %5, i64 %1932
  %1934 = bitcast float* %1933 to <8 x float>*
  %1935 = load <8 x float>, <8 x float>* %1934, align 1, !tbaa !12
  %1936 = add nuw nsw i64 %1859, 40
  %1937 = getelementptr inbounds float, float* %5, i64 %1936
  %1938 = bitcast float* %1937 to <8 x float>*
  %1939 = load <8 x float>, <8 x float>* %1938, align 1, !tbaa !12
  %1940 = add nuw nsw i64 %1859, 48
  %1941 = getelementptr inbounds float, float* %5, i64 %1940
  %1942 = bitcast float* %1941 to <8 x float>*
  %1943 = load <8 x float>, <8 x float>* %1942, align 1, !tbaa !12
  %1944 = add nuw nsw i64 %1859, 56
  %1945 = getelementptr inbounds float, float* %5, i64 %1944
  %1946 = bitcast float* %1945 to <8 x float>*
  %1947 = load <8 x float>, <8 x float>* %1946, align 1, !tbaa !12
  %1948 = add nuw nsw i64 %1859, 64
  %1949 = getelementptr inbounds float, float* %5, i64 %1948
  %1950 = bitcast float* %1949 to <8 x float>*
  %1951 = load <8 x float>, <8 x float>* %1950, align 1, !tbaa !12
  %1952 = add nuw nsw i64 %1859, 72
  %1953 = getelementptr inbounds float, float* %5, i64 %1952
  %1954 = bitcast float* %1953 to <8 x float>*
  %1955 = load <8 x float>, <8 x float>* %1954, align 1, !tbaa !12
  %1956 = add nuw nsw i64 %1859, 80
  %1957 = getelementptr inbounds float, float* %5, i64 %1956
  %1958 = bitcast float* %1957 to <8 x float>*
  %1959 = load <8 x float>, <8 x float>* %1958, align 1, !tbaa !12
  %1960 = add nuw nsw i64 %1859, 88
  %1961 = getelementptr inbounds float, float* %5, i64 %1960
  %1962 = bitcast float* %1961 to <8 x float>*
  %1963 = load <8 x float>, <8 x float>* %1962, align 1, !tbaa !12
  %1964 = add nuw nsw i64 %1859, 96
  %1965 = getelementptr inbounds float, float* %5, i64 %1964
  %1966 = bitcast float* %1965 to <8 x float>*
  %1967 = load <8 x float>, <8 x float>* %1966, align 1, !tbaa !12
  %1968 = add nuw nsw i64 %1859, 104
  %1969 = getelementptr inbounds float, float* %5, i64 %1968
  %1970 = bitcast float* %1969 to <8 x float>*
  %1971 = load <8 x float>, <8 x float>* %1970, align 1, !tbaa !12
  %1972 = trunc i64 %1859 to i32
  %1973 = add nsw i32 %1666, %1972
  %1974 = sext i32 %1973 to i64
  %1975 = getelementptr inbounds float, float* %3, i64 %1974
  %1976 = bitcast float* %1975 to <8 x float>*
  %1977 = load <8 x float>, <8 x float>* %1976, align 1, !tbaa !12
  %1978 = add nsw i32 %1973, 8
  %1979 = sext i32 %1978 to i64
  %1980 = getelementptr inbounds float, float* %3, i64 %1979
  %1981 = bitcast float* %1980 to <8 x float>*
  %1982 = load <8 x float>, <8 x float>* %1981, align 1, !tbaa !12
  %1983 = add nsw i32 %1973, 16
  %1984 = sext i32 %1983 to i64
  %1985 = getelementptr inbounds float, float* %3, i64 %1984
  %1986 = bitcast float* %1985 to <8 x float>*
  %1987 = load <8 x float>, <8 x float>* %1986, align 1, !tbaa !12
  %1988 = add nsw i32 %1973, 24
  %1989 = sext i32 %1988 to i64
  %1990 = getelementptr inbounds float, float* %3, i64 %1989
  %1991 = bitcast float* %1990 to <8 x float>*
  %1992 = load <8 x float>, <8 x float>* %1991, align 1, !tbaa !12
  %1993 = add nsw i32 %1973, 32
  %1994 = sext i32 %1993 to i64
  %1995 = getelementptr inbounds float, float* %3, i64 %1994
  %1996 = bitcast float* %1995 to <8 x float>*
  %1997 = load <8 x float>, <8 x float>* %1996, align 1, !tbaa !12
  %1998 = add nsw i32 %1973, 40
  %1999 = sext i32 %1998 to i64
  %2000 = getelementptr inbounds float, float* %3, i64 %1999
  %2001 = bitcast float* %2000 to <8 x float>*
  %2002 = load <8 x float>, <8 x float>* %2001, align 1, !tbaa !12
  %2003 = add nsw i32 %1973, 48
  %2004 = sext i32 %2003 to i64
  %2005 = getelementptr inbounds float, float* %3, i64 %2004
  %2006 = bitcast float* %2005 to <8 x float>*
  %2007 = load <8 x float>, <8 x float>* %2006, align 1, !tbaa !12
  %2008 = add nsw i32 %1973, 56
  %2009 = sext i32 %2008 to i64
  %2010 = getelementptr inbounds float, float* %3, i64 %2009
  %2011 = bitcast float* %2010 to <8 x float>*
  %2012 = load <8 x float>, <8 x float>* %2011, align 1, !tbaa !12
  %2013 = add nsw i32 %1973, 64
  %2014 = sext i32 %2013 to i64
  %2015 = getelementptr inbounds float, float* %3, i64 %2014
  %2016 = bitcast float* %2015 to <8 x float>*
  %2017 = load <8 x float>, <8 x float>* %2016, align 1, !tbaa !12
  %2018 = add nsw i32 %1973, 72
  %2019 = sext i32 %2018 to i64
  %2020 = getelementptr inbounds float, float* %3, i64 %2019
  %2021 = bitcast float* %2020 to <8 x float>*
  %2022 = load <8 x float>, <8 x float>* %2021, align 1, !tbaa !12
  %2023 = add nsw i32 %1973, 80
  %2024 = sext i32 %2023 to i64
  %2025 = getelementptr inbounds float, float* %3, i64 %2024
  %2026 = bitcast float* %2025 to <8 x float>*
  %2027 = load <8 x float>, <8 x float>* %2026, align 1, !tbaa !12
  %2028 = add nsw i32 %1973, 88
  %2029 = sext i32 %2028 to i64
  %2030 = getelementptr inbounds float, float* %3, i64 %2029
  %2031 = bitcast float* %2030 to <8 x float>*
  %2032 = load <8 x float>, <8 x float>* %2031, align 1, !tbaa !12
  %2033 = add nsw i32 %1973, 96
  %2034 = sext i32 %2033 to i64
  %2035 = getelementptr inbounds float, float* %3, i64 %2034
  %2036 = bitcast float* %2035 to <8 x float>*
  %2037 = load <8 x float>, <8 x float>* %2036, align 1, !tbaa !12
  %2038 = add nsw i32 %1973, 104
  %2039 = sext i32 %2038 to i64
  %2040 = getelementptr inbounds float, float* %3, i64 %2039
  %2041 = bitcast float* %2040 to <8 x float>*
  %2042 = load <8 x float>, <8 x float>* %2041, align 1, !tbaa !12
  %2043 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1977, <8 x float> %70, <8 x float> %1919) #10
  %2044 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1982, <8 x float> %70, <8 x float> %1923) #10
  %2045 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1987, <8 x float> %70, <8 x float> %1927) #10
  %2046 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1992, <8 x float> %70, <8 x float> %1931) #10
  %2047 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1997, <8 x float> %70, <8 x float> %1935) #10
  %2048 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2002, <8 x float> %70, <8 x float> %1939) #10
  %2049 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2007, <8 x float> %70, <8 x float> %1943) #10
  %2050 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2012, <8 x float> %70, <8 x float> %1947) #10
  %2051 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2017, <8 x float> %70, <8 x float> %1951) #10
  %2052 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2022, <8 x float> %70, <8 x float> %1955) #10
  %2053 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2027, <8 x float> %70, <8 x float> %1959) #10
  %2054 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2032, <8 x float> %70, <8 x float> %1963) #10
  %2055 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2037, <8 x float> %70, <8 x float> %1967) #10
  %2056 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %2042, <8 x float> %70, <8 x float> %1971) #10
  store <8 x float> %2043, <8 x float>* %1918, align 1, !tbaa !12
  store <8 x float> %2044, <8 x float>* %1922, align 1, !tbaa !12
  store <8 x float> %2045, <8 x float>* %1926, align 1, !tbaa !12
  store <8 x float> %2046, <8 x float>* %1930, align 1, !tbaa !12
  store <8 x float> %2047, <8 x float>* %1934, align 1, !tbaa !12
  store <8 x float> %2048, <8 x float>* %1938, align 1, !tbaa !12
  store <8 x float> %2049, <8 x float>* %1942, align 1, !tbaa !12
  store <8 x float> %2050, <8 x float>* %1946, align 1, !tbaa !12
  store <8 x float> %2051, <8 x float>* %1950, align 1, !tbaa !12
  store <8 x float> %2052, <8 x float>* %1954, align 1, !tbaa !12
  store <8 x float> %2053, <8 x float>* %1958, align 1, !tbaa !12
  store <8 x float> %2054, <8 x float>* %1962, align 1, !tbaa !12
  store <8 x float> %2055, <8 x float>* %1966, align 1, !tbaa !12
  store <8 x float> %2056, <8 x float>* %1970, align 1, !tbaa !12
  %2057 = add nuw nsw i64 %1859, 112
  %2058 = icmp ult i64 %2057, %1664
  br i1 %2058, label %1858, label %1853
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 290
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui14_uk10.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
