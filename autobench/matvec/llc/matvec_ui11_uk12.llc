; ModuleID = 'codes/matvec_ui11_uk12.cpp'
source_filename = "codes/matvec_ui11_uk12.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui11_uk12.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 88
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 96
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1808, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1808
  %21 = phi i64 [ %1809, %1808 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = or i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = or i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %1808

83:                                               ; preds = %20
  %84 = zext i32 %81 to i64
  %85 = trunc i64 %21 to i32
  %86 = mul nsw i32 %81, %85
  br label %93

87:                                               ; preds = %93
  br i1 %82, label %88, label %558

88:                                               ; preds = %87
  %89 = trunc i64 %26 to i32
  %90 = mul nsw i32 %81, %89
  %91 = sext i32 %90 to i64
  %92 = zext i32 %81 to i64
  br label %258

93:                                               ; preds = %83, %93
  %94 = phi i64 [ 0, %83 ], [ %250, %93 ]
  %95 = getelementptr inbounds float, float* %5, i64 %94
  %96 = getelementptr inbounds float, float* %95, i64 8
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %3, i64 %94
  %99 = getelementptr inbounds float, float* %98, i64 8
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %95, i64 16
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %98, i64 16
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %95, i64 24
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %98, i64 24
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %95, i64 32
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %98, i64 32
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %95, i64 40
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %98, i64 40
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %95, i64 48
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %98, i64 48
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %95, i64 56
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %98, i64 56
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %95, i64 64
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %98, i64 64
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %95, i64 72
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %98, i64 72
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = getelementptr inbounds float, float* %95, i64 80
  %134 = bitcast float* %133 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %134, i32 0, i32 1, i32 1)
  %135 = getelementptr inbounds float, float* %98, i64 80
  %136 = bitcast float* %135 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %136, i32 0, i32 1, i32 1)
  %137 = getelementptr inbounds float, float* %95, i64 88
  %138 = bitcast float* %137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %138, i32 0, i32 1, i32 1)
  %139 = getelementptr inbounds float, float* %98, i64 88
  %140 = bitcast float* %139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %140, i32 0, i32 1, i32 1)
  %141 = bitcast float* %95 to <8 x float>*
  %142 = load <8 x float>, <8 x float>* %141, align 1, !tbaa !12
  %143 = add nuw nsw i64 %94, 8
  %144 = getelementptr inbounds float, float* %5, i64 %143
  %145 = bitcast float* %144 to <8 x float>*
  %146 = load <8 x float>, <8 x float>* %145, align 1, !tbaa !12
  %147 = add nuw nsw i64 %94, 16
  %148 = getelementptr inbounds float, float* %5, i64 %147
  %149 = bitcast float* %148 to <8 x float>*
  %150 = load <8 x float>, <8 x float>* %149, align 1, !tbaa !12
  %151 = add nuw nsw i64 %94, 24
  %152 = getelementptr inbounds float, float* %5, i64 %151
  %153 = bitcast float* %152 to <8 x float>*
  %154 = load <8 x float>, <8 x float>* %153, align 1, !tbaa !12
  %155 = add nuw nsw i64 %94, 32
  %156 = getelementptr inbounds float, float* %5, i64 %155
  %157 = bitcast float* %156 to <8 x float>*
  %158 = load <8 x float>, <8 x float>* %157, align 1, !tbaa !12
  %159 = add nuw nsw i64 %94, 40
  %160 = getelementptr inbounds float, float* %5, i64 %159
  %161 = bitcast float* %160 to <8 x float>*
  %162 = load <8 x float>, <8 x float>* %161, align 1, !tbaa !12
  %163 = add nuw nsw i64 %94, 48
  %164 = getelementptr inbounds float, float* %5, i64 %163
  %165 = bitcast float* %164 to <8 x float>*
  %166 = load <8 x float>, <8 x float>* %165, align 1, !tbaa !12
  %167 = add nuw nsw i64 %94, 56
  %168 = getelementptr inbounds float, float* %5, i64 %167
  %169 = bitcast float* %168 to <8 x float>*
  %170 = load <8 x float>, <8 x float>* %169, align 1, !tbaa !12
  %171 = add nuw nsw i64 %94, 64
  %172 = getelementptr inbounds float, float* %5, i64 %171
  %173 = bitcast float* %172 to <8 x float>*
  %174 = load <8 x float>, <8 x float>* %173, align 1, !tbaa !12
  %175 = add nuw nsw i64 %94, 72
  %176 = getelementptr inbounds float, float* %5, i64 %175
  %177 = bitcast float* %176 to <8 x float>*
  %178 = load <8 x float>, <8 x float>* %177, align 1, !tbaa !12
  %179 = add nuw nsw i64 %94, 80
  %180 = getelementptr inbounds float, float* %5, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = trunc i64 %94 to i32
  %184 = add nsw i32 %86, %183
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds float, float* %3, i64 %185
  %187 = bitcast float* %186 to <8 x float>*
  %188 = load <8 x float>, <8 x float>* %187, align 1, !tbaa !12
  %189 = add nsw i32 %184, 8
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds float, float* %3, i64 %190
  %192 = bitcast float* %191 to <8 x float>*
  %193 = load <8 x float>, <8 x float>* %192, align 1, !tbaa !12
  %194 = add nsw i32 %184, 16
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds float, float* %3, i64 %195
  %197 = bitcast float* %196 to <8 x float>*
  %198 = load <8 x float>, <8 x float>* %197, align 1, !tbaa !12
  %199 = add nsw i32 %184, 24
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds float, float* %3, i64 %200
  %202 = bitcast float* %201 to <8 x float>*
  %203 = load <8 x float>, <8 x float>* %202, align 1, !tbaa !12
  %204 = add nsw i32 %184, 32
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds float, float* %3, i64 %205
  %207 = bitcast float* %206 to <8 x float>*
  %208 = load <8 x float>, <8 x float>* %207, align 1, !tbaa !12
  %209 = add nsw i32 %184, 40
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds float, float* %3, i64 %210
  %212 = bitcast float* %211 to <8 x float>*
  %213 = load <8 x float>, <8 x float>* %212, align 1, !tbaa !12
  %214 = add nsw i32 %184, 48
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds float, float* %3, i64 %215
  %217 = bitcast float* %216 to <8 x float>*
  %218 = load <8 x float>, <8 x float>* %217, align 1, !tbaa !12
  %219 = add nsw i32 %184, 56
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds float, float* %3, i64 %220
  %222 = bitcast float* %221 to <8 x float>*
  %223 = load <8 x float>, <8 x float>* %222, align 1, !tbaa !12
  %224 = add nsw i32 %184, 64
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds float, float* %3, i64 %225
  %227 = bitcast float* %226 to <8 x float>*
  %228 = load <8 x float>, <8 x float>* %227, align 1, !tbaa !12
  %229 = add nsw i32 %184, 72
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds float, float* %3, i64 %230
  %232 = bitcast float* %231 to <8 x float>*
  %233 = load <8 x float>, <8 x float>* %232, align 1, !tbaa !12
  %234 = add nsw i32 %184, 80
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds float, float* %3, i64 %235
  %237 = bitcast float* %236 to <8 x float>*
  %238 = load <8 x float>, <8 x float>* %237, align 1, !tbaa !12
  %239 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %188, <8 x float> %25, <8 x float> %142) #10
  %240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %193, <8 x float> %25, <8 x float> %146) #10
  %241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %198, <8 x float> %25, <8 x float> %150) #10
  %242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %203, <8 x float> %25, <8 x float> %154) #10
  %243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %208, <8 x float> %25, <8 x float> %158) #10
  %244 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %213, <8 x float> %25, <8 x float> %162) #10
  %245 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %218, <8 x float> %25, <8 x float> %166) #10
  %246 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %223, <8 x float> %25, <8 x float> %170) #10
  %247 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %228, <8 x float> %25, <8 x float> %174) #10
  %248 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %233, <8 x float> %25, <8 x float> %178) #10
  %249 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %238, <8 x float> %25, <8 x float> %182) #10
  store <8 x float> %239, <8 x float>* %141, align 1, !tbaa !12
  store <8 x float> %240, <8 x float>* %145, align 1, !tbaa !12
  store <8 x float> %241, <8 x float>* %149, align 1, !tbaa !12
  store <8 x float> %242, <8 x float>* %153, align 1, !tbaa !12
  store <8 x float> %243, <8 x float>* %157, align 1, !tbaa !12
  store <8 x float> %244, <8 x float>* %161, align 1, !tbaa !12
  store <8 x float> %245, <8 x float>* %165, align 1, !tbaa !12
  store <8 x float> %246, <8 x float>* %169, align 1, !tbaa !12
  store <8 x float> %247, <8 x float>* %173, align 1, !tbaa !12
  store <8 x float> %248, <8 x float>* %177, align 1, !tbaa !12
  store <8 x float> %249, <8 x float>* %181, align 1, !tbaa !12
  %250 = add nuw nsw i64 %94, 88
  %251 = icmp ult i64 %250, %84
  br i1 %251, label %93, label %87

252:                                              ; preds = %258
  br i1 %82, label %253, label %558

253:                                              ; preds = %252
  %254 = trunc i64 %31 to i32
  %255 = mul nsw i32 %81, %254
  %256 = sext i32 %255 to i64
  %257 = zext i32 %81 to i64
  br label %411

258:                                              ; preds = %88, %258
  %259 = phi i64 [ 0, %88 ], [ %403, %258 ]
  %260 = getelementptr inbounds float, float* %5, i64 %259
  %261 = getelementptr inbounds float, float* %260, i64 8
  %262 = bitcast float* %261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %262, i32 0, i32 1, i32 1)
  %263 = getelementptr inbounds float, float* %3, i64 %259
  %264 = getelementptr inbounds float, float* %263, i64 8
  %265 = bitcast float* %264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %265, i32 0, i32 1, i32 1)
  %266 = getelementptr inbounds float, float* %260, i64 16
  %267 = bitcast float* %266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %267, i32 0, i32 1, i32 1)
  %268 = getelementptr inbounds float, float* %263, i64 16
  %269 = bitcast float* %268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %269, i32 0, i32 1, i32 1)
  %270 = getelementptr inbounds float, float* %260, i64 24
  %271 = bitcast float* %270 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %271, i32 0, i32 1, i32 1)
  %272 = getelementptr inbounds float, float* %263, i64 24
  %273 = bitcast float* %272 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %273, i32 0, i32 1, i32 1)
  %274 = getelementptr inbounds float, float* %260, i64 32
  %275 = bitcast float* %274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %275, i32 0, i32 1, i32 1)
  %276 = getelementptr inbounds float, float* %263, i64 32
  %277 = bitcast float* %276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %277, i32 0, i32 1, i32 1)
  %278 = getelementptr inbounds float, float* %260, i64 40
  %279 = bitcast float* %278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %279, i32 0, i32 1, i32 1)
  %280 = getelementptr inbounds float, float* %263, i64 40
  %281 = bitcast float* %280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %281, i32 0, i32 1, i32 1)
  %282 = getelementptr inbounds float, float* %260, i64 48
  %283 = bitcast float* %282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %283, i32 0, i32 1, i32 1)
  %284 = getelementptr inbounds float, float* %263, i64 48
  %285 = bitcast float* %284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %285, i32 0, i32 1, i32 1)
  %286 = getelementptr inbounds float, float* %260, i64 56
  %287 = bitcast float* %286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %287, i32 0, i32 1, i32 1)
  %288 = getelementptr inbounds float, float* %263, i64 56
  %289 = bitcast float* %288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %289, i32 0, i32 1, i32 1)
  %290 = getelementptr inbounds float, float* %260, i64 64
  %291 = bitcast float* %290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %291, i32 0, i32 1, i32 1)
  %292 = getelementptr inbounds float, float* %263, i64 64
  %293 = bitcast float* %292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %293, i32 0, i32 1, i32 1)
  %294 = getelementptr inbounds float, float* %260, i64 72
  %295 = bitcast float* %294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %295, i32 0, i32 1, i32 1)
  %296 = getelementptr inbounds float, float* %263, i64 72
  %297 = bitcast float* %296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %297, i32 0, i32 1, i32 1)
  %298 = getelementptr inbounds float, float* %260, i64 80
  %299 = bitcast float* %298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %299, i32 0, i32 1, i32 1)
  %300 = getelementptr inbounds float, float* %263, i64 80
  %301 = bitcast float* %300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %301, i32 0, i32 1, i32 1)
  %302 = getelementptr inbounds float, float* %260, i64 88
  %303 = bitcast float* %302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %303, i32 0, i32 1, i32 1)
  %304 = getelementptr inbounds float, float* %263, i64 88
  %305 = bitcast float* %304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %305, i32 0, i32 1, i32 1)
  %306 = bitcast float* %260 to <8 x float>*
  %307 = load <8 x float>, <8 x float>* %306, align 1, !tbaa !12
  %308 = add nuw nsw i64 %259, 8
  %309 = getelementptr inbounds float, float* %5, i64 %308
  %310 = bitcast float* %309 to <8 x float>*
  %311 = load <8 x float>, <8 x float>* %310, align 1, !tbaa !12
  %312 = add nuw nsw i64 %259, 16
  %313 = getelementptr inbounds float, float* %5, i64 %312
  %314 = bitcast float* %313 to <8 x float>*
  %315 = load <8 x float>, <8 x float>* %314, align 1, !tbaa !12
  %316 = add nuw nsw i64 %259, 24
  %317 = getelementptr inbounds float, float* %5, i64 %316
  %318 = bitcast float* %317 to <8 x float>*
  %319 = load <8 x float>, <8 x float>* %318, align 1, !tbaa !12
  %320 = add nuw nsw i64 %259, 32
  %321 = getelementptr inbounds float, float* %5, i64 %320
  %322 = bitcast float* %321 to <8 x float>*
  %323 = load <8 x float>, <8 x float>* %322, align 1, !tbaa !12
  %324 = add nuw nsw i64 %259, 40
  %325 = getelementptr inbounds float, float* %5, i64 %324
  %326 = bitcast float* %325 to <8 x float>*
  %327 = load <8 x float>, <8 x float>* %326, align 1, !tbaa !12
  %328 = add nuw nsw i64 %259, 48
  %329 = getelementptr inbounds float, float* %5, i64 %328
  %330 = bitcast float* %329 to <8 x float>*
  %331 = load <8 x float>, <8 x float>* %330, align 1, !tbaa !12
  %332 = add nuw nsw i64 %259, 56
  %333 = getelementptr inbounds float, float* %5, i64 %332
  %334 = bitcast float* %333 to <8 x float>*
  %335 = load <8 x float>, <8 x float>* %334, align 1, !tbaa !12
  %336 = add nuw nsw i64 %259, 64
  %337 = getelementptr inbounds float, float* %5, i64 %336
  %338 = bitcast float* %337 to <8 x float>*
  %339 = load <8 x float>, <8 x float>* %338, align 1, !tbaa !12
  %340 = add nuw nsw i64 %259, 72
  %341 = getelementptr inbounds float, float* %5, i64 %340
  %342 = bitcast float* %341 to <8 x float>*
  %343 = load <8 x float>, <8 x float>* %342, align 1, !tbaa !12
  %344 = add nuw nsw i64 %259, 80
  %345 = getelementptr inbounds float, float* %5, i64 %344
  %346 = bitcast float* %345 to <8 x float>*
  %347 = load <8 x float>, <8 x float>* %346, align 1, !tbaa !12
  %348 = add nsw i64 %259, %91
  %349 = getelementptr inbounds float, float* %3, i64 %348
  %350 = bitcast float* %349 to <8 x float>*
  %351 = load <8 x float>, <8 x float>* %350, align 1, !tbaa !12
  %352 = add nsw i64 %348, 8
  %353 = getelementptr inbounds float, float* %3, i64 %352
  %354 = bitcast float* %353 to <8 x float>*
  %355 = load <8 x float>, <8 x float>* %354, align 1, !tbaa !12
  %356 = add nsw i64 %348, 16
  %357 = getelementptr inbounds float, float* %3, i64 %356
  %358 = bitcast float* %357 to <8 x float>*
  %359 = load <8 x float>, <8 x float>* %358, align 1, !tbaa !12
  %360 = add nsw i64 %348, 24
  %361 = getelementptr inbounds float, float* %3, i64 %360
  %362 = bitcast float* %361 to <8 x float>*
  %363 = load <8 x float>, <8 x float>* %362, align 1, !tbaa !12
  %364 = add nsw i64 %348, 32
  %365 = getelementptr inbounds float, float* %3, i64 %364
  %366 = bitcast float* %365 to <8 x float>*
  %367 = load <8 x float>, <8 x float>* %366, align 1, !tbaa !12
  %368 = add nsw i64 %348, 40
  %369 = getelementptr inbounds float, float* %3, i64 %368
  %370 = bitcast float* %369 to <8 x float>*
  %371 = load <8 x float>, <8 x float>* %370, align 1, !tbaa !12
  %372 = add nsw i64 %348, 48
  %373 = getelementptr inbounds float, float* %3, i64 %372
  %374 = bitcast float* %373 to <8 x float>*
  %375 = load <8 x float>, <8 x float>* %374, align 1, !tbaa !12
  %376 = add nsw i64 %348, 56
  %377 = getelementptr inbounds float, float* %3, i64 %376
  %378 = bitcast float* %377 to <8 x float>*
  %379 = load <8 x float>, <8 x float>* %378, align 1, !tbaa !12
  %380 = add nsw i64 %348, 64
  %381 = getelementptr inbounds float, float* %3, i64 %380
  %382 = bitcast float* %381 to <8 x float>*
  %383 = load <8 x float>, <8 x float>* %382, align 1, !tbaa !12
  %384 = add nsw i64 %348, 72
  %385 = getelementptr inbounds float, float* %3, i64 %384
  %386 = bitcast float* %385 to <8 x float>*
  %387 = load <8 x float>, <8 x float>* %386, align 1, !tbaa !12
  %388 = add nsw i64 %348, 80
  %389 = getelementptr inbounds float, float* %3, i64 %388
  %390 = bitcast float* %389 to <8 x float>*
  %391 = load <8 x float>, <8 x float>* %390, align 1, !tbaa !12
  %392 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %351, <8 x float> %30, <8 x float> %307) #10
  %393 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %355, <8 x float> %30, <8 x float> %311) #10
  %394 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %359, <8 x float> %30, <8 x float> %315) #10
  %395 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %363, <8 x float> %30, <8 x float> %319) #10
  %396 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %367, <8 x float> %30, <8 x float> %323) #10
  %397 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %371, <8 x float> %30, <8 x float> %327) #10
  %398 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %375, <8 x float> %30, <8 x float> %331) #10
  %399 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %379, <8 x float> %30, <8 x float> %335) #10
  %400 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %383, <8 x float> %30, <8 x float> %339) #10
  %401 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %387, <8 x float> %30, <8 x float> %343) #10
  %402 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %391, <8 x float> %30, <8 x float> %347) #10
  store <8 x float> %392, <8 x float>* %306, align 1, !tbaa !12
  store <8 x float> %393, <8 x float>* %310, align 1, !tbaa !12
  store <8 x float> %394, <8 x float>* %314, align 1, !tbaa !12
  store <8 x float> %395, <8 x float>* %318, align 1, !tbaa !12
  store <8 x float> %396, <8 x float>* %322, align 1, !tbaa !12
  store <8 x float> %397, <8 x float>* %326, align 1, !tbaa !12
  store <8 x float> %398, <8 x float>* %330, align 1, !tbaa !12
  store <8 x float> %399, <8 x float>* %334, align 1, !tbaa !12
  store <8 x float> %400, <8 x float>* %338, align 1, !tbaa !12
  store <8 x float> %401, <8 x float>* %342, align 1, !tbaa !12
  store <8 x float> %402, <8 x float>* %346, align 1, !tbaa !12
  %403 = add nuw nsw i64 %259, 88
  %404 = icmp ult i64 %403, %92
  br i1 %404, label %258, label %252

405:                                              ; preds = %411
  br i1 %82, label %406, label %558

406:                                              ; preds = %405
  %407 = trunc i64 %36 to i32
  %408 = mul nsw i32 %81, %407
  %409 = sext i32 %408 to i64
  %410 = zext i32 %81 to i64
  br label %565

411:                                              ; preds = %253, %411
  %412 = phi i64 [ 0, %253 ], [ %556, %411 ]
  %413 = getelementptr inbounds float, float* %5, i64 %412
  %414 = getelementptr inbounds float, float* %413, i64 8
  %415 = bitcast float* %414 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %415, i32 0, i32 1, i32 1)
  %416 = getelementptr inbounds float, float* %3, i64 %412
  %417 = getelementptr inbounds float, float* %416, i64 8
  %418 = bitcast float* %417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %418, i32 0, i32 1, i32 1)
  %419 = getelementptr inbounds float, float* %413, i64 16
  %420 = bitcast float* %419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %420, i32 0, i32 1, i32 1)
  %421 = getelementptr inbounds float, float* %416, i64 16
  %422 = bitcast float* %421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %422, i32 0, i32 1, i32 1)
  %423 = getelementptr inbounds float, float* %413, i64 24
  %424 = bitcast float* %423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %424, i32 0, i32 1, i32 1)
  %425 = getelementptr inbounds float, float* %416, i64 24
  %426 = bitcast float* %425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %426, i32 0, i32 1, i32 1)
  %427 = getelementptr inbounds float, float* %413, i64 32
  %428 = bitcast float* %427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %428, i32 0, i32 1, i32 1)
  %429 = getelementptr inbounds float, float* %416, i64 32
  %430 = bitcast float* %429 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %430, i32 0, i32 1, i32 1)
  %431 = getelementptr inbounds float, float* %413, i64 40
  %432 = bitcast float* %431 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %432, i32 0, i32 1, i32 1)
  %433 = getelementptr inbounds float, float* %416, i64 40
  %434 = bitcast float* %433 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %434, i32 0, i32 1, i32 1)
  %435 = getelementptr inbounds float, float* %413, i64 48
  %436 = bitcast float* %435 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %436, i32 0, i32 1, i32 1)
  %437 = getelementptr inbounds float, float* %416, i64 48
  %438 = bitcast float* %437 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %438, i32 0, i32 1, i32 1)
  %439 = getelementptr inbounds float, float* %413, i64 56
  %440 = bitcast float* %439 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %440, i32 0, i32 1, i32 1)
  %441 = getelementptr inbounds float, float* %416, i64 56
  %442 = bitcast float* %441 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %442, i32 0, i32 1, i32 1)
  %443 = getelementptr inbounds float, float* %413, i64 64
  %444 = bitcast float* %443 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %444, i32 0, i32 1, i32 1)
  %445 = getelementptr inbounds float, float* %416, i64 64
  %446 = bitcast float* %445 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %446, i32 0, i32 1, i32 1)
  %447 = getelementptr inbounds float, float* %413, i64 72
  %448 = bitcast float* %447 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %448, i32 0, i32 1, i32 1)
  %449 = getelementptr inbounds float, float* %416, i64 72
  %450 = bitcast float* %449 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %450, i32 0, i32 1, i32 1)
  %451 = getelementptr inbounds float, float* %413, i64 80
  %452 = bitcast float* %451 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %452, i32 0, i32 1, i32 1)
  %453 = getelementptr inbounds float, float* %416, i64 80
  %454 = bitcast float* %453 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %454, i32 0, i32 1, i32 1)
  %455 = getelementptr inbounds float, float* %413, i64 88
  %456 = bitcast float* %455 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %456, i32 0, i32 1, i32 1)
  %457 = getelementptr inbounds float, float* %416, i64 88
  %458 = bitcast float* %457 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %458, i32 0, i32 1, i32 1)
  %459 = bitcast float* %413 to <8 x float>*
  %460 = load <8 x float>, <8 x float>* %459, align 1, !tbaa !12
  %461 = add nuw nsw i64 %412, 8
  %462 = getelementptr inbounds float, float* %5, i64 %461
  %463 = bitcast float* %462 to <8 x float>*
  %464 = load <8 x float>, <8 x float>* %463, align 1, !tbaa !12
  %465 = add nuw nsw i64 %412, 16
  %466 = getelementptr inbounds float, float* %5, i64 %465
  %467 = bitcast float* %466 to <8 x float>*
  %468 = load <8 x float>, <8 x float>* %467, align 1, !tbaa !12
  %469 = add nuw nsw i64 %412, 24
  %470 = getelementptr inbounds float, float* %5, i64 %469
  %471 = bitcast float* %470 to <8 x float>*
  %472 = load <8 x float>, <8 x float>* %471, align 1, !tbaa !12
  %473 = add nuw nsw i64 %412, 32
  %474 = getelementptr inbounds float, float* %5, i64 %473
  %475 = bitcast float* %474 to <8 x float>*
  %476 = load <8 x float>, <8 x float>* %475, align 1, !tbaa !12
  %477 = add nuw nsw i64 %412, 40
  %478 = getelementptr inbounds float, float* %5, i64 %477
  %479 = bitcast float* %478 to <8 x float>*
  %480 = load <8 x float>, <8 x float>* %479, align 1, !tbaa !12
  %481 = add nuw nsw i64 %412, 48
  %482 = getelementptr inbounds float, float* %5, i64 %481
  %483 = bitcast float* %482 to <8 x float>*
  %484 = load <8 x float>, <8 x float>* %483, align 1, !tbaa !12
  %485 = add nuw nsw i64 %412, 56
  %486 = getelementptr inbounds float, float* %5, i64 %485
  %487 = bitcast float* %486 to <8 x float>*
  %488 = load <8 x float>, <8 x float>* %487, align 1, !tbaa !12
  %489 = add nuw nsw i64 %412, 64
  %490 = getelementptr inbounds float, float* %5, i64 %489
  %491 = bitcast float* %490 to <8 x float>*
  %492 = load <8 x float>, <8 x float>* %491, align 1, !tbaa !12
  %493 = add nuw nsw i64 %412, 72
  %494 = getelementptr inbounds float, float* %5, i64 %493
  %495 = bitcast float* %494 to <8 x float>*
  %496 = load <8 x float>, <8 x float>* %495, align 1, !tbaa !12
  %497 = add nuw nsw i64 %412, 80
  %498 = getelementptr inbounds float, float* %5, i64 %497
  %499 = bitcast float* %498 to <8 x float>*
  %500 = load <8 x float>, <8 x float>* %499, align 1, !tbaa !12
  %501 = add nsw i64 %412, %256
  %502 = getelementptr inbounds float, float* %3, i64 %501
  %503 = bitcast float* %502 to <8 x float>*
  %504 = load <8 x float>, <8 x float>* %503, align 1, !tbaa !12
  %505 = add nsw i64 %501, 8
  %506 = getelementptr inbounds float, float* %3, i64 %505
  %507 = bitcast float* %506 to <8 x float>*
  %508 = load <8 x float>, <8 x float>* %507, align 1, !tbaa !12
  %509 = add nsw i64 %501, 16
  %510 = getelementptr inbounds float, float* %3, i64 %509
  %511 = bitcast float* %510 to <8 x float>*
  %512 = load <8 x float>, <8 x float>* %511, align 1, !tbaa !12
  %513 = add nsw i64 %501, 24
  %514 = getelementptr inbounds float, float* %3, i64 %513
  %515 = bitcast float* %514 to <8 x float>*
  %516 = load <8 x float>, <8 x float>* %515, align 1, !tbaa !12
  %517 = add nsw i64 %501, 32
  %518 = getelementptr inbounds float, float* %3, i64 %517
  %519 = bitcast float* %518 to <8 x float>*
  %520 = load <8 x float>, <8 x float>* %519, align 1, !tbaa !12
  %521 = add nsw i64 %501, 40
  %522 = getelementptr inbounds float, float* %3, i64 %521
  %523 = bitcast float* %522 to <8 x float>*
  %524 = load <8 x float>, <8 x float>* %523, align 1, !tbaa !12
  %525 = add nsw i64 %501, 48
  %526 = getelementptr inbounds float, float* %3, i64 %525
  %527 = bitcast float* %526 to <8 x float>*
  %528 = load <8 x float>, <8 x float>* %527, align 1, !tbaa !12
  %529 = add nsw i64 %501, 56
  %530 = getelementptr inbounds float, float* %3, i64 %529
  %531 = bitcast float* %530 to <8 x float>*
  %532 = load <8 x float>, <8 x float>* %531, align 1, !tbaa !12
  %533 = add nsw i64 %501, 64
  %534 = getelementptr inbounds float, float* %3, i64 %533
  %535 = bitcast float* %534 to <8 x float>*
  %536 = load <8 x float>, <8 x float>* %535, align 1, !tbaa !12
  %537 = add nsw i64 %501, 72
  %538 = getelementptr inbounds float, float* %3, i64 %537
  %539 = bitcast float* %538 to <8 x float>*
  %540 = load <8 x float>, <8 x float>* %539, align 1, !tbaa !12
  %541 = add nsw i64 %501, 80
  %542 = getelementptr inbounds float, float* %3, i64 %541
  %543 = bitcast float* %542 to <8 x float>*
  %544 = load <8 x float>, <8 x float>* %543, align 1, !tbaa !12
  %545 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %504, <8 x float> %35, <8 x float> %460) #10
  %546 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %508, <8 x float> %35, <8 x float> %464) #10
  %547 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %512, <8 x float> %35, <8 x float> %468) #10
  %548 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %516, <8 x float> %35, <8 x float> %472) #10
  %549 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %520, <8 x float> %35, <8 x float> %476) #10
  %550 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %524, <8 x float> %35, <8 x float> %480) #10
  %551 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %528, <8 x float> %35, <8 x float> %484) #10
  %552 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %532, <8 x float> %35, <8 x float> %488) #10
  %553 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %536, <8 x float> %35, <8 x float> %492) #10
  %554 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %540, <8 x float> %35, <8 x float> %496) #10
  %555 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %544, <8 x float> %35, <8 x float> %500) #10
  store <8 x float> %545, <8 x float>* %459, align 1, !tbaa !12
  store <8 x float> %546, <8 x float>* %463, align 1, !tbaa !12
  store <8 x float> %547, <8 x float>* %467, align 1, !tbaa !12
  store <8 x float> %548, <8 x float>* %471, align 1, !tbaa !12
  store <8 x float> %549, <8 x float>* %475, align 1, !tbaa !12
  store <8 x float> %550, <8 x float>* %479, align 1, !tbaa !12
  store <8 x float> %551, <8 x float>* %483, align 1, !tbaa !12
  store <8 x float> %552, <8 x float>* %487, align 1, !tbaa !12
  store <8 x float> %553, <8 x float>* %491, align 1, !tbaa !12
  store <8 x float> %554, <8 x float>* %495, align 1, !tbaa !12
  store <8 x float> %555, <8 x float>* %499, align 1, !tbaa !12
  %556 = add nuw nsw i64 %412, 88
  %557 = icmp ult i64 %556, %257
  br i1 %557, label %411, label %405

558:                                              ; preds = %565, %87, %252, %405
  %559 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %560 = icmp sgt i32 %559, 0
  br i1 %560, label %561, label %1808

561:                                              ; preds = %558
  %562 = zext i32 %559 to i64
  %563 = trunc i64 %41 to i32
  %564 = mul nsw i32 %559, %563
  br label %718

565:                                              ; preds = %406, %565
  %566 = phi i64 [ 0, %406 ], [ %710, %565 ]
  %567 = getelementptr inbounds float, float* %5, i64 %566
  %568 = getelementptr inbounds float, float* %567, i64 8
  %569 = bitcast float* %568 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %569, i32 0, i32 1, i32 1)
  %570 = getelementptr inbounds float, float* %3, i64 %566
  %571 = getelementptr inbounds float, float* %570, i64 8
  %572 = bitcast float* %571 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %572, i32 0, i32 1, i32 1)
  %573 = getelementptr inbounds float, float* %567, i64 16
  %574 = bitcast float* %573 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %574, i32 0, i32 1, i32 1)
  %575 = getelementptr inbounds float, float* %570, i64 16
  %576 = bitcast float* %575 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %576, i32 0, i32 1, i32 1)
  %577 = getelementptr inbounds float, float* %567, i64 24
  %578 = bitcast float* %577 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %578, i32 0, i32 1, i32 1)
  %579 = getelementptr inbounds float, float* %570, i64 24
  %580 = bitcast float* %579 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %580, i32 0, i32 1, i32 1)
  %581 = getelementptr inbounds float, float* %567, i64 32
  %582 = bitcast float* %581 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %582, i32 0, i32 1, i32 1)
  %583 = getelementptr inbounds float, float* %570, i64 32
  %584 = bitcast float* %583 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %584, i32 0, i32 1, i32 1)
  %585 = getelementptr inbounds float, float* %567, i64 40
  %586 = bitcast float* %585 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %586, i32 0, i32 1, i32 1)
  %587 = getelementptr inbounds float, float* %570, i64 40
  %588 = bitcast float* %587 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %588, i32 0, i32 1, i32 1)
  %589 = getelementptr inbounds float, float* %567, i64 48
  %590 = bitcast float* %589 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %590, i32 0, i32 1, i32 1)
  %591 = getelementptr inbounds float, float* %570, i64 48
  %592 = bitcast float* %591 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %592, i32 0, i32 1, i32 1)
  %593 = getelementptr inbounds float, float* %567, i64 56
  %594 = bitcast float* %593 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %594, i32 0, i32 1, i32 1)
  %595 = getelementptr inbounds float, float* %570, i64 56
  %596 = bitcast float* %595 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %596, i32 0, i32 1, i32 1)
  %597 = getelementptr inbounds float, float* %567, i64 64
  %598 = bitcast float* %597 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %598, i32 0, i32 1, i32 1)
  %599 = getelementptr inbounds float, float* %570, i64 64
  %600 = bitcast float* %599 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %600, i32 0, i32 1, i32 1)
  %601 = getelementptr inbounds float, float* %567, i64 72
  %602 = bitcast float* %601 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %602, i32 0, i32 1, i32 1)
  %603 = getelementptr inbounds float, float* %570, i64 72
  %604 = bitcast float* %603 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %604, i32 0, i32 1, i32 1)
  %605 = getelementptr inbounds float, float* %567, i64 80
  %606 = bitcast float* %605 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %606, i32 0, i32 1, i32 1)
  %607 = getelementptr inbounds float, float* %570, i64 80
  %608 = bitcast float* %607 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %608, i32 0, i32 1, i32 1)
  %609 = getelementptr inbounds float, float* %567, i64 88
  %610 = bitcast float* %609 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %610, i32 0, i32 1, i32 1)
  %611 = getelementptr inbounds float, float* %570, i64 88
  %612 = bitcast float* %611 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %612, i32 0, i32 1, i32 1)
  %613 = bitcast float* %567 to <8 x float>*
  %614 = load <8 x float>, <8 x float>* %613, align 1, !tbaa !12
  %615 = add nuw nsw i64 %566, 8
  %616 = getelementptr inbounds float, float* %5, i64 %615
  %617 = bitcast float* %616 to <8 x float>*
  %618 = load <8 x float>, <8 x float>* %617, align 1, !tbaa !12
  %619 = add nuw nsw i64 %566, 16
  %620 = getelementptr inbounds float, float* %5, i64 %619
  %621 = bitcast float* %620 to <8 x float>*
  %622 = load <8 x float>, <8 x float>* %621, align 1, !tbaa !12
  %623 = add nuw nsw i64 %566, 24
  %624 = getelementptr inbounds float, float* %5, i64 %623
  %625 = bitcast float* %624 to <8 x float>*
  %626 = load <8 x float>, <8 x float>* %625, align 1, !tbaa !12
  %627 = add nuw nsw i64 %566, 32
  %628 = getelementptr inbounds float, float* %5, i64 %627
  %629 = bitcast float* %628 to <8 x float>*
  %630 = load <8 x float>, <8 x float>* %629, align 1, !tbaa !12
  %631 = add nuw nsw i64 %566, 40
  %632 = getelementptr inbounds float, float* %5, i64 %631
  %633 = bitcast float* %632 to <8 x float>*
  %634 = load <8 x float>, <8 x float>* %633, align 1, !tbaa !12
  %635 = add nuw nsw i64 %566, 48
  %636 = getelementptr inbounds float, float* %5, i64 %635
  %637 = bitcast float* %636 to <8 x float>*
  %638 = load <8 x float>, <8 x float>* %637, align 1, !tbaa !12
  %639 = add nuw nsw i64 %566, 56
  %640 = getelementptr inbounds float, float* %5, i64 %639
  %641 = bitcast float* %640 to <8 x float>*
  %642 = load <8 x float>, <8 x float>* %641, align 1, !tbaa !12
  %643 = add nuw nsw i64 %566, 64
  %644 = getelementptr inbounds float, float* %5, i64 %643
  %645 = bitcast float* %644 to <8 x float>*
  %646 = load <8 x float>, <8 x float>* %645, align 1, !tbaa !12
  %647 = add nuw nsw i64 %566, 72
  %648 = getelementptr inbounds float, float* %5, i64 %647
  %649 = bitcast float* %648 to <8 x float>*
  %650 = load <8 x float>, <8 x float>* %649, align 1, !tbaa !12
  %651 = add nuw nsw i64 %566, 80
  %652 = getelementptr inbounds float, float* %5, i64 %651
  %653 = bitcast float* %652 to <8 x float>*
  %654 = load <8 x float>, <8 x float>* %653, align 1, !tbaa !12
  %655 = add nsw i64 %566, %409
  %656 = getelementptr inbounds float, float* %3, i64 %655
  %657 = bitcast float* %656 to <8 x float>*
  %658 = load <8 x float>, <8 x float>* %657, align 1, !tbaa !12
  %659 = add nsw i64 %655, 8
  %660 = getelementptr inbounds float, float* %3, i64 %659
  %661 = bitcast float* %660 to <8 x float>*
  %662 = load <8 x float>, <8 x float>* %661, align 1, !tbaa !12
  %663 = add nsw i64 %655, 16
  %664 = getelementptr inbounds float, float* %3, i64 %663
  %665 = bitcast float* %664 to <8 x float>*
  %666 = load <8 x float>, <8 x float>* %665, align 1, !tbaa !12
  %667 = add nsw i64 %655, 24
  %668 = getelementptr inbounds float, float* %3, i64 %667
  %669 = bitcast float* %668 to <8 x float>*
  %670 = load <8 x float>, <8 x float>* %669, align 1, !tbaa !12
  %671 = add nsw i64 %655, 32
  %672 = getelementptr inbounds float, float* %3, i64 %671
  %673 = bitcast float* %672 to <8 x float>*
  %674 = load <8 x float>, <8 x float>* %673, align 1, !tbaa !12
  %675 = add nsw i64 %655, 40
  %676 = getelementptr inbounds float, float* %3, i64 %675
  %677 = bitcast float* %676 to <8 x float>*
  %678 = load <8 x float>, <8 x float>* %677, align 1, !tbaa !12
  %679 = add nsw i64 %655, 48
  %680 = getelementptr inbounds float, float* %3, i64 %679
  %681 = bitcast float* %680 to <8 x float>*
  %682 = load <8 x float>, <8 x float>* %681, align 1, !tbaa !12
  %683 = add nsw i64 %655, 56
  %684 = getelementptr inbounds float, float* %3, i64 %683
  %685 = bitcast float* %684 to <8 x float>*
  %686 = load <8 x float>, <8 x float>* %685, align 1, !tbaa !12
  %687 = add nsw i64 %655, 64
  %688 = getelementptr inbounds float, float* %3, i64 %687
  %689 = bitcast float* %688 to <8 x float>*
  %690 = load <8 x float>, <8 x float>* %689, align 1, !tbaa !12
  %691 = add nsw i64 %655, 72
  %692 = getelementptr inbounds float, float* %3, i64 %691
  %693 = bitcast float* %692 to <8 x float>*
  %694 = load <8 x float>, <8 x float>* %693, align 1, !tbaa !12
  %695 = add nsw i64 %655, 80
  %696 = getelementptr inbounds float, float* %3, i64 %695
  %697 = bitcast float* %696 to <8 x float>*
  %698 = load <8 x float>, <8 x float>* %697, align 1, !tbaa !12
  %699 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %658, <8 x float> %40, <8 x float> %614) #10
  %700 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %662, <8 x float> %40, <8 x float> %618) #10
  %701 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %666, <8 x float> %40, <8 x float> %622) #10
  %702 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %670, <8 x float> %40, <8 x float> %626) #10
  %703 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %674, <8 x float> %40, <8 x float> %630) #10
  %704 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %678, <8 x float> %40, <8 x float> %634) #10
  %705 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %682, <8 x float> %40, <8 x float> %638) #10
  %706 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %686, <8 x float> %40, <8 x float> %642) #10
  %707 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %690, <8 x float> %40, <8 x float> %646) #10
  %708 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %694, <8 x float> %40, <8 x float> %650) #10
  %709 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %698, <8 x float> %40, <8 x float> %654) #10
  store <8 x float> %699, <8 x float>* %613, align 1, !tbaa !12
  store <8 x float> %700, <8 x float>* %617, align 1, !tbaa !12
  store <8 x float> %701, <8 x float>* %621, align 1, !tbaa !12
  store <8 x float> %702, <8 x float>* %625, align 1, !tbaa !12
  store <8 x float> %703, <8 x float>* %629, align 1, !tbaa !12
  store <8 x float> %704, <8 x float>* %633, align 1, !tbaa !12
  store <8 x float> %705, <8 x float>* %637, align 1, !tbaa !12
  store <8 x float> %706, <8 x float>* %641, align 1, !tbaa !12
  store <8 x float> %707, <8 x float>* %645, align 1, !tbaa !12
  store <8 x float> %708, <8 x float>* %649, align 1, !tbaa !12
  store <8 x float> %709, <8 x float>* %653, align 1, !tbaa !12
  %710 = add nuw nsw i64 %566, 88
  %711 = icmp ult i64 %710, %410
  br i1 %711, label %565, label %558

712:                                              ; preds = %718
  br i1 %560, label %713, label %1183

713:                                              ; preds = %712
  %714 = trunc i64 %46 to i32
  %715 = mul nsw i32 %559, %714
  %716 = sext i32 %715 to i64
  %717 = zext i32 %559 to i64
  br label %883

718:                                              ; preds = %561, %718
  %719 = phi i64 [ 0, %561 ], [ %875, %718 ]
  %720 = getelementptr inbounds float, float* %5, i64 %719
  %721 = getelementptr inbounds float, float* %720, i64 8
  %722 = bitcast float* %721 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %722, i32 0, i32 1, i32 1)
  %723 = getelementptr inbounds float, float* %3, i64 %719
  %724 = getelementptr inbounds float, float* %723, i64 8
  %725 = bitcast float* %724 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %725, i32 0, i32 1, i32 1)
  %726 = getelementptr inbounds float, float* %720, i64 16
  %727 = bitcast float* %726 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %727, i32 0, i32 1, i32 1)
  %728 = getelementptr inbounds float, float* %723, i64 16
  %729 = bitcast float* %728 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %729, i32 0, i32 1, i32 1)
  %730 = getelementptr inbounds float, float* %720, i64 24
  %731 = bitcast float* %730 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %731, i32 0, i32 1, i32 1)
  %732 = getelementptr inbounds float, float* %723, i64 24
  %733 = bitcast float* %732 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %733, i32 0, i32 1, i32 1)
  %734 = getelementptr inbounds float, float* %720, i64 32
  %735 = bitcast float* %734 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %735, i32 0, i32 1, i32 1)
  %736 = getelementptr inbounds float, float* %723, i64 32
  %737 = bitcast float* %736 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %737, i32 0, i32 1, i32 1)
  %738 = getelementptr inbounds float, float* %720, i64 40
  %739 = bitcast float* %738 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %739, i32 0, i32 1, i32 1)
  %740 = getelementptr inbounds float, float* %723, i64 40
  %741 = bitcast float* %740 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %741, i32 0, i32 1, i32 1)
  %742 = getelementptr inbounds float, float* %720, i64 48
  %743 = bitcast float* %742 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %743, i32 0, i32 1, i32 1)
  %744 = getelementptr inbounds float, float* %723, i64 48
  %745 = bitcast float* %744 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %745, i32 0, i32 1, i32 1)
  %746 = getelementptr inbounds float, float* %720, i64 56
  %747 = bitcast float* %746 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %747, i32 0, i32 1, i32 1)
  %748 = getelementptr inbounds float, float* %723, i64 56
  %749 = bitcast float* %748 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %749, i32 0, i32 1, i32 1)
  %750 = getelementptr inbounds float, float* %720, i64 64
  %751 = bitcast float* %750 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %751, i32 0, i32 1, i32 1)
  %752 = getelementptr inbounds float, float* %723, i64 64
  %753 = bitcast float* %752 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %753, i32 0, i32 1, i32 1)
  %754 = getelementptr inbounds float, float* %720, i64 72
  %755 = bitcast float* %754 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %755, i32 0, i32 1, i32 1)
  %756 = getelementptr inbounds float, float* %723, i64 72
  %757 = bitcast float* %756 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %757, i32 0, i32 1, i32 1)
  %758 = getelementptr inbounds float, float* %720, i64 80
  %759 = bitcast float* %758 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %759, i32 0, i32 1, i32 1)
  %760 = getelementptr inbounds float, float* %723, i64 80
  %761 = bitcast float* %760 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %761, i32 0, i32 1, i32 1)
  %762 = getelementptr inbounds float, float* %720, i64 88
  %763 = bitcast float* %762 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %763, i32 0, i32 1, i32 1)
  %764 = getelementptr inbounds float, float* %723, i64 88
  %765 = bitcast float* %764 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %765, i32 0, i32 1, i32 1)
  %766 = bitcast float* %720 to <8 x float>*
  %767 = load <8 x float>, <8 x float>* %766, align 1, !tbaa !12
  %768 = add nuw nsw i64 %719, 8
  %769 = getelementptr inbounds float, float* %5, i64 %768
  %770 = bitcast float* %769 to <8 x float>*
  %771 = load <8 x float>, <8 x float>* %770, align 1, !tbaa !12
  %772 = add nuw nsw i64 %719, 16
  %773 = getelementptr inbounds float, float* %5, i64 %772
  %774 = bitcast float* %773 to <8 x float>*
  %775 = load <8 x float>, <8 x float>* %774, align 1, !tbaa !12
  %776 = add nuw nsw i64 %719, 24
  %777 = getelementptr inbounds float, float* %5, i64 %776
  %778 = bitcast float* %777 to <8 x float>*
  %779 = load <8 x float>, <8 x float>* %778, align 1, !tbaa !12
  %780 = add nuw nsw i64 %719, 32
  %781 = getelementptr inbounds float, float* %5, i64 %780
  %782 = bitcast float* %781 to <8 x float>*
  %783 = load <8 x float>, <8 x float>* %782, align 1, !tbaa !12
  %784 = add nuw nsw i64 %719, 40
  %785 = getelementptr inbounds float, float* %5, i64 %784
  %786 = bitcast float* %785 to <8 x float>*
  %787 = load <8 x float>, <8 x float>* %786, align 1, !tbaa !12
  %788 = add nuw nsw i64 %719, 48
  %789 = getelementptr inbounds float, float* %5, i64 %788
  %790 = bitcast float* %789 to <8 x float>*
  %791 = load <8 x float>, <8 x float>* %790, align 1, !tbaa !12
  %792 = add nuw nsw i64 %719, 56
  %793 = getelementptr inbounds float, float* %5, i64 %792
  %794 = bitcast float* %793 to <8 x float>*
  %795 = load <8 x float>, <8 x float>* %794, align 1, !tbaa !12
  %796 = add nuw nsw i64 %719, 64
  %797 = getelementptr inbounds float, float* %5, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %799 = load <8 x float>, <8 x float>* %798, align 1, !tbaa !12
  %800 = add nuw nsw i64 %719, 72
  %801 = getelementptr inbounds float, float* %5, i64 %800
  %802 = bitcast float* %801 to <8 x float>*
  %803 = load <8 x float>, <8 x float>* %802, align 1, !tbaa !12
  %804 = add nuw nsw i64 %719, 80
  %805 = getelementptr inbounds float, float* %5, i64 %804
  %806 = bitcast float* %805 to <8 x float>*
  %807 = load <8 x float>, <8 x float>* %806, align 1, !tbaa !12
  %808 = trunc i64 %719 to i32
  %809 = add nsw i32 %564, %808
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds float, float* %3, i64 %810
  %812 = bitcast float* %811 to <8 x float>*
  %813 = load <8 x float>, <8 x float>* %812, align 1, !tbaa !12
  %814 = add nsw i32 %809, 8
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds float, float* %3, i64 %815
  %817 = bitcast float* %816 to <8 x float>*
  %818 = load <8 x float>, <8 x float>* %817, align 1, !tbaa !12
  %819 = add nsw i32 %809, 16
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds float, float* %3, i64 %820
  %822 = bitcast float* %821 to <8 x float>*
  %823 = load <8 x float>, <8 x float>* %822, align 1, !tbaa !12
  %824 = add nsw i32 %809, 24
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds float, float* %3, i64 %825
  %827 = bitcast float* %826 to <8 x float>*
  %828 = load <8 x float>, <8 x float>* %827, align 1, !tbaa !12
  %829 = add nsw i32 %809, 32
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds float, float* %3, i64 %830
  %832 = bitcast float* %831 to <8 x float>*
  %833 = load <8 x float>, <8 x float>* %832, align 1, !tbaa !12
  %834 = add nsw i32 %809, 40
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds float, float* %3, i64 %835
  %837 = bitcast float* %836 to <8 x float>*
  %838 = load <8 x float>, <8 x float>* %837, align 1, !tbaa !12
  %839 = add nsw i32 %809, 48
  %840 = sext i32 %839 to i64
  %841 = getelementptr inbounds float, float* %3, i64 %840
  %842 = bitcast float* %841 to <8 x float>*
  %843 = load <8 x float>, <8 x float>* %842, align 1, !tbaa !12
  %844 = add nsw i32 %809, 56
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds float, float* %3, i64 %845
  %847 = bitcast float* %846 to <8 x float>*
  %848 = load <8 x float>, <8 x float>* %847, align 1, !tbaa !12
  %849 = add nsw i32 %809, 64
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds float, float* %3, i64 %850
  %852 = bitcast float* %851 to <8 x float>*
  %853 = load <8 x float>, <8 x float>* %852, align 1, !tbaa !12
  %854 = add nsw i32 %809, 72
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds float, float* %3, i64 %855
  %857 = bitcast float* %856 to <8 x float>*
  %858 = load <8 x float>, <8 x float>* %857, align 1, !tbaa !12
  %859 = add nsw i32 %809, 80
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds float, float* %3, i64 %860
  %862 = bitcast float* %861 to <8 x float>*
  %863 = load <8 x float>, <8 x float>* %862, align 1, !tbaa !12
  %864 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %813, <8 x float> %45, <8 x float> %767) #10
  %865 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %818, <8 x float> %45, <8 x float> %771) #10
  %866 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %823, <8 x float> %45, <8 x float> %775) #10
  %867 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %828, <8 x float> %45, <8 x float> %779) #10
  %868 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %833, <8 x float> %45, <8 x float> %783) #10
  %869 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %838, <8 x float> %45, <8 x float> %787) #10
  %870 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %843, <8 x float> %45, <8 x float> %791) #10
  %871 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %848, <8 x float> %45, <8 x float> %795) #10
  %872 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %853, <8 x float> %45, <8 x float> %799) #10
  %873 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %858, <8 x float> %45, <8 x float> %803) #10
  %874 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %863, <8 x float> %45, <8 x float> %807) #10
  store <8 x float> %864, <8 x float>* %766, align 1, !tbaa !12
  store <8 x float> %865, <8 x float>* %770, align 1, !tbaa !12
  store <8 x float> %866, <8 x float>* %774, align 1, !tbaa !12
  store <8 x float> %867, <8 x float>* %778, align 1, !tbaa !12
  store <8 x float> %868, <8 x float>* %782, align 1, !tbaa !12
  store <8 x float> %869, <8 x float>* %786, align 1, !tbaa !12
  store <8 x float> %870, <8 x float>* %790, align 1, !tbaa !12
  store <8 x float> %871, <8 x float>* %794, align 1, !tbaa !12
  store <8 x float> %872, <8 x float>* %798, align 1, !tbaa !12
  store <8 x float> %873, <8 x float>* %802, align 1, !tbaa !12
  store <8 x float> %874, <8 x float>* %806, align 1, !tbaa !12
  %875 = add nuw nsw i64 %719, 88
  %876 = icmp ult i64 %875, %562
  br i1 %876, label %718, label %712

877:                                              ; preds = %883
  br i1 %560, label %878, label %1183

878:                                              ; preds = %877
  %879 = trunc i64 %51 to i32
  %880 = mul nsw i32 %559, %879
  %881 = sext i32 %880 to i64
  %882 = zext i32 %559 to i64
  br label %1036

883:                                              ; preds = %713, %883
  %884 = phi i64 [ 0, %713 ], [ %1028, %883 ]
  %885 = getelementptr inbounds float, float* %5, i64 %884
  %886 = getelementptr inbounds float, float* %885, i64 8
  %887 = bitcast float* %886 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %887, i32 0, i32 1, i32 1)
  %888 = getelementptr inbounds float, float* %3, i64 %884
  %889 = getelementptr inbounds float, float* %888, i64 8
  %890 = bitcast float* %889 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %890, i32 0, i32 1, i32 1)
  %891 = getelementptr inbounds float, float* %885, i64 16
  %892 = bitcast float* %891 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %892, i32 0, i32 1, i32 1)
  %893 = getelementptr inbounds float, float* %888, i64 16
  %894 = bitcast float* %893 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %894, i32 0, i32 1, i32 1)
  %895 = getelementptr inbounds float, float* %885, i64 24
  %896 = bitcast float* %895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %896, i32 0, i32 1, i32 1)
  %897 = getelementptr inbounds float, float* %888, i64 24
  %898 = bitcast float* %897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %898, i32 0, i32 1, i32 1)
  %899 = getelementptr inbounds float, float* %885, i64 32
  %900 = bitcast float* %899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %900, i32 0, i32 1, i32 1)
  %901 = getelementptr inbounds float, float* %888, i64 32
  %902 = bitcast float* %901 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %902, i32 0, i32 1, i32 1)
  %903 = getelementptr inbounds float, float* %885, i64 40
  %904 = bitcast float* %903 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %904, i32 0, i32 1, i32 1)
  %905 = getelementptr inbounds float, float* %888, i64 40
  %906 = bitcast float* %905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %906, i32 0, i32 1, i32 1)
  %907 = getelementptr inbounds float, float* %885, i64 48
  %908 = bitcast float* %907 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %908, i32 0, i32 1, i32 1)
  %909 = getelementptr inbounds float, float* %888, i64 48
  %910 = bitcast float* %909 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %910, i32 0, i32 1, i32 1)
  %911 = getelementptr inbounds float, float* %885, i64 56
  %912 = bitcast float* %911 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %912, i32 0, i32 1, i32 1)
  %913 = getelementptr inbounds float, float* %888, i64 56
  %914 = bitcast float* %913 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %914, i32 0, i32 1, i32 1)
  %915 = getelementptr inbounds float, float* %885, i64 64
  %916 = bitcast float* %915 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %916, i32 0, i32 1, i32 1)
  %917 = getelementptr inbounds float, float* %888, i64 64
  %918 = bitcast float* %917 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %918, i32 0, i32 1, i32 1)
  %919 = getelementptr inbounds float, float* %885, i64 72
  %920 = bitcast float* %919 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %920, i32 0, i32 1, i32 1)
  %921 = getelementptr inbounds float, float* %888, i64 72
  %922 = bitcast float* %921 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %922, i32 0, i32 1, i32 1)
  %923 = getelementptr inbounds float, float* %885, i64 80
  %924 = bitcast float* %923 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %924, i32 0, i32 1, i32 1)
  %925 = getelementptr inbounds float, float* %888, i64 80
  %926 = bitcast float* %925 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %926, i32 0, i32 1, i32 1)
  %927 = getelementptr inbounds float, float* %885, i64 88
  %928 = bitcast float* %927 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %928, i32 0, i32 1, i32 1)
  %929 = getelementptr inbounds float, float* %888, i64 88
  %930 = bitcast float* %929 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %930, i32 0, i32 1, i32 1)
  %931 = bitcast float* %885 to <8 x float>*
  %932 = load <8 x float>, <8 x float>* %931, align 1, !tbaa !12
  %933 = add nuw nsw i64 %884, 8
  %934 = getelementptr inbounds float, float* %5, i64 %933
  %935 = bitcast float* %934 to <8 x float>*
  %936 = load <8 x float>, <8 x float>* %935, align 1, !tbaa !12
  %937 = add nuw nsw i64 %884, 16
  %938 = getelementptr inbounds float, float* %5, i64 %937
  %939 = bitcast float* %938 to <8 x float>*
  %940 = load <8 x float>, <8 x float>* %939, align 1, !tbaa !12
  %941 = add nuw nsw i64 %884, 24
  %942 = getelementptr inbounds float, float* %5, i64 %941
  %943 = bitcast float* %942 to <8 x float>*
  %944 = load <8 x float>, <8 x float>* %943, align 1, !tbaa !12
  %945 = add nuw nsw i64 %884, 32
  %946 = getelementptr inbounds float, float* %5, i64 %945
  %947 = bitcast float* %946 to <8 x float>*
  %948 = load <8 x float>, <8 x float>* %947, align 1, !tbaa !12
  %949 = add nuw nsw i64 %884, 40
  %950 = getelementptr inbounds float, float* %5, i64 %949
  %951 = bitcast float* %950 to <8 x float>*
  %952 = load <8 x float>, <8 x float>* %951, align 1, !tbaa !12
  %953 = add nuw nsw i64 %884, 48
  %954 = getelementptr inbounds float, float* %5, i64 %953
  %955 = bitcast float* %954 to <8 x float>*
  %956 = load <8 x float>, <8 x float>* %955, align 1, !tbaa !12
  %957 = add nuw nsw i64 %884, 56
  %958 = getelementptr inbounds float, float* %5, i64 %957
  %959 = bitcast float* %958 to <8 x float>*
  %960 = load <8 x float>, <8 x float>* %959, align 1, !tbaa !12
  %961 = add nuw nsw i64 %884, 64
  %962 = getelementptr inbounds float, float* %5, i64 %961
  %963 = bitcast float* %962 to <8 x float>*
  %964 = load <8 x float>, <8 x float>* %963, align 1, !tbaa !12
  %965 = add nuw nsw i64 %884, 72
  %966 = getelementptr inbounds float, float* %5, i64 %965
  %967 = bitcast float* %966 to <8 x float>*
  %968 = load <8 x float>, <8 x float>* %967, align 1, !tbaa !12
  %969 = add nuw nsw i64 %884, 80
  %970 = getelementptr inbounds float, float* %5, i64 %969
  %971 = bitcast float* %970 to <8 x float>*
  %972 = load <8 x float>, <8 x float>* %971, align 1, !tbaa !12
  %973 = add nsw i64 %884, %716
  %974 = getelementptr inbounds float, float* %3, i64 %973
  %975 = bitcast float* %974 to <8 x float>*
  %976 = load <8 x float>, <8 x float>* %975, align 1, !tbaa !12
  %977 = add nsw i64 %973, 8
  %978 = getelementptr inbounds float, float* %3, i64 %977
  %979 = bitcast float* %978 to <8 x float>*
  %980 = load <8 x float>, <8 x float>* %979, align 1, !tbaa !12
  %981 = add nsw i64 %973, 16
  %982 = getelementptr inbounds float, float* %3, i64 %981
  %983 = bitcast float* %982 to <8 x float>*
  %984 = load <8 x float>, <8 x float>* %983, align 1, !tbaa !12
  %985 = add nsw i64 %973, 24
  %986 = getelementptr inbounds float, float* %3, i64 %985
  %987 = bitcast float* %986 to <8 x float>*
  %988 = load <8 x float>, <8 x float>* %987, align 1, !tbaa !12
  %989 = add nsw i64 %973, 32
  %990 = getelementptr inbounds float, float* %3, i64 %989
  %991 = bitcast float* %990 to <8 x float>*
  %992 = load <8 x float>, <8 x float>* %991, align 1, !tbaa !12
  %993 = add nsw i64 %973, 40
  %994 = getelementptr inbounds float, float* %3, i64 %993
  %995 = bitcast float* %994 to <8 x float>*
  %996 = load <8 x float>, <8 x float>* %995, align 1, !tbaa !12
  %997 = add nsw i64 %973, 48
  %998 = getelementptr inbounds float, float* %3, i64 %997
  %999 = bitcast float* %998 to <8 x float>*
  %1000 = load <8 x float>, <8 x float>* %999, align 1, !tbaa !12
  %1001 = add nsw i64 %973, 56
  %1002 = getelementptr inbounds float, float* %3, i64 %1001
  %1003 = bitcast float* %1002 to <8 x float>*
  %1004 = load <8 x float>, <8 x float>* %1003, align 1, !tbaa !12
  %1005 = add nsw i64 %973, 64
  %1006 = getelementptr inbounds float, float* %3, i64 %1005
  %1007 = bitcast float* %1006 to <8 x float>*
  %1008 = load <8 x float>, <8 x float>* %1007, align 1, !tbaa !12
  %1009 = add nsw i64 %973, 72
  %1010 = getelementptr inbounds float, float* %3, i64 %1009
  %1011 = bitcast float* %1010 to <8 x float>*
  %1012 = load <8 x float>, <8 x float>* %1011, align 1, !tbaa !12
  %1013 = add nsw i64 %973, 80
  %1014 = getelementptr inbounds float, float* %3, i64 %1013
  %1015 = bitcast float* %1014 to <8 x float>*
  %1016 = load <8 x float>, <8 x float>* %1015, align 1, !tbaa !12
  %1017 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %976, <8 x float> %50, <8 x float> %932) #10
  %1018 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %980, <8 x float> %50, <8 x float> %936) #10
  %1019 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %984, <8 x float> %50, <8 x float> %940) #10
  %1020 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %988, <8 x float> %50, <8 x float> %944) #10
  %1021 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %992, <8 x float> %50, <8 x float> %948) #10
  %1022 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %996, <8 x float> %50, <8 x float> %952) #10
  %1023 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1000, <8 x float> %50, <8 x float> %956) #10
  %1024 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1004, <8 x float> %50, <8 x float> %960) #10
  %1025 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1008, <8 x float> %50, <8 x float> %964) #10
  %1026 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1012, <8 x float> %50, <8 x float> %968) #10
  %1027 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1016, <8 x float> %50, <8 x float> %972) #10
  store <8 x float> %1017, <8 x float>* %931, align 1, !tbaa !12
  store <8 x float> %1018, <8 x float>* %935, align 1, !tbaa !12
  store <8 x float> %1019, <8 x float>* %939, align 1, !tbaa !12
  store <8 x float> %1020, <8 x float>* %943, align 1, !tbaa !12
  store <8 x float> %1021, <8 x float>* %947, align 1, !tbaa !12
  store <8 x float> %1022, <8 x float>* %951, align 1, !tbaa !12
  store <8 x float> %1023, <8 x float>* %955, align 1, !tbaa !12
  store <8 x float> %1024, <8 x float>* %959, align 1, !tbaa !12
  store <8 x float> %1025, <8 x float>* %963, align 1, !tbaa !12
  store <8 x float> %1026, <8 x float>* %967, align 1, !tbaa !12
  store <8 x float> %1027, <8 x float>* %971, align 1, !tbaa !12
  %1028 = add nuw nsw i64 %884, 88
  %1029 = icmp ult i64 %1028, %717
  br i1 %1029, label %883, label %877

1030:                                             ; preds = %1036
  br i1 %560, label %1031, label %1183

1031:                                             ; preds = %1030
  %1032 = trunc i64 %56 to i32
  %1033 = mul nsw i32 %559, %1032
  %1034 = sext i32 %1033 to i64
  %1035 = zext i32 %559 to i64
  br label %1190

1036:                                             ; preds = %878, %1036
  %1037 = phi i64 [ 0, %878 ], [ %1181, %1036 ]
  %1038 = getelementptr inbounds float, float* %5, i64 %1037
  %1039 = getelementptr inbounds float, float* %1038, i64 8
  %1040 = bitcast float* %1039 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1040, i32 0, i32 1, i32 1)
  %1041 = getelementptr inbounds float, float* %3, i64 %1037
  %1042 = getelementptr inbounds float, float* %1041, i64 8
  %1043 = bitcast float* %1042 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1043, i32 0, i32 1, i32 1)
  %1044 = getelementptr inbounds float, float* %1038, i64 16
  %1045 = bitcast float* %1044 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1045, i32 0, i32 1, i32 1)
  %1046 = getelementptr inbounds float, float* %1041, i64 16
  %1047 = bitcast float* %1046 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1047, i32 0, i32 1, i32 1)
  %1048 = getelementptr inbounds float, float* %1038, i64 24
  %1049 = bitcast float* %1048 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1049, i32 0, i32 1, i32 1)
  %1050 = getelementptr inbounds float, float* %1041, i64 24
  %1051 = bitcast float* %1050 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1051, i32 0, i32 1, i32 1)
  %1052 = getelementptr inbounds float, float* %1038, i64 32
  %1053 = bitcast float* %1052 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1053, i32 0, i32 1, i32 1)
  %1054 = getelementptr inbounds float, float* %1041, i64 32
  %1055 = bitcast float* %1054 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1055, i32 0, i32 1, i32 1)
  %1056 = getelementptr inbounds float, float* %1038, i64 40
  %1057 = bitcast float* %1056 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1057, i32 0, i32 1, i32 1)
  %1058 = getelementptr inbounds float, float* %1041, i64 40
  %1059 = bitcast float* %1058 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1059, i32 0, i32 1, i32 1)
  %1060 = getelementptr inbounds float, float* %1038, i64 48
  %1061 = bitcast float* %1060 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1061, i32 0, i32 1, i32 1)
  %1062 = getelementptr inbounds float, float* %1041, i64 48
  %1063 = bitcast float* %1062 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1063, i32 0, i32 1, i32 1)
  %1064 = getelementptr inbounds float, float* %1038, i64 56
  %1065 = bitcast float* %1064 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1065, i32 0, i32 1, i32 1)
  %1066 = getelementptr inbounds float, float* %1041, i64 56
  %1067 = bitcast float* %1066 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1067, i32 0, i32 1, i32 1)
  %1068 = getelementptr inbounds float, float* %1038, i64 64
  %1069 = bitcast float* %1068 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1069, i32 0, i32 1, i32 1)
  %1070 = getelementptr inbounds float, float* %1041, i64 64
  %1071 = bitcast float* %1070 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1071, i32 0, i32 1, i32 1)
  %1072 = getelementptr inbounds float, float* %1038, i64 72
  %1073 = bitcast float* %1072 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1073, i32 0, i32 1, i32 1)
  %1074 = getelementptr inbounds float, float* %1041, i64 72
  %1075 = bitcast float* %1074 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1075, i32 0, i32 1, i32 1)
  %1076 = getelementptr inbounds float, float* %1038, i64 80
  %1077 = bitcast float* %1076 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1077, i32 0, i32 1, i32 1)
  %1078 = getelementptr inbounds float, float* %1041, i64 80
  %1079 = bitcast float* %1078 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1079, i32 0, i32 1, i32 1)
  %1080 = getelementptr inbounds float, float* %1038, i64 88
  %1081 = bitcast float* %1080 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1081, i32 0, i32 1, i32 1)
  %1082 = getelementptr inbounds float, float* %1041, i64 88
  %1083 = bitcast float* %1082 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1083, i32 0, i32 1, i32 1)
  %1084 = bitcast float* %1038 to <8 x float>*
  %1085 = load <8 x float>, <8 x float>* %1084, align 1, !tbaa !12
  %1086 = add nuw nsw i64 %1037, 8
  %1087 = getelementptr inbounds float, float* %5, i64 %1086
  %1088 = bitcast float* %1087 to <8 x float>*
  %1089 = load <8 x float>, <8 x float>* %1088, align 1, !tbaa !12
  %1090 = add nuw nsw i64 %1037, 16
  %1091 = getelementptr inbounds float, float* %5, i64 %1090
  %1092 = bitcast float* %1091 to <8 x float>*
  %1093 = load <8 x float>, <8 x float>* %1092, align 1, !tbaa !12
  %1094 = add nuw nsw i64 %1037, 24
  %1095 = getelementptr inbounds float, float* %5, i64 %1094
  %1096 = bitcast float* %1095 to <8 x float>*
  %1097 = load <8 x float>, <8 x float>* %1096, align 1, !tbaa !12
  %1098 = add nuw nsw i64 %1037, 32
  %1099 = getelementptr inbounds float, float* %5, i64 %1098
  %1100 = bitcast float* %1099 to <8 x float>*
  %1101 = load <8 x float>, <8 x float>* %1100, align 1, !tbaa !12
  %1102 = add nuw nsw i64 %1037, 40
  %1103 = getelementptr inbounds float, float* %5, i64 %1102
  %1104 = bitcast float* %1103 to <8 x float>*
  %1105 = load <8 x float>, <8 x float>* %1104, align 1, !tbaa !12
  %1106 = add nuw nsw i64 %1037, 48
  %1107 = getelementptr inbounds float, float* %5, i64 %1106
  %1108 = bitcast float* %1107 to <8 x float>*
  %1109 = load <8 x float>, <8 x float>* %1108, align 1, !tbaa !12
  %1110 = add nuw nsw i64 %1037, 56
  %1111 = getelementptr inbounds float, float* %5, i64 %1110
  %1112 = bitcast float* %1111 to <8 x float>*
  %1113 = load <8 x float>, <8 x float>* %1112, align 1, !tbaa !12
  %1114 = add nuw nsw i64 %1037, 64
  %1115 = getelementptr inbounds float, float* %5, i64 %1114
  %1116 = bitcast float* %1115 to <8 x float>*
  %1117 = load <8 x float>, <8 x float>* %1116, align 1, !tbaa !12
  %1118 = add nuw nsw i64 %1037, 72
  %1119 = getelementptr inbounds float, float* %5, i64 %1118
  %1120 = bitcast float* %1119 to <8 x float>*
  %1121 = load <8 x float>, <8 x float>* %1120, align 1, !tbaa !12
  %1122 = add nuw nsw i64 %1037, 80
  %1123 = getelementptr inbounds float, float* %5, i64 %1122
  %1124 = bitcast float* %1123 to <8 x float>*
  %1125 = load <8 x float>, <8 x float>* %1124, align 1, !tbaa !12
  %1126 = add nsw i64 %1037, %881
  %1127 = getelementptr inbounds float, float* %3, i64 %1126
  %1128 = bitcast float* %1127 to <8 x float>*
  %1129 = load <8 x float>, <8 x float>* %1128, align 1, !tbaa !12
  %1130 = add nsw i64 %1126, 8
  %1131 = getelementptr inbounds float, float* %3, i64 %1130
  %1132 = bitcast float* %1131 to <8 x float>*
  %1133 = load <8 x float>, <8 x float>* %1132, align 1, !tbaa !12
  %1134 = add nsw i64 %1126, 16
  %1135 = getelementptr inbounds float, float* %3, i64 %1134
  %1136 = bitcast float* %1135 to <8 x float>*
  %1137 = load <8 x float>, <8 x float>* %1136, align 1, !tbaa !12
  %1138 = add nsw i64 %1126, 24
  %1139 = getelementptr inbounds float, float* %3, i64 %1138
  %1140 = bitcast float* %1139 to <8 x float>*
  %1141 = load <8 x float>, <8 x float>* %1140, align 1, !tbaa !12
  %1142 = add nsw i64 %1126, 32
  %1143 = getelementptr inbounds float, float* %3, i64 %1142
  %1144 = bitcast float* %1143 to <8 x float>*
  %1145 = load <8 x float>, <8 x float>* %1144, align 1, !tbaa !12
  %1146 = add nsw i64 %1126, 40
  %1147 = getelementptr inbounds float, float* %3, i64 %1146
  %1148 = bitcast float* %1147 to <8 x float>*
  %1149 = load <8 x float>, <8 x float>* %1148, align 1, !tbaa !12
  %1150 = add nsw i64 %1126, 48
  %1151 = getelementptr inbounds float, float* %3, i64 %1150
  %1152 = bitcast float* %1151 to <8 x float>*
  %1153 = load <8 x float>, <8 x float>* %1152, align 1, !tbaa !12
  %1154 = add nsw i64 %1126, 56
  %1155 = getelementptr inbounds float, float* %3, i64 %1154
  %1156 = bitcast float* %1155 to <8 x float>*
  %1157 = load <8 x float>, <8 x float>* %1156, align 1, !tbaa !12
  %1158 = add nsw i64 %1126, 64
  %1159 = getelementptr inbounds float, float* %3, i64 %1158
  %1160 = bitcast float* %1159 to <8 x float>*
  %1161 = load <8 x float>, <8 x float>* %1160, align 1, !tbaa !12
  %1162 = add nsw i64 %1126, 72
  %1163 = getelementptr inbounds float, float* %3, i64 %1162
  %1164 = bitcast float* %1163 to <8 x float>*
  %1165 = load <8 x float>, <8 x float>* %1164, align 1, !tbaa !12
  %1166 = add nsw i64 %1126, 80
  %1167 = getelementptr inbounds float, float* %3, i64 %1166
  %1168 = bitcast float* %1167 to <8 x float>*
  %1169 = load <8 x float>, <8 x float>* %1168, align 1, !tbaa !12
  %1170 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1129, <8 x float> %55, <8 x float> %1085) #10
  %1171 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1133, <8 x float> %55, <8 x float> %1089) #10
  %1172 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1137, <8 x float> %55, <8 x float> %1093) #10
  %1173 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1141, <8 x float> %55, <8 x float> %1097) #10
  %1174 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1145, <8 x float> %55, <8 x float> %1101) #10
  %1175 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1149, <8 x float> %55, <8 x float> %1105) #10
  %1176 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1153, <8 x float> %55, <8 x float> %1109) #10
  %1177 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1157, <8 x float> %55, <8 x float> %1113) #10
  %1178 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1161, <8 x float> %55, <8 x float> %1117) #10
  %1179 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1165, <8 x float> %55, <8 x float> %1121) #10
  %1180 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1169, <8 x float> %55, <8 x float> %1125) #10
  store <8 x float> %1170, <8 x float>* %1084, align 1, !tbaa !12
  store <8 x float> %1171, <8 x float>* %1088, align 1, !tbaa !12
  store <8 x float> %1172, <8 x float>* %1092, align 1, !tbaa !12
  store <8 x float> %1173, <8 x float>* %1096, align 1, !tbaa !12
  store <8 x float> %1174, <8 x float>* %1100, align 1, !tbaa !12
  store <8 x float> %1175, <8 x float>* %1104, align 1, !tbaa !12
  store <8 x float> %1176, <8 x float>* %1108, align 1, !tbaa !12
  store <8 x float> %1177, <8 x float>* %1112, align 1, !tbaa !12
  store <8 x float> %1178, <8 x float>* %1116, align 1, !tbaa !12
  store <8 x float> %1179, <8 x float>* %1120, align 1, !tbaa !12
  store <8 x float> %1180, <8 x float>* %1124, align 1, !tbaa !12
  %1181 = add nuw nsw i64 %1037, 88
  %1182 = icmp ult i64 %1181, %882
  br i1 %1182, label %1036, label %1030

1183:                                             ; preds = %1190, %712, %877, %1030
  %1184 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1185 = icmp sgt i32 %1184, 0
  br i1 %1185, label %1186, label %1808

1186:                                             ; preds = %1183
  %1187 = zext i32 %1184 to i64
  %1188 = trunc i64 %61 to i32
  %1189 = mul nsw i32 %1184, %1188
  br label %1343

1190:                                             ; preds = %1031, %1190
  %1191 = phi i64 [ 0, %1031 ], [ %1335, %1190 ]
  %1192 = getelementptr inbounds float, float* %5, i64 %1191
  %1193 = getelementptr inbounds float, float* %1192, i64 8
  %1194 = bitcast float* %1193 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1194, i32 0, i32 1, i32 1)
  %1195 = getelementptr inbounds float, float* %3, i64 %1191
  %1196 = getelementptr inbounds float, float* %1195, i64 8
  %1197 = bitcast float* %1196 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1197, i32 0, i32 1, i32 1)
  %1198 = getelementptr inbounds float, float* %1192, i64 16
  %1199 = bitcast float* %1198 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1199, i32 0, i32 1, i32 1)
  %1200 = getelementptr inbounds float, float* %1195, i64 16
  %1201 = bitcast float* %1200 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1201, i32 0, i32 1, i32 1)
  %1202 = getelementptr inbounds float, float* %1192, i64 24
  %1203 = bitcast float* %1202 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1203, i32 0, i32 1, i32 1)
  %1204 = getelementptr inbounds float, float* %1195, i64 24
  %1205 = bitcast float* %1204 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1205, i32 0, i32 1, i32 1)
  %1206 = getelementptr inbounds float, float* %1192, i64 32
  %1207 = bitcast float* %1206 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1207, i32 0, i32 1, i32 1)
  %1208 = getelementptr inbounds float, float* %1195, i64 32
  %1209 = bitcast float* %1208 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1209, i32 0, i32 1, i32 1)
  %1210 = getelementptr inbounds float, float* %1192, i64 40
  %1211 = bitcast float* %1210 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1211, i32 0, i32 1, i32 1)
  %1212 = getelementptr inbounds float, float* %1195, i64 40
  %1213 = bitcast float* %1212 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1213, i32 0, i32 1, i32 1)
  %1214 = getelementptr inbounds float, float* %1192, i64 48
  %1215 = bitcast float* %1214 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1215, i32 0, i32 1, i32 1)
  %1216 = getelementptr inbounds float, float* %1195, i64 48
  %1217 = bitcast float* %1216 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1217, i32 0, i32 1, i32 1)
  %1218 = getelementptr inbounds float, float* %1192, i64 56
  %1219 = bitcast float* %1218 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1219, i32 0, i32 1, i32 1)
  %1220 = getelementptr inbounds float, float* %1195, i64 56
  %1221 = bitcast float* %1220 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1221, i32 0, i32 1, i32 1)
  %1222 = getelementptr inbounds float, float* %1192, i64 64
  %1223 = bitcast float* %1222 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1223, i32 0, i32 1, i32 1)
  %1224 = getelementptr inbounds float, float* %1195, i64 64
  %1225 = bitcast float* %1224 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1225, i32 0, i32 1, i32 1)
  %1226 = getelementptr inbounds float, float* %1192, i64 72
  %1227 = bitcast float* %1226 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1227, i32 0, i32 1, i32 1)
  %1228 = getelementptr inbounds float, float* %1195, i64 72
  %1229 = bitcast float* %1228 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1229, i32 0, i32 1, i32 1)
  %1230 = getelementptr inbounds float, float* %1192, i64 80
  %1231 = bitcast float* %1230 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1231, i32 0, i32 1, i32 1)
  %1232 = getelementptr inbounds float, float* %1195, i64 80
  %1233 = bitcast float* %1232 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1233, i32 0, i32 1, i32 1)
  %1234 = getelementptr inbounds float, float* %1192, i64 88
  %1235 = bitcast float* %1234 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1235, i32 0, i32 1, i32 1)
  %1236 = getelementptr inbounds float, float* %1195, i64 88
  %1237 = bitcast float* %1236 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1237, i32 0, i32 1, i32 1)
  %1238 = bitcast float* %1192 to <8 x float>*
  %1239 = load <8 x float>, <8 x float>* %1238, align 1, !tbaa !12
  %1240 = add nuw nsw i64 %1191, 8
  %1241 = getelementptr inbounds float, float* %5, i64 %1240
  %1242 = bitcast float* %1241 to <8 x float>*
  %1243 = load <8 x float>, <8 x float>* %1242, align 1, !tbaa !12
  %1244 = add nuw nsw i64 %1191, 16
  %1245 = getelementptr inbounds float, float* %5, i64 %1244
  %1246 = bitcast float* %1245 to <8 x float>*
  %1247 = load <8 x float>, <8 x float>* %1246, align 1, !tbaa !12
  %1248 = add nuw nsw i64 %1191, 24
  %1249 = getelementptr inbounds float, float* %5, i64 %1248
  %1250 = bitcast float* %1249 to <8 x float>*
  %1251 = load <8 x float>, <8 x float>* %1250, align 1, !tbaa !12
  %1252 = add nuw nsw i64 %1191, 32
  %1253 = getelementptr inbounds float, float* %5, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = add nuw nsw i64 %1191, 40
  %1257 = getelementptr inbounds float, float* %5, i64 %1256
  %1258 = bitcast float* %1257 to <8 x float>*
  %1259 = load <8 x float>, <8 x float>* %1258, align 1, !tbaa !12
  %1260 = add nuw nsw i64 %1191, 48
  %1261 = getelementptr inbounds float, float* %5, i64 %1260
  %1262 = bitcast float* %1261 to <8 x float>*
  %1263 = load <8 x float>, <8 x float>* %1262, align 1, !tbaa !12
  %1264 = add nuw nsw i64 %1191, 56
  %1265 = getelementptr inbounds float, float* %5, i64 %1264
  %1266 = bitcast float* %1265 to <8 x float>*
  %1267 = load <8 x float>, <8 x float>* %1266, align 1, !tbaa !12
  %1268 = add nuw nsw i64 %1191, 64
  %1269 = getelementptr inbounds float, float* %5, i64 %1268
  %1270 = bitcast float* %1269 to <8 x float>*
  %1271 = load <8 x float>, <8 x float>* %1270, align 1, !tbaa !12
  %1272 = add nuw nsw i64 %1191, 72
  %1273 = getelementptr inbounds float, float* %5, i64 %1272
  %1274 = bitcast float* %1273 to <8 x float>*
  %1275 = load <8 x float>, <8 x float>* %1274, align 1, !tbaa !12
  %1276 = add nuw nsw i64 %1191, 80
  %1277 = getelementptr inbounds float, float* %5, i64 %1276
  %1278 = bitcast float* %1277 to <8 x float>*
  %1279 = load <8 x float>, <8 x float>* %1278, align 1, !tbaa !12
  %1280 = add nsw i64 %1191, %1034
  %1281 = getelementptr inbounds float, float* %3, i64 %1280
  %1282 = bitcast float* %1281 to <8 x float>*
  %1283 = load <8 x float>, <8 x float>* %1282, align 1, !tbaa !12
  %1284 = add nsw i64 %1280, 8
  %1285 = getelementptr inbounds float, float* %3, i64 %1284
  %1286 = bitcast float* %1285 to <8 x float>*
  %1287 = load <8 x float>, <8 x float>* %1286, align 1, !tbaa !12
  %1288 = add nsw i64 %1280, 16
  %1289 = getelementptr inbounds float, float* %3, i64 %1288
  %1290 = bitcast float* %1289 to <8 x float>*
  %1291 = load <8 x float>, <8 x float>* %1290, align 1, !tbaa !12
  %1292 = add nsw i64 %1280, 24
  %1293 = getelementptr inbounds float, float* %3, i64 %1292
  %1294 = bitcast float* %1293 to <8 x float>*
  %1295 = load <8 x float>, <8 x float>* %1294, align 1, !tbaa !12
  %1296 = add nsw i64 %1280, 32
  %1297 = getelementptr inbounds float, float* %3, i64 %1296
  %1298 = bitcast float* %1297 to <8 x float>*
  %1299 = load <8 x float>, <8 x float>* %1298, align 1, !tbaa !12
  %1300 = add nsw i64 %1280, 40
  %1301 = getelementptr inbounds float, float* %3, i64 %1300
  %1302 = bitcast float* %1301 to <8 x float>*
  %1303 = load <8 x float>, <8 x float>* %1302, align 1, !tbaa !12
  %1304 = add nsw i64 %1280, 48
  %1305 = getelementptr inbounds float, float* %3, i64 %1304
  %1306 = bitcast float* %1305 to <8 x float>*
  %1307 = load <8 x float>, <8 x float>* %1306, align 1, !tbaa !12
  %1308 = add nsw i64 %1280, 56
  %1309 = getelementptr inbounds float, float* %3, i64 %1308
  %1310 = bitcast float* %1309 to <8 x float>*
  %1311 = load <8 x float>, <8 x float>* %1310, align 1, !tbaa !12
  %1312 = add nsw i64 %1280, 64
  %1313 = getelementptr inbounds float, float* %3, i64 %1312
  %1314 = bitcast float* %1313 to <8 x float>*
  %1315 = load <8 x float>, <8 x float>* %1314, align 1, !tbaa !12
  %1316 = add nsw i64 %1280, 72
  %1317 = getelementptr inbounds float, float* %3, i64 %1316
  %1318 = bitcast float* %1317 to <8 x float>*
  %1319 = load <8 x float>, <8 x float>* %1318, align 1, !tbaa !12
  %1320 = add nsw i64 %1280, 80
  %1321 = getelementptr inbounds float, float* %3, i64 %1320
  %1322 = bitcast float* %1321 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1283, <8 x float> %60, <8 x float> %1239) #10
  %1325 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1287, <8 x float> %60, <8 x float> %1243) #10
  %1326 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1291, <8 x float> %60, <8 x float> %1247) #10
  %1327 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1295, <8 x float> %60, <8 x float> %1251) #10
  %1328 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1299, <8 x float> %60, <8 x float> %1255) #10
  %1329 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1303, <8 x float> %60, <8 x float> %1259) #10
  %1330 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1307, <8 x float> %60, <8 x float> %1263) #10
  %1331 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1311, <8 x float> %60, <8 x float> %1267) #10
  %1332 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1315, <8 x float> %60, <8 x float> %1271) #10
  %1333 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1319, <8 x float> %60, <8 x float> %1275) #10
  %1334 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1323, <8 x float> %60, <8 x float> %1279) #10
  store <8 x float> %1324, <8 x float>* %1238, align 1, !tbaa !12
  store <8 x float> %1325, <8 x float>* %1242, align 1, !tbaa !12
  store <8 x float> %1326, <8 x float>* %1246, align 1, !tbaa !12
  store <8 x float> %1327, <8 x float>* %1250, align 1, !tbaa !12
  store <8 x float> %1328, <8 x float>* %1254, align 1, !tbaa !12
  store <8 x float> %1329, <8 x float>* %1258, align 1, !tbaa !12
  store <8 x float> %1330, <8 x float>* %1262, align 1, !tbaa !12
  store <8 x float> %1331, <8 x float>* %1266, align 1, !tbaa !12
  store <8 x float> %1332, <8 x float>* %1270, align 1, !tbaa !12
  store <8 x float> %1333, <8 x float>* %1274, align 1, !tbaa !12
  store <8 x float> %1334, <8 x float>* %1278, align 1, !tbaa !12
  %1335 = add nuw nsw i64 %1191, 88
  %1336 = icmp ult i64 %1335, %1035
  br i1 %1336, label %1190, label %1183

1337:                                             ; preds = %1343
  br i1 %1185, label %1338, label %1808

1338:                                             ; preds = %1337
  %1339 = trunc i64 %66 to i32
  %1340 = mul nsw i32 %1184, %1339
  %1341 = sext i32 %1340 to i64
  %1342 = zext i32 %1184 to i64
  br label %1508

1343:                                             ; preds = %1186, %1343
  %1344 = phi i64 [ 0, %1186 ], [ %1500, %1343 ]
  %1345 = getelementptr inbounds float, float* %5, i64 %1344
  %1346 = getelementptr inbounds float, float* %1345, i64 8
  %1347 = bitcast float* %1346 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1347, i32 0, i32 1, i32 1)
  %1348 = getelementptr inbounds float, float* %3, i64 %1344
  %1349 = getelementptr inbounds float, float* %1348, i64 8
  %1350 = bitcast float* %1349 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1350, i32 0, i32 1, i32 1)
  %1351 = getelementptr inbounds float, float* %1345, i64 16
  %1352 = bitcast float* %1351 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1352, i32 0, i32 1, i32 1)
  %1353 = getelementptr inbounds float, float* %1348, i64 16
  %1354 = bitcast float* %1353 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1354, i32 0, i32 1, i32 1)
  %1355 = getelementptr inbounds float, float* %1345, i64 24
  %1356 = bitcast float* %1355 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1356, i32 0, i32 1, i32 1)
  %1357 = getelementptr inbounds float, float* %1348, i64 24
  %1358 = bitcast float* %1357 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1358, i32 0, i32 1, i32 1)
  %1359 = getelementptr inbounds float, float* %1345, i64 32
  %1360 = bitcast float* %1359 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1360, i32 0, i32 1, i32 1)
  %1361 = getelementptr inbounds float, float* %1348, i64 32
  %1362 = bitcast float* %1361 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1362, i32 0, i32 1, i32 1)
  %1363 = getelementptr inbounds float, float* %1345, i64 40
  %1364 = bitcast float* %1363 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1364, i32 0, i32 1, i32 1)
  %1365 = getelementptr inbounds float, float* %1348, i64 40
  %1366 = bitcast float* %1365 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1366, i32 0, i32 1, i32 1)
  %1367 = getelementptr inbounds float, float* %1345, i64 48
  %1368 = bitcast float* %1367 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1368, i32 0, i32 1, i32 1)
  %1369 = getelementptr inbounds float, float* %1348, i64 48
  %1370 = bitcast float* %1369 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1370, i32 0, i32 1, i32 1)
  %1371 = getelementptr inbounds float, float* %1345, i64 56
  %1372 = bitcast float* %1371 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1372, i32 0, i32 1, i32 1)
  %1373 = getelementptr inbounds float, float* %1348, i64 56
  %1374 = bitcast float* %1373 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1374, i32 0, i32 1, i32 1)
  %1375 = getelementptr inbounds float, float* %1345, i64 64
  %1376 = bitcast float* %1375 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1376, i32 0, i32 1, i32 1)
  %1377 = getelementptr inbounds float, float* %1348, i64 64
  %1378 = bitcast float* %1377 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1378, i32 0, i32 1, i32 1)
  %1379 = getelementptr inbounds float, float* %1345, i64 72
  %1380 = bitcast float* %1379 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1380, i32 0, i32 1, i32 1)
  %1381 = getelementptr inbounds float, float* %1348, i64 72
  %1382 = bitcast float* %1381 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1382, i32 0, i32 1, i32 1)
  %1383 = getelementptr inbounds float, float* %1345, i64 80
  %1384 = bitcast float* %1383 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1384, i32 0, i32 1, i32 1)
  %1385 = getelementptr inbounds float, float* %1348, i64 80
  %1386 = bitcast float* %1385 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1386, i32 0, i32 1, i32 1)
  %1387 = getelementptr inbounds float, float* %1345, i64 88
  %1388 = bitcast float* %1387 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1388, i32 0, i32 1, i32 1)
  %1389 = getelementptr inbounds float, float* %1348, i64 88
  %1390 = bitcast float* %1389 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1390, i32 0, i32 1, i32 1)
  %1391 = bitcast float* %1345 to <8 x float>*
  %1392 = load <8 x float>, <8 x float>* %1391, align 1, !tbaa !12
  %1393 = add nuw nsw i64 %1344, 8
  %1394 = getelementptr inbounds float, float* %5, i64 %1393
  %1395 = bitcast float* %1394 to <8 x float>*
  %1396 = load <8 x float>, <8 x float>* %1395, align 1, !tbaa !12
  %1397 = add nuw nsw i64 %1344, 16
  %1398 = getelementptr inbounds float, float* %5, i64 %1397
  %1399 = bitcast float* %1398 to <8 x float>*
  %1400 = load <8 x float>, <8 x float>* %1399, align 1, !tbaa !12
  %1401 = add nuw nsw i64 %1344, 24
  %1402 = getelementptr inbounds float, float* %5, i64 %1401
  %1403 = bitcast float* %1402 to <8 x float>*
  %1404 = load <8 x float>, <8 x float>* %1403, align 1, !tbaa !12
  %1405 = add nuw nsw i64 %1344, 32
  %1406 = getelementptr inbounds float, float* %5, i64 %1405
  %1407 = bitcast float* %1406 to <8 x float>*
  %1408 = load <8 x float>, <8 x float>* %1407, align 1, !tbaa !12
  %1409 = add nuw nsw i64 %1344, 40
  %1410 = getelementptr inbounds float, float* %5, i64 %1409
  %1411 = bitcast float* %1410 to <8 x float>*
  %1412 = load <8 x float>, <8 x float>* %1411, align 1, !tbaa !12
  %1413 = add nuw nsw i64 %1344, 48
  %1414 = getelementptr inbounds float, float* %5, i64 %1413
  %1415 = bitcast float* %1414 to <8 x float>*
  %1416 = load <8 x float>, <8 x float>* %1415, align 1, !tbaa !12
  %1417 = add nuw nsw i64 %1344, 56
  %1418 = getelementptr inbounds float, float* %5, i64 %1417
  %1419 = bitcast float* %1418 to <8 x float>*
  %1420 = load <8 x float>, <8 x float>* %1419, align 1, !tbaa !12
  %1421 = add nuw nsw i64 %1344, 64
  %1422 = getelementptr inbounds float, float* %5, i64 %1421
  %1423 = bitcast float* %1422 to <8 x float>*
  %1424 = load <8 x float>, <8 x float>* %1423, align 1, !tbaa !12
  %1425 = add nuw nsw i64 %1344, 72
  %1426 = getelementptr inbounds float, float* %5, i64 %1425
  %1427 = bitcast float* %1426 to <8 x float>*
  %1428 = load <8 x float>, <8 x float>* %1427, align 1, !tbaa !12
  %1429 = add nuw nsw i64 %1344, 80
  %1430 = getelementptr inbounds float, float* %5, i64 %1429
  %1431 = bitcast float* %1430 to <8 x float>*
  %1432 = load <8 x float>, <8 x float>* %1431, align 1, !tbaa !12
  %1433 = trunc i64 %1344 to i32
  %1434 = add nsw i32 %1189, %1433
  %1435 = sext i32 %1434 to i64
  %1436 = getelementptr inbounds float, float* %3, i64 %1435
  %1437 = bitcast float* %1436 to <8 x float>*
  %1438 = load <8 x float>, <8 x float>* %1437, align 1, !tbaa !12
  %1439 = add nsw i32 %1434, 8
  %1440 = sext i32 %1439 to i64
  %1441 = getelementptr inbounds float, float* %3, i64 %1440
  %1442 = bitcast float* %1441 to <8 x float>*
  %1443 = load <8 x float>, <8 x float>* %1442, align 1, !tbaa !12
  %1444 = add nsw i32 %1434, 16
  %1445 = sext i32 %1444 to i64
  %1446 = getelementptr inbounds float, float* %3, i64 %1445
  %1447 = bitcast float* %1446 to <8 x float>*
  %1448 = load <8 x float>, <8 x float>* %1447, align 1, !tbaa !12
  %1449 = add nsw i32 %1434, 24
  %1450 = sext i32 %1449 to i64
  %1451 = getelementptr inbounds float, float* %3, i64 %1450
  %1452 = bitcast float* %1451 to <8 x float>*
  %1453 = load <8 x float>, <8 x float>* %1452, align 1, !tbaa !12
  %1454 = add nsw i32 %1434, 32
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds float, float* %3, i64 %1455
  %1457 = bitcast float* %1456 to <8 x float>*
  %1458 = load <8 x float>, <8 x float>* %1457, align 1, !tbaa !12
  %1459 = add nsw i32 %1434, 40
  %1460 = sext i32 %1459 to i64
  %1461 = getelementptr inbounds float, float* %3, i64 %1460
  %1462 = bitcast float* %1461 to <8 x float>*
  %1463 = load <8 x float>, <8 x float>* %1462, align 1, !tbaa !12
  %1464 = add nsw i32 %1434, 48
  %1465 = sext i32 %1464 to i64
  %1466 = getelementptr inbounds float, float* %3, i64 %1465
  %1467 = bitcast float* %1466 to <8 x float>*
  %1468 = load <8 x float>, <8 x float>* %1467, align 1, !tbaa !12
  %1469 = add nsw i32 %1434, 56
  %1470 = sext i32 %1469 to i64
  %1471 = getelementptr inbounds float, float* %3, i64 %1470
  %1472 = bitcast float* %1471 to <8 x float>*
  %1473 = load <8 x float>, <8 x float>* %1472, align 1, !tbaa !12
  %1474 = add nsw i32 %1434, 64
  %1475 = sext i32 %1474 to i64
  %1476 = getelementptr inbounds float, float* %3, i64 %1475
  %1477 = bitcast float* %1476 to <8 x float>*
  %1478 = load <8 x float>, <8 x float>* %1477, align 1, !tbaa !12
  %1479 = add nsw i32 %1434, 72
  %1480 = sext i32 %1479 to i64
  %1481 = getelementptr inbounds float, float* %3, i64 %1480
  %1482 = bitcast float* %1481 to <8 x float>*
  %1483 = load <8 x float>, <8 x float>* %1482, align 1, !tbaa !12
  %1484 = add nsw i32 %1434, 80
  %1485 = sext i32 %1484 to i64
  %1486 = getelementptr inbounds float, float* %3, i64 %1485
  %1487 = bitcast float* %1486 to <8 x float>*
  %1488 = load <8 x float>, <8 x float>* %1487, align 1, !tbaa !12
  %1489 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1438, <8 x float> %65, <8 x float> %1392) #10
  %1490 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1443, <8 x float> %65, <8 x float> %1396) #10
  %1491 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1448, <8 x float> %65, <8 x float> %1400) #10
  %1492 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1453, <8 x float> %65, <8 x float> %1404) #10
  %1493 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1458, <8 x float> %65, <8 x float> %1408) #10
  %1494 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1463, <8 x float> %65, <8 x float> %1412) #10
  %1495 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1468, <8 x float> %65, <8 x float> %1416) #10
  %1496 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1473, <8 x float> %65, <8 x float> %1420) #10
  %1497 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1478, <8 x float> %65, <8 x float> %1424) #10
  %1498 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1483, <8 x float> %65, <8 x float> %1428) #10
  %1499 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1488, <8 x float> %65, <8 x float> %1432) #10
  store <8 x float> %1489, <8 x float>* %1391, align 1, !tbaa !12
  store <8 x float> %1490, <8 x float>* %1395, align 1, !tbaa !12
  store <8 x float> %1491, <8 x float>* %1399, align 1, !tbaa !12
  store <8 x float> %1492, <8 x float>* %1403, align 1, !tbaa !12
  store <8 x float> %1493, <8 x float>* %1407, align 1, !tbaa !12
  store <8 x float> %1494, <8 x float>* %1411, align 1, !tbaa !12
  store <8 x float> %1495, <8 x float>* %1415, align 1, !tbaa !12
  store <8 x float> %1496, <8 x float>* %1419, align 1, !tbaa !12
  store <8 x float> %1497, <8 x float>* %1423, align 1, !tbaa !12
  store <8 x float> %1498, <8 x float>* %1427, align 1, !tbaa !12
  store <8 x float> %1499, <8 x float>* %1431, align 1, !tbaa !12
  %1500 = add nuw nsw i64 %1344, 88
  %1501 = icmp ult i64 %1500, %1187
  br i1 %1501, label %1343, label %1337

1502:                                             ; preds = %1508
  br i1 %1185, label %1503, label %1808

1503:                                             ; preds = %1502
  %1504 = trunc i64 %71 to i32
  %1505 = mul nsw i32 %1184, %1504
  %1506 = sext i32 %1505 to i64
  %1507 = zext i32 %1184 to i64
  br label %1661

1508:                                             ; preds = %1338, %1508
  %1509 = phi i64 [ 0, %1338 ], [ %1653, %1508 ]
  %1510 = getelementptr inbounds float, float* %5, i64 %1509
  %1511 = getelementptr inbounds float, float* %1510, i64 8
  %1512 = bitcast float* %1511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1512, i32 0, i32 1, i32 1)
  %1513 = getelementptr inbounds float, float* %3, i64 %1509
  %1514 = getelementptr inbounds float, float* %1513, i64 8
  %1515 = bitcast float* %1514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1515, i32 0, i32 1, i32 1)
  %1516 = getelementptr inbounds float, float* %1510, i64 16
  %1517 = bitcast float* %1516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1517, i32 0, i32 1, i32 1)
  %1518 = getelementptr inbounds float, float* %1513, i64 16
  %1519 = bitcast float* %1518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1519, i32 0, i32 1, i32 1)
  %1520 = getelementptr inbounds float, float* %1510, i64 24
  %1521 = bitcast float* %1520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1521, i32 0, i32 1, i32 1)
  %1522 = getelementptr inbounds float, float* %1513, i64 24
  %1523 = bitcast float* %1522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1523, i32 0, i32 1, i32 1)
  %1524 = getelementptr inbounds float, float* %1510, i64 32
  %1525 = bitcast float* %1524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1525, i32 0, i32 1, i32 1)
  %1526 = getelementptr inbounds float, float* %1513, i64 32
  %1527 = bitcast float* %1526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1527, i32 0, i32 1, i32 1)
  %1528 = getelementptr inbounds float, float* %1510, i64 40
  %1529 = bitcast float* %1528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1529, i32 0, i32 1, i32 1)
  %1530 = getelementptr inbounds float, float* %1513, i64 40
  %1531 = bitcast float* %1530 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1531, i32 0, i32 1, i32 1)
  %1532 = getelementptr inbounds float, float* %1510, i64 48
  %1533 = bitcast float* %1532 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1533, i32 0, i32 1, i32 1)
  %1534 = getelementptr inbounds float, float* %1513, i64 48
  %1535 = bitcast float* %1534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1535, i32 0, i32 1, i32 1)
  %1536 = getelementptr inbounds float, float* %1510, i64 56
  %1537 = bitcast float* %1536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1537, i32 0, i32 1, i32 1)
  %1538 = getelementptr inbounds float, float* %1513, i64 56
  %1539 = bitcast float* %1538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1539, i32 0, i32 1, i32 1)
  %1540 = getelementptr inbounds float, float* %1510, i64 64
  %1541 = bitcast float* %1540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1541, i32 0, i32 1, i32 1)
  %1542 = getelementptr inbounds float, float* %1513, i64 64
  %1543 = bitcast float* %1542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1543, i32 0, i32 1, i32 1)
  %1544 = getelementptr inbounds float, float* %1510, i64 72
  %1545 = bitcast float* %1544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1545, i32 0, i32 1, i32 1)
  %1546 = getelementptr inbounds float, float* %1513, i64 72
  %1547 = bitcast float* %1546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1547, i32 0, i32 1, i32 1)
  %1548 = getelementptr inbounds float, float* %1510, i64 80
  %1549 = bitcast float* %1548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1549, i32 0, i32 1, i32 1)
  %1550 = getelementptr inbounds float, float* %1513, i64 80
  %1551 = bitcast float* %1550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1551, i32 0, i32 1, i32 1)
  %1552 = getelementptr inbounds float, float* %1510, i64 88
  %1553 = bitcast float* %1552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1553, i32 0, i32 1, i32 1)
  %1554 = getelementptr inbounds float, float* %1513, i64 88
  %1555 = bitcast float* %1554 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1555, i32 0, i32 1, i32 1)
  %1556 = bitcast float* %1510 to <8 x float>*
  %1557 = load <8 x float>, <8 x float>* %1556, align 1, !tbaa !12
  %1558 = add nuw nsw i64 %1509, 8
  %1559 = getelementptr inbounds float, float* %5, i64 %1558
  %1560 = bitcast float* %1559 to <8 x float>*
  %1561 = load <8 x float>, <8 x float>* %1560, align 1, !tbaa !12
  %1562 = add nuw nsw i64 %1509, 16
  %1563 = getelementptr inbounds float, float* %5, i64 %1562
  %1564 = bitcast float* %1563 to <8 x float>*
  %1565 = load <8 x float>, <8 x float>* %1564, align 1, !tbaa !12
  %1566 = add nuw nsw i64 %1509, 24
  %1567 = getelementptr inbounds float, float* %5, i64 %1566
  %1568 = bitcast float* %1567 to <8 x float>*
  %1569 = load <8 x float>, <8 x float>* %1568, align 1, !tbaa !12
  %1570 = add nuw nsw i64 %1509, 32
  %1571 = getelementptr inbounds float, float* %5, i64 %1570
  %1572 = bitcast float* %1571 to <8 x float>*
  %1573 = load <8 x float>, <8 x float>* %1572, align 1, !tbaa !12
  %1574 = add nuw nsw i64 %1509, 40
  %1575 = getelementptr inbounds float, float* %5, i64 %1574
  %1576 = bitcast float* %1575 to <8 x float>*
  %1577 = load <8 x float>, <8 x float>* %1576, align 1, !tbaa !12
  %1578 = add nuw nsw i64 %1509, 48
  %1579 = getelementptr inbounds float, float* %5, i64 %1578
  %1580 = bitcast float* %1579 to <8 x float>*
  %1581 = load <8 x float>, <8 x float>* %1580, align 1, !tbaa !12
  %1582 = add nuw nsw i64 %1509, 56
  %1583 = getelementptr inbounds float, float* %5, i64 %1582
  %1584 = bitcast float* %1583 to <8 x float>*
  %1585 = load <8 x float>, <8 x float>* %1584, align 1, !tbaa !12
  %1586 = add nuw nsw i64 %1509, 64
  %1587 = getelementptr inbounds float, float* %5, i64 %1586
  %1588 = bitcast float* %1587 to <8 x float>*
  %1589 = load <8 x float>, <8 x float>* %1588, align 1, !tbaa !12
  %1590 = add nuw nsw i64 %1509, 72
  %1591 = getelementptr inbounds float, float* %5, i64 %1590
  %1592 = bitcast float* %1591 to <8 x float>*
  %1593 = load <8 x float>, <8 x float>* %1592, align 1, !tbaa !12
  %1594 = add nuw nsw i64 %1509, 80
  %1595 = getelementptr inbounds float, float* %5, i64 %1594
  %1596 = bitcast float* %1595 to <8 x float>*
  %1597 = load <8 x float>, <8 x float>* %1596, align 1, !tbaa !12
  %1598 = add nsw i64 %1509, %1341
  %1599 = getelementptr inbounds float, float* %3, i64 %1598
  %1600 = bitcast float* %1599 to <8 x float>*
  %1601 = load <8 x float>, <8 x float>* %1600, align 1, !tbaa !12
  %1602 = add nsw i64 %1598, 8
  %1603 = getelementptr inbounds float, float* %3, i64 %1602
  %1604 = bitcast float* %1603 to <8 x float>*
  %1605 = load <8 x float>, <8 x float>* %1604, align 1, !tbaa !12
  %1606 = add nsw i64 %1598, 16
  %1607 = getelementptr inbounds float, float* %3, i64 %1606
  %1608 = bitcast float* %1607 to <8 x float>*
  %1609 = load <8 x float>, <8 x float>* %1608, align 1, !tbaa !12
  %1610 = add nsw i64 %1598, 24
  %1611 = getelementptr inbounds float, float* %3, i64 %1610
  %1612 = bitcast float* %1611 to <8 x float>*
  %1613 = load <8 x float>, <8 x float>* %1612, align 1, !tbaa !12
  %1614 = add nsw i64 %1598, 32
  %1615 = getelementptr inbounds float, float* %3, i64 %1614
  %1616 = bitcast float* %1615 to <8 x float>*
  %1617 = load <8 x float>, <8 x float>* %1616, align 1, !tbaa !12
  %1618 = add nsw i64 %1598, 40
  %1619 = getelementptr inbounds float, float* %3, i64 %1618
  %1620 = bitcast float* %1619 to <8 x float>*
  %1621 = load <8 x float>, <8 x float>* %1620, align 1, !tbaa !12
  %1622 = add nsw i64 %1598, 48
  %1623 = getelementptr inbounds float, float* %3, i64 %1622
  %1624 = bitcast float* %1623 to <8 x float>*
  %1625 = load <8 x float>, <8 x float>* %1624, align 1, !tbaa !12
  %1626 = add nsw i64 %1598, 56
  %1627 = getelementptr inbounds float, float* %3, i64 %1626
  %1628 = bitcast float* %1627 to <8 x float>*
  %1629 = load <8 x float>, <8 x float>* %1628, align 1, !tbaa !12
  %1630 = add nsw i64 %1598, 64
  %1631 = getelementptr inbounds float, float* %3, i64 %1630
  %1632 = bitcast float* %1631 to <8 x float>*
  %1633 = load <8 x float>, <8 x float>* %1632, align 1, !tbaa !12
  %1634 = add nsw i64 %1598, 72
  %1635 = getelementptr inbounds float, float* %3, i64 %1634
  %1636 = bitcast float* %1635 to <8 x float>*
  %1637 = load <8 x float>, <8 x float>* %1636, align 1, !tbaa !12
  %1638 = add nsw i64 %1598, 80
  %1639 = getelementptr inbounds float, float* %3, i64 %1638
  %1640 = bitcast float* %1639 to <8 x float>*
  %1641 = load <8 x float>, <8 x float>* %1640, align 1, !tbaa !12
  %1642 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1601, <8 x float> %70, <8 x float> %1557) #10
  %1643 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1605, <8 x float> %70, <8 x float> %1561) #10
  %1644 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1609, <8 x float> %70, <8 x float> %1565) #10
  %1645 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1613, <8 x float> %70, <8 x float> %1569) #10
  %1646 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1617, <8 x float> %70, <8 x float> %1573) #10
  %1647 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1621, <8 x float> %70, <8 x float> %1577) #10
  %1648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1625, <8 x float> %70, <8 x float> %1581) #10
  %1649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1629, <8 x float> %70, <8 x float> %1585) #10
  %1650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1633, <8 x float> %70, <8 x float> %1589) #10
  %1651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1637, <8 x float> %70, <8 x float> %1593) #10
  %1652 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1641, <8 x float> %70, <8 x float> %1597) #10
  store <8 x float> %1642, <8 x float>* %1556, align 1, !tbaa !12
  store <8 x float> %1643, <8 x float>* %1560, align 1, !tbaa !12
  store <8 x float> %1644, <8 x float>* %1564, align 1, !tbaa !12
  store <8 x float> %1645, <8 x float>* %1568, align 1, !tbaa !12
  store <8 x float> %1646, <8 x float>* %1572, align 1, !tbaa !12
  store <8 x float> %1647, <8 x float>* %1576, align 1, !tbaa !12
  store <8 x float> %1648, <8 x float>* %1580, align 1, !tbaa !12
  store <8 x float> %1649, <8 x float>* %1584, align 1, !tbaa !12
  store <8 x float> %1650, <8 x float>* %1588, align 1, !tbaa !12
  store <8 x float> %1651, <8 x float>* %1592, align 1, !tbaa !12
  store <8 x float> %1652, <8 x float>* %1596, align 1, !tbaa !12
  %1653 = add nuw nsw i64 %1509, 88
  %1654 = icmp ult i64 %1653, %1342
  br i1 %1654, label %1508, label %1502

1655:                                             ; preds = %1661
  br i1 %1185, label %1656, label %1808

1656:                                             ; preds = %1655
  %1657 = trunc i64 %76 to i32
  %1658 = mul nsw i32 %1184, %1657
  %1659 = sext i32 %1658 to i64
  %1660 = zext i32 %1184 to i64
  br label %1813

1661:                                             ; preds = %1503, %1661
  %1662 = phi i64 [ 0, %1503 ], [ %1806, %1661 ]
  %1663 = getelementptr inbounds float, float* %5, i64 %1662
  %1664 = getelementptr inbounds float, float* %1663, i64 8
  %1665 = bitcast float* %1664 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1665, i32 0, i32 1, i32 1)
  %1666 = getelementptr inbounds float, float* %3, i64 %1662
  %1667 = getelementptr inbounds float, float* %1666, i64 8
  %1668 = bitcast float* %1667 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1668, i32 0, i32 1, i32 1)
  %1669 = getelementptr inbounds float, float* %1663, i64 16
  %1670 = bitcast float* %1669 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1670, i32 0, i32 1, i32 1)
  %1671 = getelementptr inbounds float, float* %1666, i64 16
  %1672 = bitcast float* %1671 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1672, i32 0, i32 1, i32 1)
  %1673 = getelementptr inbounds float, float* %1663, i64 24
  %1674 = bitcast float* %1673 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1674, i32 0, i32 1, i32 1)
  %1675 = getelementptr inbounds float, float* %1666, i64 24
  %1676 = bitcast float* %1675 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1676, i32 0, i32 1, i32 1)
  %1677 = getelementptr inbounds float, float* %1663, i64 32
  %1678 = bitcast float* %1677 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1678, i32 0, i32 1, i32 1)
  %1679 = getelementptr inbounds float, float* %1666, i64 32
  %1680 = bitcast float* %1679 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1680, i32 0, i32 1, i32 1)
  %1681 = getelementptr inbounds float, float* %1663, i64 40
  %1682 = bitcast float* %1681 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1682, i32 0, i32 1, i32 1)
  %1683 = getelementptr inbounds float, float* %1666, i64 40
  %1684 = bitcast float* %1683 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1684, i32 0, i32 1, i32 1)
  %1685 = getelementptr inbounds float, float* %1663, i64 48
  %1686 = bitcast float* %1685 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1686, i32 0, i32 1, i32 1)
  %1687 = getelementptr inbounds float, float* %1666, i64 48
  %1688 = bitcast float* %1687 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1688, i32 0, i32 1, i32 1)
  %1689 = getelementptr inbounds float, float* %1663, i64 56
  %1690 = bitcast float* %1689 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1690, i32 0, i32 1, i32 1)
  %1691 = getelementptr inbounds float, float* %1666, i64 56
  %1692 = bitcast float* %1691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1692, i32 0, i32 1, i32 1)
  %1693 = getelementptr inbounds float, float* %1663, i64 64
  %1694 = bitcast float* %1693 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1694, i32 0, i32 1, i32 1)
  %1695 = getelementptr inbounds float, float* %1666, i64 64
  %1696 = bitcast float* %1695 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1696, i32 0, i32 1, i32 1)
  %1697 = getelementptr inbounds float, float* %1663, i64 72
  %1698 = bitcast float* %1697 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1698, i32 0, i32 1, i32 1)
  %1699 = getelementptr inbounds float, float* %1666, i64 72
  %1700 = bitcast float* %1699 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1700, i32 0, i32 1, i32 1)
  %1701 = getelementptr inbounds float, float* %1663, i64 80
  %1702 = bitcast float* %1701 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1702, i32 0, i32 1, i32 1)
  %1703 = getelementptr inbounds float, float* %1666, i64 80
  %1704 = bitcast float* %1703 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1704, i32 0, i32 1, i32 1)
  %1705 = getelementptr inbounds float, float* %1663, i64 88
  %1706 = bitcast float* %1705 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1706, i32 0, i32 1, i32 1)
  %1707 = getelementptr inbounds float, float* %1666, i64 88
  %1708 = bitcast float* %1707 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1708, i32 0, i32 1, i32 1)
  %1709 = bitcast float* %1663 to <8 x float>*
  %1710 = load <8 x float>, <8 x float>* %1709, align 1, !tbaa !12
  %1711 = add nuw nsw i64 %1662, 8
  %1712 = getelementptr inbounds float, float* %5, i64 %1711
  %1713 = bitcast float* %1712 to <8 x float>*
  %1714 = load <8 x float>, <8 x float>* %1713, align 1, !tbaa !12
  %1715 = add nuw nsw i64 %1662, 16
  %1716 = getelementptr inbounds float, float* %5, i64 %1715
  %1717 = bitcast float* %1716 to <8 x float>*
  %1718 = load <8 x float>, <8 x float>* %1717, align 1, !tbaa !12
  %1719 = add nuw nsw i64 %1662, 24
  %1720 = getelementptr inbounds float, float* %5, i64 %1719
  %1721 = bitcast float* %1720 to <8 x float>*
  %1722 = load <8 x float>, <8 x float>* %1721, align 1, !tbaa !12
  %1723 = add nuw nsw i64 %1662, 32
  %1724 = getelementptr inbounds float, float* %5, i64 %1723
  %1725 = bitcast float* %1724 to <8 x float>*
  %1726 = load <8 x float>, <8 x float>* %1725, align 1, !tbaa !12
  %1727 = add nuw nsw i64 %1662, 40
  %1728 = getelementptr inbounds float, float* %5, i64 %1727
  %1729 = bitcast float* %1728 to <8 x float>*
  %1730 = load <8 x float>, <8 x float>* %1729, align 1, !tbaa !12
  %1731 = add nuw nsw i64 %1662, 48
  %1732 = getelementptr inbounds float, float* %5, i64 %1731
  %1733 = bitcast float* %1732 to <8 x float>*
  %1734 = load <8 x float>, <8 x float>* %1733, align 1, !tbaa !12
  %1735 = add nuw nsw i64 %1662, 56
  %1736 = getelementptr inbounds float, float* %5, i64 %1735
  %1737 = bitcast float* %1736 to <8 x float>*
  %1738 = load <8 x float>, <8 x float>* %1737, align 1, !tbaa !12
  %1739 = add nuw nsw i64 %1662, 64
  %1740 = getelementptr inbounds float, float* %5, i64 %1739
  %1741 = bitcast float* %1740 to <8 x float>*
  %1742 = load <8 x float>, <8 x float>* %1741, align 1, !tbaa !12
  %1743 = add nuw nsw i64 %1662, 72
  %1744 = getelementptr inbounds float, float* %5, i64 %1743
  %1745 = bitcast float* %1744 to <8 x float>*
  %1746 = load <8 x float>, <8 x float>* %1745, align 1, !tbaa !12
  %1747 = add nuw nsw i64 %1662, 80
  %1748 = getelementptr inbounds float, float* %5, i64 %1747
  %1749 = bitcast float* %1748 to <8 x float>*
  %1750 = load <8 x float>, <8 x float>* %1749, align 1, !tbaa !12
  %1751 = add nsw i64 %1662, %1506
  %1752 = getelementptr inbounds float, float* %3, i64 %1751
  %1753 = bitcast float* %1752 to <8 x float>*
  %1754 = load <8 x float>, <8 x float>* %1753, align 1, !tbaa !12
  %1755 = add nsw i64 %1751, 8
  %1756 = getelementptr inbounds float, float* %3, i64 %1755
  %1757 = bitcast float* %1756 to <8 x float>*
  %1758 = load <8 x float>, <8 x float>* %1757, align 1, !tbaa !12
  %1759 = add nsw i64 %1751, 16
  %1760 = getelementptr inbounds float, float* %3, i64 %1759
  %1761 = bitcast float* %1760 to <8 x float>*
  %1762 = load <8 x float>, <8 x float>* %1761, align 1, !tbaa !12
  %1763 = add nsw i64 %1751, 24
  %1764 = getelementptr inbounds float, float* %3, i64 %1763
  %1765 = bitcast float* %1764 to <8 x float>*
  %1766 = load <8 x float>, <8 x float>* %1765, align 1, !tbaa !12
  %1767 = add nsw i64 %1751, 32
  %1768 = getelementptr inbounds float, float* %3, i64 %1767
  %1769 = bitcast float* %1768 to <8 x float>*
  %1770 = load <8 x float>, <8 x float>* %1769, align 1, !tbaa !12
  %1771 = add nsw i64 %1751, 40
  %1772 = getelementptr inbounds float, float* %3, i64 %1771
  %1773 = bitcast float* %1772 to <8 x float>*
  %1774 = load <8 x float>, <8 x float>* %1773, align 1, !tbaa !12
  %1775 = add nsw i64 %1751, 48
  %1776 = getelementptr inbounds float, float* %3, i64 %1775
  %1777 = bitcast float* %1776 to <8 x float>*
  %1778 = load <8 x float>, <8 x float>* %1777, align 1, !tbaa !12
  %1779 = add nsw i64 %1751, 56
  %1780 = getelementptr inbounds float, float* %3, i64 %1779
  %1781 = bitcast float* %1780 to <8 x float>*
  %1782 = load <8 x float>, <8 x float>* %1781, align 1, !tbaa !12
  %1783 = add nsw i64 %1751, 64
  %1784 = getelementptr inbounds float, float* %3, i64 %1783
  %1785 = bitcast float* %1784 to <8 x float>*
  %1786 = load <8 x float>, <8 x float>* %1785, align 1, !tbaa !12
  %1787 = add nsw i64 %1751, 72
  %1788 = getelementptr inbounds float, float* %3, i64 %1787
  %1789 = bitcast float* %1788 to <8 x float>*
  %1790 = load <8 x float>, <8 x float>* %1789, align 1, !tbaa !12
  %1791 = add nsw i64 %1751, 80
  %1792 = getelementptr inbounds float, float* %3, i64 %1791
  %1793 = bitcast float* %1792 to <8 x float>*
  %1794 = load <8 x float>, <8 x float>* %1793, align 1, !tbaa !12
  %1795 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1754, <8 x float> %75, <8 x float> %1710) #10
  %1796 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1758, <8 x float> %75, <8 x float> %1714) #10
  %1797 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1762, <8 x float> %75, <8 x float> %1718) #10
  %1798 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1766, <8 x float> %75, <8 x float> %1722) #10
  %1799 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1770, <8 x float> %75, <8 x float> %1726) #10
  %1800 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1774, <8 x float> %75, <8 x float> %1730) #10
  %1801 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1778, <8 x float> %75, <8 x float> %1734) #10
  %1802 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1782, <8 x float> %75, <8 x float> %1738) #10
  %1803 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1786, <8 x float> %75, <8 x float> %1742) #10
  %1804 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1790, <8 x float> %75, <8 x float> %1746) #10
  %1805 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1794, <8 x float> %75, <8 x float> %1750) #10
  store <8 x float> %1795, <8 x float>* %1709, align 1, !tbaa !12
  store <8 x float> %1796, <8 x float>* %1713, align 1, !tbaa !12
  store <8 x float> %1797, <8 x float>* %1717, align 1, !tbaa !12
  store <8 x float> %1798, <8 x float>* %1721, align 1, !tbaa !12
  store <8 x float> %1799, <8 x float>* %1725, align 1, !tbaa !12
  store <8 x float> %1800, <8 x float>* %1729, align 1, !tbaa !12
  store <8 x float> %1801, <8 x float>* %1733, align 1, !tbaa !12
  store <8 x float> %1802, <8 x float>* %1737, align 1, !tbaa !12
  store <8 x float> %1803, <8 x float>* %1741, align 1, !tbaa !12
  store <8 x float> %1804, <8 x float>* %1745, align 1, !tbaa !12
  store <8 x float> %1805, <8 x float>* %1749, align 1, !tbaa !12
  %1806 = add nuw nsw i64 %1662, 88
  %1807 = icmp ult i64 %1806, %1507
  br i1 %1807, label %1661, label %1655

1808:                                             ; preds = %1813, %20, %558, %1183, %1337, %1502, %1655
  %1809 = add nuw nsw i64 %21, 12
  %1810 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1811 = sext i32 %1810 to i64
  %1812 = icmp slt i64 %1809, %1811
  br i1 %1812, label %20, label %8

1813:                                             ; preds = %1656, %1813
  %1814 = phi i64 [ 0, %1656 ], [ %1958, %1813 ]
  %1815 = getelementptr inbounds float, float* %5, i64 %1814
  %1816 = getelementptr inbounds float, float* %1815, i64 8
  %1817 = bitcast float* %1816 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1817, i32 0, i32 1, i32 1)
  %1818 = getelementptr inbounds float, float* %3, i64 %1814
  %1819 = getelementptr inbounds float, float* %1818, i64 8
  %1820 = bitcast float* %1819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1820, i32 0, i32 1, i32 1)
  %1821 = getelementptr inbounds float, float* %1815, i64 16
  %1822 = bitcast float* %1821 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1822, i32 0, i32 1, i32 1)
  %1823 = getelementptr inbounds float, float* %1818, i64 16
  %1824 = bitcast float* %1823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1824, i32 0, i32 1, i32 1)
  %1825 = getelementptr inbounds float, float* %1815, i64 24
  %1826 = bitcast float* %1825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1826, i32 0, i32 1, i32 1)
  %1827 = getelementptr inbounds float, float* %1818, i64 24
  %1828 = bitcast float* %1827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1828, i32 0, i32 1, i32 1)
  %1829 = getelementptr inbounds float, float* %1815, i64 32
  %1830 = bitcast float* %1829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1830, i32 0, i32 1, i32 1)
  %1831 = getelementptr inbounds float, float* %1818, i64 32
  %1832 = bitcast float* %1831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1832, i32 0, i32 1, i32 1)
  %1833 = getelementptr inbounds float, float* %1815, i64 40
  %1834 = bitcast float* %1833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1834, i32 0, i32 1, i32 1)
  %1835 = getelementptr inbounds float, float* %1818, i64 40
  %1836 = bitcast float* %1835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1836, i32 0, i32 1, i32 1)
  %1837 = getelementptr inbounds float, float* %1815, i64 48
  %1838 = bitcast float* %1837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1838, i32 0, i32 1, i32 1)
  %1839 = getelementptr inbounds float, float* %1818, i64 48
  %1840 = bitcast float* %1839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1840, i32 0, i32 1, i32 1)
  %1841 = getelementptr inbounds float, float* %1815, i64 56
  %1842 = bitcast float* %1841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1842, i32 0, i32 1, i32 1)
  %1843 = getelementptr inbounds float, float* %1818, i64 56
  %1844 = bitcast float* %1843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1844, i32 0, i32 1, i32 1)
  %1845 = getelementptr inbounds float, float* %1815, i64 64
  %1846 = bitcast float* %1845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1846, i32 0, i32 1, i32 1)
  %1847 = getelementptr inbounds float, float* %1818, i64 64
  %1848 = bitcast float* %1847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1848, i32 0, i32 1, i32 1)
  %1849 = getelementptr inbounds float, float* %1815, i64 72
  %1850 = bitcast float* %1849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1850, i32 0, i32 1, i32 1)
  %1851 = getelementptr inbounds float, float* %1818, i64 72
  %1852 = bitcast float* %1851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1852, i32 0, i32 1, i32 1)
  %1853 = getelementptr inbounds float, float* %1815, i64 80
  %1854 = bitcast float* %1853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1854, i32 0, i32 1, i32 1)
  %1855 = getelementptr inbounds float, float* %1818, i64 80
  %1856 = bitcast float* %1855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1856, i32 0, i32 1, i32 1)
  %1857 = getelementptr inbounds float, float* %1815, i64 88
  %1858 = bitcast float* %1857 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1858, i32 0, i32 1, i32 1)
  %1859 = getelementptr inbounds float, float* %1818, i64 88
  %1860 = bitcast float* %1859 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1860, i32 0, i32 1, i32 1)
  %1861 = bitcast float* %1815 to <8 x float>*
  %1862 = load <8 x float>, <8 x float>* %1861, align 1, !tbaa !12
  %1863 = add nuw nsw i64 %1814, 8
  %1864 = getelementptr inbounds float, float* %5, i64 %1863
  %1865 = bitcast float* %1864 to <8 x float>*
  %1866 = load <8 x float>, <8 x float>* %1865, align 1, !tbaa !12
  %1867 = add nuw nsw i64 %1814, 16
  %1868 = getelementptr inbounds float, float* %5, i64 %1867
  %1869 = bitcast float* %1868 to <8 x float>*
  %1870 = load <8 x float>, <8 x float>* %1869, align 1, !tbaa !12
  %1871 = add nuw nsw i64 %1814, 24
  %1872 = getelementptr inbounds float, float* %5, i64 %1871
  %1873 = bitcast float* %1872 to <8 x float>*
  %1874 = load <8 x float>, <8 x float>* %1873, align 1, !tbaa !12
  %1875 = add nuw nsw i64 %1814, 32
  %1876 = getelementptr inbounds float, float* %5, i64 %1875
  %1877 = bitcast float* %1876 to <8 x float>*
  %1878 = load <8 x float>, <8 x float>* %1877, align 1, !tbaa !12
  %1879 = add nuw nsw i64 %1814, 40
  %1880 = getelementptr inbounds float, float* %5, i64 %1879
  %1881 = bitcast float* %1880 to <8 x float>*
  %1882 = load <8 x float>, <8 x float>* %1881, align 1, !tbaa !12
  %1883 = add nuw nsw i64 %1814, 48
  %1884 = getelementptr inbounds float, float* %5, i64 %1883
  %1885 = bitcast float* %1884 to <8 x float>*
  %1886 = load <8 x float>, <8 x float>* %1885, align 1, !tbaa !12
  %1887 = add nuw nsw i64 %1814, 56
  %1888 = getelementptr inbounds float, float* %5, i64 %1887
  %1889 = bitcast float* %1888 to <8 x float>*
  %1890 = load <8 x float>, <8 x float>* %1889, align 1, !tbaa !12
  %1891 = add nuw nsw i64 %1814, 64
  %1892 = getelementptr inbounds float, float* %5, i64 %1891
  %1893 = bitcast float* %1892 to <8 x float>*
  %1894 = load <8 x float>, <8 x float>* %1893, align 1, !tbaa !12
  %1895 = add nuw nsw i64 %1814, 72
  %1896 = getelementptr inbounds float, float* %5, i64 %1895
  %1897 = bitcast float* %1896 to <8 x float>*
  %1898 = load <8 x float>, <8 x float>* %1897, align 1, !tbaa !12
  %1899 = add nuw nsw i64 %1814, 80
  %1900 = getelementptr inbounds float, float* %5, i64 %1899
  %1901 = bitcast float* %1900 to <8 x float>*
  %1902 = load <8 x float>, <8 x float>* %1901, align 1, !tbaa !12
  %1903 = add nsw i64 %1814, %1659
  %1904 = getelementptr inbounds float, float* %3, i64 %1903
  %1905 = bitcast float* %1904 to <8 x float>*
  %1906 = load <8 x float>, <8 x float>* %1905, align 1, !tbaa !12
  %1907 = add nsw i64 %1903, 8
  %1908 = getelementptr inbounds float, float* %3, i64 %1907
  %1909 = bitcast float* %1908 to <8 x float>*
  %1910 = load <8 x float>, <8 x float>* %1909, align 1, !tbaa !12
  %1911 = add nsw i64 %1903, 16
  %1912 = getelementptr inbounds float, float* %3, i64 %1911
  %1913 = bitcast float* %1912 to <8 x float>*
  %1914 = load <8 x float>, <8 x float>* %1913, align 1, !tbaa !12
  %1915 = add nsw i64 %1903, 24
  %1916 = getelementptr inbounds float, float* %3, i64 %1915
  %1917 = bitcast float* %1916 to <8 x float>*
  %1918 = load <8 x float>, <8 x float>* %1917, align 1, !tbaa !12
  %1919 = add nsw i64 %1903, 32
  %1920 = getelementptr inbounds float, float* %3, i64 %1919
  %1921 = bitcast float* %1920 to <8 x float>*
  %1922 = load <8 x float>, <8 x float>* %1921, align 1, !tbaa !12
  %1923 = add nsw i64 %1903, 40
  %1924 = getelementptr inbounds float, float* %3, i64 %1923
  %1925 = bitcast float* %1924 to <8 x float>*
  %1926 = load <8 x float>, <8 x float>* %1925, align 1, !tbaa !12
  %1927 = add nsw i64 %1903, 48
  %1928 = getelementptr inbounds float, float* %3, i64 %1927
  %1929 = bitcast float* %1928 to <8 x float>*
  %1930 = load <8 x float>, <8 x float>* %1929, align 1, !tbaa !12
  %1931 = add nsw i64 %1903, 56
  %1932 = getelementptr inbounds float, float* %3, i64 %1931
  %1933 = bitcast float* %1932 to <8 x float>*
  %1934 = load <8 x float>, <8 x float>* %1933, align 1, !tbaa !12
  %1935 = add nsw i64 %1903, 64
  %1936 = getelementptr inbounds float, float* %3, i64 %1935
  %1937 = bitcast float* %1936 to <8 x float>*
  %1938 = load <8 x float>, <8 x float>* %1937, align 1, !tbaa !12
  %1939 = add nsw i64 %1903, 72
  %1940 = getelementptr inbounds float, float* %3, i64 %1939
  %1941 = bitcast float* %1940 to <8 x float>*
  %1942 = load <8 x float>, <8 x float>* %1941, align 1, !tbaa !12
  %1943 = add nsw i64 %1903, 80
  %1944 = getelementptr inbounds float, float* %3, i64 %1943
  %1945 = bitcast float* %1944 to <8 x float>*
  %1946 = load <8 x float>, <8 x float>* %1945, align 1, !tbaa !12
  %1947 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1906, <8 x float> %80, <8 x float> %1862) #10
  %1948 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1910, <8 x float> %80, <8 x float> %1866) #10
  %1949 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1914, <8 x float> %80, <8 x float> %1870) #10
  %1950 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1918, <8 x float> %80, <8 x float> %1874) #10
  %1951 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1922, <8 x float> %80, <8 x float> %1878) #10
  %1952 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1926, <8 x float> %80, <8 x float> %1882) #10
  %1953 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1930, <8 x float> %80, <8 x float> %1886) #10
  %1954 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1934, <8 x float> %80, <8 x float> %1890) #10
  %1955 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1938, <8 x float> %80, <8 x float> %1894) #10
  %1956 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1942, <8 x float> %80, <8 x float> %1898) #10
  %1957 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1946, <8 x float> %80, <8 x float> %1902) #10
  store <8 x float> %1947, <8 x float>* %1861, align 1, !tbaa !12
  store <8 x float> %1948, <8 x float>* %1865, align 1, !tbaa !12
  store <8 x float> %1949, <8 x float>* %1869, align 1, !tbaa !12
  store <8 x float> %1950, <8 x float>* %1873, align 1, !tbaa !12
  store <8 x float> %1951, <8 x float>* %1877, align 1, !tbaa !12
  store <8 x float> %1952, <8 x float>* %1881, align 1, !tbaa !12
  store <8 x float> %1953, <8 x float>* %1885, align 1, !tbaa !12
  store <8 x float> %1954, <8 x float>* %1889, align 1, !tbaa !12
  store <8 x float> %1955, <8 x float>* %1893, align 1, !tbaa !12
  store <8 x float> %1956, <8 x float>* %1897, align 1, !tbaa !12
  store <8 x float> %1957, <8 x float>* %1901, align 1, !tbaa !12
  %1958 = add nuw nsw i64 %1814, 88
  %1959 = icmp ult i64 %1958, %1660
  br i1 %1959, label %1813, label %1808
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 276
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui11_uk12.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
