; ModuleID = 'codes/matvec_ui13_uk9.cpp'
source_filename = "codes/matvec_ui13_uk9.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui13_uk9.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 104
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 72
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1548, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1548
  %21 = phi i64 [ %1549, %1548 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %1548

68:                                               ; preds = %20
  %69 = zext i32 %66 to i64
  %70 = trunc i64 %21 to i32
  %71 = mul nsw i32 %66, %70
  br label %78

72:                                               ; preds = %78
  br i1 %67, label %73, label %444

73:                                               ; preds = %72
  %74 = trunc i64 %26 to i32
  %75 = mul nsw i32 %66, %74
  %76 = sext i32 %75 to i64
  %77 = zext i32 %66 to i64
  br label %271

78:                                               ; preds = %68, %78
  %79 = phi i64 [ 0, %68 ], [ %263, %78 ]
  %80 = getelementptr inbounds float, float* %5, i64 %79
  %81 = getelementptr inbounds float, float* %80, i64 8
  %82 = bitcast float* %81 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %82, i32 0, i32 1, i32 1)
  %83 = getelementptr inbounds float, float* %3, i64 %79
  %84 = getelementptr inbounds float, float* %83, i64 8
  %85 = bitcast float* %84 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %85, i32 0, i32 1, i32 1)
  %86 = getelementptr inbounds float, float* %80, i64 16
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %83, i64 16
  %89 = bitcast float* %88 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %89, i32 0, i32 1, i32 1)
  %90 = getelementptr inbounds float, float* %80, i64 24
  %91 = bitcast float* %90 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %91, i32 0, i32 1, i32 1)
  %92 = getelementptr inbounds float, float* %83, i64 24
  %93 = bitcast float* %92 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %93, i32 0, i32 1, i32 1)
  %94 = getelementptr inbounds float, float* %80, i64 32
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %83, i64 32
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %80, i64 40
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %83, i64 40
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %80, i64 48
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %83, i64 48
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %80, i64 56
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %83, i64 56
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %80, i64 64
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %83, i64 64
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %80, i64 72
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %83, i64 72
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %80, i64 80
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %83, i64 80
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %80, i64 88
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %83, i64 88
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %80, i64 96
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %83, i64 96
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %80, i64 104
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %83, i64 104
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = bitcast float* %80 to <8 x float>*
  %135 = load <8 x float>, <8 x float>* %134, align 1, !tbaa !12
  %136 = add nuw nsw i64 %79, 8
  %137 = getelementptr inbounds float, float* %5, i64 %136
  %138 = bitcast float* %137 to <8 x float>*
  %139 = load <8 x float>, <8 x float>* %138, align 1, !tbaa !12
  %140 = add nuw nsw i64 %79, 16
  %141 = getelementptr inbounds float, float* %5, i64 %140
  %142 = bitcast float* %141 to <8 x float>*
  %143 = load <8 x float>, <8 x float>* %142, align 1, !tbaa !12
  %144 = add nuw nsw i64 %79, 24
  %145 = getelementptr inbounds float, float* %5, i64 %144
  %146 = bitcast float* %145 to <8 x float>*
  %147 = load <8 x float>, <8 x float>* %146, align 1, !tbaa !12
  %148 = add nuw nsw i64 %79, 32
  %149 = getelementptr inbounds float, float* %5, i64 %148
  %150 = bitcast float* %149 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = add nuw nsw i64 %79, 40
  %153 = getelementptr inbounds float, float* %5, i64 %152
  %154 = bitcast float* %153 to <8 x float>*
  %155 = load <8 x float>, <8 x float>* %154, align 1, !tbaa !12
  %156 = add nuw nsw i64 %79, 48
  %157 = getelementptr inbounds float, float* %5, i64 %156
  %158 = bitcast float* %157 to <8 x float>*
  %159 = load <8 x float>, <8 x float>* %158, align 1, !tbaa !12
  %160 = add nuw nsw i64 %79, 56
  %161 = getelementptr inbounds float, float* %5, i64 %160
  %162 = bitcast float* %161 to <8 x float>*
  %163 = load <8 x float>, <8 x float>* %162, align 1, !tbaa !12
  %164 = add nuw nsw i64 %79, 64
  %165 = getelementptr inbounds float, float* %5, i64 %164
  %166 = bitcast float* %165 to <8 x float>*
  %167 = load <8 x float>, <8 x float>* %166, align 1, !tbaa !12
  %168 = add nuw nsw i64 %79, 72
  %169 = getelementptr inbounds float, float* %5, i64 %168
  %170 = bitcast float* %169 to <8 x float>*
  %171 = load <8 x float>, <8 x float>* %170, align 1, !tbaa !12
  %172 = add nuw nsw i64 %79, 80
  %173 = getelementptr inbounds float, float* %5, i64 %172
  %174 = bitcast float* %173 to <8 x float>*
  %175 = load <8 x float>, <8 x float>* %174, align 1, !tbaa !12
  %176 = add nuw nsw i64 %79, 88
  %177 = getelementptr inbounds float, float* %5, i64 %176
  %178 = bitcast float* %177 to <8 x float>*
  %179 = load <8 x float>, <8 x float>* %178, align 1, !tbaa !12
  %180 = add nuw nsw i64 %79, 96
  %181 = getelementptr inbounds float, float* %5, i64 %180
  %182 = bitcast float* %181 to <8 x float>*
  %183 = load <8 x float>, <8 x float>* %182, align 1, !tbaa !12
  %184 = trunc i64 %79 to i32
  %185 = add nsw i32 %71, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds float, float* %3, i64 %186
  %188 = bitcast float* %187 to <8 x float>*
  %189 = load <8 x float>, <8 x float>* %188, align 1, !tbaa !12
  %190 = add nsw i32 %185, 8
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds float, float* %3, i64 %191
  %193 = bitcast float* %192 to <8 x float>*
  %194 = load <8 x float>, <8 x float>* %193, align 1, !tbaa !12
  %195 = add nsw i32 %185, 16
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds float, float* %3, i64 %196
  %198 = bitcast float* %197 to <8 x float>*
  %199 = load <8 x float>, <8 x float>* %198, align 1, !tbaa !12
  %200 = add nsw i32 %185, 24
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds float, float* %3, i64 %201
  %203 = bitcast float* %202 to <8 x float>*
  %204 = load <8 x float>, <8 x float>* %203, align 1, !tbaa !12
  %205 = add nsw i32 %185, 32
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds float, float* %3, i64 %206
  %208 = bitcast float* %207 to <8 x float>*
  %209 = load <8 x float>, <8 x float>* %208, align 1, !tbaa !12
  %210 = add nsw i32 %185, 40
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds float, float* %3, i64 %211
  %213 = bitcast float* %212 to <8 x float>*
  %214 = load <8 x float>, <8 x float>* %213, align 1, !tbaa !12
  %215 = add nsw i32 %185, 48
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds float, float* %3, i64 %216
  %218 = bitcast float* %217 to <8 x float>*
  %219 = load <8 x float>, <8 x float>* %218, align 1, !tbaa !12
  %220 = add nsw i32 %185, 56
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds float, float* %3, i64 %221
  %223 = bitcast float* %222 to <8 x float>*
  %224 = load <8 x float>, <8 x float>* %223, align 1, !tbaa !12
  %225 = add nsw i32 %185, 64
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds float, float* %3, i64 %226
  %228 = bitcast float* %227 to <8 x float>*
  %229 = load <8 x float>, <8 x float>* %228, align 1, !tbaa !12
  %230 = add nsw i32 %185, 72
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds float, float* %3, i64 %231
  %233 = bitcast float* %232 to <8 x float>*
  %234 = load <8 x float>, <8 x float>* %233, align 1, !tbaa !12
  %235 = add nsw i32 %185, 80
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds float, float* %3, i64 %236
  %238 = bitcast float* %237 to <8 x float>*
  %239 = load <8 x float>, <8 x float>* %238, align 1, !tbaa !12
  %240 = add nsw i32 %185, 88
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds float, float* %3, i64 %241
  %243 = bitcast float* %242 to <8 x float>*
  %244 = load <8 x float>, <8 x float>* %243, align 1, !tbaa !12
  %245 = add nsw i32 %185, 96
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds float, float* %3, i64 %246
  %248 = bitcast float* %247 to <8 x float>*
  %249 = load <8 x float>, <8 x float>* %248, align 1, !tbaa !12
  %250 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %189, <8 x float> %25, <8 x float> %135) #10
  %251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %194, <8 x float> %25, <8 x float> %139) #10
  %252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %199, <8 x float> %25, <8 x float> %143) #10
  %253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %204, <8 x float> %25, <8 x float> %147) #10
  %254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %209, <8 x float> %25, <8 x float> %151) #10
  %255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %214, <8 x float> %25, <8 x float> %155) #10
  %256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %219, <8 x float> %25, <8 x float> %159) #10
  %257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %224, <8 x float> %25, <8 x float> %163) #10
  %258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %229, <8 x float> %25, <8 x float> %167) #10
  %259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %234, <8 x float> %25, <8 x float> %171) #10
  %260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %239, <8 x float> %25, <8 x float> %175) #10
  %261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %244, <8 x float> %25, <8 x float> %179) #10
  %262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %249, <8 x float> %25, <8 x float> %183) #10
  store <8 x float> %250, <8 x float>* %134, align 1, !tbaa !12
  store <8 x float> %251, <8 x float>* %138, align 1, !tbaa !12
  store <8 x float> %252, <8 x float>* %142, align 1, !tbaa !12
  store <8 x float> %253, <8 x float>* %146, align 1, !tbaa !12
  store <8 x float> %254, <8 x float>* %150, align 1, !tbaa !12
  store <8 x float> %255, <8 x float>* %154, align 1, !tbaa !12
  store <8 x float> %256, <8 x float>* %158, align 1, !tbaa !12
  store <8 x float> %257, <8 x float>* %162, align 1, !tbaa !12
  store <8 x float> %258, <8 x float>* %166, align 1, !tbaa !12
  store <8 x float> %259, <8 x float>* %170, align 1, !tbaa !12
  store <8 x float> %260, <8 x float>* %174, align 1, !tbaa !12
  store <8 x float> %261, <8 x float>* %178, align 1, !tbaa !12
  store <8 x float> %262, <8 x float>* %182, align 1, !tbaa !12
  %263 = add nuw nsw i64 %79, 104
  %264 = icmp ult i64 %263, %69
  br i1 %264, label %78, label %72

265:                                              ; preds = %271
  br i1 %67, label %266, label %444

266:                                              ; preds = %265
  %267 = trunc i64 %31 to i32
  %268 = mul nsw i32 %66, %267
  %269 = sext i32 %268 to i64
  %270 = zext i32 %66 to i64
  br label %451

271:                                              ; preds = %73, %271
  %272 = phi i64 [ 0, %73 ], [ %442, %271 ]
  %273 = getelementptr inbounds float, float* %5, i64 %272
  %274 = getelementptr inbounds float, float* %273, i64 8
  %275 = bitcast float* %274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %275, i32 0, i32 1, i32 1)
  %276 = getelementptr inbounds float, float* %3, i64 %272
  %277 = getelementptr inbounds float, float* %276, i64 8
  %278 = bitcast float* %277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %278, i32 0, i32 1, i32 1)
  %279 = getelementptr inbounds float, float* %273, i64 16
  %280 = bitcast float* %279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %280, i32 0, i32 1, i32 1)
  %281 = getelementptr inbounds float, float* %276, i64 16
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %273, i64 24
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %276, i64 24
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %273, i64 32
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %276, i64 32
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %273, i64 40
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %276, i64 40
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %273, i64 48
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %276, i64 48
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %273, i64 56
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = getelementptr inbounds float, float* %276, i64 56
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = getelementptr inbounds float, float* %273, i64 64
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %276, i64 64
  %306 = bitcast float* %305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %306, i32 0, i32 1, i32 1)
  %307 = getelementptr inbounds float, float* %273, i64 72
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %276, i64 72
  %310 = bitcast float* %309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %310, i32 0, i32 1, i32 1)
  %311 = getelementptr inbounds float, float* %273, i64 80
  %312 = bitcast float* %311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %312, i32 0, i32 1, i32 1)
  %313 = getelementptr inbounds float, float* %276, i64 80
  %314 = bitcast float* %313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %314, i32 0, i32 1, i32 1)
  %315 = getelementptr inbounds float, float* %273, i64 88
  %316 = bitcast float* %315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %316, i32 0, i32 1, i32 1)
  %317 = getelementptr inbounds float, float* %276, i64 88
  %318 = bitcast float* %317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %318, i32 0, i32 1, i32 1)
  %319 = getelementptr inbounds float, float* %273, i64 96
  %320 = bitcast float* %319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %320, i32 0, i32 1, i32 1)
  %321 = getelementptr inbounds float, float* %276, i64 96
  %322 = bitcast float* %321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %322, i32 0, i32 1, i32 1)
  %323 = getelementptr inbounds float, float* %273, i64 104
  %324 = bitcast float* %323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %324, i32 0, i32 1, i32 1)
  %325 = getelementptr inbounds float, float* %276, i64 104
  %326 = bitcast float* %325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %326, i32 0, i32 1, i32 1)
  %327 = bitcast float* %273 to <8 x float>*
  %328 = load <8 x float>, <8 x float>* %327, align 1, !tbaa !12
  %329 = add nuw nsw i64 %272, 8
  %330 = getelementptr inbounds float, float* %5, i64 %329
  %331 = bitcast float* %330 to <8 x float>*
  %332 = load <8 x float>, <8 x float>* %331, align 1, !tbaa !12
  %333 = add nuw nsw i64 %272, 16
  %334 = getelementptr inbounds float, float* %5, i64 %333
  %335 = bitcast float* %334 to <8 x float>*
  %336 = load <8 x float>, <8 x float>* %335, align 1, !tbaa !12
  %337 = add nuw nsw i64 %272, 24
  %338 = getelementptr inbounds float, float* %5, i64 %337
  %339 = bitcast float* %338 to <8 x float>*
  %340 = load <8 x float>, <8 x float>* %339, align 1, !tbaa !12
  %341 = add nuw nsw i64 %272, 32
  %342 = getelementptr inbounds float, float* %5, i64 %341
  %343 = bitcast float* %342 to <8 x float>*
  %344 = load <8 x float>, <8 x float>* %343, align 1, !tbaa !12
  %345 = add nuw nsw i64 %272, 40
  %346 = getelementptr inbounds float, float* %5, i64 %345
  %347 = bitcast float* %346 to <8 x float>*
  %348 = load <8 x float>, <8 x float>* %347, align 1, !tbaa !12
  %349 = add nuw nsw i64 %272, 48
  %350 = getelementptr inbounds float, float* %5, i64 %349
  %351 = bitcast float* %350 to <8 x float>*
  %352 = load <8 x float>, <8 x float>* %351, align 1, !tbaa !12
  %353 = add nuw nsw i64 %272, 56
  %354 = getelementptr inbounds float, float* %5, i64 %353
  %355 = bitcast float* %354 to <8 x float>*
  %356 = load <8 x float>, <8 x float>* %355, align 1, !tbaa !12
  %357 = add nuw nsw i64 %272, 64
  %358 = getelementptr inbounds float, float* %5, i64 %357
  %359 = bitcast float* %358 to <8 x float>*
  %360 = load <8 x float>, <8 x float>* %359, align 1, !tbaa !12
  %361 = add nuw nsw i64 %272, 72
  %362 = getelementptr inbounds float, float* %5, i64 %361
  %363 = bitcast float* %362 to <8 x float>*
  %364 = load <8 x float>, <8 x float>* %363, align 1, !tbaa !12
  %365 = add nuw nsw i64 %272, 80
  %366 = getelementptr inbounds float, float* %5, i64 %365
  %367 = bitcast float* %366 to <8 x float>*
  %368 = load <8 x float>, <8 x float>* %367, align 1, !tbaa !12
  %369 = add nuw nsw i64 %272, 88
  %370 = getelementptr inbounds float, float* %5, i64 %369
  %371 = bitcast float* %370 to <8 x float>*
  %372 = load <8 x float>, <8 x float>* %371, align 1, !tbaa !12
  %373 = add nuw nsw i64 %272, 96
  %374 = getelementptr inbounds float, float* %5, i64 %373
  %375 = bitcast float* %374 to <8 x float>*
  %376 = load <8 x float>, <8 x float>* %375, align 1, !tbaa !12
  %377 = add nsw i64 %272, %76
  %378 = getelementptr inbounds float, float* %3, i64 %377
  %379 = bitcast float* %378 to <8 x float>*
  %380 = load <8 x float>, <8 x float>* %379, align 1, !tbaa !12
  %381 = add nsw i64 %377, 8
  %382 = getelementptr inbounds float, float* %3, i64 %381
  %383 = bitcast float* %382 to <8 x float>*
  %384 = load <8 x float>, <8 x float>* %383, align 1, !tbaa !12
  %385 = add nsw i64 %377, 16
  %386 = getelementptr inbounds float, float* %3, i64 %385
  %387 = bitcast float* %386 to <8 x float>*
  %388 = load <8 x float>, <8 x float>* %387, align 1, !tbaa !12
  %389 = add nsw i64 %377, 24
  %390 = getelementptr inbounds float, float* %3, i64 %389
  %391 = bitcast float* %390 to <8 x float>*
  %392 = load <8 x float>, <8 x float>* %391, align 1, !tbaa !12
  %393 = add nsw i64 %377, 32
  %394 = getelementptr inbounds float, float* %3, i64 %393
  %395 = bitcast float* %394 to <8 x float>*
  %396 = load <8 x float>, <8 x float>* %395, align 1, !tbaa !12
  %397 = add nsw i64 %377, 40
  %398 = getelementptr inbounds float, float* %3, i64 %397
  %399 = bitcast float* %398 to <8 x float>*
  %400 = load <8 x float>, <8 x float>* %399, align 1, !tbaa !12
  %401 = add nsw i64 %377, 48
  %402 = getelementptr inbounds float, float* %3, i64 %401
  %403 = bitcast float* %402 to <8 x float>*
  %404 = load <8 x float>, <8 x float>* %403, align 1, !tbaa !12
  %405 = add nsw i64 %377, 56
  %406 = getelementptr inbounds float, float* %3, i64 %405
  %407 = bitcast float* %406 to <8 x float>*
  %408 = load <8 x float>, <8 x float>* %407, align 1, !tbaa !12
  %409 = add nsw i64 %377, 64
  %410 = getelementptr inbounds float, float* %3, i64 %409
  %411 = bitcast float* %410 to <8 x float>*
  %412 = load <8 x float>, <8 x float>* %411, align 1, !tbaa !12
  %413 = add nsw i64 %377, 72
  %414 = getelementptr inbounds float, float* %3, i64 %413
  %415 = bitcast float* %414 to <8 x float>*
  %416 = load <8 x float>, <8 x float>* %415, align 1, !tbaa !12
  %417 = add nsw i64 %377, 80
  %418 = getelementptr inbounds float, float* %3, i64 %417
  %419 = bitcast float* %418 to <8 x float>*
  %420 = load <8 x float>, <8 x float>* %419, align 1, !tbaa !12
  %421 = add nsw i64 %377, 88
  %422 = getelementptr inbounds float, float* %3, i64 %421
  %423 = bitcast float* %422 to <8 x float>*
  %424 = load <8 x float>, <8 x float>* %423, align 1, !tbaa !12
  %425 = add nsw i64 %377, 96
  %426 = getelementptr inbounds float, float* %3, i64 %425
  %427 = bitcast float* %426 to <8 x float>*
  %428 = load <8 x float>, <8 x float>* %427, align 1, !tbaa !12
  %429 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %380, <8 x float> %30, <8 x float> %328) #10
  %430 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %384, <8 x float> %30, <8 x float> %332) #10
  %431 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %388, <8 x float> %30, <8 x float> %336) #10
  %432 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %392, <8 x float> %30, <8 x float> %340) #10
  %433 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %396, <8 x float> %30, <8 x float> %344) #10
  %434 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %400, <8 x float> %30, <8 x float> %348) #10
  %435 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %404, <8 x float> %30, <8 x float> %352) #10
  %436 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %408, <8 x float> %30, <8 x float> %356) #10
  %437 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %412, <8 x float> %30, <8 x float> %360) #10
  %438 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %416, <8 x float> %30, <8 x float> %364) #10
  %439 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %420, <8 x float> %30, <8 x float> %368) #10
  %440 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %424, <8 x float> %30, <8 x float> %372) #10
  %441 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %428, <8 x float> %30, <8 x float> %376) #10
  store <8 x float> %429, <8 x float>* %327, align 1, !tbaa !12
  store <8 x float> %430, <8 x float>* %331, align 1, !tbaa !12
  store <8 x float> %431, <8 x float>* %335, align 1, !tbaa !12
  store <8 x float> %432, <8 x float>* %339, align 1, !tbaa !12
  store <8 x float> %433, <8 x float>* %343, align 1, !tbaa !12
  store <8 x float> %434, <8 x float>* %347, align 1, !tbaa !12
  store <8 x float> %435, <8 x float>* %351, align 1, !tbaa !12
  store <8 x float> %436, <8 x float>* %355, align 1, !tbaa !12
  store <8 x float> %437, <8 x float>* %359, align 1, !tbaa !12
  store <8 x float> %438, <8 x float>* %363, align 1, !tbaa !12
  store <8 x float> %439, <8 x float>* %367, align 1, !tbaa !12
  store <8 x float> %440, <8 x float>* %371, align 1, !tbaa !12
  store <8 x float> %441, <8 x float>* %375, align 1, !tbaa !12
  %442 = add nuw nsw i64 %272, 104
  %443 = icmp ult i64 %442, %77
  br i1 %443, label %271, label %265

444:                                              ; preds = %451, %72, %265
  %445 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %446 = icmp sgt i32 %445, 0
  br i1 %446, label %447, label %1548

447:                                              ; preds = %444
  %448 = zext i32 %445 to i64
  %449 = trunc i64 %36 to i32
  %450 = mul nsw i32 %445, %449
  br label %630

451:                                              ; preds = %266, %451
  %452 = phi i64 [ 0, %266 ], [ %622, %451 ]
  %453 = getelementptr inbounds float, float* %5, i64 %452
  %454 = getelementptr inbounds float, float* %453, i64 8
  %455 = bitcast float* %454 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %455, i32 0, i32 1, i32 1)
  %456 = getelementptr inbounds float, float* %3, i64 %452
  %457 = getelementptr inbounds float, float* %456, i64 8
  %458 = bitcast float* %457 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %458, i32 0, i32 1, i32 1)
  %459 = getelementptr inbounds float, float* %453, i64 16
  %460 = bitcast float* %459 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %460, i32 0, i32 1, i32 1)
  %461 = getelementptr inbounds float, float* %456, i64 16
  %462 = bitcast float* %461 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %462, i32 0, i32 1, i32 1)
  %463 = getelementptr inbounds float, float* %453, i64 24
  %464 = bitcast float* %463 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %464, i32 0, i32 1, i32 1)
  %465 = getelementptr inbounds float, float* %456, i64 24
  %466 = bitcast float* %465 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %466, i32 0, i32 1, i32 1)
  %467 = getelementptr inbounds float, float* %453, i64 32
  %468 = bitcast float* %467 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %468, i32 0, i32 1, i32 1)
  %469 = getelementptr inbounds float, float* %456, i64 32
  %470 = bitcast float* %469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %470, i32 0, i32 1, i32 1)
  %471 = getelementptr inbounds float, float* %453, i64 40
  %472 = bitcast float* %471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %472, i32 0, i32 1, i32 1)
  %473 = getelementptr inbounds float, float* %456, i64 40
  %474 = bitcast float* %473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %474, i32 0, i32 1, i32 1)
  %475 = getelementptr inbounds float, float* %453, i64 48
  %476 = bitcast float* %475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %476, i32 0, i32 1, i32 1)
  %477 = getelementptr inbounds float, float* %456, i64 48
  %478 = bitcast float* %477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %478, i32 0, i32 1, i32 1)
  %479 = getelementptr inbounds float, float* %453, i64 56
  %480 = bitcast float* %479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %480, i32 0, i32 1, i32 1)
  %481 = getelementptr inbounds float, float* %456, i64 56
  %482 = bitcast float* %481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %482, i32 0, i32 1, i32 1)
  %483 = getelementptr inbounds float, float* %453, i64 64
  %484 = bitcast float* %483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %484, i32 0, i32 1, i32 1)
  %485 = getelementptr inbounds float, float* %456, i64 64
  %486 = bitcast float* %485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %486, i32 0, i32 1, i32 1)
  %487 = getelementptr inbounds float, float* %453, i64 72
  %488 = bitcast float* %487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %488, i32 0, i32 1, i32 1)
  %489 = getelementptr inbounds float, float* %456, i64 72
  %490 = bitcast float* %489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %490, i32 0, i32 1, i32 1)
  %491 = getelementptr inbounds float, float* %453, i64 80
  %492 = bitcast float* %491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %492, i32 0, i32 1, i32 1)
  %493 = getelementptr inbounds float, float* %456, i64 80
  %494 = bitcast float* %493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %494, i32 0, i32 1, i32 1)
  %495 = getelementptr inbounds float, float* %453, i64 88
  %496 = bitcast float* %495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %496, i32 0, i32 1, i32 1)
  %497 = getelementptr inbounds float, float* %456, i64 88
  %498 = bitcast float* %497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %498, i32 0, i32 1, i32 1)
  %499 = getelementptr inbounds float, float* %453, i64 96
  %500 = bitcast float* %499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %500, i32 0, i32 1, i32 1)
  %501 = getelementptr inbounds float, float* %456, i64 96
  %502 = bitcast float* %501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %502, i32 0, i32 1, i32 1)
  %503 = getelementptr inbounds float, float* %453, i64 104
  %504 = bitcast float* %503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %504, i32 0, i32 1, i32 1)
  %505 = getelementptr inbounds float, float* %456, i64 104
  %506 = bitcast float* %505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %506, i32 0, i32 1, i32 1)
  %507 = bitcast float* %453 to <8 x float>*
  %508 = load <8 x float>, <8 x float>* %507, align 1, !tbaa !12
  %509 = add nuw nsw i64 %452, 8
  %510 = getelementptr inbounds float, float* %5, i64 %509
  %511 = bitcast float* %510 to <8 x float>*
  %512 = load <8 x float>, <8 x float>* %511, align 1, !tbaa !12
  %513 = add nuw nsw i64 %452, 16
  %514 = getelementptr inbounds float, float* %5, i64 %513
  %515 = bitcast float* %514 to <8 x float>*
  %516 = load <8 x float>, <8 x float>* %515, align 1, !tbaa !12
  %517 = add nuw nsw i64 %452, 24
  %518 = getelementptr inbounds float, float* %5, i64 %517
  %519 = bitcast float* %518 to <8 x float>*
  %520 = load <8 x float>, <8 x float>* %519, align 1, !tbaa !12
  %521 = add nuw nsw i64 %452, 32
  %522 = getelementptr inbounds float, float* %5, i64 %521
  %523 = bitcast float* %522 to <8 x float>*
  %524 = load <8 x float>, <8 x float>* %523, align 1, !tbaa !12
  %525 = add nuw nsw i64 %452, 40
  %526 = getelementptr inbounds float, float* %5, i64 %525
  %527 = bitcast float* %526 to <8 x float>*
  %528 = load <8 x float>, <8 x float>* %527, align 1, !tbaa !12
  %529 = add nuw nsw i64 %452, 48
  %530 = getelementptr inbounds float, float* %5, i64 %529
  %531 = bitcast float* %530 to <8 x float>*
  %532 = load <8 x float>, <8 x float>* %531, align 1, !tbaa !12
  %533 = add nuw nsw i64 %452, 56
  %534 = getelementptr inbounds float, float* %5, i64 %533
  %535 = bitcast float* %534 to <8 x float>*
  %536 = load <8 x float>, <8 x float>* %535, align 1, !tbaa !12
  %537 = add nuw nsw i64 %452, 64
  %538 = getelementptr inbounds float, float* %5, i64 %537
  %539 = bitcast float* %538 to <8 x float>*
  %540 = load <8 x float>, <8 x float>* %539, align 1, !tbaa !12
  %541 = add nuw nsw i64 %452, 72
  %542 = getelementptr inbounds float, float* %5, i64 %541
  %543 = bitcast float* %542 to <8 x float>*
  %544 = load <8 x float>, <8 x float>* %543, align 1, !tbaa !12
  %545 = add nuw nsw i64 %452, 80
  %546 = getelementptr inbounds float, float* %5, i64 %545
  %547 = bitcast float* %546 to <8 x float>*
  %548 = load <8 x float>, <8 x float>* %547, align 1, !tbaa !12
  %549 = add nuw nsw i64 %452, 88
  %550 = getelementptr inbounds float, float* %5, i64 %549
  %551 = bitcast float* %550 to <8 x float>*
  %552 = load <8 x float>, <8 x float>* %551, align 1, !tbaa !12
  %553 = add nuw nsw i64 %452, 96
  %554 = getelementptr inbounds float, float* %5, i64 %553
  %555 = bitcast float* %554 to <8 x float>*
  %556 = load <8 x float>, <8 x float>* %555, align 1, !tbaa !12
  %557 = add nsw i64 %452, %269
  %558 = getelementptr inbounds float, float* %3, i64 %557
  %559 = bitcast float* %558 to <8 x float>*
  %560 = load <8 x float>, <8 x float>* %559, align 1, !tbaa !12
  %561 = add nsw i64 %557, 8
  %562 = getelementptr inbounds float, float* %3, i64 %561
  %563 = bitcast float* %562 to <8 x float>*
  %564 = load <8 x float>, <8 x float>* %563, align 1, !tbaa !12
  %565 = add nsw i64 %557, 16
  %566 = getelementptr inbounds float, float* %3, i64 %565
  %567 = bitcast float* %566 to <8 x float>*
  %568 = load <8 x float>, <8 x float>* %567, align 1, !tbaa !12
  %569 = add nsw i64 %557, 24
  %570 = getelementptr inbounds float, float* %3, i64 %569
  %571 = bitcast float* %570 to <8 x float>*
  %572 = load <8 x float>, <8 x float>* %571, align 1, !tbaa !12
  %573 = add nsw i64 %557, 32
  %574 = getelementptr inbounds float, float* %3, i64 %573
  %575 = bitcast float* %574 to <8 x float>*
  %576 = load <8 x float>, <8 x float>* %575, align 1, !tbaa !12
  %577 = add nsw i64 %557, 40
  %578 = getelementptr inbounds float, float* %3, i64 %577
  %579 = bitcast float* %578 to <8 x float>*
  %580 = load <8 x float>, <8 x float>* %579, align 1, !tbaa !12
  %581 = add nsw i64 %557, 48
  %582 = getelementptr inbounds float, float* %3, i64 %581
  %583 = bitcast float* %582 to <8 x float>*
  %584 = load <8 x float>, <8 x float>* %583, align 1, !tbaa !12
  %585 = add nsw i64 %557, 56
  %586 = getelementptr inbounds float, float* %3, i64 %585
  %587 = bitcast float* %586 to <8 x float>*
  %588 = load <8 x float>, <8 x float>* %587, align 1, !tbaa !12
  %589 = add nsw i64 %557, 64
  %590 = getelementptr inbounds float, float* %3, i64 %589
  %591 = bitcast float* %590 to <8 x float>*
  %592 = load <8 x float>, <8 x float>* %591, align 1, !tbaa !12
  %593 = add nsw i64 %557, 72
  %594 = getelementptr inbounds float, float* %3, i64 %593
  %595 = bitcast float* %594 to <8 x float>*
  %596 = load <8 x float>, <8 x float>* %595, align 1, !tbaa !12
  %597 = add nsw i64 %557, 80
  %598 = getelementptr inbounds float, float* %3, i64 %597
  %599 = bitcast float* %598 to <8 x float>*
  %600 = load <8 x float>, <8 x float>* %599, align 1, !tbaa !12
  %601 = add nsw i64 %557, 88
  %602 = getelementptr inbounds float, float* %3, i64 %601
  %603 = bitcast float* %602 to <8 x float>*
  %604 = load <8 x float>, <8 x float>* %603, align 1, !tbaa !12
  %605 = add nsw i64 %557, 96
  %606 = getelementptr inbounds float, float* %3, i64 %605
  %607 = bitcast float* %606 to <8 x float>*
  %608 = load <8 x float>, <8 x float>* %607, align 1, !tbaa !12
  %609 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %560, <8 x float> %35, <8 x float> %508) #10
  %610 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %564, <8 x float> %35, <8 x float> %512) #10
  %611 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %568, <8 x float> %35, <8 x float> %516) #10
  %612 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %572, <8 x float> %35, <8 x float> %520) #10
  %613 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %576, <8 x float> %35, <8 x float> %524) #10
  %614 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %580, <8 x float> %35, <8 x float> %528) #10
  %615 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %584, <8 x float> %35, <8 x float> %532) #10
  %616 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %588, <8 x float> %35, <8 x float> %536) #10
  %617 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %592, <8 x float> %35, <8 x float> %540) #10
  %618 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %596, <8 x float> %35, <8 x float> %544) #10
  %619 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %600, <8 x float> %35, <8 x float> %548) #10
  %620 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %604, <8 x float> %35, <8 x float> %552) #10
  %621 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %608, <8 x float> %35, <8 x float> %556) #10
  store <8 x float> %609, <8 x float>* %507, align 1, !tbaa !12
  store <8 x float> %610, <8 x float>* %511, align 1, !tbaa !12
  store <8 x float> %611, <8 x float>* %515, align 1, !tbaa !12
  store <8 x float> %612, <8 x float>* %519, align 1, !tbaa !12
  store <8 x float> %613, <8 x float>* %523, align 1, !tbaa !12
  store <8 x float> %614, <8 x float>* %527, align 1, !tbaa !12
  store <8 x float> %615, <8 x float>* %531, align 1, !tbaa !12
  store <8 x float> %616, <8 x float>* %535, align 1, !tbaa !12
  store <8 x float> %617, <8 x float>* %539, align 1, !tbaa !12
  store <8 x float> %618, <8 x float>* %543, align 1, !tbaa !12
  store <8 x float> %619, <8 x float>* %547, align 1, !tbaa !12
  store <8 x float> %620, <8 x float>* %551, align 1, !tbaa !12
  store <8 x float> %621, <8 x float>* %555, align 1, !tbaa !12
  %622 = add nuw nsw i64 %452, 104
  %623 = icmp ult i64 %622, %270
  br i1 %623, label %451, label %444

624:                                              ; preds = %630
  br i1 %446, label %625, label %996

625:                                              ; preds = %624
  %626 = trunc i64 %41 to i32
  %627 = mul nsw i32 %445, %626
  %628 = sext i32 %627 to i64
  %629 = zext i32 %445 to i64
  br label %823

630:                                              ; preds = %447, %630
  %631 = phi i64 [ 0, %447 ], [ %815, %630 ]
  %632 = getelementptr inbounds float, float* %5, i64 %631
  %633 = getelementptr inbounds float, float* %632, i64 8
  %634 = bitcast float* %633 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %634, i32 0, i32 1, i32 1)
  %635 = getelementptr inbounds float, float* %3, i64 %631
  %636 = getelementptr inbounds float, float* %635, i64 8
  %637 = bitcast float* %636 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %637, i32 0, i32 1, i32 1)
  %638 = getelementptr inbounds float, float* %632, i64 16
  %639 = bitcast float* %638 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %639, i32 0, i32 1, i32 1)
  %640 = getelementptr inbounds float, float* %635, i64 16
  %641 = bitcast float* %640 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %641, i32 0, i32 1, i32 1)
  %642 = getelementptr inbounds float, float* %632, i64 24
  %643 = bitcast float* %642 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %643, i32 0, i32 1, i32 1)
  %644 = getelementptr inbounds float, float* %635, i64 24
  %645 = bitcast float* %644 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %645, i32 0, i32 1, i32 1)
  %646 = getelementptr inbounds float, float* %632, i64 32
  %647 = bitcast float* %646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %647, i32 0, i32 1, i32 1)
  %648 = getelementptr inbounds float, float* %635, i64 32
  %649 = bitcast float* %648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %649, i32 0, i32 1, i32 1)
  %650 = getelementptr inbounds float, float* %632, i64 40
  %651 = bitcast float* %650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %651, i32 0, i32 1, i32 1)
  %652 = getelementptr inbounds float, float* %635, i64 40
  %653 = bitcast float* %652 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %653, i32 0, i32 1, i32 1)
  %654 = getelementptr inbounds float, float* %632, i64 48
  %655 = bitcast float* %654 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %655, i32 0, i32 1, i32 1)
  %656 = getelementptr inbounds float, float* %635, i64 48
  %657 = bitcast float* %656 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %657, i32 0, i32 1, i32 1)
  %658 = getelementptr inbounds float, float* %632, i64 56
  %659 = bitcast float* %658 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %659, i32 0, i32 1, i32 1)
  %660 = getelementptr inbounds float, float* %635, i64 56
  %661 = bitcast float* %660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %661, i32 0, i32 1, i32 1)
  %662 = getelementptr inbounds float, float* %632, i64 64
  %663 = bitcast float* %662 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %663, i32 0, i32 1, i32 1)
  %664 = getelementptr inbounds float, float* %635, i64 64
  %665 = bitcast float* %664 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %665, i32 0, i32 1, i32 1)
  %666 = getelementptr inbounds float, float* %632, i64 72
  %667 = bitcast float* %666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %667, i32 0, i32 1, i32 1)
  %668 = getelementptr inbounds float, float* %635, i64 72
  %669 = bitcast float* %668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %669, i32 0, i32 1, i32 1)
  %670 = getelementptr inbounds float, float* %632, i64 80
  %671 = bitcast float* %670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %671, i32 0, i32 1, i32 1)
  %672 = getelementptr inbounds float, float* %635, i64 80
  %673 = bitcast float* %672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %673, i32 0, i32 1, i32 1)
  %674 = getelementptr inbounds float, float* %632, i64 88
  %675 = bitcast float* %674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %675, i32 0, i32 1, i32 1)
  %676 = getelementptr inbounds float, float* %635, i64 88
  %677 = bitcast float* %676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %677, i32 0, i32 1, i32 1)
  %678 = getelementptr inbounds float, float* %632, i64 96
  %679 = bitcast float* %678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %679, i32 0, i32 1, i32 1)
  %680 = getelementptr inbounds float, float* %635, i64 96
  %681 = bitcast float* %680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %681, i32 0, i32 1, i32 1)
  %682 = getelementptr inbounds float, float* %632, i64 104
  %683 = bitcast float* %682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %683, i32 0, i32 1, i32 1)
  %684 = getelementptr inbounds float, float* %635, i64 104
  %685 = bitcast float* %684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %685, i32 0, i32 1, i32 1)
  %686 = bitcast float* %632 to <8 x float>*
  %687 = load <8 x float>, <8 x float>* %686, align 1, !tbaa !12
  %688 = add nuw nsw i64 %631, 8
  %689 = getelementptr inbounds float, float* %5, i64 %688
  %690 = bitcast float* %689 to <8 x float>*
  %691 = load <8 x float>, <8 x float>* %690, align 1, !tbaa !12
  %692 = add nuw nsw i64 %631, 16
  %693 = getelementptr inbounds float, float* %5, i64 %692
  %694 = bitcast float* %693 to <8 x float>*
  %695 = load <8 x float>, <8 x float>* %694, align 1, !tbaa !12
  %696 = add nuw nsw i64 %631, 24
  %697 = getelementptr inbounds float, float* %5, i64 %696
  %698 = bitcast float* %697 to <8 x float>*
  %699 = load <8 x float>, <8 x float>* %698, align 1, !tbaa !12
  %700 = add nuw nsw i64 %631, 32
  %701 = getelementptr inbounds float, float* %5, i64 %700
  %702 = bitcast float* %701 to <8 x float>*
  %703 = load <8 x float>, <8 x float>* %702, align 1, !tbaa !12
  %704 = add nuw nsw i64 %631, 40
  %705 = getelementptr inbounds float, float* %5, i64 %704
  %706 = bitcast float* %705 to <8 x float>*
  %707 = load <8 x float>, <8 x float>* %706, align 1, !tbaa !12
  %708 = add nuw nsw i64 %631, 48
  %709 = getelementptr inbounds float, float* %5, i64 %708
  %710 = bitcast float* %709 to <8 x float>*
  %711 = load <8 x float>, <8 x float>* %710, align 1, !tbaa !12
  %712 = add nuw nsw i64 %631, 56
  %713 = getelementptr inbounds float, float* %5, i64 %712
  %714 = bitcast float* %713 to <8 x float>*
  %715 = load <8 x float>, <8 x float>* %714, align 1, !tbaa !12
  %716 = add nuw nsw i64 %631, 64
  %717 = getelementptr inbounds float, float* %5, i64 %716
  %718 = bitcast float* %717 to <8 x float>*
  %719 = load <8 x float>, <8 x float>* %718, align 1, !tbaa !12
  %720 = add nuw nsw i64 %631, 72
  %721 = getelementptr inbounds float, float* %5, i64 %720
  %722 = bitcast float* %721 to <8 x float>*
  %723 = load <8 x float>, <8 x float>* %722, align 1, !tbaa !12
  %724 = add nuw nsw i64 %631, 80
  %725 = getelementptr inbounds float, float* %5, i64 %724
  %726 = bitcast float* %725 to <8 x float>*
  %727 = load <8 x float>, <8 x float>* %726, align 1, !tbaa !12
  %728 = add nuw nsw i64 %631, 88
  %729 = getelementptr inbounds float, float* %5, i64 %728
  %730 = bitcast float* %729 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = add nuw nsw i64 %631, 96
  %733 = getelementptr inbounds float, float* %5, i64 %732
  %734 = bitcast float* %733 to <8 x float>*
  %735 = load <8 x float>, <8 x float>* %734, align 1, !tbaa !12
  %736 = trunc i64 %631 to i32
  %737 = add nsw i32 %450, %736
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds float, float* %3, i64 %738
  %740 = bitcast float* %739 to <8 x float>*
  %741 = load <8 x float>, <8 x float>* %740, align 1, !tbaa !12
  %742 = add nsw i32 %737, 8
  %743 = sext i32 %742 to i64
  %744 = getelementptr inbounds float, float* %3, i64 %743
  %745 = bitcast float* %744 to <8 x float>*
  %746 = load <8 x float>, <8 x float>* %745, align 1, !tbaa !12
  %747 = add nsw i32 %737, 16
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds float, float* %3, i64 %748
  %750 = bitcast float* %749 to <8 x float>*
  %751 = load <8 x float>, <8 x float>* %750, align 1, !tbaa !12
  %752 = add nsw i32 %737, 24
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds float, float* %3, i64 %753
  %755 = bitcast float* %754 to <8 x float>*
  %756 = load <8 x float>, <8 x float>* %755, align 1, !tbaa !12
  %757 = add nsw i32 %737, 32
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds float, float* %3, i64 %758
  %760 = bitcast float* %759 to <8 x float>*
  %761 = load <8 x float>, <8 x float>* %760, align 1, !tbaa !12
  %762 = add nsw i32 %737, 40
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds float, float* %3, i64 %763
  %765 = bitcast float* %764 to <8 x float>*
  %766 = load <8 x float>, <8 x float>* %765, align 1, !tbaa !12
  %767 = add nsw i32 %737, 48
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds float, float* %3, i64 %768
  %770 = bitcast float* %769 to <8 x float>*
  %771 = load <8 x float>, <8 x float>* %770, align 1, !tbaa !12
  %772 = add nsw i32 %737, 56
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds float, float* %3, i64 %773
  %775 = bitcast float* %774 to <8 x float>*
  %776 = load <8 x float>, <8 x float>* %775, align 1, !tbaa !12
  %777 = add nsw i32 %737, 64
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds float, float* %3, i64 %778
  %780 = bitcast float* %779 to <8 x float>*
  %781 = load <8 x float>, <8 x float>* %780, align 1, !tbaa !12
  %782 = add nsw i32 %737, 72
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds float, float* %3, i64 %783
  %785 = bitcast float* %784 to <8 x float>*
  %786 = load <8 x float>, <8 x float>* %785, align 1, !tbaa !12
  %787 = add nsw i32 %737, 80
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds float, float* %3, i64 %788
  %790 = bitcast float* %789 to <8 x float>*
  %791 = load <8 x float>, <8 x float>* %790, align 1, !tbaa !12
  %792 = add nsw i32 %737, 88
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds float, float* %3, i64 %793
  %795 = bitcast float* %794 to <8 x float>*
  %796 = load <8 x float>, <8 x float>* %795, align 1, !tbaa !12
  %797 = add nsw i32 %737, 96
  %798 = sext i32 %797 to i64
  %799 = getelementptr inbounds float, float* %3, i64 %798
  %800 = bitcast float* %799 to <8 x float>*
  %801 = load <8 x float>, <8 x float>* %800, align 1, !tbaa !12
  %802 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %741, <8 x float> %40, <8 x float> %687) #10
  %803 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %746, <8 x float> %40, <8 x float> %691) #10
  %804 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %751, <8 x float> %40, <8 x float> %695) #10
  %805 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %756, <8 x float> %40, <8 x float> %699) #10
  %806 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %761, <8 x float> %40, <8 x float> %703) #10
  %807 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %766, <8 x float> %40, <8 x float> %707) #10
  %808 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %771, <8 x float> %40, <8 x float> %711) #10
  %809 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %776, <8 x float> %40, <8 x float> %715) #10
  %810 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %781, <8 x float> %40, <8 x float> %719) #10
  %811 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %786, <8 x float> %40, <8 x float> %723) #10
  %812 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %791, <8 x float> %40, <8 x float> %727) #10
  %813 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %796, <8 x float> %40, <8 x float> %731) #10
  %814 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %801, <8 x float> %40, <8 x float> %735) #10
  store <8 x float> %802, <8 x float>* %686, align 1, !tbaa !12
  store <8 x float> %803, <8 x float>* %690, align 1, !tbaa !12
  store <8 x float> %804, <8 x float>* %694, align 1, !tbaa !12
  store <8 x float> %805, <8 x float>* %698, align 1, !tbaa !12
  store <8 x float> %806, <8 x float>* %702, align 1, !tbaa !12
  store <8 x float> %807, <8 x float>* %706, align 1, !tbaa !12
  store <8 x float> %808, <8 x float>* %710, align 1, !tbaa !12
  store <8 x float> %809, <8 x float>* %714, align 1, !tbaa !12
  store <8 x float> %810, <8 x float>* %718, align 1, !tbaa !12
  store <8 x float> %811, <8 x float>* %722, align 1, !tbaa !12
  store <8 x float> %812, <8 x float>* %726, align 1, !tbaa !12
  store <8 x float> %813, <8 x float>* %730, align 1, !tbaa !12
  store <8 x float> %814, <8 x float>* %734, align 1, !tbaa !12
  %815 = add nuw nsw i64 %631, 104
  %816 = icmp ult i64 %815, %448
  br i1 %816, label %630, label %624

817:                                              ; preds = %823
  br i1 %446, label %818, label %996

818:                                              ; preds = %817
  %819 = trunc i64 %46 to i32
  %820 = mul nsw i32 %445, %819
  %821 = sext i32 %820 to i64
  %822 = zext i32 %445 to i64
  br label %1003

823:                                              ; preds = %625, %823
  %824 = phi i64 [ 0, %625 ], [ %994, %823 ]
  %825 = getelementptr inbounds float, float* %5, i64 %824
  %826 = getelementptr inbounds float, float* %825, i64 8
  %827 = bitcast float* %826 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %827, i32 0, i32 1, i32 1)
  %828 = getelementptr inbounds float, float* %3, i64 %824
  %829 = getelementptr inbounds float, float* %828, i64 8
  %830 = bitcast float* %829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %830, i32 0, i32 1, i32 1)
  %831 = getelementptr inbounds float, float* %825, i64 16
  %832 = bitcast float* %831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %832, i32 0, i32 1, i32 1)
  %833 = getelementptr inbounds float, float* %828, i64 16
  %834 = bitcast float* %833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %834, i32 0, i32 1, i32 1)
  %835 = getelementptr inbounds float, float* %825, i64 24
  %836 = bitcast float* %835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %836, i32 0, i32 1, i32 1)
  %837 = getelementptr inbounds float, float* %828, i64 24
  %838 = bitcast float* %837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %838, i32 0, i32 1, i32 1)
  %839 = getelementptr inbounds float, float* %825, i64 32
  %840 = bitcast float* %839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %840, i32 0, i32 1, i32 1)
  %841 = getelementptr inbounds float, float* %828, i64 32
  %842 = bitcast float* %841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %842, i32 0, i32 1, i32 1)
  %843 = getelementptr inbounds float, float* %825, i64 40
  %844 = bitcast float* %843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %844, i32 0, i32 1, i32 1)
  %845 = getelementptr inbounds float, float* %828, i64 40
  %846 = bitcast float* %845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %846, i32 0, i32 1, i32 1)
  %847 = getelementptr inbounds float, float* %825, i64 48
  %848 = bitcast float* %847 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %848, i32 0, i32 1, i32 1)
  %849 = getelementptr inbounds float, float* %828, i64 48
  %850 = bitcast float* %849 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %850, i32 0, i32 1, i32 1)
  %851 = getelementptr inbounds float, float* %825, i64 56
  %852 = bitcast float* %851 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %852, i32 0, i32 1, i32 1)
  %853 = getelementptr inbounds float, float* %828, i64 56
  %854 = bitcast float* %853 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %854, i32 0, i32 1, i32 1)
  %855 = getelementptr inbounds float, float* %825, i64 64
  %856 = bitcast float* %855 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %856, i32 0, i32 1, i32 1)
  %857 = getelementptr inbounds float, float* %828, i64 64
  %858 = bitcast float* %857 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %858, i32 0, i32 1, i32 1)
  %859 = getelementptr inbounds float, float* %825, i64 72
  %860 = bitcast float* %859 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %860, i32 0, i32 1, i32 1)
  %861 = getelementptr inbounds float, float* %828, i64 72
  %862 = bitcast float* %861 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %862, i32 0, i32 1, i32 1)
  %863 = getelementptr inbounds float, float* %825, i64 80
  %864 = bitcast float* %863 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %864, i32 0, i32 1, i32 1)
  %865 = getelementptr inbounds float, float* %828, i64 80
  %866 = bitcast float* %865 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %866, i32 0, i32 1, i32 1)
  %867 = getelementptr inbounds float, float* %825, i64 88
  %868 = bitcast float* %867 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %868, i32 0, i32 1, i32 1)
  %869 = getelementptr inbounds float, float* %828, i64 88
  %870 = bitcast float* %869 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %870, i32 0, i32 1, i32 1)
  %871 = getelementptr inbounds float, float* %825, i64 96
  %872 = bitcast float* %871 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %872, i32 0, i32 1, i32 1)
  %873 = getelementptr inbounds float, float* %828, i64 96
  %874 = bitcast float* %873 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %874, i32 0, i32 1, i32 1)
  %875 = getelementptr inbounds float, float* %825, i64 104
  %876 = bitcast float* %875 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %876, i32 0, i32 1, i32 1)
  %877 = getelementptr inbounds float, float* %828, i64 104
  %878 = bitcast float* %877 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %878, i32 0, i32 1, i32 1)
  %879 = bitcast float* %825 to <8 x float>*
  %880 = load <8 x float>, <8 x float>* %879, align 1, !tbaa !12
  %881 = add nuw nsw i64 %824, 8
  %882 = getelementptr inbounds float, float* %5, i64 %881
  %883 = bitcast float* %882 to <8 x float>*
  %884 = load <8 x float>, <8 x float>* %883, align 1, !tbaa !12
  %885 = add nuw nsw i64 %824, 16
  %886 = getelementptr inbounds float, float* %5, i64 %885
  %887 = bitcast float* %886 to <8 x float>*
  %888 = load <8 x float>, <8 x float>* %887, align 1, !tbaa !12
  %889 = add nuw nsw i64 %824, 24
  %890 = getelementptr inbounds float, float* %5, i64 %889
  %891 = bitcast float* %890 to <8 x float>*
  %892 = load <8 x float>, <8 x float>* %891, align 1, !tbaa !12
  %893 = add nuw nsw i64 %824, 32
  %894 = getelementptr inbounds float, float* %5, i64 %893
  %895 = bitcast float* %894 to <8 x float>*
  %896 = load <8 x float>, <8 x float>* %895, align 1, !tbaa !12
  %897 = add nuw nsw i64 %824, 40
  %898 = getelementptr inbounds float, float* %5, i64 %897
  %899 = bitcast float* %898 to <8 x float>*
  %900 = load <8 x float>, <8 x float>* %899, align 1, !tbaa !12
  %901 = add nuw nsw i64 %824, 48
  %902 = getelementptr inbounds float, float* %5, i64 %901
  %903 = bitcast float* %902 to <8 x float>*
  %904 = load <8 x float>, <8 x float>* %903, align 1, !tbaa !12
  %905 = add nuw nsw i64 %824, 56
  %906 = getelementptr inbounds float, float* %5, i64 %905
  %907 = bitcast float* %906 to <8 x float>*
  %908 = load <8 x float>, <8 x float>* %907, align 1, !tbaa !12
  %909 = add nuw nsw i64 %824, 64
  %910 = getelementptr inbounds float, float* %5, i64 %909
  %911 = bitcast float* %910 to <8 x float>*
  %912 = load <8 x float>, <8 x float>* %911, align 1, !tbaa !12
  %913 = add nuw nsw i64 %824, 72
  %914 = getelementptr inbounds float, float* %5, i64 %913
  %915 = bitcast float* %914 to <8 x float>*
  %916 = load <8 x float>, <8 x float>* %915, align 1, !tbaa !12
  %917 = add nuw nsw i64 %824, 80
  %918 = getelementptr inbounds float, float* %5, i64 %917
  %919 = bitcast float* %918 to <8 x float>*
  %920 = load <8 x float>, <8 x float>* %919, align 1, !tbaa !12
  %921 = add nuw nsw i64 %824, 88
  %922 = getelementptr inbounds float, float* %5, i64 %921
  %923 = bitcast float* %922 to <8 x float>*
  %924 = load <8 x float>, <8 x float>* %923, align 1, !tbaa !12
  %925 = add nuw nsw i64 %824, 96
  %926 = getelementptr inbounds float, float* %5, i64 %925
  %927 = bitcast float* %926 to <8 x float>*
  %928 = load <8 x float>, <8 x float>* %927, align 1, !tbaa !12
  %929 = add nsw i64 %824, %628
  %930 = getelementptr inbounds float, float* %3, i64 %929
  %931 = bitcast float* %930 to <8 x float>*
  %932 = load <8 x float>, <8 x float>* %931, align 1, !tbaa !12
  %933 = add nsw i64 %929, 8
  %934 = getelementptr inbounds float, float* %3, i64 %933
  %935 = bitcast float* %934 to <8 x float>*
  %936 = load <8 x float>, <8 x float>* %935, align 1, !tbaa !12
  %937 = add nsw i64 %929, 16
  %938 = getelementptr inbounds float, float* %3, i64 %937
  %939 = bitcast float* %938 to <8 x float>*
  %940 = load <8 x float>, <8 x float>* %939, align 1, !tbaa !12
  %941 = add nsw i64 %929, 24
  %942 = getelementptr inbounds float, float* %3, i64 %941
  %943 = bitcast float* %942 to <8 x float>*
  %944 = load <8 x float>, <8 x float>* %943, align 1, !tbaa !12
  %945 = add nsw i64 %929, 32
  %946 = getelementptr inbounds float, float* %3, i64 %945
  %947 = bitcast float* %946 to <8 x float>*
  %948 = load <8 x float>, <8 x float>* %947, align 1, !tbaa !12
  %949 = add nsw i64 %929, 40
  %950 = getelementptr inbounds float, float* %3, i64 %949
  %951 = bitcast float* %950 to <8 x float>*
  %952 = load <8 x float>, <8 x float>* %951, align 1, !tbaa !12
  %953 = add nsw i64 %929, 48
  %954 = getelementptr inbounds float, float* %3, i64 %953
  %955 = bitcast float* %954 to <8 x float>*
  %956 = load <8 x float>, <8 x float>* %955, align 1, !tbaa !12
  %957 = add nsw i64 %929, 56
  %958 = getelementptr inbounds float, float* %3, i64 %957
  %959 = bitcast float* %958 to <8 x float>*
  %960 = load <8 x float>, <8 x float>* %959, align 1, !tbaa !12
  %961 = add nsw i64 %929, 64
  %962 = getelementptr inbounds float, float* %3, i64 %961
  %963 = bitcast float* %962 to <8 x float>*
  %964 = load <8 x float>, <8 x float>* %963, align 1, !tbaa !12
  %965 = add nsw i64 %929, 72
  %966 = getelementptr inbounds float, float* %3, i64 %965
  %967 = bitcast float* %966 to <8 x float>*
  %968 = load <8 x float>, <8 x float>* %967, align 1, !tbaa !12
  %969 = add nsw i64 %929, 80
  %970 = getelementptr inbounds float, float* %3, i64 %969
  %971 = bitcast float* %970 to <8 x float>*
  %972 = load <8 x float>, <8 x float>* %971, align 1, !tbaa !12
  %973 = add nsw i64 %929, 88
  %974 = getelementptr inbounds float, float* %3, i64 %973
  %975 = bitcast float* %974 to <8 x float>*
  %976 = load <8 x float>, <8 x float>* %975, align 1, !tbaa !12
  %977 = add nsw i64 %929, 96
  %978 = getelementptr inbounds float, float* %3, i64 %977
  %979 = bitcast float* %978 to <8 x float>*
  %980 = load <8 x float>, <8 x float>* %979, align 1, !tbaa !12
  %981 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %932, <8 x float> %45, <8 x float> %880) #10
  %982 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %936, <8 x float> %45, <8 x float> %884) #10
  %983 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %940, <8 x float> %45, <8 x float> %888) #10
  %984 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %944, <8 x float> %45, <8 x float> %892) #10
  %985 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %948, <8 x float> %45, <8 x float> %896) #10
  %986 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %952, <8 x float> %45, <8 x float> %900) #10
  %987 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %956, <8 x float> %45, <8 x float> %904) #10
  %988 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %960, <8 x float> %45, <8 x float> %908) #10
  %989 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %964, <8 x float> %45, <8 x float> %912) #10
  %990 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %968, <8 x float> %45, <8 x float> %916) #10
  %991 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %972, <8 x float> %45, <8 x float> %920) #10
  %992 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %976, <8 x float> %45, <8 x float> %924) #10
  %993 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %980, <8 x float> %45, <8 x float> %928) #10
  store <8 x float> %981, <8 x float>* %879, align 1, !tbaa !12
  store <8 x float> %982, <8 x float>* %883, align 1, !tbaa !12
  store <8 x float> %983, <8 x float>* %887, align 1, !tbaa !12
  store <8 x float> %984, <8 x float>* %891, align 1, !tbaa !12
  store <8 x float> %985, <8 x float>* %895, align 1, !tbaa !12
  store <8 x float> %986, <8 x float>* %899, align 1, !tbaa !12
  store <8 x float> %987, <8 x float>* %903, align 1, !tbaa !12
  store <8 x float> %988, <8 x float>* %907, align 1, !tbaa !12
  store <8 x float> %989, <8 x float>* %911, align 1, !tbaa !12
  store <8 x float> %990, <8 x float>* %915, align 1, !tbaa !12
  store <8 x float> %991, <8 x float>* %919, align 1, !tbaa !12
  store <8 x float> %992, <8 x float>* %923, align 1, !tbaa !12
  store <8 x float> %993, <8 x float>* %927, align 1, !tbaa !12
  %994 = add nuw nsw i64 %824, 104
  %995 = icmp ult i64 %994, %629
  br i1 %995, label %823, label %817

996:                                              ; preds = %1003, %624, %817
  %997 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %998 = icmp sgt i32 %997, 0
  br i1 %998, label %999, label %1548

999:                                              ; preds = %996
  %1000 = zext i32 %997 to i64
  %1001 = trunc i64 %51 to i32
  %1002 = mul nsw i32 %997, %1001
  br label %1182

1003:                                             ; preds = %818, %1003
  %1004 = phi i64 [ 0, %818 ], [ %1174, %1003 ]
  %1005 = getelementptr inbounds float, float* %5, i64 %1004
  %1006 = getelementptr inbounds float, float* %1005, i64 8
  %1007 = bitcast float* %1006 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1007, i32 0, i32 1, i32 1)
  %1008 = getelementptr inbounds float, float* %3, i64 %1004
  %1009 = getelementptr inbounds float, float* %1008, i64 8
  %1010 = bitcast float* %1009 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1010, i32 0, i32 1, i32 1)
  %1011 = getelementptr inbounds float, float* %1005, i64 16
  %1012 = bitcast float* %1011 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1012, i32 0, i32 1, i32 1)
  %1013 = getelementptr inbounds float, float* %1008, i64 16
  %1014 = bitcast float* %1013 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1014, i32 0, i32 1, i32 1)
  %1015 = getelementptr inbounds float, float* %1005, i64 24
  %1016 = bitcast float* %1015 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1016, i32 0, i32 1, i32 1)
  %1017 = getelementptr inbounds float, float* %1008, i64 24
  %1018 = bitcast float* %1017 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1018, i32 0, i32 1, i32 1)
  %1019 = getelementptr inbounds float, float* %1005, i64 32
  %1020 = bitcast float* %1019 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1020, i32 0, i32 1, i32 1)
  %1021 = getelementptr inbounds float, float* %1008, i64 32
  %1022 = bitcast float* %1021 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1022, i32 0, i32 1, i32 1)
  %1023 = getelementptr inbounds float, float* %1005, i64 40
  %1024 = bitcast float* %1023 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1024, i32 0, i32 1, i32 1)
  %1025 = getelementptr inbounds float, float* %1008, i64 40
  %1026 = bitcast float* %1025 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1026, i32 0, i32 1, i32 1)
  %1027 = getelementptr inbounds float, float* %1005, i64 48
  %1028 = bitcast float* %1027 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1028, i32 0, i32 1, i32 1)
  %1029 = getelementptr inbounds float, float* %1008, i64 48
  %1030 = bitcast float* %1029 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1030, i32 0, i32 1, i32 1)
  %1031 = getelementptr inbounds float, float* %1005, i64 56
  %1032 = bitcast float* %1031 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1032, i32 0, i32 1, i32 1)
  %1033 = getelementptr inbounds float, float* %1008, i64 56
  %1034 = bitcast float* %1033 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1034, i32 0, i32 1, i32 1)
  %1035 = getelementptr inbounds float, float* %1005, i64 64
  %1036 = bitcast float* %1035 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1036, i32 0, i32 1, i32 1)
  %1037 = getelementptr inbounds float, float* %1008, i64 64
  %1038 = bitcast float* %1037 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1038, i32 0, i32 1, i32 1)
  %1039 = getelementptr inbounds float, float* %1005, i64 72
  %1040 = bitcast float* %1039 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1040, i32 0, i32 1, i32 1)
  %1041 = getelementptr inbounds float, float* %1008, i64 72
  %1042 = bitcast float* %1041 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1042, i32 0, i32 1, i32 1)
  %1043 = getelementptr inbounds float, float* %1005, i64 80
  %1044 = bitcast float* %1043 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1044, i32 0, i32 1, i32 1)
  %1045 = getelementptr inbounds float, float* %1008, i64 80
  %1046 = bitcast float* %1045 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1046, i32 0, i32 1, i32 1)
  %1047 = getelementptr inbounds float, float* %1005, i64 88
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = getelementptr inbounds float, float* %1008, i64 88
  %1050 = bitcast float* %1049 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1050, i32 0, i32 1, i32 1)
  %1051 = getelementptr inbounds float, float* %1005, i64 96
  %1052 = bitcast float* %1051 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1052, i32 0, i32 1, i32 1)
  %1053 = getelementptr inbounds float, float* %1008, i64 96
  %1054 = bitcast float* %1053 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1054, i32 0, i32 1, i32 1)
  %1055 = getelementptr inbounds float, float* %1005, i64 104
  %1056 = bitcast float* %1055 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1056, i32 0, i32 1, i32 1)
  %1057 = getelementptr inbounds float, float* %1008, i64 104
  %1058 = bitcast float* %1057 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1058, i32 0, i32 1, i32 1)
  %1059 = bitcast float* %1005 to <8 x float>*
  %1060 = load <8 x float>, <8 x float>* %1059, align 1, !tbaa !12
  %1061 = add nuw nsw i64 %1004, 8
  %1062 = getelementptr inbounds float, float* %5, i64 %1061
  %1063 = bitcast float* %1062 to <8 x float>*
  %1064 = load <8 x float>, <8 x float>* %1063, align 1, !tbaa !12
  %1065 = add nuw nsw i64 %1004, 16
  %1066 = getelementptr inbounds float, float* %5, i64 %1065
  %1067 = bitcast float* %1066 to <8 x float>*
  %1068 = load <8 x float>, <8 x float>* %1067, align 1, !tbaa !12
  %1069 = add nuw nsw i64 %1004, 24
  %1070 = getelementptr inbounds float, float* %5, i64 %1069
  %1071 = bitcast float* %1070 to <8 x float>*
  %1072 = load <8 x float>, <8 x float>* %1071, align 1, !tbaa !12
  %1073 = add nuw nsw i64 %1004, 32
  %1074 = getelementptr inbounds float, float* %5, i64 %1073
  %1075 = bitcast float* %1074 to <8 x float>*
  %1076 = load <8 x float>, <8 x float>* %1075, align 1, !tbaa !12
  %1077 = add nuw nsw i64 %1004, 40
  %1078 = getelementptr inbounds float, float* %5, i64 %1077
  %1079 = bitcast float* %1078 to <8 x float>*
  %1080 = load <8 x float>, <8 x float>* %1079, align 1, !tbaa !12
  %1081 = add nuw nsw i64 %1004, 48
  %1082 = getelementptr inbounds float, float* %5, i64 %1081
  %1083 = bitcast float* %1082 to <8 x float>*
  %1084 = load <8 x float>, <8 x float>* %1083, align 1, !tbaa !12
  %1085 = add nuw nsw i64 %1004, 56
  %1086 = getelementptr inbounds float, float* %5, i64 %1085
  %1087 = bitcast float* %1086 to <8 x float>*
  %1088 = load <8 x float>, <8 x float>* %1087, align 1, !tbaa !12
  %1089 = add nuw nsw i64 %1004, 64
  %1090 = getelementptr inbounds float, float* %5, i64 %1089
  %1091 = bitcast float* %1090 to <8 x float>*
  %1092 = load <8 x float>, <8 x float>* %1091, align 1, !tbaa !12
  %1093 = add nuw nsw i64 %1004, 72
  %1094 = getelementptr inbounds float, float* %5, i64 %1093
  %1095 = bitcast float* %1094 to <8 x float>*
  %1096 = load <8 x float>, <8 x float>* %1095, align 1, !tbaa !12
  %1097 = add nuw nsw i64 %1004, 80
  %1098 = getelementptr inbounds float, float* %5, i64 %1097
  %1099 = bitcast float* %1098 to <8 x float>*
  %1100 = load <8 x float>, <8 x float>* %1099, align 1, !tbaa !12
  %1101 = add nuw nsw i64 %1004, 88
  %1102 = getelementptr inbounds float, float* %5, i64 %1101
  %1103 = bitcast float* %1102 to <8 x float>*
  %1104 = load <8 x float>, <8 x float>* %1103, align 1, !tbaa !12
  %1105 = add nuw nsw i64 %1004, 96
  %1106 = getelementptr inbounds float, float* %5, i64 %1105
  %1107 = bitcast float* %1106 to <8 x float>*
  %1108 = load <8 x float>, <8 x float>* %1107, align 1, !tbaa !12
  %1109 = add nsw i64 %1004, %821
  %1110 = getelementptr inbounds float, float* %3, i64 %1109
  %1111 = bitcast float* %1110 to <8 x float>*
  %1112 = load <8 x float>, <8 x float>* %1111, align 1, !tbaa !12
  %1113 = add nsw i64 %1109, 8
  %1114 = getelementptr inbounds float, float* %3, i64 %1113
  %1115 = bitcast float* %1114 to <8 x float>*
  %1116 = load <8 x float>, <8 x float>* %1115, align 1, !tbaa !12
  %1117 = add nsw i64 %1109, 16
  %1118 = getelementptr inbounds float, float* %3, i64 %1117
  %1119 = bitcast float* %1118 to <8 x float>*
  %1120 = load <8 x float>, <8 x float>* %1119, align 1, !tbaa !12
  %1121 = add nsw i64 %1109, 24
  %1122 = getelementptr inbounds float, float* %3, i64 %1121
  %1123 = bitcast float* %1122 to <8 x float>*
  %1124 = load <8 x float>, <8 x float>* %1123, align 1, !tbaa !12
  %1125 = add nsw i64 %1109, 32
  %1126 = getelementptr inbounds float, float* %3, i64 %1125
  %1127 = bitcast float* %1126 to <8 x float>*
  %1128 = load <8 x float>, <8 x float>* %1127, align 1, !tbaa !12
  %1129 = add nsw i64 %1109, 40
  %1130 = getelementptr inbounds float, float* %3, i64 %1129
  %1131 = bitcast float* %1130 to <8 x float>*
  %1132 = load <8 x float>, <8 x float>* %1131, align 1, !tbaa !12
  %1133 = add nsw i64 %1109, 48
  %1134 = getelementptr inbounds float, float* %3, i64 %1133
  %1135 = bitcast float* %1134 to <8 x float>*
  %1136 = load <8 x float>, <8 x float>* %1135, align 1, !tbaa !12
  %1137 = add nsw i64 %1109, 56
  %1138 = getelementptr inbounds float, float* %3, i64 %1137
  %1139 = bitcast float* %1138 to <8 x float>*
  %1140 = load <8 x float>, <8 x float>* %1139, align 1, !tbaa !12
  %1141 = add nsw i64 %1109, 64
  %1142 = getelementptr inbounds float, float* %3, i64 %1141
  %1143 = bitcast float* %1142 to <8 x float>*
  %1144 = load <8 x float>, <8 x float>* %1143, align 1, !tbaa !12
  %1145 = add nsw i64 %1109, 72
  %1146 = getelementptr inbounds float, float* %3, i64 %1145
  %1147 = bitcast float* %1146 to <8 x float>*
  %1148 = load <8 x float>, <8 x float>* %1147, align 1, !tbaa !12
  %1149 = add nsw i64 %1109, 80
  %1150 = getelementptr inbounds float, float* %3, i64 %1149
  %1151 = bitcast float* %1150 to <8 x float>*
  %1152 = load <8 x float>, <8 x float>* %1151, align 1, !tbaa !12
  %1153 = add nsw i64 %1109, 88
  %1154 = getelementptr inbounds float, float* %3, i64 %1153
  %1155 = bitcast float* %1154 to <8 x float>*
  %1156 = load <8 x float>, <8 x float>* %1155, align 1, !tbaa !12
  %1157 = add nsw i64 %1109, 96
  %1158 = getelementptr inbounds float, float* %3, i64 %1157
  %1159 = bitcast float* %1158 to <8 x float>*
  %1160 = load <8 x float>, <8 x float>* %1159, align 1, !tbaa !12
  %1161 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1112, <8 x float> %50, <8 x float> %1060) #10
  %1162 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1116, <8 x float> %50, <8 x float> %1064) #10
  %1163 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1120, <8 x float> %50, <8 x float> %1068) #10
  %1164 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1124, <8 x float> %50, <8 x float> %1072) #10
  %1165 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1128, <8 x float> %50, <8 x float> %1076) #10
  %1166 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1132, <8 x float> %50, <8 x float> %1080) #10
  %1167 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1136, <8 x float> %50, <8 x float> %1084) #10
  %1168 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1140, <8 x float> %50, <8 x float> %1088) #10
  %1169 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1144, <8 x float> %50, <8 x float> %1092) #10
  %1170 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1148, <8 x float> %50, <8 x float> %1096) #10
  %1171 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1152, <8 x float> %50, <8 x float> %1100) #10
  %1172 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1156, <8 x float> %50, <8 x float> %1104) #10
  %1173 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1160, <8 x float> %50, <8 x float> %1108) #10
  store <8 x float> %1161, <8 x float>* %1059, align 1, !tbaa !12
  store <8 x float> %1162, <8 x float>* %1063, align 1, !tbaa !12
  store <8 x float> %1163, <8 x float>* %1067, align 1, !tbaa !12
  store <8 x float> %1164, <8 x float>* %1071, align 1, !tbaa !12
  store <8 x float> %1165, <8 x float>* %1075, align 1, !tbaa !12
  store <8 x float> %1166, <8 x float>* %1079, align 1, !tbaa !12
  store <8 x float> %1167, <8 x float>* %1083, align 1, !tbaa !12
  store <8 x float> %1168, <8 x float>* %1087, align 1, !tbaa !12
  store <8 x float> %1169, <8 x float>* %1091, align 1, !tbaa !12
  store <8 x float> %1170, <8 x float>* %1095, align 1, !tbaa !12
  store <8 x float> %1171, <8 x float>* %1099, align 1, !tbaa !12
  store <8 x float> %1172, <8 x float>* %1103, align 1, !tbaa !12
  store <8 x float> %1173, <8 x float>* %1107, align 1, !tbaa !12
  %1174 = add nuw nsw i64 %1004, 104
  %1175 = icmp ult i64 %1174, %822
  br i1 %1175, label %1003, label %996

1176:                                             ; preds = %1182
  br i1 %998, label %1177, label %1548

1177:                                             ; preds = %1176
  %1178 = trunc i64 %56 to i32
  %1179 = mul nsw i32 %997, %1178
  %1180 = sext i32 %1179 to i64
  %1181 = zext i32 %997 to i64
  br label %1375

1182:                                             ; preds = %999, %1182
  %1183 = phi i64 [ 0, %999 ], [ %1367, %1182 ]
  %1184 = getelementptr inbounds float, float* %5, i64 %1183
  %1185 = getelementptr inbounds float, float* %1184, i64 8
  %1186 = bitcast float* %1185 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1186, i32 0, i32 1, i32 1)
  %1187 = getelementptr inbounds float, float* %3, i64 %1183
  %1188 = getelementptr inbounds float, float* %1187, i64 8
  %1189 = bitcast float* %1188 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1189, i32 0, i32 1, i32 1)
  %1190 = getelementptr inbounds float, float* %1184, i64 16
  %1191 = bitcast float* %1190 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1191, i32 0, i32 1, i32 1)
  %1192 = getelementptr inbounds float, float* %1187, i64 16
  %1193 = bitcast float* %1192 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1193, i32 0, i32 1, i32 1)
  %1194 = getelementptr inbounds float, float* %1184, i64 24
  %1195 = bitcast float* %1194 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1195, i32 0, i32 1, i32 1)
  %1196 = getelementptr inbounds float, float* %1187, i64 24
  %1197 = bitcast float* %1196 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1197, i32 0, i32 1, i32 1)
  %1198 = getelementptr inbounds float, float* %1184, i64 32
  %1199 = bitcast float* %1198 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1199, i32 0, i32 1, i32 1)
  %1200 = getelementptr inbounds float, float* %1187, i64 32
  %1201 = bitcast float* %1200 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1201, i32 0, i32 1, i32 1)
  %1202 = getelementptr inbounds float, float* %1184, i64 40
  %1203 = bitcast float* %1202 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1203, i32 0, i32 1, i32 1)
  %1204 = getelementptr inbounds float, float* %1187, i64 40
  %1205 = bitcast float* %1204 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1205, i32 0, i32 1, i32 1)
  %1206 = getelementptr inbounds float, float* %1184, i64 48
  %1207 = bitcast float* %1206 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1207, i32 0, i32 1, i32 1)
  %1208 = getelementptr inbounds float, float* %1187, i64 48
  %1209 = bitcast float* %1208 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1209, i32 0, i32 1, i32 1)
  %1210 = getelementptr inbounds float, float* %1184, i64 56
  %1211 = bitcast float* %1210 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1211, i32 0, i32 1, i32 1)
  %1212 = getelementptr inbounds float, float* %1187, i64 56
  %1213 = bitcast float* %1212 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1213, i32 0, i32 1, i32 1)
  %1214 = getelementptr inbounds float, float* %1184, i64 64
  %1215 = bitcast float* %1214 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1215, i32 0, i32 1, i32 1)
  %1216 = getelementptr inbounds float, float* %1187, i64 64
  %1217 = bitcast float* %1216 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1217, i32 0, i32 1, i32 1)
  %1218 = getelementptr inbounds float, float* %1184, i64 72
  %1219 = bitcast float* %1218 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1219, i32 0, i32 1, i32 1)
  %1220 = getelementptr inbounds float, float* %1187, i64 72
  %1221 = bitcast float* %1220 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1221, i32 0, i32 1, i32 1)
  %1222 = getelementptr inbounds float, float* %1184, i64 80
  %1223 = bitcast float* %1222 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1223, i32 0, i32 1, i32 1)
  %1224 = getelementptr inbounds float, float* %1187, i64 80
  %1225 = bitcast float* %1224 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1225, i32 0, i32 1, i32 1)
  %1226 = getelementptr inbounds float, float* %1184, i64 88
  %1227 = bitcast float* %1226 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1227, i32 0, i32 1, i32 1)
  %1228 = getelementptr inbounds float, float* %1187, i64 88
  %1229 = bitcast float* %1228 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1229, i32 0, i32 1, i32 1)
  %1230 = getelementptr inbounds float, float* %1184, i64 96
  %1231 = bitcast float* %1230 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1231, i32 0, i32 1, i32 1)
  %1232 = getelementptr inbounds float, float* %1187, i64 96
  %1233 = bitcast float* %1232 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1233, i32 0, i32 1, i32 1)
  %1234 = getelementptr inbounds float, float* %1184, i64 104
  %1235 = bitcast float* %1234 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1235, i32 0, i32 1, i32 1)
  %1236 = getelementptr inbounds float, float* %1187, i64 104
  %1237 = bitcast float* %1236 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1237, i32 0, i32 1, i32 1)
  %1238 = bitcast float* %1184 to <8 x float>*
  %1239 = load <8 x float>, <8 x float>* %1238, align 1, !tbaa !12
  %1240 = add nuw nsw i64 %1183, 8
  %1241 = getelementptr inbounds float, float* %5, i64 %1240
  %1242 = bitcast float* %1241 to <8 x float>*
  %1243 = load <8 x float>, <8 x float>* %1242, align 1, !tbaa !12
  %1244 = add nuw nsw i64 %1183, 16
  %1245 = getelementptr inbounds float, float* %5, i64 %1244
  %1246 = bitcast float* %1245 to <8 x float>*
  %1247 = load <8 x float>, <8 x float>* %1246, align 1, !tbaa !12
  %1248 = add nuw nsw i64 %1183, 24
  %1249 = getelementptr inbounds float, float* %5, i64 %1248
  %1250 = bitcast float* %1249 to <8 x float>*
  %1251 = load <8 x float>, <8 x float>* %1250, align 1, !tbaa !12
  %1252 = add nuw nsw i64 %1183, 32
  %1253 = getelementptr inbounds float, float* %5, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = add nuw nsw i64 %1183, 40
  %1257 = getelementptr inbounds float, float* %5, i64 %1256
  %1258 = bitcast float* %1257 to <8 x float>*
  %1259 = load <8 x float>, <8 x float>* %1258, align 1, !tbaa !12
  %1260 = add nuw nsw i64 %1183, 48
  %1261 = getelementptr inbounds float, float* %5, i64 %1260
  %1262 = bitcast float* %1261 to <8 x float>*
  %1263 = load <8 x float>, <8 x float>* %1262, align 1, !tbaa !12
  %1264 = add nuw nsw i64 %1183, 56
  %1265 = getelementptr inbounds float, float* %5, i64 %1264
  %1266 = bitcast float* %1265 to <8 x float>*
  %1267 = load <8 x float>, <8 x float>* %1266, align 1, !tbaa !12
  %1268 = add nuw nsw i64 %1183, 64
  %1269 = getelementptr inbounds float, float* %5, i64 %1268
  %1270 = bitcast float* %1269 to <8 x float>*
  %1271 = load <8 x float>, <8 x float>* %1270, align 1, !tbaa !12
  %1272 = add nuw nsw i64 %1183, 72
  %1273 = getelementptr inbounds float, float* %5, i64 %1272
  %1274 = bitcast float* %1273 to <8 x float>*
  %1275 = load <8 x float>, <8 x float>* %1274, align 1, !tbaa !12
  %1276 = add nuw nsw i64 %1183, 80
  %1277 = getelementptr inbounds float, float* %5, i64 %1276
  %1278 = bitcast float* %1277 to <8 x float>*
  %1279 = load <8 x float>, <8 x float>* %1278, align 1, !tbaa !12
  %1280 = add nuw nsw i64 %1183, 88
  %1281 = getelementptr inbounds float, float* %5, i64 %1280
  %1282 = bitcast float* %1281 to <8 x float>*
  %1283 = load <8 x float>, <8 x float>* %1282, align 1, !tbaa !12
  %1284 = add nuw nsw i64 %1183, 96
  %1285 = getelementptr inbounds float, float* %5, i64 %1284
  %1286 = bitcast float* %1285 to <8 x float>*
  %1287 = load <8 x float>, <8 x float>* %1286, align 1, !tbaa !12
  %1288 = trunc i64 %1183 to i32
  %1289 = add nsw i32 %1002, %1288
  %1290 = sext i32 %1289 to i64
  %1291 = getelementptr inbounds float, float* %3, i64 %1290
  %1292 = bitcast float* %1291 to <8 x float>*
  %1293 = load <8 x float>, <8 x float>* %1292, align 1, !tbaa !12
  %1294 = add nsw i32 %1289, 8
  %1295 = sext i32 %1294 to i64
  %1296 = getelementptr inbounds float, float* %3, i64 %1295
  %1297 = bitcast float* %1296 to <8 x float>*
  %1298 = load <8 x float>, <8 x float>* %1297, align 1, !tbaa !12
  %1299 = add nsw i32 %1289, 16
  %1300 = sext i32 %1299 to i64
  %1301 = getelementptr inbounds float, float* %3, i64 %1300
  %1302 = bitcast float* %1301 to <8 x float>*
  %1303 = load <8 x float>, <8 x float>* %1302, align 1, !tbaa !12
  %1304 = add nsw i32 %1289, 24
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds float, float* %3, i64 %1305
  %1307 = bitcast float* %1306 to <8 x float>*
  %1308 = load <8 x float>, <8 x float>* %1307, align 1, !tbaa !12
  %1309 = add nsw i32 %1289, 32
  %1310 = sext i32 %1309 to i64
  %1311 = getelementptr inbounds float, float* %3, i64 %1310
  %1312 = bitcast float* %1311 to <8 x float>*
  %1313 = load <8 x float>, <8 x float>* %1312, align 1, !tbaa !12
  %1314 = add nsw i32 %1289, 40
  %1315 = sext i32 %1314 to i64
  %1316 = getelementptr inbounds float, float* %3, i64 %1315
  %1317 = bitcast float* %1316 to <8 x float>*
  %1318 = load <8 x float>, <8 x float>* %1317, align 1, !tbaa !12
  %1319 = add nsw i32 %1289, 48
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds float, float* %3, i64 %1320
  %1322 = bitcast float* %1321 to <8 x float>*
  %1323 = load <8 x float>, <8 x float>* %1322, align 1, !tbaa !12
  %1324 = add nsw i32 %1289, 56
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds float, float* %3, i64 %1325
  %1327 = bitcast float* %1326 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = add nsw i32 %1289, 64
  %1330 = sext i32 %1329 to i64
  %1331 = getelementptr inbounds float, float* %3, i64 %1330
  %1332 = bitcast float* %1331 to <8 x float>*
  %1333 = load <8 x float>, <8 x float>* %1332, align 1, !tbaa !12
  %1334 = add nsw i32 %1289, 72
  %1335 = sext i32 %1334 to i64
  %1336 = getelementptr inbounds float, float* %3, i64 %1335
  %1337 = bitcast float* %1336 to <8 x float>*
  %1338 = load <8 x float>, <8 x float>* %1337, align 1, !tbaa !12
  %1339 = add nsw i32 %1289, 80
  %1340 = sext i32 %1339 to i64
  %1341 = getelementptr inbounds float, float* %3, i64 %1340
  %1342 = bitcast float* %1341 to <8 x float>*
  %1343 = load <8 x float>, <8 x float>* %1342, align 1, !tbaa !12
  %1344 = add nsw i32 %1289, 88
  %1345 = sext i32 %1344 to i64
  %1346 = getelementptr inbounds float, float* %3, i64 %1345
  %1347 = bitcast float* %1346 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = add nsw i32 %1289, 96
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds float, float* %3, i64 %1350
  %1352 = bitcast float* %1351 to <8 x float>*
  %1353 = load <8 x float>, <8 x float>* %1352, align 1, !tbaa !12
  %1354 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1293, <8 x float> %55, <8 x float> %1239) #10
  %1355 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1298, <8 x float> %55, <8 x float> %1243) #10
  %1356 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1303, <8 x float> %55, <8 x float> %1247) #10
  %1357 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1308, <8 x float> %55, <8 x float> %1251) #10
  %1358 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1313, <8 x float> %55, <8 x float> %1255) #10
  %1359 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1318, <8 x float> %55, <8 x float> %1259) #10
  %1360 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1323, <8 x float> %55, <8 x float> %1263) #10
  %1361 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1328, <8 x float> %55, <8 x float> %1267) #10
  %1362 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1333, <8 x float> %55, <8 x float> %1271) #10
  %1363 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1338, <8 x float> %55, <8 x float> %1275) #10
  %1364 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1343, <8 x float> %55, <8 x float> %1279) #10
  %1365 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1348, <8 x float> %55, <8 x float> %1283) #10
  %1366 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1353, <8 x float> %55, <8 x float> %1287) #10
  store <8 x float> %1354, <8 x float>* %1238, align 1, !tbaa !12
  store <8 x float> %1355, <8 x float>* %1242, align 1, !tbaa !12
  store <8 x float> %1356, <8 x float>* %1246, align 1, !tbaa !12
  store <8 x float> %1357, <8 x float>* %1250, align 1, !tbaa !12
  store <8 x float> %1358, <8 x float>* %1254, align 1, !tbaa !12
  store <8 x float> %1359, <8 x float>* %1258, align 1, !tbaa !12
  store <8 x float> %1360, <8 x float>* %1262, align 1, !tbaa !12
  store <8 x float> %1361, <8 x float>* %1266, align 1, !tbaa !12
  store <8 x float> %1362, <8 x float>* %1270, align 1, !tbaa !12
  store <8 x float> %1363, <8 x float>* %1274, align 1, !tbaa !12
  store <8 x float> %1364, <8 x float>* %1278, align 1, !tbaa !12
  store <8 x float> %1365, <8 x float>* %1282, align 1, !tbaa !12
  store <8 x float> %1366, <8 x float>* %1286, align 1, !tbaa !12
  %1367 = add nuw nsw i64 %1183, 104
  %1368 = icmp ult i64 %1367, %1000
  br i1 %1368, label %1182, label %1176

1369:                                             ; preds = %1375
  br i1 %998, label %1370, label %1548

1370:                                             ; preds = %1369
  %1371 = trunc i64 %61 to i32
  %1372 = mul nsw i32 %997, %1371
  %1373 = sext i32 %1372 to i64
  %1374 = zext i32 %997 to i64
  br label %1553

1375:                                             ; preds = %1177, %1375
  %1376 = phi i64 [ 0, %1177 ], [ %1546, %1375 ]
  %1377 = getelementptr inbounds float, float* %5, i64 %1376
  %1378 = getelementptr inbounds float, float* %1377, i64 8
  %1379 = bitcast float* %1378 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1379, i32 0, i32 1, i32 1)
  %1380 = getelementptr inbounds float, float* %3, i64 %1376
  %1381 = getelementptr inbounds float, float* %1380, i64 8
  %1382 = bitcast float* %1381 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1382, i32 0, i32 1, i32 1)
  %1383 = getelementptr inbounds float, float* %1377, i64 16
  %1384 = bitcast float* %1383 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1384, i32 0, i32 1, i32 1)
  %1385 = getelementptr inbounds float, float* %1380, i64 16
  %1386 = bitcast float* %1385 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1386, i32 0, i32 1, i32 1)
  %1387 = getelementptr inbounds float, float* %1377, i64 24
  %1388 = bitcast float* %1387 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1388, i32 0, i32 1, i32 1)
  %1389 = getelementptr inbounds float, float* %1380, i64 24
  %1390 = bitcast float* %1389 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1390, i32 0, i32 1, i32 1)
  %1391 = getelementptr inbounds float, float* %1377, i64 32
  %1392 = bitcast float* %1391 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1392, i32 0, i32 1, i32 1)
  %1393 = getelementptr inbounds float, float* %1380, i64 32
  %1394 = bitcast float* %1393 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1394, i32 0, i32 1, i32 1)
  %1395 = getelementptr inbounds float, float* %1377, i64 40
  %1396 = bitcast float* %1395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1396, i32 0, i32 1, i32 1)
  %1397 = getelementptr inbounds float, float* %1380, i64 40
  %1398 = bitcast float* %1397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1398, i32 0, i32 1, i32 1)
  %1399 = getelementptr inbounds float, float* %1377, i64 48
  %1400 = bitcast float* %1399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1400, i32 0, i32 1, i32 1)
  %1401 = getelementptr inbounds float, float* %1380, i64 48
  %1402 = bitcast float* %1401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1402, i32 0, i32 1, i32 1)
  %1403 = getelementptr inbounds float, float* %1377, i64 56
  %1404 = bitcast float* %1403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1404, i32 0, i32 1, i32 1)
  %1405 = getelementptr inbounds float, float* %1380, i64 56
  %1406 = bitcast float* %1405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1406, i32 0, i32 1, i32 1)
  %1407 = getelementptr inbounds float, float* %1377, i64 64
  %1408 = bitcast float* %1407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1408, i32 0, i32 1, i32 1)
  %1409 = getelementptr inbounds float, float* %1380, i64 64
  %1410 = bitcast float* %1409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1410, i32 0, i32 1, i32 1)
  %1411 = getelementptr inbounds float, float* %1377, i64 72
  %1412 = bitcast float* %1411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1412, i32 0, i32 1, i32 1)
  %1413 = getelementptr inbounds float, float* %1380, i64 72
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %1377, i64 80
  %1416 = bitcast float* %1415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1416, i32 0, i32 1, i32 1)
  %1417 = getelementptr inbounds float, float* %1380, i64 80
  %1418 = bitcast float* %1417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1418, i32 0, i32 1, i32 1)
  %1419 = getelementptr inbounds float, float* %1377, i64 88
  %1420 = bitcast float* %1419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1420, i32 0, i32 1, i32 1)
  %1421 = getelementptr inbounds float, float* %1380, i64 88
  %1422 = bitcast float* %1421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1422, i32 0, i32 1, i32 1)
  %1423 = getelementptr inbounds float, float* %1377, i64 96
  %1424 = bitcast float* %1423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1424, i32 0, i32 1, i32 1)
  %1425 = getelementptr inbounds float, float* %1380, i64 96
  %1426 = bitcast float* %1425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1426, i32 0, i32 1, i32 1)
  %1427 = getelementptr inbounds float, float* %1377, i64 104
  %1428 = bitcast float* %1427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1428, i32 0, i32 1, i32 1)
  %1429 = getelementptr inbounds float, float* %1380, i64 104
  %1430 = bitcast float* %1429 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1430, i32 0, i32 1, i32 1)
  %1431 = bitcast float* %1377 to <8 x float>*
  %1432 = load <8 x float>, <8 x float>* %1431, align 1, !tbaa !12
  %1433 = add nuw nsw i64 %1376, 8
  %1434 = getelementptr inbounds float, float* %5, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = add nuw nsw i64 %1376, 16
  %1438 = getelementptr inbounds float, float* %5, i64 %1437
  %1439 = bitcast float* %1438 to <8 x float>*
  %1440 = load <8 x float>, <8 x float>* %1439, align 1, !tbaa !12
  %1441 = add nuw nsw i64 %1376, 24
  %1442 = getelementptr inbounds float, float* %5, i64 %1441
  %1443 = bitcast float* %1442 to <8 x float>*
  %1444 = load <8 x float>, <8 x float>* %1443, align 1, !tbaa !12
  %1445 = add nuw nsw i64 %1376, 32
  %1446 = getelementptr inbounds float, float* %5, i64 %1445
  %1447 = bitcast float* %1446 to <8 x float>*
  %1448 = load <8 x float>, <8 x float>* %1447, align 1, !tbaa !12
  %1449 = add nuw nsw i64 %1376, 40
  %1450 = getelementptr inbounds float, float* %5, i64 %1449
  %1451 = bitcast float* %1450 to <8 x float>*
  %1452 = load <8 x float>, <8 x float>* %1451, align 1, !tbaa !12
  %1453 = add nuw nsw i64 %1376, 48
  %1454 = getelementptr inbounds float, float* %5, i64 %1453
  %1455 = bitcast float* %1454 to <8 x float>*
  %1456 = load <8 x float>, <8 x float>* %1455, align 1, !tbaa !12
  %1457 = add nuw nsw i64 %1376, 56
  %1458 = getelementptr inbounds float, float* %5, i64 %1457
  %1459 = bitcast float* %1458 to <8 x float>*
  %1460 = load <8 x float>, <8 x float>* %1459, align 1, !tbaa !12
  %1461 = add nuw nsw i64 %1376, 64
  %1462 = getelementptr inbounds float, float* %5, i64 %1461
  %1463 = bitcast float* %1462 to <8 x float>*
  %1464 = load <8 x float>, <8 x float>* %1463, align 1, !tbaa !12
  %1465 = add nuw nsw i64 %1376, 72
  %1466 = getelementptr inbounds float, float* %5, i64 %1465
  %1467 = bitcast float* %1466 to <8 x float>*
  %1468 = load <8 x float>, <8 x float>* %1467, align 1, !tbaa !12
  %1469 = add nuw nsw i64 %1376, 80
  %1470 = getelementptr inbounds float, float* %5, i64 %1469
  %1471 = bitcast float* %1470 to <8 x float>*
  %1472 = load <8 x float>, <8 x float>* %1471, align 1, !tbaa !12
  %1473 = add nuw nsw i64 %1376, 88
  %1474 = getelementptr inbounds float, float* %5, i64 %1473
  %1475 = bitcast float* %1474 to <8 x float>*
  %1476 = load <8 x float>, <8 x float>* %1475, align 1, !tbaa !12
  %1477 = add nuw nsw i64 %1376, 96
  %1478 = getelementptr inbounds float, float* %5, i64 %1477
  %1479 = bitcast float* %1478 to <8 x float>*
  %1480 = load <8 x float>, <8 x float>* %1479, align 1, !tbaa !12
  %1481 = add nsw i64 %1376, %1180
  %1482 = getelementptr inbounds float, float* %3, i64 %1481
  %1483 = bitcast float* %1482 to <8 x float>*
  %1484 = load <8 x float>, <8 x float>* %1483, align 1, !tbaa !12
  %1485 = add nsw i64 %1481, 8
  %1486 = getelementptr inbounds float, float* %3, i64 %1485
  %1487 = bitcast float* %1486 to <8 x float>*
  %1488 = load <8 x float>, <8 x float>* %1487, align 1, !tbaa !12
  %1489 = add nsw i64 %1481, 16
  %1490 = getelementptr inbounds float, float* %3, i64 %1489
  %1491 = bitcast float* %1490 to <8 x float>*
  %1492 = load <8 x float>, <8 x float>* %1491, align 1, !tbaa !12
  %1493 = add nsw i64 %1481, 24
  %1494 = getelementptr inbounds float, float* %3, i64 %1493
  %1495 = bitcast float* %1494 to <8 x float>*
  %1496 = load <8 x float>, <8 x float>* %1495, align 1, !tbaa !12
  %1497 = add nsw i64 %1481, 32
  %1498 = getelementptr inbounds float, float* %3, i64 %1497
  %1499 = bitcast float* %1498 to <8 x float>*
  %1500 = load <8 x float>, <8 x float>* %1499, align 1, !tbaa !12
  %1501 = add nsw i64 %1481, 40
  %1502 = getelementptr inbounds float, float* %3, i64 %1501
  %1503 = bitcast float* %1502 to <8 x float>*
  %1504 = load <8 x float>, <8 x float>* %1503, align 1, !tbaa !12
  %1505 = add nsw i64 %1481, 48
  %1506 = getelementptr inbounds float, float* %3, i64 %1505
  %1507 = bitcast float* %1506 to <8 x float>*
  %1508 = load <8 x float>, <8 x float>* %1507, align 1, !tbaa !12
  %1509 = add nsw i64 %1481, 56
  %1510 = getelementptr inbounds float, float* %3, i64 %1509
  %1511 = bitcast float* %1510 to <8 x float>*
  %1512 = load <8 x float>, <8 x float>* %1511, align 1, !tbaa !12
  %1513 = add nsw i64 %1481, 64
  %1514 = getelementptr inbounds float, float* %3, i64 %1513
  %1515 = bitcast float* %1514 to <8 x float>*
  %1516 = load <8 x float>, <8 x float>* %1515, align 1, !tbaa !12
  %1517 = add nsw i64 %1481, 72
  %1518 = getelementptr inbounds float, float* %3, i64 %1517
  %1519 = bitcast float* %1518 to <8 x float>*
  %1520 = load <8 x float>, <8 x float>* %1519, align 1, !tbaa !12
  %1521 = add nsw i64 %1481, 80
  %1522 = getelementptr inbounds float, float* %3, i64 %1521
  %1523 = bitcast float* %1522 to <8 x float>*
  %1524 = load <8 x float>, <8 x float>* %1523, align 1, !tbaa !12
  %1525 = add nsw i64 %1481, 88
  %1526 = getelementptr inbounds float, float* %3, i64 %1525
  %1527 = bitcast float* %1526 to <8 x float>*
  %1528 = load <8 x float>, <8 x float>* %1527, align 1, !tbaa !12
  %1529 = add nsw i64 %1481, 96
  %1530 = getelementptr inbounds float, float* %3, i64 %1529
  %1531 = bitcast float* %1530 to <8 x float>*
  %1532 = load <8 x float>, <8 x float>* %1531, align 1, !tbaa !12
  %1533 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1484, <8 x float> %60, <8 x float> %1432) #10
  %1534 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1488, <8 x float> %60, <8 x float> %1436) #10
  %1535 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1492, <8 x float> %60, <8 x float> %1440) #10
  %1536 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1496, <8 x float> %60, <8 x float> %1444) #10
  %1537 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1500, <8 x float> %60, <8 x float> %1448) #10
  %1538 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1504, <8 x float> %60, <8 x float> %1452) #10
  %1539 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1508, <8 x float> %60, <8 x float> %1456) #10
  %1540 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1512, <8 x float> %60, <8 x float> %1460) #10
  %1541 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1516, <8 x float> %60, <8 x float> %1464) #10
  %1542 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1520, <8 x float> %60, <8 x float> %1468) #10
  %1543 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1524, <8 x float> %60, <8 x float> %1472) #10
  %1544 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1528, <8 x float> %60, <8 x float> %1476) #10
  %1545 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1532, <8 x float> %60, <8 x float> %1480) #10
  store <8 x float> %1533, <8 x float>* %1431, align 1, !tbaa !12
  store <8 x float> %1534, <8 x float>* %1435, align 1, !tbaa !12
  store <8 x float> %1535, <8 x float>* %1439, align 1, !tbaa !12
  store <8 x float> %1536, <8 x float>* %1443, align 1, !tbaa !12
  store <8 x float> %1537, <8 x float>* %1447, align 1, !tbaa !12
  store <8 x float> %1538, <8 x float>* %1451, align 1, !tbaa !12
  store <8 x float> %1539, <8 x float>* %1455, align 1, !tbaa !12
  store <8 x float> %1540, <8 x float>* %1459, align 1, !tbaa !12
  store <8 x float> %1541, <8 x float>* %1463, align 1, !tbaa !12
  store <8 x float> %1542, <8 x float>* %1467, align 1, !tbaa !12
  store <8 x float> %1543, <8 x float>* %1471, align 1, !tbaa !12
  store <8 x float> %1544, <8 x float>* %1475, align 1, !tbaa !12
  store <8 x float> %1545, <8 x float>* %1479, align 1, !tbaa !12
  %1546 = add nuw nsw i64 %1376, 104
  %1547 = icmp ult i64 %1546, %1181
  br i1 %1547, label %1375, label %1369

1548:                                             ; preds = %1553, %20, %444, %996, %1176, %1369
  %1549 = add nuw nsw i64 %21, 9
  %1550 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1551 = sext i32 %1550 to i64
  %1552 = icmp slt i64 %1549, %1551
  br i1 %1552, label %20, label %8

1553:                                             ; preds = %1370, %1553
  %1554 = phi i64 [ 0, %1370 ], [ %1724, %1553 ]
  %1555 = getelementptr inbounds float, float* %5, i64 %1554
  %1556 = getelementptr inbounds float, float* %1555, i64 8
  %1557 = bitcast float* %1556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1557, i32 0, i32 1, i32 1)
  %1558 = getelementptr inbounds float, float* %3, i64 %1554
  %1559 = getelementptr inbounds float, float* %1558, i64 8
  %1560 = bitcast float* %1559 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1560, i32 0, i32 1, i32 1)
  %1561 = getelementptr inbounds float, float* %1555, i64 16
  %1562 = bitcast float* %1561 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1562, i32 0, i32 1, i32 1)
  %1563 = getelementptr inbounds float, float* %1558, i64 16
  %1564 = bitcast float* %1563 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1564, i32 0, i32 1, i32 1)
  %1565 = getelementptr inbounds float, float* %1555, i64 24
  %1566 = bitcast float* %1565 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1566, i32 0, i32 1, i32 1)
  %1567 = getelementptr inbounds float, float* %1558, i64 24
  %1568 = bitcast float* %1567 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1568, i32 0, i32 1, i32 1)
  %1569 = getelementptr inbounds float, float* %1555, i64 32
  %1570 = bitcast float* %1569 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1570, i32 0, i32 1, i32 1)
  %1571 = getelementptr inbounds float, float* %1558, i64 32
  %1572 = bitcast float* %1571 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1572, i32 0, i32 1, i32 1)
  %1573 = getelementptr inbounds float, float* %1555, i64 40
  %1574 = bitcast float* %1573 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1574, i32 0, i32 1, i32 1)
  %1575 = getelementptr inbounds float, float* %1558, i64 40
  %1576 = bitcast float* %1575 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1576, i32 0, i32 1, i32 1)
  %1577 = getelementptr inbounds float, float* %1555, i64 48
  %1578 = bitcast float* %1577 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1578, i32 0, i32 1, i32 1)
  %1579 = getelementptr inbounds float, float* %1558, i64 48
  %1580 = bitcast float* %1579 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1580, i32 0, i32 1, i32 1)
  %1581 = getelementptr inbounds float, float* %1555, i64 56
  %1582 = bitcast float* %1581 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1582, i32 0, i32 1, i32 1)
  %1583 = getelementptr inbounds float, float* %1558, i64 56
  %1584 = bitcast float* %1583 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1584, i32 0, i32 1, i32 1)
  %1585 = getelementptr inbounds float, float* %1555, i64 64
  %1586 = bitcast float* %1585 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1586, i32 0, i32 1, i32 1)
  %1587 = getelementptr inbounds float, float* %1558, i64 64
  %1588 = bitcast float* %1587 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1588, i32 0, i32 1, i32 1)
  %1589 = getelementptr inbounds float, float* %1555, i64 72
  %1590 = bitcast float* %1589 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1590, i32 0, i32 1, i32 1)
  %1591 = getelementptr inbounds float, float* %1558, i64 72
  %1592 = bitcast float* %1591 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1592, i32 0, i32 1, i32 1)
  %1593 = getelementptr inbounds float, float* %1555, i64 80
  %1594 = bitcast float* %1593 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1594, i32 0, i32 1, i32 1)
  %1595 = getelementptr inbounds float, float* %1558, i64 80
  %1596 = bitcast float* %1595 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1596, i32 0, i32 1, i32 1)
  %1597 = getelementptr inbounds float, float* %1555, i64 88
  %1598 = bitcast float* %1597 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1598, i32 0, i32 1, i32 1)
  %1599 = getelementptr inbounds float, float* %1558, i64 88
  %1600 = bitcast float* %1599 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1600, i32 0, i32 1, i32 1)
  %1601 = getelementptr inbounds float, float* %1555, i64 96
  %1602 = bitcast float* %1601 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1602, i32 0, i32 1, i32 1)
  %1603 = getelementptr inbounds float, float* %1558, i64 96
  %1604 = bitcast float* %1603 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1604, i32 0, i32 1, i32 1)
  %1605 = getelementptr inbounds float, float* %1555, i64 104
  %1606 = bitcast float* %1605 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1606, i32 0, i32 1, i32 1)
  %1607 = getelementptr inbounds float, float* %1558, i64 104
  %1608 = bitcast float* %1607 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1608, i32 0, i32 1, i32 1)
  %1609 = bitcast float* %1555 to <8 x float>*
  %1610 = load <8 x float>, <8 x float>* %1609, align 1, !tbaa !12
  %1611 = add nuw nsw i64 %1554, 8
  %1612 = getelementptr inbounds float, float* %5, i64 %1611
  %1613 = bitcast float* %1612 to <8 x float>*
  %1614 = load <8 x float>, <8 x float>* %1613, align 1, !tbaa !12
  %1615 = add nuw nsw i64 %1554, 16
  %1616 = getelementptr inbounds float, float* %5, i64 %1615
  %1617 = bitcast float* %1616 to <8 x float>*
  %1618 = load <8 x float>, <8 x float>* %1617, align 1, !tbaa !12
  %1619 = add nuw nsw i64 %1554, 24
  %1620 = getelementptr inbounds float, float* %5, i64 %1619
  %1621 = bitcast float* %1620 to <8 x float>*
  %1622 = load <8 x float>, <8 x float>* %1621, align 1, !tbaa !12
  %1623 = add nuw nsw i64 %1554, 32
  %1624 = getelementptr inbounds float, float* %5, i64 %1623
  %1625 = bitcast float* %1624 to <8 x float>*
  %1626 = load <8 x float>, <8 x float>* %1625, align 1, !tbaa !12
  %1627 = add nuw nsw i64 %1554, 40
  %1628 = getelementptr inbounds float, float* %5, i64 %1627
  %1629 = bitcast float* %1628 to <8 x float>*
  %1630 = load <8 x float>, <8 x float>* %1629, align 1, !tbaa !12
  %1631 = add nuw nsw i64 %1554, 48
  %1632 = getelementptr inbounds float, float* %5, i64 %1631
  %1633 = bitcast float* %1632 to <8 x float>*
  %1634 = load <8 x float>, <8 x float>* %1633, align 1, !tbaa !12
  %1635 = add nuw nsw i64 %1554, 56
  %1636 = getelementptr inbounds float, float* %5, i64 %1635
  %1637 = bitcast float* %1636 to <8 x float>*
  %1638 = load <8 x float>, <8 x float>* %1637, align 1, !tbaa !12
  %1639 = add nuw nsw i64 %1554, 64
  %1640 = getelementptr inbounds float, float* %5, i64 %1639
  %1641 = bitcast float* %1640 to <8 x float>*
  %1642 = load <8 x float>, <8 x float>* %1641, align 1, !tbaa !12
  %1643 = add nuw nsw i64 %1554, 72
  %1644 = getelementptr inbounds float, float* %5, i64 %1643
  %1645 = bitcast float* %1644 to <8 x float>*
  %1646 = load <8 x float>, <8 x float>* %1645, align 1, !tbaa !12
  %1647 = add nuw nsw i64 %1554, 80
  %1648 = getelementptr inbounds float, float* %5, i64 %1647
  %1649 = bitcast float* %1648 to <8 x float>*
  %1650 = load <8 x float>, <8 x float>* %1649, align 1, !tbaa !12
  %1651 = add nuw nsw i64 %1554, 88
  %1652 = getelementptr inbounds float, float* %5, i64 %1651
  %1653 = bitcast float* %1652 to <8 x float>*
  %1654 = load <8 x float>, <8 x float>* %1653, align 1, !tbaa !12
  %1655 = add nuw nsw i64 %1554, 96
  %1656 = getelementptr inbounds float, float* %5, i64 %1655
  %1657 = bitcast float* %1656 to <8 x float>*
  %1658 = load <8 x float>, <8 x float>* %1657, align 1, !tbaa !12
  %1659 = add nsw i64 %1554, %1373
  %1660 = getelementptr inbounds float, float* %3, i64 %1659
  %1661 = bitcast float* %1660 to <8 x float>*
  %1662 = load <8 x float>, <8 x float>* %1661, align 1, !tbaa !12
  %1663 = add nsw i64 %1659, 8
  %1664 = getelementptr inbounds float, float* %3, i64 %1663
  %1665 = bitcast float* %1664 to <8 x float>*
  %1666 = load <8 x float>, <8 x float>* %1665, align 1, !tbaa !12
  %1667 = add nsw i64 %1659, 16
  %1668 = getelementptr inbounds float, float* %3, i64 %1667
  %1669 = bitcast float* %1668 to <8 x float>*
  %1670 = load <8 x float>, <8 x float>* %1669, align 1, !tbaa !12
  %1671 = add nsw i64 %1659, 24
  %1672 = getelementptr inbounds float, float* %3, i64 %1671
  %1673 = bitcast float* %1672 to <8 x float>*
  %1674 = load <8 x float>, <8 x float>* %1673, align 1, !tbaa !12
  %1675 = add nsw i64 %1659, 32
  %1676 = getelementptr inbounds float, float* %3, i64 %1675
  %1677 = bitcast float* %1676 to <8 x float>*
  %1678 = load <8 x float>, <8 x float>* %1677, align 1, !tbaa !12
  %1679 = add nsw i64 %1659, 40
  %1680 = getelementptr inbounds float, float* %3, i64 %1679
  %1681 = bitcast float* %1680 to <8 x float>*
  %1682 = load <8 x float>, <8 x float>* %1681, align 1, !tbaa !12
  %1683 = add nsw i64 %1659, 48
  %1684 = getelementptr inbounds float, float* %3, i64 %1683
  %1685 = bitcast float* %1684 to <8 x float>*
  %1686 = load <8 x float>, <8 x float>* %1685, align 1, !tbaa !12
  %1687 = add nsw i64 %1659, 56
  %1688 = getelementptr inbounds float, float* %3, i64 %1687
  %1689 = bitcast float* %1688 to <8 x float>*
  %1690 = load <8 x float>, <8 x float>* %1689, align 1, !tbaa !12
  %1691 = add nsw i64 %1659, 64
  %1692 = getelementptr inbounds float, float* %3, i64 %1691
  %1693 = bitcast float* %1692 to <8 x float>*
  %1694 = load <8 x float>, <8 x float>* %1693, align 1, !tbaa !12
  %1695 = add nsw i64 %1659, 72
  %1696 = getelementptr inbounds float, float* %3, i64 %1695
  %1697 = bitcast float* %1696 to <8 x float>*
  %1698 = load <8 x float>, <8 x float>* %1697, align 1, !tbaa !12
  %1699 = add nsw i64 %1659, 80
  %1700 = getelementptr inbounds float, float* %3, i64 %1699
  %1701 = bitcast float* %1700 to <8 x float>*
  %1702 = load <8 x float>, <8 x float>* %1701, align 1, !tbaa !12
  %1703 = add nsw i64 %1659, 88
  %1704 = getelementptr inbounds float, float* %3, i64 %1703
  %1705 = bitcast float* %1704 to <8 x float>*
  %1706 = load <8 x float>, <8 x float>* %1705, align 1, !tbaa !12
  %1707 = add nsw i64 %1659, 96
  %1708 = getelementptr inbounds float, float* %3, i64 %1707
  %1709 = bitcast float* %1708 to <8 x float>*
  %1710 = load <8 x float>, <8 x float>* %1709, align 1, !tbaa !12
  %1711 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1662, <8 x float> %65, <8 x float> %1610) #10
  %1712 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1666, <8 x float> %65, <8 x float> %1614) #10
  %1713 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1670, <8 x float> %65, <8 x float> %1618) #10
  %1714 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1674, <8 x float> %65, <8 x float> %1622) #10
  %1715 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1678, <8 x float> %65, <8 x float> %1626) #10
  %1716 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1682, <8 x float> %65, <8 x float> %1630) #10
  %1717 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1686, <8 x float> %65, <8 x float> %1634) #10
  %1718 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1690, <8 x float> %65, <8 x float> %1638) #10
  %1719 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1694, <8 x float> %65, <8 x float> %1642) #10
  %1720 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1698, <8 x float> %65, <8 x float> %1646) #10
  %1721 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1702, <8 x float> %65, <8 x float> %1650) #10
  %1722 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1706, <8 x float> %65, <8 x float> %1654) #10
  %1723 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1710, <8 x float> %65, <8 x float> %1658) #10
  store <8 x float> %1711, <8 x float>* %1609, align 1, !tbaa !12
  store <8 x float> %1712, <8 x float>* %1613, align 1, !tbaa !12
  store <8 x float> %1713, <8 x float>* %1617, align 1, !tbaa !12
  store <8 x float> %1714, <8 x float>* %1621, align 1, !tbaa !12
  store <8 x float> %1715, <8 x float>* %1625, align 1, !tbaa !12
  store <8 x float> %1716, <8 x float>* %1629, align 1, !tbaa !12
  store <8 x float> %1717, <8 x float>* %1633, align 1, !tbaa !12
  store <8 x float> %1718, <8 x float>* %1637, align 1, !tbaa !12
  store <8 x float> %1719, <8 x float>* %1641, align 1, !tbaa !12
  store <8 x float> %1720, <8 x float>* %1645, align 1, !tbaa !12
  store <8 x float> %1721, <8 x float>* %1649, align 1, !tbaa !12
  store <8 x float> %1722, <8 x float>* %1653, align 1, !tbaa !12
  store <8 x float> %1723, <8 x float>* %1657, align 1, !tbaa !12
  %1724 = add nuw nsw i64 %1554, 104
  %1725 = icmp ult i64 %1724, %1374
  br i1 %1725, label %1553, label %1548
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 243
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui13_uk9.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
