; ModuleID = 'codes/matvec_ui9_uk12.cpp'
source_filename = "codes/matvec_ui9_uk12.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui9_uk12.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 72
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 96
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1516, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1516
  %21 = phi i64 [ %1517, %1516 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = or i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = or i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = or i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %1516

83:                                               ; preds = %20
  %84 = zext i32 %81 to i64
  %85 = trunc i64 %21 to i32
  %86 = mul nsw i32 %81, %85
  br label %93

87:                                               ; preds = %93
  br i1 %82, label %88, label %478

88:                                               ; preds = %87
  %89 = trunc i64 %26 to i32
  %90 = mul nsw i32 %81, %89
  %91 = sext i32 %90 to i64
  %92 = zext i32 %81 to i64
  br label %230

93:                                               ; preds = %83, %93
  %94 = phi i64 [ 0, %83 ], [ %222, %93 ]
  %95 = getelementptr inbounds float, float* %5, i64 %94
  %96 = getelementptr inbounds float, float* %95, i64 8
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %3, i64 %94
  %99 = getelementptr inbounds float, float* %98, i64 8
  %100 = bitcast float* %99 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %100, i32 0, i32 1, i32 1)
  %101 = getelementptr inbounds float, float* %95, i64 16
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %98, i64 16
  %104 = bitcast float* %103 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %104, i32 0, i32 1, i32 1)
  %105 = getelementptr inbounds float, float* %95, i64 24
  %106 = bitcast float* %105 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %106, i32 0, i32 1, i32 1)
  %107 = getelementptr inbounds float, float* %98, i64 24
  %108 = bitcast float* %107 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %108, i32 0, i32 1, i32 1)
  %109 = getelementptr inbounds float, float* %95, i64 32
  %110 = bitcast float* %109 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %110, i32 0, i32 1, i32 1)
  %111 = getelementptr inbounds float, float* %98, i64 32
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %95, i64 40
  %114 = bitcast float* %113 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %114, i32 0, i32 1, i32 1)
  %115 = getelementptr inbounds float, float* %98, i64 40
  %116 = bitcast float* %115 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %116, i32 0, i32 1, i32 1)
  %117 = getelementptr inbounds float, float* %95, i64 48
  %118 = bitcast float* %117 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %118, i32 0, i32 1, i32 1)
  %119 = getelementptr inbounds float, float* %98, i64 48
  %120 = bitcast float* %119 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %120, i32 0, i32 1, i32 1)
  %121 = getelementptr inbounds float, float* %95, i64 56
  %122 = bitcast float* %121 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %122, i32 0, i32 1, i32 1)
  %123 = getelementptr inbounds float, float* %98, i64 56
  %124 = bitcast float* %123 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %124, i32 0, i32 1, i32 1)
  %125 = getelementptr inbounds float, float* %95, i64 64
  %126 = bitcast float* %125 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %126, i32 0, i32 1, i32 1)
  %127 = getelementptr inbounds float, float* %98, i64 64
  %128 = bitcast float* %127 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %128, i32 0, i32 1, i32 1)
  %129 = getelementptr inbounds float, float* %95, i64 72
  %130 = bitcast float* %129 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %130, i32 0, i32 1, i32 1)
  %131 = getelementptr inbounds float, float* %98, i64 72
  %132 = bitcast float* %131 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %132, i32 0, i32 1, i32 1)
  %133 = bitcast float* %95 to <8 x float>*
  %134 = load <8 x float>, <8 x float>* %133, align 1, !tbaa !12
  %135 = add nuw nsw i64 %94, 8
  %136 = getelementptr inbounds float, float* %5, i64 %135
  %137 = bitcast float* %136 to <8 x float>*
  %138 = load <8 x float>, <8 x float>* %137, align 1, !tbaa !12
  %139 = add nuw nsw i64 %94, 16
  %140 = getelementptr inbounds float, float* %5, i64 %139
  %141 = bitcast float* %140 to <8 x float>*
  %142 = load <8 x float>, <8 x float>* %141, align 1, !tbaa !12
  %143 = add nuw nsw i64 %94, 24
  %144 = getelementptr inbounds float, float* %5, i64 %143
  %145 = bitcast float* %144 to <8 x float>*
  %146 = load <8 x float>, <8 x float>* %145, align 1, !tbaa !12
  %147 = add nuw nsw i64 %94, 32
  %148 = getelementptr inbounds float, float* %5, i64 %147
  %149 = bitcast float* %148 to <8 x float>*
  %150 = load <8 x float>, <8 x float>* %149, align 1, !tbaa !12
  %151 = add nuw nsw i64 %94, 40
  %152 = getelementptr inbounds float, float* %5, i64 %151
  %153 = bitcast float* %152 to <8 x float>*
  %154 = load <8 x float>, <8 x float>* %153, align 1, !tbaa !12
  %155 = add nuw nsw i64 %94, 48
  %156 = getelementptr inbounds float, float* %5, i64 %155
  %157 = bitcast float* %156 to <8 x float>*
  %158 = load <8 x float>, <8 x float>* %157, align 1, !tbaa !12
  %159 = add nuw nsw i64 %94, 56
  %160 = getelementptr inbounds float, float* %5, i64 %159
  %161 = bitcast float* %160 to <8 x float>*
  %162 = load <8 x float>, <8 x float>* %161, align 1, !tbaa !12
  %163 = add nuw nsw i64 %94, 64
  %164 = getelementptr inbounds float, float* %5, i64 %163
  %165 = bitcast float* %164 to <8 x float>*
  %166 = load <8 x float>, <8 x float>* %165, align 1, !tbaa !12
  %167 = trunc i64 %94 to i32
  %168 = add nsw i32 %86, %167
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds float, float* %3, i64 %169
  %171 = bitcast float* %170 to <8 x float>*
  %172 = load <8 x float>, <8 x float>* %171, align 1, !tbaa !12
  %173 = add nsw i32 %168, 8
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds float, float* %3, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nsw i32 %168, 16
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds float, float* %3, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = add nsw i32 %168, 24
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds float, float* %3, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = add nsw i32 %168, 32
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %3, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nsw i32 %168, 40
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %3, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = add nsw i32 %168, 48
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %3, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nsw i32 %168, 56
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = add nsw i32 %168, 64
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %172, <8 x float> %25, <8 x float> %134) #10
  %214 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %177, <8 x float> %25, <8 x float> %138) #10
  %215 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %182, <8 x float> %25, <8 x float> %142) #10
  %216 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %187, <8 x float> %25, <8 x float> %146) #10
  %217 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %192, <8 x float> %25, <8 x float> %150) #10
  %218 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %197, <8 x float> %25, <8 x float> %154) #10
  %219 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %202, <8 x float> %25, <8 x float> %158) #10
  %220 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %162) #10
  %221 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %166) #10
  store <8 x float> %213, <8 x float>* %133, align 1, !tbaa !12
  store <8 x float> %214, <8 x float>* %137, align 1, !tbaa !12
  store <8 x float> %215, <8 x float>* %141, align 1, !tbaa !12
  store <8 x float> %216, <8 x float>* %145, align 1, !tbaa !12
  store <8 x float> %217, <8 x float>* %149, align 1, !tbaa !12
  store <8 x float> %218, <8 x float>* %153, align 1, !tbaa !12
  store <8 x float> %219, <8 x float>* %157, align 1, !tbaa !12
  store <8 x float> %220, <8 x float>* %161, align 1, !tbaa !12
  store <8 x float> %221, <8 x float>* %165, align 1, !tbaa !12
  %222 = add nuw nsw i64 %94, 72
  %223 = icmp ult i64 %222, %84
  br i1 %223, label %93, label %87

224:                                              ; preds = %230
  br i1 %82, label %225, label %478

225:                                              ; preds = %224
  %226 = trunc i64 %31 to i32
  %227 = mul nsw i32 %81, %226
  %228 = sext i32 %227 to i64
  %229 = zext i32 %81 to i64
  br label %357

230:                                              ; preds = %88, %230
  %231 = phi i64 [ 0, %88 ], [ %349, %230 ]
  %232 = getelementptr inbounds float, float* %5, i64 %231
  %233 = getelementptr inbounds float, float* %232, i64 8
  %234 = bitcast float* %233 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %234, i32 0, i32 1, i32 1)
  %235 = getelementptr inbounds float, float* %3, i64 %231
  %236 = getelementptr inbounds float, float* %235, i64 8
  %237 = bitcast float* %236 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %237, i32 0, i32 1, i32 1)
  %238 = getelementptr inbounds float, float* %232, i64 16
  %239 = bitcast float* %238 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %239, i32 0, i32 1, i32 1)
  %240 = getelementptr inbounds float, float* %235, i64 16
  %241 = bitcast float* %240 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %241, i32 0, i32 1, i32 1)
  %242 = getelementptr inbounds float, float* %232, i64 24
  %243 = bitcast float* %242 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %243, i32 0, i32 1, i32 1)
  %244 = getelementptr inbounds float, float* %235, i64 24
  %245 = bitcast float* %244 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %245, i32 0, i32 1, i32 1)
  %246 = getelementptr inbounds float, float* %232, i64 32
  %247 = bitcast float* %246 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %247, i32 0, i32 1, i32 1)
  %248 = getelementptr inbounds float, float* %235, i64 32
  %249 = bitcast float* %248 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %249, i32 0, i32 1, i32 1)
  %250 = getelementptr inbounds float, float* %232, i64 40
  %251 = bitcast float* %250 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %251, i32 0, i32 1, i32 1)
  %252 = getelementptr inbounds float, float* %235, i64 40
  %253 = bitcast float* %252 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %253, i32 0, i32 1, i32 1)
  %254 = getelementptr inbounds float, float* %232, i64 48
  %255 = bitcast float* %254 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %255, i32 0, i32 1, i32 1)
  %256 = getelementptr inbounds float, float* %235, i64 48
  %257 = bitcast float* %256 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %257, i32 0, i32 1, i32 1)
  %258 = getelementptr inbounds float, float* %232, i64 56
  %259 = bitcast float* %258 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %259, i32 0, i32 1, i32 1)
  %260 = getelementptr inbounds float, float* %235, i64 56
  %261 = bitcast float* %260 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %261, i32 0, i32 1, i32 1)
  %262 = getelementptr inbounds float, float* %232, i64 64
  %263 = bitcast float* %262 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %263, i32 0, i32 1, i32 1)
  %264 = getelementptr inbounds float, float* %235, i64 64
  %265 = bitcast float* %264 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %265, i32 0, i32 1, i32 1)
  %266 = getelementptr inbounds float, float* %232, i64 72
  %267 = bitcast float* %266 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %267, i32 0, i32 1, i32 1)
  %268 = getelementptr inbounds float, float* %235, i64 72
  %269 = bitcast float* %268 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %269, i32 0, i32 1, i32 1)
  %270 = bitcast float* %232 to <8 x float>*
  %271 = load <8 x float>, <8 x float>* %270, align 1, !tbaa !12
  %272 = add nuw nsw i64 %231, 8
  %273 = getelementptr inbounds float, float* %5, i64 %272
  %274 = bitcast float* %273 to <8 x float>*
  %275 = load <8 x float>, <8 x float>* %274, align 1, !tbaa !12
  %276 = add nuw nsw i64 %231, 16
  %277 = getelementptr inbounds float, float* %5, i64 %276
  %278 = bitcast float* %277 to <8 x float>*
  %279 = load <8 x float>, <8 x float>* %278, align 1, !tbaa !12
  %280 = add nuw nsw i64 %231, 24
  %281 = getelementptr inbounds float, float* %5, i64 %280
  %282 = bitcast float* %281 to <8 x float>*
  %283 = load <8 x float>, <8 x float>* %282, align 1, !tbaa !12
  %284 = add nuw nsw i64 %231, 32
  %285 = getelementptr inbounds float, float* %5, i64 %284
  %286 = bitcast float* %285 to <8 x float>*
  %287 = load <8 x float>, <8 x float>* %286, align 1, !tbaa !12
  %288 = add nuw nsw i64 %231, 40
  %289 = getelementptr inbounds float, float* %5, i64 %288
  %290 = bitcast float* %289 to <8 x float>*
  %291 = load <8 x float>, <8 x float>* %290, align 1, !tbaa !12
  %292 = add nuw nsw i64 %231, 48
  %293 = getelementptr inbounds float, float* %5, i64 %292
  %294 = bitcast float* %293 to <8 x float>*
  %295 = load <8 x float>, <8 x float>* %294, align 1, !tbaa !12
  %296 = add nuw nsw i64 %231, 56
  %297 = getelementptr inbounds float, float* %5, i64 %296
  %298 = bitcast float* %297 to <8 x float>*
  %299 = load <8 x float>, <8 x float>* %298, align 1, !tbaa !12
  %300 = add nuw nsw i64 %231, 64
  %301 = getelementptr inbounds float, float* %5, i64 %300
  %302 = bitcast float* %301 to <8 x float>*
  %303 = load <8 x float>, <8 x float>* %302, align 1, !tbaa !12
  %304 = add nsw i64 %231, %91
  %305 = getelementptr inbounds float, float* %3, i64 %304
  %306 = bitcast float* %305 to <8 x float>*
  %307 = load <8 x float>, <8 x float>* %306, align 1, !tbaa !12
  %308 = add nsw i64 %304, 8
  %309 = getelementptr inbounds float, float* %3, i64 %308
  %310 = bitcast float* %309 to <8 x float>*
  %311 = load <8 x float>, <8 x float>* %310, align 1, !tbaa !12
  %312 = add nsw i64 %304, 16
  %313 = getelementptr inbounds float, float* %3, i64 %312
  %314 = bitcast float* %313 to <8 x float>*
  %315 = load <8 x float>, <8 x float>* %314, align 1, !tbaa !12
  %316 = add nsw i64 %304, 24
  %317 = getelementptr inbounds float, float* %3, i64 %316
  %318 = bitcast float* %317 to <8 x float>*
  %319 = load <8 x float>, <8 x float>* %318, align 1, !tbaa !12
  %320 = add nsw i64 %304, 32
  %321 = getelementptr inbounds float, float* %3, i64 %320
  %322 = bitcast float* %321 to <8 x float>*
  %323 = load <8 x float>, <8 x float>* %322, align 1, !tbaa !12
  %324 = add nsw i64 %304, 40
  %325 = getelementptr inbounds float, float* %3, i64 %324
  %326 = bitcast float* %325 to <8 x float>*
  %327 = load <8 x float>, <8 x float>* %326, align 1, !tbaa !12
  %328 = add nsw i64 %304, 48
  %329 = getelementptr inbounds float, float* %3, i64 %328
  %330 = bitcast float* %329 to <8 x float>*
  %331 = load <8 x float>, <8 x float>* %330, align 1, !tbaa !12
  %332 = add nsw i64 %304, 56
  %333 = getelementptr inbounds float, float* %3, i64 %332
  %334 = bitcast float* %333 to <8 x float>*
  %335 = load <8 x float>, <8 x float>* %334, align 1, !tbaa !12
  %336 = add nsw i64 %304, 64
  %337 = getelementptr inbounds float, float* %3, i64 %336
  %338 = bitcast float* %337 to <8 x float>*
  %339 = load <8 x float>, <8 x float>* %338, align 1, !tbaa !12
  %340 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %307, <8 x float> %30, <8 x float> %271) #10
  %341 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %311, <8 x float> %30, <8 x float> %275) #10
  %342 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %315, <8 x float> %30, <8 x float> %279) #10
  %343 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %319, <8 x float> %30, <8 x float> %283) #10
  %344 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %323, <8 x float> %30, <8 x float> %287) #10
  %345 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %327, <8 x float> %30, <8 x float> %291) #10
  %346 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %331, <8 x float> %30, <8 x float> %295) #10
  %347 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %335, <8 x float> %30, <8 x float> %299) #10
  %348 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %339, <8 x float> %30, <8 x float> %303) #10
  store <8 x float> %340, <8 x float>* %270, align 1, !tbaa !12
  store <8 x float> %341, <8 x float>* %274, align 1, !tbaa !12
  store <8 x float> %342, <8 x float>* %278, align 1, !tbaa !12
  store <8 x float> %343, <8 x float>* %282, align 1, !tbaa !12
  store <8 x float> %344, <8 x float>* %286, align 1, !tbaa !12
  store <8 x float> %345, <8 x float>* %290, align 1, !tbaa !12
  store <8 x float> %346, <8 x float>* %294, align 1, !tbaa !12
  store <8 x float> %347, <8 x float>* %298, align 1, !tbaa !12
  store <8 x float> %348, <8 x float>* %302, align 1, !tbaa !12
  %349 = add nuw nsw i64 %231, 72
  %350 = icmp ult i64 %349, %92
  br i1 %350, label %230, label %224

351:                                              ; preds = %357
  br i1 %82, label %352, label %478

352:                                              ; preds = %351
  %353 = trunc i64 %36 to i32
  %354 = mul nsw i32 %81, %353
  %355 = sext i32 %354 to i64
  %356 = zext i32 %81 to i64
  br label %485

357:                                              ; preds = %225, %357
  %358 = phi i64 [ 0, %225 ], [ %476, %357 ]
  %359 = getelementptr inbounds float, float* %5, i64 %358
  %360 = getelementptr inbounds float, float* %359, i64 8
  %361 = bitcast float* %360 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %361, i32 0, i32 1, i32 1)
  %362 = getelementptr inbounds float, float* %3, i64 %358
  %363 = getelementptr inbounds float, float* %362, i64 8
  %364 = bitcast float* %363 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %364, i32 0, i32 1, i32 1)
  %365 = getelementptr inbounds float, float* %359, i64 16
  %366 = bitcast float* %365 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %366, i32 0, i32 1, i32 1)
  %367 = getelementptr inbounds float, float* %362, i64 16
  %368 = bitcast float* %367 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %368, i32 0, i32 1, i32 1)
  %369 = getelementptr inbounds float, float* %359, i64 24
  %370 = bitcast float* %369 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %370, i32 0, i32 1, i32 1)
  %371 = getelementptr inbounds float, float* %362, i64 24
  %372 = bitcast float* %371 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %372, i32 0, i32 1, i32 1)
  %373 = getelementptr inbounds float, float* %359, i64 32
  %374 = bitcast float* %373 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %374, i32 0, i32 1, i32 1)
  %375 = getelementptr inbounds float, float* %362, i64 32
  %376 = bitcast float* %375 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %376, i32 0, i32 1, i32 1)
  %377 = getelementptr inbounds float, float* %359, i64 40
  %378 = bitcast float* %377 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %378, i32 0, i32 1, i32 1)
  %379 = getelementptr inbounds float, float* %362, i64 40
  %380 = bitcast float* %379 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %380, i32 0, i32 1, i32 1)
  %381 = getelementptr inbounds float, float* %359, i64 48
  %382 = bitcast float* %381 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %382, i32 0, i32 1, i32 1)
  %383 = getelementptr inbounds float, float* %362, i64 48
  %384 = bitcast float* %383 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %384, i32 0, i32 1, i32 1)
  %385 = getelementptr inbounds float, float* %359, i64 56
  %386 = bitcast float* %385 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %386, i32 0, i32 1, i32 1)
  %387 = getelementptr inbounds float, float* %362, i64 56
  %388 = bitcast float* %387 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %388, i32 0, i32 1, i32 1)
  %389 = getelementptr inbounds float, float* %359, i64 64
  %390 = bitcast float* %389 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %390, i32 0, i32 1, i32 1)
  %391 = getelementptr inbounds float, float* %362, i64 64
  %392 = bitcast float* %391 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %392, i32 0, i32 1, i32 1)
  %393 = getelementptr inbounds float, float* %359, i64 72
  %394 = bitcast float* %393 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %394, i32 0, i32 1, i32 1)
  %395 = getelementptr inbounds float, float* %362, i64 72
  %396 = bitcast float* %395 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %396, i32 0, i32 1, i32 1)
  %397 = bitcast float* %359 to <8 x float>*
  %398 = load <8 x float>, <8 x float>* %397, align 1, !tbaa !12
  %399 = add nuw nsw i64 %358, 8
  %400 = getelementptr inbounds float, float* %5, i64 %399
  %401 = bitcast float* %400 to <8 x float>*
  %402 = load <8 x float>, <8 x float>* %401, align 1, !tbaa !12
  %403 = add nuw nsw i64 %358, 16
  %404 = getelementptr inbounds float, float* %5, i64 %403
  %405 = bitcast float* %404 to <8 x float>*
  %406 = load <8 x float>, <8 x float>* %405, align 1, !tbaa !12
  %407 = add nuw nsw i64 %358, 24
  %408 = getelementptr inbounds float, float* %5, i64 %407
  %409 = bitcast float* %408 to <8 x float>*
  %410 = load <8 x float>, <8 x float>* %409, align 1, !tbaa !12
  %411 = add nuw nsw i64 %358, 32
  %412 = getelementptr inbounds float, float* %5, i64 %411
  %413 = bitcast float* %412 to <8 x float>*
  %414 = load <8 x float>, <8 x float>* %413, align 1, !tbaa !12
  %415 = add nuw nsw i64 %358, 40
  %416 = getelementptr inbounds float, float* %5, i64 %415
  %417 = bitcast float* %416 to <8 x float>*
  %418 = load <8 x float>, <8 x float>* %417, align 1, !tbaa !12
  %419 = add nuw nsw i64 %358, 48
  %420 = getelementptr inbounds float, float* %5, i64 %419
  %421 = bitcast float* %420 to <8 x float>*
  %422 = load <8 x float>, <8 x float>* %421, align 1, !tbaa !12
  %423 = add nuw nsw i64 %358, 56
  %424 = getelementptr inbounds float, float* %5, i64 %423
  %425 = bitcast float* %424 to <8 x float>*
  %426 = load <8 x float>, <8 x float>* %425, align 1, !tbaa !12
  %427 = add nuw nsw i64 %358, 64
  %428 = getelementptr inbounds float, float* %5, i64 %427
  %429 = bitcast float* %428 to <8 x float>*
  %430 = load <8 x float>, <8 x float>* %429, align 1, !tbaa !12
  %431 = add nsw i64 %358, %228
  %432 = getelementptr inbounds float, float* %3, i64 %431
  %433 = bitcast float* %432 to <8 x float>*
  %434 = load <8 x float>, <8 x float>* %433, align 1, !tbaa !12
  %435 = add nsw i64 %431, 8
  %436 = getelementptr inbounds float, float* %3, i64 %435
  %437 = bitcast float* %436 to <8 x float>*
  %438 = load <8 x float>, <8 x float>* %437, align 1, !tbaa !12
  %439 = add nsw i64 %431, 16
  %440 = getelementptr inbounds float, float* %3, i64 %439
  %441 = bitcast float* %440 to <8 x float>*
  %442 = load <8 x float>, <8 x float>* %441, align 1, !tbaa !12
  %443 = add nsw i64 %431, 24
  %444 = getelementptr inbounds float, float* %3, i64 %443
  %445 = bitcast float* %444 to <8 x float>*
  %446 = load <8 x float>, <8 x float>* %445, align 1, !tbaa !12
  %447 = add nsw i64 %431, 32
  %448 = getelementptr inbounds float, float* %3, i64 %447
  %449 = bitcast float* %448 to <8 x float>*
  %450 = load <8 x float>, <8 x float>* %449, align 1, !tbaa !12
  %451 = add nsw i64 %431, 40
  %452 = getelementptr inbounds float, float* %3, i64 %451
  %453 = bitcast float* %452 to <8 x float>*
  %454 = load <8 x float>, <8 x float>* %453, align 1, !tbaa !12
  %455 = add nsw i64 %431, 48
  %456 = getelementptr inbounds float, float* %3, i64 %455
  %457 = bitcast float* %456 to <8 x float>*
  %458 = load <8 x float>, <8 x float>* %457, align 1, !tbaa !12
  %459 = add nsw i64 %431, 56
  %460 = getelementptr inbounds float, float* %3, i64 %459
  %461 = bitcast float* %460 to <8 x float>*
  %462 = load <8 x float>, <8 x float>* %461, align 1, !tbaa !12
  %463 = add nsw i64 %431, 64
  %464 = getelementptr inbounds float, float* %3, i64 %463
  %465 = bitcast float* %464 to <8 x float>*
  %466 = load <8 x float>, <8 x float>* %465, align 1, !tbaa !12
  %467 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %434, <8 x float> %35, <8 x float> %398) #10
  %468 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %438, <8 x float> %35, <8 x float> %402) #10
  %469 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %442, <8 x float> %35, <8 x float> %406) #10
  %470 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %446, <8 x float> %35, <8 x float> %410) #10
  %471 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %450, <8 x float> %35, <8 x float> %414) #10
  %472 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %454, <8 x float> %35, <8 x float> %418) #10
  %473 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %458, <8 x float> %35, <8 x float> %422) #10
  %474 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %462, <8 x float> %35, <8 x float> %426) #10
  %475 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %466, <8 x float> %35, <8 x float> %430) #10
  store <8 x float> %467, <8 x float>* %397, align 1, !tbaa !12
  store <8 x float> %468, <8 x float>* %401, align 1, !tbaa !12
  store <8 x float> %469, <8 x float>* %405, align 1, !tbaa !12
  store <8 x float> %470, <8 x float>* %409, align 1, !tbaa !12
  store <8 x float> %471, <8 x float>* %413, align 1, !tbaa !12
  store <8 x float> %472, <8 x float>* %417, align 1, !tbaa !12
  store <8 x float> %473, <8 x float>* %421, align 1, !tbaa !12
  store <8 x float> %474, <8 x float>* %425, align 1, !tbaa !12
  store <8 x float> %475, <8 x float>* %429, align 1, !tbaa !12
  %476 = add nuw nsw i64 %358, 72
  %477 = icmp ult i64 %476, %229
  br i1 %477, label %357, label %351

478:                                              ; preds = %485, %87, %224, %351
  %479 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %480 = icmp sgt i32 %479, 0
  br i1 %480, label %481, label %1516

481:                                              ; preds = %478
  %482 = zext i32 %479 to i64
  %483 = trunc i64 %41 to i32
  %484 = mul nsw i32 %479, %483
  br label %612

485:                                              ; preds = %352, %485
  %486 = phi i64 [ 0, %352 ], [ %604, %485 ]
  %487 = getelementptr inbounds float, float* %5, i64 %486
  %488 = getelementptr inbounds float, float* %487, i64 8
  %489 = bitcast float* %488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %489, i32 0, i32 1, i32 1)
  %490 = getelementptr inbounds float, float* %3, i64 %486
  %491 = getelementptr inbounds float, float* %490, i64 8
  %492 = bitcast float* %491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %492, i32 0, i32 1, i32 1)
  %493 = getelementptr inbounds float, float* %487, i64 16
  %494 = bitcast float* %493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %494, i32 0, i32 1, i32 1)
  %495 = getelementptr inbounds float, float* %490, i64 16
  %496 = bitcast float* %495 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %496, i32 0, i32 1, i32 1)
  %497 = getelementptr inbounds float, float* %487, i64 24
  %498 = bitcast float* %497 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %498, i32 0, i32 1, i32 1)
  %499 = getelementptr inbounds float, float* %490, i64 24
  %500 = bitcast float* %499 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %500, i32 0, i32 1, i32 1)
  %501 = getelementptr inbounds float, float* %487, i64 32
  %502 = bitcast float* %501 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %502, i32 0, i32 1, i32 1)
  %503 = getelementptr inbounds float, float* %490, i64 32
  %504 = bitcast float* %503 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %504, i32 0, i32 1, i32 1)
  %505 = getelementptr inbounds float, float* %487, i64 40
  %506 = bitcast float* %505 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %506, i32 0, i32 1, i32 1)
  %507 = getelementptr inbounds float, float* %490, i64 40
  %508 = bitcast float* %507 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %508, i32 0, i32 1, i32 1)
  %509 = getelementptr inbounds float, float* %487, i64 48
  %510 = bitcast float* %509 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %510, i32 0, i32 1, i32 1)
  %511 = getelementptr inbounds float, float* %490, i64 48
  %512 = bitcast float* %511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %512, i32 0, i32 1, i32 1)
  %513 = getelementptr inbounds float, float* %487, i64 56
  %514 = bitcast float* %513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %514, i32 0, i32 1, i32 1)
  %515 = getelementptr inbounds float, float* %490, i64 56
  %516 = bitcast float* %515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %516, i32 0, i32 1, i32 1)
  %517 = getelementptr inbounds float, float* %487, i64 64
  %518 = bitcast float* %517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %518, i32 0, i32 1, i32 1)
  %519 = getelementptr inbounds float, float* %490, i64 64
  %520 = bitcast float* %519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %520, i32 0, i32 1, i32 1)
  %521 = getelementptr inbounds float, float* %487, i64 72
  %522 = bitcast float* %521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %522, i32 0, i32 1, i32 1)
  %523 = getelementptr inbounds float, float* %490, i64 72
  %524 = bitcast float* %523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %524, i32 0, i32 1, i32 1)
  %525 = bitcast float* %487 to <8 x float>*
  %526 = load <8 x float>, <8 x float>* %525, align 1, !tbaa !12
  %527 = add nuw nsw i64 %486, 8
  %528 = getelementptr inbounds float, float* %5, i64 %527
  %529 = bitcast float* %528 to <8 x float>*
  %530 = load <8 x float>, <8 x float>* %529, align 1, !tbaa !12
  %531 = add nuw nsw i64 %486, 16
  %532 = getelementptr inbounds float, float* %5, i64 %531
  %533 = bitcast float* %532 to <8 x float>*
  %534 = load <8 x float>, <8 x float>* %533, align 1, !tbaa !12
  %535 = add nuw nsw i64 %486, 24
  %536 = getelementptr inbounds float, float* %5, i64 %535
  %537 = bitcast float* %536 to <8 x float>*
  %538 = load <8 x float>, <8 x float>* %537, align 1, !tbaa !12
  %539 = add nuw nsw i64 %486, 32
  %540 = getelementptr inbounds float, float* %5, i64 %539
  %541 = bitcast float* %540 to <8 x float>*
  %542 = load <8 x float>, <8 x float>* %541, align 1, !tbaa !12
  %543 = add nuw nsw i64 %486, 40
  %544 = getelementptr inbounds float, float* %5, i64 %543
  %545 = bitcast float* %544 to <8 x float>*
  %546 = load <8 x float>, <8 x float>* %545, align 1, !tbaa !12
  %547 = add nuw nsw i64 %486, 48
  %548 = getelementptr inbounds float, float* %5, i64 %547
  %549 = bitcast float* %548 to <8 x float>*
  %550 = load <8 x float>, <8 x float>* %549, align 1, !tbaa !12
  %551 = add nuw nsw i64 %486, 56
  %552 = getelementptr inbounds float, float* %5, i64 %551
  %553 = bitcast float* %552 to <8 x float>*
  %554 = load <8 x float>, <8 x float>* %553, align 1, !tbaa !12
  %555 = add nuw nsw i64 %486, 64
  %556 = getelementptr inbounds float, float* %5, i64 %555
  %557 = bitcast float* %556 to <8 x float>*
  %558 = load <8 x float>, <8 x float>* %557, align 1, !tbaa !12
  %559 = add nsw i64 %486, %355
  %560 = getelementptr inbounds float, float* %3, i64 %559
  %561 = bitcast float* %560 to <8 x float>*
  %562 = load <8 x float>, <8 x float>* %561, align 1, !tbaa !12
  %563 = add nsw i64 %559, 8
  %564 = getelementptr inbounds float, float* %3, i64 %563
  %565 = bitcast float* %564 to <8 x float>*
  %566 = load <8 x float>, <8 x float>* %565, align 1, !tbaa !12
  %567 = add nsw i64 %559, 16
  %568 = getelementptr inbounds float, float* %3, i64 %567
  %569 = bitcast float* %568 to <8 x float>*
  %570 = load <8 x float>, <8 x float>* %569, align 1, !tbaa !12
  %571 = add nsw i64 %559, 24
  %572 = getelementptr inbounds float, float* %3, i64 %571
  %573 = bitcast float* %572 to <8 x float>*
  %574 = load <8 x float>, <8 x float>* %573, align 1, !tbaa !12
  %575 = add nsw i64 %559, 32
  %576 = getelementptr inbounds float, float* %3, i64 %575
  %577 = bitcast float* %576 to <8 x float>*
  %578 = load <8 x float>, <8 x float>* %577, align 1, !tbaa !12
  %579 = add nsw i64 %559, 40
  %580 = getelementptr inbounds float, float* %3, i64 %579
  %581 = bitcast float* %580 to <8 x float>*
  %582 = load <8 x float>, <8 x float>* %581, align 1, !tbaa !12
  %583 = add nsw i64 %559, 48
  %584 = getelementptr inbounds float, float* %3, i64 %583
  %585 = bitcast float* %584 to <8 x float>*
  %586 = load <8 x float>, <8 x float>* %585, align 1, !tbaa !12
  %587 = add nsw i64 %559, 56
  %588 = getelementptr inbounds float, float* %3, i64 %587
  %589 = bitcast float* %588 to <8 x float>*
  %590 = load <8 x float>, <8 x float>* %589, align 1, !tbaa !12
  %591 = add nsw i64 %559, 64
  %592 = getelementptr inbounds float, float* %3, i64 %591
  %593 = bitcast float* %592 to <8 x float>*
  %594 = load <8 x float>, <8 x float>* %593, align 1, !tbaa !12
  %595 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %562, <8 x float> %40, <8 x float> %526) #10
  %596 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %566, <8 x float> %40, <8 x float> %530) #10
  %597 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %570, <8 x float> %40, <8 x float> %534) #10
  %598 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %574, <8 x float> %40, <8 x float> %538) #10
  %599 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %578, <8 x float> %40, <8 x float> %542) #10
  %600 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %582, <8 x float> %40, <8 x float> %546) #10
  %601 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %586, <8 x float> %40, <8 x float> %550) #10
  %602 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %590, <8 x float> %40, <8 x float> %554) #10
  %603 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %594, <8 x float> %40, <8 x float> %558) #10
  store <8 x float> %595, <8 x float>* %525, align 1, !tbaa !12
  store <8 x float> %596, <8 x float>* %529, align 1, !tbaa !12
  store <8 x float> %597, <8 x float>* %533, align 1, !tbaa !12
  store <8 x float> %598, <8 x float>* %537, align 1, !tbaa !12
  store <8 x float> %599, <8 x float>* %541, align 1, !tbaa !12
  store <8 x float> %600, <8 x float>* %545, align 1, !tbaa !12
  store <8 x float> %601, <8 x float>* %549, align 1, !tbaa !12
  store <8 x float> %602, <8 x float>* %553, align 1, !tbaa !12
  store <8 x float> %603, <8 x float>* %557, align 1, !tbaa !12
  %604 = add nuw nsw i64 %486, 72
  %605 = icmp ult i64 %604, %356
  br i1 %605, label %485, label %478

606:                                              ; preds = %612
  br i1 %480, label %607, label %997

607:                                              ; preds = %606
  %608 = trunc i64 %46 to i32
  %609 = mul nsw i32 %479, %608
  %610 = sext i32 %609 to i64
  %611 = zext i32 %479 to i64
  br label %749

612:                                              ; preds = %481, %612
  %613 = phi i64 [ 0, %481 ], [ %741, %612 ]
  %614 = getelementptr inbounds float, float* %5, i64 %613
  %615 = getelementptr inbounds float, float* %614, i64 8
  %616 = bitcast float* %615 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %616, i32 0, i32 1, i32 1)
  %617 = getelementptr inbounds float, float* %3, i64 %613
  %618 = getelementptr inbounds float, float* %617, i64 8
  %619 = bitcast float* %618 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %619, i32 0, i32 1, i32 1)
  %620 = getelementptr inbounds float, float* %614, i64 16
  %621 = bitcast float* %620 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %621, i32 0, i32 1, i32 1)
  %622 = getelementptr inbounds float, float* %617, i64 16
  %623 = bitcast float* %622 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %623, i32 0, i32 1, i32 1)
  %624 = getelementptr inbounds float, float* %614, i64 24
  %625 = bitcast float* %624 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %625, i32 0, i32 1, i32 1)
  %626 = getelementptr inbounds float, float* %617, i64 24
  %627 = bitcast float* %626 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %627, i32 0, i32 1, i32 1)
  %628 = getelementptr inbounds float, float* %614, i64 32
  %629 = bitcast float* %628 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %629, i32 0, i32 1, i32 1)
  %630 = getelementptr inbounds float, float* %617, i64 32
  %631 = bitcast float* %630 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %631, i32 0, i32 1, i32 1)
  %632 = getelementptr inbounds float, float* %614, i64 40
  %633 = bitcast float* %632 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %633, i32 0, i32 1, i32 1)
  %634 = getelementptr inbounds float, float* %617, i64 40
  %635 = bitcast float* %634 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %635, i32 0, i32 1, i32 1)
  %636 = getelementptr inbounds float, float* %614, i64 48
  %637 = bitcast float* %636 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %637, i32 0, i32 1, i32 1)
  %638 = getelementptr inbounds float, float* %617, i64 48
  %639 = bitcast float* %638 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %639, i32 0, i32 1, i32 1)
  %640 = getelementptr inbounds float, float* %614, i64 56
  %641 = bitcast float* %640 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %641, i32 0, i32 1, i32 1)
  %642 = getelementptr inbounds float, float* %617, i64 56
  %643 = bitcast float* %642 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %643, i32 0, i32 1, i32 1)
  %644 = getelementptr inbounds float, float* %614, i64 64
  %645 = bitcast float* %644 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %645, i32 0, i32 1, i32 1)
  %646 = getelementptr inbounds float, float* %617, i64 64
  %647 = bitcast float* %646 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %647, i32 0, i32 1, i32 1)
  %648 = getelementptr inbounds float, float* %614, i64 72
  %649 = bitcast float* %648 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %649, i32 0, i32 1, i32 1)
  %650 = getelementptr inbounds float, float* %617, i64 72
  %651 = bitcast float* %650 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %651, i32 0, i32 1, i32 1)
  %652 = bitcast float* %614 to <8 x float>*
  %653 = load <8 x float>, <8 x float>* %652, align 1, !tbaa !12
  %654 = add nuw nsw i64 %613, 8
  %655 = getelementptr inbounds float, float* %5, i64 %654
  %656 = bitcast float* %655 to <8 x float>*
  %657 = load <8 x float>, <8 x float>* %656, align 1, !tbaa !12
  %658 = add nuw nsw i64 %613, 16
  %659 = getelementptr inbounds float, float* %5, i64 %658
  %660 = bitcast float* %659 to <8 x float>*
  %661 = load <8 x float>, <8 x float>* %660, align 1, !tbaa !12
  %662 = add nuw nsw i64 %613, 24
  %663 = getelementptr inbounds float, float* %5, i64 %662
  %664 = bitcast float* %663 to <8 x float>*
  %665 = load <8 x float>, <8 x float>* %664, align 1, !tbaa !12
  %666 = add nuw nsw i64 %613, 32
  %667 = getelementptr inbounds float, float* %5, i64 %666
  %668 = bitcast float* %667 to <8 x float>*
  %669 = load <8 x float>, <8 x float>* %668, align 1, !tbaa !12
  %670 = add nuw nsw i64 %613, 40
  %671 = getelementptr inbounds float, float* %5, i64 %670
  %672 = bitcast float* %671 to <8 x float>*
  %673 = load <8 x float>, <8 x float>* %672, align 1, !tbaa !12
  %674 = add nuw nsw i64 %613, 48
  %675 = getelementptr inbounds float, float* %5, i64 %674
  %676 = bitcast float* %675 to <8 x float>*
  %677 = load <8 x float>, <8 x float>* %676, align 1, !tbaa !12
  %678 = add nuw nsw i64 %613, 56
  %679 = getelementptr inbounds float, float* %5, i64 %678
  %680 = bitcast float* %679 to <8 x float>*
  %681 = load <8 x float>, <8 x float>* %680, align 1, !tbaa !12
  %682 = add nuw nsw i64 %613, 64
  %683 = getelementptr inbounds float, float* %5, i64 %682
  %684 = bitcast float* %683 to <8 x float>*
  %685 = load <8 x float>, <8 x float>* %684, align 1, !tbaa !12
  %686 = trunc i64 %613 to i32
  %687 = add nsw i32 %484, %686
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds float, float* %3, i64 %688
  %690 = bitcast float* %689 to <8 x float>*
  %691 = load <8 x float>, <8 x float>* %690, align 1, !tbaa !12
  %692 = add nsw i32 %687, 8
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds float, float* %3, i64 %693
  %695 = bitcast float* %694 to <8 x float>*
  %696 = load <8 x float>, <8 x float>* %695, align 1, !tbaa !12
  %697 = add nsw i32 %687, 16
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds float, float* %3, i64 %698
  %700 = bitcast float* %699 to <8 x float>*
  %701 = load <8 x float>, <8 x float>* %700, align 1, !tbaa !12
  %702 = add nsw i32 %687, 24
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds float, float* %3, i64 %703
  %705 = bitcast float* %704 to <8 x float>*
  %706 = load <8 x float>, <8 x float>* %705, align 1, !tbaa !12
  %707 = add nsw i32 %687, 32
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds float, float* %3, i64 %708
  %710 = bitcast float* %709 to <8 x float>*
  %711 = load <8 x float>, <8 x float>* %710, align 1, !tbaa !12
  %712 = add nsw i32 %687, 40
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds float, float* %3, i64 %713
  %715 = bitcast float* %714 to <8 x float>*
  %716 = load <8 x float>, <8 x float>* %715, align 1, !tbaa !12
  %717 = add nsw i32 %687, 48
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds float, float* %3, i64 %718
  %720 = bitcast float* %719 to <8 x float>*
  %721 = load <8 x float>, <8 x float>* %720, align 1, !tbaa !12
  %722 = add nsw i32 %687, 56
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds float, float* %3, i64 %723
  %725 = bitcast float* %724 to <8 x float>*
  %726 = load <8 x float>, <8 x float>* %725, align 1, !tbaa !12
  %727 = add nsw i32 %687, 64
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds float, float* %3, i64 %728
  %730 = bitcast float* %729 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %691, <8 x float> %45, <8 x float> %653) #10
  %733 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %696, <8 x float> %45, <8 x float> %657) #10
  %734 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %701, <8 x float> %45, <8 x float> %661) #10
  %735 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %706, <8 x float> %45, <8 x float> %665) #10
  %736 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %711, <8 x float> %45, <8 x float> %669) #10
  %737 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %716, <8 x float> %45, <8 x float> %673) #10
  %738 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %721, <8 x float> %45, <8 x float> %677) #10
  %739 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %726, <8 x float> %45, <8 x float> %681) #10
  %740 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %731, <8 x float> %45, <8 x float> %685) #10
  store <8 x float> %732, <8 x float>* %652, align 1, !tbaa !12
  store <8 x float> %733, <8 x float>* %656, align 1, !tbaa !12
  store <8 x float> %734, <8 x float>* %660, align 1, !tbaa !12
  store <8 x float> %735, <8 x float>* %664, align 1, !tbaa !12
  store <8 x float> %736, <8 x float>* %668, align 1, !tbaa !12
  store <8 x float> %737, <8 x float>* %672, align 1, !tbaa !12
  store <8 x float> %738, <8 x float>* %676, align 1, !tbaa !12
  store <8 x float> %739, <8 x float>* %680, align 1, !tbaa !12
  store <8 x float> %740, <8 x float>* %684, align 1, !tbaa !12
  %741 = add nuw nsw i64 %613, 72
  %742 = icmp ult i64 %741, %482
  br i1 %742, label %612, label %606

743:                                              ; preds = %749
  br i1 %480, label %744, label %997

744:                                              ; preds = %743
  %745 = trunc i64 %51 to i32
  %746 = mul nsw i32 %479, %745
  %747 = sext i32 %746 to i64
  %748 = zext i32 %479 to i64
  br label %876

749:                                              ; preds = %607, %749
  %750 = phi i64 [ 0, %607 ], [ %868, %749 ]
  %751 = getelementptr inbounds float, float* %5, i64 %750
  %752 = getelementptr inbounds float, float* %751, i64 8
  %753 = bitcast float* %752 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %753, i32 0, i32 1, i32 1)
  %754 = getelementptr inbounds float, float* %3, i64 %750
  %755 = getelementptr inbounds float, float* %754, i64 8
  %756 = bitcast float* %755 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %756, i32 0, i32 1, i32 1)
  %757 = getelementptr inbounds float, float* %751, i64 16
  %758 = bitcast float* %757 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %758, i32 0, i32 1, i32 1)
  %759 = getelementptr inbounds float, float* %754, i64 16
  %760 = bitcast float* %759 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %760, i32 0, i32 1, i32 1)
  %761 = getelementptr inbounds float, float* %751, i64 24
  %762 = bitcast float* %761 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %762, i32 0, i32 1, i32 1)
  %763 = getelementptr inbounds float, float* %754, i64 24
  %764 = bitcast float* %763 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %764, i32 0, i32 1, i32 1)
  %765 = getelementptr inbounds float, float* %751, i64 32
  %766 = bitcast float* %765 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %766, i32 0, i32 1, i32 1)
  %767 = getelementptr inbounds float, float* %754, i64 32
  %768 = bitcast float* %767 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %768, i32 0, i32 1, i32 1)
  %769 = getelementptr inbounds float, float* %751, i64 40
  %770 = bitcast float* %769 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %770, i32 0, i32 1, i32 1)
  %771 = getelementptr inbounds float, float* %754, i64 40
  %772 = bitcast float* %771 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %772, i32 0, i32 1, i32 1)
  %773 = getelementptr inbounds float, float* %751, i64 48
  %774 = bitcast float* %773 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %774, i32 0, i32 1, i32 1)
  %775 = getelementptr inbounds float, float* %754, i64 48
  %776 = bitcast float* %775 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %776, i32 0, i32 1, i32 1)
  %777 = getelementptr inbounds float, float* %751, i64 56
  %778 = bitcast float* %777 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %778, i32 0, i32 1, i32 1)
  %779 = getelementptr inbounds float, float* %754, i64 56
  %780 = bitcast float* %779 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %780, i32 0, i32 1, i32 1)
  %781 = getelementptr inbounds float, float* %751, i64 64
  %782 = bitcast float* %781 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %782, i32 0, i32 1, i32 1)
  %783 = getelementptr inbounds float, float* %754, i64 64
  %784 = bitcast float* %783 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %784, i32 0, i32 1, i32 1)
  %785 = getelementptr inbounds float, float* %751, i64 72
  %786 = bitcast float* %785 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %786, i32 0, i32 1, i32 1)
  %787 = getelementptr inbounds float, float* %754, i64 72
  %788 = bitcast float* %787 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %788, i32 0, i32 1, i32 1)
  %789 = bitcast float* %751 to <8 x float>*
  %790 = load <8 x float>, <8 x float>* %789, align 1, !tbaa !12
  %791 = add nuw nsw i64 %750, 8
  %792 = getelementptr inbounds float, float* %5, i64 %791
  %793 = bitcast float* %792 to <8 x float>*
  %794 = load <8 x float>, <8 x float>* %793, align 1, !tbaa !12
  %795 = add nuw nsw i64 %750, 16
  %796 = getelementptr inbounds float, float* %5, i64 %795
  %797 = bitcast float* %796 to <8 x float>*
  %798 = load <8 x float>, <8 x float>* %797, align 1, !tbaa !12
  %799 = add nuw nsw i64 %750, 24
  %800 = getelementptr inbounds float, float* %5, i64 %799
  %801 = bitcast float* %800 to <8 x float>*
  %802 = load <8 x float>, <8 x float>* %801, align 1, !tbaa !12
  %803 = add nuw nsw i64 %750, 32
  %804 = getelementptr inbounds float, float* %5, i64 %803
  %805 = bitcast float* %804 to <8 x float>*
  %806 = load <8 x float>, <8 x float>* %805, align 1, !tbaa !12
  %807 = add nuw nsw i64 %750, 40
  %808 = getelementptr inbounds float, float* %5, i64 %807
  %809 = bitcast float* %808 to <8 x float>*
  %810 = load <8 x float>, <8 x float>* %809, align 1, !tbaa !12
  %811 = add nuw nsw i64 %750, 48
  %812 = getelementptr inbounds float, float* %5, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %814 = load <8 x float>, <8 x float>* %813, align 1, !tbaa !12
  %815 = add nuw nsw i64 %750, 56
  %816 = getelementptr inbounds float, float* %5, i64 %815
  %817 = bitcast float* %816 to <8 x float>*
  %818 = load <8 x float>, <8 x float>* %817, align 1, !tbaa !12
  %819 = add nuw nsw i64 %750, 64
  %820 = getelementptr inbounds float, float* %5, i64 %819
  %821 = bitcast float* %820 to <8 x float>*
  %822 = load <8 x float>, <8 x float>* %821, align 1, !tbaa !12
  %823 = add nsw i64 %750, %610
  %824 = getelementptr inbounds float, float* %3, i64 %823
  %825 = bitcast float* %824 to <8 x float>*
  %826 = load <8 x float>, <8 x float>* %825, align 1, !tbaa !12
  %827 = add nsw i64 %823, 8
  %828 = getelementptr inbounds float, float* %3, i64 %827
  %829 = bitcast float* %828 to <8 x float>*
  %830 = load <8 x float>, <8 x float>* %829, align 1, !tbaa !12
  %831 = add nsw i64 %823, 16
  %832 = getelementptr inbounds float, float* %3, i64 %831
  %833 = bitcast float* %832 to <8 x float>*
  %834 = load <8 x float>, <8 x float>* %833, align 1, !tbaa !12
  %835 = add nsw i64 %823, 24
  %836 = getelementptr inbounds float, float* %3, i64 %835
  %837 = bitcast float* %836 to <8 x float>*
  %838 = load <8 x float>, <8 x float>* %837, align 1, !tbaa !12
  %839 = add nsw i64 %823, 32
  %840 = getelementptr inbounds float, float* %3, i64 %839
  %841 = bitcast float* %840 to <8 x float>*
  %842 = load <8 x float>, <8 x float>* %841, align 1, !tbaa !12
  %843 = add nsw i64 %823, 40
  %844 = getelementptr inbounds float, float* %3, i64 %843
  %845 = bitcast float* %844 to <8 x float>*
  %846 = load <8 x float>, <8 x float>* %845, align 1, !tbaa !12
  %847 = add nsw i64 %823, 48
  %848 = getelementptr inbounds float, float* %3, i64 %847
  %849 = bitcast float* %848 to <8 x float>*
  %850 = load <8 x float>, <8 x float>* %849, align 1, !tbaa !12
  %851 = add nsw i64 %823, 56
  %852 = getelementptr inbounds float, float* %3, i64 %851
  %853 = bitcast float* %852 to <8 x float>*
  %854 = load <8 x float>, <8 x float>* %853, align 1, !tbaa !12
  %855 = add nsw i64 %823, 64
  %856 = getelementptr inbounds float, float* %3, i64 %855
  %857 = bitcast float* %856 to <8 x float>*
  %858 = load <8 x float>, <8 x float>* %857, align 1, !tbaa !12
  %859 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %826, <8 x float> %50, <8 x float> %790) #10
  %860 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %830, <8 x float> %50, <8 x float> %794) #10
  %861 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %834, <8 x float> %50, <8 x float> %798) #10
  %862 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %838, <8 x float> %50, <8 x float> %802) #10
  %863 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %842, <8 x float> %50, <8 x float> %806) #10
  %864 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %846, <8 x float> %50, <8 x float> %810) #10
  %865 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %850, <8 x float> %50, <8 x float> %814) #10
  %866 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %854, <8 x float> %50, <8 x float> %818) #10
  %867 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %858, <8 x float> %50, <8 x float> %822) #10
  store <8 x float> %859, <8 x float>* %789, align 1, !tbaa !12
  store <8 x float> %860, <8 x float>* %793, align 1, !tbaa !12
  store <8 x float> %861, <8 x float>* %797, align 1, !tbaa !12
  store <8 x float> %862, <8 x float>* %801, align 1, !tbaa !12
  store <8 x float> %863, <8 x float>* %805, align 1, !tbaa !12
  store <8 x float> %864, <8 x float>* %809, align 1, !tbaa !12
  store <8 x float> %865, <8 x float>* %813, align 1, !tbaa !12
  store <8 x float> %866, <8 x float>* %817, align 1, !tbaa !12
  store <8 x float> %867, <8 x float>* %821, align 1, !tbaa !12
  %868 = add nuw nsw i64 %750, 72
  %869 = icmp ult i64 %868, %611
  br i1 %869, label %749, label %743

870:                                              ; preds = %876
  br i1 %480, label %871, label %997

871:                                              ; preds = %870
  %872 = trunc i64 %56 to i32
  %873 = mul nsw i32 %479, %872
  %874 = sext i32 %873 to i64
  %875 = zext i32 %479 to i64
  br label %1004

876:                                              ; preds = %744, %876
  %877 = phi i64 [ 0, %744 ], [ %995, %876 ]
  %878 = getelementptr inbounds float, float* %5, i64 %877
  %879 = getelementptr inbounds float, float* %878, i64 8
  %880 = bitcast float* %879 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %880, i32 0, i32 1, i32 1)
  %881 = getelementptr inbounds float, float* %3, i64 %877
  %882 = getelementptr inbounds float, float* %881, i64 8
  %883 = bitcast float* %882 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %883, i32 0, i32 1, i32 1)
  %884 = getelementptr inbounds float, float* %878, i64 16
  %885 = bitcast float* %884 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %885, i32 0, i32 1, i32 1)
  %886 = getelementptr inbounds float, float* %881, i64 16
  %887 = bitcast float* %886 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %887, i32 0, i32 1, i32 1)
  %888 = getelementptr inbounds float, float* %878, i64 24
  %889 = bitcast float* %888 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %889, i32 0, i32 1, i32 1)
  %890 = getelementptr inbounds float, float* %881, i64 24
  %891 = bitcast float* %890 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %891, i32 0, i32 1, i32 1)
  %892 = getelementptr inbounds float, float* %878, i64 32
  %893 = bitcast float* %892 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %893, i32 0, i32 1, i32 1)
  %894 = getelementptr inbounds float, float* %881, i64 32
  %895 = bitcast float* %894 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %895, i32 0, i32 1, i32 1)
  %896 = getelementptr inbounds float, float* %878, i64 40
  %897 = bitcast float* %896 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %897, i32 0, i32 1, i32 1)
  %898 = getelementptr inbounds float, float* %881, i64 40
  %899 = bitcast float* %898 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %899, i32 0, i32 1, i32 1)
  %900 = getelementptr inbounds float, float* %878, i64 48
  %901 = bitcast float* %900 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %901, i32 0, i32 1, i32 1)
  %902 = getelementptr inbounds float, float* %881, i64 48
  %903 = bitcast float* %902 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %903, i32 0, i32 1, i32 1)
  %904 = getelementptr inbounds float, float* %878, i64 56
  %905 = bitcast float* %904 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %905, i32 0, i32 1, i32 1)
  %906 = getelementptr inbounds float, float* %881, i64 56
  %907 = bitcast float* %906 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %907, i32 0, i32 1, i32 1)
  %908 = getelementptr inbounds float, float* %878, i64 64
  %909 = bitcast float* %908 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %909, i32 0, i32 1, i32 1)
  %910 = getelementptr inbounds float, float* %881, i64 64
  %911 = bitcast float* %910 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %911, i32 0, i32 1, i32 1)
  %912 = getelementptr inbounds float, float* %878, i64 72
  %913 = bitcast float* %912 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %913, i32 0, i32 1, i32 1)
  %914 = getelementptr inbounds float, float* %881, i64 72
  %915 = bitcast float* %914 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %915, i32 0, i32 1, i32 1)
  %916 = bitcast float* %878 to <8 x float>*
  %917 = load <8 x float>, <8 x float>* %916, align 1, !tbaa !12
  %918 = add nuw nsw i64 %877, 8
  %919 = getelementptr inbounds float, float* %5, i64 %918
  %920 = bitcast float* %919 to <8 x float>*
  %921 = load <8 x float>, <8 x float>* %920, align 1, !tbaa !12
  %922 = add nuw nsw i64 %877, 16
  %923 = getelementptr inbounds float, float* %5, i64 %922
  %924 = bitcast float* %923 to <8 x float>*
  %925 = load <8 x float>, <8 x float>* %924, align 1, !tbaa !12
  %926 = add nuw nsw i64 %877, 24
  %927 = getelementptr inbounds float, float* %5, i64 %926
  %928 = bitcast float* %927 to <8 x float>*
  %929 = load <8 x float>, <8 x float>* %928, align 1, !tbaa !12
  %930 = add nuw nsw i64 %877, 32
  %931 = getelementptr inbounds float, float* %5, i64 %930
  %932 = bitcast float* %931 to <8 x float>*
  %933 = load <8 x float>, <8 x float>* %932, align 1, !tbaa !12
  %934 = add nuw nsw i64 %877, 40
  %935 = getelementptr inbounds float, float* %5, i64 %934
  %936 = bitcast float* %935 to <8 x float>*
  %937 = load <8 x float>, <8 x float>* %936, align 1, !tbaa !12
  %938 = add nuw nsw i64 %877, 48
  %939 = getelementptr inbounds float, float* %5, i64 %938
  %940 = bitcast float* %939 to <8 x float>*
  %941 = load <8 x float>, <8 x float>* %940, align 1, !tbaa !12
  %942 = add nuw nsw i64 %877, 56
  %943 = getelementptr inbounds float, float* %5, i64 %942
  %944 = bitcast float* %943 to <8 x float>*
  %945 = load <8 x float>, <8 x float>* %944, align 1, !tbaa !12
  %946 = add nuw nsw i64 %877, 64
  %947 = getelementptr inbounds float, float* %5, i64 %946
  %948 = bitcast float* %947 to <8 x float>*
  %949 = load <8 x float>, <8 x float>* %948, align 1, !tbaa !12
  %950 = add nsw i64 %877, %747
  %951 = getelementptr inbounds float, float* %3, i64 %950
  %952 = bitcast float* %951 to <8 x float>*
  %953 = load <8 x float>, <8 x float>* %952, align 1, !tbaa !12
  %954 = add nsw i64 %950, 8
  %955 = getelementptr inbounds float, float* %3, i64 %954
  %956 = bitcast float* %955 to <8 x float>*
  %957 = load <8 x float>, <8 x float>* %956, align 1, !tbaa !12
  %958 = add nsw i64 %950, 16
  %959 = getelementptr inbounds float, float* %3, i64 %958
  %960 = bitcast float* %959 to <8 x float>*
  %961 = load <8 x float>, <8 x float>* %960, align 1, !tbaa !12
  %962 = add nsw i64 %950, 24
  %963 = getelementptr inbounds float, float* %3, i64 %962
  %964 = bitcast float* %963 to <8 x float>*
  %965 = load <8 x float>, <8 x float>* %964, align 1, !tbaa !12
  %966 = add nsw i64 %950, 32
  %967 = getelementptr inbounds float, float* %3, i64 %966
  %968 = bitcast float* %967 to <8 x float>*
  %969 = load <8 x float>, <8 x float>* %968, align 1, !tbaa !12
  %970 = add nsw i64 %950, 40
  %971 = getelementptr inbounds float, float* %3, i64 %970
  %972 = bitcast float* %971 to <8 x float>*
  %973 = load <8 x float>, <8 x float>* %972, align 1, !tbaa !12
  %974 = add nsw i64 %950, 48
  %975 = getelementptr inbounds float, float* %3, i64 %974
  %976 = bitcast float* %975 to <8 x float>*
  %977 = load <8 x float>, <8 x float>* %976, align 1, !tbaa !12
  %978 = add nsw i64 %950, 56
  %979 = getelementptr inbounds float, float* %3, i64 %978
  %980 = bitcast float* %979 to <8 x float>*
  %981 = load <8 x float>, <8 x float>* %980, align 1, !tbaa !12
  %982 = add nsw i64 %950, 64
  %983 = getelementptr inbounds float, float* %3, i64 %982
  %984 = bitcast float* %983 to <8 x float>*
  %985 = load <8 x float>, <8 x float>* %984, align 1, !tbaa !12
  %986 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %953, <8 x float> %55, <8 x float> %917) #10
  %987 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %957, <8 x float> %55, <8 x float> %921) #10
  %988 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %961, <8 x float> %55, <8 x float> %925) #10
  %989 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %965, <8 x float> %55, <8 x float> %929) #10
  %990 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %969, <8 x float> %55, <8 x float> %933) #10
  %991 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %973, <8 x float> %55, <8 x float> %937) #10
  %992 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %977, <8 x float> %55, <8 x float> %941) #10
  %993 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %981, <8 x float> %55, <8 x float> %945) #10
  %994 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %985, <8 x float> %55, <8 x float> %949) #10
  store <8 x float> %986, <8 x float>* %916, align 1, !tbaa !12
  store <8 x float> %987, <8 x float>* %920, align 1, !tbaa !12
  store <8 x float> %988, <8 x float>* %924, align 1, !tbaa !12
  store <8 x float> %989, <8 x float>* %928, align 1, !tbaa !12
  store <8 x float> %990, <8 x float>* %932, align 1, !tbaa !12
  store <8 x float> %991, <8 x float>* %936, align 1, !tbaa !12
  store <8 x float> %992, <8 x float>* %940, align 1, !tbaa !12
  store <8 x float> %993, <8 x float>* %944, align 1, !tbaa !12
  store <8 x float> %994, <8 x float>* %948, align 1, !tbaa !12
  %995 = add nuw nsw i64 %877, 72
  %996 = icmp ult i64 %995, %748
  br i1 %996, label %876, label %870

997:                                              ; preds = %1004, %606, %743, %870
  %998 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %999 = icmp sgt i32 %998, 0
  br i1 %999, label %1000, label %1516

1000:                                             ; preds = %997
  %1001 = zext i32 %998 to i64
  %1002 = trunc i64 %61 to i32
  %1003 = mul nsw i32 %998, %1002
  br label %1131

1004:                                             ; preds = %871, %1004
  %1005 = phi i64 [ 0, %871 ], [ %1123, %1004 ]
  %1006 = getelementptr inbounds float, float* %5, i64 %1005
  %1007 = getelementptr inbounds float, float* %1006, i64 8
  %1008 = bitcast float* %1007 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1008, i32 0, i32 1, i32 1)
  %1009 = getelementptr inbounds float, float* %3, i64 %1005
  %1010 = getelementptr inbounds float, float* %1009, i64 8
  %1011 = bitcast float* %1010 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1011, i32 0, i32 1, i32 1)
  %1012 = getelementptr inbounds float, float* %1006, i64 16
  %1013 = bitcast float* %1012 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1013, i32 0, i32 1, i32 1)
  %1014 = getelementptr inbounds float, float* %1009, i64 16
  %1015 = bitcast float* %1014 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1015, i32 0, i32 1, i32 1)
  %1016 = getelementptr inbounds float, float* %1006, i64 24
  %1017 = bitcast float* %1016 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1017, i32 0, i32 1, i32 1)
  %1018 = getelementptr inbounds float, float* %1009, i64 24
  %1019 = bitcast float* %1018 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1019, i32 0, i32 1, i32 1)
  %1020 = getelementptr inbounds float, float* %1006, i64 32
  %1021 = bitcast float* %1020 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1021, i32 0, i32 1, i32 1)
  %1022 = getelementptr inbounds float, float* %1009, i64 32
  %1023 = bitcast float* %1022 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1023, i32 0, i32 1, i32 1)
  %1024 = getelementptr inbounds float, float* %1006, i64 40
  %1025 = bitcast float* %1024 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1025, i32 0, i32 1, i32 1)
  %1026 = getelementptr inbounds float, float* %1009, i64 40
  %1027 = bitcast float* %1026 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1027, i32 0, i32 1, i32 1)
  %1028 = getelementptr inbounds float, float* %1006, i64 48
  %1029 = bitcast float* %1028 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1029, i32 0, i32 1, i32 1)
  %1030 = getelementptr inbounds float, float* %1009, i64 48
  %1031 = bitcast float* %1030 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1031, i32 0, i32 1, i32 1)
  %1032 = getelementptr inbounds float, float* %1006, i64 56
  %1033 = bitcast float* %1032 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1033, i32 0, i32 1, i32 1)
  %1034 = getelementptr inbounds float, float* %1009, i64 56
  %1035 = bitcast float* %1034 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1035, i32 0, i32 1, i32 1)
  %1036 = getelementptr inbounds float, float* %1006, i64 64
  %1037 = bitcast float* %1036 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1037, i32 0, i32 1, i32 1)
  %1038 = getelementptr inbounds float, float* %1009, i64 64
  %1039 = bitcast float* %1038 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1039, i32 0, i32 1, i32 1)
  %1040 = getelementptr inbounds float, float* %1006, i64 72
  %1041 = bitcast float* %1040 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1041, i32 0, i32 1, i32 1)
  %1042 = getelementptr inbounds float, float* %1009, i64 72
  %1043 = bitcast float* %1042 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1043, i32 0, i32 1, i32 1)
  %1044 = bitcast float* %1006 to <8 x float>*
  %1045 = load <8 x float>, <8 x float>* %1044, align 1, !tbaa !12
  %1046 = add nuw nsw i64 %1005, 8
  %1047 = getelementptr inbounds float, float* %5, i64 %1046
  %1048 = bitcast float* %1047 to <8 x float>*
  %1049 = load <8 x float>, <8 x float>* %1048, align 1, !tbaa !12
  %1050 = add nuw nsw i64 %1005, 16
  %1051 = getelementptr inbounds float, float* %5, i64 %1050
  %1052 = bitcast float* %1051 to <8 x float>*
  %1053 = load <8 x float>, <8 x float>* %1052, align 1, !tbaa !12
  %1054 = add nuw nsw i64 %1005, 24
  %1055 = getelementptr inbounds float, float* %5, i64 %1054
  %1056 = bitcast float* %1055 to <8 x float>*
  %1057 = load <8 x float>, <8 x float>* %1056, align 1, !tbaa !12
  %1058 = add nuw nsw i64 %1005, 32
  %1059 = getelementptr inbounds float, float* %5, i64 %1058
  %1060 = bitcast float* %1059 to <8 x float>*
  %1061 = load <8 x float>, <8 x float>* %1060, align 1, !tbaa !12
  %1062 = add nuw nsw i64 %1005, 40
  %1063 = getelementptr inbounds float, float* %5, i64 %1062
  %1064 = bitcast float* %1063 to <8 x float>*
  %1065 = load <8 x float>, <8 x float>* %1064, align 1, !tbaa !12
  %1066 = add nuw nsw i64 %1005, 48
  %1067 = getelementptr inbounds float, float* %5, i64 %1066
  %1068 = bitcast float* %1067 to <8 x float>*
  %1069 = load <8 x float>, <8 x float>* %1068, align 1, !tbaa !12
  %1070 = add nuw nsw i64 %1005, 56
  %1071 = getelementptr inbounds float, float* %5, i64 %1070
  %1072 = bitcast float* %1071 to <8 x float>*
  %1073 = load <8 x float>, <8 x float>* %1072, align 1, !tbaa !12
  %1074 = add nuw nsw i64 %1005, 64
  %1075 = getelementptr inbounds float, float* %5, i64 %1074
  %1076 = bitcast float* %1075 to <8 x float>*
  %1077 = load <8 x float>, <8 x float>* %1076, align 1, !tbaa !12
  %1078 = add nsw i64 %1005, %874
  %1079 = getelementptr inbounds float, float* %3, i64 %1078
  %1080 = bitcast float* %1079 to <8 x float>*
  %1081 = load <8 x float>, <8 x float>* %1080, align 1, !tbaa !12
  %1082 = add nsw i64 %1078, 8
  %1083 = getelementptr inbounds float, float* %3, i64 %1082
  %1084 = bitcast float* %1083 to <8 x float>*
  %1085 = load <8 x float>, <8 x float>* %1084, align 1, !tbaa !12
  %1086 = add nsw i64 %1078, 16
  %1087 = getelementptr inbounds float, float* %3, i64 %1086
  %1088 = bitcast float* %1087 to <8 x float>*
  %1089 = load <8 x float>, <8 x float>* %1088, align 1, !tbaa !12
  %1090 = add nsw i64 %1078, 24
  %1091 = getelementptr inbounds float, float* %3, i64 %1090
  %1092 = bitcast float* %1091 to <8 x float>*
  %1093 = load <8 x float>, <8 x float>* %1092, align 1, !tbaa !12
  %1094 = add nsw i64 %1078, 32
  %1095 = getelementptr inbounds float, float* %3, i64 %1094
  %1096 = bitcast float* %1095 to <8 x float>*
  %1097 = load <8 x float>, <8 x float>* %1096, align 1, !tbaa !12
  %1098 = add nsw i64 %1078, 40
  %1099 = getelementptr inbounds float, float* %3, i64 %1098
  %1100 = bitcast float* %1099 to <8 x float>*
  %1101 = load <8 x float>, <8 x float>* %1100, align 1, !tbaa !12
  %1102 = add nsw i64 %1078, 48
  %1103 = getelementptr inbounds float, float* %3, i64 %1102
  %1104 = bitcast float* %1103 to <8 x float>*
  %1105 = load <8 x float>, <8 x float>* %1104, align 1, !tbaa !12
  %1106 = add nsw i64 %1078, 56
  %1107 = getelementptr inbounds float, float* %3, i64 %1106
  %1108 = bitcast float* %1107 to <8 x float>*
  %1109 = load <8 x float>, <8 x float>* %1108, align 1, !tbaa !12
  %1110 = add nsw i64 %1078, 64
  %1111 = getelementptr inbounds float, float* %3, i64 %1110
  %1112 = bitcast float* %1111 to <8 x float>*
  %1113 = load <8 x float>, <8 x float>* %1112, align 1, !tbaa !12
  %1114 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1081, <8 x float> %60, <8 x float> %1045) #10
  %1115 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1085, <8 x float> %60, <8 x float> %1049) #10
  %1116 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1089, <8 x float> %60, <8 x float> %1053) #10
  %1117 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1093, <8 x float> %60, <8 x float> %1057) #10
  %1118 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1097, <8 x float> %60, <8 x float> %1061) #10
  %1119 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1101, <8 x float> %60, <8 x float> %1065) #10
  %1120 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1105, <8 x float> %60, <8 x float> %1069) #10
  %1121 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1109, <8 x float> %60, <8 x float> %1073) #10
  %1122 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1113, <8 x float> %60, <8 x float> %1077) #10
  store <8 x float> %1114, <8 x float>* %1044, align 1, !tbaa !12
  store <8 x float> %1115, <8 x float>* %1048, align 1, !tbaa !12
  store <8 x float> %1116, <8 x float>* %1052, align 1, !tbaa !12
  store <8 x float> %1117, <8 x float>* %1056, align 1, !tbaa !12
  store <8 x float> %1118, <8 x float>* %1060, align 1, !tbaa !12
  store <8 x float> %1119, <8 x float>* %1064, align 1, !tbaa !12
  store <8 x float> %1120, <8 x float>* %1068, align 1, !tbaa !12
  store <8 x float> %1121, <8 x float>* %1072, align 1, !tbaa !12
  store <8 x float> %1122, <8 x float>* %1076, align 1, !tbaa !12
  %1123 = add nuw nsw i64 %1005, 72
  %1124 = icmp ult i64 %1123, %875
  br i1 %1124, label %1004, label %997

1125:                                             ; preds = %1131
  br i1 %999, label %1126, label %1516

1126:                                             ; preds = %1125
  %1127 = trunc i64 %66 to i32
  %1128 = mul nsw i32 %998, %1127
  %1129 = sext i32 %1128 to i64
  %1130 = zext i32 %998 to i64
  br label %1268

1131:                                             ; preds = %1000, %1131
  %1132 = phi i64 [ 0, %1000 ], [ %1260, %1131 ]
  %1133 = getelementptr inbounds float, float* %5, i64 %1132
  %1134 = getelementptr inbounds float, float* %1133, i64 8
  %1135 = bitcast float* %1134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1135, i32 0, i32 1, i32 1)
  %1136 = getelementptr inbounds float, float* %3, i64 %1132
  %1137 = getelementptr inbounds float, float* %1136, i64 8
  %1138 = bitcast float* %1137 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1138, i32 0, i32 1, i32 1)
  %1139 = getelementptr inbounds float, float* %1133, i64 16
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = getelementptr inbounds float, float* %1136, i64 16
  %1142 = bitcast float* %1141 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1142, i32 0, i32 1, i32 1)
  %1143 = getelementptr inbounds float, float* %1133, i64 24
  %1144 = bitcast float* %1143 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1144, i32 0, i32 1, i32 1)
  %1145 = getelementptr inbounds float, float* %1136, i64 24
  %1146 = bitcast float* %1145 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1146, i32 0, i32 1, i32 1)
  %1147 = getelementptr inbounds float, float* %1133, i64 32
  %1148 = bitcast float* %1147 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1148, i32 0, i32 1, i32 1)
  %1149 = getelementptr inbounds float, float* %1136, i64 32
  %1150 = bitcast float* %1149 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1150, i32 0, i32 1, i32 1)
  %1151 = getelementptr inbounds float, float* %1133, i64 40
  %1152 = bitcast float* %1151 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1152, i32 0, i32 1, i32 1)
  %1153 = getelementptr inbounds float, float* %1136, i64 40
  %1154 = bitcast float* %1153 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1154, i32 0, i32 1, i32 1)
  %1155 = getelementptr inbounds float, float* %1133, i64 48
  %1156 = bitcast float* %1155 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1156, i32 0, i32 1, i32 1)
  %1157 = getelementptr inbounds float, float* %1136, i64 48
  %1158 = bitcast float* %1157 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1158, i32 0, i32 1, i32 1)
  %1159 = getelementptr inbounds float, float* %1133, i64 56
  %1160 = bitcast float* %1159 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1160, i32 0, i32 1, i32 1)
  %1161 = getelementptr inbounds float, float* %1136, i64 56
  %1162 = bitcast float* %1161 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1162, i32 0, i32 1, i32 1)
  %1163 = getelementptr inbounds float, float* %1133, i64 64
  %1164 = bitcast float* %1163 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1164, i32 0, i32 1, i32 1)
  %1165 = getelementptr inbounds float, float* %1136, i64 64
  %1166 = bitcast float* %1165 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1166, i32 0, i32 1, i32 1)
  %1167 = getelementptr inbounds float, float* %1133, i64 72
  %1168 = bitcast float* %1167 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1168, i32 0, i32 1, i32 1)
  %1169 = getelementptr inbounds float, float* %1136, i64 72
  %1170 = bitcast float* %1169 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1170, i32 0, i32 1, i32 1)
  %1171 = bitcast float* %1133 to <8 x float>*
  %1172 = load <8 x float>, <8 x float>* %1171, align 1, !tbaa !12
  %1173 = add nuw nsw i64 %1132, 8
  %1174 = getelementptr inbounds float, float* %5, i64 %1173
  %1175 = bitcast float* %1174 to <8 x float>*
  %1176 = load <8 x float>, <8 x float>* %1175, align 1, !tbaa !12
  %1177 = add nuw nsw i64 %1132, 16
  %1178 = getelementptr inbounds float, float* %5, i64 %1177
  %1179 = bitcast float* %1178 to <8 x float>*
  %1180 = load <8 x float>, <8 x float>* %1179, align 1, !tbaa !12
  %1181 = add nuw nsw i64 %1132, 24
  %1182 = getelementptr inbounds float, float* %5, i64 %1181
  %1183 = bitcast float* %1182 to <8 x float>*
  %1184 = load <8 x float>, <8 x float>* %1183, align 1, !tbaa !12
  %1185 = add nuw nsw i64 %1132, 32
  %1186 = getelementptr inbounds float, float* %5, i64 %1185
  %1187 = bitcast float* %1186 to <8 x float>*
  %1188 = load <8 x float>, <8 x float>* %1187, align 1, !tbaa !12
  %1189 = add nuw nsw i64 %1132, 40
  %1190 = getelementptr inbounds float, float* %5, i64 %1189
  %1191 = bitcast float* %1190 to <8 x float>*
  %1192 = load <8 x float>, <8 x float>* %1191, align 1, !tbaa !12
  %1193 = add nuw nsw i64 %1132, 48
  %1194 = getelementptr inbounds float, float* %5, i64 %1193
  %1195 = bitcast float* %1194 to <8 x float>*
  %1196 = load <8 x float>, <8 x float>* %1195, align 1, !tbaa !12
  %1197 = add nuw nsw i64 %1132, 56
  %1198 = getelementptr inbounds float, float* %5, i64 %1197
  %1199 = bitcast float* %1198 to <8 x float>*
  %1200 = load <8 x float>, <8 x float>* %1199, align 1, !tbaa !12
  %1201 = add nuw nsw i64 %1132, 64
  %1202 = getelementptr inbounds float, float* %5, i64 %1201
  %1203 = bitcast float* %1202 to <8 x float>*
  %1204 = load <8 x float>, <8 x float>* %1203, align 1, !tbaa !12
  %1205 = trunc i64 %1132 to i32
  %1206 = add nsw i32 %1003, %1205
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds float, float* %3, i64 %1207
  %1209 = bitcast float* %1208 to <8 x float>*
  %1210 = load <8 x float>, <8 x float>* %1209, align 1, !tbaa !12
  %1211 = add nsw i32 %1206, 8
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds float, float* %3, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nsw i32 %1206, 16
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i32 %1206, 24
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i32 %1206, 32
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i32 %1206, 40
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i32 %1206, 48
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i32 %1206, 56
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nsw i32 %1206, 64
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds float, float* %3, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1210, <8 x float> %65, <8 x float> %1172) #10
  %1252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1215, <8 x float> %65, <8 x float> %1176) #10
  %1253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %65, <8 x float> %1180) #10
  %1254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %65, <8 x float> %1184) #10
  %1255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %65, <8 x float> %1188) #10
  %1256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %65, <8 x float> %1192) #10
  %1257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %65, <8 x float> %1196) #10
  %1258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %65, <8 x float> %1200) #10
  %1259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1250, <8 x float> %65, <8 x float> %1204) #10
  store <8 x float> %1251, <8 x float>* %1171, align 1, !tbaa !12
  store <8 x float> %1252, <8 x float>* %1175, align 1, !tbaa !12
  store <8 x float> %1253, <8 x float>* %1179, align 1, !tbaa !12
  store <8 x float> %1254, <8 x float>* %1183, align 1, !tbaa !12
  store <8 x float> %1255, <8 x float>* %1187, align 1, !tbaa !12
  store <8 x float> %1256, <8 x float>* %1191, align 1, !tbaa !12
  store <8 x float> %1257, <8 x float>* %1195, align 1, !tbaa !12
  store <8 x float> %1258, <8 x float>* %1199, align 1, !tbaa !12
  store <8 x float> %1259, <8 x float>* %1203, align 1, !tbaa !12
  %1260 = add nuw nsw i64 %1132, 72
  %1261 = icmp ult i64 %1260, %1001
  br i1 %1261, label %1131, label %1125

1262:                                             ; preds = %1268
  br i1 %999, label %1263, label %1516

1263:                                             ; preds = %1262
  %1264 = trunc i64 %71 to i32
  %1265 = mul nsw i32 %998, %1264
  %1266 = sext i32 %1265 to i64
  %1267 = zext i32 %998 to i64
  br label %1395

1268:                                             ; preds = %1126, %1268
  %1269 = phi i64 [ 0, %1126 ], [ %1387, %1268 ]
  %1270 = getelementptr inbounds float, float* %5, i64 %1269
  %1271 = getelementptr inbounds float, float* %1270, i64 8
  %1272 = bitcast float* %1271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1272, i32 0, i32 1, i32 1)
  %1273 = getelementptr inbounds float, float* %3, i64 %1269
  %1274 = getelementptr inbounds float, float* %1273, i64 8
  %1275 = bitcast float* %1274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1275, i32 0, i32 1, i32 1)
  %1276 = getelementptr inbounds float, float* %1270, i64 16
  %1277 = bitcast float* %1276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1277, i32 0, i32 1, i32 1)
  %1278 = getelementptr inbounds float, float* %1273, i64 16
  %1279 = bitcast float* %1278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1279, i32 0, i32 1, i32 1)
  %1280 = getelementptr inbounds float, float* %1270, i64 24
  %1281 = bitcast float* %1280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1281, i32 0, i32 1, i32 1)
  %1282 = getelementptr inbounds float, float* %1273, i64 24
  %1283 = bitcast float* %1282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1283, i32 0, i32 1, i32 1)
  %1284 = getelementptr inbounds float, float* %1270, i64 32
  %1285 = bitcast float* %1284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1285, i32 0, i32 1, i32 1)
  %1286 = getelementptr inbounds float, float* %1273, i64 32
  %1287 = bitcast float* %1286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1287, i32 0, i32 1, i32 1)
  %1288 = getelementptr inbounds float, float* %1270, i64 40
  %1289 = bitcast float* %1288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1289, i32 0, i32 1, i32 1)
  %1290 = getelementptr inbounds float, float* %1273, i64 40
  %1291 = bitcast float* %1290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1291, i32 0, i32 1, i32 1)
  %1292 = getelementptr inbounds float, float* %1270, i64 48
  %1293 = bitcast float* %1292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1293, i32 0, i32 1, i32 1)
  %1294 = getelementptr inbounds float, float* %1273, i64 48
  %1295 = bitcast float* %1294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1295, i32 0, i32 1, i32 1)
  %1296 = getelementptr inbounds float, float* %1270, i64 56
  %1297 = bitcast float* %1296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1297, i32 0, i32 1, i32 1)
  %1298 = getelementptr inbounds float, float* %1273, i64 56
  %1299 = bitcast float* %1298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1299, i32 0, i32 1, i32 1)
  %1300 = getelementptr inbounds float, float* %1270, i64 64
  %1301 = bitcast float* %1300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1301, i32 0, i32 1, i32 1)
  %1302 = getelementptr inbounds float, float* %1273, i64 64
  %1303 = bitcast float* %1302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1303, i32 0, i32 1, i32 1)
  %1304 = getelementptr inbounds float, float* %1270, i64 72
  %1305 = bitcast float* %1304 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1305, i32 0, i32 1, i32 1)
  %1306 = getelementptr inbounds float, float* %1273, i64 72
  %1307 = bitcast float* %1306 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1307, i32 0, i32 1, i32 1)
  %1308 = bitcast float* %1270 to <8 x float>*
  %1309 = load <8 x float>, <8 x float>* %1308, align 1, !tbaa !12
  %1310 = add nuw nsw i64 %1269, 8
  %1311 = getelementptr inbounds float, float* %5, i64 %1310
  %1312 = bitcast float* %1311 to <8 x float>*
  %1313 = load <8 x float>, <8 x float>* %1312, align 1, !tbaa !12
  %1314 = add nuw nsw i64 %1269, 16
  %1315 = getelementptr inbounds float, float* %5, i64 %1314
  %1316 = bitcast float* %1315 to <8 x float>*
  %1317 = load <8 x float>, <8 x float>* %1316, align 1, !tbaa !12
  %1318 = add nuw nsw i64 %1269, 24
  %1319 = getelementptr inbounds float, float* %5, i64 %1318
  %1320 = bitcast float* %1319 to <8 x float>*
  %1321 = load <8 x float>, <8 x float>* %1320, align 1, !tbaa !12
  %1322 = add nuw nsw i64 %1269, 32
  %1323 = getelementptr inbounds float, float* %5, i64 %1322
  %1324 = bitcast float* %1323 to <8 x float>*
  %1325 = load <8 x float>, <8 x float>* %1324, align 1, !tbaa !12
  %1326 = add nuw nsw i64 %1269, 40
  %1327 = getelementptr inbounds float, float* %5, i64 %1326
  %1328 = bitcast float* %1327 to <8 x float>*
  %1329 = load <8 x float>, <8 x float>* %1328, align 1, !tbaa !12
  %1330 = add nuw nsw i64 %1269, 48
  %1331 = getelementptr inbounds float, float* %5, i64 %1330
  %1332 = bitcast float* %1331 to <8 x float>*
  %1333 = load <8 x float>, <8 x float>* %1332, align 1, !tbaa !12
  %1334 = add nuw nsw i64 %1269, 56
  %1335 = getelementptr inbounds float, float* %5, i64 %1334
  %1336 = bitcast float* %1335 to <8 x float>*
  %1337 = load <8 x float>, <8 x float>* %1336, align 1, !tbaa !12
  %1338 = add nuw nsw i64 %1269, 64
  %1339 = getelementptr inbounds float, float* %5, i64 %1338
  %1340 = bitcast float* %1339 to <8 x float>*
  %1341 = load <8 x float>, <8 x float>* %1340, align 1, !tbaa !12
  %1342 = add nsw i64 %1269, %1129
  %1343 = getelementptr inbounds float, float* %3, i64 %1342
  %1344 = bitcast float* %1343 to <8 x float>*
  %1345 = load <8 x float>, <8 x float>* %1344, align 1, !tbaa !12
  %1346 = add nsw i64 %1342, 8
  %1347 = getelementptr inbounds float, float* %3, i64 %1346
  %1348 = bitcast float* %1347 to <8 x float>*
  %1349 = load <8 x float>, <8 x float>* %1348, align 1, !tbaa !12
  %1350 = add nsw i64 %1342, 16
  %1351 = getelementptr inbounds float, float* %3, i64 %1350
  %1352 = bitcast float* %1351 to <8 x float>*
  %1353 = load <8 x float>, <8 x float>* %1352, align 1, !tbaa !12
  %1354 = add nsw i64 %1342, 24
  %1355 = getelementptr inbounds float, float* %3, i64 %1354
  %1356 = bitcast float* %1355 to <8 x float>*
  %1357 = load <8 x float>, <8 x float>* %1356, align 1, !tbaa !12
  %1358 = add nsw i64 %1342, 32
  %1359 = getelementptr inbounds float, float* %3, i64 %1358
  %1360 = bitcast float* %1359 to <8 x float>*
  %1361 = load <8 x float>, <8 x float>* %1360, align 1, !tbaa !12
  %1362 = add nsw i64 %1342, 40
  %1363 = getelementptr inbounds float, float* %3, i64 %1362
  %1364 = bitcast float* %1363 to <8 x float>*
  %1365 = load <8 x float>, <8 x float>* %1364, align 1, !tbaa !12
  %1366 = add nsw i64 %1342, 48
  %1367 = getelementptr inbounds float, float* %3, i64 %1366
  %1368 = bitcast float* %1367 to <8 x float>*
  %1369 = load <8 x float>, <8 x float>* %1368, align 1, !tbaa !12
  %1370 = add nsw i64 %1342, 56
  %1371 = getelementptr inbounds float, float* %3, i64 %1370
  %1372 = bitcast float* %1371 to <8 x float>*
  %1373 = load <8 x float>, <8 x float>* %1372, align 1, !tbaa !12
  %1374 = add nsw i64 %1342, 64
  %1375 = getelementptr inbounds float, float* %3, i64 %1374
  %1376 = bitcast float* %1375 to <8 x float>*
  %1377 = load <8 x float>, <8 x float>* %1376, align 1, !tbaa !12
  %1378 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1345, <8 x float> %70, <8 x float> %1309) #10
  %1379 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1349, <8 x float> %70, <8 x float> %1313) #10
  %1380 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1353, <8 x float> %70, <8 x float> %1317) #10
  %1381 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1357, <8 x float> %70, <8 x float> %1321) #10
  %1382 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1361, <8 x float> %70, <8 x float> %1325) #10
  %1383 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1365, <8 x float> %70, <8 x float> %1329) #10
  %1384 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1369, <8 x float> %70, <8 x float> %1333) #10
  %1385 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1373, <8 x float> %70, <8 x float> %1337) #10
  %1386 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1377, <8 x float> %70, <8 x float> %1341) #10
  store <8 x float> %1378, <8 x float>* %1308, align 1, !tbaa !12
  store <8 x float> %1379, <8 x float>* %1312, align 1, !tbaa !12
  store <8 x float> %1380, <8 x float>* %1316, align 1, !tbaa !12
  store <8 x float> %1381, <8 x float>* %1320, align 1, !tbaa !12
  store <8 x float> %1382, <8 x float>* %1324, align 1, !tbaa !12
  store <8 x float> %1383, <8 x float>* %1328, align 1, !tbaa !12
  store <8 x float> %1384, <8 x float>* %1332, align 1, !tbaa !12
  store <8 x float> %1385, <8 x float>* %1336, align 1, !tbaa !12
  store <8 x float> %1386, <8 x float>* %1340, align 1, !tbaa !12
  %1387 = add nuw nsw i64 %1269, 72
  %1388 = icmp ult i64 %1387, %1130
  br i1 %1388, label %1268, label %1262

1389:                                             ; preds = %1395
  br i1 %999, label %1390, label %1516

1390:                                             ; preds = %1389
  %1391 = trunc i64 %76 to i32
  %1392 = mul nsw i32 %998, %1391
  %1393 = sext i32 %1392 to i64
  %1394 = zext i32 %998 to i64
  br label %1521

1395:                                             ; preds = %1263, %1395
  %1396 = phi i64 [ 0, %1263 ], [ %1514, %1395 ]
  %1397 = getelementptr inbounds float, float* %5, i64 %1396
  %1398 = getelementptr inbounds float, float* %1397, i64 8
  %1399 = bitcast float* %1398 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1399, i32 0, i32 1, i32 1)
  %1400 = getelementptr inbounds float, float* %3, i64 %1396
  %1401 = getelementptr inbounds float, float* %1400, i64 8
  %1402 = bitcast float* %1401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1402, i32 0, i32 1, i32 1)
  %1403 = getelementptr inbounds float, float* %1397, i64 16
  %1404 = bitcast float* %1403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1404, i32 0, i32 1, i32 1)
  %1405 = getelementptr inbounds float, float* %1400, i64 16
  %1406 = bitcast float* %1405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1406, i32 0, i32 1, i32 1)
  %1407 = getelementptr inbounds float, float* %1397, i64 24
  %1408 = bitcast float* %1407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1408, i32 0, i32 1, i32 1)
  %1409 = getelementptr inbounds float, float* %1400, i64 24
  %1410 = bitcast float* %1409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1410, i32 0, i32 1, i32 1)
  %1411 = getelementptr inbounds float, float* %1397, i64 32
  %1412 = bitcast float* %1411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1412, i32 0, i32 1, i32 1)
  %1413 = getelementptr inbounds float, float* %1400, i64 32
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %1397, i64 40
  %1416 = bitcast float* %1415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1416, i32 0, i32 1, i32 1)
  %1417 = getelementptr inbounds float, float* %1400, i64 40
  %1418 = bitcast float* %1417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1418, i32 0, i32 1, i32 1)
  %1419 = getelementptr inbounds float, float* %1397, i64 48
  %1420 = bitcast float* %1419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1420, i32 0, i32 1, i32 1)
  %1421 = getelementptr inbounds float, float* %1400, i64 48
  %1422 = bitcast float* %1421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1422, i32 0, i32 1, i32 1)
  %1423 = getelementptr inbounds float, float* %1397, i64 56
  %1424 = bitcast float* %1423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1424, i32 0, i32 1, i32 1)
  %1425 = getelementptr inbounds float, float* %1400, i64 56
  %1426 = bitcast float* %1425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1426, i32 0, i32 1, i32 1)
  %1427 = getelementptr inbounds float, float* %1397, i64 64
  %1428 = bitcast float* %1427 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1428, i32 0, i32 1, i32 1)
  %1429 = getelementptr inbounds float, float* %1400, i64 64
  %1430 = bitcast float* %1429 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1430, i32 0, i32 1, i32 1)
  %1431 = getelementptr inbounds float, float* %1397, i64 72
  %1432 = bitcast float* %1431 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1432, i32 0, i32 1, i32 1)
  %1433 = getelementptr inbounds float, float* %1400, i64 72
  %1434 = bitcast float* %1433 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1434, i32 0, i32 1, i32 1)
  %1435 = bitcast float* %1397 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = add nuw nsw i64 %1396, 8
  %1438 = getelementptr inbounds float, float* %5, i64 %1437
  %1439 = bitcast float* %1438 to <8 x float>*
  %1440 = load <8 x float>, <8 x float>* %1439, align 1, !tbaa !12
  %1441 = add nuw nsw i64 %1396, 16
  %1442 = getelementptr inbounds float, float* %5, i64 %1441
  %1443 = bitcast float* %1442 to <8 x float>*
  %1444 = load <8 x float>, <8 x float>* %1443, align 1, !tbaa !12
  %1445 = add nuw nsw i64 %1396, 24
  %1446 = getelementptr inbounds float, float* %5, i64 %1445
  %1447 = bitcast float* %1446 to <8 x float>*
  %1448 = load <8 x float>, <8 x float>* %1447, align 1, !tbaa !12
  %1449 = add nuw nsw i64 %1396, 32
  %1450 = getelementptr inbounds float, float* %5, i64 %1449
  %1451 = bitcast float* %1450 to <8 x float>*
  %1452 = load <8 x float>, <8 x float>* %1451, align 1, !tbaa !12
  %1453 = add nuw nsw i64 %1396, 40
  %1454 = getelementptr inbounds float, float* %5, i64 %1453
  %1455 = bitcast float* %1454 to <8 x float>*
  %1456 = load <8 x float>, <8 x float>* %1455, align 1, !tbaa !12
  %1457 = add nuw nsw i64 %1396, 48
  %1458 = getelementptr inbounds float, float* %5, i64 %1457
  %1459 = bitcast float* %1458 to <8 x float>*
  %1460 = load <8 x float>, <8 x float>* %1459, align 1, !tbaa !12
  %1461 = add nuw nsw i64 %1396, 56
  %1462 = getelementptr inbounds float, float* %5, i64 %1461
  %1463 = bitcast float* %1462 to <8 x float>*
  %1464 = load <8 x float>, <8 x float>* %1463, align 1, !tbaa !12
  %1465 = add nuw nsw i64 %1396, 64
  %1466 = getelementptr inbounds float, float* %5, i64 %1465
  %1467 = bitcast float* %1466 to <8 x float>*
  %1468 = load <8 x float>, <8 x float>* %1467, align 1, !tbaa !12
  %1469 = add nsw i64 %1396, %1266
  %1470 = getelementptr inbounds float, float* %3, i64 %1469
  %1471 = bitcast float* %1470 to <8 x float>*
  %1472 = load <8 x float>, <8 x float>* %1471, align 1, !tbaa !12
  %1473 = add nsw i64 %1469, 8
  %1474 = getelementptr inbounds float, float* %3, i64 %1473
  %1475 = bitcast float* %1474 to <8 x float>*
  %1476 = load <8 x float>, <8 x float>* %1475, align 1, !tbaa !12
  %1477 = add nsw i64 %1469, 16
  %1478 = getelementptr inbounds float, float* %3, i64 %1477
  %1479 = bitcast float* %1478 to <8 x float>*
  %1480 = load <8 x float>, <8 x float>* %1479, align 1, !tbaa !12
  %1481 = add nsw i64 %1469, 24
  %1482 = getelementptr inbounds float, float* %3, i64 %1481
  %1483 = bitcast float* %1482 to <8 x float>*
  %1484 = load <8 x float>, <8 x float>* %1483, align 1, !tbaa !12
  %1485 = add nsw i64 %1469, 32
  %1486 = getelementptr inbounds float, float* %3, i64 %1485
  %1487 = bitcast float* %1486 to <8 x float>*
  %1488 = load <8 x float>, <8 x float>* %1487, align 1, !tbaa !12
  %1489 = add nsw i64 %1469, 40
  %1490 = getelementptr inbounds float, float* %3, i64 %1489
  %1491 = bitcast float* %1490 to <8 x float>*
  %1492 = load <8 x float>, <8 x float>* %1491, align 1, !tbaa !12
  %1493 = add nsw i64 %1469, 48
  %1494 = getelementptr inbounds float, float* %3, i64 %1493
  %1495 = bitcast float* %1494 to <8 x float>*
  %1496 = load <8 x float>, <8 x float>* %1495, align 1, !tbaa !12
  %1497 = add nsw i64 %1469, 56
  %1498 = getelementptr inbounds float, float* %3, i64 %1497
  %1499 = bitcast float* %1498 to <8 x float>*
  %1500 = load <8 x float>, <8 x float>* %1499, align 1, !tbaa !12
  %1501 = add nsw i64 %1469, 64
  %1502 = getelementptr inbounds float, float* %3, i64 %1501
  %1503 = bitcast float* %1502 to <8 x float>*
  %1504 = load <8 x float>, <8 x float>* %1503, align 1, !tbaa !12
  %1505 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1472, <8 x float> %75, <8 x float> %1436) #10
  %1506 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1476, <8 x float> %75, <8 x float> %1440) #10
  %1507 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1480, <8 x float> %75, <8 x float> %1444) #10
  %1508 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1484, <8 x float> %75, <8 x float> %1448) #10
  %1509 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1488, <8 x float> %75, <8 x float> %1452) #10
  %1510 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1492, <8 x float> %75, <8 x float> %1456) #10
  %1511 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1496, <8 x float> %75, <8 x float> %1460) #10
  %1512 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1500, <8 x float> %75, <8 x float> %1464) #10
  %1513 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1504, <8 x float> %75, <8 x float> %1468) #10
  store <8 x float> %1505, <8 x float>* %1435, align 1, !tbaa !12
  store <8 x float> %1506, <8 x float>* %1439, align 1, !tbaa !12
  store <8 x float> %1507, <8 x float>* %1443, align 1, !tbaa !12
  store <8 x float> %1508, <8 x float>* %1447, align 1, !tbaa !12
  store <8 x float> %1509, <8 x float>* %1451, align 1, !tbaa !12
  store <8 x float> %1510, <8 x float>* %1455, align 1, !tbaa !12
  store <8 x float> %1511, <8 x float>* %1459, align 1, !tbaa !12
  store <8 x float> %1512, <8 x float>* %1463, align 1, !tbaa !12
  store <8 x float> %1513, <8 x float>* %1467, align 1, !tbaa !12
  %1514 = add nuw nsw i64 %1396, 72
  %1515 = icmp ult i64 %1514, %1267
  br i1 %1515, label %1395, label %1389

1516:                                             ; preds = %1521, %20, %478, %997, %1125, %1262, %1389
  %1517 = add nuw nsw i64 %21, 12
  %1518 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1519 = sext i32 %1518 to i64
  %1520 = icmp slt i64 %1517, %1519
  br i1 %1520, label %20, label %8

1521:                                             ; preds = %1390, %1521
  %1522 = phi i64 [ 0, %1390 ], [ %1640, %1521 ]
  %1523 = getelementptr inbounds float, float* %5, i64 %1522
  %1524 = getelementptr inbounds float, float* %1523, i64 8
  %1525 = bitcast float* %1524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1525, i32 0, i32 1, i32 1)
  %1526 = getelementptr inbounds float, float* %3, i64 %1522
  %1527 = getelementptr inbounds float, float* %1526, i64 8
  %1528 = bitcast float* %1527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1528, i32 0, i32 1, i32 1)
  %1529 = getelementptr inbounds float, float* %1523, i64 16
  %1530 = bitcast float* %1529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1530, i32 0, i32 1, i32 1)
  %1531 = getelementptr inbounds float, float* %1526, i64 16
  %1532 = bitcast float* %1531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1532, i32 0, i32 1, i32 1)
  %1533 = getelementptr inbounds float, float* %1523, i64 24
  %1534 = bitcast float* %1533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1534, i32 0, i32 1, i32 1)
  %1535 = getelementptr inbounds float, float* %1526, i64 24
  %1536 = bitcast float* %1535 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1536, i32 0, i32 1, i32 1)
  %1537 = getelementptr inbounds float, float* %1523, i64 32
  %1538 = bitcast float* %1537 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1538, i32 0, i32 1, i32 1)
  %1539 = getelementptr inbounds float, float* %1526, i64 32
  %1540 = bitcast float* %1539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1540, i32 0, i32 1, i32 1)
  %1541 = getelementptr inbounds float, float* %1523, i64 40
  %1542 = bitcast float* %1541 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1542, i32 0, i32 1, i32 1)
  %1543 = getelementptr inbounds float, float* %1526, i64 40
  %1544 = bitcast float* %1543 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1544, i32 0, i32 1, i32 1)
  %1545 = getelementptr inbounds float, float* %1523, i64 48
  %1546 = bitcast float* %1545 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1546, i32 0, i32 1, i32 1)
  %1547 = getelementptr inbounds float, float* %1526, i64 48
  %1548 = bitcast float* %1547 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1548, i32 0, i32 1, i32 1)
  %1549 = getelementptr inbounds float, float* %1523, i64 56
  %1550 = bitcast float* %1549 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1550, i32 0, i32 1, i32 1)
  %1551 = getelementptr inbounds float, float* %1526, i64 56
  %1552 = bitcast float* %1551 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1552, i32 0, i32 1, i32 1)
  %1553 = getelementptr inbounds float, float* %1523, i64 64
  %1554 = bitcast float* %1553 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1554, i32 0, i32 1, i32 1)
  %1555 = getelementptr inbounds float, float* %1526, i64 64
  %1556 = bitcast float* %1555 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1556, i32 0, i32 1, i32 1)
  %1557 = getelementptr inbounds float, float* %1523, i64 72
  %1558 = bitcast float* %1557 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1558, i32 0, i32 1, i32 1)
  %1559 = getelementptr inbounds float, float* %1526, i64 72
  %1560 = bitcast float* %1559 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1560, i32 0, i32 1, i32 1)
  %1561 = bitcast float* %1523 to <8 x float>*
  %1562 = load <8 x float>, <8 x float>* %1561, align 1, !tbaa !12
  %1563 = add nuw nsw i64 %1522, 8
  %1564 = getelementptr inbounds float, float* %5, i64 %1563
  %1565 = bitcast float* %1564 to <8 x float>*
  %1566 = load <8 x float>, <8 x float>* %1565, align 1, !tbaa !12
  %1567 = add nuw nsw i64 %1522, 16
  %1568 = getelementptr inbounds float, float* %5, i64 %1567
  %1569 = bitcast float* %1568 to <8 x float>*
  %1570 = load <8 x float>, <8 x float>* %1569, align 1, !tbaa !12
  %1571 = add nuw nsw i64 %1522, 24
  %1572 = getelementptr inbounds float, float* %5, i64 %1571
  %1573 = bitcast float* %1572 to <8 x float>*
  %1574 = load <8 x float>, <8 x float>* %1573, align 1, !tbaa !12
  %1575 = add nuw nsw i64 %1522, 32
  %1576 = getelementptr inbounds float, float* %5, i64 %1575
  %1577 = bitcast float* %1576 to <8 x float>*
  %1578 = load <8 x float>, <8 x float>* %1577, align 1, !tbaa !12
  %1579 = add nuw nsw i64 %1522, 40
  %1580 = getelementptr inbounds float, float* %5, i64 %1579
  %1581 = bitcast float* %1580 to <8 x float>*
  %1582 = load <8 x float>, <8 x float>* %1581, align 1, !tbaa !12
  %1583 = add nuw nsw i64 %1522, 48
  %1584 = getelementptr inbounds float, float* %5, i64 %1583
  %1585 = bitcast float* %1584 to <8 x float>*
  %1586 = load <8 x float>, <8 x float>* %1585, align 1, !tbaa !12
  %1587 = add nuw nsw i64 %1522, 56
  %1588 = getelementptr inbounds float, float* %5, i64 %1587
  %1589 = bitcast float* %1588 to <8 x float>*
  %1590 = load <8 x float>, <8 x float>* %1589, align 1, !tbaa !12
  %1591 = add nuw nsw i64 %1522, 64
  %1592 = getelementptr inbounds float, float* %5, i64 %1591
  %1593 = bitcast float* %1592 to <8 x float>*
  %1594 = load <8 x float>, <8 x float>* %1593, align 1, !tbaa !12
  %1595 = add nsw i64 %1522, %1393
  %1596 = getelementptr inbounds float, float* %3, i64 %1595
  %1597 = bitcast float* %1596 to <8 x float>*
  %1598 = load <8 x float>, <8 x float>* %1597, align 1, !tbaa !12
  %1599 = add nsw i64 %1595, 8
  %1600 = getelementptr inbounds float, float* %3, i64 %1599
  %1601 = bitcast float* %1600 to <8 x float>*
  %1602 = load <8 x float>, <8 x float>* %1601, align 1, !tbaa !12
  %1603 = add nsw i64 %1595, 16
  %1604 = getelementptr inbounds float, float* %3, i64 %1603
  %1605 = bitcast float* %1604 to <8 x float>*
  %1606 = load <8 x float>, <8 x float>* %1605, align 1, !tbaa !12
  %1607 = add nsw i64 %1595, 24
  %1608 = getelementptr inbounds float, float* %3, i64 %1607
  %1609 = bitcast float* %1608 to <8 x float>*
  %1610 = load <8 x float>, <8 x float>* %1609, align 1, !tbaa !12
  %1611 = add nsw i64 %1595, 32
  %1612 = getelementptr inbounds float, float* %3, i64 %1611
  %1613 = bitcast float* %1612 to <8 x float>*
  %1614 = load <8 x float>, <8 x float>* %1613, align 1, !tbaa !12
  %1615 = add nsw i64 %1595, 40
  %1616 = getelementptr inbounds float, float* %3, i64 %1615
  %1617 = bitcast float* %1616 to <8 x float>*
  %1618 = load <8 x float>, <8 x float>* %1617, align 1, !tbaa !12
  %1619 = add nsw i64 %1595, 48
  %1620 = getelementptr inbounds float, float* %3, i64 %1619
  %1621 = bitcast float* %1620 to <8 x float>*
  %1622 = load <8 x float>, <8 x float>* %1621, align 1, !tbaa !12
  %1623 = add nsw i64 %1595, 56
  %1624 = getelementptr inbounds float, float* %3, i64 %1623
  %1625 = bitcast float* %1624 to <8 x float>*
  %1626 = load <8 x float>, <8 x float>* %1625, align 1, !tbaa !12
  %1627 = add nsw i64 %1595, 64
  %1628 = getelementptr inbounds float, float* %3, i64 %1627
  %1629 = bitcast float* %1628 to <8 x float>*
  %1630 = load <8 x float>, <8 x float>* %1629, align 1, !tbaa !12
  %1631 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1598, <8 x float> %80, <8 x float> %1562) #10
  %1632 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1602, <8 x float> %80, <8 x float> %1566) #10
  %1633 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1606, <8 x float> %80, <8 x float> %1570) #10
  %1634 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1610, <8 x float> %80, <8 x float> %1574) #10
  %1635 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1614, <8 x float> %80, <8 x float> %1578) #10
  %1636 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1618, <8 x float> %80, <8 x float> %1582) #10
  %1637 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1622, <8 x float> %80, <8 x float> %1586) #10
  %1638 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1626, <8 x float> %80, <8 x float> %1590) #10
  %1639 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1630, <8 x float> %80, <8 x float> %1594) #10
  store <8 x float> %1631, <8 x float>* %1561, align 1, !tbaa !12
  store <8 x float> %1632, <8 x float>* %1565, align 1, !tbaa !12
  store <8 x float> %1633, <8 x float>* %1569, align 1, !tbaa !12
  store <8 x float> %1634, <8 x float>* %1573, align 1, !tbaa !12
  store <8 x float> %1635, <8 x float>* %1577, align 1, !tbaa !12
  store <8 x float> %1636, <8 x float>* %1581, align 1, !tbaa !12
  store <8 x float> %1637, <8 x float>* %1585, align 1, !tbaa !12
  store <8 x float> %1638, <8 x float>* %1589, align 1, !tbaa !12
  store <8 x float> %1639, <8 x float>* %1593, align 1, !tbaa !12
  %1640 = add nuw nsw i64 %1522, 72
  %1641 = icmp ult i64 %1640, %1394
  br i1 %1641, label %1521, label %1516
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 228
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui9_uk12.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
