; ModuleID = 'codes/matvec_ui8_uk15.cpp'
source_filename = "codes/matvec_ui8_uk15.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui8_uk15.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = sdiv i32 %1, 64
  %3 = shl nsw i32 %2, 6
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 120
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1727, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1727
  %21 = phi i64 [ %1728, %1727 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = add nuw nsw i64 %21, 13
  %87 = getelementptr inbounds float, float* %4, i64 %86
  %88 = load float, float* %87, align 4, !tbaa !18
  %89 = insertelement <8 x float> undef, float %88, i32 0
  %90 = shufflevector <8 x float> %89, <8 x float> undef, <8 x i32> zeroinitializer
  %91 = add nuw nsw i64 %21, 14
  %92 = getelementptr inbounds float, float* %4, i64 %91
  %93 = load float, float* %92, align 4, !tbaa !18
  %94 = insertelement <8 x float> undef, float %93, i32 0
  %95 = shufflevector <8 x float> %94, <8 x float> undef, <8 x i32> zeroinitializer
  %96 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %1727

98:                                               ; preds = %20
  %99 = zext i32 %96 to i64
  %100 = trunc i64 %21 to i32
  %101 = mul nsw i32 %96, %100
  br label %108

102:                                              ; preds = %108
  br i1 %97, label %103, label %567

103:                                              ; preds = %102
  %104 = trunc i64 %26 to i32
  %105 = mul nsw i32 %96, %104
  %106 = sext i32 %105 to i64
  %107 = zext i32 %96 to i64
  br label %231

108:                                              ; preds = %98, %108
  %109 = phi i64 [ 0, %98 ], [ %223, %108 ]
  %110 = getelementptr inbounds float, float* %5, i64 %109
  %111 = getelementptr inbounds float, float* %110, i64 8
  %112 = bitcast float* %111 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %112, i32 0, i32 1, i32 1)
  %113 = getelementptr inbounds float, float* %3, i64 %109
  %114 = getelementptr inbounds float, float* %113, i64 8
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %110, i64 16
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %113, i64 16
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %110, i64 24
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %113, i64 24
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %110, i64 32
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %113, i64 32
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %110, i64 40
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %113, i64 40
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %110, i64 48
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %113, i64 48
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %110, i64 56
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = getelementptr inbounds float, float* %113, i64 56
  %139 = bitcast float* %138 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %139, i32 0, i32 1, i32 1)
  %140 = getelementptr inbounds float, float* %110, i64 64
  %141 = bitcast float* %140 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %141, i32 0, i32 1, i32 1)
  %142 = getelementptr inbounds float, float* %113, i64 64
  %143 = bitcast float* %142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %143, i32 0, i32 1, i32 1)
  %144 = bitcast float* %110 to <8 x float>*
  %145 = load <8 x float>, <8 x float>* %144, align 1, !tbaa !12
  %146 = or i64 %109, 8
  %147 = getelementptr inbounds float, float* %5, i64 %146
  %148 = bitcast float* %147 to <8 x float>*
  %149 = load <8 x float>, <8 x float>* %148, align 1, !tbaa !12
  %150 = or i64 %109, 16
  %151 = getelementptr inbounds float, float* %5, i64 %150
  %152 = bitcast float* %151 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = or i64 %109, 24
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = or i64 %109, 32
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = or i64 %109, 40
  %163 = getelementptr inbounds float, float* %5, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = or i64 %109, 48
  %167 = getelementptr inbounds float, float* %5, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = or i64 %109, 56
  %171 = getelementptr inbounds float, float* %5, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = trunc i64 %109 to i32
  %175 = add nsw i32 %101, %174
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds float, float* %3, i64 %176
  %178 = bitcast float* %177 to <8 x float>*
  %179 = load <8 x float>, <8 x float>* %178, align 1, !tbaa !12
  %180 = add nsw i32 %175, 8
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds float, float* %3, i64 %181
  %183 = bitcast float* %182 to <8 x float>*
  %184 = load <8 x float>, <8 x float>* %183, align 1, !tbaa !12
  %185 = add nsw i32 %175, 16
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds float, float* %3, i64 %186
  %188 = bitcast float* %187 to <8 x float>*
  %189 = load <8 x float>, <8 x float>* %188, align 1, !tbaa !12
  %190 = add nsw i32 %175, 24
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds float, float* %3, i64 %191
  %193 = bitcast float* %192 to <8 x float>*
  %194 = load <8 x float>, <8 x float>* %193, align 1, !tbaa !12
  %195 = add nsw i32 %175, 32
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds float, float* %3, i64 %196
  %198 = bitcast float* %197 to <8 x float>*
  %199 = load <8 x float>, <8 x float>* %198, align 1, !tbaa !12
  %200 = add nsw i32 %175, 40
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds float, float* %3, i64 %201
  %203 = bitcast float* %202 to <8 x float>*
  %204 = load <8 x float>, <8 x float>* %203, align 1, !tbaa !12
  %205 = add nsw i32 %175, 48
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds float, float* %3, i64 %206
  %208 = bitcast float* %207 to <8 x float>*
  %209 = load <8 x float>, <8 x float>* %208, align 1, !tbaa !12
  %210 = add nsw i32 %175, 56
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds float, float* %3, i64 %211
  %213 = bitcast float* %212 to <8 x float>*
  %214 = load <8 x float>, <8 x float>* %213, align 1, !tbaa !12
  %215 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %179, <8 x float> %25, <8 x float> %145) #10
  %216 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %184, <8 x float> %25, <8 x float> %149) #10
  %217 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %189, <8 x float> %25, <8 x float> %153) #10
  %218 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %194, <8 x float> %25, <8 x float> %157) #10
  %219 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %199, <8 x float> %25, <8 x float> %161) #10
  %220 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %204, <8 x float> %25, <8 x float> %165) #10
  %221 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %209, <8 x float> %25, <8 x float> %169) #10
  %222 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %214, <8 x float> %25, <8 x float> %173) #10
  store <8 x float> %215, <8 x float>* %144, align 1, !tbaa !12
  store <8 x float> %216, <8 x float>* %148, align 1, !tbaa !12
  store <8 x float> %217, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %218, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %219, <8 x float>* %160, align 1, !tbaa !12
  store <8 x float> %220, <8 x float>* %164, align 1, !tbaa !12
  store <8 x float> %221, <8 x float>* %168, align 1, !tbaa !12
  store <8 x float> %222, <8 x float>* %172, align 1, !tbaa !12
  %223 = add nuw nsw i64 %109, 64
  %224 = icmp ult i64 %223, %99
  br i1 %224, label %108, label %102

225:                                              ; preds = %231
  br i1 %97, label %226, label %567

226:                                              ; preds = %225
  %227 = trunc i64 %31 to i32
  %228 = mul nsw i32 %96, %227
  %229 = sext i32 %228 to i64
  %230 = zext i32 %96 to i64
  br label %345

231:                                              ; preds = %103, %231
  %232 = phi i64 [ 0, %103 ], [ %337, %231 ]
  %233 = getelementptr inbounds float, float* %5, i64 %232
  %234 = getelementptr inbounds float, float* %233, i64 8
  %235 = bitcast float* %234 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %235, i32 0, i32 1, i32 1)
  %236 = getelementptr inbounds float, float* %3, i64 %232
  %237 = getelementptr inbounds float, float* %236, i64 8
  %238 = bitcast float* %237 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %238, i32 0, i32 1, i32 1)
  %239 = getelementptr inbounds float, float* %233, i64 16
  %240 = bitcast float* %239 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %240, i32 0, i32 1, i32 1)
  %241 = getelementptr inbounds float, float* %236, i64 16
  %242 = bitcast float* %241 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %242, i32 0, i32 1, i32 1)
  %243 = getelementptr inbounds float, float* %233, i64 24
  %244 = bitcast float* %243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %244, i32 0, i32 1, i32 1)
  %245 = getelementptr inbounds float, float* %236, i64 24
  %246 = bitcast float* %245 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %246, i32 0, i32 1, i32 1)
  %247 = getelementptr inbounds float, float* %233, i64 32
  %248 = bitcast float* %247 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %248, i32 0, i32 1, i32 1)
  %249 = getelementptr inbounds float, float* %236, i64 32
  %250 = bitcast float* %249 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %250, i32 0, i32 1, i32 1)
  %251 = getelementptr inbounds float, float* %233, i64 40
  %252 = bitcast float* %251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %252, i32 0, i32 1, i32 1)
  %253 = getelementptr inbounds float, float* %236, i64 40
  %254 = bitcast float* %253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %254, i32 0, i32 1, i32 1)
  %255 = getelementptr inbounds float, float* %233, i64 48
  %256 = bitcast float* %255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %256, i32 0, i32 1, i32 1)
  %257 = getelementptr inbounds float, float* %236, i64 48
  %258 = bitcast float* %257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %258, i32 0, i32 1, i32 1)
  %259 = getelementptr inbounds float, float* %233, i64 56
  %260 = bitcast float* %259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %260, i32 0, i32 1, i32 1)
  %261 = getelementptr inbounds float, float* %236, i64 56
  %262 = bitcast float* %261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %262, i32 0, i32 1, i32 1)
  %263 = getelementptr inbounds float, float* %233, i64 64
  %264 = bitcast float* %263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %264, i32 0, i32 1, i32 1)
  %265 = getelementptr inbounds float, float* %236, i64 64
  %266 = bitcast float* %265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %266, i32 0, i32 1, i32 1)
  %267 = bitcast float* %233 to <8 x float>*
  %268 = load <8 x float>, <8 x float>* %267, align 1, !tbaa !12
  %269 = or i64 %232, 8
  %270 = getelementptr inbounds float, float* %5, i64 %269
  %271 = bitcast float* %270 to <8 x float>*
  %272 = load <8 x float>, <8 x float>* %271, align 1, !tbaa !12
  %273 = or i64 %232, 16
  %274 = getelementptr inbounds float, float* %5, i64 %273
  %275 = bitcast float* %274 to <8 x float>*
  %276 = load <8 x float>, <8 x float>* %275, align 1, !tbaa !12
  %277 = or i64 %232, 24
  %278 = getelementptr inbounds float, float* %5, i64 %277
  %279 = bitcast float* %278 to <8 x float>*
  %280 = load <8 x float>, <8 x float>* %279, align 1, !tbaa !12
  %281 = or i64 %232, 32
  %282 = getelementptr inbounds float, float* %5, i64 %281
  %283 = bitcast float* %282 to <8 x float>*
  %284 = load <8 x float>, <8 x float>* %283, align 1, !tbaa !12
  %285 = or i64 %232, 40
  %286 = getelementptr inbounds float, float* %5, i64 %285
  %287 = bitcast float* %286 to <8 x float>*
  %288 = load <8 x float>, <8 x float>* %287, align 1, !tbaa !12
  %289 = or i64 %232, 48
  %290 = getelementptr inbounds float, float* %5, i64 %289
  %291 = bitcast float* %290 to <8 x float>*
  %292 = load <8 x float>, <8 x float>* %291, align 1, !tbaa !12
  %293 = or i64 %232, 56
  %294 = getelementptr inbounds float, float* %5, i64 %293
  %295 = bitcast float* %294 to <8 x float>*
  %296 = load <8 x float>, <8 x float>* %295, align 1, !tbaa !12
  %297 = add nsw i64 %232, %106
  %298 = getelementptr inbounds float, float* %3, i64 %297
  %299 = bitcast float* %298 to <8 x float>*
  %300 = load <8 x float>, <8 x float>* %299, align 1, !tbaa !12
  %301 = add nsw i64 %297, 8
  %302 = getelementptr inbounds float, float* %3, i64 %301
  %303 = bitcast float* %302 to <8 x float>*
  %304 = load <8 x float>, <8 x float>* %303, align 1, !tbaa !12
  %305 = add nsw i64 %297, 16
  %306 = getelementptr inbounds float, float* %3, i64 %305
  %307 = bitcast float* %306 to <8 x float>*
  %308 = load <8 x float>, <8 x float>* %307, align 1, !tbaa !12
  %309 = add nsw i64 %297, 24
  %310 = getelementptr inbounds float, float* %3, i64 %309
  %311 = bitcast float* %310 to <8 x float>*
  %312 = load <8 x float>, <8 x float>* %311, align 1, !tbaa !12
  %313 = add nsw i64 %297, 32
  %314 = getelementptr inbounds float, float* %3, i64 %313
  %315 = bitcast float* %314 to <8 x float>*
  %316 = load <8 x float>, <8 x float>* %315, align 1, !tbaa !12
  %317 = add nsw i64 %297, 40
  %318 = getelementptr inbounds float, float* %3, i64 %317
  %319 = bitcast float* %318 to <8 x float>*
  %320 = load <8 x float>, <8 x float>* %319, align 1, !tbaa !12
  %321 = add nsw i64 %297, 48
  %322 = getelementptr inbounds float, float* %3, i64 %321
  %323 = bitcast float* %322 to <8 x float>*
  %324 = load <8 x float>, <8 x float>* %323, align 1, !tbaa !12
  %325 = add nsw i64 %297, 56
  %326 = getelementptr inbounds float, float* %3, i64 %325
  %327 = bitcast float* %326 to <8 x float>*
  %328 = load <8 x float>, <8 x float>* %327, align 1, !tbaa !12
  %329 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %300, <8 x float> %30, <8 x float> %268) #10
  %330 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %304, <8 x float> %30, <8 x float> %272) #10
  %331 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %308, <8 x float> %30, <8 x float> %276) #10
  %332 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %312, <8 x float> %30, <8 x float> %280) #10
  %333 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %316, <8 x float> %30, <8 x float> %284) #10
  %334 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %320, <8 x float> %30, <8 x float> %288) #10
  %335 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %324, <8 x float> %30, <8 x float> %292) #10
  %336 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %328, <8 x float> %30, <8 x float> %296) #10
  store <8 x float> %329, <8 x float>* %267, align 1, !tbaa !12
  store <8 x float> %330, <8 x float>* %271, align 1, !tbaa !12
  store <8 x float> %331, <8 x float>* %275, align 1, !tbaa !12
  store <8 x float> %332, <8 x float>* %279, align 1, !tbaa !12
  store <8 x float> %333, <8 x float>* %283, align 1, !tbaa !12
  store <8 x float> %334, <8 x float>* %287, align 1, !tbaa !12
  store <8 x float> %335, <8 x float>* %291, align 1, !tbaa !12
  store <8 x float> %336, <8 x float>* %295, align 1, !tbaa !12
  %337 = add nuw nsw i64 %232, 64
  %338 = icmp ult i64 %337, %107
  br i1 %338, label %231, label %225

339:                                              ; preds = %345
  br i1 %97, label %340, label %567

340:                                              ; preds = %339
  %341 = trunc i64 %36 to i32
  %342 = mul nsw i32 %96, %341
  %343 = sext i32 %342 to i64
  %344 = zext i32 %96 to i64
  br label %459

345:                                              ; preds = %226, %345
  %346 = phi i64 [ 0, %226 ], [ %451, %345 ]
  %347 = getelementptr inbounds float, float* %5, i64 %346
  %348 = getelementptr inbounds float, float* %347, i64 8
  %349 = bitcast float* %348 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %349, i32 0, i32 1, i32 1)
  %350 = getelementptr inbounds float, float* %3, i64 %346
  %351 = getelementptr inbounds float, float* %350, i64 8
  %352 = bitcast float* %351 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %352, i32 0, i32 1, i32 1)
  %353 = getelementptr inbounds float, float* %347, i64 16
  %354 = bitcast float* %353 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %354, i32 0, i32 1, i32 1)
  %355 = getelementptr inbounds float, float* %350, i64 16
  %356 = bitcast float* %355 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %356, i32 0, i32 1, i32 1)
  %357 = getelementptr inbounds float, float* %347, i64 24
  %358 = bitcast float* %357 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %358, i32 0, i32 1, i32 1)
  %359 = getelementptr inbounds float, float* %350, i64 24
  %360 = bitcast float* %359 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %360, i32 0, i32 1, i32 1)
  %361 = getelementptr inbounds float, float* %347, i64 32
  %362 = bitcast float* %361 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %362, i32 0, i32 1, i32 1)
  %363 = getelementptr inbounds float, float* %350, i64 32
  %364 = bitcast float* %363 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %364, i32 0, i32 1, i32 1)
  %365 = getelementptr inbounds float, float* %347, i64 40
  %366 = bitcast float* %365 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %366, i32 0, i32 1, i32 1)
  %367 = getelementptr inbounds float, float* %350, i64 40
  %368 = bitcast float* %367 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %368, i32 0, i32 1, i32 1)
  %369 = getelementptr inbounds float, float* %347, i64 48
  %370 = bitcast float* %369 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %370, i32 0, i32 1, i32 1)
  %371 = getelementptr inbounds float, float* %350, i64 48
  %372 = bitcast float* %371 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %372, i32 0, i32 1, i32 1)
  %373 = getelementptr inbounds float, float* %347, i64 56
  %374 = bitcast float* %373 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %374, i32 0, i32 1, i32 1)
  %375 = getelementptr inbounds float, float* %350, i64 56
  %376 = bitcast float* %375 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %376, i32 0, i32 1, i32 1)
  %377 = getelementptr inbounds float, float* %347, i64 64
  %378 = bitcast float* %377 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %378, i32 0, i32 1, i32 1)
  %379 = getelementptr inbounds float, float* %350, i64 64
  %380 = bitcast float* %379 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %380, i32 0, i32 1, i32 1)
  %381 = bitcast float* %347 to <8 x float>*
  %382 = load <8 x float>, <8 x float>* %381, align 1, !tbaa !12
  %383 = or i64 %346, 8
  %384 = getelementptr inbounds float, float* %5, i64 %383
  %385 = bitcast float* %384 to <8 x float>*
  %386 = load <8 x float>, <8 x float>* %385, align 1, !tbaa !12
  %387 = or i64 %346, 16
  %388 = getelementptr inbounds float, float* %5, i64 %387
  %389 = bitcast float* %388 to <8 x float>*
  %390 = load <8 x float>, <8 x float>* %389, align 1, !tbaa !12
  %391 = or i64 %346, 24
  %392 = getelementptr inbounds float, float* %5, i64 %391
  %393 = bitcast float* %392 to <8 x float>*
  %394 = load <8 x float>, <8 x float>* %393, align 1, !tbaa !12
  %395 = or i64 %346, 32
  %396 = getelementptr inbounds float, float* %5, i64 %395
  %397 = bitcast float* %396 to <8 x float>*
  %398 = load <8 x float>, <8 x float>* %397, align 1, !tbaa !12
  %399 = or i64 %346, 40
  %400 = getelementptr inbounds float, float* %5, i64 %399
  %401 = bitcast float* %400 to <8 x float>*
  %402 = load <8 x float>, <8 x float>* %401, align 1, !tbaa !12
  %403 = or i64 %346, 48
  %404 = getelementptr inbounds float, float* %5, i64 %403
  %405 = bitcast float* %404 to <8 x float>*
  %406 = load <8 x float>, <8 x float>* %405, align 1, !tbaa !12
  %407 = or i64 %346, 56
  %408 = getelementptr inbounds float, float* %5, i64 %407
  %409 = bitcast float* %408 to <8 x float>*
  %410 = load <8 x float>, <8 x float>* %409, align 1, !tbaa !12
  %411 = add nsw i64 %346, %229
  %412 = getelementptr inbounds float, float* %3, i64 %411
  %413 = bitcast float* %412 to <8 x float>*
  %414 = load <8 x float>, <8 x float>* %413, align 1, !tbaa !12
  %415 = add nsw i64 %411, 8
  %416 = getelementptr inbounds float, float* %3, i64 %415
  %417 = bitcast float* %416 to <8 x float>*
  %418 = load <8 x float>, <8 x float>* %417, align 1, !tbaa !12
  %419 = add nsw i64 %411, 16
  %420 = getelementptr inbounds float, float* %3, i64 %419
  %421 = bitcast float* %420 to <8 x float>*
  %422 = load <8 x float>, <8 x float>* %421, align 1, !tbaa !12
  %423 = add nsw i64 %411, 24
  %424 = getelementptr inbounds float, float* %3, i64 %423
  %425 = bitcast float* %424 to <8 x float>*
  %426 = load <8 x float>, <8 x float>* %425, align 1, !tbaa !12
  %427 = add nsw i64 %411, 32
  %428 = getelementptr inbounds float, float* %3, i64 %427
  %429 = bitcast float* %428 to <8 x float>*
  %430 = load <8 x float>, <8 x float>* %429, align 1, !tbaa !12
  %431 = add nsw i64 %411, 40
  %432 = getelementptr inbounds float, float* %3, i64 %431
  %433 = bitcast float* %432 to <8 x float>*
  %434 = load <8 x float>, <8 x float>* %433, align 1, !tbaa !12
  %435 = add nsw i64 %411, 48
  %436 = getelementptr inbounds float, float* %3, i64 %435
  %437 = bitcast float* %436 to <8 x float>*
  %438 = load <8 x float>, <8 x float>* %437, align 1, !tbaa !12
  %439 = add nsw i64 %411, 56
  %440 = getelementptr inbounds float, float* %3, i64 %439
  %441 = bitcast float* %440 to <8 x float>*
  %442 = load <8 x float>, <8 x float>* %441, align 1, !tbaa !12
  %443 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %414, <8 x float> %35, <8 x float> %382) #10
  %444 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %418, <8 x float> %35, <8 x float> %386) #10
  %445 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %422, <8 x float> %35, <8 x float> %390) #10
  %446 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %426, <8 x float> %35, <8 x float> %394) #10
  %447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %430, <8 x float> %35, <8 x float> %398) #10
  %448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %434, <8 x float> %35, <8 x float> %402) #10
  %449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %438, <8 x float> %35, <8 x float> %406) #10
  %450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %442, <8 x float> %35, <8 x float> %410) #10
  store <8 x float> %443, <8 x float>* %381, align 1, !tbaa !12
  store <8 x float> %444, <8 x float>* %385, align 1, !tbaa !12
  store <8 x float> %445, <8 x float>* %389, align 1, !tbaa !12
  store <8 x float> %446, <8 x float>* %393, align 1, !tbaa !12
  store <8 x float> %447, <8 x float>* %397, align 1, !tbaa !12
  store <8 x float> %448, <8 x float>* %401, align 1, !tbaa !12
  store <8 x float> %449, <8 x float>* %405, align 1, !tbaa !12
  store <8 x float> %450, <8 x float>* %409, align 1, !tbaa !12
  %451 = add nuw nsw i64 %346, 64
  %452 = icmp ult i64 %451, %230
  br i1 %452, label %345, label %339

453:                                              ; preds = %459
  br i1 %97, label %454, label %567

454:                                              ; preds = %453
  %455 = trunc i64 %41 to i32
  %456 = mul nsw i32 %96, %455
  %457 = sext i32 %456 to i64
  %458 = zext i32 %96 to i64
  br label %574

459:                                              ; preds = %340, %459
  %460 = phi i64 [ 0, %340 ], [ %565, %459 ]
  %461 = getelementptr inbounds float, float* %5, i64 %460
  %462 = getelementptr inbounds float, float* %461, i64 8
  %463 = bitcast float* %462 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %463, i32 0, i32 1, i32 1)
  %464 = getelementptr inbounds float, float* %3, i64 %460
  %465 = getelementptr inbounds float, float* %464, i64 8
  %466 = bitcast float* %465 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %466, i32 0, i32 1, i32 1)
  %467 = getelementptr inbounds float, float* %461, i64 16
  %468 = bitcast float* %467 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %468, i32 0, i32 1, i32 1)
  %469 = getelementptr inbounds float, float* %464, i64 16
  %470 = bitcast float* %469 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %470, i32 0, i32 1, i32 1)
  %471 = getelementptr inbounds float, float* %461, i64 24
  %472 = bitcast float* %471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %472, i32 0, i32 1, i32 1)
  %473 = getelementptr inbounds float, float* %464, i64 24
  %474 = bitcast float* %473 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %474, i32 0, i32 1, i32 1)
  %475 = getelementptr inbounds float, float* %461, i64 32
  %476 = bitcast float* %475 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %476, i32 0, i32 1, i32 1)
  %477 = getelementptr inbounds float, float* %464, i64 32
  %478 = bitcast float* %477 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %478, i32 0, i32 1, i32 1)
  %479 = getelementptr inbounds float, float* %461, i64 40
  %480 = bitcast float* %479 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %480, i32 0, i32 1, i32 1)
  %481 = getelementptr inbounds float, float* %464, i64 40
  %482 = bitcast float* %481 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %482, i32 0, i32 1, i32 1)
  %483 = getelementptr inbounds float, float* %461, i64 48
  %484 = bitcast float* %483 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %484, i32 0, i32 1, i32 1)
  %485 = getelementptr inbounds float, float* %464, i64 48
  %486 = bitcast float* %485 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %486, i32 0, i32 1, i32 1)
  %487 = getelementptr inbounds float, float* %461, i64 56
  %488 = bitcast float* %487 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %488, i32 0, i32 1, i32 1)
  %489 = getelementptr inbounds float, float* %464, i64 56
  %490 = bitcast float* %489 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %490, i32 0, i32 1, i32 1)
  %491 = getelementptr inbounds float, float* %461, i64 64
  %492 = bitcast float* %491 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %492, i32 0, i32 1, i32 1)
  %493 = getelementptr inbounds float, float* %464, i64 64
  %494 = bitcast float* %493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %494, i32 0, i32 1, i32 1)
  %495 = bitcast float* %461 to <8 x float>*
  %496 = load <8 x float>, <8 x float>* %495, align 1, !tbaa !12
  %497 = or i64 %460, 8
  %498 = getelementptr inbounds float, float* %5, i64 %497
  %499 = bitcast float* %498 to <8 x float>*
  %500 = load <8 x float>, <8 x float>* %499, align 1, !tbaa !12
  %501 = or i64 %460, 16
  %502 = getelementptr inbounds float, float* %5, i64 %501
  %503 = bitcast float* %502 to <8 x float>*
  %504 = load <8 x float>, <8 x float>* %503, align 1, !tbaa !12
  %505 = or i64 %460, 24
  %506 = getelementptr inbounds float, float* %5, i64 %505
  %507 = bitcast float* %506 to <8 x float>*
  %508 = load <8 x float>, <8 x float>* %507, align 1, !tbaa !12
  %509 = or i64 %460, 32
  %510 = getelementptr inbounds float, float* %5, i64 %509
  %511 = bitcast float* %510 to <8 x float>*
  %512 = load <8 x float>, <8 x float>* %511, align 1, !tbaa !12
  %513 = or i64 %460, 40
  %514 = getelementptr inbounds float, float* %5, i64 %513
  %515 = bitcast float* %514 to <8 x float>*
  %516 = load <8 x float>, <8 x float>* %515, align 1, !tbaa !12
  %517 = or i64 %460, 48
  %518 = getelementptr inbounds float, float* %5, i64 %517
  %519 = bitcast float* %518 to <8 x float>*
  %520 = load <8 x float>, <8 x float>* %519, align 1, !tbaa !12
  %521 = or i64 %460, 56
  %522 = getelementptr inbounds float, float* %5, i64 %521
  %523 = bitcast float* %522 to <8 x float>*
  %524 = load <8 x float>, <8 x float>* %523, align 1, !tbaa !12
  %525 = add nsw i64 %460, %343
  %526 = getelementptr inbounds float, float* %3, i64 %525
  %527 = bitcast float* %526 to <8 x float>*
  %528 = load <8 x float>, <8 x float>* %527, align 1, !tbaa !12
  %529 = add nsw i64 %525, 8
  %530 = getelementptr inbounds float, float* %3, i64 %529
  %531 = bitcast float* %530 to <8 x float>*
  %532 = load <8 x float>, <8 x float>* %531, align 1, !tbaa !12
  %533 = add nsw i64 %525, 16
  %534 = getelementptr inbounds float, float* %3, i64 %533
  %535 = bitcast float* %534 to <8 x float>*
  %536 = load <8 x float>, <8 x float>* %535, align 1, !tbaa !12
  %537 = add nsw i64 %525, 24
  %538 = getelementptr inbounds float, float* %3, i64 %537
  %539 = bitcast float* %538 to <8 x float>*
  %540 = load <8 x float>, <8 x float>* %539, align 1, !tbaa !12
  %541 = add nsw i64 %525, 32
  %542 = getelementptr inbounds float, float* %3, i64 %541
  %543 = bitcast float* %542 to <8 x float>*
  %544 = load <8 x float>, <8 x float>* %543, align 1, !tbaa !12
  %545 = add nsw i64 %525, 40
  %546 = getelementptr inbounds float, float* %3, i64 %545
  %547 = bitcast float* %546 to <8 x float>*
  %548 = load <8 x float>, <8 x float>* %547, align 1, !tbaa !12
  %549 = add nsw i64 %525, 48
  %550 = getelementptr inbounds float, float* %3, i64 %549
  %551 = bitcast float* %550 to <8 x float>*
  %552 = load <8 x float>, <8 x float>* %551, align 1, !tbaa !12
  %553 = add nsw i64 %525, 56
  %554 = getelementptr inbounds float, float* %3, i64 %553
  %555 = bitcast float* %554 to <8 x float>*
  %556 = load <8 x float>, <8 x float>* %555, align 1, !tbaa !12
  %557 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %528, <8 x float> %40, <8 x float> %496) #10
  %558 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %532, <8 x float> %40, <8 x float> %500) #10
  %559 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %536, <8 x float> %40, <8 x float> %504) #10
  %560 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %540, <8 x float> %40, <8 x float> %508) #10
  %561 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %544, <8 x float> %40, <8 x float> %512) #10
  %562 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %548, <8 x float> %40, <8 x float> %516) #10
  %563 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %552, <8 x float> %40, <8 x float> %520) #10
  %564 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %556, <8 x float> %40, <8 x float> %524) #10
  store <8 x float> %557, <8 x float>* %495, align 1, !tbaa !12
  store <8 x float> %558, <8 x float>* %499, align 1, !tbaa !12
  store <8 x float> %559, <8 x float>* %503, align 1, !tbaa !12
  store <8 x float> %560, <8 x float>* %507, align 1, !tbaa !12
  store <8 x float> %561, <8 x float>* %511, align 1, !tbaa !12
  store <8 x float> %562, <8 x float>* %515, align 1, !tbaa !12
  store <8 x float> %563, <8 x float>* %519, align 1, !tbaa !12
  store <8 x float> %564, <8 x float>* %523, align 1, !tbaa !12
  %565 = add nuw nsw i64 %460, 64
  %566 = icmp ult i64 %565, %344
  br i1 %566, label %459, label %453

567:                                              ; preds = %574, %102, %225, %339, %453
  %568 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %569 = icmp sgt i32 %568, 0
  br i1 %569, label %570, label %1727

570:                                              ; preds = %567
  %571 = zext i32 %568 to i64
  %572 = trunc i64 %46 to i32
  %573 = mul nsw i32 %568, %572
  br label %688

574:                                              ; preds = %454, %574
  %575 = phi i64 [ 0, %454 ], [ %680, %574 ]
  %576 = getelementptr inbounds float, float* %5, i64 %575
  %577 = getelementptr inbounds float, float* %576, i64 8
  %578 = bitcast float* %577 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %578, i32 0, i32 1, i32 1)
  %579 = getelementptr inbounds float, float* %3, i64 %575
  %580 = getelementptr inbounds float, float* %579, i64 8
  %581 = bitcast float* %580 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %581, i32 0, i32 1, i32 1)
  %582 = getelementptr inbounds float, float* %576, i64 16
  %583 = bitcast float* %582 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %583, i32 0, i32 1, i32 1)
  %584 = getelementptr inbounds float, float* %579, i64 16
  %585 = bitcast float* %584 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %585, i32 0, i32 1, i32 1)
  %586 = getelementptr inbounds float, float* %576, i64 24
  %587 = bitcast float* %586 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %587, i32 0, i32 1, i32 1)
  %588 = getelementptr inbounds float, float* %579, i64 24
  %589 = bitcast float* %588 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %589, i32 0, i32 1, i32 1)
  %590 = getelementptr inbounds float, float* %576, i64 32
  %591 = bitcast float* %590 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %591, i32 0, i32 1, i32 1)
  %592 = getelementptr inbounds float, float* %579, i64 32
  %593 = bitcast float* %592 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %593, i32 0, i32 1, i32 1)
  %594 = getelementptr inbounds float, float* %576, i64 40
  %595 = bitcast float* %594 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %595, i32 0, i32 1, i32 1)
  %596 = getelementptr inbounds float, float* %579, i64 40
  %597 = bitcast float* %596 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %597, i32 0, i32 1, i32 1)
  %598 = getelementptr inbounds float, float* %576, i64 48
  %599 = bitcast float* %598 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %599, i32 0, i32 1, i32 1)
  %600 = getelementptr inbounds float, float* %579, i64 48
  %601 = bitcast float* %600 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %601, i32 0, i32 1, i32 1)
  %602 = getelementptr inbounds float, float* %576, i64 56
  %603 = bitcast float* %602 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %603, i32 0, i32 1, i32 1)
  %604 = getelementptr inbounds float, float* %579, i64 56
  %605 = bitcast float* %604 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %605, i32 0, i32 1, i32 1)
  %606 = getelementptr inbounds float, float* %576, i64 64
  %607 = bitcast float* %606 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %607, i32 0, i32 1, i32 1)
  %608 = getelementptr inbounds float, float* %579, i64 64
  %609 = bitcast float* %608 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %609, i32 0, i32 1, i32 1)
  %610 = bitcast float* %576 to <8 x float>*
  %611 = load <8 x float>, <8 x float>* %610, align 1, !tbaa !12
  %612 = or i64 %575, 8
  %613 = getelementptr inbounds float, float* %5, i64 %612
  %614 = bitcast float* %613 to <8 x float>*
  %615 = load <8 x float>, <8 x float>* %614, align 1, !tbaa !12
  %616 = or i64 %575, 16
  %617 = getelementptr inbounds float, float* %5, i64 %616
  %618 = bitcast float* %617 to <8 x float>*
  %619 = load <8 x float>, <8 x float>* %618, align 1, !tbaa !12
  %620 = or i64 %575, 24
  %621 = getelementptr inbounds float, float* %5, i64 %620
  %622 = bitcast float* %621 to <8 x float>*
  %623 = load <8 x float>, <8 x float>* %622, align 1, !tbaa !12
  %624 = or i64 %575, 32
  %625 = getelementptr inbounds float, float* %5, i64 %624
  %626 = bitcast float* %625 to <8 x float>*
  %627 = load <8 x float>, <8 x float>* %626, align 1, !tbaa !12
  %628 = or i64 %575, 40
  %629 = getelementptr inbounds float, float* %5, i64 %628
  %630 = bitcast float* %629 to <8 x float>*
  %631 = load <8 x float>, <8 x float>* %630, align 1, !tbaa !12
  %632 = or i64 %575, 48
  %633 = getelementptr inbounds float, float* %5, i64 %632
  %634 = bitcast float* %633 to <8 x float>*
  %635 = load <8 x float>, <8 x float>* %634, align 1, !tbaa !12
  %636 = or i64 %575, 56
  %637 = getelementptr inbounds float, float* %5, i64 %636
  %638 = bitcast float* %637 to <8 x float>*
  %639 = load <8 x float>, <8 x float>* %638, align 1, !tbaa !12
  %640 = add nsw i64 %575, %457
  %641 = getelementptr inbounds float, float* %3, i64 %640
  %642 = bitcast float* %641 to <8 x float>*
  %643 = load <8 x float>, <8 x float>* %642, align 1, !tbaa !12
  %644 = add nsw i64 %640, 8
  %645 = getelementptr inbounds float, float* %3, i64 %644
  %646 = bitcast float* %645 to <8 x float>*
  %647 = load <8 x float>, <8 x float>* %646, align 1, !tbaa !12
  %648 = add nsw i64 %640, 16
  %649 = getelementptr inbounds float, float* %3, i64 %648
  %650 = bitcast float* %649 to <8 x float>*
  %651 = load <8 x float>, <8 x float>* %650, align 1, !tbaa !12
  %652 = add nsw i64 %640, 24
  %653 = getelementptr inbounds float, float* %3, i64 %652
  %654 = bitcast float* %653 to <8 x float>*
  %655 = load <8 x float>, <8 x float>* %654, align 1, !tbaa !12
  %656 = add nsw i64 %640, 32
  %657 = getelementptr inbounds float, float* %3, i64 %656
  %658 = bitcast float* %657 to <8 x float>*
  %659 = load <8 x float>, <8 x float>* %658, align 1, !tbaa !12
  %660 = add nsw i64 %640, 40
  %661 = getelementptr inbounds float, float* %3, i64 %660
  %662 = bitcast float* %661 to <8 x float>*
  %663 = load <8 x float>, <8 x float>* %662, align 1, !tbaa !12
  %664 = add nsw i64 %640, 48
  %665 = getelementptr inbounds float, float* %3, i64 %664
  %666 = bitcast float* %665 to <8 x float>*
  %667 = load <8 x float>, <8 x float>* %666, align 1, !tbaa !12
  %668 = add nsw i64 %640, 56
  %669 = getelementptr inbounds float, float* %3, i64 %668
  %670 = bitcast float* %669 to <8 x float>*
  %671 = load <8 x float>, <8 x float>* %670, align 1, !tbaa !12
  %672 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %643, <8 x float> %45, <8 x float> %611) #10
  %673 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %647, <8 x float> %45, <8 x float> %615) #10
  %674 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %651, <8 x float> %45, <8 x float> %619) #10
  %675 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %655, <8 x float> %45, <8 x float> %623) #10
  %676 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %659, <8 x float> %45, <8 x float> %627) #10
  %677 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %663, <8 x float> %45, <8 x float> %631) #10
  %678 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %667, <8 x float> %45, <8 x float> %635) #10
  %679 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %671, <8 x float> %45, <8 x float> %639) #10
  store <8 x float> %672, <8 x float>* %610, align 1, !tbaa !12
  store <8 x float> %673, <8 x float>* %614, align 1, !tbaa !12
  store <8 x float> %674, <8 x float>* %618, align 1, !tbaa !12
  store <8 x float> %675, <8 x float>* %622, align 1, !tbaa !12
  store <8 x float> %676, <8 x float>* %626, align 1, !tbaa !12
  store <8 x float> %677, <8 x float>* %630, align 1, !tbaa !12
  store <8 x float> %678, <8 x float>* %634, align 1, !tbaa !12
  store <8 x float> %679, <8 x float>* %638, align 1, !tbaa !12
  %680 = add nuw nsw i64 %575, 64
  %681 = icmp ult i64 %680, %458
  br i1 %681, label %574, label %567

682:                                              ; preds = %688
  br i1 %569, label %683, label %1147

683:                                              ; preds = %682
  %684 = trunc i64 %51 to i32
  %685 = mul nsw i32 %568, %684
  %686 = sext i32 %685 to i64
  %687 = zext i32 %568 to i64
  br label %811

688:                                              ; preds = %570, %688
  %689 = phi i64 [ 0, %570 ], [ %803, %688 ]
  %690 = getelementptr inbounds float, float* %5, i64 %689
  %691 = getelementptr inbounds float, float* %690, i64 8
  %692 = bitcast float* %691 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %692, i32 0, i32 1, i32 1)
  %693 = getelementptr inbounds float, float* %3, i64 %689
  %694 = getelementptr inbounds float, float* %693, i64 8
  %695 = bitcast float* %694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %695, i32 0, i32 1, i32 1)
  %696 = getelementptr inbounds float, float* %690, i64 16
  %697 = bitcast float* %696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %697, i32 0, i32 1, i32 1)
  %698 = getelementptr inbounds float, float* %693, i64 16
  %699 = bitcast float* %698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %699, i32 0, i32 1, i32 1)
  %700 = getelementptr inbounds float, float* %690, i64 24
  %701 = bitcast float* %700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %701, i32 0, i32 1, i32 1)
  %702 = getelementptr inbounds float, float* %693, i64 24
  %703 = bitcast float* %702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %703, i32 0, i32 1, i32 1)
  %704 = getelementptr inbounds float, float* %690, i64 32
  %705 = bitcast float* %704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %705, i32 0, i32 1, i32 1)
  %706 = getelementptr inbounds float, float* %693, i64 32
  %707 = bitcast float* %706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %707, i32 0, i32 1, i32 1)
  %708 = getelementptr inbounds float, float* %690, i64 40
  %709 = bitcast float* %708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %709, i32 0, i32 1, i32 1)
  %710 = getelementptr inbounds float, float* %693, i64 40
  %711 = bitcast float* %710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %711, i32 0, i32 1, i32 1)
  %712 = getelementptr inbounds float, float* %690, i64 48
  %713 = bitcast float* %712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %713, i32 0, i32 1, i32 1)
  %714 = getelementptr inbounds float, float* %693, i64 48
  %715 = bitcast float* %714 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %715, i32 0, i32 1, i32 1)
  %716 = getelementptr inbounds float, float* %690, i64 56
  %717 = bitcast float* %716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %717, i32 0, i32 1, i32 1)
  %718 = getelementptr inbounds float, float* %693, i64 56
  %719 = bitcast float* %718 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %719, i32 0, i32 1, i32 1)
  %720 = getelementptr inbounds float, float* %690, i64 64
  %721 = bitcast float* %720 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %721, i32 0, i32 1, i32 1)
  %722 = getelementptr inbounds float, float* %693, i64 64
  %723 = bitcast float* %722 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %723, i32 0, i32 1, i32 1)
  %724 = bitcast float* %690 to <8 x float>*
  %725 = load <8 x float>, <8 x float>* %724, align 1, !tbaa !12
  %726 = or i64 %689, 8
  %727 = getelementptr inbounds float, float* %5, i64 %726
  %728 = bitcast float* %727 to <8 x float>*
  %729 = load <8 x float>, <8 x float>* %728, align 1, !tbaa !12
  %730 = or i64 %689, 16
  %731 = getelementptr inbounds float, float* %5, i64 %730
  %732 = bitcast float* %731 to <8 x float>*
  %733 = load <8 x float>, <8 x float>* %732, align 1, !tbaa !12
  %734 = or i64 %689, 24
  %735 = getelementptr inbounds float, float* %5, i64 %734
  %736 = bitcast float* %735 to <8 x float>*
  %737 = load <8 x float>, <8 x float>* %736, align 1, !tbaa !12
  %738 = or i64 %689, 32
  %739 = getelementptr inbounds float, float* %5, i64 %738
  %740 = bitcast float* %739 to <8 x float>*
  %741 = load <8 x float>, <8 x float>* %740, align 1, !tbaa !12
  %742 = or i64 %689, 40
  %743 = getelementptr inbounds float, float* %5, i64 %742
  %744 = bitcast float* %743 to <8 x float>*
  %745 = load <8 x float>, <8 x float>* %744, align 1, !tbaa !12
  %746 = or i64 %689, 48
  %747 = getelementptr inbounds float, float* %5, i64 %746
  %748 = bitcast float* %747 to <8 x float>*
  %749 = load <8 x float>, <8 x float>* %748, align 1, !tbaa !12
  %750 = or i64 %689, 56
  %751 = getelementptr inbounds float, float* %5, i64 %750
  %752 = bitcast float* %751 to <8 x float>*
  %753 = load <8 x float>, <8 x float>* %752, align 1, !tbaa !12
  %754 = trunc i64 %689 to i32
  %755 = add nsw i32 %573, %754
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds float, float* %3, i64 %756
  %758 = bitcast float* %757 to <8 x float>*
  %759 = load <8 x float>, <8 x float>* %758, align 1, !tbaa !12
  %760 = add nsw i32 %755, 8
  %761 = sext i32 %760 to i64
  %762 = getelementptr inbounds float, float* %3, i64 %761
  %763 = bitcast float* %762 to <8 x float>*
  %764 = load <8 x float>, <8 x float>* %763, align 1, !tbaa !12
  %765 = add nsw i32 %755, 16
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds float, float* %3, i64 %766
  %768 = bitcast float* %767 to <8 x float>*
  %769 = load <8 x float>, <8 x float>* %768, align 1, !tbaa !12
  %770 = add nsw i32 %755, 24
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds float, float* %3, i64 %771
  %773 = bitcast float* %772 to <8 x float>*
  %774 = load <8 x float>, <8 x float>* %773, align 1, !tbaa !12
  %775 = add nsw i32 %755, 32
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds float, float* %3, i64 %776
  %778 = bitcast float* %777 to <8 x float>*
  %779 = load <8 x float>, <8 x float>* %778, align 1, !tbaa !12
  %780 = add nsw i32 %755, 40
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds float, float* %3, i64 %781
  %783 = bitcast float* %782 to <8 x float>*
  %784 = load <8 x float>, <8 x float>* %783, align 1, !tbaa !12
  %785 = add nsw i32 %755, 48
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds float, float* %3, i64 %786
  %788 = bitcast float* %787 to <8 x float>*
  %789 = load <8 x float>, <8 x float>* %788, align 1, !tbaa !12
  %790 = add nsw i32 %755, 56
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds float, float* %3, i64 %791
  %793 = bitcast float* %792 to <8 x float>*
  %794 = load <8 x float>, <8 x float>* %793, align 1, !tbaa !12
  %795 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %759, <8 x float> %50, <8 x float> %725) #10
  %796 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %764, <8 x float> %50, <8 x float> %729) #10
  %797 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %769, <8 x float> %50, <8 x float> %733) #10
  %798 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %774, <8 x float> %50, <8 x float> %737) #10
  %799 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %779, <8 x float> %50, <8 x float> %741) #10
  %800 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %784, <8 x float> %50, <8 x float> %745) #10
  %801 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %789, <8 x float> %50, <8 x float> %749) #10
  %802 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %794, <8 x float> %50, <8 x float> %753) #10
  store <8 x float> %795, <8 x float>* %724, align 1, !tbaa !12
  store <8 x float> %796, <8 x float>* %728, align 1, !tbaa !12
  store <8 x float> %797, <8 x float>* %732, align 1, !tbaa !12
  store <8 x float> %798, <8 x float>* %736, align 1, !tbaa !12
  store <8 x float> %799, <8 x float>* %740, align 1, !tbaa !12
  store <8 x float> %800, <8 x float>* %744, align 1, !tbaa !12
  store <8 x float> %801, <8 x float>* %748, align 1, !tbaa !12
  store <8 x float> %802, <8 x float>* %752, align 1, !tbaa !12
  %803 = add nuw nsw i64 %689, 64
  %804 = icmp ult i64 %803, %571
  br i1 %804, label %688, label %682

805:                                              ; preds = %811
  br i1 %569, label %806, label %1147

806:                                              ; preds = %805
  %807 = trunc i64 %56 to i32
  %808 = mul nsw i32 %568, %807
  %809 = sext i32 %808 to i64
  %810 = zext i32 %568 to i64
  br label %925

811:                                              ; preds = %683, %811
  %812 = phi i64 [ 0, %683 ], [ %917, %811 ]
  %813 = getelementptr inbounds float, float* %5, i64 %812
  %814 = getelementptr inbounds float, float* %813, i64 8
  %815 = bitcast float* %814 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %815, i32 0, i32 1, i32 1)
  %816 = getelementptr inbounds float, float* %3, i64 %812
  %817 = getelementptr inbounds float, float* %816, i64 8
  %818 = bitcast float* %817 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %818, i32 0, i32 1, i32 1)
  %819 = getelementptr inbounds float, float* %813, i64 16
  %820 = bitcast float* %819 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %820, i32 0, i32 1, i32 1)
  %821 = getelementptr inbounds float, float* %816, i64 16
  %822 = bitcast float* %821 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %822, i32 0, i32 1, i32 1)
  %823 = getelementptr inbounds float, float* %813, i64 24
  %824 = bitcast float* %823 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %824, i32 0, i32 1, i32 1)
  %825 = getelementptr inbounds float, float* %816, i64 24
  %826 = bitcast float* %825 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %826, i32 0, i32 1, i32 1)
  %827 = getelementptr inbounds float, float* %813, i64 32
  %828 = bitcast float* %827 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %828, i32 0, i32 1, i32 1)
  %829 = getelementptr inbounds float, float* %816, i64 32
  %830 = bitcast float* %829 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %830, i32 0, i32 1, i32 1)
  %831 = getelementptr inbounds float, float* %813, i64 40
  %832 = bitcast float* %831 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %832, i32 0, i32 1, i32 1)
  %833 = getelementptr inbounds float, float* %816, i64 40
  %834 = bitcast float* %833 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %834, i32 0, i32 1, i32 1)
  %835 = getelementptr inbounds float, float* %813, i64 48
  %836 = bitcast float* %835 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %836, i32 0, i32 1, i32 1)
  %837 = getelementptr inbounds float, float* %816, i64 48
  %838 = bitcast float* %837 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %838, i32 0, i32 1, i32 1)
  %839 = getelementptr inbounds float, float* %813, i64 56
  %840 = bitcast float* %839 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %840, i32 0, i32 1, i32 1)
  %841 = getelementptr inbounds float, float* %816, i64 56
  %842 = bitcast float* %841 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %842, i32 0, i32 1, i32 1)
  %843 = getelementptr inbounds float, float* %813, i64 64
  %844 = bitcast float* %843 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %844, i32 0, i32 1, i32 1)
  %845 = getelementptr inbounds float, float* %816, i64 64
  %846 = bitcast float* %845 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %846, i32 0, i32 1, i32 1)
  %847 = bitcast float* %813 to <8 x float>*
  %848 = load <8 x float>, <8 x float>* %847, align 1, !tbaa !12
  %849 = or i64 %812, 8
  %850 = getelementptr inbounds float, float* %5, i64 %849
  %851 = bitcast float* %850 to <8 x float>*
  %852 = load <8 x float>, <8 x float>* %851, align 1, !tbaa !12
  %853 = or i64 %812, 16
  %854 = getelementptr inbounds float, float* %5, i64 %853
  %855 = bitcast float* %854 to <8 x float>*
  %856 = load <8 x float>, <8 x float>* %855, align 1, !tbaa !12
  %857 = or i64 %812, 24
  %858 = getelementptr inbounds float, float* %5, i64 %857
  %859 = bitcast float* %858 to <8 x float>*
  %860 = load <8 x float>, <8 x float>* %859, align 1, !tbaa !12
  %861 = or i64 %812, 32
  %862 = getelementptr inbounds float, float* %5, i64 %861
  %863 = bitcast float* %862 to <8 x float>*
  %864 = load <8 x float>, <8 x float>* %863, align 1, !tbaa !12
  %865 = or i64 %812, 40
  %866 = getelementptr inbounds float, float* %5, i64 %865
  %867 = bitcast float* %866 to <8 x float>*
  %868 = load <8 x float>, <8 x float>* %867, align 1, !tbaa !12
  %869 = or i64 %812, 48
  %870 = getelementptr inbounds float, float* %5, i64 %869
  %871 = bitcast float* %870 to <8 x float>*
  %872 = load <8 x float>, <8 x float>* %871, align 1, !tbaa !12
  %873 = or i64 %812, 56
  %874 = getelementptr inbounds float, float* %5, i64 %873
  %875 = bitcast float* %874 to <8 x float>*
  %876 = load <8 x float>, <8 x float>* %875, align 1, !tbaa !12
  %877 = add nsw i64 %812, %686
  %878 = getelementptr inbounds float, float* %3, i64 %877
  %879 = bitcast float* %878 to <8 x float>*
  %880 = load <8 x float>, <8 x float>* %879, align 1, !tbaa !12
  %881 = add nsw i64 %877, 8
  %882 = getelementptr inbounds float, float* %3, i64 %881
  %883 = bitcast float* %882 to <8 x float>*
  %884 = load <8 x float>, <8 x float>* %883, align 1, !tbaa !12
  %885 = add nsw i64 %877, 16
  %886 = getelementptr inbounds float, float* %3, i64 %885
  %887 = bitcast float* %886 to <8 x float>*
  %888 = load <8 x float>, <8 x float>* %887, align 1, !tbaa !12
  %889 = add nsw i64 %877, 24
  %890 = getelementptr inbounds float, float* %3, i64 %889
  %891 = bitcast float* %890 to <8 x float>*
  %892 = load <8 x float>, <8 x float>* %891, align 1, !tbaa !12
  %893 = add nsw i64 %877, 32
  %894 = getelementptr inbounds float, float* %3, i64 %893
  %895 = bitcast float* %894 to <8 x float>*
  %896 = load <8 x float>, <8 x float>* %895, align 1, !tbaa !12
  %897 = add nsw i64 %877, 40
  %898 = getelementptr inbounds float, float* %3, i64 %897
  %899 = bitcast float* %898 to <8 x float>*
  %900 = load <8 x float>, <8 x float>* %899, align 1, !tbaa !12
  %901 = add nsw i64 %877, 48
  %902 = getelementptr inbounds float, float* %3, i64 %901
  %903 = bitcast float* %902 to <8 x float>*
  %904 = load <8 x float>, <8 x float>* %903, align 1, !tbaa !12
  %905 = add nsw i64 %877, 56
  %906 = getelementptr inbounds float, float* %3, i64 %905
  %907 = bitcast float* %906 to <8 x float>*
  %908 = load <8 x float>, <8 x float>* %907, align 1, !tbaa !12
  %909 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %880, <8 x float> %55, <8 x float> %848) #10
  %910 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %884, <8 x float> %55, <8 x float> %852) #10
  %911 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %888, <8 x float> %55, <8 x float> %856) #10
  %912 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %892, <8 x float> %55, <8 x float> %860) #10
  %913 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %896, <8 x float> %55, <8 x float> %864) #10
  %914 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %900, <8 x float> %55, <8 x float> %868) #10
  %915 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %904, <8 x float> %55, <8 x float> %872) #10
  %916 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %908, <8 x float> %55, <8 x float> %876) #10
  store <8 x float> %909, <8 x float>* %847, align 1, !tbaa !12
  store <8 x float> %910, <8 x float>* %851, align 1, !tbaa !12
  store <8 x float> %911, <8 x float>* %855, align 1, !tbaa !12
  store <8 x float> %912, <8 x float>* %859, align 1, !tbaa !12
  store <8 x float> %913, <8 x float>* %863, align 1, !tbaa !12
  store <8 x float> %914, <8 x float>* %867, align 1, !tbaa !12
  store <8 x float> %915, <8 x float>* %871, align 1, !tbaa !12
  store <8 x float> %916, <8 x float>* %875, align 1, !tbaa !12
  %917 = add nuw nsw i64 %812, 64
  %918 = icmp ult i64 %917, %687
  br i1 %918, label %811, label %805

919:                                              ; preds = %925
  br i1 %569, label %920, label %1147

920:                                              ; preds = %919
  %921 = trunc i64 %61 to i32
  %922 = mul nsw i32 %568, %921
  %923 = sext i32 %922 to i64
  %924 = zext i32 %568 to i64
  br label %1039

925:                                              ; preds = %806, %925
  %926 = phi i64 [ 0, %806 ], [ %1031, %925 ]
  %927 = getelementptr inbounds float, float* %5, i64 %926
  %928 = getelementptr inbounds float, float* %927, i64 8
  %929 = bitcast float* %928 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %929, i32 0, i32 1, i32 1)
  %930 = getelementptr inbounds float, float* %3, i64 %926
  %931 = getelementptr inbounds float, float* %930, i64 8
  %932 = bitcast float* %931 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %932, i32 0, i32 1, i32 1)
  %933 = getelementptr inbounds float, float* %927, i64 16
  %934 = bitcast float* %933 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %934, i32 0, i32 1, i32 1)
  %935 = getelementptr inbounds float, float* %930, i64 16
  %936 = bitcast float* %935 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %936, i32 0, i32 1, i32 1)
  %937 = getelementptr inbounds float, float* %927, i64 24
  %938 = bitcast float* %937 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %938, i32 0, i32 1, i32 1)
  %939 = getelementptr inbounds float, float* %930, i64 24
  %940 = bitcast float* %939 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %940, i32 0, i32 1, i32 1)
  %941 = getelementptr inbounds float, float* %927, i64 32
  %942 = bitcast float* %941 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %942, i32 0, i32 1, i32 1)
  %943 = getelementptr inbounds float, float* %930, i64 32
  %944 = bitcast float* %943 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %944, i32 0, i32 1, i32 1)
  %945 = getelementptr inbounds float, float* %927, i64 40
  %946 = bitcast float* %945 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %946, i32 0, i32 1, i32 1)
  %947 = getelementptr inbounds float, float* %930, i64 40
  %948 = bitcast float* %947 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %948, i32 0, i32 1, i32 1)
  %949 = getelementptr inbounds float, float* %927, i64 48
  %950 = bitcast float* %949 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %950, i32 0, i32 1, i32 1)
  %951 = getelementptr inbounds float, float* %930, i64 48
  %952 = bitcast float* %951 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %952, i32 0, i32 1, i32 1)
  %953 = getelementptr inbounds float, float* %927, i64 56
  %954 = bitcast float* %953 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %954, i32 0, i32 1, i32 1)
  %955 = getelementptr inbounds float, float* %930, i64 56
  %956 = bitcast float* %955 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %956, i32 0, i32 1, i32 1)
  %957 = getelementptr inbounds float, float* %927, i64 64
  %958 = bitcast float* %957 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %958, i32 0, i32 1, i32 1)
  %959 = getelementptr inbounds float, float* %930, i64 64
  %960 = bitcast float* %959 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %960, i32 0, i32 1, i32 1)
  %961 = bitcast float* %927 to <8 x float>*
  %962 = load <8 x float>, <8 x float>* %961, align 1, !tbaa !12
  %963 = or i64 %926, 8
  %964 = getelementptr inbounds float, float* %5, i64 %963
  %965 = bitcast float* %964 to <8 x float>*
  %966 = load <8 x float>, <8 x float>* %965, align 1, !tbaa !12
  %967 = or i64 %926, 16
  %968 = getelementptr inbounds float, float* %5, i64 %967
  %969 = bitcast float* %968 to <8 x float>*
  %970 = load <8 x float>, <8 x float>* %969, align 1, !tbaa !12
  %971 = or i64 %926, 24
  %972 = getelementptr inbounds float, float* %5, i64 %971
  %973 = bitcast float* %972 to <8 x float>*
  %974 = load <8 x float>, <8 x float>* %973, align 1, !tbaa !12
  %975 = or i64 %926, 32
  %976 = getelementptr inbounds float, float* %5, i64 %975
  %977 = bitcast float* %976 to <8 x float>*
  %978 = load <8 x float>, <8 x float>* %977, align 1, !tbaa !12
  %979 = or i64 %926, 40
  %980 = getelementptr inbounds float, float* %5, i64 %979
  %981 = bitcast float* %980 to <8 x float>*
  %982 = load <8 x float>, <8 x float>* %981, align 1, !tbaa !12
  %983 = or i64 %926, 48
  %984 = getelementptr inbounds float, float* %5, i64 %983
  %985 = bitcast float* %984 to <8 x float>*
  %986 = load <8 x float>, <8 x float>* %985, align 1, !tbaa !12
  %987 = or i64 %926, 56
  %988 = getelementptr inbounds float, float* %5, i64 %987
  %989 = bitcast float* %988 to <8 x float>*
  %990 = load <8 x float>, <8 x float>* %989, align 1, !tbaa !12
  %991 = add nsw i64 %926, %809
  %992 = getelementptr inbounds float, float* %3, i64 %991
  %993 = bitcast float* %992 to <8 x float>*
  %994 = load <8 x float>, <8 x float>* %993, align 1, !tbaa !12
  %995 = add nsw i64 %991, 8
  %996 = getelementptr inbounds float, float* %3, i64 %995
  %997 = bitcast float* %996 to <8 x float>*
  %998 = load <8 x float>, <8 x float>* %997, align 1, !tbaa !12
  %999 = add nsw i64 %991, 16
  %1000 = getelementptr inbounds float, float* %3, i64 %999
  %1001 = bitcast float* %1000 to <8 x float>*
  %1002 = load <8 x float>, <8 x float>* %1001, align 1, !tbaa !12
  %1003 = add nsw i64 %991, 24
  %1004 = getelementptr inbounds float, float* %3, i64 %1003
  %1005 = bitcast float* %1004 to <8 x float>*
  %1006 = load <8 x float>, <8 x float>* %1005, align 1, !tbaa !12
  %1007 = add nsw i64 %991, 32
  %1008 = getelementptr inbounds float, float* %3, i64 %1007
  %1009 = bitcast float* %1008 to <8 x float>*
  %1010 = load <8 x float>, <8 x float>* %1009, align 1, !tbaa !12
  %1011 = add nsw i64 %991, 40
  %1012 = getelementptr inbounds float, float* %3, i64 %1011
  %1013 = bitcast float* %1012 to <8 x float>*
  %1014 = load <8 x float>, <8 x float>* %1013, align 1, !tbaa !12
  %1015 = add nsw i64 %991, 48
  %1016 = getelementptr inbounds float, float* %3, i64 %1015
  %1017 = bitcast float* %1016 to <8 x float>*
  %1018 = load <8 x float>, <8 x float>* %1017, align 1, !tbaa !12
  %1019 = add nsw i64 %991, 56
  %1020 = getelementptr inbounds float, float* %3, i64 %1019
  %1021 = bitcast float* %1020 to <8 x float>*
  %1022 = load <8 x float>, <8 x float>* %1021, align 1, !tbaa !12
  %1023 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %994, <8 x float> %60, <8 x float> %962) #10
  %1024 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %998, <8 x float> %60, <8 x float> %966) #10
  %1025 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1002, <8 x float> %60, <8 x float> %970) #10
  %1026 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1006, <8 x float> %60, <8 x float> %974) #10
  %1027 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1010, <8 x float> %60, <8 x float> %978) #10
  %1028 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1014, <8 x float> %60, <8 x float> %982) #10
  %1029 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1018, <8 x float> %60, <8 x float> %986) #10
  %1030 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1022, <8 x float> %60, <8 x float> %990) #10
  store <8 x float> %1023, <8 x float>* %961, align 1, !tbaa !12
  store <8 x float> %1024, <8 x float>* %965, align 1, !tbaa !12
  store <8 x float> %1025, <8 x float>* %969, align 1, !tbaa !12
  store <8 x float> %1026, <8 x float>* %973, align 1, !tbaa !12
  store <8 x float> %1027, <8 x float>* %977, align 1, !tbaa !12
  store <8 x float> %1028, <8 x float>* %981, align 1, !tbaa !12
  store <8 x float> %1029, <8 x float>* %985, align 1, !tbaa !12
  store <8 x float> %1030, <8 x float>* %989, align 1, !tbaa !12
  %1031 = add nuw nsw i64 %926, 64
  %1032 = icmp ult i64 %1031, %810
  br i1 %1032, label %925, label %919

1033:                                             ; preds = %1039
  br i1 %569, label %1034, label %1147

1034:                                             ; preds = %1033
  %1035 = trunc i64 %66 to i32
  %1036 = mul nsw i32 %568, %1035
  %1037 = sext i32 %1036 to i64
  %1038 = zext i32 %568 to i64
  br label %1154

1039:                                             ; preds = %920, %1039
  %1040 = phi i64 [ 0, %920 ], [ %1145, %1039 ]
  %1041 = getelementptr inbounds float, float* %5, i64 %1040
  %1042 = getelementptr inbounds float, float* %1041, i64 8
  %1043 = bitcast float* %1042 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1043, i32 0, i32 1, i32 1)
  %1044 = getelementptr inbounds float, float* %3, i64 %1040
  %1045 = getelementptr inbounds float, float* %1044, i64 8
  %1046 = bitcast float* %1045 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1046, i32 0, i32 1, i32 1)
  %1047 = getelementptr inbounds float, float* %1041, i64 16
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = getelementptr inbounds float, float* %1044, i64 16
  %1050 = bitcast float* %1049 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1050, i32 0, i32 1, i32 1)
  %1051 = getelementptr inbounds float, float* %1041, i64 24
  %1052 = bitcast float* %1051 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1052, i32 0, i32 1, i32 1)
  %1053 = getelementptr inbounds float, float* %1044, i64 24
  %1054 = bitcast float* %1053 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1054, i32 0, i32 1, i32 1)
  %1055 = getelementptr inbounds float, float* %1041, i64 32
  %1056 = bitcast float* %1055 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1056, i32 0, i32 1, i32 1)
  %1057 = getelementptr inbounds float, float* %1044, i64 32
  %1058 = bitcast float* %1057 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1058, i32 0, i32 1, i32 1)
  %1059 = getelementptr inbounds float, float* %1041, i64 40
  %1060 = bitcast float* %1059 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1060, i32 0, i32 1, i32 1)
  %1061 = getelementptr inbounds float, float* %1044, i64 40
  %1062 = bitcast float* %1061 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1062, i32 0, i32 1, i32 1)
  %1063 = getelementptr inbounds float, float* %1041, i64 48
  %1064 = bitcast float* %1063 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1064, i32 0, i32 1, i32 1)
  %1065 = getelementptr inbounds float, float* %1044, i64 48
  %1066 = bitcast float* %1065 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1066, i32 0, i32 1, i32 1)
  %1067 = getelementptr inbounds float, float* %1041, i64 56
  %1068 = bitcast float* %1067 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1068, i32 0, i32 1, i32 1)
  %1069 = getelementptr inbounds float, float* %1044, i64 56
  %1070 = bitcast float* %1069 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1070, i32 0, i32 1, i32 1)
  %1071 = getelementptr inbounds float, float* %1041, i64 64
  %1072 = bitcast float* %1071 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1072, i32 0, i32 1, i32 1)
  %1073 = getelementptr inbounds float, float* %1044, i64 64
  %1074 = bitcast float* %1073 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1074, i32 0, i32 1, i32 1)
  %1075 = bitcast float* %1041 to <8 x float>*
  %1076 = load <8 x float>, <8 x float>* %1075, align 1, !tbaa !12
  %1077 = or i64 %1040, 8
  %1078 = getelementptr inbounds float, float* %5, i64 %1077
  %1079 = bitcast float* %1078 to <8 x float>*
  %1080 = load <8 x float>, <8 x float>* %1079, align 1, !tbaa !12
  %1081 = or i64 %1040, 16
  %1082 = getelementptr inbounds float, float* %5, i64 %1081
  %1083 = bitcast float* %1082 to <8 x float>*
  %1084 = load <8 x float>, <8 x float>* %1083, align 1, !tbaa !12
  %1085 = or i64 %1040, 24
  %1086 = getelementptr inbounds float, float* %5, i64 %1085
  %1087 = bitcast float* %1086 to <8 x float>*
  %1088 = load <8 x float>, <8 x float>* %1087, align 1, !tbaa !12
  %1089 = or i64 %1040, 32
  %1090 = getelementptr inbounds float, float* %5, i64 %1089
  %1091 = bitcast float* %1090 to <8 x float>*
  %1092 = load <8 x float>, <8 x float>* %1091, align 1, !tbaa !12
  %1093 = or i64 %1040, 40
  %1094 = getelementptr inbounds float, float* %5, i64 %1093
  %1095 = bitcast float* %1094 to <8 x float>*
  %1096 = load <8 x float>, <8 x float>* %1095, align 1, !tbaa !12
  %1097 = or i64 %1040, 48
  %1098 = getelementptr inbounds float, float* %5, i64 %1097
  %1099 = bitcast float* %1098 to <8 x float>*
  %1100 = load <8 x float>, <8 x float>* %1099, align 1, !tbaa !12
  %1101 = or i64 %1040, 56
  %1102 = getelementptr inbounds float, float* %5, i64 %1101
  %1103 = bitcast float* %1102 to <8 x float>*
  %1104 = load <8 x float>, <8 x float>* %1103, align 1, !tbaa !12
  %1105 = add nsw i64 %1040, %923
  %1106 = getelementptr inbounds float, float* %3, i64 %1105
  %1107 = bitcast float* %1106 to <8 x float>*
  %1108 = load <8 x float>, <8 x float>* %1107, align 1, !tbaa !12
  %1109 = add nsw i64 %1105, 8
  %1110 = getelementptr inbounds float, float* %3, i64 %1109
  %1111 = bitcast float* %1110 to <8 x float>*
  %1112 = load <8 x float>, <8 x float>* %1111, align 1, !tbaa !12
  %1113 = add nsw i64 %1105, 16
  %1114 = getelementptr inbounds float, float* %3, i64 %1113
  %1115 = bitcast float* %1114 to <8 x float>*
  %1116 = load <8 x float>, <8 x float>* %1115, align 1, !tbaa !12
  %1117 = add nsw i64 %1105, 24
  %1118 = getelementptr inbounds float, float* %3, i64 %1117
  %1119 = bitcast float* %1118 to <8 x float>*
  %1120 = load <8 x float>, <8 x float>* %1119, align 1, !tbaa !12
  %1121 = add nsw i64 %1105, 32
  %1122 = getelementptr inbounds float, float* %3, i64 %1121
  %1123 = bitcast float* %1122 to <8 x float>*
  %1124 = load <8 x float>, <8 x float>* %1123, align 1, !tbaa !12
  %1125 = add nsw i64 %1105, 40
  %1126 = getelementptr inbounds float, float* %3, i64 %1125
  %1127 = bitcast float* %1126 to <8 x float>*
  %1128 = load <8 x float>, <8 x float>* %1127, align 1, !tbaa !12
  %1129 = add nsw i64 %1105, 48
  %1130 = getelementptr inbounds float, float* %3, i64 %1129
  %1131 = bitcast float* %1130 to <8 x float>*
  %1132 = load <8 x float>, <8 x float>* %1131, align 1, !tbaa !12
  %1133 = add nsw i64 %1105, 56
  %1134 = getelementptr inbounds float, float* %3, i64 %1133
  %1135 = bitcast float* %1134 to <8 x float>*
  %1136 = load <8 x float>, <8 x float>* %1135, align 1, !tbaa !12
  %1137 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1108, <8 x float> %65, <8 x float> %1076) #10
  %1138 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1112, <8 x float> %65, <8 x float> %1080) #10
  %1139 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1116, <8 x float> %65, <8 x float> %1084) #10
  %1140 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1120, <8 x float> %65, <8 x float> %1088) #10
  %1141 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1124, <8 x float> %65, <8 x float> %1092) #10
  %1142 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1128, <8 x float> %65, <8 x float> %1096) #10
  %1143 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1132, <8 x float> %65, <8 x float> %1100) #10
  %1144 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1136, <8 x float> %65, <8 x float> %1104) #10
  store <8 x float> %1137, <8 x float>* %1075, align 1, !tbaa !12
  store <8 x float> %1138, <8 x float>* %1079, align 1, !tbaa !12
  store <8 x float> %1139, <8 x float>* %1083, align 1, !tbaa !12
  store <8 x float> %1140, <8 x float>* %1087, align 1, !tbaa !12
  store <8 x float> %1141, <8 x float>* %1091, align 1, !tbaa !12
  store <8 x float> %1142, <8 x float>* %1095, align 1, !tbaa !12
  store <8 x float> %1143, <8 x float>* %1099, align 1, !tbaa !12
  store <8 x float> %1144, <8 x float>* %1103, align 1, !tbaa !12
  %1145 = add nuw nsw i64 %1040, 64
  %1146 = icmp ult i64 %1145, %924
  br i1 %1146, label %1039, label %1033

1147:                                             ; preds = %1154, %682, %805, %919, %1033
  %1148 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1149 = icmp sgt i32 %1148, 0
  br i1 %1149, label %1150, label %1727

1150:                                             ; preds = %1147
  %1151 = zext i32 %1148 to i64
  %1152 = trunc i64 %71 to i32
  %1153 = mul nsw i32 %1148, %1152
  br label %1268

1154:                                             ; preds = %1034, %1154
  %1155 = phi i64 [ 0, %1034 ], [ %1260, %1154 ]
  %1156 = getelementptr inbounds float, float* %5, i64 %1155
  %1157 = getelementptr inbounds float, float* %1156, i64 8
  %1158 = bitcast float* %1157 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1158, i32 0, i32 1, i32 1)
  %1159 = getelementptr inbounds float, float* %3, i64 %1155
  %1160 = getelementptr inbounds float, float* %1159, i64 8
  %1161 = bitcast float* %1160 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1161, i32 0, i32 1, i32 1)
  %1162 = getelementptr inbounds float, float* %1156, i64 16
  %1163 = bitcast float* %1162 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1163, i32 0, i32 1, i32 1)
  %1164 = getelementptr inbounds float, float* %1159, i64 16
  %1165 = bitcast float* %1164 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1165, i32 0, i32 1, i32 1)
  %1166 = getelementptr inbounds float, float* %1156, i64 24
  %1167 = bitcast float* %1166 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1167, i32 0, i32 1, i32 1)
  %1168 = getelementptr inbounds float, float* %1159, i64 24
  %1169 = bitcast float* %1168 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1169, i32 0, i32 1, i32 1)
  %1170 = getelementptr inbounds float, float* %1156, i64 32
  %1171 = bitcast float* %1170 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1171, i32 0, i32 1, i32 1)
  %1172 = getelementptr inbounds float, float* %1159, i64 32
  %1173 = bitcast float* %1172 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1173, i32 0, i32 1, i32 1)
  %1174 = getelementptr inbounds float, float* %1156, i64 40
  %1175 = bitcast float* %1174 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1175, i32 0, i32 1, i32 1)
  %1176 = getelementptr inbounds float, float* %1159, i64 40
  %1177 = bitcast float* %1176 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1177, i32 0, i32 1, i32 1)
  %1178 = getelementptr inbounds float, float* %1156, i64 48
  %1179 = bitcast float* %1178 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1179, i32 0, i32 1, i32 1)
  %1180 = getelementptr inbounds float, float* %1159, i64 48
  %1181 = bitcast float* %1180 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1181, i32 0, i32 1, i32 1)
  %1182 = getelementptr inbounds float, float* %1156, i64 56
  %1183 = bitcast float* %1182 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1183, i32 0, i32 1, i32 1)
  %1184 = getelementptr inbounds float, float* %1159, i64 56
  %1185 = bitcast float* %1184 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1185, i32 0, i32 1, i32 1)
  %1186 = getelementptr inbounds float, float* %1156, i64 64
  %1187 = bitcast float* %1186 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1187, i32 0, i32 1, i32 1)
  %1188 = getelementptr inbounds float, float* %1159, i64 64
  %1189 = bitcast float* %1188 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1189, i32 0, i32 1, i32 1)
  %1190 = bitcast float* %1156 to <8 x float>*
  %1191 = load <8 x float>, <8 x float>* %1190, align 1, !tbaa !12
  %1192 = or i64 %1155, 8
  %1193 = getelementptr inbounds float, float* %5, i64 %1192
  %1194 = bitcast float* %1193 to <8 x float>*
  %1195 = load <8 x float>, <8 x float>* %1194, align 1, !tbaa !12
  %1196 = or i64 %1155, 16
  %1197 = getelementptr inbounds float, float* %5, i64 %1196
  %1198 = bitcast float* %1197 to <8 x float>*
  %1199 = load <8 x float>, <8 x float>* %1198, align 1, !tbaa !12
  %1200 = or i64 %1155, 24
  %1201 = getelementptr inbounds float, float* %5, i64 %1200
  %1202 = bitcast float* %1201 to <8 x float>*
  %1203 = load <8 x float>, <8 x float>* %1202, align 1, !tbaa !12
  %1204 = or i64 %1155, 32
  %1205 = getelementptr inbounds float, float* %5, i64 %1204
  %1206 = bitcast float* %1205 to <8 x float>*
  %1207 = load <8 x float>, <8 x float>* %1206, align 1, !tbaa !12
  %1208 = or i64 %1155, 40
  %1209 = getelementptr inbounds float, float* %5, i64 %1208
  %1210 = bitcast float* %1209 to <8 x float>*
  %1211 = load <8 x float>, <8 x float>* %1210, align 1, !tbaa !12
  %1212 = or i64 %1155, 48
  %1213 = getelementptr inbounds float, float* %5, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = or i64 %1155, 56
  %1217 = getelementptr inbounds float, float* %5, i64 %1216
  %1218 = bitcast float* %1217 to <8 x float>*
  %1219 = load <8 x float>, <8 x float>* %1218, align 1, !tbaa !12
  %1220 = add nsw i64 %1155, %1037
  %1221 = getelementptr inbounds float, float* %3, i64 %1220
  %1222 = bitcast float* %1221 to <8 x float>*
  %1223 = load <8 x float>, <8 x float>* %1222, align 1, !tbaa !12
  %1224 = add nsw i64 %1220, 8
  %1225 = getelementptr inbounds float, float* %3, i64 %1224
  %1226 = bitcast float* %1225 to <8 x float>*
  %1227 = load <8 x float>, <8 x float>* %1226, align 1, !tbaa !12
  %1228 = add nsw i64 %1220, 16
  %1229 = getelementptr inbounds float, float* %3, i64 %1228
  %1230 = bitcast float* %1229 to <8 x float>*
  %1231 = load <8 x float>, <8 x float>* %1230, align 1, !tbaa !12
  %1232 = add nsw i64 %1220, 24
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i64 %1220, 32
  %1237 = getelementptr inbounds float, float* %3, i64 %1236
  %1238 = bitcast float* %1237 to <8 x float>*
  %1239 = load <8 x float>, <8 x float>* %1238, align 1, !tbaa !12
  %1240 = add nsw i64 %1220, 40
  %1241 = getelementptr inbounds float, float* %3, i64 %1240
  %1242 = bitcast float* %1241 to <8 x float>*
  %1243 = load <8 x float>, <8 x float>* %1242, align 1, !tbaa !12
  %1244 = add nsw i64 %1220, 48
  %1245 = getelementptr inbounds float, float* %3, i64 %1244
  %1246 = bitcast float* %1245 to <8 x float>*
  %1247 = load <8 x float>, <8 x float>* %1246, align 1, !tbaa !12
  %1248 = add nsw i64 %1220, 56
  %1249 = getelementptr inbounds float, float* %3, i64 %1248
  %1250 = bitcast float* %1249 to <8 x float>*
  %1251 = load <8 x float>, <8 x float>* %1250, align 1, !tbaa !12
  %1252 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1223, <8 x float> %70, <8 x float> %1191) #10
  %1253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1227, <8 x float> %70, <8 x float> %1195) #10
  %1254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1231, <8 x float> %70, <8 x float> %1199) #10
  %1255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %70, <8 x float> %1203) #10
  %1256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1239, <8 x float> %70, <8 x float> %1207) #10
  %1257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1243, <8 x float> %70, <8 x float> %1211) #10
  %1258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1247, <8 x float> %70, <8 x float> %1215) #10
  %1259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1251, <8 x float> %70, <8 x float> %1219) #10
  store <8 x float> %1252, <8 x float>* %1190, align 1, !tbaa !12
  store <8 x float> %1253, <8 x float>* %1194, align 1, !tbaa !12
  store <8 x float> %1254, <8 x float>* %1198, align 1, !tbaa !12
  store <8 x float> %1255, <8 x float>* %1202, align 1, !tbaa !12
  store <8 x float> %1256, <8 x float>* %1206, align 1, !tbaa !12
  store <8 x float> %1257, <8 x float>* %1210, align 1, !tbaa !12
  store <8 x float> %1258, <8 x float>* %1214, align 1, !tbaa !12
  store <8 x float> %1259, <8 x float>* %1218, align 1, !tbaa !12
  %1260 = add nuw nsw i64 %1155, 64
  %1261 = icmp ult i64 %1260, %1038
  br i1 %1261, label %1154, label %1147

1262:                                             ; preds = %1268
  br i1 %1149, label %1263, label %1727

1263:                                             ; preds = %1262
  %1264 = trunc i64 %76 to i32
  %1265 = mul nsw i32 %1148, %1264
  %1266 = sext i32 %1265 to i64
  %1267 = zext i32 %1148 to i64
  br label %1391

1268:                                             ; preds = %1150, %1268
  %1269 = phi i64 [ 0, %1150 ], [ %1383, %1268 ]
  %1270 = getelementptr inbounds float, float* %5, i64 %1269
  %1271 = getelementptr inbounds float, float* %1270, i64 8
  %1272 = bitcast float* %1271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1272, i32 0, i32 1, i32 1)
  %1273 = getelementptr inbounds float, float* %3, i64 %1269
  %1274 = getelementptr inbounds float, float* %1273, i64 8
  %1275 = bitcast float* %1274 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1275, i32 0, i32 1, i32 1)
  %1276 = getelementptr inbounds float, float* %1270, i64 16
  %1277 = bitcast float* %1276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1277, i32 0, i32 1, i32 1)
  %1278 = getelementptr inbounds float, float* %1273, i64 16
  %1279 = bitcast float* %1278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1279, i32 0, i32 1, i32 1)
  %1280 = getelementptr inbounds float, float* %1270, i64 24
  %1281 = bitcast float* %1280 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1281, i32 0, i32 1, i32 1)
  %1282 = getelementptr inbounds float, float* %1273, i64 24
  %1283 = bitcast float* %1282 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1283, i32 0, i32 1, i32 1)
  %1284 = getelementptr inbounds float, float* %1270, i64 32
  %1285 = bitcast float* %1284 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1285, i32 0, i32 1, i32 1)
  %1286 = getelementptr inbounds float, float* %1273, i64 32
  %1287 = bitcast float* %1286 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1287, i32 0, i32 1, i32 1)
  %1288 = getelementptr inbounds float, float* %1270, i64 40
  %1289 = bitcast float* %1288 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1289, i32 0, i32 1, i32 1)
  %1290 = getelementptr inbounds float, float* %1273, i64 40
  %1291 = bitcast float* %1290 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1291, i32 0, i32 1, i32 1)
  %1292 = getelementptr inbounds float, float* %1270, i64 48
  %1293 = bitcast float* %1292 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1293, i32 0, i32 1, i32 1)
  %1294 = getelementptr inbounds float, float* %1273, i64 48
  %1295 = bitcast float* %1294 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1295, i32 0, i32 1, i32 1)
  %1296 = getelementptr inbounds float, float* %1270, i64 56
  %1297 = bitcast float* %1296 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1297, i32 0, i32 1, i32 1)
  %1298 = getelementptr inbounds float, float* %1273, i64 56
  %1299 = bitcast float* %1298 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1299, i32 0, i32 1, i32 1)
  %1300 = getelementptr inbounds float, float* %1270, i64 64
  %1301 = bitcast float* %1300 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1301, i32 0, i32 1, i32 1)
  %1302 = getelementptr inbounds float, float* %1273, i64 64
  %1303 = bitcast float* %1302 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1303, i32 0, i32 1, i32 1)
  %1304 = bitcast float* %1270 to <8 x float>*
  %1305 = load <8 x float>, <8 x float>* %1304, align 1, !tbaa !12
  %1306 = or i64 %1269, 8
  %1307 = getelementptr inbounds float, float* %5, i64 %1306
  %1308 = bitcast float* %1307 to <8 x float>*
  %1309 = load <8 x float>, <8 x float>* %1308, align 1, !tbaa !12
  %1310 = or i64 %1269, 16
  %1311 = getelementptr inbounds float, float* %5, i64 %1310
  %1312 = bitcast float* %1311 to <8 x float>*
  %1313 = load <8 x float>, <8 x float>* %1312, align 1, !tbaa !12
  %1314 = or i64 %1269, 24
  %1315 = getelementptr inbounds float, float* %5, i64 %1314
  %1316 = bitcast float* %1315 to <8 x float>*
  %1317 = load <8 x float>, <8 x float>* %1316, align 1, !tbaa !12
  %1318 = or i64 %1269, 32
  %1319 = getelementptr inbounds float, float* %5, i64 %1318
  %1320 = bitcast float* %1319 to <8 x float>*
  %1321 = load <8 x float>, <8 x float>* %1320, align 1, !tbaa !12
  %1322 = or i64 %1269, 40
  %1323 = getelementptr inbounds float, float* %5, i64 %1322
  %1324 = bitcast float* %1323 to <8 x float>*
  %1325 = load <8 x float>, <8 x float>* %1324, align 1, !tbaa !12
  %1326 = or i64 %1269, 48
  %1327 = getelementptr inbounds float, float* %5, i64 %1326
  %1328 = bitcast float* %1327 to <8 x float>*
  %1329 = load <8 x float>, <8 x float>* %1328, align 1, !tbaa !12
  %1330 = or i64 %1269, 56
  %1331 = getelementptr inbounds float, float* %5, i64 %1330
  %1332 = bitcast float* %1331 to <8 x float>*
  %1333 = load <8 x float>, <8 x float>* %1332, align 1, !tbaa !12
  %1334 = trunc i64 %1269 to i32
  %1335 = add nsw i32 %1153, %1334
  %1336 = sext i32 %1335 to i64
  %1337 = getelementptr inbounds float, float* %3, i64 %1336
  %1338 = bitcast float* %1337 to <8 x float>*
  %1339 = load <8 x float>, <8 x float>* %1338, align 1, !tbaa !12
  %1340 = add nsw i32 %1335, 8
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds float, float* %3, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nsw i32 %1335, 16
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds float, float* %3, i64 %1346
  %1348 = bitcast float* %1347 to <8 x float>*
  %1349 = load <8 x float>, <8 x float>* %1348, align 1, !tbaa !12
  %1350 = add nsw i32 %1335, 24
  %1351 = sext i32 %1350 to i64
  %1352 = getelementptr inbounds float, float* %3, i64 %1351
  %1353 = bitcast float* %1352 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = add nsw i32 %1335, 32
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds float, float* %3, i64 %1356
  %1358 = bitcast float* %1357 to <8 x float>*
  %1359 = load <8 x float>, <8 x float>* %1358, align 1, !tbaa !12
  %1360 = add nsw i32 %1335, 40
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds float, float* %3, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = add nsw i32 %1335, 48
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds float, float* %3, i64 %1366
  %1368 = bitcast float* %1367 to <8 x float>*
  %1369 = load <8 x float>, <8 x float>* %1368, align 1, !tbaa !12
  %1370 = add nsw i32 %1335, 56
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds float, float* %3, i64 %1371
  %1373 = bitcast float* %1372 to <8 x float>*
  %1374 = load <8 x float>, <8 x float>* %1373, align 1, !tbaa !12
  %1375 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1339, <8 x float> %75, <8 x float> %1305) #10
  %1376 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1344, <8 x float> %75, <8 x float> %1309) #10
  %1377 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1349, <8 x float> %75, <8 x float> %1313) #10
  %1378 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1354, <8 x float> %75, <8 x float> %1317) #10
  %1379 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1359, <8 x float> %75, <8 x float> %1321) #10
  %1380 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1364, <8 x float> %75, <8 x float> %1325) #10
  %1381 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1369, <8 x float> %75, <8 x float> %1329) #10
  %1382 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1374, <8 x float> %75, <8 x float> %1333) #10
  store <8 x float> %1375, <8 x float>* %1304, align 1, !tbaa !12
  store <8 x float> %1376, <8 x float>* %1308, align 1, !tbaa !12
  store <8 x float> %1377, <8 x float>* %1312, align 1, !tbaa !12
  store <8 x float> %1378, <8 x float>* %1316, align 1, !tbaa !12
  store <8 x float> %1379, <8 x float>* %1320, align 1, !tbaa !12
  store <8 x float> %1380, <8 x float>* %1324, align 1, !tbaa !12
  store <8 x float> %1381, <8 x float>* %1328, align 1, !tbaa !12
  store <8 x float> %1382, <8 x float>* %1332, align 1, !tbaa !12
  %1383 = add nuw nsw i64 %1269, 64
  %1384 = icmp ult i64 %1383, %1151
  br i1 %1384, label %1268, label %1262

1385:                                             ; preds = %1391
  br i1 %1149, label %1386, label %1727

1386:                                             ; preds = %1385
  %1387 = trunc i64 %81 to i32
  %1388 = mul nsw i32 %1148, %1387
  %1389 = sext i32 %1388 to i64
  %1390 = zext i32 %1148 to i64
  br label %1505

1391:                                             ; preds = %1263, %1391
  %1392 = phi i64 [ 0, %1263 ], [ %1497, %1391 ]
  %1393 = getelementptr inbounds float, float* %5, i64 %1392
  %1394 = getelementptr inbounds float, float* %1393, i64 8
  %1395 = bitcast float* %1394 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1395, i32 0, i32 1, i32 1)
  %1396 = getelementptr inbounds float, float* %3, i64 %1392
  %1397 = getelementptr inbounds float, float* %1396, i64 8
  %1398 = bitcast float* %1397 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1398, i32 0, i32 1, i32 1)
  %1399 = getelementptr inbounds float, float* %1393, i64 16
  %1400 = bitcast float* %1399 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1400, i32 0, i32 1, i32 1)
  %1401 = getelementptr inbounds float, float* %1396, i64 16
  %1402 = bitcast float* %1401 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1402, i32 0, i32 1, i32 1)
  %1403 = getelementptr inbounds float, float* %1393, i64 24
  %1404 = bitcast float* %1403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1404, i32 0, i32 1, i32 1)
  %1405 = getelementptr inbounds float, float* %1396, i64 24
  %1406 = bitcast float* %1405 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1406, i32 0, i32 1, i32 1)
  %1407 = getelementptr inbounds float, float* %1393, i64 32
  %1408 = bitcast float* %1407 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1408, i32 0, i32 1, i32 1)
  %1409 = getelementptr inbounds float, float* %1396, i64 32
  %1410 = bitcast float* %1409 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1410, i32 0, i32 1, i32 1)
  %1411 = getelementptr inbounds float, float* %1393, i64 40
  %1412 = bitcast float* %1411 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1412, i32 0, i32 1, i32 1)
  %1413 = getelementptr inbounds float, float* %1396, i64 40
  %1414 = bitcast float* %1413 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1414, i32 0, i32 1, i32 1)
  %1415 = getelementptr inbounds float, float* %1393, i64 48
  %1416 = bitcast float* %1415 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1416, i32 0, i32 1, i32 1)
  %1417 = getelementptr inbounds float, float* %1396, i64 48
  %1418 = bitcast float* %1417 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1418, i32 0, i32 1, i32 1)
  %1419 = getelementptr inbounds float, float* %1393, i64 56
  %1420 = bitcast float* %1419 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1420, i32 0, i32 1, i32 1)
  %1421 = getelementptr inbounds float, float* %1396, i64 56
  %1422 = bitcast float* %1421 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1422, i32 0, i32 1, i32 1)
  %1423 = getelementptr inbounds float, float* %1393, i64 64
  %1424 = bitcast float* %1423 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1424, i32 0, i32 1, i32 1)
  %1425 = getelementptr inbounds float, float* %1396, i64 64
  %1426 = bitcast float* %1425 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1426, i32 0, i32 1, i32 1)
  %1427 = bitcast float* %1393 to <8 x float>*
  %1428 = load <8 x float>, <8 x float>* %1427, align 1, !tbaa !12
  %1429 = or i64 %1392, 8
  %1430 = getelementptr inbounds float, float* %5, i64 %1429
  %1431 = bitcast float* %1430 to <8 x float>*
  %1432 = load <8 x float>, <8 x float>* %1431, align 1, !tbaa !12
  %1433 = or i64 %1392, 16
  %1434 = getelementptr inbounds float, float* %5, i64 %1433
  %1435 = bitcast float* %1434 to <8 x float>*
  %1436 = load <8 x float>, <8 x float>* %1435, align 1, !tbaa !12
  %1437 = or i64 %1392, 24
  %1438 = getelementptr inbounds float, float* %5, i64 %1437
  %1439 = bitcast float* %1438 to <8 x float>*
  %1440 = load <8 x float>, <8 x float>* %1439, align 1, !tbaa !12
  %1441 = or i64 %1392, 32
  %1442 = getelementptr inbounds float, float* %5, i64 %1441
  %1443 = bitcast float* %1442 to <8 x float>*
  %1444 = load <8 x float>, <8 x float>* %1443, align 1, !tbaa !12
  %1445 = or i64 %1392, 40
  %1446 = getelementptr inbounds float, float* %5, i64 %1445
  %1447 = bitcast float* %1446 to <8 x float>*
  %1448 = load <8 x float>, <8 x float>* %1447, align 1, !tbaa !12
  %1449 = or i64 %1392, 48
  %1450 = getelementptr inbounds float, float* %5, i64 %1449
  %1451 = bitcast float* %1450 to <8 x float>*
  %1452 = load <8 x float>, <8 x float>* %1451, align 1, !tbaa !12
  %1453 = or i64 %1392, 56
  %1454 = getelementptr inbounds float, float* %5, i64 %1453
  %1455 = bitcast float* %1454 to <8 x float>*
  %1456 = load <8 x float>, <8 x float>* %1455, align 1, !tbaa !12
  %1457 = add nsw i64 %1392, %1266
  %1458 = getelementptr inbounds float, float* %3, i64 %1457
  %1459 = bitcast float* %1458 to <8 x float>*
  %1460 = load <8 x float>, <8 x float>* %1459, align 1, !tbaa !12
  %1461 = add nsw i64 %1457, 8
  %1462 = getelementptr inbounds float, float* %3, i64 %1461
  %1463 = bitcast float* %1462 to <8 x float>*
  %1464 = load <8 x float>, <8 x float>* %1463, align 1, !tbaa !12
  %1465 = add nsw i64 %1457, 16
  %1466 = getelementptr inbounds float, float* %3, i64 %1465
  %1467 = bitcast float* %1466 to <8 x float>*
  %1468 = load <8 x float>, <8 x float>* %1467, align 1, !tbaa !12
  %1469 = add nsw i64 %1457, 24
  %1470 = getelementptr inbounds float, float* %3, i64 %1469
  %1471 = bitcast float* %1470 to <8 x float>*
  %1472 = load <8 x float>, <8 x float>* %1471, align 1, !tbaa !12
  %1473 = add nsw i64 %1457, 32
  %1474 = getelementptr inbounds float, float* %3, i64 %1473
  %1475 = bitcast float* %1474 to <8 x float>*
  %1476 = load <8 x float>, <8 x float>* %1475, align 1, !tbaa !12
  %1477 = add nsw i64 %1457, 40
  %1478 = getelementptr inbounds float, float* %3, i64 %1477
  %1479 = bitcast float* %1478 to <8 x float>*
  %1480 = load <8 x float>, <8 x float>* %1479, align 1, !tbaa !12
  %1481 = add nsw i64 %1457, 48
  %1482 = getelementptr inbounds float, float* %3, i64 %1481
  %1483 = bitcast float* %1482 to <8 x float>*
  %1484 = load <8 x float>, <8 x float>* %1483, align 1, !tbaa !12
  %1485 = add nsw i64 %1457, 56
  %1486 = getelementptr inbounds float, float* %3, i64 %1485
  %1487 = bitcast float* %1486 to <8 x float>*
  %1488 = load <8 x float>, <8 x float>* %1487, align 1, !tbaa !12
  %1489 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1460, <8 x float> %80, <8 x float> %1428) #10
  %1490 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1464, <8 x float> %80, <8 x float> %1432) #10
  %1491 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1468, <8 x float> %80, <8 x float> %1436) #10
  %1492 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1472, <8 x float> %80, <8 x float> %1440) #10
  %1493 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1476, <8 x float> %80, <8 x float> %1444) #10
  %1494 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1480, <8 x float> %80, <8 x float> %1448) #10
  %1495 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1484, <8 x float> %80, <8 x float> %1452) #10
  %1496 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1488, <8 x float> %80, <8 x float> %1456) #10
  store <8 x float> %1489, <8 x float>* %1427, align 1, !tbaa !12
  store <8 x float> %1490, <8 x float>* %1431, align 1, !tbaa !12
  store <8 x float> %1491, <8 x float>* %1435, align 1, !tbaa !12
  store <8 x float> %1492, <8 x float>* %1439, align 1, !tbaa !12
  store <8 x float> %1493, <8 x float>* %1443, align 1, !tbaa !12
  store <8 x float> %1494, <8 x float>* %1447, align 1, !tbaa !12
  store <8 x float> %1495, <8 x float>* %1451, align 1, !tbaa !12
  store <8 x float> %1496, <8 x float>* %1455, align 1, !tbaa !12
  %1497 = add nuw nsw i64 %1392, 64
  %1498 = icmp ult i64 %1497, %1267
  br i1 %1498, label %1391, label %1385

1499:                                             ; preds = %1505
  br i1 %1149, label %1500, label %1727

1500:                                             ; preds = %1499
  %1501 = trunc i64 %86 to i32
  %1502 = mul nsw i32 %1148, %1501
  %1503 = sext i32 %1502 to i64
  %1504 = zext i32 %1148 to i64
  br label %1619

1505:                                             ; preds = %1386, %1505
  %1506 = phi i64 [ 0, %1386 ], [ %1611, %1505 ]
  %1507 = getelementptr inbounds float, float* %5, i64 %1506
  %1508 = getelementptr inbounds float, float* %1507, i64 8
  %1509 = bitcast float* %1508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1509, i32 0, i32 1, i32 1)
  %1510 = getelementptr inbounds float, float* %3, i64 %1506
  %1511 = getelementptr inbounds float, float* %1510, i64 8
  %1512 = bitcast float* %1511 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1512, i32 0, i32 1, i32 1)
  %1513 = getelementptr inbounds float, float* %1507, i64 16
  %1514 = bitcast float* %1513 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1514, i32 0, i32 1, i32 1)
  %1515 = getelementptr inbounds float, float* %1510, i64 16
  %1516 = bitcast float* %1515 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1516, i32 0, i32 1, i32 1)
  %1517 = getelementptr inbounds float, float* %1507, i64 24
  %1518 = bitcast float* %1517 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1518, i32 0, i32 1, i32 1)
  %1519 = getelementptr inbounds float, float* %1510, i64 24
  %1520 = bitcast float* %1519 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1520, i32 0, i32 1, i32 1)
  %1521 = getelementptr inbounds float, float* %1507, i64 32
  %1522 = bitcast float* %1521 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1522, i32 0, i32 1, i32 1)
  %1523 = getelementptr inbounds float, float* %1510, i64 32
  %1524 = bitcast float* %1523 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1524, i32 0, i32 1, i32 1)
  %1525 = getelementptr inbounds float, float* %1507, i64 40
  %1526 = bitcast float* %1525 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1526, i32 0, i32 1, i32 1)
  %1527 = getelementptr inbounds float, float* %1510, i64 40
  %1528 = bitcast float* %1527 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1528, i32 0, i32 1, i32 1)
  %1529 = getelementptr inbounds float, float* %1507, i64 48
  %1530 = bitcast float* %1529 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1530, i32 0, i32 1, i32 1)
  %1531 = getelementptr inbounds float, float* %1510, i64 48
  %1532 = bitcast float* %1531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1532, i32 0, i32 1, i32 1)
  %1533 = getelementptr inbounds float, float* %1507, i64 56
  %1534 = bitcast float* %1533 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1534, i32 0, i32 1, i32 1)
  %1535 = getelementptr inbounds float, float* %1510, i64 56
  %1536 = bitcast float* %1535 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1536, i32 0, i32 1, i32 1)
  %1537 = getelementptr inbounds float, float* %1507, i64 64
  %1538 = bitcast float* %1537 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1538, i32 0, i32 1, i32 1)
  %1539 = getelementptr inbounds float, float* %1510, i64 64
  %1540 = bitcast float* %1539 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1540, i32 0, i32 1, i32 1)
  %1541 = bitcast float* %1507 to <8 x float>*
  %1542 = load <8 x float>, <8 x float>* %1541, align 1, !tbaa !12
  %1543 = or i64 %1506, 8
  %1544 = getelementptr inbounds float, float* %5, i64 %1543
  %1545 = bitcast float* %1544 to <8 x float>*
  %1546 = load <8 x float>, <8 x float>* %1545, align 1, !tbaa !12
  %1547 = or i64 %1506, 16
  %1548 = getelementptr inbounds float, float* %5, i64 %1547
  %1549 = bitcast float* %1548 to <8 x float>*
  %1550 = load <8 x float>, <8 x float>* %1549, align 1, !tbaa !12
  %1551 = or i64 %1506, 24
  %1552 = getelementptr inbounds float, float* %5, i64 %1551
  %1553 = bitcast float* %1552 to <8 x float>*
  %1554 = load <8 x float>, <8 x float>* %1553, align 1, !tbaa !12
  %1555 = or i64 %1506, 32
  %1556 = getelementptr inbounds float, float* %5, i64 %1555
  %1557 = bitcast float* %1556 to <8 x float>*
  %1558 = load <8 x float>, <8 x float>* %1557, align 1, !tbaa !12
  %1559 = or i64 %1506, 40
  %1560 = getelementptr inbounds float, float* %5, i64 %1559
  %1561 = bitcast float* %1560 to <8 x float>*
  %1562 = load <8 x float>, <8 x float>* %1561, align 1, !tbaa !12
  %1563 = or i64 %1506, 48
  %1564 = getelementptr inbounds float, float* %5, i64 %1563
  %1565 = bitcast float* %1564 to <8 x float>*
  %1566 = load <8 x float>, <8 x float>* %1565, align 1, !tbaa !12
  %1567 = or i64 %1506, 56
  %1568 = getelementptr inbounds float, float* %5, i64 %1567
  %1569 = bitcast float* %1568 to <8 x float>*
  %1570 = load <8 x float>, <8 x float>* %1569, align 1, !tbaa !12
  %1571 = add nsw i64 %1506, %1389
  %1572 = getelementptr inbounds float, float* %3, i64 %1571
  %1573 = bitcast float* %1572 to <8 x float>*
  %1574 = load <8 x float>, <8 x float>* %1573, align 1, !tbaa !12
  %1575 = add nsw i64 %1571, 8
  %1576 = getelementptr inbounds float, float* %3, i64 %1575
  %1577 = bitcast float* %1576 to <8 x float>*
  %1578 = load <8 x float>, <8 x float>* %1577, align 1, !tbaa !12
  %1579 = add nsw i64 %1571, 16
  %1580 = getelementptr inbounds float, float* %3, i64 %1579
  %1581 = bitcast float* %1580 to <8 x float>*
  %1582 = load <8 x float>, <8 x float>* %1581, align 1, !tbaa !12
  %1583 = add nsw i64 %1571, 24
  %1584 = getelementptr inbounds float, float* %3, i64 %1583
  %1585 = bitcast float* %1584 to <8 x float>*
  %1586 = load <8 x float>, <8 x float>* %1585, align 1, !tbaa !12
  %1587 = add nsw i64 %1571, 32
  %1588 = getelementptr inbounds float, float* %3, i64 %1587
  %1589 = bitcast float* %1588 to <8 x float>*
  %1590 = load <8 x float>, <8 x float>* %1589, align 1, !tbaa !12
  %1591 = add nsw i64 %1571, 40
  %1592 = getelementptr inbounds float, float* %3, i64 %1591
  %1593 = bitcast float* %1592 to <8 x float>*
  %1594 = load <8 x float>, <8 x float>* %1593, align 1, !tbaa !12
  %1595 = add nsw i64 %1571, 48
  %1596 = getelementptr inbounds float, float* %3, i64 %1595
  %1597 = bitcast float* %1596 to <8 x float>*
  %1598 = load <8 x float>, <8 x float>* %1597, align 1, !tbaa !12
  %1599 = add nsw i64 %1571, 56
  %1600 = getelementptr inbounds float, float* %3, i64 %1599
  %1601 = bitcast float* %1600 to <8 x float>*
  %1602 = load <8 x float>, <8 x float>* %1601, align 1, !tbaa !12
  %1603 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1574, <8 x float> %85, <8 x float> %1542) #10
  %1604 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1578, <8 x float> %85, <8 x float> %1546) #10
  %1605 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1582, <8 x float> %85, <8 x float> %1550) #10
  %1606 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1586, <8 x float> %85, <8 x float> %1554) #10
  %1607 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1590, <8 x float> %85, <8 x float> %1558) #10
  %1608 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1594, <8 x float> %85, <8 x float> %1562) #10
  %1609 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1598, <8 x float> %85, <8 x float> %1566) #10
  %1610 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1602, <8 x float> %85, <8 x float> %1570) #10
  store <8 x float> %1603, <8 x float>* %1541, align 1, !tbaa !12
  store <8 x float> %1604, <8 x float>* %1545, align 1, !tbaa !12
  store <8 x float> %1605, <8 x float>* %1549, align 1, !tbaa !12
  store <8 x float> %1606, <8 x float>* %1553, align 1, !tbaa !12
  store <8 x float> %1607, <8 x float>* %1557, align 1, !tbaa !12
  store <8 x float> %1608, <8 x float>* %1561, align 1, !tbaa !12
  store <8 x float> %1609, <8 x float>* %1565, align 1, !tbaa !12
  store <8 x float> %1610, <8 x float>* %1569, align 1, !tbaa !12
  %1611 = add nuw nsw i64 %1506, 64
  %1612 = icmp ult i64 %1611, %1390
  br i1 %1612, label %1505, label %1499

1613:                                             ; preds = %1619
  br i1 %1149, label %1614, label %1727

1614:                                             ; preds = %1613
  %1615 = trunc i64 %91 to i32
  %1616 = mul nsw i32 %1148, %1615
  %1617 = sext i32 %1616 to i64
  %1618 = zext i32 %1148 to i64
  br label %1732

1619:                                             ; preds = %1500, %1619
  %1620 = phi i64 [ 0, %1500 ], [ %1725, %1619 ]
  %1621 = getelementptr inbounds float, float* %5, i64 %1620
  %1622 = getelementptr inbounds float, float* %1621, i64 8
  %1623 = bitcast float* %1622 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1623, i32 0, i32 1, i32 1)
  %1624 = getelementptr inbounds float, float* %3, i64 %1620
  %1625 = getelementptr inbounds float, float* %1624, i64 8
  %1626 = bitcast float* %1625 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1626, i32 0, i32 1, i32 1)
  %1627 = getelementptr inbounds float, float* %1621, i64 16
  %1628 = bitcast float* %1627 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1628, i32 0, i32 1, i32 1)
  %1629 = getelementptr inbounds float, float* %1624, i64 16
  %1630 = bitcast float* %1629 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1630, i32 0, i32 1, i32 1)
  %1631 = getelementptr inbounds float, float* %1621, i64 24
  %1632 = bitcast float* %1631 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1632, i32 0, i32 1, i32 1)
  %1633 = getelementptr inbounds float, float* %1624, i64 24
  %1634 = bitcast float* %1633 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1634, i32 0, i32 1, i32 1)
  %1635 = getelementptr inbounds float, float* %1621, i64 32
  %1636 = bitcast float* %1635 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1636, i32 0, i32 1, i32 1)
  %1637 = getelementptr inbounds float, float* %1624, i64 32
  %1638 = bitcast float* %1637 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1638, i32 0, i32 1, i32 1)
  %1639 = getelementptr inbounds float, float* %1621, i64 40
  %1640 = bitcast float* %1639 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1640, i32 0, i32 1, i32 1)
  %1641 = getelementptr inbounds float, float* %1624, i64 40
  %1642 = bitcast float* %1641 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1642, i32 0, i32 1, i32 1)
  %1643 = getelementptr inbounds float, float* %1621, i64 48
  %1644 = bitcast float* %1643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1644, i32 0, i32 1, i32 1)
  %1645 = getelementptr inbounds float, float* %1624, i64 48
  %1646 = bitcast float* %1645 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1646, i32 0, i32 1, i32 1)
  %1647 = getelementptr inbounds float, float* %1621, i64 56
  %1648 = bitcast float* %1647 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1648, i32 0, i32 1, i32 1)
  %1649 = getelementptr inbounds float, float* %1624, i64 56
  %1650 = bitcast float* %1649 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1650, i32 0, i32 1, i32 1)
  %1651 = getelementptr inbounds float, float* %1621, i64 64
  %1652 = bitcast float* %1651 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1652, i32 0, i32 1, i32 1)
  %1653 = getelementptr inbounds float, float* %1624, i64 64
  %1654 = bitcast float* %1653 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1654, i32 0, i32 1, i32 1)
  %1655 = bitcast float* %1621 to <8 x float>*
  %1656 = load <8 x float>, <8 x float>* %1655, align 1, !tbaa !12
  %1657 = or i64 %1620, 8
  %1658 = getelementptr inbounds float, float* %5, i64 %1657
  %1659 = bitcast float* %1658 to <8 x float>*
  %1660 = load <8 x float>, <8 x float>* %1659, align 1, !tbaa !12
  %1661 = or i64 %1620, 16
  %1662 = getelementptr inbounds float, float* %5, i64 %1661
  %1663 = bitcast float* %1662 to <8 x float>*
  %1664 = load <8 x float>, <8 x float>* %1663, align 1, !tbaa !12
  %1665 = or i64 %1620, 24
  %1666 = getelementptr inbounds float, float* %5, i64 %1665
  %1667 = bitcast float* %1666 to <8 x float>*
  %1668 = load <8 x float>, <8 x float>* %1667, align 1, !tbaa !12
  %1669 = or i64 %1620, 32
  %1670 = getelementptr inbounds float, float* %5, i64 %1669
  %1671 = bitcast float* %1670 to <8 x float>*
  %1672 = load <8 x float>, <8 x float>* %1671, align 1, !tbaa !12
  %1673 = or i64 %1620, 40
  %1674 = getelementptr inbounds float, float* %5, i64 %1673
  %1675 = bitcast float* %1674 to <8 x float>*
  %1676 = load <8 x float>, <8 x float>* %1675, align 1, !tbaa !12
  %1677 = or i64 %1620, 48
  %1678 = getelementptr inbounds float, float* %5, i64 %1677
  %1679 = bitcast float* %1678 to <8 x float>*
  %1680 = load <8 x float>, <8 x float>* %1679, align 1, !tbaa !12
  %1681 = or i64 %1620, 56
  %1682 = getelementptr inbounds float, float* %5, i64 %1681
  %1683 = bitcast float* %1682 to <8 x float>*
  %1684 = load <8 x float>, <8 x float>* %1683, align 1, !tbaa !12
  %1685 = add nsw i64 %1620, %1503
  %1686 = getelementptr inbounds float, float* %3, i64 %1685
  %1687 = bitcast float* %1686 to <8 x float>*
  %1688 = load <8 x float>, <8 x float>* %1687, align 1, !tbaa !12
  %1689 = add nsw i64 %1685, 8
  %1690 = getelementptr inbounds float, float* %3, i64 %1689
  %1691 = bitcast float* %1690 to <8 x float>*
  %1692 = load <8 x float>, <8 x float>* %1691, align 1, !tbaa !12
  %1693 = add nsw i64 %1685, 16
  %1694 = getelementptr inbounds float, float* %3, i64 %1693
  %1695 = bitcast float* %1694 to <8 x float>*
  %1696 = load <8 x float>, <8 x float>* %1695, align 1, !tbaa !12
  %1697 = add nsw i64 %1685, 24
  %1698 = getelementptr inbounds float, float* %3, i64 %1697
  %1699 = bitcast float* %1698 to <8 x float>*
  %1700 = load <8 x float>, <8 x float>* %1699, align 1, !tbaa !12
  %1701 = add nsw i64 %1685, 32
  %1702 = getelementptr inbounds float, float* %3, i64 %1701
  %1703 = bitcast float* %1702 to <8 x float>*
  %1704 = load <8 x float>, <8 x float>* %1703, align 1, !tbaa !12
  %1705 = add nsw i64 %1685, 40
  %1706 = getelementptr inbounds float, float* %3, i64 %1705
  %1707 = bitcast float* %1706 to <8 x float>*
  %1708 = load <8 x float>, <8 x float>* %1707, align 1, !tbaa !12
  %1709 = add nsw i64 %1685, 48
  %1710 = getelementptr inbounds float, float* %3, i64 %1709
  %1711 = bitcast float* %1710 to <8 x float>*
  %1712 = load <8 x float>, <8 x float>* %1711, align 1, !tbaa !12
  %1713 = add nsw i64 %1685, 56
  %1714 = getelementptr inbounds float, float* %3, i64 %1713
  %1715 = bitcast float* %1714 to <8 x float>*
  %1716 = load <8 x float>, <8 x float>* %1715, align 1, !tbaa !12
  %1717 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1688, <8 x float> %90, <8 x float> %1656) #10
  %1718 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1692, <8 x float> %90, <8 x float> %1660) #10
  %1719 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1696, <8 x float> %90, <8 x float> %1664) #10
  %1720 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1700, <8 x float> %90, <8 x float> %1668) #10
  %1721 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1704, <8 x float> %90, <8 x float> %1672) #10
  %1722 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1708, <8 x float> %90, <8 x float> %1676) #10
  %1723 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1712, <8 x float> %90, <8 x float> %1680) #10
  %1724 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1716, <8 x float> %90, <8 x float> %1684) #10
  store <8 x float> %1717, <8 x float>* %1655, align 1, !tbaa !12
  store <8 x float> %1718, <8 x float>* %1659, align 1, !tbaa !12
  store <8 x float> %1719, <8 x float>* %1663, align 1, !tbaa !12
  store <8 x float> %1720, <8 x float>* %1667, align 1, !tbaa !12
  store <8 x float> %1721, <8 x float>* %1671, align 1, !tbaa !12
  store <8 x float> %1722, <8 x float>* %1675, align 1, !tbaa !12
  store <8 x float> %1723, <8 x float>* %1679, align 1, !tbaa !12
  store <8 x float> %1724, <8 x float>* %1683, align 1, !tbaa !12
  %1725 = add nuw nsw i64 %1620, 64
  %1726 = icmp ult i64 %1725, %1504
  br i1 %1726, label %1619, label %1613

1727:                                             ; preds = %1732, %20, %567, %1147, %1262, %1385, %1499, %1613
  %1728 = add nuw nsw i64 %21, 15
  %1729 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1730 = sext i32 %1729 to i64
  %1731 = icmp slt i64 %1728, %1730
  br i1 %1731, label %20, label %8

1732:                                             ; preds = %1614, %1732
  %1733 = phi i64 [ 0, %1614 ], [ %1838, %1732 ]
  %1734 = getelementptr inbounds float, float* %5, i64 %1733
  %1735 = getelementptr inbounds float, float* %1734, i64 8
  %1736 = bitcast float* %1735 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1736, i32 0, i32 1, i32 1)
  %1737 = getelementptr inbounds float, float* %3, i64 %1733
  %1738 = getelementptr inbounds float, float* %1737, i64 8
  %1739 = bitcast float* %1738 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1739, i32 0, i32 1, i32 1)
  %1740 = getelementptr inbounds float, float* %1734, i64 16
  %1741 = bitcast float* %1740 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1741, i32 0, i32 1, i32 1)
  %1742 = getelementptr inbounds float, float* %1737, i64 16
  %1743 = bitcast float* %1742 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1743, i32 0, i32 1, i32 1)
  %1744 = getelementptr inbounds float, float* %1734, i64 24
  %1745 = bitcast float* %1744 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1745, i32 0, i32 1, i32 1)
  %1746 = getelementptr inbounds float, float* %1737, i64 24
  %1747 = bitcast float* %1746 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1747, i32 0, i32 1, i32 1)
  %1748 = getelementptr inbounds float, float* %1734, i64 32
  %1749 = bitcast float* %1748 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1749, i32 0, i32 1, i32 1)
  %1750 = getelementptr inbounds float, float* %1737, i64 32
  %1751 = bitcast float* %1750 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1751, i32 0, i32 1, i32 1)
  %1752 = getelementptr inbounds float, float* %1734, i64 40
  %1753 = bitcast float* %1752 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1753, i32 0, i32 1, i32 1)
  %1754 = getelementptr inbounds float, float* %1737, i64 40
  %1755 = bitcast float* %1754 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1755, i32 0, i32 1, i32 1)
  %1756 = getelementptr inbounds float, float* %1734, i64 48
  %1757 = bitcast float* %1756 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1757, i32 0, i32 1, i32 1)
  %1758 = getelementptr inbounds float, float* %1737, i64 48
  %1759 = bitcast float* %1758 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1759, i32 0, i32 1, i32 1)
  %1760 = getelementptr inbounds float, float* %1734, i64 56
  %1761 = bitcast float* %1760 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1761, i32 0, i32 1, i32 1)
  %1762 = getelementptr inbounds float, float* %1737, i64 56
  %1763 = bitcast float* %1762 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1763, i32 0, i32 1, i32 1)
  %1764 = getelementptr inbounds float, float* %1734, i64 64
  %1765 = bitcast float* %1764 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1765, i32 0, i32 1, i32 1)
  %1766 = getelementptr inbounds float, float* %1737, i64 64
  %1767 = bitcast float* %1766 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1767, i32 0, i32 1, i32 1)
  %1768 = bitcast float* %1734 to <8 x float>*
  %1769 = load <8 x float>, <8 x float>* %1768, align 1, !tbaa !12
  %1770 = or i64 %1733, 8
  %1771 = getelementptr inbounds float, float* %5, i64 %1770
  %1772 = bitcast float* %1771 to <8 x float>*
  %1773 = load <8 x float>, <8 x float>* %1772, align 1, !tbaa !12
  %1774 = or i64 %1733, 16
  %1775 = getelementptr inbounds float, float* %5, i64 %1774
  %1776 = bitcast float* %1775 to <8 x float>*
  %1777 = load <8 x float>, <8 x float>* %1776, align 1, !tbaa !12
  %1778 = or i64 %1733, 24
  %1779 = getelementptr inbounds float, float* %5, i64 %1778
  %1780 = bitcast float* %1779 to <8 x float>*
  %1781 = load <8 x float>, <8 x float>* %1780, align 1, !tbaa !12
  %1782 = or i64 %1733, 32
  %1783 = getelementptr inbounds float, float* %5, i64 %1782
  %1784 = bitcast float* %1783 to <8 x float>*
  %1785 = load <8 x float>, <8 x float>* %1784, align 1, !tbaa !12
  %1786 = or i64 %1733, 40
  %1787 = getelementptr inbounds float, float* %5, i64 %1786
  %1788 = bitcast float* %1787 to <8 x float>*
  %1789 = load <8 x float>, <8 x float>* %1788, align 1, !tbaa !12
  %1790 = or i64 %1733, 48
  %1791 = getelementptr inbounds float, float* %5, i64 %1790
  %1792 = bitcast float* %1791 to <8 x float>*
  %1793 = load <8 x float>, <8 x float>* %1792, align 1, !tbaa !12
  %1794 = or i64 %1733, 56
  %1795 = getelementptr inbounds float, float* %5, i64 %1794
  %1796 = bitcast float* %1795 to <8 x float>*
  %1797 = load <8 x float>, <8 x float>* %1796, align 1, !tbaa !12
  %1798 = add nsw i64 %1733, %1617
  %1799 = getelementptr inbounds float, float* %3, i64 %1798
  %1800 = bitcast float* %1799 to <8 x float>*
  %1801 = load <8 x float>, <8 x float>* %1800, align 1, !tbaa !12
  %1802 = add nsw i64 %1798, 8
  %1803 = getelementptr inbounds float, float* %3, i64 %1802
  %1804 = bitcast float* %1803 to <8 x float>*
  %1805 = load <8 x float>, <8 x float>* %1804, align 1, !tbaa !12
  %1806 = add nsw i64 %1798, 16
  %1807 = getelementptr inbounds float, float* %3, i64 %1806
  %1808 = bitcast float* %1807 to <8 x float>*
  %1809 = load <8 x float>, <8 x float>* %1808, align 1, !tbaa !12
  %1810 = add nsw i64 %1798, 24
  %1811 = getelementptr inbounds float, float* %3, i64 %1810
  %1812 = bitcast float* %1811 to <8 x float>*
  %1813 = load <8 x float>, <8 x float>* %1812, align 1, !tbaa !12
  %1814 = add nsw i64 %1798, 32
  %1815 = getelementptr inbounds float, float* %3, i64 %1814
  %1816 = bitcast float* %1815 to <8 x float>*
  %1817 = load <8 x float>, <8 x float>* %1816, align 1, !tbaa !12
  %1818 = add nsw i64 %1798, 40
  %1819 = getelementptr inbounds float, float* %3, i64 %1818
  %1820 = bitcast float* %1819 to <8 x float>*
  %1821 = load <8 x float>, <8 x float>* %1820, align 1, !tbaa !12
  %1822 = add nsw i64 %1798, 48
  %1823 = getelementptr inbounds float, float* %3, i64 %1822
  %1824 = bitcast float* %1823 to <8 x float>*
  %1825 = load <8 x float>, <8 x float>* %1824, align 1, !tbaa !12
  %1826 = add nsw i64 %1798, 56
  %1827 = getelementptr inbounds float, float* %3, i64 %1826
  %1828 = bitcast float* %1827 to <8 x float>*
  %1829 = load <8 x float>, <8 x float>* %1828, align 1, !tbaa !12
  %1830 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1801, <8 x float> %95, <8 x float> %1769) #10
  %1831 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1805, <8 x float> %95, <8 x float> %1773) #10
  %1832 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1809, <8 x float> %95, <8 x float> %1777) #10
  %1833 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1813, <8 x float> %95, <8 x float> %1781) #10
  %1834 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1817, <8 x float> %95, <8 x float> %1785) #10
  %1835 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1821, <8 x float> %95, <8 x float> %1789) #10
  %1836 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1825, <8 x float> %95, <8 x float> %1793) #10
  %1837 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1829, <8 x float> %95, <8 x float> %1797) #10
  store <8 x float> %1830, <8 x float>* %1768, align 1, !tbaa !12
  store <8 x float> %1831, <8 x float>* %1772, align 1, !tbaa !12
  store <8 x float> %1832, <8 x float>* %1776, align 1, !tbaa !12
  store <8 x float> %1833, <8 x float>* %1780, align 1, !tbaa !12
  store <8 x float> %1834, <8 x float>* %1784, align 1, !tbaa !12
  store <8 x float> %1835, <8 x float>* %1788, align 1, !tbaa !12
  store <8 x float> %1836, <8 x float>* %1792, align 1, !tbaa !12
  store <8 x float> %1837, <8 x float>* %1796, align 1, !tbaa !12
  %1838 = add nuw nsw i64 %1733, 64
  %1839 = icmp ult i64 %1838, %1618
  br i1 %1839, label %1732, label %1727
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 255
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui8_uk15.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
