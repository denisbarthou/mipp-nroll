; ModuleID = 'codes/matvec_ui14_uk7.cpp'
source_filename = "codes/matvec_ui14_uk7.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui14_uk7.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 112
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 56
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1246, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1246
  %21 = phi i64 [ %1247, %1246 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %1246

58:                                               ; preds = %20
  %59 = zext i32 %56 to i64
  %60 = trunc i64 %21 to i32
  %61 = mul nsw i32 %56, %60
  br label %68

62:                                               ; preds = %68
  br i1 %57, label %63, label %461

63:                                               ; preds = %62
  %64 = trunc i64 %26 to i32
  %65 = mul nsw i32 %56, %64
  %66 = sext i32 %65 to i64
  %67 = zext i32 %56 to i64
  br label %275

68:                                               ; preds = %58, %68
  %69 = phi i64 [ 0, %58 ], [ %267, %68 ]
  %70 = getelementptr inbounds float, float* %5, i64 %69
  %71 = getelementptr inbounds float, float* %70, i64 8
  %72 = bitcast float* %71 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %72, i32 0, i32 1, i32 1)
  %73 = getelementptr inbounds float, float* %3, i64 %69
  %74 = getelementptr inbounds float, float* %73, i64 8
  %75 = bitcast float* %74 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %75, i32 0, i32 1, i32 1)
  %76 = getelementptr inbounds float, float* %70, i64 16
  %77 = bitcast float* %76 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %77, i32 0, i32 1, i32 1)
  %78 = getelementptr inbounds float, float* %73, i64 16
  %79 = bitcast float* %78 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %79, i32 0, i32 1, i32 1)
  %80 = getelementptr inbounds float, float* %70, i64 24
  %81 = bitcast float* %80 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %81, i32 0, i32 1, i32 1)
  %82 = getelementptr inbounds float, float* %73, i64 24
  %83 = bitcast float* %82 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %83, i32 0, i32 1, i32 1)
  %84 = getelementptr inbounds float, float* %70, i64 32
  %85 = bitcast float* %84 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %85, i32 0, i32 1, i32 1)
  %86 = getelementptr inbounds float, float* %73, i64 32
  %87 = bitcast float* %86 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %87, i32 0, i32 1, i32 1)
  %88 = getelementptr inbounds float, float* %70, i64 40
  %89 = bitcast float* %88 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %89, i32 0, i32 1, i32 1)
  %90 = getelementptr inbounds float, float* %73, i64 40
  %91 = bitcast float* %90 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %91, i32 0, i32 1, i32 1)
  %92 = getelementptr inbounds float, float* %70, i64 48
  %93 = bitcast float* %92 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %93, i32 0, i32 1, i32 1)
  %94 = getelementptr inbounds float, float* %73, i64 48
  %95 = bitcast float* %94 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %95, i32 0, i32 1, i32 1)
  %96 = getelementptr inbounds float, float* %70, i64 56
  %97 = bitcast float* %96 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %97, i32 0, i32 1, i32 1)
  %98 = getelementptr inbounds float, float* %73, i64 56
  %99 = bitcast float* %98 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %99, i32 0, i32 1, i32 1)
  %100 = getelementptr inbounds float, float* %70, i64 64
  %101 = bitcast float* %100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %101, i32 0, i32 1, i32 1)
  %102 = getelementptr inbounds float, float* %73, i64 64
  %103 = bitcast float* %102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %103, i32 0, i32 1, i32 1)
  %104 = getelementptr inbounds float, float* %70, i64 72
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %73, i64 72
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %70, i64 80
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %73, i64 80
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %70, i64 88
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %73, i64 88
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %70, i64 96
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %73, i64 96
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %70, i64 104
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %73, i64 104
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %70, i64 112
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %73, i64 112
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = bitcast float* %70 to <8 x float>*
  %129 = load <8 x float>, <8 x float>* %128, align 1, !tbaa !12
  %130 = or i64 %69, 8
  %131 = getelementptr inbounds float, float* %5, i64 %130
  %132 = bitcast float* %131 to <8 x float>*
  %133 = load <8 x float>, <8 x float>* %132, align 1, !tbaa !12
  %134 = add nuw nsw i64 %69, 16
  %135 = getelementptr inbounds float, float* %5, i64 %134
  %136 = bitcast float* %135 to <8 x float>*
  %137 = load <8 x float>, <8 x float>* %136, align 1, !tbaa !12
  %138 = add nuw nsw i64 %69, 24
  %139 = getelementptr inbounds float, float* %5, i64 %138
  %140 = bitcast float* %139 to <8 x float>*
  %141 = load <8 x float>, <8 x float>* %140, align 1, !tbaa !12
  %142 = add nuw nsw i64 %69, 32
  %143 = getelementptr inbounds float, float* %5, i64 %142
  %144 = bitcast float* %143 to <8 x float>*
  %145 = load <8 x float>, <8 x float>* %144, align 1, !tbaa !12
  %146 = add nuw nsw i64 %69, 40
  %147 = getelementptr inbounds float, float* %5, i64 %146
  %148 = bitcast float* %147 to <8 x float>*
  %149 = load <8 x float>, <8 x float>* %148, align 1, !tbaa !12
  %150 = add nuw nsw i64 %69, 48
  %151 = getelementptr inbounds float, float* %5, i64 %150
  %152 = bitcast float* %151 to <8 x float>*
  %153 = load <8 x float>, <8 x float>* %152, align 1, !tbaa !12
  %154 = add nuw nsw i64 %69, 56
  %155 = getelementptr inbounds float, float* %5, i64 %154
  %156 = bitcast float* %155 to <8 x float>*
  %157 = load <8 x float>, <8 x float>* %156, align 1, !tbaa !12
  %158 = add nuw nsw i64 %69, 64
  %159 = getelementptr inbounds float, float* %5, i64 %158
  %160 = bitcast float* %159 to <8 x float>*
  %161 = load <8 x float>, <8 x float>* %160, align 1, !tbaa !12
  %162 = add nuw nsw i64 %69, 72
  %163 = getelementptr inbounds float, float* %5, i64 %162
  %164 = bitcast float* %163 to <8 x float>*
  %165 = load <8 x float>, <8 x float>* %164, align 1, !tbaa !12
  %166 = add nuw nsw i64 %69, 80
  %167 = getelementptr inbounds float, float* %5, i64 %166
  %168 = bitcast float* %167 to <8 x float>*
  %169 = load <8 x float>, <8 x float>* %168, align 1, !tbaa !12
  %170 = add nuw nsw i64 %69, 88
  %171 = getelementptr inbounds float, float* %5, i64 %170
  %172 = bitcast float* %171 to <8 x float>*
  %173 = load <8 x float>, <8 x float>* %172, align 1, !tbaa !12
  %174 = add nuw nsw i64 %69, 96
  %175 = getelementptr inbounds float, float* %5, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nuw nsw i64 %69, 104
  %179 = getelementptr inbounds float, float* %5, i64 %178
  %180 = bitcast float* %179 to <8 x float>*
  %181 = load <8 x float>, <8 x float>* %180, align 1, !tbaa !12
  %182 = trunc i64 %69 to i32
  %183 = add nsw i32 %61, %182
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds float, float* %3, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = add nsw i32 %183, 8
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %3, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nsw i32 %183, 16
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %3, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = add nsw i32 %183, 24
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %3, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nsw i32 %183, 32
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = add nsw i32 %183, 40
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nsw i32 %183, 48
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %3, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %217 = load <8 x float>, <8 x float>* %216, align 1, !tbaa !12
  %218 = add nsw i32 %183, 56
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds float, float* %3, i64 %219
  %221 = bitcast float* %220 to <8 x float>*
  %222 = load <8 x float>, <8 x float>* %221, align 1, !tbaa !12
  %223 = add nsw i32 %183, 64
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds float, float* %3, i64 %224
  %226 = bitcast float* %225 to <8 x float>*
  %227 = load <8 x float>, <8 x float>* %226, align 1, !tbaa !12
  %228 = add nsw i32 %183, 72
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds float, float* %3, i64 %229
  %231 = bitcast float* %230 to <8 x float>*
  %232 = load <8 x float>, <8 x float>* %231, align 1, !tbaa !12
  %233 = add nsw i32 %183, 80
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds float, float* %3, i64 %234
  %236 = bitcast float* %235 to <8 x float>*
  %237 = load <8 x float>, <8 x float>* %236, align 1, !tbaa !12
  %238 = add nsw i32 %183, 88
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds float, float* %3, i64 %239
  %241 = bitcast float* %240 to <8 x float>*
  %242 = load <8 x float>, <8 x float>* %241, align 1, !tbaa !12
  %243 = add nsw i32 %183, 96
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %3, i64 %244
  %246 = bitcast float* %245 to <8 x float>*
  %247 = load <8 x float>, <8 x float>* %246, align 1, !tbaa !12
  %248 = add nsw i32 %183, 104
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds float, float* %3, i64 %249
  %251 = bitcast float* %250 to <8 x float>*
  %252 = load <8 x float>, <8 x float>* %251, align 1, !tbaa !12
  %253 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %187, <8 x float> %25, <8 x float> %129) #10
  %254 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %192, <8 x float> %25, <8 x float> %133) #10
  %255 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %197, <8 x float> %25, <8 x float> %137) #10
  %256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %202, <8 x float> %25, <8 x float> %141) #10
  %257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %145) #10
  %258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %149) #10
  %259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %217, <8 x float> %25, <8 x float> %153) #10
  %260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %222, <8 x float> %25, <8 x float> %157) #10
  %261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %227, <8 x float> %25, <8 x float> %161) #10
  %262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %232, <8 x float> %25, <8 x float> %165) #10
  %263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %237, <8 x float> %25, <8 x float> %169) #10
  %264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %242, <8 x float> %25, <8 x float> %173) #10
  %265 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %247, <8 x float> %25, <8 x float> %177) #10
  %266 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %252, <8 x float> %25, <8 x float> %181) #10
  store <8 x float> %253, <8 x float>* %128, align 1, !tbaa !12
  store <8 x float> %254, <8 x float>* %132, align 1, !tbaa !12
  store <8 x float> %255, <8 x float>* %136, align 1, !tbaa !12
  store <8 x float> %256, <8 x float>* %140, align 1, !tbaa !12
  store <8 x float> %257, <8 x float>* %144, align 1, !tbaa !12
  store <8 x float> %258, <8 x float>* %148, align 1, !tbaa !12
  store <8 x float> %259, <8 x float>* %152, align 1, !tbaa !12
  store <8 x float> %260, <8 x float>* %156, align 1, !tbaa !12
  store <8 x float> %261, <8 x float>* %160, align 1, !tbaa !12
  store <8 x float> %262, <8 x float>* %164, align 1, !tbaa !12
  store <8 x float> %263, <8 x float>* %168, align 1, !tbaa !12
  store <8 x float> %264, <8 x float>* %172, align 1, !tbaa !12
  store <8 x float> %265, <8 x float>* %176, align 1, !tbaa !12
  store <8 x float> %266, <8 x float>* %180, align 1, !tbaa !12
  %267 = add nuw nsw i64 %69, 112
  %268 = icmp ult i64 %267, %59
  br i1 %268, label %68, label %62

269:                                              ; preds = %275
  br i1 %57, label %270, label %461

270:                                              ; preds = %269
  %271 = trunc i64 %31 to i32
  %272 = mul nsw i32 %56, %271
  %273 = sext i32 %272 to i64
  %274 = zext i32 %56 to i64
  br label %468

275:                                              ; preds = %63, %275
  %276 = phi i64 [ 0, %63 ], [ %459, %275 ]
  %277 = getelementptr inbounds float, float* %5, i64 %276
  %278 = getelementptr inbounds float, float* %277, i64 8
  %279 = bitcast float* %278 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %279, i32 0, i32 1, i32 1)
  %280 = getelementptr inbounds float, float* %3, i64 %276
  %281 = getelementptr inbounds float, float* %280, i64 8
  %282 = bitcast float* %281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %282, i32 0, i32 1, i32 1)
  %283 = getelementptr inbounds float, float* %277, i64 16
  %284 = bitcast float* %283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %284, i32 0, i32 1, i32 1)
  %285 = getelementptr inbounds float, float* %280, i64 16
  %286 = bitcast float* %285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %286, i32 0, i32 1, i32 1)
  %287 = getelementptr inbounds float, float* %277, i64 24
  %288 = bitcast float* %287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %288, i32 0, i32 1, i32 1)
  %289 = getelementptr inbounds float, float* %280, i64 24
  %290 = bitcast float* %289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %290, i32 0, i32 1, i32 1)
  %291 = getelementptr inbounds float, float* %277, i64 32
  %292 = bitcast float* %291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %292, i32 0, i32 1, i32 1)
  %293 = getelementptr inbounds float, float* %280, i64 32
  %294 = bitcast float* %293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %294, i32 0, i32 1, i32 1)
  %295 = getelementptr inbounds float, float* %277, i64 40
  %296 = bitcast float* %295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %296, i32 0, i32 1, i32 1)
  %297 = getelementptr inbounds float, float* %280, i64 40
  %298 = bitcast float* %297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %298, i32 0, i32 1, i32 1)
  %299 = getelementptr inbounds float, float* %277, i64 48
  %300 = bitcast float* %299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %300, i32 0, i32 1, i32 1)
  %301 = getelementptr inbounds float, float* %280, i64 48
  %302 = bitcast float* %301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %302, i32 0, i32 1, i32 1)
  %303 = getelementptr inbounds float, float* %277, i64 56
  %304 = bitcast float* %303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %304, i32 0, i32 1, i32 1)
  %305 = getelementptr inbounds float, float* %280, i64 56
  %306 = bitcast float* %305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %306, i32 0, i32 1, i32 1)
  %307 = getelementptr inbounds float, float* %277, i64 64
  %308 = bitcast float* %307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %308, i32 0, i32 1, i32 1)
  %309 = getelementptr inbounds float, float* %280, i64 64
  %310 = bitcast float* %309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %310, i32 0, i32 1, i32 1)
  %311 = getelementptr inbounds float, float* %277, i64 72
  %312 = bitcast float* %311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %312, i32 0, i32 1, i32 1)
  %313 = getelementptr inbounds float, float* %280, i64 72
  %314 = bitcast float* %313 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %314, i32 0, i32 1, i32 1)
  %315 = getelementptr inbounds float, float* %277, i64 80
  %316 = bitcast float* %315 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %316, i32 0, i32 1, i32 1)
  %317 = getelementptr inbounds float, float* %280, i64 80
  %318 = bitcast float* %317 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %318, i32 0, i32 1, i32 1)
  %319 = getelementptr inbounds float, float* %277, i64 88
  %320 = bitcast float* %319 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %320, i32 0, i32 1, i32 1)
  %321 = getelementptr inbounds float, float* %280, i64 88
  %322 = bitcast float* %321 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %322, i32 0, i32 1, i32 1)
  %323 = getelementptr inbounds float, float* %277, i64 96
  %324 = bitcast float* %323 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %324, i32 0, i32 1, i32 1)
  %325 = getelementptr inbounds float, float* %280, i64 96
  %326 = bitcast float* %325 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %326, i32 0, i32 1, i32 1)
  %327 = getelementptr inbounds float, float* %277, i64 104
  %328 = bitcast float* %327 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %328, i32 0, i32 1, i32 1)
  %329 = getelementptr inbounds float, float* %280, i64 104
  %330 = bitcast float* %329 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %330, i32 0, i32 1, i32 1)
  %331 = getelementptr inbounds float, float* %277, i64 112
  %332 = bitcast float* %331 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %332, i32 0, i32 1, i32 1)
  %333 = getelementptr inbounds float, float* %280, i64 112
  %334 = bitcast float* %333 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %334, i32 0, i32 1, i32 1)
  %335 = bitcast float* %277 to <8 x float>*
  %336 = load <8 x float>, <8 x float>* %335, align 1, !tbaa !12
  %337 = or i64 %276, 8
  %338 = getelementptr inbounds float, float* %5, i64 %337
  %339 = bitcast float* %338 to <8 x float>*
  %340 = load <8 x float>, <8 x float>* %339, align 1, !tbaa !12
  %341 = add nuw nsw i64 %276, 16
  %342 = getelementptr inbounds float, float* %5, i64 %341
  %343 = bitcast float* %342 to <8 x float>*
  %344 = load <8 x float>, <8 x float>* %343, align 1, !tbaa !12
  %345 = add nuw nsw i64 %276, 24
  %346 = getelementptr inbounds float, float* %5, i64 %345
  %347 = bitcast float* %346 to <8 x float>*
  %348 = load <8 x float>, <8 x float>* %347, align 1, !tbaa !12
  %349 = add nuw nsw i64 %276, 32
  %350 = getelementptr inbounds float, float* %5, i64 %349
  %351 = bitcast float* %350 to <8 x float>*
  %352 = load <8 x float>, <8 x float>* %351, align 1, !tbaa !12
  %353 = add nuw nsw i64 %276, 40
  %354 = getelementptr inbounds float, float* %5, i64 %353
  %355 = bitcast float* %354 to <8 x float>*
  %356 = load <8 x float>, <8 x float>* %355, align 1, !tbaa !12
  %357 = add nuw nsw i64 %276, 48
  %358 = getelementptr inbounds float, float* %5, i64 %357
  %359 = bitcast float* %358 to <8 x float>*
  %360 = load <8 x float>, <8 x float>* %359, align 1, !tbaa !12
  %361 = add nuw nsw i64 %276, 56
  %362 = getelementptr inbounds float, float* %5, i64 %361
  %363 = bitcast float* %362 to <8 x float>*
  %364 = load <8 x float>, <8 x float>* %363, align 1, !tbaa !12
  %365 = add nuw nsw i64 %276, 64
  %366 = getelementptr inbounds float, float* %5, i64 %365
  %367 = bitcast float* %366 to <8 x float>*
  %368 = load <8 x float>, <8 x float>* %367, align 1, !tbaa !12
  %369 = add nuw nsw i64 %276, 72
  %370 = getelementptr inbounds float, float* %5, i64 %369
  %371 = bitcast float* %370 to <8 x float>*
  %372 = load <8 x float>, <8 x float>* %371, align 1, !tbaa !12
  %373 = add nuw nsw i64 %276, 80
  %374 = getelementptr inbounds float, float* %5, i64 %373
  %375 = bitcast float* %374 to <8 x float>*
  %376 = load <8 x float>, <8 x float>* %375, align 1, !tbaa !12
  %377 = add nuw nsw i64 %276, 88
  %378 = getelementptr inbounds float, float* %5, i64 %377
  %379 = bitcast float* %378 to <8 x float>*
  %380 = load <8 x float>, <8 x float>* %379, align 1, !tbaa !12
  %381 = add nuw nsw i64 %276, 96
  %382 = getelementptr inbounds float, float* %5, i64 %381
  %383 = bitcast float* %382 to <8 x float>*
  %384 = load <8 x float>, <8 x float>* %383, align 1, !tbaa !12
  %385 = add nuw nsw i64 %276, 104
  %386 = getelementptr inbounds float, float* %5, i64 %385
  %387 = bitcast float* %386 to <8 x float>*
  %388 = load <8 x float>, <8 x float>* %387, align 1, !tbaa !12
  %389 = add nsw i64 %276, %66
  %390 = getelementptr inbounds float, float* %3, i64 %389
  %391 = bitcast float* %390 to <8 x float>*
  %392 = load <8 x float>, <8 x float>* %391, align 1, !tbaa !12
  %393 = add nsw i64 %389, 8
  %394 = getelementptr inbounds float, float* %3, i64 %393
  %395 = bitcast float* %394 to <8 x float>*
  %396 = load <8 x float>, <8 x float>* %395, align 1, !tbaa !12
  %397 = add nsw i64 %389, 16
  %398 = getelementptr inbounds float, float* %3, i64 %397
  %399 = bitcast float* %398 to <8 x float>*
  %400 = load <8 x float>, <8 x float>* %399, align 1, !tbaa !12
  %401 = add nsw i64 %389, 24
  %402 = getelementptr inbounds float, float* %3, i64 %401
  %403 = bitcast float* %402 to <8 x float>*
  %404 = load <8 x float>, <8 x float>* %403, align 1, !tbaa !12
  %405 = add nsw i64 %389, 32
  %406 = getelementptr inbounds float, float* %3, i64 %405
  %407 = bitcast float* %406 to <8 x float>*
  %408 = load <8 x float>, <8 x float>* %407, align 1, !tbaa !12
  %409 = add nsw i64 %389, 40
  %410 = getelementptr inbounds float, float* %3, i64 %409
  %411 = bitcast float* %410 to <8 x float>*
  %412 = load <8 x float>, <8 x float>* %411, align 1, !tbaa !12
  %413 = add nsw i64 %389, 48
  %414 = getelementptr inbounds float, float* %3, i64 %413
  %415 = bitcast float* %414 to <8 x float>*
  %416 = load <8 x float>, <8 x float>* %415, align 1, !tbaa !12
  %417 = add nsw i64 %389, 56
  %418 = getelementptr inbounds float, float* %3, i64 %417
  %419 = bitcast float* %418 to <8 x float>*
  %420 = load <8 x float>, <8 x float>* %419, align 1, !tbaa !12
  %421 = add nsw i64 %389, 64
  %422 = getelementptr inbounds float, float* %3, i64 %421
  %423 = bitcast float* %422 to <8 x float>*
  %424 = load <8 x float>, <8 x float>* %423, align 1, !tbaa !12
  %425 = add nsw i64 %389, 72
  %426 = getelementptr inbounds float, float* %3, i64 %425
  %427 = bitcast float* %426 to <8 x float>*
  %428 = load <8 x float>, <8 x float>* %427, align 1, !tbaa !12
  %429 = add nsw i64 %389, 80
  %430 = getelementptr inbounds float, float* %3, i64 %429
  %431 = bitcast float* %430 to <8 x float>*
  %432 = load <8 x float>, <8 x float>* %431, align 1, !tbaa !12
  %433 = add nsw i64 %389, 88
  %434 = getelementptr inbounds float, float* %3, i64 %433
  %435 = bitcast float* %434 to <8 x float>*
  %436 = load <8 x float>, <8 x float>* %435, align 1, !tbaa !12
  %437 = add nsw i64 %389, 96
  %438 = getelementptr inbounds float, float* %3, i64 %437
  %439 = bitcast float* %438 to <8 x float>*
  %440 = load <8 x float>, <8 x float>* %439, align 1, !tbaa !12
  %441 = add nsw i64 %389, 104
  %442 = getelementptr inbounds float, float* %3, i64 %441
  %443 = bitcast float* %442 to <8 x float>*
  %444 = load <8 x float>, <8 x float>* %443, align 1, !tbaa !12
  %445 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %392, <8 x float> %30, <8 x float> %336) #10
  %446 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %396, <8 x float> %30, <8 x float> %340) #10
  %447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %400, <8 x float> %30, <8 x float> %344) #10
  %448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %404, <8 x float> %30, <8 x float> %348) #10
  %449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %408, <8 x float> %30, <8 x float> %352) #10
  %450 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %412, <8 x float> %30, <8 x float> %356) #10
  %451 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %416, <8 x float> %30, <8 x float> %360) #10
  %452 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %420, <8 x float> %30, <8 x float> %364) #10
  %453 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %424, <8 x float> %30, <8 x float> %368) #10
  %454 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %428, <8 x float> %30, <8 x float> %372) #10
  %455 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %432, <8 x float> %30, <8 x float> %376) #10
  %456 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %436, <8 x float> %30, <8 x float> %380) #10
  %457 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %440, <8 x float> %30, <8 x float> %384) #10
  %458 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %444, <8 x float> %30, <8 x float> %388) #10
  store <8 x float> %445, <8 x float>* %335, align 1, !tbaa !12
  store <8 x float> %446, <8 x float>* %339, align 1, !tbaa !12
  store <8 x float> %447, <8 x float>* %343, align 1, !tbaa !12
  store <8 x float> %448, <8 x float>* %347, align 1, !tbaa !12
  store <8 x float> %449, <8 x float>* %351, align 1, !tbaa !12
  store <8 x float> %450, <8 x float>* %355, align 1, !tbaa !12
  store <8 x float> %451, <8 x float>* %359, align 1, !tbaa !12
  store <8 x float> %452, <8 x float>* %363, align 1, !tbaa !12
  store <8 x float> %453, <8 x float>* %367, align 1, !tbaa !12
  store <8 x float> %454, <8 x float>* %371, align 1, !tbaa !12
  store <8 x float> %455, <8 x float>* %375, align 1, !tbaa !12
  store <8 x float> %456, <8 x float>* %379, align 1, !tbaa !12
  store <8 x float> %457, <8 x float>* %383, align 1, !tbaa !12
  store <8 x float> %458, <8 x float>* %387, align 1, !tbaa !12
  %459 = add nuw nsw i64 %276, 112
  %460 = icmp ult i64 %459, %67
  br i1 %460, label %275, label %269

461:                                              ; preds = %468, %62, %269
  %462 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %463 = icmp sgt i32 %462, 0
  br i1 %463, label %464, label %1246

464:                                              ; preds = %461
  %465 = zext i32 %462 to i64
  %466 = trunc i64 %36 to i32
  %467 = mul nsw i32 %462, %466
  br label %660

468:                                              ; preds = %270, %468
  %469 = phi i64 [ 0, %270 ], [ %652, %468 ]
  %470 = getelementptr inbounds float, float* %5, i64 %469
  %471 = getelementptr inbounds float, float* %470, i64 8
  %472 = bitcast float* %471 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %472, i32 0, i32 1, i32 1)
  %473 = getelementptr inbounds float, float* %3, i64 %469
  %474 = getelementptr inbounds float, float* %473, i64 8
  %475 = bitcast float* %474 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %475, i32 0, i32 1, i32 1)
  %476 = getelementptr inbounds float, float* %470, i64 16
  %477 = bitcast float* %476 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %477, i32 0, i32 1, i32 1)
  %478 = getelementptr inbounds float, float* %473, i64 16
  %479 = bitcast float* %478 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %479, i32 0, i32 1, i32 1)
  %480 = getelementptr inbounds float, float* %470, i64 24
  %481 = bitcast float* %480 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %481, i32 0, i32 1, i32 1)
  %482 = getelementptr inbounds float, float* %473, i64 24
  %483 = bitcast float* %482 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %483, i32 0, i32 1, i32 1)
  %484 = getelementptr inbounds float, float* %470, i64 32
  %485 = bitcast float* %484 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %485, i32 0, i32 1, i32 1)
  %486 = getelementptr inbounds float, float* %473, i64 32
  %487 = bitcast float* %486 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %487, i32 0, i32 1, i32 1)
  %488 = getelementptr inbounds float, float* %470, i64 40
  %489 = bitcast float* %488 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %489, i32 0, i32 1, i32 1)
  %490 = getelementptr inbounds float, float* %473, i64 40
  %491 = bitcast float* %490 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %491, i32 0, i32 1, i32 1)
  %492 = getelementptr inbounds float, float* %470, i64 48
  %493 = bitcast float* %492 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %493, i32 0, i32 1, i32 1)
  %494 = getelementptr inbounds float, float* %473, i64 48
  %495 = bitcast float* %494 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %495, i32 0, i32 1, i32 1)
  %496 = getelementptr inbounds float, float* %470, i64 56
  %497 = bitcast float* %496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %497, i32 0, i32 1, i32 1)
  %498 = getelementptr inbounds float, float* %473, i64 56
  %499 = bitcast float* %498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %499, i32 0, i32 1, i32 1)
  %500 = getelementptr inbounds float, float* %470, i64 64
  %501 = bitcast float* %500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %501, i32 0, i32 1, i32 1)
  %502 = getelementptr inbounds float, float* %473, i64 64
  %503 = bitcast float* %502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %503, i32 0, i32 1, i32 1)
  %504 = getelementptr inbounds float, float* %470, i64 72
  %505 = bitcast float* %504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %505, i32 0, i32 1, i32 1)
  %506 = getelementptr inbounds float, float* %473, i64 72
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %470, i64 80
  %509 = bitcast float* %508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %509, i32 0, i32 1, i32 1)
  %510 = getelementptr inbounds float, float* %473, i64 80
  %511 = bitcast float* %510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %511, i32 0, i32 1, i32 1)
  %512 = getelementptr inbounds float, float* %470, i64 88
  %513 = bitcast float* %512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %513, i32 0, i32 1, i32 1)
  %514 = getelementptr inbounds float, float* %473, i64 88
  %515 = bitcast float* %514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %515, i32 0, i32 1, i32 1)
  %516 = getelementptr inbounds float, float* %470, i64 96
  %517 = bitcast float* %516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %517, i32 0, i32 1, i32 1)
  %518 = getelementptr inbounds float, float* %473, i64 96
  %519 = bitcast float* %518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %519, i32 0, i32 1, i32 1)
  %520 = getelementptr inbounds float, float* %470, i64 104
  %521 = bitcast float* %520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %521, i32 0, i32 1, i32 1)
  %522 = getelementptr inbounds float, float* %473, i64 104
  %523 = bitcast float* %522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %523, i32 0, i32 1, i32 1)
  %524 = getelementptr inbounds float, float* %470, i64 112
  %525 = bitcast float* %524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %525, i32 0, i32 1, i32 1)
  %526 = getelementptr inbounds float, float* %473, i64 112
  %527 = bitcast float* %526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %527, i32 0, i32 1, i32 1)
  %528 = bitcast float* %470 to <8 x float>*
  %529 = load <8 x float>, <8 x float>* %528, align 1, !tbaa !12
  %530 = or i64 %469, 8
  %531 = getelementptr inbounds float, float* %5, i64 %530
  %532 = bitcast float* %531 to <8 x float>*
  %533 = load <8 x float>, <8 x float>* %532, align 1, !tbaa !12
  %534 = add nuw nsw i64 %469, 16
  %535 = getelementptr inbounds float, float* %5, i64 %534
  %536 = bitcast float* %535 to <8 x float>*
  %537 = load <8 x float>, <8 x float>* %536, align 1, !tbaa !12
  %538 = add nuw nsw i64 %469, 24
  %539 = getelementptr inbounds float, float* %5, i64 %538
  %540 = bitcast float* %539 to <8 x float>*
  %541 = load <8 x float>, <8 x float>* %540, align 1, !tbaa !12
  %542 = add nuw nsw i64 %469, 32
  %543 = getelementptr inbounds float, float* %5, i64 %542
  %544 = bitcast float* %543 to <8 x float>*
  %545 = load <8 x float>, <8 x float>* %544, align 1, !tbaa !12
  %546 = add nuw nsw i64 %469, 40
  %547 = getelementptr inbounds float, float* %5, i64 %546
  %548 = bitcast float* %547 to <8 x float>*
  %549 = load <8 x float>, <8 x float>* %548, align 1, !tbaa !12
  %550 = add nuw nsw i64 %469, 48
  %551 = getelementptr inbounds float, float* %5, i64 %550
  %552 = bitcast float* %551 to <8 x float>*
  %553 = load <8 x float>, <8 x float>* %552, align 1, !tbaa !12
  %554 = add nuw nsw i64 %469, 56
  %555 = getelementptr inbounds float, float* %5, i64 %554
  %556 = bitcast float* %555 to <8 x float>*
  %557 = load <8 x float>, <8 x float>* %556, align 1, !tbaa !12
  %558 = add nuw nsw i64 %469, 64
  %559 = getelementptr inbounds float, float* %5, i64 %558
  %560 = bitcast float* %559 to <8 x float>*
  %561 = load <8 x float>, <8 x float>* %560, align 1, !tbaa !12
  %562 = add nuw nsw i64 %469, 72
  %563 = getelementptr inbounds float, float* %5, i64 %562
  %564 = bitcast float* %563 to <8 x float>*
  %565 = load <8 x float>, <8 x float>* %564, align 1, !tbaa !12
  %566 = add nuw nsw i64 %469, 80
  %567 = getelementptr inbounds float, float* %5, i64 %566
  %568 = bitcast float* %567 to <8 x float>*
  %569 = load <8 x float>, <8 x float>* %568, align 1, !tbaa !12
  %570 = add nuw nsw i64 %469, 88
  %571 = getelementptr inbounds float, float* %5, i64 %570
  %572 = bitcast float* %571 to <8 x float>*
  %573 = load <8 x float>, <8 x float>* %572, align 1, !tbaa !12
  %574 = add nuw nsw i64 %469, 96
  %575 = getelementptr inbounds float, float* %5, i64 %574
  %576 = bitcast float* %575 to <8 x float>*
  %577 = load <8 x float>, <8 x float>* %576, align 1, !tbaa !12
  %578 = add nuw nsw i64 %469, 104
  %579 = getelementptr inbounds float, float* %5, i64 %578
  %580 = bitcast float* %579 to <8 x float>*
  %581 = load <8 x float>, <8 x float>* %580, align 1, !tbaa !12
  %582 = add nsw i64 %469, %273
  %583 = getelementptr inbounds float, float* %3, i64 %582
  %584 = bitcast float* %583 to <8 x float>*
  %585 = load <8 x float>, <8 x float>* %584, align 1, !tbaa !12
  %586 = add nsw i64 %582, 8
  %587 = getelementptr inbounds float, float* %3, i64 %586
  %588 = bitcast float* %587 to <8 x float>*
  %589 = load <8 x float>, <8 x float>* %588, align 1, !tbaa !12
  %590 = add nsw i64 %582, 16
  %591 = getelementptr inbounds float, float* %3, i64 %590
  %592 = bitcast float* %591 to <8 x float>*
  %593 = load <8 x float>, <8 x float>* %592, align 1, !tbaa !12
  %594 = add nsw i64 %582, 24
  %595 = getelementptr inbounds float, float* %3, i64 %594
  %596 = bitcast float* %595 to <8 x float>*
  %597 = load <8 x float>, <8 x float>* %596, align 1, !tbaa !12
  %598 = add nsw i64 %582, 32
  %599 = getelementptr inbounds float, float* %3, i64 %598
  %600 = bitcast float* %599 to <8 x float>*
  %601 = load <8 x float>, <8 x float>* %600, align 1, !tbaa !12
  %602 = add nsw i64 %582, 40
  %603 = getelementptr inbounds float, float* %3, i64 %602
  %604 = bitcast float* %603 to <8 x float>*
  %605 = load <8 x float>, <8 x float>* %604, align 1, !tbaa !12
  %606 = add nsw i64 %582, 48
  %607 = getelementptr inbounds float, float* %3, i64 %606
  %608 = bitcast float* %607 to <8 x float>*
  %609 = load <8 x float>, <8 x float>* %608, align 1, !tbaa !12
  %610 = add nsw i64 %582, 56
  %611 = getelementptr inbounds float, float* %3, i64 %610
  %612 = bitcast float* %611 to <8 x float>*
  %613 = load <8 x float>, <8 x float>* %612, align 1, !tbaa !12
  %614 = add nsw i64 %582, 64
  %615 = getelementptr inbounds float, float* %3, i64 %614
  %616 = bitcast float* %615 to <8 x float>*
  %617 = load <8 x float>, <8 x float>* %616, align 1, !tbaa !12
  %618 = add nsw i64 %582, 72
  %619 = getelementptr inbounds float, float* %3, i64 %618
  %620 = bitcast float* %619 to <8 x float>*
  %621 = load <8 x float>, <8 x float>* %620, align 1, !tbaa !12
  %622 = add nsw i64 %582, 80
  %623 = getelementptr inbounds float, float* %3, i64 %622
  %624 = bitcast float* %623 to <8 x float>*
  %625 = load <8 x float>, <8 x float>* %624, align 1, !tbaa !12
  %626 = add nsw i64 %582, 88
  %627 = getelementptr inbounds float, float* %3, i64 %626
  %628 = bitcast float* %627 to <8 x float>*
  %629 = load <8 x float>, <8 x float>* %628, align 1, !tbaa !12
  %630 = add nsw i64 %582, 96
  %631 = getelementptr inbounds float, float* %3, i64 %630
  %632 = bitcast float* %631 to <8 x float>*
  %633 = load <8 x float>, <8 x float>* %632, align 1, !tbaa !12
  %634 = add nsw i64 %582, 104
  %635 = getelementptr inbounds float, float* %3, i64 %634
  %636 = bitcast float* %635 to <8 x float>*
  %637 = load <8 x float>, <8 x float>* %636, align 1, !tbaa !12
  %638 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %585, <8 x float> %35, <8 x float> %529) #10
  %639 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %589, <8 x float> %35, <8 x float> %533) #10
  %640 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %593, <8 x float> %35, <8 x float> %537) #10
  %641 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %597, <8 x float> %35, <8 x float> %541) #10
  %642 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %601, <8 x float> %35, <8 x float> %545) #10
  %643 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %605, <8 x float> %35, <8 x float> %549) #10
  %644 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %609, <8 x float> %35, <8 x float> %553) #10
  %645 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %613, <8 x float> %35, <8 x float> %557) #10
  %646 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %617, <8 x float> %35, <8 x float> %561) #10
  %647 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %621, <8 x float> %35, <8 x float> %565) #10
  %648 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %625, <8 x float> %35, <8 x float> %569) #10
  %649 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %629, <8 x float> %35, <8 x float> %573) #10
  %650 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %633, <8 x float> %35, <8 x float> %577) #10
  %651 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %637, <8 x float> %35, <8 x float> %581) #10
  store <8 x float> %638, <8 x float>* %528, align 1, !tbaa !12
  store <8 x float> %639, <8 x float>* %532, align 1, !tbaa !12
  store <8 x float> %640, <8 x float>* %536, align 1, !tbaa !12
  store <8 x float> %641, <8 x float>* %540, align 1, !tbaa !12
  store <8 x float> %642, <8 x float>* %544, align 1, !tbaa !12
  store <8 x float> %643, <8 x float>* %548, align 1, !tbaa !12
  store <8 x float> %644, <8 x float>* %552, align 1, !tbaa !12
  store <8 x float> %645, <8 x float>* %556, align 1, !tbaa !12
  store <8 x float> %646, <8 x float>* %560, align 1, !tbaa !12
  store <8 x float> %647, <8 x float>* %564, align 1, !tbaa !12
  store <8 x float> %648, <8 x float>* %568, align 1, !tbaa !12
  store <8 x float> %649, <8 x float>* %572, align 1, !tbaa !12
  store <8 x float> %650, <8 x float>* %576, align 1, !tbaa !12
  store <8 x float> %651, <8 x float>* %580, align 1, !tbaa !12
  %652 = add nuw nsw i64 %469, 112
  %653 = icmp ult i64 %652, %274
  br i1 %653, label %468, label %461

654:                                              ; preds = %660
  br i1 %463, label %655, label %1053

655:                                              ; preds = %654
  %656 = trunc i64 %41 to i32
  %657 = mul nsw i32 %462, %656
  %658 = sext i32 %657 to i64
  %659 = zext i32 %462 to i64
  br label %867

660:                                              ; preds = %464, %660
  %661 = phi i64 [ 0, %464 ], [ %859, %660 ]
  %662 = getelementptr inbounds float, float* %5, i64 %661
  %663 = getelementptr inbounds float, float* %662, i64 8
  %664 = bitcast float* %663 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %664, i32 0, i32 1, i32 1)
  %665 = getelementptr inbounds float, float* %3, i64 %661
  %666 = getelementptr inbounds float, float* %665, i64 8
  %667 = bitcast float* %666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %667, i32 0, i32 1, i32 1)
  %668 = getelementptr inbounds float, float* %662, i64 16
  %669 = bitcast float* %668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %669, i32 0, i32 1, i32 1)
  %670 = getelementptr inbounds float, float* %665, i64 16
  %671 = bitcast float* %670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %671, i32 0, i32 1, i32 1)
  %672 = getelementptr inbounds float, float* %662, i64 24
  %673 = bitcast float* %672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %673, i32 0, i32 1, i32 1)
  %674 = getelementptr inbounds float, float* %665, i64 24
  %675 = bitcast float* %674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %675, i32 0, i32 1, i32 1)
  %676 = getelementptr inbounds float, float* %662, i64 32
  %677 = bitcast float* %676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %677, i32 0, i32 1, i32 1)
  %678 = getelementptr inbounds float, float* %665, i64 32
  %679 = bitcast float* %678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %679, i32 0, i32 1, i32 1)
  %680 = getelementptr inbounds float, float* %662, i64 40
  %681 = bitcast float* %680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %681, i32 0, i32 1, i32 1)
  %682 = getelementptr inbounds float, float* %665, i64 40
  %683 = bitcast float* %682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %683, i32 0, i32 1, i32 1)
  %684 = getelementptr inbounds float, float* %662, i64 48
  %685 = bitcast float* %684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %685, i32 0, i32 1, i32 1)
  %686 = getelementptr inbounds float, float* %665, i64 48
  %687 = bitcast float* %686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %687, i32 0, i32 1, i32 1)
  %688 = getelementptr inbounds float, float* %662, i64 56
  %689 = bitcast float* %688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %689, i32 0, i32 1, i32 1)
  %690 = getelementptr inbounds float, float* %665, i64 56
  %691 = bitcast float* %690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %691, i32 0, i32 1, i32 1)
  %692 = getelementptr inbounds float, float* %662, i64 64
  %693 = bitcast float* %692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %693, i32 0, i32 1, i32 1)
  %694 = getelementptr inbounds float, float* %665, i64 64
  %695 = bitcast float* %694 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %695, i32 0, i32 1, i32 1)
  %696 = getelementptr inbounds float, float* %662, i64 72
  %697 = bitcast float* %696 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %697, i32 0, i32 1, i32 1)
  %698 = getelementptr inbounds float, float* %665, i64 72
  %699 = bitcast float* %698 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %699, i32 0, i32 1, i32 1)
  %700 = getelementptr inbounds float, float* %662, i64 80
  %701 = bitcast float* %700 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %701, i32 0, i32 1, i32 1)
  %702 = getelementptr inbounds float, float* %665, i64 80
  %703 = bitcast float* %702 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %703, i32 0, i32 1, i32 1)
  %704 = getelementptr inbounds float, float* %662, i64 88
  %705 = bitcast float* %704 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %705, i32 0, i32 1, i32 1)
  %706 = getelementptr inbounds float, float* %665, i64 88
  %707 = bitcast float* %706 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %707, i32 0, i32 1, i32 1)
  %708 = getelementptr inbounds float, float* %662, i64 96
  %709 = bitcast float* %708 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %709, i32 0, i32 1, i32 1)
  %710 = getelementptr inbounds float, float* %665, i64 96
  %711 = bitcast float* %710 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %711, i32 0, i32 1, i32 1)
  %712 = getelementptr inbounds float, float* %662, i64 104
  %713 = bitcast float* %712 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %713, i32 0, i32 1, i32 1)
  %714 = getelementptr inbounds float, float* %665, i64 104
  %715 = bitcast float* %714 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %715, i32 0, i32 1, i32 1)
  %716 = getelementptr inbounds float, float* %662, i64 112
  %717 = bitcast float* %716 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %717, i32 0, i32 1, i32 1)
  %718 = getelementptr inbounds float, float* %665, i64 112
  %719 = bitcast float* %718 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %719, i32 0, i32 1, i32 1)
  %720 = bitcast float* %662 to <8 x float>*
  %721 = load <8 x float>, <8 x float>* %720, align 1, !tbaa !12
  %722 = or i64 %661, 8
  %723 = getelementptr inbounds float, float* %5, i64 %722
  %724 = bitcast float* %723 to <8 x float>*
  %725 = load <8 x float>, <8 x float>* %724, align 1, !tbaa !12
  %726 = add nuw nsw i64 %661, 16
  %727 = getelementptr inbounds float, float* %5, i64 %726
  %728 = bitcast float* %727 to <8 x float>*
  %729 = load <8 x float>, <8 x float>* %728, align 1, !tbaa !12
  %730 = add nuw nsw i64 %661, 24
  %731 = getelementptr inbounds float, float* %5, i64 %730
  %732 = bitcast float* %731 to <8 x float>*
  %733 = load <8 x float>, <8 x float>* %732, align 1, !tbaa !12
  %734 = add nuw nsw i64 %661, 32
  %735 = getelementptr inbounds float, float* %5, i64 %734
  %736 = bitcast float* %735 to <8 x float>*
  %737 = load <8 x float>, <8 x float>* %736, align 1, !tbaa !12
  %738 = add nuw nsw i64 %661, 40
  %739 = getelementptr inbounds float, float* %5, i64 %738
  %740 = bitcast float* %739 to <8 x float>*
  %741 = load <8 x float>, <8 x float>* %740, align 1, !tbaa !12
  %742 = add nuw nsw i64 %661, 48
  %743 = getelementptr inbounds float, float* %5, i64 %742
  %744 = bitcast float* %743 to <8 x float>*
  %745 = load <8 x float>, <8 x float>* %744, align 1, !tbaa !12
  %746 = add nuw nsw i64 %661, 56
  %747 = getelementptr inbounds float, float* %5, i64 %746
  %748 = bitcast float* %747 to <8 x float>*
  %749 = load <8 x float>, <8 x float>* %748, align 1, !tbaa !12
  %750 = add nuw nsw i64 %661, 64
  %751 = getelementptr inbounds float, float* %5, i64 %750
  %752 = bitcast float* %751 to <8 x float>*
  %753 = load <8 x float>, <8 x float>* %752, align 1, !tbaa !12
  %754 = add nuw nsw i64 %661, 72
  %755 = getelementptr inbounds float, float* %5, i64 %754
  %756 = bitcast float* %755 to <8 x float>*
  %757 = load <8 x float>, <8 x float>* %756, align 1, !tbaa !12
  %758 = add nuw nsw i64 %661, 80
  %759 = getelementptr inbounds float, float* %5, i64 %758
  %760 = bitcast float* %759 to <8 x float>*
  %761 = load <8 x float>, <8 x float>* %760, align 1, !tbaa !12
  %762 = add nuw nsw i64 %661, 88
  %763 = getelementptr inbounds float, float* %5, i64 %762
  %764 = bitcast float* %763 to <8 x float>*
  %765 = load <8 x float>, <8 x float>* %764, align 1, !tbaa !12
  %766 = add nuw nsw i64 %661, 96
  %767 = getelementptr inbounds float, float* %5, i64 %766
  %768 = bitcast float* %767 to <8 x float>*
  %769 = load <8 x float>, <8 x float>* %768, align 1, !tbaa !12
  %770 = add nuw nsw i64 %661, 104
  %771 = getelementptr inbounds float, float* %5, i64 %770
  %772 = bitcast float* %771 to <8 x float>*
  %773 = load <8 x float>, <8 x float>* %772, align 1, !tbaa !12
  %774 = trunc i64 %661 to i32
  %775 = add nsw i32 %467, %774
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds float, float* %3, i64 %776
  %778 = bitcast float* %777 to <8 x float>*
  %779 = load <8 x float>, <8 x float>* %778, align 1, !tbaa !12
  %780 = add nsw i32 %775, 8
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds float, float* %3, i64 %781
  %783 = bitcast float* %782 to <8 x float>*
  %784 = load <8 x float>, <8 x float>* %783, align 1, !tbaa !12
  %785 = add nsw i32 %775, 16
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds float, float* %3, i64 %786
  %788 = bitcast float* %787 to <8 x float>*
  %789 = load <8 x float>, <8 x float>* %788, align 1, !tbaa !12
  %790 = add nsw i32 %775, 24
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds float, float* %3, i64 %791
  %793 = bitcast float* %792 to <8 x float>*
  %794 = load <8 x float>, <8 x float>* %793, align 1, !tbaa !12
  %795 = add nsw i32 %775, 32
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds float, float* %3, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %799 = load <8 x float>, <8 x float>* %798, align 1, !tbaa !12
  %800 = add nsw i32 %775, 40
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds float, float* %3, i64 %801
  %803 = bitcast float* %802 to <8 x float>*
  %804 = load <8 x float>, <8 x float>* %803, align 1, !tbaa !12
  %805 = add nsw i32 %775, 48
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds float, float* %3, i64 %806
  %808 = bitcast float* %807 to <8 x float>*
  %809 = load <8 x float>, <8 x float>* %808, align 1, !tbaa !12
  %810 = add nsw i32 %775, 56
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds float, float* %3, i64 %811
  %813 = bitcast float* %812 to <8 x float>*
  %814 = load <8 x float>, <8 x float>* %813, align 1, !tbaa !12
  %815 = add nsw i32 %775, 64
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds float, float* %3, i64 %816
  %818 = bitcast float* %817 to <8 x float>*
  %819 = load <8 x float>, <8 x float>* %818, align 1, !tbaa !12
  %820 = add nsw i32 %775, 72
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds float, float* %3, i64 %821
  %823 = bitcast float* %822 to <8 x float>*
  %824 = load <8 x float>, <8 x float>* %823, align 1, !tbaa !12
  %825 = add nsw i32 %775, 80
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds float, float* %3, i64 %826
  %828 = bitcast float* %827 to <8 x float>*
  %829 = load <8 x float>, <8 x float>* %828, align 1, !tbaa !12
  %830 = add nsw i32 %775, 88
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds float, float* %3, i64 %831
  %833 = bitcast float* %832 to <8 x float>*
  %834 = load <8 x float>, <8 x float>* %833, align 1, !tbaa !12
  %835 = add nsw i32 %775, 96
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds float, float* %3, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nsw i32 %775, 104
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds float, float* %3, i64 %841
  %843 = bitcast float* %842 to <8 x float>*
  %844 = load <8 x float>, <8 x float>* %843, align 1, !tbaa !12
  %845 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %779, <8 x float> %40, <8 x float> %721) #10
  %846 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %784, <8 x float> %40, <8 x float> %725) #10
  %847 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %789, <8 x float> %40, <8 x float> %729) #10
  %848 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %794, <8 x float> %40, <8 x float> %733) #10
  %849 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %799, <8 x float> %40, <8 x float> %737) #10
  %850 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %804, <8 x float> %40, <8 x float> %741) #10
  %851 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %809, <8 x float> %40, <8 x float> %745) #10
  %852 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %814, <8 x float> %40, <8 x float> %749) #10
  %853 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %819, <8 x float> %40, <8 x float> %753) #10
  %854 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %824, <8 x float> %40, <8 x float> %757) #10
  %855 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %829, <8 x float> %40, <8 x float> %761) #10
  %856 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %834, <8 x float> %40, <8 x float> %765) #10
  %857 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %839, <8 x float> %40, <8 x float> %769) #10
  %858 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %844, <8 x float> %40, <8 x float> %773) #10
  store <8 x float> %845, <8 x float>* %720, align 1, !tbaa !12
  store <8 x float> %846, <8 x float>* %724, align 1, !tbaa !12
  store <8 x float> %847, <8 x float>* %728, align 1, !tbaa !12
  store <8 x float> %848, <8 x float>* %732, align 1, !tbaa !12
  store <8 x float> %849, <8 x float>* %736, align 1, !tbaa !12
  store <8 x float> %850, <8 x float>* %740, align 1, !tbaa !12
  store <8 x float> %851, <8 x float>* %744, align 1, !tbaa !12
  store <8 x float> %852, <8 x float>* %748, align 1, !tbaa !12
  store <8 x float> %853, <8 x float>* %752, align 1, !tbaa !12
  store <8 x float> %854, <8 x float>* %756, align 1, !tbaa !12
  store <8 x float> %855, <8 x float>* %760, align 1, !tbaa !12
  store <8 x float> %856, <8 x float>* %764, align 1, !tbaa !12
  store <8 x float> %857, <8 x float>* %768, align 1, !tbaa !12
  store <8 x float> %858, <8 x float>* %772, align 1, !tbaa !12
  %859 = add nuw nsw i64 %661, 112
  %860 = icmp ult i64 %859, %465
  br i1 %860, label %660, label %654

861:                                              ; preds = %867
  br i1 %463, label %862, label %1053

862:                                              ; preds = %861
  %863 = trunc i64 %46 to i32
  %864 = mul nsw i32 %462, %863
  %865 = sext i32 %864 to i64
  %866 = zext i32 %462 to i64
  br label %1060

867:                                              ; preds = %655, %867
  %868 = phi i64 [ 0, %655 ], [ %1051, %867 ]
  %869 = getelementptr inbounds float, float* %5, i64 %868
  %870 = getelementptr inbounds float, float* %869, i64 8
  %871 = bitcast float* %870 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %871, i32 0, i32 1, i32 1)
  %872 = getelementptr inbounds float, float* %3, i64 %868
  %873 = getelementptr inbounds float, float* %872, i64 8
  %874 = bitcast float* %873 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %874, i32 0, i32 1, i32 1)
  %875 = getelementptr inbounds float, float* %869, i64 16
  %876 = bitcast float* %875 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %876, i32 0, i32 1, i32 1)
  %877 = getelementptr inbounds float, float* %872, i64 16
  %878 = bitcast float* %877 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %878, i32 0, i32 1, i32 1)
  %879 = getelementptr inbounds float, float* %869, i64 24
  %880 = bitcast float* %879 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %880, i32 0, i32 1, i32 1)
  %881 = getelementptr inbounds float, float* %872, i64 24
  %882 = bitcast float* %881 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %882, i32 0, i32 1, i32 1)
  %883 = getelementptr inbounds float, float* %869, i64 32
  %884 = bitcast float* %883 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %884, i32 0, i32 1, i32 1)
  %885 = getelementptr inbounds float, float* %872, i64 32
  %886 = bitcast float* %885 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %886, i32 0, i32 1, i32 1)
  %887 = getelementptr inbounds float, float* %869, i64 40
  %888 = bitcast float* %887 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %888, i32 0, i32 1, i32 1)
  %889 = getelementptr inbounds float, float* %872, i64 40
  %890 = bitcast float* %889 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %890, i32 0, i32 1, i32 1)
  %891 = getelementptr inbounds float, float* %869, i64 48
  %892 = bitcast float* %891 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %892, i32 0, i32 1, i32 1)
  %893 = getelementptr inbounds float, float* %872, i64 48
  %894 = bitcast float* %893 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %894, i32 0, i32 1, i32 1)
  %895 = getelementptr inbounds float, float* %869, i64 56
  %896 = bitcast float* %895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %896, i32 0, i32 1, i32 1)
  %897 = getelementptr inbounds float, float* %872, i64 56
  %898 = bitcast float* %897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %898, i32 0, i32 1, i32 1)
  %899 = getelementptr inbounds float, float* %869, i64 64
  %900 = bitcast float* %899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %900, i32 0, i32 1, i32 1)
  %901 = getelementptr inbounds float, float* %872, i64 64
  %902 = bitcast float* %901 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %902, i32 0, i32 1, i32 1)
  %903 = getelementptr inbounds float, float* %869, i64 72
  %904 = bitcast float* %903 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %904, i32 0, i32 1, i32 1)
  %905 = getelementptr inbounds float, float* %872, i64 72
  %906 = bitcast float* %905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %906, i32 0, i32 1, i32 1)
  %907 = getelementptr inbounds float, float* %869, i64 80
  %908 = bitcast float* %907 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %908, i32 0, i32 1, i32 1)
  %909 = getelementptr inbounds float, float* %872, i64 80
  %910 = bitcast float* %909 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %910, i32 0, i32 1, i32 1)
  %911 = getelementptr inbounds float, float* %869, i64 88
  %912 = bitcast float* %911 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %912, i32 0, i32 1, i32 1)
  %913 = getelementptr inbounds float, float* %872, i64 88
  %914 = bitcast float* %913 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %914, i32 0, i32 1, i32 1)
  %915 = getelementptr inbounds float, float* %869, i64 96
  %916 = bitcast float* %915 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %916, i32 0, i32 1, i32 1)
  %917 = getelementptr inbounds float, float* %872, i64 96
  %918 = bitcast float* %917 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %918, i32 0, i32 1, i32 1)
  %919 = getelementptr inbounds float, float* %869, i64 104
  %920 = bitcast float* %919 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %920, i32 0, i32 1, i32 1)
  %921 = getelementptr inbounds float, float* %872, i64 104
  %922 = bitcast float* %921 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %922, i32 0, i32 1, i32 1)
  %923 = getelementptr inbounds float, float* %869, i64 112
  %924 = bitcast float* %923 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %924, i32 0, i32 1, i32 1)
  %925 = getelementptr inbounds float, float* %872, i64 112
  %926 = bitcast float* %925 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %926, i32 0, i32 1, i32 1)
  %927 = bitcast float* %869 to <8 x float>*
  %928 = load <8 x float>, <8 x float>* %927, align 1, !tbaa !12
  %929 = or i64 %868, 8
  %930 = getelementptr inbounds float, float* %5, i64 %929
  %931 = bitcast float* %930 to <8 x float>*
  %932 = load <8 x float>, <8 x float>* %931, align 1, !tbaa !12
  %933 = add nuw nsw i64 %868, 16
  %934 = getelementptr inbounds float, float* %5, i64 %933
  %935 = bitcast float* %934 to <8 x float>*
  %936 = load <8 x float>, <8 x float>* %935, align 1, !tbaa !12
  %937 = add nuw nsw i64 %868, 24
  %938 = getelementptr inbounds float, float* %5, i64 %937
  %939 = bitcast float* %938 to <8 x float>*
  %940 = load <8 x float>, <8 x float>* %939, align 1, !tbaa !12
  %941 = add nuw nsw i64 %868, 32
  %942 = getelementptr inbounds float, float* %5, i64 %941
  %943 = bitcast float* %942 to <8 x float>*
  %944 = load <8 x float>, <8 x float>* %943, align 1, !tbaa !12
  %945 = add nuw nsw i64 %868, 40
  %946 = getelementptr inbounds float, float* %5, i64 %945
  %947 = bitcast float* %946 to <8 x float>*
  %948 = load <8 x float>, <8 x float>* %947, align 1, !tbaa !12
  %949 = add nuw nsw i64 %868, 48
  %950 = getelementptr inbounds float, float* %5, i64 %949
  %951 = bitcast float* %950 to <8 x float>*
  %952 = load <8 x float>, <8 x float>* %951, align 1, !tbaa !12
  %953 = add nuw nsw i64 %868, 56
  %954 = getelementptr inbounds float, float* %5, i64 %953
  %955 = bitcast float* %954 to <8 x float>*
  %956 = load <8 x float>, <8 x float>* %955, align 1, !tbaa !12
  %957 = add nuw nsw i64 %868, 64
  %958 = getelementptr inbounds float, float* %5, i64 %957
  %959 = bitcast float* %958 to <8 x float>*
  %960 = load <8 x float>, <8 x float>* %959, align 1, !tbaa !12
  %961 = add nuw nsw i64 %868, 72
  %962 = getelementptr inbounds float, float* %5, i64 %961
  %963 = bitcast float* %962 to <8 x float>*
  %964 = load <8 x float>, <8 x float>* %963, align 1, !tbaa !12
  %965 = add nuw nsw i64 %868, 80
  %966 = getelementptr inbounds float, float* %5, i64 %965
  %967 = bitcast float* %966 to <8 x float>*
  %968 = load <8 x float>, <8 x float>* %967, align 1, !tbaa !12
  %969 = add nuw nsw i64 %868, 88
  %970 = getelementptr inbounds float, float* %5, i64 %969
  %971 = bitcast float* %970 to <8 x float>*
  %972 = load <8 x float>, <8 x float>* %971, align 1, !tbaa !12
  %973 = add nuw nsw i64 %868, 96
  %974 = getelementptr inbounds float, float* %5, i64 %973
  %975 = bitcast float* %974 to <8 x float>*
  %976 = load <8 x float>, <8 x float>* %975, align 1, !tbaa !12
  %977 = add nuw nsw i64 %868, 104
  %978 = getelementptr inbounds float, float* %5, i64 %977
  %979 = bitcast float* %978 to <8 x float>*
  %980 = load <8 x float>, <8 x float>* %979, align 1, !tbaa !12
  %981 = add nsw i64 %868, %658
  %982 = getelementptr inbounds float, float* %3, i64 %981
  %983 = bitcast float* %982 to <8 x float>*
  %984 = load <8 x float>, <8 x float>* %983, align 1, !tbaa !12
  %985 = add nsw i64 %981, 8
  %986 = getelementptr inbounds float, float* %3, i64 %985
  %987 = bitcast float* %986 to <8 x float>*
  %988 = load <8 x float>, <8 x float>* %987, align 1, !tbaa !12
  %989 = add nsw i64 %981, 16
  %990 = getelementptr inbounds float, float* %3, i64 %989
  %991 = bitcast float* %990 to <8 x float>*
  %992 = load <8 x float>, <8 x float>* %991, align 1, !tbaa !12
  %993 = add nsw i64 %981, 24
  %994 = getelementptr inbounds float, float* %3, i64 %993
  %995 = bitcast float* %994 to <8 x float>*
  %996 = load <8 x float>, <8 x float>* %995, align 1, !tbaa !12
  %997 = add nsw i64 %981, 32
  %998 = getelementptr inbounds float, float* %3, i64 %997
  %999 = bitcast float* %998 to <8 x float>*
  %1000 = load <8 x float>, <8 x float>* %999, align 1, !tbaa !12
  %1001 = add nsw i64 %981, 40
  %1002 = getelementptr inbounds float, float* %3, i64 %1001
  %1003 = bitcast float* %1002 to <8 x float>*
  %1004 = load <8 x float>, <8 x float>* %1003, align 1, !tbaa !12
  %1005 = add nsw i64 %981, 48
  %1006 = getelementptr inbounds float, float* %3, i64 %1005
  %1007 = bitcast float* %1006 to <8 x float>*
  %1008 = load <8 x float>, <8 x float>* %1007, align 1, !tbaa !12
  %1009 = add nsw i64 %981, 56
  %1010 = getelementptr inbounds float, float* %3, i64 %1009
  %1011 = bitcast float* %1010 to <8 x float>*
  %1012 = load <8 x float>, <8 x float>* %1011, align 1, !tbaa !12
  %1013 = add nsw i64 %981, 64
  %1014 = getelementptr inbounds float, float* %3, i64 %1013
  %1015 = bitcast float* %1014 to <8 x float>*
  %1016 = load <8 x float>, <8 x float>* %1015, align 1, !tbaa !12
  %1017 = add nsw i64 %981, 72
  %1018 = getelementptr inbounds float, float* %3, i64 %1017
  %1019 = bitcast float* %1018 to <8 x float>*
  %1020 = load <8 x float>, <8 x float>* %1019, align 1, !tbaa !12
  %1021 = add nsw i64 %981, 80
  %1022 = getelementptr inbounds float, float* %3, i64 %1021
  %1023 = bitcast float* %1022 to <8 x float>*
  %1024 = load <8 x float>, <8 x float>* %1023, align 1, !tbaa !12
  %1025 = add nsw i64 %981, 88
  %1026 = getelementptr inbounds float, float* %3, i64 %1025
  %1027 = bitcast float* %1026 to <8 x float>*
  %1028 = load <8 x float>, <8 x float>* %1027, align 1, !tbaa !12
  %1029 = add nsw i64 %981, 96
  %1030 = getelementptr inbounds float, float* %3, i64 %1029
  %1031 = bitcast float* %1030 to <8 x float>*
  %1032 = load <8 x float>, <8 x float>* %1031, align 1, !tbaa !12
  %1033 = add nsw i64 %981, 104
  %1034 = getelementptr inbounds float, float* %3, i64 %1033
  %1035 = bitcast float* %1034 to <8 x float>*
  %1036 = load <8 x float>, <8 x float>* %1035, align 1, !tbaa !12
  %1037 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %984, <8 x float> %45, <8 x float> %928) #10
  %1038 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %988, <8 x float> %45, <8 x float> %932) #10
  %1039 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %992, <8 x float> %45, <8 x float> %936) #10
  %1040 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %996, <8 x float> %45, <8 x float> %940) #10
  %1041 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1000, <8 x float> %45, <8 x float> %944) #10
  %1042 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1004, <8 x float> %45, <8 x float> %948) #10
  %1043 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1008, <8 x float> %45, <8 x float> %952) #10
  %1044 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1012, <8 x float> %45, <8 x float> %956) #10
  %1045 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1016, <8 x float> %45, <8 x float> %960) #10
  %1046 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1020, <8 x float> %45, <8 x float> %964) #10
  %1047 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1024, <8 x float> %45, <8 x float> %968) #10
  %1048 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1028, <8 x float> %45, <8 x float> %972) #10
  %1049 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1032, <8 x float> %45, <8 x float> %976) #10
  %1050 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1036, <8 x float> %45, <8 x float> %980) #10
  store <8 x float> %1037, <8 x float>* %927, align 1, !tbaa !12
  store <8 x float> %1038, <8 x float>* %931, align 1, !tbaa !12
  store <8 x float> %1039, <8 x float>* %935, align 1, !tbaa !12
  store <8 x float> %1040, <8 x float>* %939, align 1, !tbaa !12
  store <8 x float> %1041, <8 x float>* %943, align 1, !tbaa !12
  store <8 x float> %1042, <8 x float>* %947, align 1, !tbaa !12
  store <8 x float> %1043, <8 x float>* %951, align 1, !tbaa !12
  store <8 x float> %1044, <8 x float>* %955, align 1, !tbaa !12
  store <8 x float> %1045, <8 x float>* %959, align 1, !tbaa !12
  store <8 x float> %1046, <8 x float>* %963, align 1, !tbaa !12
  store <8 x float> %1047, <8 x float>* %967, align 1, !tbaa !12
  store <8 x float> %1048, <8 x float>* %971, align 1, !tbaa !12
  store <8 x float> %1049, <8 x float>* %975, align 1, !tbaa !12
  store <8 x float> %1050, <8 x float>* %979, align 1, !tbaa !12
  %1051 = add nuw nsw i64 %868, 112
  %1052 = icmp ult i64 %1051, %659
  br i1 %1052, label %867, label %861

1053:                                             ; preds = %1060, %654, %861
  %1054 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1055 = icmp sgt i32 %1054, 0
  br i1 %1055, label %1056, label %1246

1056:                                             ; preds = %1053
  %1057 = zext i32 %1054 to i64
  %1058 = trunc i64 %51 to i32
  %1059 = mul nsw i32 %1054, %1058
  br label %1251

1060:                                             ; preds = %862, %1060
  %1061 = phi i64 [ 0, %862 ], [ %1244, %1060 ]
  %1062 = getelementptr inbounds float, float* %5, i64 %1061
  %1063 = getelementptr inbounds float, float* %1062, i64 8
  %1064 = bitcast float* %1063 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1064, i32 0, i32 1, i32 1)
  %1065 = getelementptr inbounds float, float* %3, i64 %1061
  %1066 = getelementptr inbounds float, float* %1065, i64 8
  %1067 = bitcast float* %1066 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1067, i32 0, i32 1, i32 1)
  %1068 = getelementptr inbounds float, float* %1062, i64 16
  %1069 = bitcast float* %1068 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1069, i32 0, i32 1, i32 1)
  %1070 = getelementptr inbounds float, float* %1065, i64 16
  %1071 = bitcast float* %1070 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1071, i32 0, i32 1, i32 1)
  %1072 = getelementptr inbounds float, float* %1062, i64 24
  %1073 = bitcast float* %1072 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1073, i32 0, i32 1, i32 1)
  %1074 = getelementptr inbounds float, float* %1065, i64 24
  %1075 = bitcast float* %1074 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1075, i32 0, i32 1, i32 1)
  %1076 = getelementptr inbounds float, float* %1062, i64 32
  %1077 = bitcast float* %1076 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1077, i32 0, i32 1, i32 1)
  %1078 = getelementptr inbounds float, float* %1065, i64 32
  %1079 = bitcast float* %1078 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1079, i32 0, i32 1, i32 1)
  %1080 = getelementptr inbounds float, float* %1062, i64 40
  %1081 = bitcast float* %1080 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1081, i32 0, i32 1, i32 1)
  %1082 = getelementptr inbounds float, float* %1065, i64 40
  %1083 = bitcast float* %1082 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1083, i32 0, i32 1, i32 1)
  %1084 = getelementptr inbounds float, float* %1062, i64 48
  %1085 = bitcast float* %1084 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1085, i32 0, i32 1, i32 1)
  %1086 = getelementptr inbounds float, float* %1065, i64 48
  %1087 = bitcast float* %1086 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1087, i32 0, i32 1, i32 1)
  %1088 = getelementptr inbounds float, float* %1062, i64 56
  %1089 = bitcast float* %1088 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1089, i32 0, i32 1, i32 1)
  %1090 = getelementptr inbounds float, float* %1065, i64 56
  %1091 = bitcast float* %1090 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1091, i32 0, i32 1, i32 1)
  %1092 = getelementptr inbounds float, float* %1062, i64 64
  %1093 = bitcast float* %1092 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1093, i32 0, i32 1, i32 1)
  %1094 = getelementptr inbounds float, float* %1065, i64 64
  %1095 = bitcast float* %1094 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1095, i32 0, i32 1, i32 1)
  %1096 = getelementptr inbounds float, float* %1062, i64 72
  %1097 = bitcast float* %1096 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1097, i32 0, i32 1, i32 1)
  %1098 = getelementptr inbounds float, float* %1065, i64 72
  %1099 = bitcast float* %1098 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1099, i32 0, i32 1, i32 1)
  %1100 = getelementptr inbounds float, float* %1062, i64 80
  %1101 = bitcast float* %1100 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1101, i32 0, i32 1, i32 1)
  %1102 = getelementptr inbounds float, float* %1065, i64 80
  %1103 = bitcast float* %1102 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1103, i32 0, i32 1, i32 1)
  %1104 = getelementptr inbounds float, float* %1062, i64 88
  %1105 = bitcast float* %1104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1105, i32 0, i32 1, i32 1)
  %1106 = getelementptr inbounds float, float* %1065, i64 88
  %1107 = bitcast float* %1106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1107, i32 0, i32 1, i32 1)
  %1108 = getelementptr inbounds float, float* %1062, i64 96
  %1109 = bitcast float* %1108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1109, i32 0, i32 1, i32 1)
  %1110 = getelementptr inbounds float, float* %1065, i64 96
  %1111 = bitcast float* %1110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1111, i32 0, i32 1, i32 1)
  %1112 = getelementptr inbounds float, float* %1062, i64 104
  %1113 = bitcast float* %1112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1113, i32 0, i32 1, i32 1)
  %1114 = getelementptr inbounds float, float* %1065, i64 104
  %1115 = bitcast float* %1114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1115, i32 0, i32 1, i32 1)
  %1116 = getelementptr inbounds float, float* %1062, i64 112
  %1117 = bitcast float* %1116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1117, i32 0, i32 1, i32 1)
  %1118 = getelementptr inbounds float, float* %1065, i64 112
  %1119 = bitcast float* %1118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1119, i32 0, i32 1, i32 1)
  %1120 = bitcast float* %1062 to <8 x float>*
  %1121 = load <8 x float>, <8 x float>* %1120, align 1, !tbaa !12
  %1122 = or i64 %1061, 8
  %1123 = getelementptr inbounds float, float* %5, i64 %1122
  %1124 = bitcast float* %1123 to <8 x float>*
  %1125 = load <8 x float>, <8 x float>* %1124, align 1, !tbaa !12
  %1126 = add nuw nsw i64 %1061, 16
  %1127 = getelementptr inbounds float, float* %5, i64 %1126
  %1128 = bitcast float* %1127 to <8 x float>*
  %1129 = load <8 x float>, <8 x float>* %1128, align 1, !tbaa !12
  %1130 = add nuw nsw i64 %1061, 24
  %1131 = getelementptr inbounds float, float* %5, i64 %1130
  %1132 = bitcast float* %1131 to <8 x float>*
  %1133 = load <8 x float>, <8 x float>* %1132, align 1, !tbaa !12
  %1134 = add nuw nsw i64 %1061, 32
  %1135 = getelementptr inbounds float, float* %5, i64 %1134
  %1136 = bitcast float* %1135 to <8 x float>*
  %1137 = load <8 x float>, <8 x float>* %1136, align 1, !tbaa !12
  %1138 = add nuw nsw i64 %1061, 40
  %1139 = getelementptr inbounds float, float* %5, i64 %1138
  %1140 = bitcast float* %1139 to <8 x float>*
  %1141 = load <8 x float>, <8 x float>* %1140, align 1, !tbaa !12
  %1142 = add nuw nsw i64 %1061, 48
  %1143 = getelementptr inbounds float, float* %5, i64 %1142
  %1144 = bitcast float* %1143 to <8 x float>*
  %1145 = load <8 x float>, <8 x float>* %1144, align 1, !tbaa !12
  %1146 = add nuw nsw i64 %1061, 56
  %1147 = getelementptr inbounds float, float* %5, i64 %1146
  %1148 = bitcast float* %1147 to <8 x float>*
  %1149 = load <8 x float>, <8 x float>* %1148, align 1, !tbaa !12
  %1150 = add nuw nsw i64 %1061, 64
  %1151 = getelementptr inbounds float, float* %5, i64 %1150
  %1152 = bitcast float* %1151 to <8 x float>*
  %1153 = load <8 x float>, <8 x float>* %1152, align 1, !tbaa !12
  %1154 = add nuw nsw i64 %1061, 72
  %1155 = getelementptr inbounds float, float* %5, i64 %1154
  %1156 = bitcast float* %1155 to <8 x float>*
  %1157 = load <8 x float>, <8 x float>* %1156, align 1, !tbaa !12
  %1158 = add nuw nsw i64 %1061, 80
  %1159 = getelementptr inbounds float, float* %5, i64 %1158
  %1160 = bitcast float* %1159 to <8 x float>*
  %1161 = load <8 x float>, <8 x float>* %1160, align 1, !tbaa !12
  %1162 = add nuw nsw i64 %1061, 88
  %1163 = getelementptr inbounds float, float* %5, i64 %1162
  %1164 = bitcast float* %1163 to <8 x float>*
  %1165 = load <8 x float>, <8 x float>* %1164, align 1, !tbaa !12
  %1166 = add nuw nsw i64 %1061, 96
  %1167 = getelementptr inbounds float, float* %5, i64 %1166
  %1168 = bitcast float* %1167 to <8 x float>*
  %1169 = load <8 x float>, <8 x float>* %1168, align 1, !tbaa !12
  %1170 = add nuw nsw i64 %1061, 104
  %1171 = getelementptr inbounds float, float* %5, i64 %1170
  %1172 = bitcast float* %1171 to <8 x float>*
  %1173 = load <8 x float>, <8 x float>* %1172, align 1, !tbaa !12
  %1174 = add nsw i64 %1061, %865
  %1175 = getelementptr inbounds float, float* %3, i64 %1174
  %1176 = bitcast float* %1175 to <8 x float>*
  %1177 = load <8 x float>, <8 x float>* %1176, align 1, !tbaa !12
  %1178 = add nsw i64 %1174, 8
  %1179 = getelementptr inbounds float, float* %3, i64 %1178
  %1180 = bitcast float* %1179 to <8 x float>*
  %1181 = load <8 x float>, <8 x float>* %1180, align 1, !tbaa !12
  %1182 = add nsw i64 %1174, 16
  %1183 = getelementptr inbounds float, float* %3, i64 %1182
  %1184 = bitcast float* %1183 to <8 x float>*
  %1185 = load <8 x float>, <8 x float>* %1184, align 1, !tbaa !12
  %1186 = add nsw i64 %1174, 24
  %1187 = getelementptr inbounds float, float* %3, i64 %1186
  %1188 = bitcast float* %1187 to <8 x float>*
  %1189 = load <8 x float>, <8 x float>* %1188, align 1, !tbaa !12
  %1190 = add nsw i64 %1174, 32
  %1191 = getelementptr inbounds float, float* %3, i64 %1190
  %1192 = bitcast float* %1191 to <8 x float>*
  %1193 = load <8 x float>, <8 x float>* %1192, align 1, !tbaa !12
  %1194 = add nsw i64 %1174, 40
  %1195 = getelementptr inbounds float, float* %3, i64 %1194
  %1196 = bitcast float* %1195 to <8 x float>*
  %1197 = load <8 x float>, <8 x float>* %1196, align 1, !tbaa !12
  %1198 = add nsw i64 %1174, 48
  %1199 = getelementptr inbounds float, float* %3, i64 %1198
  %1200 = bitcast float* %1199 to <8 x float>*
  %1201 = load <8 x float>, <8 x float>* %1200, align 1, !tbaa !12
  %1202 = add nsw i64 %1174, 56
  %1203 = getelementptr inbounds float, float* %3, i64 %1202
  %1204 = bitcast float* %1203 to <8 x float>*
  %1205 = load <8 x float>, <8 x float>* %1204, align 1, !tbaa !12
  %1206 = add nsw i64 %1174, 64
  %1207 = getelementptr inbounds float, float* %3, i64 %1206
  %1208 = bitcast float* %1207 to <8 x float>*
  %1209 = load <8 x float>, <8 x float>* %1208, align 1, !tbaa !12
  %1210 = add nsw i64 %1174, 72
  %1211 = getelementptr inbounds float, float* %3, i64 %1210
  %1212 = bitcast float* %1211 to <8 x float>*
  %1213 = load <8 x float>, <8 x float>* %1212, align 1, !tbaa !12
  %1214 = add nsw i64 %1174, 80
  %1215 = getelementptr inbounds float, float* %3, i64 %1214
  %1216 = bitcast float* %1215 to <8 x float>*
  %1217 = load <8 x float>, <8 x float>* %1216, align 1, !tbaa !12
  %1218 = add nsw i64 %1174, 88
  %1219 = getelementptr inbounds float, float* %3, i64 %1218
  %1220 = bitcast float* %1219 to <8 x float>*
  %1221 = load <8 x float>, <8 x float>* %1220, align 1, !tbaa !12
  %1222 = add nsw i64 %1174, 96
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i64 %1174, 104
  %1227 = getelementptr inbounds float, float* %3, i64 %1226
  %1228 = bitcast float* %1227 to <8 x float>*
  %1229 = load <8 x float>, <8 x float>* %1228, align 1, !tbaa !12
  %1230 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1177, <8 x float> %50, <8 x float> %1121) #10
  %1231 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1181, <8 x float> %50, <8 x float> %1125) #10
  %1232 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1185, <8 x float> %50, <8 x float> %1129) #10
  %1233 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1189, <8 x float> %50, <8 x float> %1133) #10
  %1234 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1193, <8 x float> %50, <8 x float> %1137) #10
  %1235 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1197, <8 x float> %50, <8 x float> %1141) #10
  %1236 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1201, <8 x float> %50, <8 x float> %1145) #10
  %1237 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1205, <8 x float> %50, <8 x float> %1149) #10
  %1238 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1209, <8 x float> %50, <8 x float> %1153) #10
  %1239 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1213, <8 x float> %50, <8 x float> %1157) #10
  %1240 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1217, <8 x float> %50, <8 x float> %1161) #10
  %1241 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1221, <8 x float> %50, <8 x float> %1165) #10
  %1242 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %50, <8 x float> %1169) #10
  %1243 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1229, <8 x float> %50, <8 x float> %1173) #10
  store <8 x float> %1230, <8 x float>* %1120, align 1, !tbaa !12
  store <8 x float> %1231, <8 x float>* %1124, align 1, !tbaa !12
  store <8 x float> %1232, <8 x float>* %1128, align 1, !tbaa !12
  store <8 x float> %1233, <8 x float>* %1132, align 1, !tbaa !12
  store <8 x float> %1234, <8 x float>* %1136, align 1, !tbaa !12
  store <8 x float> %1235, <8 x float>* %1140, align 1, !tbaa !12
  store <8 x float> %1236, <8 x float>* %1144, align 1, !tbaa !12
  store <8 x float> %1237, <8 x float>* %1148, align 1, !tbaa !12
  store <8 x float> %1238, <8 x float>* %1152, align 1, !tbaa !12
  store <8 x float> %1239, <8 x float>* %1156, align 1, !tbaa !12
  store <8 x float> %1240, <8 x float>* %1160, align 1, !tbaa !12
  store <8 x float> %1241, <8 x float>* %1164, align 1, !tbaa !12
  store <8 x float> %1242, <8 x float>* %1168, align 1, !tbaa !12
  store <8 x float> %1243, <8 x float>* %1172, align 1, !tbaa !12
  %1244 = add nuw nsw i64 %1061, 112
  %1245 = icmp ult i64 %1244, %866
  br i1 %1245, label %1060, label %1053

1246:                                             ; preds = %1251, %20, %461, %1053
  %1247 = add nuw nsw i64 %21, 7
  %1248 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1249 = sext i32 %1248 to i64
  %1250 = icmp slt i64 %1247, %1249
  br i1 %1250, label %20, label %8

1251:                                             ; preds = %1056, %1251
  %1252 = phi i64 [ 0, %1056 ], [ %1450, %1251 ]
  %1253 = getelementptr inbounds float, float* %5, i64 %1252
  %1254 = getelementptr inbounds float, float* %1253, i64 8
  %1255 = bitcast float* %1254 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1255, i32 0, i32 1, i32 1)
  %1256 = getelementptr inbounds float, float* %3, i64 %1252
  %1257 = getelementptr inbounds float, float* %1256, i64 8
  %1258 = bitcast float* %1257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1258, i32 0, i32 1, i32 1)
  %1259 = getelementptr inbounds float, float* %1253, i64 16
  %1260 = bitcast float* %1259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1260, i32 0, i32 1, i32 1)
  %1261 = getelementptr inbounds float, float* %1256, i64 16
  %1262 = bitcast float* %1261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1262, i32 0, i32 1, i32 1)
  %1263 = getelementptr inbounds float, float* %1253, i64 24
  %1264 = bitcast float* %1263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1264, i32 0, i32 1, i32 1)
  %1265 = getelementptr inbounds float, float* %1256, i64 24
  %1266 = bitcast float* %1265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1266, i32 0, i32 1, i32 1)
  %1267 = getelementptr inbounds float, float* %1253, i64 32
  %1268 = bitcast float* %1267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1268, i32 0, i32 1, i32 1)
  %1269 = getelementptr inbounds float, float* %1256, i64 32
  %1270 = bitcast float* %1269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1270, i32 0, i32 1, i32 1)
  %1271 = getelementptr inbounds float, float* %1253, i64 40
  %1272 = bitcast float* %1271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1272, i32 0, i32 1, i32 1)
  %1273 = getelementptr inbounds float, float* %1256, i64 40
  %1274 = bitcast float* %1273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1274, i32 0, i32 1, i32 1)
  %1275 = getelementptr inbounds float, float* %1253, i64 48
  %1276 = bitcast float* %1275 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1276, i32 0, i32 1, i32 1)
  %1277 = getelementptr inbounds float, float* %1256, i64 48
  %1278 = bitcast float* %1277 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1278, i32 0, i32 1, i32 1)
  %1279 = getelementptr inbounds float, float* %1253, i64 56
  %1280 = bitcast float* %1279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1280, i32 0, i32 1, i32 1)
  %1281 = getelementptr inbounds float, float* %1256, i64 56
  %1282 = bitcast float* %1281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1282, i32 0, i32 1, i32 1)
  %1283 = getelementptr inbounds float, float* %1253, i64 64
  %1284 = bitcast float* %1283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1284, i32 0, i32 1, i32 1)
  %1285 = getelementptr inbounds float, float* %1256, i64 64
  %1286 = bitcast float* %1285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1286, i32 0, i32 1, i32 1)
  %1287 = getelementptr inbounds float, float* %1253, i64 72
  %1288 = bitcast float* %1287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1288, i32 0, i32 1, i32 1)
  %1289 = getelementptr inbounds float, float* %1256, i64 72
  %1290 = bitcast float* %1289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1290, i32 0, i32 1, i32 1)
  %1291 = getelementptr inbounds float, float* %1253, i64 80
  %1292 = bitcast float* %1291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1292, i32 0, i32 1, i32 1)
  %1293 = getelementptr inbounds float, float* %1256, i64 80
  %1294 = bitcast float* %1293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1294, i32 0, i32 1, i32 1)
  %1295 = getelementptr inbounds float, float* %1253, i64 88
  %1296 = bitcast float* %1295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1296, i32 0, i32 1, i32 1)
  %1297 = getelementptr inbounds float, float* %1256, i64 88
  %1298 = bitcast float* %1297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1298, i32 0, i32 1, i32 1)
  %1299 = getelementptr inbounds float, float* %1253, i64 96
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %1256, i64 96
  %1302 = bitcast float* %1301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1302, i32 0, i32 1, i32 1)
  %1303 = getelementptr inbounds float, float* %1253, i64 104
  %1304 = bitcast float* %1303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1304, i32 0, i32 1, i32 1)
  %1305 = getelementptr inbounds float, float* %1256, i64 104
  %1306 = bitcast float* %1305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1306, i32 0, i32 1, i32 1)
  %1307 = getelementptr inbounds float, float* %1253, i64 112
  %1308 = bitcast float* %1307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1308, i32 0, i32 1, i32 1)
  %1309 = getelementptr inbounds float, float* %1256, i64 112
  %1310 = bitcast float* %1309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1310, i32 0, i32 1, i32 1)
  %1311 = bitcast float* %1253 to <8 x float>*
  %1312 = load <8 x float>, <8 x float>* %1311, align 1, !tbaa !12
  %1313 = or i64 %1252, 8
  %1314 = getelementptr inbounds float, float* %5, i64 %1313
  %1315 = bitcast float* %1314 to <8 x float>*
  %1316 = load <8 x float>, <8 x float>* %1315, align 1, !tbaa !12
  %1317 = add nuw nsw i64 %1252, 16
  %1318 = getelementptr inbounds float, float* %5, i64 %1317
  %1319 = bitcast float* %1318 to <8 x float>*
  %1320 = load <8 x float>, <8 x float>* %1319, align 1, !tbaa !12
  %1321 = add nuw nsw i64 %1252, 24
  %1322 = getelementptr inbounds float, float* %5, i64 %1321
  %1323 = bitcast float* %1322 to <8 x float>*
  %1324 = load <8 x float>, <8 x float>* %1323, align 1, !tbaa !12
  %1325 = add nuw nsw i64 %1252, 32
  %1326 = getelementptr inbounds float, float* %5, i64 %1325
  %1327 = bitcast float* %1326 to <8 x float>*
  %1328 = load <8 x float>, <8 x float>* %1327, align 1, !tbaa !12
  %1329 = add nuw nsw i64 %1252, 40
  %1330 = getelementptr inbounds float, float* %5, i64 %1329
  %1331 = bitcast float* %1330 to <8 x float>*
  %1332 = load <8 x float>, <8 x float>* %1331, align 1, !tbaa !12
  %1333 = add nuw nsw i64 %1252, 48
  %1334 = getelementptr inbounds float, float* %5, i64 %1333
  %1335 = bitcast float* %1334 to <8 x float>*
  %1336 = load <8 x float>, <8 x float>* %1335, align 1, !tbaa !12
  %1337 = add nuw nsw i64 %1252, 56
  %1338 = getelementptr inbounds float, float* %5, i64 %1337
  %1339 = bitcast float* %1338 to <8 x float>*
  %1340 = load <8 x float>, <8 x float>* %1339, align 1, !tbaa !12
  %1341 = add nuw nsw i64 %1252, 64
  %1342 = getelementptr inbounds float, float* %5, i64 %1341
  %1343 = bitcast float* %1342 to <8 x float>*
  %1344 = load <8 x float>, <8 x float>* %1343, align 1, !tbaa !12
  %1345 = add nuw nsw i64 %1252, 72
  %1346 = getelementptr inbounds float, float* %5, i64 %1345
  %1347 = bitcast float* %1346 to <8 x float>*
  %1348 = load <8 x float>, <8 x float>* %1347, align 1, !tbaa !12
  %1349 = add nuw nsw i64 %1252, 80
  %1350 = getelementptr inbounds float, float* %5, i64 %1349
  %1351 = bitcast float* %1350 to <8 x float>*
  %1352 = load <8 x float>, <8 x float>* %1351, align 1, !tbaa !12
  %1353 = add nuw nsw i64 %1252, 88
  %1354 = getelementptr inbounds float, float* %5, i64 %1353
  %1355 = bitcast float* %1354 to <8 x float>*
  %1356 = load <8 x float>, <8 x float>* %1355, align 1, !tbaa !12
  %1357 = add nuw nsw i64 %1252, 96
  %1358 = getelementptr inbounds float, float* %5, i64 %1357
  %1359 = bitcast float* %1358 to <8 x float>*
  %1360 = load <8 x float>, <8 x float>* %1359, align 1, !tbaa !12
  %1361 = add nuw nsw i64 %1252, 104
  %1362 = getelementptr inbounds float, float* %5, i64 %1361
  %1363 = bitcast float* %1362 to <8 x float>*
  %1364 = load <8 x float>, <8 x float>* %1363, align 1, !tbaa !12
  %1365 = trunc i64 %1252 to i32
  %1366 = add nsw i32 %1059, %1365
  %1367 = sext i32 %1366 to i64
  %1368 = getelementptr inbounds float, float* %3, i64 %1367
  %1369 = bitcast float* %1368 to <8 x float>*
  %1370 = load <8 x float>, <8 x float>* %1369, align 1, !tbaa !12
  %1371 = add nsw i32 %1366, 8
  %1372 = sext i32 %1371 to i64
  %1373 = getelementptr inbounds float, float* %3, i64 %1372
  %1374 = bitcast float* %1373 to <8 x float>*
  %1375 = load <8 x float>, <8 x float>* %1374, align 1, !tbaa !12
  %1376 = add nsw i32 %1366, 16
  %1377 = sext i32 %1376 to i64
  %1378 = getelementptr inbounds float, float* %3, i64 %1377
  %1379 = bitcast float* %1378 to <8 x float>*
  %1380 = load <8 x float>, <8 x float>* %1379, align 1, !tbaa !12
  %1381 = add nsw i32 %1366, 24
  %1382 = sext i32 %1381 to i64
  %1383 = getelementptr inbounds float, float* %3, i64 %1382
  %1384 = bitcast float* %1383 to <8 x float>*
  %1385 = load <8 x float>, <8 x float>* %1384, align 1, !tbaa !12
  %1386 = add nsw i32 %1366, 32
  %1387 = sext i32 %1386 to i64
  %1388 = getelementptr inbounds float, float* %3, i64 %1387
  %1389 = bitcast float* %1388 to <8 x float>*
  %1390 = load <8 x float>, <8 x float>* %1389, align 1, !tbaa !12
  %1391 = add nsw i32 %1366, 40
  %1392 = sext i32 %1391 to i64
  %1393 = getelementptr inbounds float, float* %3, i64 %1392
  %1394 = bitcast float* %1393 to <8 x float>*
  %1395 = load <8 x float>, <8 x float>* %1394, align 1, !tbaa !12
  %1396 = add nsw i32 %1366, 48
  %1397 = sext i32 %1396 to i64
  %1398 = getelementptr inbounds float, float* %3, i64 %1397
  %1399 = bitcast float* %1398 to <8 x float>*
  %1400 = load <8 x float>, <8 x float>* %1399, align 1, !tbaa !12
  %1401 = add nsw i32 %1366, 56
  %1402 = sext i32 %1401 to i64
  %1403 = getelementptr inbounds float, float* %3, i64 %1402
  %1404 = bitcast float* %1403 to <8 x float>*
  %1405 = load <8 x float>, <8 x float>* %1404, align 1, !tbaa !12
  %1406 = add nsw i32 %1366, 64
  %1407 = sext i32 %1406 to i64
  %1408 = getelementptr inbounds float, float* %3, i64 %1407
  %1409 = bitcast float* %1408 to <8 x float>*
  %1410 = load <8 x float>, <8 x float>* %1409, align 1, !tbaa !12
  %1411 = add nsw i32 %1366, 72
  %1412 = sext i32 %1411 to i64
  %1413 = getelementptr inbounds float, float* %3, i64 %1412
  %1414 = bitcast float* %1413 to <8 x float>*
  %1415 = load <8 x float>, <8 x float>* %1414, align 1, !tbaa !12
  %1416 = add nsw i32 %1366, 80
  %1417 = sext i32 %1416 to i64
  %1418 = getelementptr inbounds float, float* %3, i64 %1417
  %1419 = bitcast float* %1418 to <8 x float>*
  %1420 = load <8 x float>, <8 x float>* %1419, align 1, !tbaa !12
  %1421 = add nsw i32 %1366, 88
  %1422 = sext i32 %1421 to i64
  %1423 = getelementptr inbounds float, float* %3, i64 %1422
  %1424 = bitcast float* %1423 to <8 x float>*
  %1425 = load <8 x float>, <8 x float>* %1424, align 1, !tbaa !12
  %1426 = add nsw i32 %1366, 96
  %1427 = sext i32 %1426 to i64
  %1428 = getelementptr inbounds float, float* %3, i64 %1427
  %1429 = bitcast float* %1428 to <8 x float>*
  %1430 = load <8 x float>, <8 x float>* %1429, align 1, !tbaa !12
  %1431 = add nsw i32 %1366, 104
  %1432 = sext i32 %1431 to i64
  %1433 = getelementptr inbounds float, float* %3, i64 %1432
  %1434 = bitcast float* %1433 to <8 x float>*
  %1435 = load <8 x float>, <8 x float>* %1434, align 1, !tbaa !12
  %1436 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1370, <8 x float> %55, <8 x float> %1312) #10
  %1437 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1375, <8 x float> %55, <8 x float> %1316) #10
  %1438 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1380, <8 x float> %55, <8 x float> %1320) #10
  %1439 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1385, <8 x float> %55, <8 x float> %1324) #10
  %1440 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1390, <8 x float> %55, <8 x float> %1328) #10
  %1441 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1395, <8 x float> %55, <8 x float> %1332) #10
  %1442 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1400, <8 x float> %55, <8 x float> %1336) #10
  %1443 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1405, <8 x float> %55, <8 x float> %1340) #10
  %1444 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1410, <8 x float> %55, <8 x float> %1344) #10
  %1445 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1415, <8 x float> %55, <8 x float> %1348) #10
  %1446 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1420, <8 x float> %55, <8 x float> %1352) #10
  %1447 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1425, <8 x float> %55, <8 x float> %1356) #10
  %1448 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1430, <8 x float> %55, <8 x float> %1360) #10
  %1449 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1435, <8 x float> %55, <8 x float> %1364) #10
  store <8 x float> %1436, <8 x float>* %1311, align 1, !tbaa !12
  store <8 x float> %1437, <8 x float>* %1315, align 1, !tbaa !12
  store <8 x float> %1438, <8 x float>* %1319, align 1, !tbaa !12
  store <8 x float> %1439, <8 x float>* %1323, align 1, !tbaa !12
  store <8 x float> %1440, <8 x float>* %1327, align 1, !tbaa !12
  store <8 x float> %1441, <8 x float>* %1331, align 1, !tbaa !12
  store <8 x float> %1442, <8 x float>* %1335, align 1, !tbaa !12
  store <8 x float> %1443, <8 x float>* %1339, align 1, !tbaa !12
  store <8 x float> %1444, <8 x float>* %1343, align 1, !tbaa !12
  store <8 x float> %1445, <8 x float>* %1347, align 1, !tbaa !12
  store <8 x float> %1446, <8 x float>* %1351, align 1, !tbaa !12
  store <8 x float> %1447, <8 x float>* %1355, align 1, !tbaa !12
  store <8 x float> %1448, <8 x float>* %1359, align 1, !tbaa !12
  store <8 x float> %1449, <8 x float>* %1363, align 1, !tbaa !12
  %1450 = add nuw nsw i64 %1252, 112
  %1451 = icmp ult i64 %1450, %1057
  br i1 %1451, label %1251, label %1246
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 203
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui14_uk7.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
