; ModuleID = 'codes/matvec_ui9_uk13.cpp'
source_filename = "codes/matvec_ui9_uk13.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN4mippL15InstructionTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [4 x i8] c"AVX\00", align 1
@_ZN4mippL19InstructionFullTypeB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@_ZN4mippL18InstructionVersionB5cxx11E = internal global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZL6BLOCKI = internal unnamed_addr global i32 256, align 4
@_ZL6BLOCKK = internal unnamed_addr global i32 256, align 4
@_ZL2vA = internal unnamed_addr global float* null, align 8
@_ZL2vB = internal unnamed_addr global float* null, align 8
@_ZL2vC = internal unnamed_addr global float* null, align 8
@.str.5 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_matvec_ui9_uk13.cpp, i8* null }]

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #4 align 2

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %1, i8* %2) local_unnamed_addr #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %0 to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !2
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8, !tbaa !7
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8, !tbaa !10
  %11 = icmp ne i8* %8, null
  %12 = icmp eq i64 %10, 0
  %13 = or i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0)) #18
  unreachable

15:                                               ; preds = %3
  %16 = bitcast %union.anon* %5 to i8*
  %17 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  store i64 %10, i64* %4, align 8, !tbaa !11
  %18 = icmp ugt i64 %10, 15
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull %0, i64* nonnull dereferenceable(8) %4, i64 0)
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  store i8* %20, i8** %21, align 8, !tbaa !7
  %22 = load i64, i64* %4, align 8, !tbaa !11
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 2, i32 0
  store i64 %22, i64* %23, align 8, !tbaa !12
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i8* [ %20, %19 ], [ %16, %15 ]
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 0, i32 0
  switch i64 %10, label %29 [
    i64 1, label %27
    i64 0, label %30
  ]

27:                                               ; preds = %24
  %28 = load i8, i8* %8, align 1, !tbaa !12
  store i8 %28, i8* %25, align 1, !tbaa !12
  br label %30

29:                                               ; preds = %24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %8, i64 %10, i1 false) #10
  br label %30

30:                                               ; preds = %24, %27, %29
  %31 = load i64, i64* %4, align 8, !tbaa !11
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i64 0, i32 1
  store i64 %31, i64* %32, align 8, !tbaa !10
  %33 = load i8*, i8** %26, align 8, !tbaa !7
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8 0, i8* %34, align 1, !tbaa !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %35 = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #10
  %36 = load i64, i64* %32, align 8, !tbaa !10
  %37 = sub i64 4611686018427387903, %36
  %38 = icmp ult i64 %37, %35
  br i1 %38, label %39, label %41

39:                                               ; preds = %30
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)) #18
          to label %40 unwind label %43

40:                                               ; preds = %39
  unreachable

41:                                               ; preds = %30
  %42 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull %0, i8* %2, i64 %35)
          to label %49 unwind label %43

43:                                               ; preds = %41, %39
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = load i8*, i8** %26, align 8, !tbaa !7
  %46 = icmp eq i8* %45, %16
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZdlPv(i8* %45) #10
  br label %48

48:                                               ; preds = %43, %47
  resume { i8*, i32 } %44

49:                                               ; preds = %41
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_Z4initv() local_unnamed_addr #6 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = srem i32 %1, 72
  %3 = sub i32 %1, %2
  store i32 %3, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %4 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %5 = srem i32 %4, 104
  %6 = sub i32 %4, %5
  store i32 %6, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  %9 = sext i32 %6 to i64
  %10 = mul i64 %8, %9
  %11 = tail call noalias i8* @valloc(i64 %10) #10
  store i8* %11, i8** bitcast (float** @_ZL2vA to i8**), align 8, !tbaa !15
  %12 = shl nsw i64 %9, 2
  %13 = tail call noalias i8* @valloc(i64 %12) #10
  store i8* %13, i8** bitcast (float** @_ZL2vB to i8**), align 8, !tbaa !15
  %14 = tail call noalias i8* @valloc(i64 %8) #10
  store i8* %14, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias i8* @valloc(i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @_Z10init_benchv() local_unnamed_addr #8 {
  %1 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %2 = icmp sgt i32 %1, 0
  %3 = load i32, i32* @_ZL6BLOCKK, align 4
  br i1 %2, label %4, label %16

4:                                                ; preds = %0
  %5 = icmp sgt i32 %3, 0
  %6 = load float*, float** @_ZL2vA, align 8
  %7 = sext i32 %3 to i64
  %8 = zext i32 %1 to i64
  %9 = zext i32 %3 to i64
  br label %10

10:                                               ; preds = %4, %21
  %11 = phi i64 [ 0, %4 ], [ %22, %21 ]
  br i1 %5, label %12, label %21

12:                                               ; preds = %10
  %13 = trunc i64 %11 to i32
  %14 = shl i32 %13, 1
  %15 = mul nsw i64 %11, %7
  br label %24

16:                                               ; preds = %21, %0
  %17 = icmp sgt i32 %3, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %16
  %19 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %20 = zext i32 %3 to i64
  br label %38

21:                                               ; preds = %24, %10
  %22 = add nuw nsw i64 %11, 1
  %23 = icmp ult i64 %22, %8
  br i1 %23, label %10, label %16, !llvm.loop !16

24:                                               ; preds = %24, %12
  %25 = phi i64 [ 0, %12 ], [ %31, %24 ]
  %26 = trunc i64 %25 to i32
  %27 = add i32 %14, %26
  %28 = sitofp i32 %27 to float
  %29 = add nsw i64 %15, %25
  %30 = getelementptr inbounds float, float* %6, i64 %29
  store float %28, float* %30, align 4, !tbaa !18
  %31 = add nuw nsw i64 %25, 1
  %32 = icmp eq i64 %31, %9
  br i1 %32, label %21, label %24, !llvm.loop !20

33:                                               ; preds = %38, %16
  br i1 %2, label %34, label %45

34:                                               ; preds = %33
  %35 = load i8*, i8** bitcast (float** @_ZL2vC to i8**), align 8, !tbaa !15
  %36 = zext i32 %1 to i64
  %37 = shl nuw nsw i64 %36, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %37, i1 false)
  br label %45

38:                                               ; preds = %18, %38
  %39 = phi i64 [ 0, %18 ], [ %43, %38 ]
  %40 = trunc i64 %39 to i32
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds float, float* %19, i64 %39
  store float %41, float* %42, align 4, !tbaa !18
  %43 = add nuw nsw i64 %39, 1
  %44 = icmp ult i64 %43, %20
  br i1 %44, label %38, label %33, !llvm.loop !21

45:                                               ; preds = %34, %33
  ret void
}

; Function Attrs: uwtable
define dso_local float @_Z5benchv() local_unnamed_addr #9 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = tail call i64 @llvm.x86.rdtsc()
  %2 = uitofp i64 %1 to double
  %3 = load float*, float** @_ZL2vA, align 8, !tbaa !15
  %4 = load float*, float** @_ZL2vB, align 8, !tbaa !15
  %5 = load float*, float** @_ZL2vC, align 8, !tbaa !15
  %6 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %1649, %0
  %9 = tail call i64 @llvm.x86.rdtsc()
  %10 = uitofp i64 %9 to double
  %11 = fsub double %10, %2
  %12 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %13 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %14 = shl i32 %13, 1
  %15 = add nsw i32 %14, -1
  %16 = mul nsw i32 %15, %12
  %17 = sitofp i32 %16 to float
  %18 = fptrunc double %11 to float
  %19 = fdiv float %17, %18
  ret float %19

20:                                               ; preds = %0, %1649
  %21 = phi i64 [ %1650, %1649 ], [ 0, %0 ]
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4, !tbaa !18
  %24 = insertelement <8 x float> undef, float %23, i32 0
  %25 = shufflevector <8 x float> %24, <8 x float> undef, <8 x i32> zeroinitializer
  %26 = add nuw nsw i64 %21, 1
  %27 = getelementptr inbounds float, float* %4, i64 %26
  %28 = load float, float* %27, align 4, !tbaa !18
  %29 = insertelement <8 x float> undef, float %28, i32 0
  %30 = shufflevector <8 x float> %29, <8 x float> undef, <8 x i32> zeroinitializer
  %31 = add nuw nsw i64 %21, 2
  %32 = getelementptr inbounds float, float* %4, i64 %31
  %33 = load float, float* %32, align 4, !tbaa !18
  %34 = insertelement <8 x float> undef, float %33, i32 0
  %35 = shufflevector <8 x float> %34, <8 x float> undef, <8 x i32> zeroinitializer
  %36 = add nuw nsw i64 %21, 3
  %37 = getelementptr inbounds float, float* %4, i64 %36
  %38 = load float, float* %37, align 4, !tbaa !18
  %39 = insertelement <8 x float> undef, float %38, i32 0
  %40 = shufflevector <8 x float> %39, <8 x float> undef, <8 x i32> zeroinitializer
  %41 = add nuw nsw i64 %21, 4
  %42 = getelementptr inbounds float, float* %4, i64 %41
  %43 = load float, float* %42, align 4, !tbaa !18
  %44 = insertelement <8 x float> undef, float %43, i32 0
  %45 = shufflevector <8 x float> %44, <8 x float> undef, <8 x i32> zeroinitializer
  %46 = add nuw nsw i64 %21, 5
  %47 = getelementptr inbounds float, float* %4, i64 %46
  %48 = load float, float* %47, align 4, !tbaa !18
  %49 = insertelement <8 x float> undef, float %48, i32 0
  %50 = shufflevector <8 x float> %49, <8 x float> undef, <8 x i32> zeroinitializer
  %51 = add nuw nsw i64 %21, 6
  %52 = getelementptr inbounds float, float* %4, i64 %51
  %53 = load float, float* %52, align 4, !tbaa !18
  %54 = insertelement <8 x float> undef, float %53, i32 0
  %55 = shufflevector <8 x float> %54, <8 x float> undef, <8 x i32> zeroinitializer
  %56 = add nuw nsw i64 %21, 7
  %57 = getelementptr inbounds float, float* %4, i64 %56
  %58 = load float, float* %57, align 4, !tbaa !18
  %59 = insertelement <8 x float> undef, float %58, i32 0
  %60 = shufflevector <8 x float> %59, <8 x float> undef, <8 x i32> zeroinitializer
  %61 = add nuw nsw i64 %21, 8
  %62 = getelementptr inbounds float, float* %4, i64 %61
  %63 = load float, float* %62, align 4, !tbaa !18
  %64 = insertelement <8 x float> undef, float %63, i32 0
  %65 = shufflevector <8 x float> %64, <8 x float> undef, <8 x i32> zeroinitializer
  %66 = add nuw nsw i64 %21, 9
  %67 = getelementptr inbounds float, float* %4, i64 %66
  %68 = load float, float* %67, align 4, !tbaa !18
  %69 = insertelement <8 x float> undef, float %68, i32 0
  %70 = shufflevector <8 x float> %69, <8 x float> undef, <8 x i32> zeroinitializer
  %71 = add nuw nsw i64 %21, 10
  %72 = getelementptr inbounds float, float* %4, i64 %71
  %73 = load float, float* %72, align 4, !tbaa !18
  %74 = insertelement <8 x float> undef, float %73, i32 0
  %75 = shufflevector <8 x float> %74, <8 x float> undef, <8 x i32> zeroinitializer
  %76 = add nuw nsw i64 %21, 11
  %77 = getelementptr inbounds float, float* %4, i64 %76
  %78 = load float, float* %77, align 4, !tbaa !18
  %79 = insertelement <8 x float> undef, float %78, i32 0
  %80 = shufflevector <8 x float> %79, <8 x float> undef, <8 x i32> zeroinitializer
  %81 = add nuw nsw i64 %21, 12
  %82 = getelementptr inbounds float, float* %4, i64 %81
  %83 = load float, float* %82, align 4, !tbaa !18
  %84 = insertelement <8 x float> undef, float %83, i32 0
  %85 = shufflevector <8 x float> %84, <8 x float> undef, <8 x i32> zeroinitializer
  %86 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %1649

88:                                               ; preds = %20
  %89 = zext i32 %86 to i64
  %90 = trunc i64 %21 to i32
  %91 = mul nsw i32 %86, %90
  br label %98

92:                                               ; preds = %98
  br i1 %87, label %93, label %483

93:                                               ; preds = %92
  %94 = trunc i64 %26 to i32
  %95 = mul nsw i32 %86, %94
  %96 = sext i32 %95 to i64
  %97 = zext i32 %86 to i64
  br label %235

98:                                               ; preds = %88, %98
  %99 = phi i64 [ 0, %88 ], [ %227, %98 ]
  %100 = getelementptr inbounds float, float* %5, i64 %99
  %101 = getelementptr inbounds float, float* %100, i64 8
  %102 = bitcast float* %101 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %102, i32 0, i32 1, i32 1)
  %103 = getelementptr inbounds float, float* %3, i64 %99
  %104 = getelementptr inbounds float, float* %103, i64 8
  %105 = bitcast float* %104 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %105, i32 0, i32 1, i32 1)
  %106 = getelementptr inbounds float, float* %100, i64 16
  %107 = bitcast float* %106 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %107, i32 0, i32 1, i32 1)
  %108 = getelementptr inbounds float, float* %103, i64 16
  %109 = bitcast float* %108 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %109, i32 0, i32 1, i32 1)
  %110 = getelementptr inbounds float, float* %100, i64 24
  %111 = bitcast float* %110 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %111, i32 0, i32 1, i32 1)
  %112 = getelementptr inbounds float, float* %103, i64 24
  %113 = bitcast float* %112 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %113, i32 0, i32 1, i32 1)
  %114 = getelementptr inbounds float, float* %100, i64 32
  %115 = bitcast float* %114 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %115, i32 0, i32 1, i32 1)
  %116 = getelementptr inbounds float, float* %103, i64 32
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %117, i32 0, i32 1, i32 1)
  %118 = getelementptr inbounds float, float* %100, i64 40
  %119 = bitcast float* %118 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %119, i32 0, i32 1, i32 1)
  %120 = getelementptr inbounds float, float* %103, i64 40
  %121 = bitcast float* %120 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %121, i32 0, i32 1, i32 1)
  %122 = getelementptr inbounds float, float* %100, i64 48
  %123 = bitcast float* %122 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %123, i32 0, i32 1, i32 1)
  %124 = getelementptr inbounds float, float* %103, i64 48
  %125 = bitcast float* %124 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %125, i32 0, i32 1, i32 1)
  %126 = getelementptr inbounds float, float* %100, i64 56
  %127 = bitcast float* %126 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %127, i32 0, i32 1, i32 1)
  %128 = getelementptr inbounds float, float* %103, i64 56
  %129 = bitcast float* %128 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %129, i32 0, i32 1, i32 1)
  %130 = getelementptr inbounds float, float* %100, i64 64
  %131 = bitcast float* %130 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %131, i32 0, i32 1, i32 1)
  %132 = getelementptr inbounds float, float* %103, i64 64
  %133 = bitcast float* %132 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %133, i32 0, i32 1, i32 1)
  %134 = getelementptr inbounds float, float* %100, i64 72
  %135 = bitcast float* %134 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %135, i32 0, i32 1, i32 1)
  %136 = getelementptr inbounds float, float* %103, i64 72
  %137 = bitcast float* %136 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %137, i32 0, i32 1, i32 1)
  %138 = bitcast float* %100 to <8 x float>*
  %139 = load <8 x float>, <8 x float>* %138, align 1, !tbaa !12
  %140 = add nuw nsw i64 %99, 8
  %141 = getelementptr inbounds float, float* %5, i64 %140
  %142 = bitcast float* %141 to <8 x float>*
  %143 = load <8 x float>, <8 x float>* %142, align 1, !tbaa !12
  %144 = add nuw nsw i64 %99, 16
  %145 = getelementptr inbounds float, float* %5, i64 %144
  %146 = bitcast float* %145 to <8 x float>*
  %147 = load <8 x float>, <8 x float>* %146, align 1, !tbaa !12
  %148 = add nuw nsw i64 %99, 24
  %149 = getelementptr inbounds float, float* %5, i64 %148
  %150 = bitcast float* %149 to <8 x float>*
  %151 = load <8 x float>, <8 x float>* %150, align 1, !tbaa !12
  %152 = add nuw nsw i64 %99, 32
  %153 = getelementptr inbounds float, float* %5, i64 %152
  %154 = bitcast float* %153 to <8 x float>*
  %155 = load <8 x float>, <8 x float>* %154, align 1, !tbaa !12
  %156 = add nuw nsw i64 %99, 40
  %157 = getelementptr inbounds float, float* %5, i64 %156
  %158 = bitcast float* %157 to <8 x float>*
  %159 = load <8 x float>, <8 x float>* %158, align 1, !tbaa !12
  %160 = add nuw nsw i64 %99, 48
  %161 = getelementptr inbounds float, float* %5, i64 %160
  %162 = bitcast float* %161 to <8 x float>*
  %163 = load <8 x float>, <8 x float>* %162, align 1, !tbaa !12
  %164 = add nuw nsw i64 %99, 56
  %165 = getelementptr inbounds float, float* %5, i64 %164
  %166 = bitcast float* %165 to <8 x float>*
  %167 = load <8 x float>, <8 x float>* %166, align 1, !tbaa !12
  %168 = add nuw nsw i64 %99, 64
  %169 = getelementptr inbounds float, float* %5, i64 %168
  %170 = bitcast float* %169 to <8 x float>*
  %171 = load <8 x float>, <8 x float>* %170, align 1, !tbaa !12
  %172 = trunc i64 %99 to i32
  %173 = add nsw i32 %91, %172
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds float, float* %3, i64 %174
  %176 = bitcast float* %175 to <8 x float>*
  %177 = load <8 x float>, <8 x float>* %176, align 1, !tbaa !12
  %178 = add nsw i32 %173, 8
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds float, float* %3, i64 %179
  %181 = bitcast float* %180 to <8 x float>*
  %182 = load <8 x float>, <8 x float>* %181, align 1, !tbaa !12
  %183 = add nsw i32 %173, 16
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds float, float* %3, i64 %184
  %186 = bitcast float* %185 to <8 x float>*
  %187 = load <8 x float>, <8 x float>* %186, align 1, !tbaa !12
  %188 = add nsw i32 %173, 24
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds float, float* %3, i64 %189
  %191 = bitcast float* %190 to <8 x float>*
  %192 = load <8 x float>, <8 x float>* %191, align 1, !tbaa !12
  %193 = add nsw i32 %173, 32
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds float, float* %3, i64 %194
  %196 = bitcast float* %195 to <8 x float>*
  %197 = load <8 x float>, <8 x float>* %196, align 1, !tbaa !12
  %198 = add nsw i32 %173, 40
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds float, float* %3, i64 %199
  %201 = bitcast float* %200 to <8 x float>*
  %202 = load <8 x float>, <8 x float>* %201, align 1, !tbaa !12
  %203 = add nsw i32 %173, 48
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %3, i64 %204
  %206 = bitcast float* %205 to <8 x float>*
  %207 = load <8 x float>, <8 x float>* %206, align 1, !tbaa !12
  %208 = add nsw i32 %173, 56
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %3, i64 %209
  %211 = bitcast float* %210 to <8 x float>*
  %212 = load <8 x float>, <8 x float>* %211, align 1, !tbaa !12
  %213 = add nsw i32 %173, 64
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %3, i64 %214
  %216 = bitcast float* %215 to <8 x float>*
  %217 = load <8 x float>, <8 x float>* %216, align 1, !tbaa !12
  %218 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %177, <8 x float> %25, <8 x float> %139) #10
  %219 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %182, <8 x float> %25, <8 x float> %143) #10
  %220 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %187, <8 x float> %25, <8 x float> %147) #10
  %221 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %192, <8 x float> %25, <8 x float> %151) #10
  %222 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %197, <8 x float> %25, <8 x float> %155) #10
  %223 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %202, <8 x float> %25, <8 x float> %159) #10
  %224 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %207, <8 x float> %25, <8 x float> %163) #10
  %225 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %212, <8 x float> %25, <8 x float> %167) #10
  %226 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %217, <8 x float> %25, <8 x float> %171) #10
  store <8 x float> %218, <8 x float>* %138, align 1, !tbaa !12
  store <8 x float> %219, <8 x float>* %142, align 1, !tbaa !12
  store <8 x float> %220, <8 x float>* %146, align 1, !tbaa !12
  store <8 x float> %221, <8 x float>* %150, align 1, !tbaa !12
  store <8 x float> %222, <8 x float>* %154, align 1, !tbaa !12
  store <8 x float> %223, <8 x float>* %158, align 1, !tbaa !12
  store <8 x float> %224, <8 x float>* %162, align 1, !tbaa !12
  store <8 x float> %225, <8 x float>* %166, align 1, !tbaa !12
  store <8 x float> %226, <8 x float>* %170, align 1, !tbaa !12
  %227 = add nuw nsw i64 %99, 72
  %228 = icmp ult i64 %227, %89
  br i1 %228, label %98, label %92

229:                                              ; preds = %235
  br i1 %87, label %230, label %483

230:                                              ; preds = %229
  %231 = trunc i64 %31 to i32
  %232 = mul nsw i32 %86, %231
  %233 = sext i32 %232 to i64
  %234 = zext i32 %86 to i64
  br label %362

235:                                              ; preds = %93, %235
  %236 = phi i64 [ 0, %93 ], [ %354, %235 ]
  %237 = getelementptr inbounds float, float* %5, i64 %236
  %238 = getelementptr inbounds float, float* %237, i64 8
  %239 = bitcast float* %238 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %239, i32 0, i32 1, i32 1)
  %240 = getelementptr inbounds float, float* %3, i64 %236
  %241 = getelementptr inbounds float, float* %240, i64 8
  %242 = bitcast float* %241 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %242, i32 0, i32 1, i32 1)
  %243 = getelementptr inbounds float, float* %237, i64 16
  %244 = bitcast float* %243 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %244, i32 0, i32 1, i32 1)
  %245 = getelementptr inbounds float, float* %240, i64 16
  %246 = bitcast float* %245 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %246, i32 0, i32 1, i32 1)
  %247 = getelementptr inbounds float, float* %237, i64 24
  %248 = bitcast float* %247 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %248, i32 0, i32 1, i32 1)
  %249 = getelementptr inbounds float, float* %240, i64 24
  %250 = bitcast float* %249 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %250, i32 0, i32 1, i32 1)
  %251 = getelementptr inbounds float, float* %237, i64 32
  %252 = bitcast float* %251 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %252, i32 0, i32 1, i32 1)
  %253 = getelementptr inbounds float, float* %240, i64 32
  %254 = bitcast float* %253 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %254, i32 0, i32 1, i32 1)
  %255 = getelementptr inbounds float, float* %237, i64 40
  %256 = bitcast float* %255 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %256, i32 0, i32 1, i32 1)
  %257 = getelementptr inbounds float, float* %240, i64 40
  %258 = bitcast float* %257 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %258, i32 0, i32 1, i32 1)
  %259 = getelementptr inbounds float, float* %237, i64 48
  %260 = bitcast float* %259 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %260, i32 0, i32 1, i32 1)
  %261 = getelementptr inbounds float, float* %240, i64 48
  %262 = bitcast float* %261 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %262, i32 0, i32 1, i32 1)
  %263 = getelementptr inbounds float, float* %237, i64 56
  %264 = bitcast float* %263 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %264, i32 0, i32 1, i32 1)
  %265 = getelementptr inbounds float, float* %240, i64 56
  %266 = bitcast float* %265 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %266, i32 0, i32 1, i32 1)
  %267 = getelementptr inbounds float, float* %237, i64 64
  %268 = bitcast float* %267 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %268, i32 0, i32 1, i32 1)
  %269 = getelementptr inbounds float, float* %240, i64 64
  %270 = bitcast float* %269 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %270, i32 0, i32 1, i32 1)
  %271 = getelementptr inbounds float, float* %237, i64 72
  %272 = bitcast float* %271 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %272, i32 0, i32 1, i32 1)
  %273 = getelementptr inbounds float, float* %240, i64 72
  %274 = bitcast float* %273 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %274, i32 0, i32 1, i32 1)
  %275 = bitcast float* %237 to <8 x float>*
  %276 = load <8 x float>, <8 x float>* %275, align 1, !tbaa !12
  %277 = add nuw nsw i64 %236, 8
  %278 = getelementptr inbounds float, float* %5, i64 %277
  %279 = bitcast float* %278 to <8 x float>*
  %280 = load <8 x float>, <8 x float>* %279, align 1, !tbaa !12
  %281 = add nuw nsw i64 %236, 16
  %282 = getelementptr inbounds float, float* %5, i64 %281
  %283 = bitcast float* %282 to <8 x float>*
  %284 = load <8 x float>, <8 x float>* %283, align 1, !tbaa !12
  %285 = add nuw nsw i64 %236, 24
  %286 = getelementptr inbounds float, float* %5, i64 %285
  %287 = bitcast float* %286 to <8 x float>*
  %288 = load <8 x float>, <8 x float>* %287, align 1, !tbaa !12
  %289 = add nuw nsw i64 %236, 32
  %290 = getelementptr inbounds float, float* %5, i64 %289
  %291 = bitcast float* %290 to <8 x float>*
  %292 = load <8 x float>, <8 x float>* %291, align 1, !tbaa !12
  %293 = add nuw nsw i64 %236, 40
  %294 = getelementptr inbounds float, float* %5, i64 %293
  %295 = bitcast float* %294 to <8 x float>*
  %296 = load <8 x float>, <8 x float>* %295, align 1, !tbaa !12
  %297 = add nuw nsw i64 %236, 48
  %298 = getelementptr inbounds float, float* %5, i64 %297
  %299 = bitcast float* %298 to <8 x float>*
  %300 = load <8 x float>, <8 x float>* %299, align 1, !tbaa !12
  %301 = add nuw nsw i64 %236, 56
  %302 = getelementptr inbounds float, float* %5, i64 %301
  %303 = bitcast float* %302 to <8 x float>*
  %304 = load <8 x float>, <8 x float>* %303, align 1, !tbaa !12
  %305 = add nuw nsw i64 %236, 64
  %306 = getelementptr inbounds float, float* %5, i64 %305
  %307 = bitcast float* %306 to <8 x float>*
  %308 = load <8 x float>, <8 x float>* %307, align 1, !tbaa !12
  %309 = add nsw i64 %236, %96
  %310 = getelementptr inbounds float, float* %3, i64 %309
  %311 = bitcast float* %310 to <8 x float>*
  %312 = load <8 x float>, <8 x float>* %311, align 1, !tbaa !12
  %313 = add nsw i64 %309, 8
  %314 = getelementptr inbounds float, float* %3, i64 %313
  %315 = bitcast float* %314 to <8 x float>*
  %316 = load <8 x float>, <8 x float>* %315, align 1, !tbaa !12
  %317 = add nsw i64 %309, 16
  %318 = getelementptr inbounds float, float* %3, i64 %317
  %319 = bitcast float* %318 to <8 x float>*
  %320 = load <8 x float>, <8 x float>* %319, align 1, !tbaa !12
  %321 = add nsw i64 %309, 24
  %322 = getelementptr inbounds float, float* %3, i64 %321
  %323 = bitcast float* %322 to <8 x float>*
  %324 = load <8 x float>, <8 x float>* %323, align 1, !tbaa !12
  %325 = add nsw i64 %309, 32
  %326 = getelementptr inbounds float, float* %3, i64 %325
  %327 = bitcast float* %326 to <8 x float>*
  %328 = load <8 x float>, <8 x float>* %327, align 1, !tbaa !12
  %329 = add nsw i64 %309, 40
  %330 = getelementptr inbounds float, float* %3, i64 %329
  %331 = bitcast float* %330 to <8 x float>*
  %332 = load <8 x float>, <8 x float>* %331, align 1, !tbaa !12
  %333 = add nsw i64 %309, 48
  %334 = getelementptr inbounds float, float* %3, i64 %333
  %335 = bitcast float* %334 to <8 x float>*
  %336 = load <8 x float>, <8 x float>* %335, align 1, !tbaa !12
  %337 = add nsw i64 %309, 56
  %338 = getelementptr inbounds float, float* %3, i64 %337
  %339 = bitcast float* %338 to <8 x float>*
  %340 = load <8 x float>, <8 x float>* %339, align 1, !tbaa !12
  %341 = add nsw i64 %309, 64
  %342 = getelementptr inbounds float, float* %3, i64 %341
  %343 = bitcast float* %342 to <8 x float>*
  %344 = load <8 x float>, <8 x float>* %343, align 1, !tbaa !12
  %345 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %312, <8 x float> %30, <8 x float> %276) #10
  %346 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %316, <8 x float> %30, <8 x float> %280) #10
  %347 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %320, <8 x float> %30, <8 x float> %284) #10
  %348 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %324, <8 x float> %30, <8 x float> %288) #10
  %349 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %328, <8 x float> %30, <8 x float> %292) #10
  %350 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %332, <8 x float> %30, <8 x float> %296) #10
  %351 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %336, <8 x float> %30, <8 x float> %300) #10
  %352 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %340, <8 x float> %30, <8 x float> %304) #10
  %353 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %344, <8 x float> %30, <8 x float> %308) #10
  store <8 x float> %345, <8 x float>* %275, align 1, !tbaa !12
  store <8 x float> %346, <8 x float>* %279, align 1, !tbaa !12
  store <8 x float> %347, <8 x float>* %283, align 1, !tbaa !12
  store <8 x float> %348, <8 x float>* %287, align 1, !tbaa !12
  store <8 x float> %349, <8 x float>* %291, align 1, !tbaa !12
  store <8 x float> %350, <8 x float>* %295, align 1, !tbaa !12
  store <8 x float> %351, <8 x float>* %299, align 1, !tbaa !12
  store <8 x float> %352, <8 x float>* %303, align 1, !tbaa !12
  store <8 x float> %353, <8 x float>* %307, align 1, !tbaa !12
  %354 = add nuw nsw i64 %236, 72
  %355 = icmp ult i64 %354, %97
  br i1 %355, label %235, label %229

356:                                              ; preds = %362
  br i1 %87, label %357, label %483

357:                                              ; preds = %356
  %358 = trunc i64 %36 to i32
  %359 = mul nsw i32 %86, %358
  %360 = sext i32 %359 to i64
  %361 = zext i32 %86 to i64
  br label %490

362:                                              ; preds = %230, %362
  %363 = phi i64 [ 0, %230 ], [ %481, %362 ]
  %364 = getelementptr inbounds float, float* %5, i64 %363
  %365 = getelementptr inbounds float, float* %364, i64 8
  %366 = bitcast float* %365 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %366, i32 0, i32 1, i32 1)
  %367 = getelementptr inbounds float, float* %3, i64 %363
  %368 = getelementptr inbounds float, float* %367, i64 8
  %369 = bitcast float* %368 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %369, i32 0, i32 1, i32 1)
  %370 = getelementptr inbounds float, float* %364, i64 16
  %371 = bitcast float* %370 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %371, i32 0, i32 1, i32 1)
  %372 = getelementptr inbounds float, float* %367, i64 16
  %373 = bitcast float* %372 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %373, i32 0, i32 1, i32 1)
  %374 = getelementptr inbounds float, float* %364, i64 24
  %375 = bitcast float* %374 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %375, i32 0, i32 1, i32 1)
  %376 = getelementptr inbounds float, float* %367, i64 24
  %377 = bitcast float* %376 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %377, i32 0, i32 1, i32 1)
  %378 = getelementptr inbounds float, float* %364, i64 32
  %379 = bitcast float* %378 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %379, i32 0, i32 1, i32 1)
  %380 = getelementptr inbounds float, float* %367, i64 32
  %381 = bitcast float* %380 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %381, i32 0, i32 1, i32 1)
  %382 = getelementptr inbounds float, float* %364, i64 40
  %383 = bitcast float* %382 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %383, i32 0, i32 1, i32 1)
  %384 = getelementptr inbounds float, float* %367, i64 40
  %385 = bitcast float* %384 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %385, i32 0, i32 1, i32 1)
  %386 = getelementptr inbounds float, float* %364, i64 48
  %387 = bitcast float* %386 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %387, i32 0, i32 1, i32 1)
  %388 = getelementptr inbounds float, float* %367, i64 48
  %389 = bitcast float* %388 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %389, i32 0, i32 1, i32 1)
  %390 = getelementptr inbounds float, float* %364, i64 56
  %391 = bitcast float* %390 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %391, i32 0, i32 1, i32 1)
  %392 = getelementptr inbounds float, float* %367, i64 56
  %393 = bitcast float* %392 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %393, i32 0, i32 1, i32 1)
  %394 = getelementptr inbounds float, float* %364, i64 64
  %395 = bitcast float* %394 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %395, i32 0, i32 1, i32 1)
  %396 = getelementptr inbounds float, float* %367, i64 64
  %397 = bitcast float* %396 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %397, i32 0, i32 1, i32 1)
  %398 = getelementptr inbounds float, float* %364, i64 72
  %399 = bitcast float* %398 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %399, i32 0, i32 1, i32 1)
  %400 = getelementptr inbounds float, float* %367, i64 72
  %401 = bitcast float* %400 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %401, i32 0, i32 1, i32 1)
  %402 = bitcast float* %364 to <8 x float>*
  %403 = load <8 x float>, <8 x float>* %402, align 1, !tbaa !12
  %404 = add nuw nsw i64 %363, 8
  %405 = getelementptr inbounds float, float* %5, i64 %404
  %406 = bitcast float* %405 to <8 x float>*
  %407 = load <8 x float>, <8 x float>* %406, align 1, !tbaa !12
  %408 = add nuw nsw i64 %363, 16
  %409 = getelementptr inbounds float, float* %5, i64 %408
  %410 = bitcast float* %409 to <8 x float>*
  %411 = load <8 x float>, <8 x float>* %410, align 1, !tbaa !12
  %412 = add nuw nsw i64 %363, 24
  %413 = getelementptr inbounds float, float* %5, i64 %412
  %414 = bitcast float* %413 to <8 x float>*
  %415 = load <8 x float>, <8 x float>* %414, align 1, !tbaa !12
  %416 = add nuw nsw i64 %363, 32
  %417 = getelementptr inbounds float, float* %5, i64 %416
  %418 = bitcast float* %417 to <8 x float>*
  %419 = load <8 x float>, <8 x float>* %418, align 1, !tbaa !12
  %420 = add nuw nsw i64 %363, 40
  %421 = getelementptr inbounds float, float* %5, i64 %420
  %422 = bitcast float* %421 to <8 x float>*
  %423 = load <8 x float>, <8 x float>* %422, align 1, !tbaa !12
  %424 = add nuw nsw i64 %363, 48
  %425 = getelementptr inbounds float, float* %5, i64 %424
  %426 = bitcast float* %425 to <8 x float>*
  %427 = load <8 x float>, <8 x float>* %426, align 1, !tbaa !12
  %428 = add nuw nsw i64 %363, 56
  %429 = getelementptr inbounds float, float* %5, i64 %428
  %430 = bitcast float* %429 to <8 x float>*
  %431 = load <8 x float>, <8 x float>* %430, align 1, !tbaa !12
  %432 = add nuw nsw i64 %363, 64
  %433 = getelementptr inbounds float, float* %5, i64 %432
  %434 = bitcast float* %433 to <8 x float>*
  %435 = load <8 x float>, <8 x float>* %434, align 1, !tbaa !12
  %436 = add nsw i64 %363, %233
  %437 = getelementptr inbounds float, float* %3, i64 %436
  %438 = bitcast float* %437 to <8 x float>*
  %439 = load <8 x float>, <8 x float>* %438, align 1, !tbaa !12
  %440 = add nsw i64 %436, 8
  %441 = getelementptr inbounds float, float* %3, i64 %440
  %442 = bitcast float* %441 to <8 x float>*
  %443 = load <8 x float>, <8 x float>* %442, align 1, !tbaa !12
  %444 = add nsw i64 %436, 16
  %445 = getelementptr inbounds float, float* %3, i64 %444
  %446 = bitcast float* %445 to <8 x float>*
  %447 = load <8 x float>, <8 x float>* %446, align 1, !tbaa !12
  %448 = add nsw i64 %436, 24
  %449 = getelementptr inbounds float, float* %3, i64 %448
  %450 = bitcast float* %449 to <8 x float>*
  %451 = load <8 x float>, <8 x float>* %450, align 1, !tbaa !12
  %452 = add nsw i64 %436, 32
  %453 = getelementptr inbounds float, float* %3, i64 %452
  %454 = bitcast float* %453 to <8 x float>*
  %455 = load <8 x float>, <8 x float>* %454, align 1, !tbaa !12
  %456 = add nsw i64 %436, 40
  %457 = getelementptr inbounds float, float* %3, i64 %456
  %458 = bitcast float* %457 to <8 x float>*
  %459 = load <8 x float>, <8 x float>* %458, align 1, !tbaa !12
  %460 = add nsw i64 %436, 48
  %461 = getelementptr inbounds float, float* %3, i64 %460
  %462 = bitcast float* %461 to <8 x float>*
  %463 = load <8 x float>, <8 x float>* %462, align 1, !tbaa !12
  %464 = add nsw i64 %436, 56
  %465 = getelementptr inbounds float, float* %3, i64 %464
  %466 = bitcast float* %465 to <8 x float>*
  %467 = load <8 x float>, <8 x float>* %466, align 1, !tbaa !12
  %468 = add nsw i64 %436, 64
  %469 = getelementptr inbounds float, float* %3, i64 %468
  %470 = bitcast float* %469 to <8 x float>*
  %471 = load <8 x float>, <8 x float>* %470, align 1, !tbaa !12
  %472 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %439, <8 x float> %35, <8 x float> %403) #10
  %473 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %443, <8 x float> %35, <8 x float> %407) #10
  %474 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %447, <8 x float> %35, <8 x float> %411) #10
  %475 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %451, <8 x float> %35, <8 x float> %415) #10
  %476 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %455, <8 x float> %35, <8 x float> %419) #10
  %477 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %459, <8 x float> %35, <8 x float> %423) #10
  %478 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %463, <8 x float> %35, <8 x float> %427) #10
  %479 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %467, <8 x float> %35, <8 x float> %431) #10
  %480 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %471, <8 x float> %35, <8 x float> %435) #10
  store <8 x float> %472, <8 x float>* %402, align 1, !tbaa !12
  store <8 x float> %473, <8 x float>* %406, align 1, !tbaa !12
  store <8 x float> %474, <8 x float>* %410, align 1, !tbaa !12
  store <8 x float> %475, <8 x float>* %414, align 1, !tbaa !12
  store <8 x float> %476, <8 x float>* %418, align 1, !tbaa !12
  store <8 x float> %477, <8 x float>* %422, align 1, !tbaa !12
  store <8 x float> %478, <8 x float>* %426, align 1, !tbaa !12
  store <8 x float> %479, <8 x float>* %430, align 1, !tbaa !12
  store <8 x float> %480, <8 x float>* %434, align 1, !tbaa !12
  %481 = add nuw nsw i64 %363, 72
  %482 = icmp ult i64 %481, %234
  br i1 %482, label %362, label %356

483:                                              ; preds = %490, %92, %229, %356
  %484 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %485 = icmp sgt i32 %484, 0
  br i1 %485, label %486, label %1649

486:                                              ; preds = %483
  %487 = zext i32 %484 to i64
  %488 = trunc i64 %41 to i32
  %489 = mul nsw i32 %484, %488
  br label %617

490:                                              ; preds = %357, %490
  %491 = phi i64 [ 0, %357 ], [ %609, %490 ]
  %492 = getelementptr inbounds float, float* %5, i64 %491
  %493 = getelementptr inbounds float, float* %492, i64 8
  %494 = bitcast float* %493 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %494, i32 0, i32 1, i32 1)
  %495 = getelementptr inbounds float, float* %3, i64 %491
  %496 = getelementptr inbounds float, float* %495, i64 8
  %497 = bitcast float* %496 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %497, i32 0, i32 1, i32 1)
  %498 = getelementptr inbounds float, float* %492, i64 16
  %499 = bitcast float* %498 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %499, i32 0, i32 1, i32 1)
  %500 = getelementptr inbounds float, float* %495, i64 16
  %501 = bitcast float* %500 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %501, i32 0, i32 1, i32 1)
  %502 = getelementptr inbounds float, float* %492, i64 24
  %503 = bitcast float* %502 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %503, i32 0, i32 1, i32 1)
  %504 = getelementptr inbounds float, float* %495, i64 24
  %505 = bitcast float* %504 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %505, i32 0, i32 1, i32 1)
  %506 = getelementptr inbounds float, float* %492, i64 32
  %507 = bitcast float* %506 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %507, i32 0, i32 1, i32 1)
  %508 = getelementptr inbounds float, float* %495, i64 32
  %509 = bitcast float* %508 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %509, i32 0, i32 1, i32 1)
  %510 = getelementptr inbounds float, float* %492, i64 40
  %511 = bitcast float* %510 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %511, i32 0, i32 1, i32 1)
  %512 = getelementptr inbounds float, float* %495, i64 40
  %513 = bitcast float* %512 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %513, i32 0, i32 1, i32 1)
  %514 = getelementptr inbounds float, float* %492, i64 48
  %515 = bitcast float* %514 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %515, i32 0, i32 1, i32 1)
  %516 = getelementptr inbounds float, float* %495, i64 48
  %517 = bitcast float* %516 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %517, i32 0, i32 1, i32 1)
  %518 = getelementptr inbounds float, float* %492, i64 56
  %519 = bitcast float* %518 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %519, i32 0, i32 1, i32 1)
  %520 = getelementptr inbounds float, float* %495, i64 56
  %521 = bitcast float* %520 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %521, i32 0, i32 1, i32 1)
  %522 = getelementptr inbounds float, float* %492, i64 64
  %523 = bitcast float* %522 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %523, i32 0, i32 1, i32 1)
  %524 = getelementptr inbounds float, float* %495, i64 64
  %525 = bitcast float* %524 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %525, i32 0, i32 1, i32 1)
  %526 = getelementptr inbounds float, float* %492, i64 72
  %527 = bitcast float* %526 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %527, i32 0, i32 1, i32 1)
  %528 = getelementptr inbounds float, float* %495, i64 72
  %529 = bitcast float* %528 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %529, i32 0, i32 1, i32 1)
  %530 = bitcast float* %492 to <8 x float>*
  %531 = load <8 x float>, <8 x float>* %530, align 1, !tbaa !12
  %532 = add nuw nsw i64 %491, 8
  %533 = getelementptr inbounds float, float* %5, i64 %532
  %534 = bitcast float* %533 to <8 x float>*
  %535 = load <8 x float>, <8 x float>* %534, align 1, !tbaa !12
  %536 = add nuw nsw i64 %491, 16
  %537 = getelementptr inbounds float, float* %5, i64 %536
  %538 = bitcast float* %537 to <8 x float>*
  %539 = load <8 x float>, <8 x float>* %538, align 1, !tbaa !12
  %540 = add nuw nsw i64 %491, 24
  %541 = getelementptr inbounds float, float* %5, i64 %540
  %542 = bitcast float* %541 to <8 x float>*
  %543 = load <8 x float>, <8 x float>* %542, align 1, !tbaa !12
  %544 = add nuw nsw i64 %491, 32
  %545 = getelementptr inbounds float, float* %5, i64 %544
  %546 = bitcast float* %545 to <8 x float>*
  %547 = load <8 x float>, <8 x float>* %546, align 1, !tbaa !12
  %548 = add nuw nsw i64 %491, 40
  %549 = getelementptr inbounds float, float* %5, i64 %548
  %550 = bitcast float* %549 to <8 x float>*
  %551 = load <8 x float>, <8 x float>* %550, align 1, !tbaa !12
  %552 = add nuw nsw i64 %491, 48
  %553 = getelementptr inbounds float, float* %5, i64 %552
  %554 = bitcast float* %553 to <8 x float>*
  %555 = load <8 x float>, <8 x float>* %554, align 1, !tbaa !12
  %556 = add nuw nsw i64 %491, 56
  %557 = getelementptr inbounds float, float* %5, i64 %556
  %558 = bitcast float* %557 to <8 x float>*
  %559 = load <8 x float>, <8 x float>* %558, align 1, !tbaa !12
  %560 = add nuw nsw i64 %491, 64
  %561 = getelementptr inbounds float, float* %5, i64 %560
  %562 = bitcast float* %561 to <8 x float>*
  %563 = load <8 x float>, <8 x float>* %562, align 1, !tbaa !12
  %564 = add nsw i64 %491, %360
  %565 = getelementptr inbounds float, float* %3, i64 %564
  %566 = bitcast float* %565 to <8 x float>*
  %567 = load <8 x float>, <8 x float>* %566, align 1, !tbaa !12
  %568 = add nsw i64 %564, 8
  %569 = getelementptr inbounds float, float* %3, i64 %568
  %570 = bitcast float* %569 to <8 x float>*
  %571 = load <8 x float>, <8 x float>* %570, align 1, !tbaa !12
  %572 = add nsw i64 %564, 16
  %573 = getelementptr inbounds float, float* %3, i64 %572
  %574 = bitcast float* %573 to <8 x float>*
  %575 = load <8 x float>, <8 x float>* %574, align 1, !tbaa !12
  %576 = add nsw i64 %564, 24
  %577 = getelementptr inbounds float, float* %3, i64 %576
  %578 = bitcast float* %577 to <8 x float>*
  %579 = load <8 x float>, <8 x float>* %578, align 1, !tbaa !12
  %580 = add nsw i64 %564, 32
  %581 = getelementptr inbounds float, float* %3, i64 %580
  %582 = bitcast float* %581 to <8 x float>*
  %583 = load <8 x float>, <8 x float>* %582, align 1, !tbaa !12
  %584 = add nsw i64 %564, 40
  %585 = getelementptr inbounds float, float* %3, i64 %584
  %586 = bitcast float* %585 to <8 x float>*
  %587 = load <8 x float>, <8 x float>* %586, align 1, !tbaa !12
  %588 = add nsw i64 %564, 48
  %589 = getelementptr inbounds float, float* %3, i64 %588
  %590 = bitcast float* %589 to <8 x float>*
  %591 = load <8 x float>, <8 x float>* %590, align 1, !tbaa !12
  %592 = add nsw i64 %564, 56
  %593 = getelementptr inbounds float, float* %3, i64 %592
  %594 = bitcast float* %593 to <8 x float>*
  %595 = load <8 x float>, <8 x float>* %594, align 1, !tbaa !12
  %596 = add nsw i64 %564, 64
  %597 = getelementptr inbounds float, float* %3, i64 %596
  %598 = bitcast float* %597 to <8 x float>*
  %599 = load <8 x float>, <8 x float>* %598, align 1, !tbaa !12
  %600 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %567, <8 x float> %40, <8 x float> %531) #10
  %601 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %571, <8 x float> %40, <8 x float> %535) #10
  %602 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %575, <8 x float> %40, <8 x float> %539) #10
  %603 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %579, <8 x float> %40, <8 x float> %543) #10
  %604 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %583, <8 x float> %40, <8 x float> %547) #10
  %605 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %587, <8 x float> %40, <8 x float> %551) #10
  %606 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %591, <8 x float> %40, <8 x float> %555) #10
  %607 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %595, <8 x float> %40, <8 x float> %559) #10
  %608 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %599, <8 x float> %40, <8 x float> %563) #10
  store <8 x float> %600, <8 x float>* %530, align 1, !tbaa !12
  store <8 x float> %601, <8 x float>* %534, align 1, !tbaa !12
  store <8 x float> %602, <8 x float>* %538, align 1, !tbaa !12
  store <8 x float> %603, <8 x float>* %542, align 1, !tbaa !12
  store <8 x float> %604, <8 x float>* %546, align 1, !tbaa !12
  store <8 x float> %605, <8 x float>* %550, align 1, !tbaa !12
  store <8 x float> %606, <8 x float>* %554, align 1, !tbaa !12
  store <8 x float> %607, <8 x float>* %558, align 1, !tbaa !12
  store <8 x float> %608, <8 x float>* %562, align 1, !tbaa !12
  %609 = add nuw nsw i64 %491, 72
  %610 = icmp ult i64 %609, %361
  br i1 %610, label %490, label %483

611:                                              ; preds = %617
  br i1 %485, label %612, label %1002

612:                                              ; preds = %611
  %613 = trunc i64 %46 to i32
  %614 = mul nsw i32 %484, %613
  %615 = sext i32 %614 to i64
  %616 = zext i32 %484 to i64
  br label %754

617:                                              ; preds = %486, %617
  %618 = phi i64 [ 0, %486 ], [ %746, %617 ]
  %619 = getelementptr inbounds float, float* %5, i64 %618
  %620 = getelementptr inbounds float, float* %619, i64 8
  %621 = bitcast float* %620 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %621, i32 0, i32 1, i32 1)
  %622 = getelementptr inbounds float, float* %3, i64 %618
  %623 = getelementptr inbounds float, float* %622, i64 8
  %624 = bitcast float* %623 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %624, i32 0, i32 1, i32 1)
  %625 = getelementptr inbounds float, float* %619, i64 16
  %626 = bitcast float* %625 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %626, i32 0, i32 1, i32 1)
  %627 = getelementptr inbounds float, float* %622, i64 16
  %628 = bitcast float* %627 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %628, i32 0, i32 1, i32 1)
  %629 = getelementptr inbounds float, float* %619, i64 24
  %630 = bitcast float* %629 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %630, i32 0, i32 1, i32 1)
  %631 = getelementptr inbounds float, float* %622, i64 24
  %632 = bitcast float* %631 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %632, i32 0, i32 1, i32 1)
  %633 = getelementptr inbounds float, float* %619, i64 32
  %634 = bitcast float* %633 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %634, i32 0, i32 1, i32 1)
  %635 = getelementptr inbounds float, float* %622, i64 32
  %636 = bitcast float* %635 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %636, i32 0, i32 1, i32 1)
  %637 = getelementptr inbounds float, float* %619, i64 40
  %638 = bitcast float* %637 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %638, i32 0, i32 1, i32 1)
  %639 = getelementptr inbounds float, float* %622, i64 40
  %640 = bitcast float* %639 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %640, i32 0, i32 1, i32 1)
  %641 = getelementptr inbounds float, float* %619, i64 48
  %642 = bitcast float* %641 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %642, i32 0, i32 1, i32 1)
  %643 = getelementptr inbounds float, float* %622, i64 48
  %644 = bitcast float* %643 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %644, i32 0, i32 1, i32 1)
  %645 = getelementptr inbounds float, float* %619, i64 56
  %646 = bitcast float* %645 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %646, i32 0, i32 1, i32 1)
  %647 = getelementptr inbounds float, float* %622, i64 56
  %648 = bitcast float* %647 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %648, i32 0, i32 1, i32 1)
  %649 = getelementptr inbounds float, float* %619, i64 64
  %650 = bitcast float* %649 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %650, i32 0, i32 1, i32 1)
  %651 = getelementptr inbounds float, float* %622, i64 64
  %652 = bitcast float* %651 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %652, i32 0, i32 1, i32 1)
  %653 = getelementptr inbounds float, float* %619, i64 72
  %654 = bitcast float* %653 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %654, i32 0, i32 1, i32 1)
  %655 = getelementptr inbounds float, float* %622, i64 72
  %656 = bitcast float* %655 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %656, i32 0, i32 1, i32 1)
  %657 = bitcast float* %619 to <8 x float>*
  %658 = load <8 x float>, <8 x float>* %657, align 1, !tbaa !12
  %659 = add nuw nsw i64 %618, 8
  %660 = getelementptr inbounds float, float* %5, i64 %659
  %661 = bitcast float* %660 to <8 x float>*
  %662 = load <8 x float>, <8 x float>* %661, align 1, !tbaa !12
  %663 = add nuw nsw i64 %618, 16
  %664 = getelementptr inbounds float, float* %5, i64 %663
  %665 = bitcast float* %664 to <8 x float>*
  %666 = load <8 x float>, <8 x float>* %665, align 1, !tbaa !12
  %667 = add nuw nsw i64 %618, 24
  %668 = getelementptr inbounds float, float* %5, i64 %667
  %669 = bitcast float* %668 to <8 x float>*
  %670 = load <8 x float>, <8 x float>* %669, align 1, !tbaa !12
  %671 = add nuw nsw i64 %618, 32
  %672 = getelementptr inbounds float, float* %5, i64 %671
  %673 = bitcast float* %672 to <8 x float>*
  %674 = load <8 x float>, <8 x float>* %673, align 1, !tbaa !12
  %675 = add nuw nsw i64 %618, 40
  %676 = getelementptr inbounds float, float* %5, i64 %675
  %677 = bitcast float* %676 to <8 x float>*
  %678 = load <8 x float>, <8 x float>* %677, align 1, !tbaa !12
  %679 = add nuw nsw i64 %618, 48
  %680 = getelementptr inbounds float, float* %5, i64 %679
  %681 = bitcast float* %680 to <8 x float>*
  %682 = load <8 x float>, <8 x float>* %681, align 1, !tbaa !12
  %683 = add nuw nsw i64 %618, 56
  %684 = getelementptr inbounds float, float* %5, i64 %683
  %685 = bitcast float* %684 to <8 x float>*
  %686 = load <8 x float>, <8 x float>* %685, align 1, !tbaa !12
  %687 = add nuw nsw i64 %618, 64
  %688 = getelementptr inbounds float, float* %5, i64 %687
  %689 = bitcast float* %688 to <8 x float>*
  %690 = load <8 x float>, <8 x float>* %689, align 1, !tbaa !12
  %691 = trunc i64 %618 to i32
  %692 = add nsw i32 %489, %691
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds float, float* %3, i64 %693
  %695 = bitcast float* %694 to <8 x float>*
  %696 = load <8 x float>, <8 x float>* %695, align 1, !tbaa !12
  %697 = add nsw i32 %692, 8
  %698 = sext i32 %697 to i64
  %699 = getelementptr inbounds float, float* %3, i64 %698
  %700 = bitcast float* %699 to <8 x float>*
  %701 = load <8 x float>, <8 x float>* %700, align 1, !tbaa !12
  %702 = add nsw i32 %692, 16
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds float, float* %3, i64 %703
  %705 = bitcast float* %704 to <8 x float>*
  %706 = load <8 x float>, <8 x float>* %705, align 1, !tbaa !12
  %707 = add nsw i32 %692, 24
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds float, float* %3, i64 %708
  %710 = bitcast float* %709 to <8 x float>*
  %711 = load <8 x float>, <8 x float>* %710, align 1, !tbaa !12
  %712 = add nsw i32 %692, 32
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds float, float* %3, i64 %713
  %715 = bitcast float* %714 to <8 x float>*
  %716 = load <8 x float>, <8 x float>* %715, align 1, !tbaa !12
  %717 = add nsw i32 %692, 40
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds float, float* %3, i64 %718
  %720 = bitcast float* %719 to <8 x float>*
  %721 = load <8 x float>, <8 x float>* %720, align 1, !tbaa !12
  %722 = add nsw i32 %692, 48
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds float, float* %3, i64 %723
  %725 = bitcast float* %724 to <8 x float>*
  %726 = load <8 x float>, <8 x float>* %725, align 1, !tbaa !12
  %727 = add nsw i32 %692, 56
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds float, float* %3, i64 %728
  %730 = bitcast float* %729 to <8 x float>*
  %731 = load <8 x float>, <8 x float>* %730, align 1, !tbaa !12
  %732 = add nsw i32 %692, 64
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds float, float* %3, i64 %733
  %735 = bitcast float* %734 to <8 x float>*
  %736 = load <8 x float>, <8 x float>* %735, align 1, !tbaa !12
  %737 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %696, <8 x float> %45, <8 x float> %658) #10
  %738 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %701, <8 x float> %45, <8 x float> %662) #10
  %739 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %706, <8 x float> %45, <8 x float> %666) #10
  %740 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %711, <8 x float> %45, <8 x float> %670) #10
  %741 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %716, <8 x float> %45, <8 x float> %674) #10
  %742 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %721, <8 x float> %45, <8 x float> %678) #10
  %743 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %726, <8 x float> %45, <8 x float> %682) #10
  %744 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %731, <8 x float> %45, <8 x float> %686) #10
  %745 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %736, <8 x float> %45, <8 x float> %690) #10
  store <8 x float> %737, <8 x float>* %657, align 1, !tbaa !12
  store <8 x float> %738, <8 x float>* %661, align 1, !tbaa !12
  store <8 x float> %739, <8 x float>* %665, align 1, !tbaa !12
  store <8 x float> %740, <8 x float>* %669, align 1, !tbaa !12
  store <8 x float> %741, <8 x float>* %673, align 1, !tbaa !12
  store <8 x float> %742, <8 x float>* %677, align 1, !tbaa !12
  store <8 x float> %743, <8 x float>* %681, align 1, !tbaa !12
  store <8 x float> %744, <8 x float>* %685, align 1, !tbaa !12
  store <8 x float> %745, <8 x float>* %689, align 1, !tbaa !12
  %746 = add nuw nsw i64 %618, 72
  %747 = icmp ult i64 %746, %487
  br i1 %747, label %617, label %611

748:                                              ; preds = %754
  br i1 %485, label %749, label %1002

749:                                              ; preds = %748
  %750 = trunc i64 %51 to i32
  %751 = mul nsw i32 %484, %750
  %752 = sext i32 %751 to i64
  %753 = zext i32 %484 to i64
  br label %881

754:                                              ; preds = %612, %754
  %755 = phi i64 [ 0, %612 ], [ %873, %754 ]
  %756 = getelementptr inbounds float, float* %5, i64 %755
  %757 = getelementptr inbounds float, float* %756, i64 8
  %758 = bitcast float* %757 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %758, i32 0, i32 1, i32 1)
  %759 = getelementptr inbounds float, float* %3, i64 %755
  %760 = getelementptr inbounds float, float* %759, i64 8
  %761 = bitcast float* %760 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %761, i32 0, i32 1, i32 1)
  %762 = getelementptr inbounds float, float* %756, i64 16
  %763 = bitcast float* %762 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %763, i32 0, i32 1, i32 1)
  %764 = getelementptr inbounds float, float* %759, i64 16
  %765 = bitcast float* %764 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %765, i32 0, i32 1, i32 1)
  %766 = getelementptr inbounds float, float* %756, i64 24
  %767 = bitcast float* %766 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %767, i32 0, i32 1, i32 1)
  %768 = getelementptr inbounds float, float* %759, i64 24
  %769 = bitcast float* %768 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %769, i32 0, i32 1, i32 1)
  %770 = getelementptr inbounds float, float* %756, i64 32
  %771 = bitcast float* %770 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %771, i32 0, i32 1, i32 1)
  %772 = getelementptr inbounds float, float* %759, i64 32
  %773 = bitcast float* %772 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %773, i32 0, i32 1, i32 1)
  %774 = getelementptr inbounds float, float* %756, i64 40
  %775 = bitcast float* %774 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %775, i32 0, i32 1, i32 1)
  %776 = getelementptr inbounds float, float* %759, i64 40
  %777 = bitcast float* %776 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %777, i32 0, i32 1, i32 1)
  %778 = getelementptr inbounds float, float* %756, i64 48
  %779 = bitcast float* %778 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %779, i32 0, i32 1, i32 1)
  %780 = getelementptr inbounds float, float* %759, i64 48
  %781 = bitcast float* %780 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %781, i32 0, i32 1, i32 1)
  %782 = getelementptr inbounds float, float* %756, i64 56
  %783 = bitcast float* %782 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %783, i32 0, i32 1, i32 1)
  %784 = getelementptr inbounds float, float* %759, i64 56
  %785 = bitcast float* %784 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %785, i32 0, i32 1, i32 1)
  %786 = getelementptr inbounds float, float* %756, i64 64
  %787 = bitcast float* %786 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %787, i32 0, i32 1, i32 1)
  %788 = getelementptr inbounds float, float* %759, i64 64
  %789 = bitcast float* %788 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %789, i32 0, i32 1, i32 1)
  %790 = getelementptr inbounds float, float* %756, i64 72
  %791 = bitcast float* %790 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %791, i32 0, i32 1, i32 1)
  %792 = getelementptr inbounds float, float* %759, i64 72
  %793 = bitcast float* %792 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %793, i32 0, i32 1, i32 1)
  %794 = bitcast float* %756 to <8 x float>*
  %795 = load <8 x float>, <8 x float>* %794, align 1, !tbaa !12
  %796 = add nuw nsw i64 %755, 8
  %797 = getelementptr inbounds float, float* %5, i64 %796
  %798 = bitcast float* %797 to <8 x float>*
  %799 = load <8 x float>, <8 x float>* %798, align 1, !tbaa !12
  %800 = add nuw nsw i64 %755, 16
  %801 = getelementptr inbounds float, float* %5, i64 %800
  %802 = bitcast float* %801 to <8 x float>*
  %803 = load <8 x float>, <8 x float>* %802, align 1, !tbaa !12
  %804 = add nuw nsw i64 %755, 24
  %805 = getelementptr inbounds float, float* %5, i64 %804
  %806 = bitcast float* %805 to <8 x float>*
  %807 = load <8 x float>, <8 x float>* %806, align 1, !tbaa !12
  %808 = add nuw nsw i64 %755, 32
  %809 = getelementptr inbounds float, float* %5, i64 %808
  %810 = bitcast float* %809 to <8 x float>*
  %811 = load <8 x float>, <8 x float>* %810, align 1, !tbaa !12
  %812 = add nuw nsw i64 %755, 40
  %813 = getelementptr inbounds float, float* %5, i64 %812
  %814 = bitcast float* %813 to <8 x float>*
  %815 = load <8 x float>, <8 x float>* %814, align 1, !tbaa !12
  %816 = add nuw nsw i64 %755, 48
  %817 = getelementptr inbounds float, float* %5, i64 %816
  %818 = bitcast float* %817 to <8 x float>*
  %819 = load <8 x float>, <8 x float>* %818, align 1, !tbaa !12
  %820 = add nuw nsw i64 %755, 56
  %821 = getelementptr inbounds float, float* %5, i64 %820
  %822 = bitcast float* %821 to <8 x float>*
  %823 = load <8 x float>, <8 x float>* %822, align 1, !tbaa !12
  %824 = add nuw nsw i64 %755, 64
  %825 = getelementptr inbounds float, float* %5, i64 %824
  %826 = bitcast float* %825 to <8 x float>*
  %827 = load <8 x float>, <8 x float>* %826, align 1, !tbaa !12
  %828 = add nsw i64 %755, %615
  %829 = getelementptr inbounds float, float* %3, i64 %828
  %830 = bitcast float* %829 to <8 x float>*
  %831 = load <8 x float>, <8 x float>* %830, align 1, !tbaa !12
  %832 = add nsw i64 %828, 8
  %833 = getelementptr inbounds float, float* %3, i64 %832
  %834 = bitcast float* %833 to <8 x float>*
  %835 = load <8 x float>, <8 x float>* %834, align 1, !tbaa !12
  %836 = add nsw i64 %828, 16
  %837 = getelementptr inbounds float, float* %3, i64 %836
  %838 = bitcast float* %837 to <8 x float>*
  %839 = load <8 x float>, <8 x float>* %838, align 1, !tbaa !12
  %840 = add nsw i64 %828, 24
  %841 = getelementptr inbounds float, float* %3, i64 %840
  %842 = bitcast float* %841 to <8 x float>*
  %843 = load <8 x float>, <8 x float>* %842, align 1, !tbaa !12
  %844 = add nsw i64 %828, 32
  %845 = getelementptr inbounds float, float* %3, i64 %844
  %846 = bitcast float* %845 to <8 x float>*
  %847 = load <8 x float>, <8 x float>* %846, align 1, !tbaa !12
  %848 = add nsw i64 %828, 40
  %849 = getelementptr inbounds float, float* %3, i64 %848
  %850 = bitcast float* %849 to <8 x float>*
  %851 = load <8 x float>, <8 x float>* %850, align 1, !tbaa !12
  %852 = add nsw i64 %828, 48
  %853 = getelementptr inbounds float, float* %3, i64 %852
  %854 = bitcast float* %853 to <8 x float>*
  %855 = load <8 x float>, <8 x float>* %854, align 1, !tbaa !12
  %856 = add nsw i64 %828, 56
  %857 = getelementptr inbounds float, float* %3, i64 %856
  %858 = bitcast float* %857 to <8 x float>*
  %859 = load <8 x float>, <8 x float>* %858, align 1, !tbaa !12
  %860 = add nsw i64 %828, 64
  %861 = getelementptr inbounds float, float* %3, i64 %860
  %862 = bitcast float* %861 to <8 x float>*
  %863 = load <8 x float>, <8 x float>* %862, align 1, !tbaa !12
  %864 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %831, <8 x float> %50, <8 x float> %795) #10
  %865 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %835, <8 x float> %50, <8 x float> %799) #10
  %866 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %839, <8 x float> %50, <8 x float> %803) #10
  %867 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %843, <8 x float> %50, <8 x float> %807) #10
  %868 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %847, <8 x float> %50, <8 x float> %811) #10
  %869 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %851, <8 x float> %50, <8 x float> %815) #10
  %870 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %855, <8 x float> %50, <8 x float> %819) #10
  %871 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %859, <8 x float> %50, <8 x float> %823) #10
  %872 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %863, <8 x float> %50, <8 x float> %827) #10
  store <8 x float> %864, <8 x float>* %794, align 1, !tbaa !12
  store <8 x float> %865, <8 x float>* %798, align 1, !tbaa !12
  store <8 x float> %866, <8 x float>* %802, align 1, !tbaa !12
  store <8 x float> %867, <8 x float>* %806, align 1, !tbaa !12
  store <8 x float> %868, <8 x float>* %810, align 1, !tbaa !12
  store <8 x float> %869, <8 x float>* %814, align 1, !tbaa !12
  store <8 x float> %870, <8 x float>* %818, align 1, !tbaa !12
  store <8 x float> %871, <8 x float>* %822, align 1, !tbaa !12
  store <8 x float> %872, <8 x float>* %826, align 1, !tbaa !12
  %873 = add nuw nsw i64 %755, 72
  %874 = icmp ult i64 %873, %616
  br i1 %874, label %754, label %748

875:                                              ; preds = %881
  br i1 %485, label %876, label %1002

876:                                              ; preds = %875
  %877 = trunc i64 %56 to i32
  %878 = mul nsw i32 %484, %877
  %879 = sext i32 %878 to i64
  %880 = zext i32 %484 to i64
  br label %1009

881:                                              ; preds = %749, %881
  %882 = phi i64 [ 0, %749 ], [ %1000, %881 ]
  %883 = getelementptr inbounds float, float* %5, i64 %882
  %884 = getelementptr inbounds float, float* %883, i64 8
  %885 = bitcast float* %884 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %885, i32 0, i32 1, i32 1)
  %886 = getelementptr inbounds float, float* %3, i64 %882
  %887 = getelementptr inbounds float, float* %886, i64 8
  %888 = bitcast float* %887 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %888, i32 0, i32 1, i32 1)
  %889 = getelementptr inbounds float, float* %883, i64 16
  %890 = bitcast float* %889 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %890, i32 0, i32 1, i32 1)
  %891 = getelementptr inbounds float, float* %886, i64 16
  %892 = bitcast float* %891 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %892, i32 0, i32 1, i32 1)
  %893 = getelementptr inbounds float, float* %883, i64 24
  %894 = bitcast float* %893 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %894, i32 0, i32 1, i32 1)
  %895 = getelementptr inbounds float, float* %886, i64 24
  %896 = bitcast float* %895 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %896, i32 0, i32 1, i32 1)
  %897 = getelementptr inbounds float, float* %883, i64 32
  %898 = bitcast float* %897 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %898, i32 0, i32 1, i32 1)
  %899 = getelementptr inbounds float, float* %886, i64 32
  %900 = bitcast float* %899 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %900, i32 0, i32 1, i32 1)
  %901 = getelementptr inbounds float, float* %883, i64 40
  %902 = bitcast float* %901 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %902, i32 0, i32 1, i32 1)
  %903 = getelementptr inbounds float, float* %886, i64 40
  %904 = bitcast float* %903 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %904, i32 0, i32 1, i32 1)
  %905 = getelementptr inbounds float, float* %883, i64 48
  %906 = bitcast float* %905 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %906, i32 0, i32 1, i32 1)
  %907 = getelementptr inbounds float, float* %886, i64 48
  %908 = bitcast float* %907 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %908, i32 0, i32 1, i32 1)
  %909 = getelementptr inbounds float, float* %883, i64 56
  %910 = bitcast float* %909 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %910, i32 0, i32 1, i32 1)
  %911 = getelementptr inbounds float, float* %886, i64 56
  %912 = bitcast float* %911 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %912, i32 0, i32 1, i32 1)
  %913 = getelementptr inbounds float, float* %883, i64 64
  %914 = bitcast float* %913 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %914, i32 0, i32 1, i32 1)
  %915 = getelementptr inbounds float, float* %886, i64 64
  %916 = bitcast float* %915 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %916, i32 0, i32 1, i32 1)
  %917 = getelementptr inbounds float, float* %883, i64 72
  %918 = bitcast float* %917 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %918, i32 0, i32 1, i32 1)
  %919 = getelementptr inbounds float, float* %886, i64 72
  %920 = bitcast float* %919 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %920, i32 0, i32 1, i32 1)
  %921 = bitcast float* %883 to <8 x float>*
  %922 = load <8 x float>, <8 x float>* %921, align 1, !tbaa !12
  %923 = add nuw nsw i64 %882, 8
  %924 = getelementptr inbounds float, float* %5, i64 %923
  %925 = bitcast float* %924 to <8 x float>*
  %926 = load <8 x float>, <8 x float>* %925, align 1, !tbaa !12
  %927 = add nuw nsw i64 %882, 16
  %928 = getelementptr inbounds float, float* %5, i64 %927
  %929 = bitcast float* %928 to <8 x float>*
  %930 = load <8 x float>, <8 x float>* %929, align 1, !tbaa !12
  %931 = add nuw nsw i64 %882, 24
  %932 = getelementptr inbounds float, float* %5, i64 %931
  %933 = bitcast float* %932 to <8 x float>*
  %934 = load <8 x float>, <8 x float>* %933, align 1, !tbaa !12
  %935 = add nuw nsw i64 %882, 32
  %936 = getelementptr inbounds float, float* %5, i64 %935
  %937 = bitcast float* %936 to <8 x float>*
  %938 = load <8 x float>, <8 x float>* %937, align 1, !tbaa !12
  %939 = add nuw nsw i64 %882, 40
  %940 = getelementptr inbounds float, float* %5, i64 %939
  %941 = bitcast float* %940 to <8 x float>*
  %942 = load <8 x float>, <8 x float>* %941, align 1, !tbaa !12
  %943 = add nuw nsw i64 %882, 48
  %944 = getelementptr inbounds float, float* %5, i64 %943
  %945 = bitcast float* %944 to <8 x float>*
  %946 = load <8 x float>, <8 x float>* %945, align 1, !tbaa !12
  %947 = add nuw nsw i64 %882, 56
  %948 = getelementptr inbounds float, float* %5, i64 %947
  %949 = bitcast float* %948 to <8 x float>*
  %950 = load <8 x float>, <8 x float>* %949, align 1, !tbaa !12
  %951 = add nuw nsw i64 %882, 64
  %952 = getelementptr inbounds float, float* %5, i64 %951
  %953 = bitcast float* %952 to <8 x float>*
  %954 = load <8 x float>, <8 x float>* %953, align 1, !tbaa !12
  %955 = add nsw i64 %882, %752
  %956 = getelementptr inbounds float, float* %3, i64 %955
  %957 = bitcast float* %956 to <8 x float>*
  %958 = load <8 x float>, <8 x float>* %957, align 1, !tbaa !12
  %959 = add nsw i64 %955, 8
  %960 = getelementptr inbounds float, float* %3, i64 %959
  %961 = bitcast float* %960 to <8 x float>*
  %962 = load <8 x float>, <8 x float>* %961, align 1, !tbaa !12
  %963 = add nsw i64 %955, 16
  %964 = getelementptr inbounds float, float* %3, i64 %963
  %965 = bitcast float* %964 to <8 x float>*
  %966 = load <8 x float>, <8 x float>* %965, align 1, !tbaa !12
  %967 = add nsw i64 %955, 24
  %968 = getelementptr inbounds float, float* %3, i64 %967
  %969 = bitcast float* %968 to <8 x float>*
  %970 = load <8 x float>, <8 x float>* %969, align 1, !tbaa !12
  %971 = add nsw i64 %955, 32
  %972 = getelementptr inbounds float, float* %3, i64 %971
  %973 = bitcast float* %972 to <8 x float>*
  %974 = load <8 x float>, <8 x float>* %973, align 1, !tbaa !12
  %975 = add nsw i64 %955, 40
  %976 = getelementptr inbounds float, float* %3, i64 %975
  %977 = bitcast float* %976 to <8 x float>*
  %978 = load <8 x float>, <8 x float>* %977, align 1, !tbaa !12
  %979 = add nsw i64 %955, 48
  %980 = getelementptr inbounds float, float* %3, i64 %979
  %981 = bitcast float* %980 to <8 x float>*
  %982 = load <8 x float>, <8 x float>* %981, align 1, !tbaa !12
  %983 = add nsw i64 %955, 56
  %984 = getelementptr inbounds float, float* %3, i64 %983
  %985 = bitcast float* %984 to <8 x float>*
  %986 = load <8 x float>, <8 x float>* %985, align 1, !tbaa !12
  %987 = add nsw i64 %955, 64
  %988 = getelementptr inbounds float, float* %3, i64 %987
  %989 = bitcast float* %988 to <8 x float>*
  %990 = load <8 x float>, <8 x float>* %989, align 1, !tbaa !12
  %991 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %958, <8 x float> %55, <8 x float> %922) #10
  %992 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %962, <8 x float> %55, <8 x float> %926) #10
  %993 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %966, <8 x float> %55, <8 x float> %930) #10
  %994 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %970, <8 x float> %55, <8 x float> %934) #10
  %995 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %974, <8 x float> %55, <8 x float> %938) #10
  %996 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %978, <8 x float> %55, <8 x float> %942) #10
  %997 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %982, <8 x float> %55, <8 x float> %946) #10
  %998 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %986, <8 x float> %55, <8 x float> %950) #10
  %999 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %990, <8 x float> %55, <8 x float> %954) #10
  store <8 x float> %991, <8 x float>* %921, align 1, !tbaa !12
  store <8 x float> %992, <8 x float>* %925, align 1, !tbaa !12
  store <8 x float> %993, <8 x float>* %929, align 1, !tbaa !12
  store <8 x float> %994, <8 x float>* %933, align 1, !tbaa !12
  store <8 x float> %995, <8 x float>* %937, align 1, !tbaa !12
  store <8 x float> %996, <8 x float>* %941, align 1, !tbaa !12
  store <8 x float> %997, <8 x float>* %945, align 1, !tbaa !12
  store <8 x float> %998, <8 x float>* %949, align 1, !tbaa !12
  store <8 x float> %999, <8 x float>* %953, align 1, !tbaa !12
  %1000 = add nuw nsw i64 %882, 72
  %1001 = icmp ult i64 %1000, %753
  br i1 %1001, label %881, label %875

1002:                                             ; preds = %1009, %611, %748, %875
  %1003 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1004 = icmp sgt i32 %1003, 0
  br i1 %1004, label %1005, label %1649

1005:                                             ; preds = %1002
  %1006 = zext i32 %1003 to i64
  %1007 = trunc i64 %61 to i32
  %1008 = mul nsw i32 %1003, %1007
  br label %1136

1009:                                             ; preds = %876, %1009
  %1010 = phi i64 [ 0, %876 ], [ %1128, %1009 ]
  %1011 = getelementptr inbounds float, float* %5, i64 %1010
  %1012 = getelementptr inbounds float, float* %1011, i64 8
  %1013 = bitcast float* %1012 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1013, i32 0, i32 1, i32 1)
  %1014 = getelementptr inbounds float, float* %3, i64 %1010
  %1015 = getelementptr inbounds float, float* %1014, i64 8
  %1016 = bitcast float* %1015 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1016, i32 0, i32 1, i32 1)
  %1017 = getelementptr inbounds float, float* %1011, i64 16
  %1018 = bitcast float* %1017 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1018, i32 0, i32 1, i32 1)
  %1019 = getelementptr inbounds float, float* %1014, i64 16
  %1020 = bitcast float* %1019 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1020, i32 0, i32 1, i32 1)
  %1021 = getelementptr inbounds float, float* %1011, i64 24
  %1022 = bitcast float* %1021 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1022, i32 0, i32 1, i32 1)
  %1023 = getelementptr inbounds float, float* %1014, i64 24
  %1024 = bitcast float* %1023 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1024, i32 0, i32 1, i32 1)
  %1025 = getelementptr inbounds float, float* %1011, i64 32
  %1026 = bitcast float* %1025 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1026, i32 0, i32 1, i32 1)
  %1027 = getelementptr inbounds float, float* %1014, i64 32
  %1028 = bitcast float* %1027 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1028, i32 0, i32 1, i32 1)
  %1029 = getelementptr inbounds float, float* %1011, i64 40
  %1030 = bitcast float* %1029 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1030, i32 0, i32 1, i32 1)
  %1031 = getelementptr inbounds float, float* %1014, i64 40
  %1032 = bitcast float* %1031 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1032, i32 0, i32 1, i32 1)
  %1033 = getelementptr inbounds float, float* %1011, i64 48
  %1034 = bitcast float* %1033 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1034, i32 0, i32 1, i32 1)
  %1035 = getelementptr inbounds float, float* %1014, i64 48
  %1036 = bitcast float* %1035 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1036, i32 0, i32 1, i32 1)
  %1037 = getelementptr inbounds float, float* %1011, i64 56
  %1038 = bitcast float* %1037 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1038, i32 0, i32 1, i32 1)
  %1039 = getelementptr inbounds float, float* %1014, i64 56
  %1040 = bitcast float* %1039 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1040, i32 0, i32 1, i32 1)
  %1041 = getelementptr inbounds float, float* %1011, i64 64
  %1042 = bitcast float* %1041 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1042, i32 0, i32 1, i32 1)
  %1043 = getelementptr inbounds float, float* %1014, i64 64
  %1044 = bitcast float* %1043 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1044, i32 0, i32 1, i32 1)
  %1045 = getelementptr inbounds float, float* %1011, i64 72
  %1046 = bitcast float* %1045 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1046, i32 0, i32 1, i32 1)
  %1047 = getelementptr inbounds float, float* %1014, i64 72
  %1048 = bitcast float* %1047 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1048, i32 0, i32 1, i32 1)
  %1049 = bitcast float* %1011 to <8 x float>*
  %1050 = load <8 x float>, <8 x float>* %1049, align 1, !tbaa !12
  %1051 = add nuw nsw i64 %1010, 8
  %1052 = getelementptr inbounds float, float* %5, i64 %1051
  %1053 = bitcast float* %1052 to <8 x float>*
  %1054 = load <8 x float>, <8 x float>* %1053, align 1, !tbaa !12
  %1055 = add nuw nsw i64 %1010, 16
  %1056 = getelementptr inbounds float, float* %5, i64 %1055
  %1057 = bitcast float* %1056 to <8 x float>*
  %1058 = load <8 x float>, <8 x float>* %1057, align 1, !tbaa !12
  %1059 = add nuw nsw i64 %1010, 24
  %1060 = getelementptr inbounds float, float* %5, i64 %1059
  %1061 = bitcast float* %1060 to <8 x float>*
  %1062 = load <8 x float>, <8 x float>* %1061, align 1, !tbaa !12
  %1063 = add nuw nsw i64 %1010, 32
  %1064 = getelementptr inbounds float, float* %5, i64 %1063
  %1065 = bitcast float* %1064 to <8 x float>*
  %1066 = load <8 x float>, <8 x float>* %1065, align 1, !tbaa !12
  %1067 = add nuw nsw i64 %1010, 40
  %1068 = getelementptr inbounds float, float* %5, i64 %1067
  %1069 = bitcast float* %1068 to <8 x float>*
  %1070 = load <8 x float>, <8 x float>* %1069, align 1, !tbaa !12
  %1071 = add nuw nsw i64 %1010, 48
  %1072 = getelementptr inbounds float, float* %5, i64 %1071
  %1073 = bitcast float* %1072 to <8 x float>*
  %1074 = load <8 x float>, <8 x float>* %1073, align 1, !tbaa !12
  %1075 = add nuw nsw i64 %1010, 56
  %1076 = getelementptr inbounds float, float* %5, i64 %1075
  %1077 = bitcast float* %1076 to <8 x float>*
  %1078 = load <8 x float>, <8 x float>* %1077, align 1, !tbaa !12
  %1079 = add nuw nsw i64 %1010, 64
  %1080 = getelementptr inbounds float, float* %5, i64 %1079
  %1081 = bitcast float* %1080 to <8 x float>*
  %1082 = load <8 x float>, <8 x float>* %1081, align 1, !tbaa !12
  %1083 = add nsw i64 %1010, %879
  %1084 = getelementptr inbounds float, float* %3, i64 %1083
  %1085 = bitcast float* %1084 to <8 x float>*
  %1086 = load <8 x float>, <8 x float>* %1085, align 1, !tbaa !12
  %1087 = add nsw i64 %1083, 8
  %1088 = getelementptr inbounds float, float* %3, i64 %1087
  %1089 = bitcast float* %1088 to <8 x float>*
  %1090 = load <8 x float>, <8 x float>* %1089, align 1, !tbaa !12
  %1091 = add nsw i64 %1083, 16
  %1092 = getelementptr inbounds float, float* %3, i64 %1091
  %1093 = bitcast float* %1092 to <8 x float>*
  %1094 = load <8 x float>, <8 x float>* %1093, align 1, !tbaa !12
  %1095 = add nsw i64 %1083, 24
  %1096 = getelementptr inbounds float, float* %3, i64 %1095
  %1097 = bitcast float* %1096 to <8 x float>*
  %1098 = load <8 x float>, <8 x float>* %1097, align 1, !tbaa !12
  %1099 = add nsw i64 %1083, 32
  %1100 = getelementptr inbounds float, float* %3, i64 %1099
  %1101 = bitcast float* %1100 to <8 x float>*
  %1102 = load <8 x float>, <8 x float>* %1101, align 1, !tbaa !12
  %1103 = add nsw i64 %1083, 40
  %1104 = getelementptr inbounds float, float* %3, i64 %1103
  %1105 = bitcast float* %1104 to <8 x float>*
  %1106 = load <8 x float>, <8 x float>* %1105, align 1, !tbaa !12
  %1107 = add nsw i64 %1083, 48
  %1108 = getelementptr inbounds float, float* %3, i64 %1107
  %1109 = bitcast float* %1108 to <8 x float>*
  %1110 = load <8 x float>, <8 x float>* %1109, align 1, !tbaa !12
  %1111 = add nsw i64 %1083, 56
  %1112 = getelementptr inbounds float, float* %3, i64 %1111
  %1113 = bitcast float* %1112 to <8 x float>*
  %1114 = load <8 x float>, <8 x float>* %1113, align 1, !tbaa !12
  %1115 = add nsw i64 %1083, 64
  %1116 = getelementptr inbounds float, float* %3, i64 %1115
  %1117 = bitcast float* %1116 to <8 x float>*
  %1118 = load <8 x float>, <8 x float>* %1117, align 1, !tbaa !12
  %1119 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1086, <8 x float> %60, <8 x float> %1050) #10
  %1120 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1090, <8 x float> %60, <8 x float> %1054) #10
  %1121 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1094, <8 x float> %60, <8 x float> %1058) #10
  %1122 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1098, <8 x float> %60, <8 x float> %1062) #10
  %1123 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1102, <8 x float> %60, <8 x float> %1066) #10
  %1124 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1106, <8 x float> %60, <8 x float> %1070) #10
  %1125 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1110, <8 x float> %60, <8 x float> %1074) #10
  %1126 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1114, <8 x float> %60, <8 x float> %1078) #10
  %1127 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1118, <8 x float> %60, <8 x float> %1082) #10
  store <8 x float> %1119, <8 x float>* %1049, align 1, !tbaa !12
  store <8 x float> %1120, <8 x float>* %1053, align 1, !tbaa !12
  store <8 x float> %1121, <8 x float>* %1057, align 1, !tbaa !12
  store <8 x float> %1122, <8 x float>* %1061, align 1, !tbaa !12
  store <8 x float> %1123, <8 x float>* %1065, align 1, !tbaa !12
  store <8 x float> %1124, <8 x float>* %1069, align 1, !tbaa !12
  store <8 x float> %1125, <8 x float>* %1073, align 1, !tbaa !12
  store <8 x float> %1126, <8 x float>* %1077, align 1, !tbaa !12
  store <8 x float> %1127, <8 x float>* %1081, align 1, !tbaa !12
  %1128 = add nuw nsw i64 %1010, 72
  %1129 = icmp ult i64 %1128, %880
  br i1 %1129, label %1009, label %1002

1130:                                             ; preds = %1136
  br i1 %1004, label %1131, label %1521

1131:                                             ; preds = %1130
  %1132 = trunc i64 %66 to i32
  %1133 = mul nsw i32 %1003, %1132
  %1134 = sext i32 %1133 to i64
  %1135 = zext i32 %1003 to i64
  br label %1273

1136:                                             ; preds = %1005, %1136
  %1137 = phi i64 [ 0, %1005 ], [ %1265, %1136 ]
  %1138 = getelementptr inbounds float, float* %5, i64 %1137
  %1139 = getelementptr inbounds float, float* %1138, i64 8
  %1140 = bitcast float* %1139 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1140, i32 0, i32 1, i32 1)
  %1141 = getelementptr inbounds float, float* %3, i64 %1137
  %1142 = getelementptr inbounds float, float* %1141, i64 8
  %1143 = bitcast float* %1142 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1143, i32 0, i32 1, i32 1)
  %1144 = getelementptr inbounds float, float* %1138, i64 16
  %1145 = bitcast float* %1144 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1145, i32 0, i32 1, i32 1)
  %1146 = getelementptr inbounds float, float* %1141, i64 16
  %1147 = bitcast float* %1146 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1147, i32 0, i32 1, i32 1)
  %1148 = getelementptr inbounds float, float* %1138, i64 24
  %1149 = bitcast float* %1148 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1149, i32 0, i32 1, i32 1)
  %1150 = getelementptr inbounds float, float* %1141, i64 24
  %1151 = bitcast float* %1150 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1151, i32 0, i32 1, i32 1)
  %1152 = getelementptr inbounds float, float* %1138, i64 32
  %1153 = bitcast float* %1152 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1153, i32 0, i32 1, i32 1)
  %1154 = getelementptr inbounds float, float* %1141, i64 32
  %1155 = bitcast float* %1154 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1155, i32 0, i32 1, i32 1)
  %1156 = getelementptr inbounds float, float* %1138, i64 40
  %1157 = bitcast float* %1156 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1157, i32 0, i32 1, i32 1)
  %1158 = getelementptr inbounds float, float* %1141, i64 40
  %1159 = bitcast float* %1158 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1159, i32 0, i32 1, i32 1)
  %1160 = getelementptr inbounds float, float* %1138, i64 48
  %1161 = bitcast float* %1160 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1161, i32 0, i32 1, i32 1)
  %1162 = getelementptr inbounds float, float* %1141, i64 48
  %1163 = bitcast float* %1162 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1163, i32 0, i32 1, i32 1)
  %1164 = getelementptr inbounds float, float* %1138, i64 56
  %1165 = bitcast float* %1164 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1165, i32 0, i32 1, i32 1)
  %1166 = getelementptr inbounds float, float* %1141, i64 56
  %1167 = bitcast float* %1166 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1167, i32 0, i32 1, i32 1)
  %1168 = getelementptr inbounds float, float* %1138, i64 64
  %1169 = bitcast float* %1168 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1169, i32 0, i32 1, i32 1)
  %1170 = getelementptr inbounds float, float* %1141, i64 64
  %1171 = bitcast float* %1170 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1171, i32 0, i32 1, i32 1)
  %1172 = getelementptr inbounds float, float* %1138, i64 72
  %1173 = bitcast float* %1172 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1173, i32 0, i32 1, i32 1)
  %1174 = getelementptr inbounds float, float* %1141, i64 72
  %1175 = bitcast float* %1174 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1175, i32 0, i32 1, i32 1)
  %1176 = bitcast float* %1138 to <8 x float>*
  %1177 = load <8 x float>, <8 x float>* %1176, align 1, !tbaa !12
  %1178 = add nuw nsw i64 %1137, 8
  %1179 = getelementptr inbounds float, float* %5, i64 %1178
  %1180 = bitcast float* %1179 to <8 x float>*
  %1181 = load <8 x float>, <8 x float>* %1180, align 1, !tbaa !12
  %1182 = add nuw nsw i64 %1137, 16
  %1183 = getelementptr inbounds float, float* %5, i64 %1182
  %1184 = bitcast float* %1183 to <8 x float>*
  %1185 = load <8 x float>, <8 x float>* %1184, align 1, !tbaa !12
  %1186 = add nuw nsw i64 %1137, 24
  %1187 = getelementptr inbounds float, float* %5, i64 %1186
  %1188 = bitcast float* %1187 to <8 x float>*
  %1189 = load <8 x float>, <8 x float>* %1188, align 1, !tbaa !12
  %1190 = add nuw nsw i64 %1137, 32
  %1191 = getelementptr inbounds float, float* %5, i64 %1190
  %1192 = bitcast float* %1191 to <8 x float>*
  %1193 = load <8 x float>, <8 x float>* %1192, align 1, !tbaa !12
  %1194 = add nuw nsw i64 %1137, 40
  %1195 = getelementptr inbounds float, float* %5, i64 %1194
  %1196 = bitcast float* %1195 to <8 x float>*
  %1197 = load <8 x float>, <8 x float>* %1196, align 1, !tbaa !12
  %1198 = add nuw nsw i64 %1137, 48
  %1199 = getelementptr inbounds float, float* %5, i64 %1198
  %1200 = bitcast float* %1199 to <8 x float>*
  %1201 = load <8 x float>, <8 x float>* %1200, align 1, !tbaa !12
  %1202 = add nuw nsw i64 %1137, 56
  %1203 = getelementptr inbounds float, float* %5, i64 %1202
  %1204 = bitcast float* %1203 to <8 x float>*
  %1205 = load <8 x float>, <8 x float>* %1204, align 1, !tbaa !12
  %1206 = add nuw nsw i64 %1137, 64
  %1207 = getelementptr inbounds float, float* %5, i64 %1206
  %1208 = bitcast float* %1207 to <8 x float>*
  %1209 = load <8 x float>, <8 x float>* %1208, align 1, !tbaa !12
  %1210 = trunc i64 %1137 to i32
  %1211 = add nsw i32 %1008, %1210
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds float, float* %3, i64 %1212
  %1214 = bitcast float* %1213 to <8 x float>*
  %1215 = load <8 x float>, <8 x float>* %1214, align 1, !tbaa !12
  %1216 = add nsw i32 %1211, 8
  %1217 = sext i32 %1216 to i64
  %1218 = getelementptr inbounds float, float* %3, i64 %1217
  %1219 = bitcast float* %1218 to <8 x float>*
  %1220 = load <8 x float>, <8 x float>* %1219, align 1, !tbaa !12
  %1221 = add nsw i32 %1211, 16
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds float, float* %3, i64 %1222
  %1224 = bitcast float* %1223 to <8 x float>*
  %1225 = load <8 x float>, <8 x float>* %1224, align 1, !tbaa !12
  %1226 = add nsw i32 %1211, 24
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds float, float* %3, i64 %1227
  %1229 = bitcast float* %1228 to <8 x float>*
  %1230 = load <8 x float>, <8 x float>* %1229, align 1, !tbaa !12
  %1231 = add nsw i32 %1211, 32
  %1232 = sext i32 %1231 to i64
  %1233 = getelementptr inbounds float, float* %3, i64 %1232
  %1234 = bitcast float* %1233 to <8 x float>*
  %1235 = load <8 x float>, <8 x float>* %1234, align 1, !tbaa !12
  %1236 = add nsw i32 %1211, 40
  %1237 = sext i32 %1236 to i64
  %1238 = getelementptr inbounds float, float* %3, i64 %1237
  %1239 = bitcast float* %1238 to <8 x float>*
  %1240 = load <8 x float>, <8 x float>* %1239, align 1, !tbaa !12
  %1241 = add nsw i32 %1211, 48
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds float, float* %3, i64 %1242
  %1244 = bitcast float* %1243 to <8 x float>*
  %1245 = load <8 x float>, <8 x float>* %1244, align 1, !tbaa !12
  %1246 = add nsw i32 %1211, 56
  %1247 = sext i32 %1246 to i64
  %1248 = getelementptr inbounds float, float* %3, i64 %1247
  %1249 = bitcast float* %1248 to <8 x float>*
  %1250 = load <8 x float>, <8 x float>* %1249, align 1, !tbaa !12
  %1251 = add nsw i32 %1211, 64
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds float, float* %3, i64 %1252
  %1254 = bitcast float* %1253 to <8 x float>*
  %1255 = load <8 x float>, <8 x float>* %1254, align 1, !tbaa !12
  %1256 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1215, <8 x float> %65, <8 x float> %1177) #10
  %1257 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1220, <8 x float> %65, <8 x float> %1181) #10
  %1258 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1225, <8 x float> %65, <8 x float> %1185) #10
  %1259 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1230, <8 x float> %65, <8 x float> %1189) #10
  %1260 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1235, <8 x float> %65, <8 x float> %1193) #10
  %1261 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1240, <8 x float> %65, <8 x float> %1197) #10
  %1262 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1245, <8 x float> %65, <8 x float> %1201) #10
  %1263 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1250, <8 x float> %65, <8 x float> %1205) #10
  %1264 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1255, <8 x float> %65, <8 x float> %1209) #10
  store <8 x float> %1256, <8 x float>* %1176, align 1, !tbaa !12
  store <8 x float> %1257, <8 x float>* %1180, align 1, !tbaa !12
  store <8 x float> %1258, <8 x float>* %1184, align 1, !tbaa !12
  store <8 x float> %1259, <8 x float>* %1188, align 1, !tbaa !12
  store <8 x float> %1260, <8 x float>* %1192, align 1, !tbaa !12
  store <8 x float> %1261, <8 x float>* %1196, align 1, !tbaa !12
  store <8 x float> %1262, <8 x float>* %1200, align 1, !tbaa !12
  store <8 x float> %1263, <8 x float>* %1204, align 1, !tbaa !12
  store <8 x float> %1264, <8 x float>* %1208, align 1, !tbaa !12
  %1265 = add nuw nsw i64 %1137, 72
  %1266 = icmp ult i64 %1265, %1006
  br i1 %1266, label %1136, label %1130

1267:                                             ; preds = %1273
  br i1 %1004, label %1268, label %1521

1268:                                             ; preds = %1267
  %1269 = trunc i64 %71 to i32
  %1270 = mul nsw i32 %1003, %1269
  %1271 = sext i32 %1270 to i64
  %1272 = zext i32 %1003 to i64
  br label %1400

1273:                                             ; preds = %1131, %1273
  %1274 = phi i64 [ 0, %1131 ], [ %1392, %1273 ]
  %1275 = getelementptr inbounds float, float* %5, i64 %1274
  %1276 = getelementptr inbounds float, float* %1275, i64 8
  %1277 = bitcast float* %1276 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1277, i32 0, i32 1, i32 1)
  %1278 = getelementptr inbounds float, float* %3, i64 %1274
  %1279 = getelementptr inbounds float, float* %1278, i64 8
  %1280 = bitcast float* %1279 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1280, i32 0, i32 1, i32 1)
  %1281 = getelementptr inbounds float, float* %1275, i64 16
  %1282 = bitcast float* %1281 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1282, i32 0, i32 1, i32 1)
  %1283 = getelementptr inbounds float, float* %1278, i64 16
  %1284 = bitcast float* %1283 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1284, i32 0, i32 1, i32 1)
  %1285 = getelementptr inbounds float, float* %1275, i64 24
  %1286 = bitcast float* %1285 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1286, i32 0, i32 1, i32 1)
  %1287 = getelementptr inbounds float, float* %1278, i64 24
  %1288 = bitcast float* %1287 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1288, i32 0, i32 1, i32 1)
  %1289 = getelementptr inbounds float, float* %1275, i64 32
  %1290 = bitcast float* %1289 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1290, i32 0, i32 1, i32 1)
  %1291 = getelementptr inbounds float, float* %1278, i64 32
  %1292 = bitcast float* %1291 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1292, i32 0, i32 1, i32 1)
  %1293 = getelementptr inbounds float, float* %1275, i64 40
  %1294 = bitcast float* %1293 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1294, i32 0, i32 1, i32 1)
  %1295 = getelementptr inbounds float, float* %1278, i64 40
  %1296 = bitcast float* %1295 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1296, i32 0, i32 1, i32 1)
  %1297 = getelementptr inbounds float, float* %1275, i64 48
  %1298 = bitcast float* %1297 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1298, i32 0, i32 1, i32 1)
  %1299 = getelementptr inbounds float, float* %1278, i64 48
  %1300 = bitcast float* %1299 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1300, i32 0, i32 1, i32 1)
  %1301 = getelementptr inbounds float, float* %1275, i64 56
  %1302 = bitcast float* %1301 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1302, i32 0, i32 1, i32 1)
  %1303 = getelementptr inbounds float, float* %1278, i64 56
  %1304 = bitcast float* %1303 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1304, i32 0, i32 1, i32 1)
  %1305 = getelementptr inbounds float, float* %1275, i64 64
  %1306 = bitcast float* %1305 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1306, i32 0, i32 1, i32 1)
  %1307 = getelementptr inbounds float, float* %1278, i64 64
  %1308 = bitcast float* %1307 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1308, i32 0, i32 1, i32 1)
  %1309 = getelementptr inbounds float, float* %1275, i64 72
  %1310 = bitcast float* %1309 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1310, i32 0, i32 1, i32 1)
  %1311 = getelementptr inbounds float, float* %1278, i64 72
  %1312 = bitcast float* %1311 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1312, i32 0, i32 1, i32 1)
  %1313 = bitcast float* %1275 to <8 x float>*
  %1314 = load <8 x float>, <8 x float>* %1313, align 1, !tbaa !12
  %1315 = add nuw nsw i64 %1274, 8
  %1316 = getelementptr inbounds float, float* %5, i64 %1315
  %1317 = bitcast float* %1316 to <8 x float>*
  %1318 = load <8 x float>, <8 x float>* %1317, align 1, !tbaa !12
  %1319 = add nuw nsw i64 %1274, 16
  %1320 = getelementptr inbounds float, float* %5, i64 %1319
  %1321 = bitcast float* %1320 to <8 x float>*
  %1322 = load <8 x float>, <8 x float>* %1321, align 1, !tbaa !12
  %1323 = add nuw nsw i64 %1274, 24
  %1324 = getelementptr inbounds float, float* %5, i64 %1323
  %1325 = bitcast float* %1324 to <8 x float>*
  %1326 = load <8 x float>, <8 x float>* %1325, align 1, !tbaa !12
  %1327 = add nuw nsw i64 %1274, 32
  %1328 = getelementptr inbounds float, float* %5, i64 %1327
  %1329 = bitcast float* %1328 to <8 x float>*
  %1330 = load <8 x float>, <8 x float>* %1329, align 1, !tbaa !12
  %1331 = add nuw nsw i64 %1274, 40
  %1332 = getelementptr inbounds float, float* %5, i64 %1331
  %1333 = bitcast float* %1332 to <8 x float>*
  %1334 = load <8 x float>, <8 x float>* %1333, align 1, !tbaa !12
  %1335 = add nuw nsw i64 %1274, 48
  %1336 = getelementptr inbounds float, float* %5, i64 %1335
  %1337 = bitcast float* %1336 to <8 x float>*
  %1338 = load <8 x float>, <8 x float>* %1337, align 1, !tbaa !12
  %1339 = add nuw nsw i64 %1274, 56
  %1340 = getelementptr inbounds float, float* %5, i64 %1339
  %1341 = bitcast float* %1340 to <8 x float>*
  %1342 = load <8 x float>, <8 x float>* %1341, align 1, !tbaa !12
  %1343 = add nuw nsw i64 %1274, 64
  %1344 = getelementptr inbounds float, float* %5, i64 %1343
  %1345 = bitcast float* %1344 to <8 x float>*
  %1346 = load <8 x float>, <8 x float>* %1345, align 1, !tbaa !12
  %1347 = add nsw i64 %1274, %1134
  %1348 = getelementptr inbounds float, float* %3, i64 %1347
  %1349 = bitcast float* %1348 to <8 x float>*
  %1350 = load <8 x float>, <8 x float>* %1349, align 1, !tbaa !12
  %1351 = add nsw i64 %1347, 8
  %1352 = getelementptr inbounds float, float* %3, i64 %1351
  %1353 = bitcast float* %1352 to <8 x float>*
  %1354 = load <8 x float>, <8 x float>* %1353, align 1, !tbaa !12
  %1355 = add nsw i64 %1347, 16
  %1356 = getelementptr inbounds float, float* %3, i64 %1355
  %1357 = bitcast float* %1356 to <8 x float>*
  %1358 = load <8 x float>, <8 x float>* %1357, align 1, !tbaa !12
  %1359 = add nsw i64 %1347, 24
  %1360 = getelementptr inbounds float, float* %3, i64 %1359
  %1361 = bitcast float* %1360 to <8 x float>*
  %1362 = load <8 x float>, <8 x float>* %1361, align 1, !tbaa !12
  %1363 = add nsw i64 %1347, 32
  %1364 = getelementptr inbounds float, float* %3, i64 %1363
  %1365 = bitcast float* %1364 to <8 x float>*
  %1366 = load <8 x float>, <8 x float>* %1365, align 1, !tbaa !12
  %1367 = add nsw i64 %1347, 40
  %1368 = getelementptr inbounds float, float* %3, i64 %1367
  %1369 = bitcast float* %1368 to <8 x float>*
  %1370 = load <8 x float>, <8 x float>* %1369, align 1, !tbaa !12
  %1371 = add nsw i64 %1347, 48
  %1372 = getelementptr inbounds float, float* %3, i64 %1371
  %1373 = bitcast float* %1372 to <8 x float>*
  %1374 = load <8 x float>, <8 x float>* %1373, align 1, !tbaa !12
  %1375 = add nsw i64 %1347, 56
  %1376 = getelementptr inbounds float, float* %3, i64 %1375
  %1377 = bitcast float* %1376 to <8 x float>*
  %1378 = load <8 x float>, <8 x float>* %1377, align 1, !tbaa !12
  %1379 = add nsw i64 %1347, 64
  %1380 = getelementptr inbounds float, float* %3, i64 %1379
  %1381 = bitcast float* %1380 to <8 x float>*
  %1382 = load <8 x float>, <8 x float>* %1381, align 1, !tbaa !12
  %1383 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1350, <8 x float> %70, <8 x float> %1314) #10
  %1384 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1354, <8 x float> %70, <8 x float> %1318) #10
  %1385 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1358, <8 x float> %70, <8 x float> %1322) #10
  %1386 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1362, <8 x float> %70, <8 x float> %1326) #10
  %1387 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1366, <8 x float> %70, <8 x float> %1330) #10
  %1388 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1370, <8 x float> %70, <8 x float> %1334) #10
  %1389 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1374, <8 x float> %70, <8 x float> %1338) #10
  %1390 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1378, <8 x float> %70, <8 x float> %1342) #10
  %1391 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1382, <8 x float> %70, <8 x float> %1346) #10
  store <8 x float> %1383, <8 x float>* %1313, align 1, !tbaa !12
  store <8 x float> %1384, <8 x float>* %1317, align 1, !tbaa !12
  store <8 x float> %1385, <8 x float>* %1321, align 1, !tbaa !12
  store <8 x float> %1386, <8 x float>* %1325, align 1, !tbaa !12
  store <8 x float> %1387, <8 x float>* %1329, align 1, !tbaa !12
  store <8 x float> %1388, <8 x float>* %1333, align 1, !tbaa !12
  store <8 x float> %1389, <8 x float>* %1337, align 1, !tbaa !12
  store <8 x float> %1390, <8 x float>* %1341, align 1, !tbaa !12
  store <8 x float> %1391, <8 x float>* %1345, align 1, !tbaa !12
  %1392 = add nuw nsw i64 %1274, 72
  %1393 = icmp ult i64 %1392, %1135
  br i1 %1393, label %1273, label %1267

1394:                                             ; preds = %1400
  br i1 %1004, label %1395, label %1521

1395:                                             ; preds = %1394
  %1396 = trunc i64 %76 to i32
  %1397 = mul nsw i32 %1003, %1396
  %1398 = sext i32 %1397 to i64
  %1399 = zext i32 %1003 to i64
  br label %1528

1400:                                             ; preds = %1268, %1400
  %1401 = phi i64 [ 0, %1268 ], [ %1519, %1400 ]
  %1402 = getelementptr inbounds float, float* %5, i64 %1401
  %1403 = getelementptr inbounds float, float* %1402, i64 8
  %1404 = bitcast float* %1403 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1404, i32 0, i32 1, i32 1)
  %1405 = getelementptr inbounds float, float* %3, i64 %1401
  %1406 = getelementptr inbounds float, float* %1405, i64 8
  %1407 = bitcast float* %1406 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1407, i32 0, i32 1, i32 1)
  %1408 = getelementptr inbounds float, float* %1402, i64 16
  %1409 = bitcast float* %1408 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1409, i32 0, i32 1, i32 1)
  %1410 = getelementptr inbounds float, float* %1405, i64 16
  %1411 = bitcast float* %1410 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1411, i32 0, i32 1, i32 1)
  %1412 = getelementptr inbounds float, float* %1402, i64 24
  %1413 = bitcast float* %1412 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1413, i32 0, i32 1, i32 1)
  %1414 = getelementptr inbounds float, float* %1405, i64 24
  %1415 = bitcast float* %1414 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1415, i32 0, i32 1, i32 1)
  %1416 = getelementptr inbounds float, float* %1402, i64 32
  %1417 = bitcast float* %1416 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1417, i32 0, i32 1, i32 1)
  %1418 = getelementptr inbounds float, float* %1405, i64 32
  %1419 = bitcast float* %1418 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1419, i32 0, i32 1, i32 1)
  %1420 = getelementptr inbounds float, float* %1402, i64 40
  %1421 = bitcast float* %1420 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1421, i32 0, i32 1, i32 1)
  %1422 = getelementptr inbounds float, float* %1405, i64 40
  %1423 = bitcast float* %1422 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1423, i32 0, i32 1, i32 1)
  %1424 = getelementptr inbounds float, float* %1402, i64 48
  %1425 = bitcast float* %1424 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1425, i32 0, i32 1, i32 1)
  %1426 = getelementptr inbounds float, float* %1405, i64 48
  %1427 = bitcast float* %1426 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1427, i32 0, i32 1, i32 1)
  %1428 = getelementptr inbounds float, float* %1402, i64 56
  %1429 = bitcast float* %1428 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1429, i32 0, i32 1, i32 1)
  %1430 = getelementptr inbounds float, float* %1405, i64 56
  %1431 = bitcast float* %1430 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1431, i32 0, i32 1, i32 1)
  %1432 = getelementptr inbounds float, float* %1402, i64 64
  %1433 = bitcast float* %1432 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1433, i32 0, i32 1, i32 1)
  %1434 = getelementptr inbounds float, float* %1405, i64 64
  %1435 = bitcast float* %1434 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1435, i32 0, i32 1, i32 1)
  %1436 = getelementptr inbounds float, float* %1402, i64 72
  %1437 = bitcast float* %1436 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1437, i32 0, i32 1, i32 1)
  %1438 = getelementptr inbounds float, float* %1405, i64 72
  %1439 = bitcast float* %1438 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1439, i32 0, i32 1, i32 1)
  %1440 = bitcast float* %1402 to <8 x float>*
  %1441 = load <8 x float>, <8 x float>* %1440, align 1, !tbaa !12
  %1442 = add nuw nsw i64 %1401, 8
  %1443 = getelementptr inbounds float, float* %5, i64 %1442
  %1444 = bitcast float* %1443 to <8 x float>*
  %1445 = load <8 x float>, <8 x float>* %1444, align 1, !tbaa !12
  %1446 = add nuw nsw i64 %1401, 16
  %1447 = getelementptr inbounds float, float* %5, i64 %1446
  %1448 = bitcast float* %1447 to <8 x float>*
  %1449 = load <8 x float>, <8 x float>* %1448, align 1, !tbaa !12
  %1450 = add nuw nsw i64 %1401, 24
  %1451 = getelementptr inbounds float, float* %5, i64 %1450
  %1452 = bitcast float* %1451 to <8 x float>*
  %1453 = load <8 x float>, <8 x float>* %1452, align 1, !tbaa !12
  %1454 = add nuw nsw i64 %1401, 32
  %1455 = getelementptr inbounds float, float* %5, i64 %1454
  %1456 = bitcast float* %1455 to <8 x float>*
  %1457 = load <8 x float>, <8 x float>* %1456, align 1, !tbaa !12
  %1458 = add nuw nsw i64 %1401, 40
  %1459 = getelementptr inbounds float, float* %5, i64 %1458
  %1460 = bitcast float* %1459 to <8 x float>*
  %1461 = load <8 x float>, <8 x float>* %1460, align 1, !tbaa !12
  %1462 = add nuw nsw i64 %1401, 48
  %1463 = getelementptr inbounds float, float* %5, i64 %1462
  %1464 = bitcast float* %1463 to <8 x float>*
  %1465 = load <8 x float>, <8 x float>* %1464, align 1, !tbaa !12
  %1466 = add nuw nsw i64 %1401, 56
  %1467 = getelementptr inbounds float, float* %5, i64 %1466
  %1468 = bitcast float* %1467 to <8 x float>*
  %1469 = load <8 x float>, <8 x float>* %1468, align 1, !tbaa !12
  %1470 = add nuw nsw i64 %1401, 64
  %1471 = getelementptr inbounds float, float* %5, i64 %1470
  %1472 = bitcast float* %1471 to <8 x float>*
  %1473 = load <8 x float>, <8 x float>* %1472, align 1, !tbaa !12
  %1474 = add nsw i64 %1401, %1271
  %1475 = getelementptr inbounds float, float* %3, i64 %1474
  %1476 = bitcast float* %1475 to <8 x float>*
  %1477 = load <8 x float>, <8 x float>* %1476, align 1, !tbaa !12
  %1478 = add nsw i64 %1474, 8
  %1479 = getelementptr inbounds float, float* %3, i64 %1478
  %1480 = bitcast float* %1479 to <8 x float>*
  %1481 = load <8 x float>, <8 x float>* %1480, align 1, !tbaa !12
  %1482 = add nsw i64 %1474, 16
  %1483 = getelementptr inbounds float, float* %3, i64 %1482
  %1484 = bitcast float* %1483 to <8 x float>*
  %1485 = load <8 x float>, <8 x float>* %1484, align 1, !tbaa !12
  %1486 = add nsw i64 %1474, 24
  %1487 = getelementptr inbounds float, float* %3, i64 %1486
  %1488 = bitcast float* %1487 to <8 x float>*
  %1489 = load <8 x float>, <8 x float>* %1488, align 1, !tbaa !12
  %1490 = add nsw i64 %1474, 32
  %1491 = getelementptr inbounds float, float* %3, i64 %1490
  %1492 = bitcast float* %1491 to <8 x float>*
  %1493 = load <8 x float>, <8 x float>* %1492, align 1, !tbaa !12
  %1494 = add nsw i64 %1474, 40
  %1495 = getelementptr inbounds float, float* %3, i64 %1494
  %1496 = bitcast float* %1495 to <8 x float>*
  %1497 = load <8 x float>, <8 x float>* %1496, align 1, !tbaa !12
  %1498 = add nsw i64 %1474, 48
  %1499 = getelementptr inbounds float, float* %3, i64 %1498
  %1500 = bitcast float* %1499 to <8 x float>*
  %1501 = load <8 x float>, <8 x float>* %1500, align 1, !tbaa !12
  %1502 = add nsw i64 %1474, 56
  %1503 = getelementptr inbounds float, float* %3, i64 %1502
  %1504 = bitcast float* %1503 to <8 x float>*
  %1505 = load <8 x float>, <8 x float>* %1504, align 1, !tbaa !12
  %1506 = add nsw i64 %1474, 64
  %1507 = getelementptr inbounds float, float* %3, i64 %1506
  %1508 = bitcast float* %1507 to <8 x float>*
  %1509 = load <8 x float>, <8 x float>* %1508, align 1, !tbaa !12
  %1510 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1477, <8 x float> %75, <8 x float> %1441) #10
  %1511 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1481, <8 x float> %75, <8 x float> %1445) #10
  %1512 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1485, <8 x float> %75, <8 x float> %1449) #10
  %1513 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1489, <8 x float> %75, <8 x float> %1453) #10
  %1514 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1493, <8 x float> %75, <8 x float> %1457) #10
  %1515 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1497, <8 x float> %75, <8 x float> %1461) #10
  %1516 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1501, <8 x float> %75, <8 x float> %1465) #10
  %1517 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1505, <8 x float> %75, <8 x float> %1469) #10
  %1518 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1509, <8 x float> %75, <8 x float> %1473) #10
  store <8 x float> %1510, <8 x float>* %1440, align 1, !tbaa !12
  store <8 x float> %1511, <8 x float>* %1444, align 1, !tbaa !12
  store <8 x float> %1512, <8 x float>* %1448, align 1, !tbaa !12
  store <8 x float> %1513, <8 x float>* %1452, align 1, !tbaa !12
  store <8 x float> %1514, <8 x float>* %1456, align 1, !tbaa !12
  store <8 x float> %1515, <8 x float>* %1460, align 1, !tbaa !12
  store <8 x float> %1516, <8 x float>* %1464, align 1, !tbaa !12
  store <8 x float> %1517, <8 x float>* %1468, align 1, !tbaa !12
  store <8 x float> %1518, <8 x float>* %1472, align 1, !tbaa !12
  %1519 = add nuw nsw i64 %1401, 72
  %1520 = icmp ult i64 %1519, %1272
  br i1 %1520, label %1400, label %1394

1521:                                             ; preds = %1528, %1130, %1267, %1394
  %1522 = load i32, i32* @_ZL6BLOCKI, align 4, !tbaa !13
  %1523 = icmp sgt i32 %1522, 0
  br i1 %1523, label %1524, label %1649

1524:                                             ; preds = %1521
  %1525 = zext i32 %1522 to i64
  %1526 = trunc i64 %81 to i32
  %1527 = mul nsw i32 %1522, %1526
  br label %1654

1528:                                             ; preds = %1395, %1528
  %1529 = phi i64 [ 0, %1395 ], [ %1647, %1528 ]
  %1530 = getelementptr inbounds float, float* %5, i64 %1529
  %1531 = getelementptr inbounds float, float* %1530, i64 8
  %1532 = bitcast float* %1531 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1532, i32 0, i32 1, i32 1)
  %1533 = getelementptr inbounds float, float* %3, i64 %1529
  %1534 = getelementptr inbounds float, float* %1533, i64 8
  %1535 = bitcast float* %1534 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1535, i32 0, i32 1, i32 1)
  %1536 = getelementptr inbounds float, float* %1530, i64 16
  %1537 = bitcast float* %1536 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1537, i32 0, i32 1, i32 1)
  %1538 = getelementptr inbounds float, float* %1533, i64 16
  %1539 = bitcast float* %1538 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1539, i32 0, i32 1, i32 1)
  %1540 = getelementptr inbounds float, float* %1530, i64 24
  %1541 = bitcast float* %1540 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1541, i32 0, i32 1, i32 1)
  %1542 = getelementptr inbounds float, float* %1533, i64 24
  %1543 = bitcast float* %1542 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1543, i32 0, i32 1, i32 1)
  %1544 = getelementptr inbounds float, float* %1530, i64 32
  %1545 = bitcast float* %1544 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1545, i32 0, i32 1, i32 1)
  %1546 = getelementptr inbounds float, float* %1533, i64 32
  %1547 = bitcast float* %1546 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1547, i32 0, i32 1, i32 1)
  %1548 = getelementptr inbounds float, float* %1530, i64 40
  %1549 = bitcast float* %1548 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1549, i32 0, i32 1, i32 1)
  %1550 = getelementptr inbounds float, float* %1533, i64 40
  %1551 = bitcast float* %1550 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1551, i32 0, i32 1, i32 1)
  %1552 = getelementptr inbounds float, float* %1530, i64 48
  %1553 = bitcast float* %1552 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1553, i32 0, i32 1, i32 1)
  %1554 = getelementptr inbounds float, float* %1533, i64 48
  %1555 = bitcast float* %1554 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1555, i32 0, i32 1, i32 1)
  %1556 = getelementptr inbounds float, float* %1530, i64 56
  %1557 = bitcast float* %1556 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1557, i32 0, i32 1, i32 1)
  %1558 = getelementptr inbounds float, float* %1533, i64 56
  %1559 = bitcast float* %1558 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1559, i32 0, i32 1, i32 1)
  %1560 = getelementptr inbounds float, float* %1530, i64 64
  %1561 = bitcast float* %1560 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1561, i32 0, i32 1, i32 1)
  %1562 = getelementptr inbounds float, float* %1533, i64 64
  %1563 = bitcast float* %1562 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1563, i32 0, i32 1, i32 1)
  %1564 = getelementptr inbounds float, float* %1530, i64 72
  %1565 = bitcast float* %1564 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1565, i32 0, i32 1, i32 1)
  %1566 = getelementptr inbounds float, float* %1533, i64 72
  %1567 = bitcast float* %1566 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1567, i32 0, i32 1, i32 1)
  %1568 = bitcast float* %1530 to <8 x float>*
  %1569 = load <8 x float>, <8 x float>* %1568, align 1, !tbaa !12
  %1570 = add nuw nsw i64 %1529, 8
  %1571 = getelementptr inbounds float, float* %5, i64 %1570
  %1572 = bitcast float* %1571 to <8 x float>*
  %1573 = load <8 x float>, <8 x float>* %1572, align 1, !tbaa !12
  %1574 = add nuw nsw i64 %1529, 16
  %1575 = getelementptr inbounds float, float* %5, i64 %1574
  %1576 = bitcast float* %1575 to <8 x float>*
  %1577 = load <8 x float>, <8 x float>* %1576, align 1, !tbaa !12
  %1578 = add nuw nsw i64 %1529, 24
  %1579 = getelementptr inbounds float, float* %5, i64 %1578
  %1580 = bitcast float* %1579 to <8 x float>*
  %1581 = load <8 x float>, <8 x float>* %1580, align 1, !tbaa !12
  %1582 = add nuw nsw i64 %1529, 32
  %1583 = getelementptr inbounds float, float* %5, i64 %1582
  %1584 = bitcast float* %1583 to <8 x float>*
  %1585 = load <8 x float>, <8 x float>* %1584, align 1, !tbaa !12
  %1586 = add nuw nsw i64 %1529, 40
  %1587 = getelementptr inbounds float, float* %5, i64 %1586
  %1588 = bitcast float* %1587 to <8 x float>*
  %1589 = load <8 x float>, <8 x float>* %1588, align 1, !tbaa !12
  %1590 = add nuw nsw i64 %1529, 48
  %1591 = getelementptr inbounds float, float* %5, i64 %1590
  %1592 = bitcast float* %1591 to <8 x float>*
  %1593 = load <8 x float>, <8 x float>* %1592, align 1, !tbaa !12
  %1594 = add nuw nsw i64 %1529, 56
  %1595 = getelementptr inbounds float, float* %5, i64 %1594
  %1596 = bitcast float* %1595 to <8 x float>*
  %1597 = load <8 x float>, <8 x float>* %1596, align 1, !tbaa !12
  %1598 = add nuw nsw i64 %1529, 64
  %1599 = getelementptr inbounds float, float* %5, i64 %1598
  %1600 = bitcast float* %1599 to <8 x float>*
  %1601 = load <8 x float>, <8 x float>* %1600, align 1, !tbaa !12
  %1602 = add nsw i64 %1529, %1398
  %1603 = getelementptr inbounds float, float* %3, i64 %1602
  %1604 = bitcast float* %1603 to <8 x float>*
  %1605 = load <8 x float>, <8 x float>* %1604, align 1, !tbaa !12
  %1606 = add nsw i64 %1602, 8
  %1607 = getelementptr inbounds float, float* %3, i64 %1606
  %1608 = bitcast float* %1607 to <8 x float>*
  %1609 = load <8 x float>, <8 x float>* %1608, align 1, !tbaa !12
  %1610 = add nsw i64 %1602, 16
  %1611 = getelementptr inbounds float, float* %3, i64 %1610
  %1612 = bitcast float* %1611 to <8 x float>*
  %1613 = load <8 x float>, <8 x float>* %1612, align 1, !tbaa !12
  %1614 = add nsw i64 %1602, 24
  %1615 = getelementptr inbounds float, float* %3, i64 %1614
  %1616 = bitcast float* %1615 to <8 x float>*
  %1617 = load <8 x float>, <8 x float>* %1616, align 1, !tbaa !12
  %1618 = add nsw i64 %1602, 32
  %1619 = getelementptr inbounds float, float* %3, i64 %1618
  %1620 = bitcast float* %1619 to <8 x float>*
  %1621 = load <8 x float>, <8 x float>* %1620, align 1, !tbaa !12
  %1622 = add nsw i64 %1602, 40
  %1623 = getelementptr inbounds float, float* %3, i64 %1622
  %1624 = bitcast float* %1623 to <8 x float>*
  %1625 = load <8 x float>, <8 x float>* %1624, align 1, !tbaa !12
  %1626 = add nsw i64 %1602, 48
  %1627 = getelementptr inbounds float, float* %3, i64 %1626
  %1628 = bitcast float* %1627 to <8 x float>*
  %1629 = load <8 x float>, <8 x float>* %1628, align 1, !tbaa !12
  %1630 = add nsw i64 %1602, 56
  %1631 = getelementptr inbounds float, float* %3, i64 %1630
  %1632 = bitcast float* %1631 to <8 x float>*
  %1633 = load <8 x float>, <8 x float>* %1632, align 1, !tbaa !12
  %1634 = add nsw i64 %1602, 64
  %1635 = getelementptr inbounds float, float* %3, i64 %1634
  %1636 = bitcast float* %1635 to <8 x float>*
  %1637 = load <8 x float>, <8 x float>* %1636, align 1, !tbaa !12
  %1638 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1605, <8 x float> %80, <8 x float> %1569) #10
  %1639 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1609, <8 x float> %80, <8 x float> %1573) #10
  %1640 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1613, <8 x float> %80, <8 x float> %1577) #10
  %1641 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1617, <8 x float> %80, <8 x float> %1581) #10
  %1642 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1621, <8 x float> %80, <8 x float> %1585) #10
  %1643 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1625, <8 x float> %80, <8 x float> %1589) #10
  %1644 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1629, <8 x float> %80, <8 x float> %1593) #10
  %1645 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1633, <8 x float> %80, <8 x float> %1597) #10
  %1646 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1637, <8 x float> %80, <8 x float> %1601) #10
  store <8 x float> %1638, <8 x float>* %1568, align 1, !tbaa !12
  store <8 x float> %1639, <8 x float>* %1572, align 1, !tbaa !12
  store <8 x float> %1640, <8 x float>* %1576, align 1, !tbaa !12
  store <8 x float> %1641, <8 x float>* %1580, align 1, !tbaa !12
  store <8 x float> %1642, <8 x float>* %1584, align 1, !tbaa !12
  store <8 x float> %1643, <8 x float>* %1588, align 1, !tbaa !12
  store <8 x float> %1644, <8 x float>* %1592, align 1, !tbaa !12
  store <8 x float> %1645, <8 x float>* %1596, align 1, !tbaa !12
  store <8 x float> %1646, <8 x float>* %1600, align 1, !tbaa !12
  %1647 = add nuw nsw i64 %1529, 72
  %1648 = icmp ult i64 %1647, %1399
  br i1 %1648, label %1528, label %1521

1649:                                             ; preds = %1654, %483, %20, %1002, %1521
  %1650 = add nuw nsw i64 %21, 13
  %1651 = load i32, i32* @_ZL6BLOCKK, align 4, !tbaa !13
  %1652 = sext i32 %1651 to i64
  %1653 = icmp slt i64 %1650, %1652
  br i1 %1653, label %20, label %8

1654:                                             ; preds = %1524, %1654
  %1655 = phi i64 [ 0, %1524 ], [ %1783, %1654 ]
  %1656 = getelementptr inbounds float, float* %5, i64 %1655
  %1657 = getelementptr inbounds float, float* %1656, i64 8
  %1658 = bitcast float* %1657 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1658, i32 0, i32 1, i32 1)
  %1659 = getelementptr inbounds float, float* %3, i64 %1655
  %1660 = getelementptr inbounds float, float* %1659, i64 8
  %1661 = bitcast float* %1660 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1661, i32 0, i32 1, i32 1)
  %1662 = getelementptr inbounds float, float* %1656, i64 16
  %1663 = bitcast float* %1662 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1663, i32 0, i32 1, i32 1)
  %1664 = getelementptr inbounds float, float* %1659, i64 16
  %1665 = bitcast float* %1664 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1665, i32 0, i32 1, i32 1)
  %1666 = getelementptr inbounds float, float* %1656, i64 24
  %1667 = bitcast float* %1666 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1667, i32 0, i32 1, i32 1)
  %1668 = getelementptr inbounds float, float* %1659, i64 24
  %1669 = bitcast float* %1668 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1669, i32 0, i32 1, i32 1)
  %1670 = getelementptr inbounds float, float* %1656, i64 32
  %1671 = bitcast float* %1670 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1671, i32 0, i32 1, i32 1)
  %1672 = getelementptr inbounds float, float* %1659, i64 32
  %1673 = bitcast float* %1672 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1673, i32 0, i32 1, i32 1)
  %1674 = getelementptr inbounds float, float* %1656, i64 40
  %1675 = bitcast float* %1674 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1675, i32 0, i32 1, i32 1)
  %1676 = getelementptr inbounds float, float* %1659, i64 40
  %1677 = bitcast float* %1676 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1677, i32 0, i32 1, i32 1)
  %1678 = getelementptr inbounds float, float* %1656, i64 48
  %1679 = bitcast float* %1678 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1679, i32 0, i32 1, i32 1)
  %1680 = getelementptr inbounds float, float* %1659, i64 48
  %1681 = bitcast float* %1680 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1681, i32 0, i32 1, i32 1)
  %1682 = getelementptr inbounds float, float* %1656, i64 56
  %1683 = bitcast float* %1682 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1683, i32 0, i32 1, i32 1)
  %1684 = getelementptr inbounds float, float* %1659, i64 56
  %1685 = bitcast float* %1684 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1685, i32 0, i32 1, i32 1)
  %1686 = getelementptr inbounds float, float* %1656, i64 64
  %1687 = bitcast float* %1686 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1687, i32 0, i32 1, i32 1)
  %1688 = getelementptr inbounds float, float* %1659, i64 64
  %1689 = bitcast float* %1688 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1689, i32 0, i32 1, i32 1)
  %1690 = getelementptr inbounds float, float* %1656, i64 72
  %1691 = bitcast float* %1690 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1691, i32 0, i32 1, i32 1)
  %1692 = getelementptr inbounds float, float* %1659, i64 72
  %1693 = bitcast float* %1692 to i8*
  tail call void @llvm.prefetch.p0i8(i8* nonnull %1693, i32 0, i32 1, i32 1)
  %1694 = bitcast float* %1656 to <8 x float>*
  %1695 = load <8 x float>, <8 x float>* %1694, align 1, !tbaa !12
  %1696 = add nuw nsw i64 %1655, 8
  %1697 = getelementptr inbounds float, float* %5, i64 %1696
  %1698 = bitcast float* %1697 to <8 x float>*
  %1699 = load <8 x float>, <8 x float>* %1698, align 1, !tbaa !12
  %1700 = add nuw nsw i64 %1655, 16
  %1701 = getelementptr inbounds float, float* %5, i64 %1700
  %1702 = bitcast float* %1701 to <8 x float>*
  %1703 = load <8 x float>, <8 x float>* %1702, align 1, !tbaa !12
  %1704 = add nuw nsw i64 %1655, 24
  %1705 = getelementptr inbounds float, float* %5, i64 %1704
  %1706 = bitcast float* %1705 to <8 x float>*
  %1707 = load <8 x float>, <8 x float>* %1706, align 1, !tbaa !12
  %1708 = add nuw nsw i64 %1655, 32
  %1709 = getelementptr inbounds float, float* %5, i64 %1708
  %1710 = bitcast float* %1709 to <8 x float>*
  %1711 = load <8 x float>, <8 x float>* %1710, align 1, !tbaa !12
  %1712 = add nuw nsw i64 %1655, 40
  %1713 = getelementptr inbounds float, float* %5, i64 %1712
  %1714 = bitcast float* %1713 to <8 x float>*
  %1715 = load <8 x float>, <8 x float>* %1714, align 1, !tbaa !12
  %1716 = add nuw nsw i64 %1655, 48
  %1717 = getelementptr inbounds float, float* %5, i64 %1716
  %1718 = bitcast float* %1717 to <8 x float>*
  %1719 = load <8 x float>, <8 x float>* %1718, align 1, !tbaa !12
  %1720 = add nuw nsw i64 %1655, 56
  %1721 = getelementptr inbounds float, float* %5, i64 %1720
  %1722 = bitcast float* %1721 to <8 x float>*
  %1723 = load <8 x float>, <8 x float>* %1722, align 1, !tbaa !12
  %1724 = add nuw nsw i64 %1655, 64
  %1725 = getelementptr inbounds float, float* %5, i64 %1724
  %1726 = bitcast float* %1725 to <8 x float>*
  %1727 = load <8 x float>, <8 x float>* %1726, align 1, !tbaa !12
  %1728 = trunc i64 %1655 to i32
  %1729 = add nsw i32 %1527, %1728
  %1730 = sext i32 %1729 to i64
  %1731 = getelementptr inbounds float, float* %3, i64 %1730
  %1732 = bitcast float* %1731 to <8 x float>*
  %1733 = load <8 x float>, <8 x float>* %1732, align 1, !tbaa !12
  %1734 = add nsw i32 %1729, 8
  %1735 = sext i32 %1734 to i64
  %1736 = getelementptr inbounds float, float* %3, i64 %1735
  %1737 = bitcast float* %1736 to <8 x float>*
  %1738 = load <8 x float>, <8 x float>* %1737, align 1, !tbaa !12
  %1739 = add nsw i32 %1729, 16
  %1740 = sext i32 %1739 to i64
  %1741 = getelementptr inbounds float, float* %3, i64 %1740
  %1742 = bitcast float* %1741 to <8 x float>*
  %1743 = load <8 x float>, <8 x float>* %1742, align 1, !tbaa !12
  %1744 = add nsw i32 %1729, 24
  %1745 = sext i32 %1744 to i64
  %1746 = getelementptr inbounds float, float* %3, i64 %1745
  %1747 = bitcast float* %1746 to <8 x float>*
  %1748 = load <8 x float>, <8 x float>* %1747, align 1, !tbaa !12
  %1749 = add nsw i32 %1729, 32
  %1750 = sext i32 %1749 to i64
  %1751 = getelementptr inbounds float, float* %3, i64 %1750
  %1752 = bitcast float* %1751 to <8 x float>*
  %1753 = load <8 x float>, <8 x float>* %1752, align 1, !tbaa !12
  %1754 = add nsw i32 %1729, 40
  %1755 = sext i32 %1754 to i64
  %1756 = getelementptr inbounds float, float* %3, i64 %1755
  %1757 = bitcast float* %1756 to <8 x float>*
  %1758 = load <8 x float>, <8 x float>* %1757, align 1, !tbaa !12
  %1759 = add nsw i32 %1729, 48
  %1760 = sext i32 %1759 to i64
  %1761 = getelementptr inbounds float, float* %3, i64 %1760
  %1762 = bitcast float* %1761 to <8 x float>*
  %1763 = load <8 x float>, <8 x float>* %1762, align 1, !tbaa !12
  %1764 = add nsw i32 %1729, 56
  %1765 = sext i32 %1764 to i64
  %1766 = getelementptr inbounds float, float* %3, i64 %1765
  %1767 = bitcast float* %1766 to <8 x float>*
  %1768 = load <8 x float>, <8 x float>* %1767, align 1, !tbaa !12
  %1769 = add nsw i32 %1729, 64
  %1770 = sext i32 %1769 to i64
  %1771 = getelementptr inbounds float, float* %3, i64 %1770
  %1772 = bitcast float* %1771 to <8 x float>*
  %1773 = load <8 x float>, <8 x float>* %1772, align 1, !tbaa !12
  %1774 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1733, <8 x float> %85, <8 x float> %1695) #10
  %1775 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1738, <8 x float> %85, <8 x float> %1699) #10
  %1776 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1743, <8 x float> %85, <8 x float> %1703) #10
  %1777 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1748, <8 x float> %85, <8 x float> %1707) #10
  %1778 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1753, <8 x float> %85, <8 x float> %1711) #10
  %1779 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1758, <8 x float> %85, <8 x float> %1715) #10
  %1780 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1763, <8 x float> %85, <8 x float> %1719) #10
  %1781 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1768, <8 x float> %85, <8 x float> %1723) #10
  %1782 = tail call <8 x float> @llvm.fma.v8f32(<8 x float> %1773, <8 x float> %85, <8 x float> %1727) #10
  store <8 x float> %1774, <8 x float>* %1694, align 1, !tbaa !12
  store <8 x float> %1775, <8 x float>* %1698, align 1, !tbaa !12
  store <8 x float> %1776, <8 x float>* %1702, align 1, !tbaa !12
  store <8 x float> %1777, <8 x float>* %1706, align 1, !tbaa !12
  store <8 x float> %1778, <8 x float>* %1710, align 1, !tbaa !12
  store <8 x float> %1779, <8 x float>* %1714, align 1, !tbaa !12
  store <8 x float> %1780, <8 x float>* %1718, align 1, !tbaa !12
  store <8 x float> %1781, <8 x float>* %1722, align 1, !tbaa !12
  store <8 x float> %1782, <8 x float>* %1726, align 1, !tbaa !12
  %1783 = add nuw nsw i64 %1655, 72
  %1784 = icmp ult i64 %1783, %1525
  br i1 %1784, label %1654, label %1649
}

; Function Attrs: nounwind
declare i64 @llvm.x86.rdtsc() #10

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare void @llvm.prefetch.p0i8(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local zeroext i1 @_Z6enablev() local_unnamed_addr #12 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable
define dso_local i32 @_Z9n_reg_maxv() local_unnamed_addr #12 {
  ret i32 247
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #14

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: argmemonly nofree nounwind readonly
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #15

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #14

; Function Attrs: nounwind readnone speculatable willreturn
declare <8 x float> @llvm.fma.v8f32(<8 x float>, <8 x float>, <8 x float>) #16

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_matvec_ui9_uk13.cpp() #17 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to %union.anon**), align 8, !tbaa !2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #10
  store i64 3, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E, i64 0, i32 2) to i8*), i64 3), align 1, !tbaa !12
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL15InstructionTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  tail call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* nonnull sret @_ZN4mippL19InstructionFullTypeB5cxx11E, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN4mippL15InstructionTypeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL19InstructionFullTypeB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to %union.anon**), align 8, !tbaa !2
  store i8 50, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !12
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 1), align 8, !tbaa !10
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !12
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN4mippL18InstructionVersionB5cxx11E to i8*), i8* nonnull @__dso_handle) #10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { inaccessiblemem_or_argmemonly nounwind willreturn }
attributes #12 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable willreturn }
attributes #17 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="znver1" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+clzero,+cmov,+cx16,+cx8,+f16c,+fma,+fsgsbase,+fxsr,+lzcnt,+mmx,+movbe,+mwaitx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sha,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+sse4a,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-cldemote,-clwb,-enqcmd,-fma4,-gfni,-invpcid,-lwp,-movdir64b,-movdiri,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sgx,-shstk,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !4, i64 0}
!3 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !4, i64 0}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !4, i64 0}
!8 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !3, i64 0, !9, i64 8, !5, i64 16}
!9 = !{!"long", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!5, !5, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"int", !5, i64 0}
!15 = !{!4, !4, i64 0}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.vectorize.width", i32 1}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !5, i64 0}
!20 = distinct !{!20, !17}
!21 = distinct !{!21, !17}
